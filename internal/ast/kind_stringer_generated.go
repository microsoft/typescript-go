// Code generated by "stringer -type=Kind -output=kind_stringer_generated.go"; DO NOT EDIT.

package ast

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[KindUnknown-0]
	_ = x[KindEndOfFile-1]
	_ = x[KindSingleLineCommentTrivia-2]
	_ = x[KindMultiLineCommentTrivia-3]
	_ = x[KindNewLineTrivia-4]
	_ = x[KindWhitespaceTrivia-5]
	_ = x[KindConflictMarkerTrivia-6]
	_ = x[KindNonTextFileMarkerTrivia-7]
	_ = x[KindNumericLiteral-8]
	_ = x[KindBigIntLiteral-9]
	_ = x[KindStringLiteral-10]
	_ = x[KindJsxText-11]
	_ = x[KindJsxTextAllWhiteSpaces-12]
	_ = x[KindRegularExpressionLiteral-13]
	_ = x[KindNoSubstitutionTemplateLiteral-14]
	_ = x[KindTemplateHead-15]
	_ = x[KindTemplateMiddle-16]
	_ = x[KindTemplateTail-17]
	_ = x[KindOpenBraceToken-18]
	_ = x[KindCloseBraceToken-19]
	_ = x[KindOpenParenToken-20]
	_ = x[KindCloseParenToken-21]
	_ = x[KindOpenBracketToken-22]
	_ = x[KindCloseBracketToken-23]
	_ = x[KindDotToken-24]
	_ = x[KindDotDotDotToken-25]
	_ = x[KindSemicolonToken-26]
	_ = x[KindCommaToken-27]
	_ = x[KindQuestionDotToken-28]
	_ = x[KindLessThanToken-29]
	_ = x[KindLessThanSlashToken-30]
	_ = x[KindGreaterThanToken-31]
	_ = x[KindLessThanEqualsToken-32]
	_ = x[KindGreaterThanEqualsToken-33]
	_ = x[KindEqualsEqualsToken-34]
	_ = x[KindExclamationEqualsToken-35]
	_ = x[KindEqualsEqualsEqualsToken-36]
	_ = x[KindExclamationEqualsEqualsToken-37]
	_ = x[KindEqualsGreaterThanToken-38]
	_ = x[KindPlusToken-39]
	_ = x[KindMinusToken-40]
	_ = x[KindAsteriskToken-41]
	_ = x[KindAsteriskAsteriskToken-42]
	_ = x[KindSlashToken-43]
	_ = x[KindPercentToken-44]
	_ = x[KindPlusPlusToken-45]
	_ = x[KindMinusMinusToken-46]
	_ = x[KindLessThanLessThanToken-47]
	_ = x[KindGreaterThanGreaterThanToken-48]
	_ = x[KindGreaterThanGreaterThanGreaterThanToken-49]
	_ = x[KindAmpersandToken-50]
	_ = x[KindBarToken-51]
	_ = x[KindCaretToken-52]
	_ = x[KindExclamationToken-53]
	_ = x[KindTildeToken-54]
	_ = x[KindAmpersandAmpersandToken-55]
	_ = x[KindBarBarToken-56]
	_ = x[KindQuestionToken-57]
	_ = x[KindColonToken-58]
	_ = x[KindAtToken-59]
	_ = x[KindQuestionQuestionToken-60]
	_ = x[KindBacktickToken-61]
	_ = x[KindHashToken-62]
	_ = x[KindEqualsToken-63]
	_ = x[KindPlusEqualsToken-64]
	_ = x[KindMinusEqualsToken-65]
	_ = x[KindAsteriskEqualsToken-66]
	_ = x[KindAsteriskAsteriskEqualsToken-67]
	_ = x[KindSlashEqualsToken-68]
	_ = x[KindPercentEqualsToken-69]
	_ = x[KindLessThanLessThanEqualsToken-70]
	_ = x[KindGreaterThanGreaterThanEqualsToken-71]
	_ = x[KindGreaterThanGreaterThanGreaterThanEqualsToken-72]
	_ = x[KindAmpersandEqualsToken-73]
	_ = x[KindBarEqualsToken-74]
	_ = x[KindBarBarEqualsToken-75]
	_ = x[KindAmpersandAmpersandEqualsToken-76]
	_ = x[KindQuestionQuestionEqualsToken-77]
	_ = x[KindCaretEqualsToken-78]
	_ = x[KindIdentifier-79]
	_ = x[KindPrivateIdentifier-80]
	_ = x[KindJSDocCommentTextToken-81]
	_ = x[KindBreakKeyword-82]
	_ = x[KindCaseKeyword-83]
	_ = x[KindCatchKeyword-84]
	_ = x[KindClassKeyword-85]
	_ = x[KindConstKeyword-86]
	_ = x[KindContinueKeyword-87]
	_ = x[KindDebuggerKeyword-88]
	_ = x[KindDefaultKeyword-89]
	_ = x[KindDeleteKeyword-90]
	_ = x[KindDoKeyword-91]
	_ = x[KindElseKeyword-92]
	_ = x[KindEnumKeyword-93]
	_ = x[KindExportKeyword-94]
	_ = x[KindExtendsKeyword-95]
	_ = x[KindFalseKeyword-96]
	_ = x[KindFinallyKeyword-97]
	_ = x[KindForKeyword-98]
	_ = x[KindFunctionKeyword-99]
	_ = x[KindIfKeyword-100]
	_ = x[KindImportKeyword-101]
	_ = x[KindInKeyword-102]
	_ = x[KindInstanceOfKeyword-103]
	_ = x[KindNewKeyword-104]
	_ = x[KindNullKeyword-105]
	_ = x[KindReturnKeyword-106]
	_ = x[KindSuperKeyword-107]
	_ = x[KindSwitchKeyword-108]
	_ = x[KindThisKeyword-109]
	_ = x[KindThrowKeyword-110]
	_ = x[KindTrueKeyword-111]
	_ = x[KindTryKeyword-112]
	_ = x[KindTypeOfKeyword-113]
	_ = x[KindVarKeyword-114]
	_ = x[KindVoidKeyword-115]
	_ = x[KindWhileKeyword-116]
	_ = x[KindWithKeyword-117]
	_ = x[KindImplementsKeyword-118]
	_ = x[KindInterfaceKeyword-119]
	_ = x[KindLetKeyword-120]
	_ = x[KindPackageKeyword-121]
	_ = x[KindPrivateKeyword-122]
	_ = x[KindProtectedKeyword-123]
	_ = x[KindPublicKeyword-124]
	_ = x[KindStaticKeyword-125]
	_ = x[KindYieldKeyword-126]
	_ = x[KindAbstractKeyword-127]
	_ = x[KindAccessorKeyword-128]
	_ = x[KindAsKeyword-129]
	_ = x[KindAssertsKeyword-130]
	_ = x[KindAssertKeyword-131]
	_ = x[KindAnyKeyword-132]
	_ = x[KindAsyncKeyword-133]
	_ = x[KindAwaitKeyword-134]
	_ = x[KindBooleanKeyword-135]
	_ = x[KindConstructorKeyword-136]
	_ = x[KindDeclareKeyword-137]
	_ = x[KindGetKeyword-138]
	_ = x[KindImmediateKeyword-139]
	_ = x[KindInferKeyword-140]
	_ = x[KindIntrinsicKeyword-141]
	_ = x[KindIsKeyword-142]
	_ = x[KindKeyOfKeyword-143]
	_ = x[KindModuleKeyword-144]
	_ = x[KindNamespaceKeyword-145]
	_ = x[KindNeverKeyword-146]
	_ = x[KindOutKeyword-147]
	_ = x[KindReadonlyKeyword-148]
	_ = x[KindRequireKeyword-149]
	_ = x[KindNumberKeyword-150]
	_ = x[KindObjectKeyword-151]
	_ = x[KindSatisfiesKeyword-152]
	_ = x[KindSetKeyword-153]
	_ = x[KindStringKeyword-154]
	_ = x[KindSymbolKeyword-155]
	_ = x[KindTypeKeyword-156]
	_ = x[KindUndefinedKeyword-157]
	_ = x[KindUniqueKeyword-158]
	_ = x[KindUnknownKeyword-159]
	_ = x[KindUsingKeyword-160]
	_ = x[KindFromKeyword-161]
	_ = x[KindGlobalKeyword-162]
	_ = x[KindBigIntKeyword-163]
	_ = x[KindOverrideKeyword-164]
	_ = x[KindOfKeyword-165]
	_ = x[KindDeferKeyword-166]
	_ = x[KindQualifiedName-167]
	_ = x[KindComputedPropertyName-168]
	_ = x[KindTypeParameter-169]
	_ = x[KindParameter-170]
	_ = x[KindDecorator-171]
	_ = x[KindPropertySignature-172]
	_ = x[KindPropertyDeclaration-173]
	_ = x[KindMethodSignature-174]
	_ = x[KindMethodDeclaration-175]
	_ = x[KindClassStaticBlockDeclaration-176]
	_ = x[KindConstructor-177]
	_ = x[KindGetAccessor-178]
	_ = x[KindSetAccessor-179]
	_ = x[KindCallSignature-180]
	_ = x[KindConstructSignature-181]
	_ = x[KindIndexSignature-182]
	_ = x[KindTypePredicate-183]
	_ = x[KindTypeReference-184]
	_ = x[KindFunctionType-185]
	_ = x[KindConstructorType-186]
	_ = x[KindTypeQuery-187]
	_ = x[KindTypeLiteral-188]
	_ = x[KindArrayType-189]
	_ = x[KindTupleType-190]
	_ = x[KindOptionalType-191]
	_ = x[KindRestType-192]
	_ = x[KindUnionType-193]
	_ = x[KindIntersectionType-194]
	_ = x[KindConditionalType-195]
	_ = x[KindInferType-196]
	_ = x[KindParenthesizedType-197]
	_ = x[KindThisType-198]
	_ = x[KindTypeOperator-199]
	_ = x[KindIndexedAccessType-200]
	_ = x[KindMappedType-201]
	_ = x[KindLiteralType-202]
	_ = x[KindNamedTupleMember-203]
	_ = x[KindTemplateLiteralType-204]
	_ = x[KindTemplateLiteralTypeSpan-205]
	_ = x[KindImportType-206]
	_ = x[KindObjectBindingPattern-207]
	_ = x[KindArrayBindingPattern-208]
	_ = x[KindBindingElement-209]
	_ = x[KindArrayLiteralExpression-210]
	_ = x[KindObjectLiteralExpression-211]
	_ = x[KindPropertyAccessExpression-212]
	_ = x[KindElementAccessExpression-213]
	_ = x[KindCallExpression-214]
	_ = x[KindNewExpression-215]
	_ = x[KindTaggedTemplateExpression-216]
	_ = x[KindTypeAssertionExpression-217]
	_ = x[KindParenthesizedExpression-218]
	_ = x[KindFunctionExpression-219]
	_ = x[KindArrowFunction-220]
	_ = x[KindDeleteExpression-221]
	_ = x[KindTypeOfExpression-222]
	_ = x[KindVoidExpression-223]
	_ = x[KindAwaitExpression-224]
	_ = x[KindPrefixUnaryExpression-225]
	_ = x[KindPostfixUnaryExpression-226]
	_ = x[KindBinaryExpression-227]
	_ = x[KindConditionalExpression-228]
	_ = x[KindTemplateExpression-229]
	_ = x[KindYieldExpression-230]
	_ = x[KindSpreadElement-231]
	_ = x[KindClassExpression-232]
	_ = x[KindOmittedExpression-233]
	_ = x[KindExpressionWithTypeArguments-234]
	_ = x[KindAsExpression-235]
	_ = x[KindNonNullExpression-236]
	_ = x[KindMetaProperty-237]
	_ = x[KindSyntheticExpression-238]
	_ = x[KindSatisfiesExpression-239]
	_ = x[KindTemplateSpan-240]
	_ = x[KindSemicolonClassElement-241]
	_ = x[KindBlock-242]
	_ = x[KindEmptyStatement-243]
	_ = x[KindVariableStatement-244]
	_ = x[KindExpressionStatement-245]
	_ = x[KindIfStatement-246]
	_ = x[KindDoStatement-247]
	_ = x[KindWhileStatement-248]
	_ = x[KindForStatement-249]
	_ = x[KindForInStatement-250]
	_ = x[KindForOfStatement-251]
	_ = x[KindContinueStatement-252]
	_ = x[KindBreakStatement-253]
	_ = x[KindReturnStatement-254]
	_ = x[KindWithStatement-255]
	_ = x[KindSwitchStatement-256]
	_ = x[KindLabeledStatement-257]
	_ = x[KindThrowStatement-258]
	_ = x[KindTryStatement-259]
	_ = x[KindDebuggerStatement-260]
	_ = x[KindVariableDeclaration-261]
	_ = x[KindVariableDeclarationList-262]
	_ = x[KindFunctionDeclaration-263]
	_ = x[KindClassDeclaration-264]
	_ = x[KindInterfaceDeclaration-265]
	_ = x[KindTypeAliasDeclaration-266]
	_ = x[KindEnumDeclaration-267]
	_ = x[KindModuleDeclaration-268]
	_ = x[KindModuleBlock-269]
	_ = x[KindCaseBlock-270]
	_ = x[KindNamespaceExportDeclaration-271]
	_ = x[KindImportEqualsDeclaration-272]
	_ = x[KindImportDeclaration-273]
	_ = x[KindImportClause-274]
	_ = x[KindNamespaceImport-275]
	_ = x[KindNamedImports-276]
	_ = x[KindImportSpecifier-277]
	_ = x[KindExportAssignment-278]
	_ = x[KindExportDeclaration-279]
	_ = x[KindNamedExports-280]
	_ = x[KindNamespaceExport-281]
	_ = x[KindExportSpecifier-282]
	_ = x[KindMissingDeclaration-283]
	_ = x[KindExternalModuleReference-284]
	_ = x[KindJsxElement-285]
	_ = x[KindJsxSelfClosingElement-286]
	_ = x[KindJsxOpeningElement-287]
	_ = x[KindJsxClosingElement-288]
	_ = x[KindJsxFragment-289]
	_ = x[KindJsxOpeningFragment-290]
	_ = x[KindJsxClosingFragment-291]
	_ = x[KindJsxAttribute-292]
	_ = x[KindJsxAttributes-293]
	_ = x[KindJsxSpreadAttribute-294]
	_ = x[KindJsxExpression-295]
	_ = x[KindJsxNamespacedName-296]
	_ = x[KindCaseClause-297]
	_ = x[KindDefaultClause-298]
	_ = x[KindHeritageClause-299]
	_ = x[KindCatchClause-300]
	_ = x[KindImportAttributes-301]
	_ = x[KindImportAttribute-302]
	_ = x[KindPropertyAssignment-303]
	_ = x[KindShorthandPropertyAssignment-304]
	_ = x[KindSpreadAssignment-305]
	_ = x[KindEnumMember-306]
	_ = x[KindSourceFile-307]
	_ = x[KindBundle-308]
	_ = x[KindJSDocTypeExpression-309]
	_ = x[KindJSDocNameReference-310]
	_ = x[KindJSDocMemberName-311]
	_ = x[KindJSDocAllType-312]
	_ = x[KindJSDocNullableType-313]
	_ = x[KindJSDocNonNullableType-314]
	_ = x[KindJSDocOptionalType-315]
	_ = x[KindJSDocVariadicType-316]
	_ = x[KindJSDoc-317]
	_ = x[KindJSDocText-318]
	_ = x[KindJSDocTypeLiteral-319]
	_ = x[KindJSDocSignature-320]
	_ = x[KindJSDocLink-321]
	_ = x[KindJSDocLinkCode-322]
	_ = x[KindJSDocLinkPlain-323]
	_ = x[KindJSDocTag-324]
	_ = x[KindJSDocAugmentsTag-325]
	_ = x[KindJSDocImplementsTag-326]
	_ = x[KindJSDocDeprecatedTag-327]
	_ = x[KindJSDocPublicTag-328]
	_ = x[KindJSDocPrivateTag-329]
	_ = x[KindJSDocProtectedTag-330]
	_ = x[KindJSDocReadonlyTag-331]
	_ = x[KindJSDocOverrideTag-332]
	_ = x[KindJSDocCallbackTag-333]
	_ = x[KindJSDocOverloadTag-334]
	_ = x[KindJSDocParameterTag-335]
	_ = x[KindJSDocReturnTag-336]
	_ = x[KindJSDocThisTag-337]
	_ = x[KindJSDocTypeTag-338]
	_ = x[KindJSDocTemplateTag-339]
	_ = x[KindJSDocTypedefTag-340]
	_ = x[KindJSDocSeeTag-341]
	_ = x[KindJSDocPropertyTag-342]
	_ = x[KindJSDocSatisfiesTag-343]
	_ = x[KindJSDocImportTag-344]
	_ = x[KindSyntaxList-345]
	_ = x[KindJSTypeAliasDeclaration-346]
	_ = x[KindJSExportAssignment-347]
	_ = x[KindCommonJSExport-348]
	_ = x[KindJSImportDeclaration-349]
	_ = x[KindNotEmittedStatement-350]
	_ = x[KindPartiallyEmittedExpression-351]
	_ = x[KindCommaListExpression-352]
	_ = x[KindSyntheticReferenceExpression-353]
	_ = x[KindNotEmittedTypeElement-354]
	_ = x[KindCount-355]
}

const _Kind_name = "KindUnknownKindEndOfFileKindSingleLineCommentTriviaKindMultiLineCommentTriviaKindNewLineTriviaKindWhitespaceTriviaKindConflictMarkerTriviaKindNonTextFileMarkerTriviaKindNumericLiteralKindBigIntLiteralKindStringLiteralKindJsxTextKindJsxTextAllWhiteSpacesKindRegularExpressionLiteralKindNoSubstitutionTemplateLiteralKindTemplateHeadKindTemplateMiddleKindTemplateTailKindOpenBraceTokenKindCloseBraceTokenKindOpenParenTokenKindCloseParenTokenKindOpenBracketTokenKindCloseBracketTokenKindDotTokenKindDotDotDotTokenKindSemicolonTokenKindCommaTokenKindQuestionDotTokenKindLessThanTokenKindLessThanSlashTokenKindGreaterThanTokenKindLessThanEqualsTokenKindGreaterThanEqualsTokenKindEqualsEqualsTokenKindExclamationEqualsTokenKindEqualsEqualsEqualsTokenKindExclamationEqualsEqualsTokenKindEqualsGreaterThanTokenKindPlusTokenKindMinusTokenKindAsteriskTokenKindAsteriskAsteriskTokenKindSlashTokenKindPercentTokenKindPlusPlusTokenKindMinusMinusTokenKindLessThanLessThanTokenKindGreaterThanGreaterThanTokenKindGreaterThanGreaterThanGreaterThanTokenKindAmpersandTokenKindBarTokenKindCaretTokenKindExclamationTokenKindTildeTokenKindAmpersandAmpersandTokenKindBarBarTokenKindQuestionTokenKindColonTokenKindAtTokenKindQuestionQuestionTokenKindBacktickTokenKindHashTokenKindEqualsTokenKindPlusEqualsTokenKindMinusEqualsTokenKindAsteriskEqualsTokenKindAsteriskAsteriskEqualsTokenKindSlashEqualsTokenKindPercentEqualsTokenKindLessThanLessThanEqualsTokenKindGreaterThanGreaterThanEqualsTokenKindGreaterThanGreaterThanGreaterThanEqualsTokenKindAmpersandEqualsTokenKindBarEqualsTokenKindBarBarEqualsTokenKindAmpersandAmpersandEqualsTokenKindQuestionQuestionEqualsTokenKindCaretEqualsTokenKindIdentifierKindPrivateIdentifierKindJSDocCommentTextTokenKindBreakKeywordKindCaseKeywordKindCatchKeywordKindClassKeywordKindConstKeywordKindContinueKeywordKindDebuggerKeywordKindDefaultKeywordKindDeleteKeywordKindDoKeywordKindElseKeywordKindEnumKeywordKindExportKeywordKindExtendsKeywordKindFalseKeywordKindFinallyKeywordKindForKeywordKindFunctionKeywordKindIfKeywordKindImportKeywordKindInKeywordKindInstanceOfKeywordKindNewKeywordKindNullKeywordKindReturnKeywordKindSuperKeywordKindSwitchKeywordKindThisKeywordKindThrowKeywordKindTrueKeywordKindTryKeywordKindTypeOfKeywordKindVarKeywordKindVoidKeywordKindWhileKeywordKindWithKeywordKindImplementsKeywordKindInterfaceKeywordKindLetKeywordKindPackageKeywordKindPrivateKeywordKindProtectedKeywordKindPublicKeywordKindStaticKeywordKindYieldKeywordKindAbstractKeywordKindAccessorKeywordKindAsKeywordKindAssertsKeywordKindAssertKeywordKindAnyKeywordKindAsyncKeywordKindAwaitKeywordKindBooleanKeywordKindConstructorKeywordKindDeclareKeywordKindGetKeywordKindImmediateKeywordKindInferKeywordKindIntrinsicKeywordKindIsKeywordKindKeyOfKeywordKindModuleKeywordKindNamespaceKeywordKindNeverKeywordKindOutKeywordKindReadonlyKeywordKindRequireKeywordKindNumberKeywordKindObjectKeywordKindSatisfiesKeywordKindSetKeywordKindStringKeywordKindSymbolKeywordKindTypeKeywordKindUndefinedKeywordKindUniqueKeywordKindUnknownKeywordKindUsingKeywordKindFromKeywordKindGlobalKeywordKindBigIntKeywordKindOverrideKeywordKindOfKeywordKindDeferKeywordKindQualifiedNameKindComputedPropertyNameKindTypeParameterKindParameterKindDecoratorKindPropertySignatureKindPropertyDeclarationKindMethodSignatureKindMethodDeclarationKindClassStaticBlockDeclarationKindConstructorKindGetAccessorKindSetAccessorKindCallSignatureKindConstructSignatureKindIndexSignatureKindTypePredicateKindTypeReferenceKindFunctionTypeKindConstructorTypeKindTypeQueryKindTypeLiteralKindArrayTypeKindTupleTypeKindOptionalTypeKindRestTypeKindUnionTypeKindIntersectionTypeKindConditionalTypeKindInferTypeKindParenthesizedTypeKindThisTypeKindTypeOperatorKindIndexedAccessTypeKindMappedTypeKindLiteralTypeKindNamedTupleMemberKindTemplateLiteralTypeKindTemplateLiteralTypeSpanKindImportTypeKindObjectBindingPatternKindArrayBindingPatternKindBindingElementKindArrayLiteralExpressionKindObjectLiteralExpressionKindPropertyAccessExpressionKindElementAccessExpressionKindCallExpressionKindNewExpressionKindTaggedTemplateExpressionKindTypeAssertionExpressionKindParenthesizedExpressionKindFunctionExpressionKindArrowFunctionKindDeleteExpressionKindTypeOfExpressionKindVoidExpressionKindAwaitExpressionKindPrefixUnaryExpressionKindPostfixUnaryExpressionKindBinaryExpressionKindConditionalExpressionKindTemplateExpressionKindYieldExpressionKindSpreadElementKindClassExpressionKindOmittedExpressionKindExpressionWithTypeArgumentsKindAsExpressionKindNonNullExpressionKindMetaPropertyKindSyntheticExpressionKindSatisfiesExpressionKindTemplateSpanKindSemicolonClassElementKindBlockKindEmptyStatementKindVariableStatementKindExpressionStatementKindIfStatementKindDoStatementKindWhileStatementKindForStatementKindForInStatementKindForOfStatementKindContinueStatementKindBreakStatementKindReturnStatementKindWithStatementKindSwitchStatementKindLabeledStatementKindThrowStatementKindTryStatementKindDebuggerStatementKindVariableDeclarationKindVariableDeclarationListKindFunctionDeclarationKindClassDeclarationKindInterfaceDeclarationKindTypeAliasDeclarationKindEnumDeclarationKindModuleDeclarationKindModuleBlockKindCaseBlockKindNamespaceExportDeclarationKindImportEqualsDeclarationKindImportDeclarationKindImportClauseKindNamespaceImportKindNamedImportsKindImportSpecifierKindExportAssignmentKindExportDeclarationKindNamedExportsKindNamespaceExportKindExportSpecifierKindMissingDeclarationKindExternalModuleReferenceKindJsxElementKindJsxSelfClosingElementKindJsxOpeningElementKindJsxClosingElementKindJsxFragmentKindJsxOpeningFragmentKindJsxClosingFragmentKindJsxAttributeKindJsxAttributesKindJsxSpreadAttributeKindJsxExpressionKindJsxNamespacedNameKindCaseClauseKindDefaultClauseKindHeritageClauseKindCatchClauseKindImportAttributesKindImportAttributeKindPropertyAssignmentKindShorthandPropertyAssignmentKindSpreadAssignmentKindEnumMemberKindSourceFileKindBundleKindJSDocTypeExpressionKindJSDocNameReferenceKindJSDocMemberNameKindJSDocAllTypeKindJSDocNullableTypeKindJSDocNonNullableTypeKindJSDocOptionalTypeKindJSDocVariadicTypeKindJSDocKindJSDocTextKindJSDocTypeLiteralKindJSDocSignatureKindJSDocLinkKindJSDocLinkCodeKindJSDocLinkPlainKindJSDocTagKindJSDocAugmentsTagKindJSDocImplementsTagKindJSDocDeprecatedTagKindJSDocPublicTagKindJSDocPrivateTagKindJSDocProtectedTagKindJSDocReadonlyTagKindJSDocOverrideTagKindJSDocCallbackTagKindJSDocOverloadTagKindJSDocParameterTagKindJSDocReturnTagKindJSDocThisTagKindJSDocTypeTagKindJSDocTemplateTagKindJSDocTypedefTagKindJSDocSeeTagKindJSDocPropertyTagKindJSDocSatisfiesTagKindJSDocImportTagKindSyntaxListKindJSTypeAliasDeclarationKindJSExportAssignmentKindCommonJSExportKindJSImportDeclarationKindNotEmittedStatementKindPartiallyEmittedExpressionKindCommaListExpressionKindSyntheticReferenceExpressionKindNotEmittedTypeElementKindCount"

var _Kind_index = [...]uint16{0, 11, 24, 51, 77, 94, 114, 138, 165, 183, 200, 217, 228, 253, 281, 314, 330, 348, 364, 382, 401, 419, 438, 458, 479, 491, 509, 527, 541, 561, 578, 600, 620, 643, 669, 690, 716, 743, 775, 801, 814, 828, 845, 870, 884, 900, 917, 936, 961, 992, 1034, 1052, 1064, 1078, 1098, 1112, 1139, 1154, 1171, 1185, 1196, 1221, 1238, 1251, 1266, 1285, 1305, 1328, 1359, 1379, 1401, 1432, 1469, 1517, 1541, 1559, 1580, 1613, 1644, 1664, 1678, 1699, 1724, 1740, 1755, 1771, 1787, 1803, 1822, 1841, 1859, 1876, 1889, 1904, 1919, 1936, 1954, 1970, 1988, 2002, 2021, 2034, 2051, 2064, 2085, 2099, 2114, 2131, 2147, 2164, 2179, 2195, 2210, 2224, 2241, 2255, 2270, 2286, 2301, 2322, 2342, 2356, 2374, 2392, 2412, 2429, 2446, 2462, 2481, 2500, 2513, 2531, 2548, 2562, 2578, 2594, 2612, 2634, 2652, 2666, 2686, 2702, 2722, 2735, 2751, 2768, 2788, 2804, 2818, 2837, 2855, 2872, 2889, 2909, 2923, 2940, 2957, 2972, 2992, 3009, 3027, 3043, 3058, 3075, 3092, 3111, 3124, 3140, 3157, 3181, 3198, 3211, 3224, 3245, 3268, 3287, 3308, 3339, 3354, 3369, 3384, 3401, 3423, 3441, 3458, 3475, 3491, 3510, 3523, 3538, 3551, 3564, 3580, 3592, 3605, 3625, 3644, 3657, 3678, 3690, 3706, 3727, 3741, 3756, 3776, 3799, 3826, 3840, 3864, 3887, 3905, 3931, 3958, 3986, 4013, 4031, 4048, 4076, 4103, 4130, 4152, 4169, 4189, 4209, 4227, 4246, 4271, 4297, 4317, 4342, 4364, 4383, 4400, 4419, 4440, 4471, 4487, 4508, 4524, 4547, 4570, 4586, 4611, 4620, 4638, 4659, 4682, 4697, 4712, 4730, 4746, 4764, 4782, 4803, 4821, 4840, 4857, 4876, 4896, 4914, 4930, 4951, 4974, 5001, 5024, 5044, 5068, 5092, 5111, 5132, 5147, 5160, 5190, 5217, 5238, 5254, 5273, 5289, 5308, 5328, 5349, 5365, 5384, 5403, 5425, 5452, 5466, 5491, 5512, 5533, 5548, 5570, 5592, 5608, 5625, 5647, 5664, 5685, 5699, 5716, 5734, 5749, 5769, 5788, 5810, 5841, 5861, 5875, 5889, 5899, 5922, 5944, 5963, 5979, 6000, 6024, 6045, 6066, 6075, 6088, 6108, 6126, 6139, 6156, 6174, 6186, 6206, 6228, 6250, 6268, 6287, 6308, 6328, 6348, 6368, 6388, 6409, 6427, 6443, 6459, 6479, 6498, 6513, 6533, 6554, 6572, 6586, 6612, 6634, 6652, 6675, 6698, 6728, 6751, 6783, 6808, 6817}

func (i Kind) String() string {
	if i < 0 || i >= Kind(len(_Kind_index)-1) {
		return "Kind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Kind_name[_Kind_index[i]:_Kind_index[i+1]]
}
