// Code generated by "stringer -type=Kind -output=kind_stringer_generated.go"; DO NOT EDIT.

package ast

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[KindUnknown-0]
	_ = x[KindEndOfFile-1]
	_ = x[KindConflictMarkerTrivia-2]
	_ = x[KindNonTextFileMarkerTrivia-3]
	_ = x[KindNumericLiteral-4]
	_ = x[KindBigIntLiteral-5]
	_ = x[KindStringLiteral-6]
	_ = x[KindJsxText-7]
	_ = x[KindJsxTextAllWhiteSpaces-8]
	_ = x[KindRegularExpressionLiteral-9]
	_ = x[KindNoSubstitutionTemplateLiteral-10]
	_ = x[KindTemplateHead-11]
	_ = x[KindTemplateMiddle-12]
	_ = x[KindTemplateTail-13]
	_ = x[KindOpenBraceToken-14]
	_ = x[KindCloseBraceToken-15]
	_ = x[KindOpenParenToken-16]
	_ = x[KindCloseParenToken-17]
	_ = x[KindOpenBracketToken-18]
	_ = x[KindCloseBracketToken-19]
	_ = x[KindDotToken-20]
	_ = x[KindDotDotDotToken-21]
	_ = x[KindSemicolonToken-22]
	_ = x[KindCommaToken-23]
	_ = x[KindQuestionDotToken-24]
	_ = x[KindLessThanToken-25]
	_ = x[KindLessThanSlashToken-26]
	_ = x[KindGreaterThanToken-27]
	_ = x[KindLessThanEqualsToken-28]
	_ = x[KindGreaterThanEqualsToken-29]
	_ = x[KindEqualsEqualsToken-30]
	_ = x[KindExclamationEqualsToken-31]
	_ = x[KindEqualsEqualsEqualsToken-32]
	_ = x[KindExclamationEqualsEqualsToken-33]
	_ = x[KindEqualsGreaterThanToken-34]
	_ = x[KindPlusToken-35]
	_ = x[KindMinusToken-36]
	_ = x[KindAsteriskToken-37]
	_ = x[KindAsteriskAsteriskToken-38]
	_ = x[KindSlashToken-39]
	_ = x[KindPercentToken-40]
	_ = x[KindPlusPlusToken-41]
	_ = x[KindMinusMinusToken-42]
	_ = x[KindLessThanLessThanToken-43]
	_ = x[KindGreaterThanGreaterThanToken-44]
	_ = x[KindGreaterThanGreaterThanGreaterThanToken-45]
	_ = x[KindAmpersandToken-46]
	_ = x[KindBarToken-47]
	_ = x[KindCaretToken-48]
	_ = x[KindExclamationToken-49]
	_ = x[KindTildeToken-50]
	_ = x[KindAmpersandAmpersandToken-51]
	_ = x[KindBarBarToken-52]
	_ = x[KindQuestionToken-53]
	_ = x[KindColonToken-54]
	_ = x[KindAtToken-55]
	_ = x[KindQuestionQuestionToken-56]
	_ = x[KindBacktickToken-57]
	_ = x[KindHashToken-58]
	_ = x[KindEqualsToken-59]
	_ = x[KindPlusEqualsToken-60]
	_ = x[KindMinusEqualsToken-61]
	_ = x[KindAsteriskEqualsToken-62]
	_ = x[KindAsteriskAsteriskEqualsToken-63]
	_ = x[KindSlashEqualsToken-64]
	_ = x[KindPercentEqualsToken-65]
	_ = x[KindLessThanLessThanEqualsToken-66]
	_ = x[KindGreaterThanGreaterThanEqualsToken-67]
	_ = x[KindGreaterThanGreaterThanGreaterThanEqualsToken-68]
	_ = x[KindAmpersandEqualsToken-69]
	_ = x[KindBarEqualsToken-70]
	_ = x[KindBarBarEqualsToken-71]
	_ = x[KindAmpersandAmpersandEqualsToken-72]
	_ = x[KindQuestionQuestionEqualsToken-73]
	_ = x[KindCaretEqualsToken-74]
	_ = x[KindIdentifier-75]
	_ = x[KindPrivateIdentifier-76]
	_ = x[KindJSDocCommentTextToken-77]
	_ = x[KindBreakKeyword-78]
	_ = x[KindCaseKeyword-79]
	_ = x[KindCatchKeyword-80]
	_ = x[KindClassKeyword-81]
	_ = x[KindConstKeyword-82]
	_ = x[KindContinueKeyword-83]
	_ = x[KindDebuggerKeyword-84]
	_ = x[KindDefaultKeyword-85]
	_ = x[KindDeleteKeyword-86]
	_ = x[KindDoKeyword-87]
	_ = x[KindElseKeyword-88]
	_ = x[KindEnumKeyword-89]
	_ = x[KindExportKeyword-90]
	_ = x[KindExtendsKeyword-91]
	_ = x[KindFalseKeyword-92]
	_ = x[KindFinallyKeyword-93]
	_ = x[KindForKeyword-94]
	_ = x[KindFunctionKeyword-95]
	_ = x[KindIfKeyword-96]
	_ = x[KindImportKeyword-97]
	_ = x[KindInKeyword-98]
	_ = x[KindInstanceOfKeyword-99]
	_ = x[KindNewKeyword-100]
	_ = x[KindNullKeyword-101]
	_ = x[KindReturnKeyword-102]
	_ = x[KindSuperKeyword-103]
	_ = x[KindSwitchKeyword-104]
	_ = x[KindThisKeyword-105]
	_ = x[KindThrowKeyword-106]
	_ = x[KindTrueKeyword-107]
	_ = x[KindTryKeyword-108]
	_ = x[KindTypeOfKeyword-109]
	_ = x[KindVarKeyword-110]
	_ = x[KindVoidKeyword-111]
	_ = x[KindWhileKeyword-112]
	_ = x[KindWithKeyword-113]
	_ = x[KindImplementsKeyword-114]
	_ = x[KindInterfaceKeyword-115]
	_ = x[KindLetKeyword-116]
	_ = x[KindPackageKeyword-117]
	_ = x[KindPrivateKeyword-118]
	_ = x[KindProtectedKeyword-119]
	_ = x[KindPublicKeyword-120]
	_ = x[KindStaticKeyword-121]
	_ = x[KindYieldKeyword-122]
	_ = x[KindAbstractKeyword-123]
	_ = x[KindAccessorKeyword-124]
	_ = x[KindAsKeyword-125]
	_ = x[KindAssertsKeyword-126]
	_ = x[KindAssertKeyword-127]
	_ = x[KindAnyKeyword-128]
	_ = x[KindAsyncKeyword-129]
	_ = x[KindAwaitKeyword-130]
	_ = x[KindBooleanKeyword-131]
	_ = x[KindConstructorKeyword-132]
	_ = x[KindDeclareKeyword-133]
	_ = x[KindGetKeyword-134]
	_ = x[KindImmediateKeyword-135]
	_ = x[KindInferKeyword-136]
	_ = x[KindIntrinsicKeyword-137]
	_ = x[KindIsKeyword-138]
	_ = x[KindKeyOfKeyword-139]
	_ = x[KindModuleKeyword-140]
	_ = x[KindNamespaceKeyword-141]
	_ = x[KindNeverKeyword-142]
	_ = x[KindOutKeyword-143]
	_ = x[KindReadonlyKeyword-144]
	_ = x[KindRequireKeyword-145]
	_ = x[KindNumberKeyword-146]
	_ = x[KindObjectKeyword-147]
	_ = x[KindSatisfiesKeyword-148]
	_ = x[KindSetKeyword-149]
	_ = x[KindStringKeyword-150]
	_ = x[KindSymbolKeyword-151]
	_ = x[KindTypeKeyword-152]
	_ = x[KindUndefinedKeyword-153]
	_ = x[KindUniqueKeyword-154]
	_ = x[KindUnknownKeyword-155]
	_ = x[KindUsingKeyword-156]
	_ = x[KindFromKeyword-157]
	_ = x[KindGlobalKeyword-158]
	_ = x[KindBigIntKeyword-159]
	_ = x[KindOverrideKeyword-160]
	_ = x[KindOfKeyword-161]
	_ = x[KindQualifiedName-162]
	_ = x[KindComputedPropertyName-163]
	_ = x[KindModifierList-164]
	_ = x[KindTypeParameterList-165]
	_ = x[KindTypeArgumentList-166]
	_ = x[KindParameterList-167]
	_ = x[KindTypeParameter-168]
	_ = x[KindParameter-169]
	_ = x[KindDecorator-170]
	_ = x[KindPropertySignature-171]
	_ = x[KindPropertyDeclaration-172]
	_ = x[KindMethodSignature-173]
	_ = x[KindMethodDeclaration-174]
	_ = x[KindClassStaticBlockDeclaration-175]
	_ = x[KindConstructor-176]
	_ = x[KindGetAccessor-177]
	_ = x[KindSetAccessor-178]
	_ = x[KindCallSignature-179]
	_ = x[KindConstructSignature-180]
	_ = x[KindIndexSignature-181]
	_ = x[KindTypePredicate-182]
	_ = x[KindTypeReference-183]
	_ = x[KindFunctionType-184]
	_ = x[KindConstructorType-185]
	_ = x[KindTypeQuery-186]
	_ = x[KindTypeLiteral-187]
	_ = x[KindArrayType-188]
	_ = x[KindTupleType-189]
	_ = x[KindOptionalType-190]
	_ = x[KindRestType-191]
	_ = x[KindUnionType-192]
	_ = x[KindIntersectionType-193]
	_ = x[KindConditionalType-194]
	_ = x[KindInferType-195]
	_ = x[KindParenthesizedType-196]
	_ = x[KindThisType-197]
	_ = x[KindTypeOperator-198]
	_ = x[KindIndexedAccessType-199]
	_ = x[KindMappedType-200]
	_ = x[KindLiteralType-201]
	_ = x[KindNamedTupleMember-202]
	_ = x[KindTemplateLiteralType-203]
	_ = x[KindTemplateLiteralTypeSpan-204]
	_ = x[KindImportType-205]
	_ = x[KindObjectBindingPattern-206]
	_ = x[KindArrayBindingPattern-207]
	_ = x[KindBindingElement-208]
	_ = x[KindArrayLiteralExpression-209]
	_ = x[KindObjectLiteralExpression-210]
	_ = x[KindPropertyAccessExpression-211]
	_ = x[KindElementAccessExpression-212]
	_ = x[KindCallExpression-213]
	_ = x[KindNewExpression-214]
	_ = x[KindTaggedTemplateExpression-215]
	_ = x[KindTypeAssertionExpression-216]
	_ = x[KindParenthesizedExpression-217]
	_ = x[KindFunctionExpression-218]
	_ = x[KindArrowFunction-219]
	_ = x[KindDeleteExpression-220]
	_ = x[KindTypeOfExpression-221]
	_ = x[KindVoidExpression-222]
	_ = x[KindAwaitExpression-223]
	_ = x[KindPrefixUnaryExpression-224]
	_ = x[KindPostfixUnaryExpression-225]
	_ = x[KindBinaryExpression-226]
	_ = x[KindConditionalExpression-227]
	_ = x[KindTemplateExpression-228]
	_ = x[KindYieldExpression-229]
	_ = x[KindSpreadElement-230]
	_ = x[KindClassExpression-231]
	_ = x[KindOmittedExpression-232]
	_ = x[KindExpressionWithTypeArguments-233]
	_ = x[KindAsExpression-234]
	_ = x[KindNonNullExpression-235]
	_ = x[KindMetaProperty-236]
	_ = x[KindSyntheticExpression-237]
	_ = x[KindSatisfiesExpression-238]
	_ = x[KindTemplateSpan-239]
	_ = x[KindSemicolonClassElement-240]
	_ = x[KindBlock-241]
	_ = x[KindEmptyStatement-242]
	_ = x[KindVariableStatement-243]
	_ = x[KindExpressionStatement-244]
	_ = x[KindIfStatement-245]
	_ = x[KindDoStatement-246]
	_ = x[KindWhileStatement-247]
	_ = x[KindForStatement-248]
	_ = x[KindForInStatement-249]
	_ = x[KindForOfStatement-250]
	_ = x[KindContinueStatement-251]
	_ = x[KindBreakStatement-252]
	_ = x[KindReturnStatement-253]
	_ = x[KindWithStatement-254]
	_ = x[KindSwitchStatement-255]
	_ = x[KindLabeledStatement-256]
	_ = x[KindThrowStatement-257]
	_ = x[KindTryStatement-258]
	_ = x[KindDebuggerStatement-259]
	_ = x[KindVariableDeclaration-260]
	_ = x[KindVariableDeclarationList-261]
	_ = x[KindFunctionDeclaration-262]
	_ = x[KindClassDeclaration-263]
	_ = x[KindInterfaceDeclaration-264]
	_ = x[KindTypeAliasDeclaration-265]
	_ = x[KindEnumDeclaration-266]
	_ = x[KindModuleDeclaration-267]
	_ = x[KindModuleBlock-268]
	_ = x[KindCaseBlock-269]
	_ = x[KindNamespaceExportDeclaration-270]
	_ = x[KindImportEqualsDeclaration-271]
	_ = x[KindImportDeclaration-272]
	_ = x[KindImportClause-273]
	_ = x[KindNamespaceImport-274]
	_ = x[KindNamedImports-275]
	_ = x[KindImportSpecifier-276]
	_ = x[KindExportAssignment-277]
	_ = x[KindExportDeclaration-278]
	_ = x[KindNamedExports-279]
	_ = x[KindNamespaceExport-280]
	_ = x[KindExportSpecifier-281]
	_ = x[KindMissingDeclaration-282]
	_ = x[KindExternalModuleReference-283]
	_ = x[KindJsxElement-284]
	_ = x[KindJsxSelfClosingElement-285]
	_ = x[KindJsxOpeningElement-286]
	_ = x[KindJsxClosingElement-287]
	_ = x[KindJsxFragment-288]
	_ = x[KindJsxOpeningFragment-289]
	_ = x[KindJsxClosingFragment-290]
	_ = x[KindJsxAttribute-291]
	_ = x[KindJsxAttributes-292]
	_ = x[KindJsxSpreadAttribute-293]
	_ = x[KindJsxExpression-294]
	_ = x[KindJsxNamespacedName-295]
	_ = x[KindCaseClause-296]
	_ = x[KindDefaultClause-297]
	_ = x[KindHeritageClause-298]
	_ = x[KindCatchClause-299]
	_ = x[KindImportAttributes-300]
	_ = x[KindImportAttribute-301]
	_ = x[KindPropertyAssignment-302]
	_ = x[KindShorthandPropertyAssignment-303]
	_ = x[KindSpreadAssignment-304]
	_ = x[KindEnumMember-305]
	_ = x[KindSourceFile-306]
	_ = x[KindBundle-307]
	_ = x[KindJSDocTypeExpression-308]
	_ = x[KindJSDocNameReference-309]
	_ = x[KindJSDocMemberName-310]
	_ = x[KindJSDocAllType-311]
	_ = x[KindJSDocUnknownType-312]
	_ = x[KindJSDocNullableType-313]
	_ = x[KindJSDocNonNullableType-314]
	_ = x[KindJSDocOptionalType-315]
	_ = x[KindJSDocFunctionType-316]
	_ = x[KindJSDocVariadicType-317]
	_ = x[KindJSDocNamepathType-318]
	_ = x[KindJSDoc-319]
	_ = x[KindJSDocText-320]
	_ = x[KindJSDocTypeLiteral-321]
	_ = x[KindJSDocSignature-322]
	_ = x[KindJSDocLink-323]
	_ = x[KindJSDocLinkCode-324]
	_ = x[KindJSDocLinkPlain-325]
	_ = x[KindJSDocTag-326]
	_ = x[KindJSDocAugmentsTag-327]
	_ = x[KindJSDocImplementsTag-328]
	_ = x[KindJSDocAuthorTag-329]
	_ = x[KindJSDocDeprecatedTag-330]
	_ = x[KindJSDocImmediateTag-331]
	_ = x[KindJSDocClassTag-332]
	_ = x[KindJSDocPublicTag-333]
	_ = x[KindJSDocPrivateTag-334]
	_ = x[KindJSDocProtectedTag-335]
	_ = x[KindJSDocReadonlyTag-336]
	_ = x[KindJSDocOverrideTag-337]
	_ = x[KindJSDocCallbackTag-338]
	_ = x[KindJSDocOverloadTag-339]
	_ = x[KindJSDocEnumTag-340]
	_ = x[KindJSDocParameterTag-341]
	_ = x[KindJSDocReturnTag-342]
	_ = x[KindJSDocThisTag-343]
	_ = x[KindJSDocTypeTag-344]
	_ = x[KindJSDocTemplateTag-345]
	_ = x[KindJSDocTypedefTag-346]
	_ = x[KindJSDocSeeTag-347]
	_ = x[KindJSDocPropertyTag-348]
	_ = x[KindJSDocThrowsTag-349]
	_ = x[KindJSDocSatisfiesTag-350]
	_ = x[KindJSDocImportTag-351]
	_ = x[KindSyntaxList-352]
	_ = x[KindNotEmittedStatement-353]
	_ = x[KindPartiallyEmittedExpression-354]
	_ = x[KindCommaListExpression-355]
	_ = x[KindSyntheticReferenceExpression-356]
	_ = x[KindCount-357]
}

const _Kind_name = "KindUnknownKindEndOfFileKindConflictMarkerTriviaKindNonTextFileMarkerTriviaKindNumericLiteralKindBigIntLiteralKindStringLiteralKindJsxTextKindJsxTextAllWhiteSpacesKindRegularExpressionLiteralKindNoSubstitutionTemplateLiteralKindTemplateHeadKindTemplateMiddleKindTemplateTailKindOpenBraceTokenKindCloseBraceTokenKindOpenParenTokenKindCloseParenTokenKindOpenBracketTokenKindCloseBracketTokenKindDotTokenKindDotDotDotTokenKindSemicolonTokenKindCommaTokenKindQuestionDotTokenKindLessThanTokenKindLessThanSlashTokenKindGreaterThanTokenKindLessThanEqualsTokenKindGreaterThanEqualsTokenKindEqualsEqualsTokenKindExclamationEqualsTokenKindEqualsEqualsEqualsTokenKindExclamationEqualsEqualsTokenKindEqualsGreaterThanTokenKindPlusTokenKindMinusTokenKindAsteriskTokenKindAsteriskAsteriskTokenKindSlashTokenKindPercentTokenKindPlusPlusTokenKindMinusMinusTokenKindLessThanLessThanTokenKindGreaterThanGreaterThanTokenKindGreaterThanGreaterThanGreaterThanTokenKindAmpersandTokenKindBarTokenKindCaretTokenKindExclamationTokenKindTildeTokenKindAmpersandAmpersandTokenKindBarBarTokenKindQuestionTokenKindColonTokenKindAtTokenKindQuestionQuestionTokenKindBacktickTokenKindHashTokenKindEqualsTokenKindPlusEqualsTokenKindMinusEqualsTokenKindAsteriskEqualsTokenKindAsteriskAsteriskEqualsTokenKindSlashEqualsTokenKindPercentEqualsTokenKindLessThanLessThanEqualsTokenKindGreaterThanGreaterThanEqualsTokenKindGreaterThanGreaterThanGreaterThanEqualsTokenKindAmpersandEqualsTokenKindBarEqualsTokenKindBarBarEqualsTokenKindAmpersandAmpersandEqualsTokenKindQuestionQuestionEqualsTokenKindCaretEqualsTokenKindIdentifierKindPrivateIdentifierKindJSDocCommentTextTokenKindBreakKeywordKindCaseKeywordKindCatchKeywordKindClassKeywordKindConstKeywordKindContinueKeywordKindDebuggerKeywordKindDefaultKeywordKindDeleteKeywordKindDoKeywordKindElseKeywordKindEnumKeywordKindExportKeywordKindExtendsKeywordKindFalseKeywordKindFinallyKeywordKindForKeywordKindFunctionKeywordKindIfKeywordKindImportKeywordKindInKeywordKindInstanceOfKeywordKindNewKeywordKindNullKeywordKindReturnKeywordKindSuperKeywordKindSwitchKeywordKindThisKeywordKindThrowKeywordKindTrueKeywordKindTryKeywordKindTypeOfKeywordKindVarKeywordKindVoidKeywordKindWhileKeywordKindWithKeywordKindImplementsKeywordKindInterfaceKeywordKindLetKeywordKindPackageKeywordKindPrivateKeywordKindProtectedKeywordKindPublicKeywordKindStaticKeywordKindYieldKeywordKindAbstractKeywordKindAccessorKeywordKindAsKeywordKindAssertsKeywordKindAssertKeywordKindAnyKeywordKindAsyncKeywordKindAwaitKeywordKindBooleanKeywordKindConstructorKeywordKindDeclareKeywordKindGetKeywordKindImmediateKeywordKindInferKeywordKindIntrinsicKeywordKindIsKeywordKindKeyOfKeywordKindModuleKeywordKindNamespaceKeywordKindNeverKeywordKindOutKeywordKindReadonlyKeywordKindRequireKeywordKindNumberKeywordKindObjectKeywordKindSatisfiesKeywordKindSetKeywordKindStringKeywordKindSymbolKeywordKindTypeKeywordKindUndefinedKeywordKindUniqueKeywordKindUnknownKeywordKindUsingKeywordKindFromKeywordKindGlobalKeywordKindBigIntKeywordKindOverrideKeywordKindOfKeywordKindQualifiedNameKindComputedPropertyNameKindModifierListKindTypeParameterListKindTypeArgumentListKindParameterListKindTypeParameterKindParameterKindDecoratorKindPropertySignatureKindPropertyDeclarationKindMethodSignatureKindMethodDeclarationKindClassStaticBlockDeclarationKindConstructorKindGetAccessorKindSetAccessorKindCallSignatureKindConstructSignatureKindIndexSignatureKindTypePredicateKindTypeReferenceKindFunctionTypeKindConstructorTypeKindTypeQueryKindTypeLiteralKindArrayTypeKindTupleTypeKindOptionalTypeKindRestTypeKindUnionTypeKindIntersectionTypeKindConditionalTypeKindInferTypeKindParenthesizedTypeKindThisTypeKindTypeOperatorKindIndexedAccessTypeKindMappedTypeKindLiteralTypeKindNamedTupleMemberKindTemplateLiteralTypeKindTemplateLiteralTypeSpanKindImportTypeKindObjectBindingPatternKindArrayBindingPatternKindBindingElementKindArrayLiteralExpressionKindObjectLiteralExpressionKindPropertyAccessExpressionKindElementAccessExpressionKindCallExpressionKindNewExpressionKindTaggedTemplateExpressionKindTypeAssertionExpressionKindParenthesizedExpressionKindFunctionExpressionKindArrowFunctionKindDeleteExpressionKindTypeOfExpressionKindVoidExpressionKindAwaitExpressionKindPrefixUnaryExpressionKindPostfixUnaryExpressionKindBinaryExpressionKindConditionalExpressionKindTemplateExpressionKindYieldExpressionKindSpreadElementKindClassExpressionKindOmittedExpressionKindExpressionWithTypeArgumentsKindAsExpressionKindNonNullExpressionKindMetaPropertyKindSyntheticExpressionKindSatisfiesExpressionKindTemplateSpanKindSemicolonClassElementKindBlockKindEmptyStatementKindVariableStatementKindExpressionStatementKindIfStatementKindDoStatementKindWhileStatementKindForStatementKindForInStatementKindForOfStatementKindContinueStatementKindBreakStatementKindReturnStatementKindWithStatementKindSwitchStatementKindLabeledStatementKindThrowStatementKindTryStatementKindDebuggerStatementKindVariableDeclarationKindVariableDeclarationListKindFunctionDeclarationKindClassDeclarationKindInterfaceDeclarationKindTypeAliasDeclarationKindEnumDeclarationKindModuleDeclarationKindModuleBlockKindCaseBlockKindNamespaceExportDeclarationKindImportEqualsDeclarationKindImportDeclarationKindImportClauseKindNamespaceImportKindNamedImportsKindImportSpecifierKindExportAssignmentKindExportDeclarationKindNamedExportsKindNamespaceExportKindExportSpecifierKindMissingDeclarationKindExternalModuleReferenceKindJsxElementKindJsxSelfClosingElementKindJsxOpeningElementKindJsxClosingElementKindJsxFragmentKindJsxOpeningFragmentKindJsxClosingFragmentKindJsxAttributeKindJsxAttributesKindJsxSpreadAttributeKindJsxExpressionKindJsxNamespacedNameKindCaseClauseKindDefaultClauseKindHeritageClauseKindCatchClauseKindImportAttributesKindImportAttributeKindPropertyAssignmentKindShorthandPropertyAssignmentKindSpreadAssignmentKindEnumMemberKindSourceFileKindBundleKindJSDocTypeExpressionKindJSDocNameReferenceKindJSDocMemberNameKindJSDocAllTypeKindJSDocUnknownTypeKindJSDocNullableTypeKindJSDocNonNullableTypeKindJSDocOptionalTypeKindJSDocFunctionTypeKindJSDocVariadicTypeKindJSDocNamepathTypeKindJSDocKindJSDocTextKindJSDocTypeLiteralKindJSDocSignatureKindJSDocLinkKindJSDocLinkCodeKindJSDocLinkPlainKindJSDocTagKindJSDocAugmentsTagKindJSDocImplementsTagKindJSDocAuthorTagKindJSDocDeprecatedTagKindJSDocImmediateTagKindJSDocClassTagKindJSDocPublicTagKindJSDocPrivateTagKindJSDocProtectedTagKindJSDocReadonlyTagKindJSDocOverrideTagKindJSDocCallbackTagKindJSDocOverloadTagKindJSDocEnumTagKindJSDocParameterTagKindJSDocReturnTagKindJSDocThisTagKindJSDocTypeTagKindJSDocTemplateTagKindJSDocTypedefTagKindJSDocSeeTagKindJSDocPropertyTagKindJSDocThrowsTagKindJSDocSatisfiesTagKindJSDocImportTagKindSyntaxListKindNotEmittedStatementKindPartiallyEmittedExpressionKindCommaListExpressionKindSyntheticReferenceExpressionKindCount"

var _Kind_index = [...]uint16{0, 11, 24, 48, 75, 93, 110, 127, 138, 163, 191, 224, 240, 258, 274, 292, 311, 329, 348, 368, 389, 401, 419, 437, 451, 471, 488, 510, 530, 553, 579, 600, 626, 653, 685, 711, 724, 738, 755, 780, 794, 810, 827, 846, 871, 902, 944, 962, 974, 988, 1008, 1022, 1049, 1064, 1081, 1095, 1106, 1131, 1148, 1161, 1176, 1195, 1215, 1238, 1269, 1289, 1311, 1342, 1379, 1427, 1451, 1469, 1490, 1523, 1554, 1574, 1588, 1609, 1634, 1650, 1665, 1681, 1697, 1713, 1732, 1751, 1769, 1786, 1799, 1814, 1829, 1846, 1864, 1880, 1898, 1912, 1931, 1944, 1961, 1974, 1995, 2009, 2024, 2041, 2057, 2074, 2089, 2105, 2120, 2134, 2151, 2165, 2180, 2196, 2211, 2232, 2252, 2266, 2284, 2302, 2322, 2339, 2356, 2372, 2391, 2410, 2423, 2441, 2458, 2472, 2488, 2504, 2522, 2544, 2562, 2576, 2596, 2612, 2632, 2645, 2661, 2678, 2698, 2714, 2728, 2747, 2765, 2782, 2799, 2819, 2833, 2850, 2867, 2882, 2902, 2919, 2937, 2953, 2968, 2985, 3002, 3021, 3034, 3051, 3075, 3091, 3112, 3132, 3149, 3166, 3179, 3192, 3213, 3236, 3255, 3276, 3307, 3322, 3337, 3352, 3369, 3391, 3409, 3426, 3443, 3459, 3478, 3491, 3506, 3519, 3532, 3548, 3560, 3573, 3593, 3612, 3625, 3646, 3658, 3674, 3695, 3709, 3724, 3744, 3767, 3794, 3808, 3832, 3855, 3873, 3899, 3926, 3954, 3981, 3999, 4016, 4044, 4071, 4098, 4120, 4137, 4157, 4177, 4195, 4214, 4239, 4265, 4285, 4310, 4332, 4351, 4368, 4387, 4408, 4439, 4455, 4476, 4492, 4515, 4538, 4554, 4579, 4588, 4606, 4627, 4650, 4665, 4680, 4698, 4714, 4732, 4750, 4771, 4789, 4808, 4825, 4844, 4864, 4882, 4898, 4919, 4942, 4969, 4992, 5012, 5036, 5060, 5079, 5100, 5115, 5128, 5158, 5185, 5206, 5222, 5241, 5257, 5276, 5296, 5317, 5333, 5352, 5371, 5393, 5420, 5434, 5459, 5480, 5501, 5516, 5538, 5560, 5576, 5593, 5615, 5632, 5653, 5667, 5684, 5702, 5717, 5737, 5756, 5778, 5809, 5829, 5843, 5857, 5867, 5890, 5912, 5931, 5947, 5967, 5988, 6012, 6033, 6054, 6075, 6096, 6105, 6118, 6138, 6156, 6169, 6186, 6204, 6216, 6236, 6258, 6276, 6298, 6319, 6336, 6354, 6373, 6394, 6414, 6434, 6454, 6474, 6490, 6511, 6529, 6545, 6561, 6581, 6600, 6615, 6635, 6653, 6674, 6692, 6706, 6729, 6759, 6782, 6814, 6823}

func (i Kind) String() string {
	if i < 0 || i >= Kind(len(_Kind_index)-1) {
		return "Kind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Kind_name[_Kind_index[i]:_Kind_index[i+1]]
}
