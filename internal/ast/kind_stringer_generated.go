// Code generated by "stringer -type=Kind -output=kind_stringer_generated.go"; DO NOT EDIT.

package ast

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[KindUnknown-0]
	_ = x[KindEndOfFile-1]
	_ = x[KindConflictMarkerTrivia-2]
	_ = x[KindNonTextFileMarkerTrivia-3]
	_ = x[KindNumericLiteral-4]
	_ = x[KindBigIntLiteral-5]
	_ = x[KindStringLiteral-6]
	_ = x[KindJsxText-7]
	_ = x[KindJsxTextAllWhiteSpaces-8]
	_ = x[KindRegularExpressionLiteral-9]
	_ = x[KindNoSubstitutionTemplateLiteral-10]
	_ = x[KindTemplateHead-11]
	_ = x[KindTemplateMiddle-12]
	_ = x[KindTemplateTail-13]
	_ = x[KindOpenBraceToken-14]
	_ = x[KindCloseBraceToken-15]
	_ = x[KindOpenParenToken-16]
	_ = x[KindCloseParenToken-17]
	_ = x[KindOpenBracketToken-18]
	_ = x[KindCloseBracketToken-19]
	_ = x[KindDotToken-20]
	_ = x[KindDotDotDotToken-21]
	_ = x[KindSemicolonToken-22]
	_ = x[KindCommaToken-23]
	_ = x[KindQuestionDotToken-24]
	_ = x[KindLessThanToken-25]
	_ = x[KindLessThanSlashToken-26]
	_ = x[KindGreaterThanToken-27]
	_ = x[KindLessThanEqualsToken-28]
	_ = x[KindGreaterThanEqualsToken-29]
	_ = x[KindEqualsEqualsToken-30]
	_ = x[KindExclamationEqualsToken-31]
	_ = x[KindEqualsEqualsEqualsToken-32]
	_ = x[KindExclamationEqualsEqualsToken-33]
	_ = x[KindEqualsGreaterThanToken-34]
	_ = x[KindPlusToken-35]
	_ = x[KindMinusToken-36]
	_ = x[KindAsteriskToken-37]
	_ = x[KindAsteriskAsteriskToken-38]
	_ = x[KindSlashToken-39]
	_ = x[KindPercentToken-40]
	_ = x[KindPlusPlusToken-41]
	_ = x[KindMinusMinusToken-42]
	_ = x[KindLessThanLessThanToken-43]
	_ = x[KindGreaterThanGreaterThanToken-44]
	_ = x[KindGreaterThanGreaterThanGreaterThanToken-45]
	_ = x[KindAmpersandToken-46]
	_ = x[KindBarToken-47]
	_ = x[KindCaretToken-48]
	_ = x[KindExclamationToken-49]
	_ = x[KindTildeToken-50]
	_ = x[KindAmpersandAmpersandToken-51]
	_ = x[KindBarBarToken-52]
	_ = x[KindQuestionToken-53]
	_ = x[KindColonToken-54]
	_ = x[KindAtToken-55]
	_ = x[KindQuestionQuestionToken-56]
	_ = x[KindBacktickToken-57]
	_ = x[KindHashToken-58]
	_ = x[KindEqualsToken-59]
	_ = x[KindPlusEqualsToken-60]
	_ = x[KindMinusEqualsToken-61]
	_ = x[KindAsteriskEqualsToken-62]
	_ = x[KindAsteriskAsteriskEqualsToken-63]
	_ = x[KindSlashEqualsToken-64]
	_ = x[KindPercentEqualsToken-65]
	_ = x[KindLessThanLessThanEqualsToken-66]
	_ = x[KindGreaterThanGreaterThanEqualsToken-67]
	_ = x[KindGreaterThanGreaterThanGreaterThanEqualsToken-68]
	_ = x[KindAmpersandEqualsToken-69]
	_ = x[KindBarEqualsToken-70]
	_ = x[KindBarBarEqualsToken-71]
	_ = x[KindAmpersandAmpersandEqualsToken-72]
	_ = x[KindQuestionQuestionEqualsToken-73]
	_ = x[KindCaretEqualsToken-74]
	_ = x[KindIdentifier-75]
	_ = x[KindPrivateIdentifier-76]
	_ = x[KindJSDocCommentTextToken-77]
	_ = x[KindBreakKeyword-78]
	_ = x[KindCaseKeyword-79]
	_ = x[KindCatchKeyword-80]
	_ = x[KindClassKeyword-81]
	_ = x[KindConstKeyword-82]
	_ = x[KindContinueKeyword-83]
	_ = x[KindDebuggerKeyword-84]
	_ = x[KindDefaultKeyword-85]
	_ = x[KindDeleteKeyword-86]
	_ = x[KindDoKeyword-87]
	_ = x[KindElseKeyword-88]
	_ = x[KindEnumKeyword-89]
	_ = x[KindExportKeyword-90]
	_ = x[KindExtendsKeyword-91]
	_ = x[KindFalseKeyword-92]
	_ = x[KindFinallyKeyword-93]
	_ = x[KindForKeyword-94]
	_ = x[KindFunctionKeyword-95]
	_ = x[KindIfKeyword-96]
	_ = x[KindImportKeyword-97]
	_ = x[KindInKeyword-98]
	_ = x[KindInstanceOfKeyword-99]
	_ = x[KindNewKeyword-100]
	_ = x[KindNullKeyword-101]
	_ = x[KindReturnKeyword-102]
	_ = x[KindSuperKeyword-103]
	_ = x[KindSwitchKeyword-104]
	_ = x[KindThisKeyword-105]
	_ = x[KindThrowKeyword-106]
	_ = x[KindTrueKeyword-107]
	_ = x[KindTryKeyword-108]
	_ = x[KindTypeOfKeyword-109]
	_ = x[KindVarKeyword-110]
	_ = x[KindVoidKeyword-111]
	_ = x[KindWhileKeyword-112]
	_ = x[KindWithKeyword-113]
	_ = x[KindImplementsKeyword-114]
	_ = x[KindInterfaceKeyword-115]
	_ = x[KindLetKeyword-116]
	_ = x[KindPackageKeyword-117]
	_ = x[KindPrivateKeyword-118]
	_ = x[KindProtectedKeyword-119]
	_ = x[KindPublicKeyword-120]
	_ = x[KindStaticKeyword-121]
	_ = x[KindYieldKeyword-122]
	_ = x[KindAbstractKeyword-123]
	_ = x[KindAccessorKeyword-124]
	_ = x[KindAsKeyword-125]
	_ = x[KindAssertsKeyword-126]
	_ = x[KindAssertKeyword-127]
	_ = x[KindAnyKeyword-128]
	_ = x[KindAsyncKeyword-129]
	_ = x[KindAwaitKeyword-130]
	_ = x[KindBooleanKeyword-131]
	_ = x[KindConstructorKeyword-132]
	_ = x[KindDeclareKeyword-133]
	_ = x[KindGetKeyword-134]
	_ = x[KindImmediateKeyword-135]
	_ = x[KindInferKeyword-136]
	_ = x[KindIntrinsicKeyword-137]
	_ = x[KindIsKeyword-138]
	_ = x[KindKeyOfKeyword-139]
	_ = x[KindModuleKeyword-140]
	_ = x[KindNamespaceKeyword-141]
	_ = x[KindNeverKeyword-142]
	_ = x[KindOutKeyword-143]
	_ = x[KindReadonlyKeyword-144]
	_ = x[KindRequireKeyword-145]
	_ = x[KindNumberKeyword-146]
	_ = x[KindObjectKeyword-147]
	_ = x[KindSatisfiesKeyword-148]
	_ = x[KindSetKeyword-149]
	_ = x[KindStringKeyword-150]
	_ = x[KindSymbolKeyword-151]
	_ = x[KindTypeKeyword-152]
	_ = x[KindUndefinedKeyword-153]
	_ = x[KindUniqueKeyword-154]
	_ = x[KindUnknownKeyword-155]
	_ = x[KindUsingKeyword-156]
	_ = x[KindFromKeyword-157]
	_ = x[KindGlobalKeyword-158]
	_ = x[KindBigIntKeyword-159]
	_ = x[KindOverrideKeyword-160]
	_ = x[KindOfKeyword-161]
	_ = x[KindQualifiedName-162]
	_ = x[KindComputedPropertyName-163]
	_ = x[KindModifierList-164]
	_ = x[KindTypeParameterList-165]
	_ = x[KindTypeArgumentList-166]
	_ = x[KindJSDocList-167]
	_ = x[KindJSDocCommentList-168]
	_ = x[KindJSDocTagList-169]
	_ = x[KindTypeParameter-170]
	_ = x[KindParameter-171]
	_ = x[KindDecorator-172]
	_ = x[KindPropertySignature-173]
	_ = x[KindPropertyDeclaration-174]
	_ = x[KindMethodSignature-175]
	_ = x[KindMethodDeclaration-176]
	_ = x[KindClassStaticBlockDeclaration-177]
	_ = x[KindConstructor-178]
	_ = x[KindGetAccessor-179]
	_ = x[KindSetAccessor-180]
	_ = x[KindCallSignature-181]
	_ = x[KindConstructSignature-182]
	_ = x[KindIndexSignature-183]
	_ = x[KindTypePredicate-184]
	_ = x[KindTypeReference-185]
	_ = x[KindFunctionType-186]
	_ = x[KindConstructorType-187]
	_ = x[KindTypeQuery-188]
	_ = x[KindTypeLiteral-189]
	_ = x[KindArrayType-190]
	_ = x[KindTupleType-191]
	_ = x[KindOptionalType-192]
	_ = x[KindRestType-193]
	_ = x[KindUnionType-194]
	_ = x[KindIntersectionType-195]
	_ = x[KindConditionalType-196]
	_ = x[KindInferType-197]
	_ = x[KindParenthesizedType-198]
	_ = x[KindThisType-199]
	_ = x[KindTypeOperator-200]
	_ = x[KindIndexedAccessType-201]
	_ = x[KindMappedType-202]
	_ = x[KindLiteralType-203]
	_ = x[KindNamedTupleMember-204]
	_ = x[KindTemplateLiteralType-205]
	_ = x[KindTemplateLiteralTypeSpan-206]
	_ = x[KindImportType-207]
	_ = x[KindObjectBindingPattern-208]
	_ = x[KindArrayBindingPattern-209]
	_ = x[KindBindingElement-210]
	_ = x[KindArrayLiteralExpression-211]
	_ = x[KindObjectLiteralExpression-212]
	_ = x[KindPropertyAccessExpression-213]
	_ = x[KindElementAccessExpression-214]
	_ = x[KindCallExpression-215]
	_ = x[KindNewExpression-216]
	_ = x[KindTaggedTemplateExpression-217]
	_ = x[KindTypeAssertionExpression-218]
	_ = x[KindParenthesizedExpression-219]
	_ = x[KindFunctionExpression-220]
	_ = x[KindArrowFunction-221]
	_ = x[KindDeleteExpression-222]
	_ = x[KindTypeOfExpression-223]
	_ = x[KindVoidExpression-224]
	_ = x[KindAwaitExpression-225]
	_ = x[KindPrefixUnaryExpression-226]
	_ = x[KindPostfixUnaryExpression-227]
	_ = x[KindBinaryExpression-228]
	_ = x[KindConditionalExpression-229]
	_ = x[KindTemplateExpression-230]
	_ = x[KindYieldExpression-231]
	_ = x[KindSpreadElement-232]
	_ = x[KindClassExpression-233]
	_ = x[KindOmittedExpression-234]
	_ = x[KindExpressionWithTypeArguments-235]
	_ = x[KindAsExpression-236]
	_ = x[KindNonNullExpression-237]
	_ = x[KindMetaProperty-238]
	_ = x[KindSyntheticExpression-239]
	_ = x[KindSatisfiesExpression-240]
	_ = x[KindTemplateSpan-241]
	_ = x[KindSemicolonClassElement-242]
	_ = x[KindBlock-243]
	_ = x[KindEmptyStatement-244]
	_ = x[KindVariableStatement-245]
	_ = x[KindExpressionStatement-246]
	_ = x[KindIfStatement-247]
	_ = x[KindDoStatement-248]
	_ = x[KindWhileStatement-249]
	_ = x[KindForStatement-250]
	_ = x[KindForInStatement-251]
	_ = x[KindForOfStatement-252]
	_ = x[KindContinueStatement-253]
	_ = x[KindBreakStatement-254]
	_ = x[KindReturnStatement-255]
	_ = x[KindWithStatement-256]
	_ = x[KindSwitchStatement-257]
	_ = x[KindLabeledStatement-258]
	_ = x[KindThrowStatement-259]
	_ = x[KindTryStatement-260]
	_ = x[KindDebuggerStatement-261]
	_ = x[KindVariableDeclaration-262]
	_ = x[KindVariableDeclarationList-263]
	_ = x[KindFunctionDeclaration-264]
	_ = x[KindClassDeclaration-265]
	_ = x[KindInterfaceDeclaration-266]
	_ = x[KindTypeAliasDeclaration-267]
	_ = x[KindEnumDeclaration-268]
	_ = x[KindModuleDeclaration-269]
	_ = x[KindModuleBlock-270]
	_ = x[KindCaseBlock-271]
	_ = x[KindNamespaceExportDeclaration-272]
	_ = x[KindImportEqualsDeclaration-273]
	_ = x[KindImportDeclaration-274]
	_ = x[KindImportClause-275]
	_ = x[KindNamespaceImport-276]
	_ = x[KindNamedImports-277]
	_ = x[KindImportSpecifier-278]
	_ = x[KindExportAssignment-279]
	_ = x[KindExportDeclaration-280]
	_ = x[KindNamedExports-281]
	_ = x[KindNamespaceExport-282]
	_ = x[KindExportSpecifier-283]
	_ = x[KindMissingDeclaration-284]
	_ = x[KindExternalModuleReference-285]
	_ = x[KindJsxElement-286]
	_ = x[KindJsxSelfClosingElement-287]
	_ = x[KindJsxOpeningElement-288]
	_ = x[KindJsxClosingElement-289]
	_ = x[KindJsxFragment-290]
	_ = x[KindJsxOpeningFragment-291]
	_ = x[KindJsxClosingFragment-292]
	_ = x[KindJsxAttribute-293]
	_ = x[KindJsxAttributes-294]
	_ = x[KindJsxSpreadAttribute-295]
	_ = x[KindJsxExpression-296]
	_ = x[KindJsxNamespacedName-297]
	_ = x[KindCaseClause-298]
	_ = x[KindDefaultClause-299]
	_ = x[KindHeritageClause-300]
	_ = x[KindCatchClause-301]
	_ = x[KindImportAttributes-302]
	_ = x[KindImportAttribute-303]
	_ = x[KindPropertyAssignment-304]
	_ = x[KindShorthandPropertyAssignment-305]
	_ = x[KindSpreadAssignment-306]
	_ = x[KindEnumMember-307]
	_ = x[KindSourceFile-308]
	_ = x[KindBundle-309]
	_ = x[KindJSDocTypeExpression-310]
	_ = x[KindJSDocNameReference-311]
	_ = x[KindJSDocMemberName-312]
	_ = x[KindJSDocAllType-313]
	_ = x[KindJSDocUnknownType-314]
	_ = x[KindJSDocNullableType-315]
	_ = x[KindJSDocNonNullableType-316]
	_ = x[KindJSDocOptionalType-317]
	_ = x[KindJSDocFunctionType-318]
	_ = x[KindJSDocVariadicType-319]
	_ = x[KindJSDocNamepathType-320]
	_ = x[KindJSDoc-321]
	_ = x[KindJSDocText-322]
	_ = x[KindJSDocTypeLiteral-323]
	_ = x[KindJSDocSignature-324]
	_ = x[KindJSDocLink-325]
	_ = x[KindJSDocLinkCode-326]
	_ = x[KindJSDocLinkPlain-327]
	_ = x[KindJSDocTag-328]
	_ = x[KindJSDocAugmentsTag-329]
	_ = x[KindJSDocImplementsTag-330]
	_ = x[KindJSDocAuthorTag-331]
	_ = x[KindJSDocDeprecatedTag-332]
	_ = x[KindJSDocImmediateTag-333]
	_ = x[KindJSDocClassTag-334]
	_ = x[KindJSDocPublicTag-335]
	_ = x[KindJSDocPrivateTag-336]
	_ = x[KindJSDocProtectedTag-337]
	_ = x[KindJSDocReadonlyTag-338]
	_ = x[KindJSDocOverrideTag-339]
	_ = x[KindJSDocCallbackTag-340]
	_ = x[KindJSDocOverloadTag-341]
	_ = x[KindJSDocEnumTag-342]
	_ = x[KindJSDocParameterTag-343]
	_ = x[KindJSDocReturnTag-344]
	_ = x[KindJSDocThisTag-345]
	_ = x[KindJSDocTypeTag-346]
	_ = x[KindJSDocTemplateTag-347]
	_ = x[KindJSDocTypedefTag-348]
	_ = x[KindJSDocSeeTag-349]
	_ = x[KindJSDocPropertyTag-350]
	_ = x[KindJSDocThrowsTag-351]
	_ = x[KindJSDocSatisfiesTag-352]
	_ = x[KindJSDocImportTag-353]
	_ = x[KindSyntaxList-354]
	_ = x[KindNotEmittedStatement-355]
	_ = x[KindPartiallyEmittedExpression-356]
	_ = x[KindCommaListExpression-357]
	_ = x[KindSyntheticReferenceExpression-358]
	_ = x[KindCount-359]
}

const _Kind_name = "KindUnknownKindEndOfFileKindConflictMarkerTriviaKindNonTextFileMarkerTriviaKindNumericLiteralKindBigIntLiteralKindStringLiteralKindJsxTextKindJsxTextAllWhiteSpacesKindRegularExpressionLiteralKindNoSubstitutionTemplateLiteralKindTemplateHeadKindTemplateMiddleKindTemplateTailKindOpenBraceTokenKindCloseBraceTokenKindOpenParenTokenKindCloseParenTokenKindOpenBracketTokenKindCloseBracketTokenKindDotTokenKindDotDotDotTokenKindSemicolonTokenKindCommaTokenKindQuestionDotTokenKindLessThanTokenKindLessThanSlashTokenKindGreaterThanTokenKindLessThanEqualsTokenKindGreaterThanEqualsTokenKindEqualsEqualsTokenKindExclamationEqualsTokenKindEqualsEqualsEqualsTokenKindExclamationEqualsEqualsTokenKindEqualsGreaterThanTokenKindPlusTokenKindMinusTokenKindAsteriskTokenKindAsteriskAsteriskTokenKindSlashTokenKindPercentTokenKindPlusPlusTokenKindMinusMinusTokenKindLessThanLessThanTokenKindGreaterThanGreaterThanTokenKindGreaterThanGreaterThanGreaterThanTokenKindAmpersandTokenKindBarTokenKindCaretTokenKindExclamationTokenKindTildeTokenKindAmpersandAmpersandTokenKindBarBarTokenKindQuestionTokenKindColonTokenKindAtTokenKindQuestionQuestionTokenKindBacktickTokenKindHashTokenKindEqualsTokenKindPlusEqualsTokenKindMinusEqualsTokenKindAsteriskEqualsTokenKindAsteriskAsteriskEqualsTokenKindSlashEqualsTokenKindPercentEqualsTokenKindLessThanLessThanEqualsTokenKindGreaterThanGreaterThanEqualsTokenKindGreaterThanGreaterThanGreaterThanEqualsTokenKindAmpersandEqualsTokenKindBarEqualsTokenKindBarBarEqualsTokenKindAmpersandAmpersandEqualsTokenKindQuestionQuestionEqualsTokenKindCaretEqualsTokenKindIdentifierKindPrivateIdentifierKindJSDocCommentTextTokenKindBreakKeywordKindCaseKeywordKindCatchKeywordKindClassKeywordKindConstKeywordKindContinueKeywordKindDebuggerKeywordKindDefaultKeywordKindDeleteKeywordKindDoKeywordKindElseKeywordKindEnumKeywordKindExportKeywordKindExtendsKeywordKindFalseKeywordKindFinallyKeywordKindForKeywordKindFunctionKeywordKindIfKeywordKindImportKeywordKindInKeywordKindInstanceOfKeywordKindNewKeywordKindNullKeywordKindReturnKeywordKindSuperKeywordKindSwitchKeywordKindThisKeywordKindThrowKeywordKindTrueKeywordKindTryKeywordKindTypeOfKeywordKindVarKeywordKindVoidKeywordKindWhileKeywordKindWithKeywordKindImplementsKeywordKindInterfaceKeywordKindLetKeywordKindPackageKeywordKindPrivateKeywordKindProtectedKeywordKindPublicKeywordKindStaticKeywordKindYieldKeywordKindAbstractKeywordKindAccessorKeywordKindAsKeywordKindAssertsKeywordKindAssertKeywordKindAnyKeywordKindAsyncKeywordKindAwaitKeywordKindBooleanKeywordKindConstructorKeywordKindDeclareKeywordKindGetKeywordKindImmediateKeywordKindInferKeywordKindIntrinsicKeywordKindIsKeywordKindKeyOfKeywordKindModuleKeywordKindNamespaceKeywordKindNeverKeywordKindOutKeywordKindReadonlyKeywordKindRequireKeywordKindNumberKeywordKindObjectKeywordKindSatisfiesKeywordKindSetKeywordKindStringKeywordKindSymbolKeywordKindTypeKeywordKindUndefinedKeywordKindUniqueKeywordKindUnknownKeywordKindUsingKeywordKindFromKeywordKindGlobalKeywordKindBigIntKeywordKindOverrideKeywordKindOfKeywordKindQualifiedNameKindComputedPropertyNameKindModifierListKindTypeParameterListKindTypeArgumentListKindJSDocListKindJSDocCommentListKindJSDocTagListKindTypeParameterKindParameterKindDecoratorKindPropertySignatureKindPropertyDeclarationKindMethodSignatureKindMethodDeclarationKindClassStaticBlockDeclarationKindConstructorKindGetAccessorKindSetAccessorKindCallSignatureKindConstructSignatureKindIndexSignatureKindTypePredicateKindTypeReferenceKindFunctionTypeKindConstructorTypeKindTypeQueryKindTypeLiteralKindArrayTypeKindTupleTypeKindOptionalTypeKindRestTypeKindUnionTypeKindIntersectionTypeKindConditionalTypeKindInferTypeKindParenthesizedTypeKindThisTypeKindTypeOperatorKindIndexedAccessTypeKindMappedTypeKindLiteralTypeKindNamedTupleMemberKindTemplateLiteralTypeKindTemplateLiteralTypeSpanKindImportTypeKindObjectBindingPatternKindArrayBindingPatternKindBindingElementKindArrayLiteralExpressionKindObjectLiteralExpressionKindPropertyAccessExpressionKindElementAccessExpressionKindCallExpressionKindNewExpressionKindTaggedTemplateExpressionKindTypeAssertionExpressionKindParenthesizedExpressionKindFunctionExpressionKindArrowFunctionKindDeleteExpressionKindTypeOfExpressionKindVoidExpressionKindAwaitExpressionKindPrefixUnaryExpressionKindPostfixUnaryExpressionKindBinaryExpressionKindConditionalExpressionKindTemplateExpressionKindYieldExpressionKindSpreadElementKindClassExpressionKindOmittedExpressionKindExpressionWithTypeArgumentsKindAsExpressionKindNonNullExpressionKindMetaPropertyKindSyntheticExpressionKindSatisfiesExpressionKindTemplateSpanKindSemicolonClassElementKindBlockKindEmptyStatementKindVariableStatementKindExpressionStatementKindIfStatementKindDoStatementKindWhileStatementKindForStatementKindForInStatementKindForOfStatementKindContinueStatementKindBreakStatementKindReturnStatementKindWithStatementKindSwitchStatementKindLabeledStatementKindThrowStatementKindTryStatementKindDebuggerStatementKindVariableDeclarationKindVariableDeclarationListKindFunctionDeclarationKindClassDeclarationKindInterfaceDeclarationKindTypeAliasDeclarationKindEnumDeclarationKindModuleDeclarationKindModuleBlockKindCaseBlockKindNamespaceExportDeclarationKindImportEqualsDeclarationKindImportDeclarationKindImportClauseKindNamespaceImportKindNamedImportsKindImportSpecifierKindExportAssignmentKindExportDeclarationKindNamedExportsKindNamespaceExportKindExportSpecifierKindMissingDeclarationKindExternalModuleReferenceKindJsxElementKindJsxSelfClosingElementKindJsxOpeningElementKindJsxClosingElementKindJsxFragmentKindJsxOpeningFragmentKindJsxClosingFragmentKindJsxAttributeKindJsxAttributesKindJsxSpreadAttributeKindJsxExpressionKindJsxNamespacedNameKindCaseClauseKindDefaultClauseKindHeritageClauseKindCatchClauseKindImportAttributesKindImportAttributeKindPropertyAssignmentKindShorthandPropertyAssignmentKindSpreadAssignmentKindEnumMemberKindSourceFileKindBundleKindJSDocTypeExpressionKindJSDocNameReferenceKindJSDocMemberNameKindJSDocAllTypeKindJSDocUnknownTypeKindJSDocNullableTypeKindJSDocNonNullableTypeKindJSDocOptionalTypeKindJSDocFunctionTypeKindJSDocVariadicTypeKindJSDocNamepathTypeKindJSDocKindJSDocTextKindJSDocTypeLiteralKindJSDocSignatureKindJSDocLinkKindJSDocLinkCodeKindJSDocLinkPlainKindJSDocTagKindJSDocAugmentsTagKindJSDocImplementsTagKindJSDocAuthorTagKindJSDocDeprecatedTagKindJSDocImmediateTagKindJSDocClassTagKindJSDocPublicTagKindJSDocPrivateTagKindJSDocProtectedTagKindJSDocReadonlyTagKindJSDocOverrideTagKindJSDocCallbackTagKindJSDocOverloadTagKindJSDocEnumTagKindJSDocParameterTagKindJSDocReturnTagKindJSDocThisTagKindJSDocTypeTagKindJSDocTemplateTagKindJSDocTypedefTagKindJSDocSeeTagKindJSDocPropertyTagKindJSDocThrowsTagKindJSDocSatisfiesTagKindJSDocImportTagKindSyntaxListKindNotEmittedStatementKindPartiallyEmittedExpressionKindCommaListExpressionKindSyntheticReferenceExpressionKindCount"

var _Kind_index = [...]uint16{0, 11, 24, 48, 75, 93, 110, 127, 138, 163, 191, 224, 240, 258, 274, 292, 311, 329, 348, 368, 389, 401, 419, 437, 451, 471, 488, 510, 530, 553, 579, 600, 626, 653, 685, 711, 724, 738, 755, 780, 794, 810, 827, 846, 871, 902, 944, 962, 974, 988, 1008, 1022, 1049, 1064, 1081, 1095, 1106, 1131, 1148, 1161, 1176, 1195, 1215, 1238, 1269, 1289, 1311, 1342, 1379, 1427, 1451, 1469, 1490, 1523, 1554, 1574, 1588, 1609, 1634, 1650, 1665, 1681, 1697, 1713, 1732, 1751, 1769, 1786, 1799, 1814, 1829, 1846, 1864, 1880, 1898, 1912, 1931, 1944, 1961, 1974, 1995, 2009, 2024, 2041, 2057, 2074, 2089, 2105, 2120, 2134, 2151, 2165, 2180, 2196, 2211, 2232, 2252, 2266, 2284, 2302, 2322, 2339, 2356, 2372, 2391, 2410, 2423, 2441, 2458, 2472, 2488, 2504, 2522, 2544, 2562, 2576, 2596, 2612, 2632, 2645, 2661, 2678, 2698, 2714, 2728, 2747, 2765, 2782, 2799, 2819, 2833, 2850, 2867, 2882, 2902, 2919, 2937, 2953, 2968, 2985, 3002, 3021, 3034, 3051, 3075, 3091, 3112, 3132, 3145, 3165, 3181, 3198, 3211, 3224, 3245, 3268, 3287, 3308, 3339, 3354, 3369, 3384, 3401, 3423, 3441, 3458, 3475, 3491, 3510, 3523, 3538, 3551, 3564, 3580, 3592, 3605, 3625, 3644, 3657, 3678, 3690, 3706, 3727, 3741, 3756, 3776, 3799, 3826, 3840, 3864, 3887, 3905, 3931, 3958, 3986, 4013, 4031, 4048, 4076, 4103, 4130, 4152, 4169, 4189, 4209, 4227, 4246, 4271, 4297, 4317, 4342, 4364, 4383, 4400, 4419, 4440, 4471, 4487, 4508, 4524, 4547, 4570, 4586, 4611, 4620, 4638, 4659, 4682, 4697, 4712, 4730, 4746, 4764, 4782, 4803, 4821, 4840, 4857, 4876, 4896, 4914, 4930, 4951, 4974, 5001, 5024, 5044, 5068, 5092, 5111, 5132, 5147, 5160, 5190, 5217, 5238, 5254, 5273, 5289, 5308, 5328, 5349, 5365, 5384, 5403, 5425, 5452, 5466, 5491, 5512, 5533, 5548, 5570, 5592, 5608, 5625, 5647, 5664, 5685, 5699, 5716, 5734, 5749, 5769, 5788, 5810, 5841, 5861, 5875, 5889, 5899, 5922, 5944, 5963, 5979, 5999, 6020, 6044, 6065, 6086, 6107, 6128, 6137, 6150, 6170, 6188, 6201, 6218, 6236, 6248, 6268, 6290, 6308, 6330, 6351, 6368, 6386, 6405, 6426, 6446, 6466, 6486, 6506, 6522, 6543, 6561, 6577, 6593, 6613, 6632, 6647, 6667, 6685, 6706, 6724, 6738, 6761, 6791, 6814, 6846, 6855}

func (i Kind) String() string {
	if i < 0 || i >= Kind(len(_Kind_index)-1) {
		return "Kind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Kind_name[_Kind_index[i]:_Kind_index[i+1]]
}
