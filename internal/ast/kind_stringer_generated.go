// Code generated by "stringer -type=Kind -output=kind_stringer_generated.go"; DO NOT EDIT.

package ast

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[KindUnknown-0]
	_ = x[KindEndOfFile-1]
	_ = x[KindWhitespaceTrivia-2]
	_ = x[KindNewLineTrivia-3]
	_ = x[KindConflictMarkerTrivia-4]
	_ = x[KindNonTextFileMarkerTrivia-5]
	_ = x[KindNumericLiteral-6]
	_ = x[KindBigIntLiteral-7]
	_ = x[KindStringLiteral-8]
	_ = x[KindJsxText-9]
	_ = x[KindJsxTextAllWhiteSpaces-10]
	_ = x[KindRegularExpressionLiteral-11]
	_ = x[KindNoSubstitutionTemplateLiteral-12]
	_ = x[KindTemplateHead-13]
	_ = x[KindTemplateMiddle-14]
	_ = x[KindTemplateTail-15]
	_ = x[KindOpenBraceToken-16]
	_ = x[KindCloseBraceToken-17]
	_ = x[KindOpenParenToken-18]
	_ = x[KindCloseParenToken-19]
	_ = x[KindOpenBracketToken-20]
	_ = x[KindCloseBracketToken-21]
	_ = x[KindDotToken-22]
	_ = x[KindDotDotDotToken-23]
	_ = x[KindSemicolonToken-24]
	_ = x[KindCommaToken-25]
	_ = x[KindQuestionDotToken-26]
	_ = x[KindLessThanToken-27]
	_ = x[KindLessThanSlashToken-28]
	_ = x[KindGreaterThanToken-29]
	_ = x[KindLessThanEqualsToken-30]
	_ = x[KindGreaterThanEqualsToken-31]
	_ = x[KindEqualsEqualsToken-32]
	_ = x[KindExclamationEqualsToken-33]
	_ = x[KindEqualsEqualsEqualsToken-34]
	_ = x[KindExclamationEqualsEqualsToken-35]
	_ = x[KindEqualsGreaterThanToken-36]
	_ = x[KindPlusToken-37]
	_ = x[KindMinusToken-38]
	_ = x[KindAsteriskToken-39]
	_ = x[KindAsteriskAsteriskToken-40]
	_ = x[KindSlashToken-41]
	_ = x[KindPercentToken-42]
	_ = x[KindPlusPlusToken-43]
	_ = x[KindMinusMinusToken-44]
	_ = x[KindLessThanLessThanToken-45]
	_ = x[KindGreaterThanGreaterThanToken-46]
	_ = x[KindGreaterThanGreaterThanGreaterThanToken-47]
	_ = x[KindAmpersandToken-48]
	_ = x[KindBarToken-49]
	_ = x[KindCaretToken-50]
	_ = x[KindExclamationToken-51]
	_ = x[KindTildeToken-52]
	_ = x[KindAmpersandAmpersandToken-53]
	_ = x[KindBarBarToken-54]
	_ = x[KindQuestionToken-55]
	_ = x[KindColonToken-56]
	_ = x[KindAtToken-57]
	_ = x[KindQuestionQuestionToken-58]
	_ = x[KindBacktickToken-59]
	_ = x[KindHashToken-60]
	_ = x[KindEqualsToken-61]
	_ = x[KindPlusEqualsToken-62]
	_ = x[KindMinusEqualsToken-63]
	_ = x[KindAsteriskEqualsToken-64]
	_ = x[KindAsteriskAsteriskEqualsToken-65]
	_ = x[KindSlashEqualsToken-66]
	_ = x[KindPercentEqualsToken-67]
	_ = x[KindLessThanLessThanEqualsToken-68]
	_ = x[KindGreaterThanGreaterThanEqualsToken-69]
	_ = x[KindGreaterThanGreaterThanGreaterThanEqualsToken-70]
	_ = x[KindAmpersandEqualsToken-71]
	_ = x[KindBarEqualsToken-72]
	_ = x[KindBarBarEqualsToken-73]
	_ = x[KindAmpersandAmpersandEqualsToken-74]
	_ = x[KindQuestionQuestionEqualsToken-75]
	_ = x[KindCaretEqualsToken-76]
	_ = x[KindIdentifier-77]
	_ = x[KindPrivateIdentifier-78]
	_ = x[KindJSDocCommentTextToken-79]
	_ = x[KindBreakKeyword-80]
	_ = x[KindCaseKeyword-81]
	_ = x[KindCatchKeyword-82]
	_ = x[KindClassKeyword-83]
	_ = x[KindConstKeyword-84]
	_ = x[KindContinueKeyword-85]
	_ = x[KindDebuggerKeyword-86]
	_ = x[KindDefaultKeyword-87]
	_ = x[KindDeleteKeyword-88]
	_ = x[KindDoKeyword-89]
	_ = x[KindElseKeyword-90]
	_ = x[KindEnumKeyword-91]
	_ = x[KindExportKeyword-92]
	_ = x[KindExtendsKeyword-93]
	_ = x[KindFalseKeyword-94]
	_ = x[KindFinallyKeyword-95]
	_ = x[KindForKeyword-96]
	_ = x[KindFunctionKeyword-97]
	_ = x[KindIfKeyword-98]
	_ = x[KindImportKeyword-99]
	_ = x[KindInKeyword-100]
	_ = x[KindInstanceOfKeyword-101]
	_ = x[KindNewKeyword-102]
	_ = x[KindNullKeyword-103]
	_ = x[KindReturnKeyword-104]
	_ = x[KindSuperKeyword-105]
	_ = x[KindSwitchKeyword-106]
	_ = x[KindThisKeyword-107]
	_ = x[KindThrowKeyword-108]
	_ = x[KindTrueKeyword-109]
	_ = x[KindTryKeyword-110]
	_ = x[KindTypeOfKeyword-111]
	_ = x[KindVarKeyword-112]
	_ = x[KindVoidKeyword-113]
	_ = x[KindWhileKeyword-114]
	_ = x[KindWithKeyword-115]
	_ = x[KindImplementsKeyword-116]
	_ = x[KindInterfaceKeyword-117]
	_ = x[KindLetKeyword-118]
	_ = x[KindPackageKeyword-119]
	_ = x[KindPrivateKeyword-120]
	_ = x[KindProtectedKeyword-121]
	_ = x[KindPublicKeyword-122]
	_ = x[KindStaticKeyword-123]
	_ = x[KindYieldKeyword-124]
	_ = x[KindAbstractKeyword-125]
	_ = x[KindAccessorKeyword-126]
	_ = x[KindAsKeyword-127]
	_ = x[KindAssertsKeyword-128]
	_ = x[KindAssertKeyword-129]
	_ = x[KindAnyKeyword-130]
	_ = x[KindAsyncKeyword-131]
	_ = x[KindAwaitKeyword-132]
	_ = x[KindBooleanKeyword-133]
	_ = x[KindConstructorKeyword-134]
	_ = x[KindDeclareKeyword-135]
	_ = x[KindGetKeyword-136]
	_ = x[KindImmediateKeyword-137]
	_ = x[KindInferKeyword-138]
	_ = x[KindIntrinsicKeyword-139]
	_ = x[KindIsKeyword-140]
	_ = x[KindKeyOfKeyword-141]
	_ = x[KindModuleKeyword-142]
	_ = x[KindNamespaceKeyword-143]
	_ = x[KindNeverKeyword-144]
	_ = x[KindOutKeyword-145]
	_ = x[KindReadonlyKeyword-146]
	_ = x[KindRequireKeyword-147]
	_ = x[KindNumberKeyword-148]
	_ = x[KindObjectKeyword-149]
	_ = x[KindSatisfiesKeyword-150]
	_ = x[KindSetKeyword-151]
	_ = x[KindStringKeyword-152]
	_ = x[KindSymbolKeyword-153]
	_ = x[KindTypeKeyword-154]
	_ = x[KindUndefinedKeyword-155]
	_ = x[KindUniqueKeyword-156]
	_ = x[KindUnknownKeyword-157]
	_ = x[KindUsingKeyword-158]
	_ = x[KindFromKeyword-159]
	_ = x[KindGlobalKeyword-160]
	_ = x[KindBigIntKeyword-161]
	_ = x[KindOverrideKeyword-162]
	_ = x[KindOfKeyword-163]
	_ = x[KindQualifiedName-164]
	_ = x[KindComputedPropertyName-165]
	_ = x[KindModifierList-166]
	_ = x[KindTypeParameterList-167]
	_ = x[KindTypeArgumentList-168]
	_ = x[KindJSDocList-169]
	_ = x[KindJSDocCommentList-170]
	_ = x[KindJSDocTagList-171]
	_ = x[KindTypeParameter-172]
	_ = x[KindParameter-173]
	_ = x[KindDecorator-174]
	_ = x[KindPropertySignature-175]
	_ = x[KindPropertyDeclaration-176]
	_ = x[KindMethodSignature-177]
	_ = x[KindMethodDeclaration-178]
	_ = x[KindClassStaticBlockDeclaration-179]
	_ = x[KindConstructor-180]
	_ = x[KindGetAccessor-181]
	_ = x[KindSetAccessor-182]
	_ = x[KindCallSignature-183]
	_ = x[KindConstructSignature-184]
	_ = x[KindIndexSignature-185]
	_ = x[KindTypePredicate-186]
	_ = x[KindTypeReference-187]
	_ = x[KindFunctionType-188]
	_ = x[KindConstructorType-189]
	_ = x[KindTypeQuery-190]
	_ = x[KindTypeLiteral-191]
	_ = x[KindArrayType-192]
	_ = x[KindTupleType-193]
	_ = x[KindOptionalType-194]
	_ = x[KindRestType-195]
	_ = x[KindUnionType-196]
	_ = x[KindIntersectionType-197]
	_ = x[KindConditionalType-198]
	_ = x[KindInferType-199]
	_ = x[KindParenthesizedType-200]
	_ = x[KindThisType-201]
	_ = x[KindTypeOperator-202]
	_ = x[KindIndexedAccessType-203]
	_ = x[KindMappedType-204]
	_ = x[KindLiteralType-205]
	_ = x[KindNamedTupleMember-206]
	_ = x[KindTemplateLiteralType-207]
	_ = x[KindTemplateLiteralTypeSpan-208]
	_ = x[KindImportType-209]
	_ = x[KindObjectBindingPattern-210]
	_ = x[KindArrayBindingPattern-211]
	_ = x[KindBindingElement-212]
	_ = x[KindArrayLiteralExpression-213]
	_ = x[KindObjectLiteralExpression-214]
	_ = x[KindPropertyAccessExpression-215]
	_ = x[KindElementAccessExpression-216]
	_ = x[KindCallExpression-217]
	_ = x[KindNewExpression-218]
	_ = x[KindTaggedTemplateExpression-219]
	_ = x[KindTypeAssertionExpression-220]
	_ = x[KindParenthesizedExpression-221]
	_ = x[KindFunctionExpression-222]
	_ = x[KindArrowFunction-223]
	_ = x[KindDeleteExpression-224]
	_ = x[KindTypeOfExpression-225]
	_ = x[KindVoidExpression-226]
	_ = x[KindAwaitExpression-227]
	_ = x[KindPrefixUnaryExpression-228]
	_ = x[KindPostfixUnaryExpression-229]
	_ = x[KindBinaryExpression-230]
	_ = x[KindConditionalExpression-231]
	_ = x[KindTemplateExpression-232]
	_ = x[KindYieldExpression-233]
	_ = x[KindSpreadElement-234]
	_ = x[KindClassExpression-235]
	_ = x[KindOmittedExpression-236]
	_ = x[KindExpressionWithTypeArguments-237]
	_ = x[KindAsExpression-238]
	_ = x[KindNonNullExpression-239]
	_ = x[KindMetaProperty-240]
	_ = x[KindSyntheticExpression-241]
	_ = x[KindSatisfiesExpression-242]
	_ = x[KindTemplateSpan-243]
	_ = x[KindSemicolonClassElement-244]
	_ = x[KindBlock-245]
	_ = x[KindEmptyStatement-246]
	_ = x[KindVariableStatement-247]
	_ = x[KindExpressionStatement-248]
	_ = x[KindIfStatement-249]
	_ = x[KindDoStatement-250]
	_ = x[KindWhileStatement-251]
	_ = x[KindForStatement-252]
	_ = x[KindForInStatement-253]
	_ = x[KindForOfStatement-254]
	_ = x[KindContinueStatement-255]
	_ = x[KindBreakStatement-256]
	_ = x[KindReturnStatement-257]
	_ = x[KindWithStatement-258]
	_ = x[KindSwitchStatement-259]
	_ = x[KindLabeledStatement-260]
	_ = x[KindThrowStatement-261]
	_ = x[KindTryStatement-262]
	_ = x[KindDebuggerStatement-263]
	_ = x[KindVariableDeclaration-264]
	_ = x[KindVariableDeclarationList-265]
	_ = x[KindFunctionDeclaration-266]
	_ = x[KindClassDeclaration-267]
	_ = x[KindInterfaceDeclaration-268]
	_ = x[KindTypeAliasDeclaration-269]
	_ = x[KindEnumDeclaration-270]
	_ = x[KindModuleDeclaration-271]
	_ = x[KindModuleBlock-272]
	_ = x[KindCaseBlock-273]
	_ = x[KindNamespaceExportDeclaration-274]
	_ = x[KindImportEqualsDeclaration-275]
	_ = x[KindImportDeclaration-276]
	_ = x[KindImportClause-277]
	_ = x[KindNamespaceImport-278]
	_ = x[KindNamedImports-279]
	_ = x[KindImportSpecifier-280]
	_ = x[KindExportAssignment-281]
	_ = x[KindExportDeclaration-282]
	_ = x[KindNamedExports-283]
	_ = x[KindNamespaceExport-284]
	_ = x[KindExportSpecifier-285]
	_ = x[KindMissingDeclaration-286]
	_ = x[KindExternalModuleReference-287]
	_ = x[KindJsxElement-288]
	_ = x[KindJsxSelfClosingElement-289]
	_ = x[KindJsxOpeningElement-290]
	_ = x[KindJsxClosingElement-291]
	_ = x[KindJsxFragment-292]
	_ = x[KindJsxOpeningFragment-293]
	_ = x[KindJsxClosingFragment-294]
	_ = x[KindJsxAttribute-295]
	_ = x[KindJsxAttributes-296]
	_ = x[KindJsxSpreadAttribute-297]
	_ = x[KindJsxExpression-298]
	_ = x[KindJsxNamespacedName-299]
	_ = x[KindCaseClause-300]
	_ = x[KindDefaultClause-301]
	_ = x[KindHeritageClause-302]
	_ = x[KindCatchClause-303]
	_ = x[KindImportAttributes-304]
	_ = x[KindImportAttribute-305]
	_ = x[KindPropertyAssignment-306]
	_ = x[KindShorthandPropertyAssignment-307]
	_ = x[KindSpreadAssignment-308]
	_ = x[KindEnumMember-309]
	_ = x[KindSourceFile-310]
	_ = x[KindBundle-311]
	_ = x[KindJSDocTypeExpression-312]
	_ = x[KindJSDocNameReference-313]
	_ = x[KindJSDocMemberName-314]
	_ = x[KindJSDocAllType-315]
	_ = x[KindJSDocUnknownType-316]
	_ = x[KindJSDocNullableType-317]
	_ = x[KindJSDocNonNullableType-318]
	_ = x[KindJSDocOptionalType-319]
	_ = x[KindJSDocFunctionType-320]
	_ = x[KindJSDocVariadicType-321]
	_ = x[KindJSDocNamepathType-322]
	_ = x[KindJSDoc-323]
	_ = x[KindJSDocText-324]
	_ = x[KindJSDocTypeLiteral-325]
	_ = x[KindJSDocSignature-326]
	_ = x[KindJSDocLink-327]
	_ = x[KindJSDocLinkCode-328]
	_ = x[KindJSDocLinkPlain-329]
	_ = x[KindJSDocTag-330]
	_ = x[KindJSDocAugmentsTag-331]
	_ = x[KindJSDocImplementsTag-332]
	_ = x[KindJSDocAuthorTag-333]
	_ = x[KindJSDocDeprecatedTag-334]
	_ = x[KindJSDocImmediateTag-335]
	_ = x[KindJSDocClassTag-336]
	_ = x[KindJSDocPublicTag-337]
	_ = x[KindJSDocPrivateTag-338]
	_ = x[KindJSDocProtectedTag-339]
	_ = x[KindJSDocReadonlyTag-340]
	_ = x[KindJSDocOverrideTag-341]
	_ = x[KindJSDocCallbackTag-342]
	_ = x[KindJSDocOverloadTag-343]
	_ = x[KindJSDocEnumTag-344]
	_ = x[KindJSDocParameterTag-345]
	_ = x[KindJSDocReturnTag-346]
	_ = x[KindJSDocThisTag-347]
	_ = x[KindJSDocTypeTag-348]
	_ = x[KindJSDocTemplateTag-349]
	_ = x[KindJSDocTypedefTag-350]
	_ = x[KindJSDocSeeTag-351]
	_ = x[KindJSDocPropertyTag-352]
	_ = x[KindJSDocThrowsTag-353]
	_ = x[KindJSDocSatisfiesTag-354]
	_ = x[KindJSDocImportTag-355]
	_ = x[KindSyntaxList-356]
	_ = x[KindNotEmittedStatement-357]
	_ = x[KindPartiallyEmittedExpression-358]
	_ = x[KindCommaListExpression-359]
	_ = x[KindSyntheticReferenceExpression-360]
	_ = x[KindCount-361]
}

const _Kind_name = "KindUnknownKindEndOfFileKindWhitespaceTriviaKindNewLineTriviaKindConflictMarkerTriviaKindNonTextFileMarkerTriviaKindNumericLiteralKindBigIntLiteralKindStringLiteralKindJsxTextKindJsxTextAllWhiteSpacesKindRegularExpressionLiteralKindNoSubstitutionTemplateLiteralKindTemplateHeadKindTemplateMiddleKindTemplateTailKindOpenBraceTokenKindCloseBraceTokenKindOpenParenTokenKindCloseParenTokenKindOpenBracketTokenKindCloseBracketTokenKindDotTokenKindDotDotDotTokenKindSemicolonTokenKindCommaTokenKindQuestionDotTokenKindLessThanTokenKindLessThanSlashTokenKindGreaterThanTokenKindLessThanEqualsTokenKindGreaterThanEqualsTokenKindEqualsEqualsTokenKindExclamationEqualsTokenKindEqualsEqualsEqualsTokenKindExclamationEqualsEqualsTokenKindEqualsGreaterThanTokenKindPlusTokenKindMinusTokenKindAsteriskTokenKindAsteriskAsteriskTokenKindSlashTokenKindPercentTokenKindPlusPlusTokenKindMinusMinusTokenKindLessThanLessThanTokenKindGreaterThanGreaterThanTokenKindGreaterThanGreaterThanGreaterThanTokenKindAmpersandTokenKindBarTokenKindCaretTokenKindExclamationTokenKindTildeTokenKindAmpersandAmpersandTokenKindBarBarTokenKindQuestionTokenKindColonTokenKindAtTokenKindQuestionQuestionTokenKindBacktickTokenKindHashTokenKindEqualsTokenKindPlusEqualsTokenKindMinusEqualsTokenKindAsteriskEqualsTokenKindAsteriskAsteriskEqualsTokenKindSlashEqualsTokenKindPercentEqualsTokenKindLessThanLessThanEqualsTokenKindGreaterThanGreaterThanEqualsTokenKindGreaterThanGreaterThanGreaterThanEqualsTokenKindAmpersandEqualsTokenKindBarEqualsTokenKindBarBarEqualsTokenKindAmpersandAmpersandEqualsTokenKindQuestionQuestionEqualsTokenKindCaretEqualsTokenKindIdentifierKindPrivateIdentifierKindJSDocCommentTextTokenKindBreakKeywordKindCaseKeywordKindCatchKeywordKindClassKeywordKindConstKeywordKindContinueKeywordKindDebuggerKeywordKindDefaultKeywordKindDeleteKeywordKindDoKeywordKindElseKeywordKindEnumKeywordKindExportKeywordKindExtendsKeywordKindFalseKeywordKindFinallyKeywordKindForKeywordKindFunctionKeywordKindIfKeywordKindImportKeywordKindInKeywordKindInstanceOfKeywordKindNewKeywordKindNullKeywordKindReturnKeywordKindSuperKeywordKindSwitchKeywordKindThisKeywordKindThrowKeywordKindTrueKeywordKindTryKeywordKindTypeOfKeywordKindVarKeywordKindVoidKeywordKindWhileKeywordKindWithKeywordKindImplementsKeywordKindInterfaceKeywordKindLetKeywordKindPackageKeywordKindPrivateKeywordKindProtectedKeywordKindPublicKeywordKindStaticKeywordKindYieldKeywordKindAbstractKeywordKindAccessorKeywordKindAsKeywordKindAssertsKeywordKindAssertKeywordKindAnyKeywordKindAsyncKeywordKindAwaitKeywordKindBooleanKeywordKindConstructorKeywordKindDeclareKeywordKindGetKeywordKindImmediateKeywordKindInferKeywordKindIntrinsicKeywordKindIsKeywordKindKeyOfKeywordKindModuleKeywordKindNamespaceKeywordKindNeverKeywordKindOutKeywordKindReadonlyKeywordKindRequireKeywordKindNumberKeywordKindObjectKeywordKindSatisfiesKeywordKindSetKeywordKindStringKeywordKindSymbolKeywordKindTypeKeywordKindUndefinedKeywordKindUniqueKeywordKindUnknownKeywordKindUsingKeywordKindFromKeywordKindGlobalKeywordKindBigIntKeywordKindOverrideKeywordKindOfKeywordKindQualifiedNameKindComputedPropertyNameKindModifierListKindTypeParameterListKindTypeArgumentListKindJSDocListKindJSDocCommentListKindJSDocTagListKindTypeParameterKindParameterKindDecoratorKindPropertySignatureKindPropertyDeclarationKindMethodSignatureKindMethodDeclarationKindClassStaticBlockDeclarationKindConstructorKindGetAccessorKindSetAccessorKindCallSignatureKindConstructSignatureKindIndexSignatureKindTypePredicateKindTypeReferenceKindFunctionTypeKindConstructorTypeKindTypeQueryKindTypeLiteralKindArrayTypeKindTupleTypeKindOptionalTypeKindRestTypeKindUnionTypeKindIntersectionTypeKindConditionalTypeKindInferTypeKindParenthesizedTypeKindThisTypeKindTypeOperatorKindIndexedAccessTypeKindMappedTypeKindLiteralTypeKindNamedTupleMemberKindTemplateLiteralTypeKindTemplateLiteralTypeSpanKindImportTypeKindObjectBindingPatternKindArrayBindingPatternKindBindingElementKindArrayLiteralExpressionKindObjectLiteralExpressionKindPropertyAccessExpressionKindElementAccessExpressionKindCallExpressionKindNewExpressionKindTaggedTemplateExpressionKindTypeAssertionExpressionKindParenthesizedExpressionKindFunctionExpressionKindArrowFunctionKindDeleteExpressionKindTypeOfExpressionKindVoidExpressionKindAwaitExpressionKindPrefixUnaryExpressionKindPostfixUnaryExpressionKindBinaryExpressionKindConditionalExpressionKindTemplateExpressionKindYieldExpressionKindSpreadElementKindClassExpressionKindOmittedExpressionKindExpressionWithTypeArgumentsKindAsExpressionKindNonNullExpressionKindMetaPropertyKindSyntheticExpressionKindSatisfiesExpressionKindTemplateSpanKindSemicolonClassElementKindBlockKindEmptyStatementKindVariableStatementKindExpressionStatementKindIfStatementKindDoStatementKindWhileStatementKindForStatementKindForInStatementKindForOfStatementKindContinueStatementKindBreakStatementKindReturnStatementKindWithStatementKindSwitchStatementKindLabeledStatementKindThrowStatementKindTryStatementKindDebuggerStatementKindVariableDeclarationKindVariableDeclarationListKindFunctionDeclarationKindClassDeclarationKindInterfaceDeclarationKindTypeAliasDeclarationKindEnumDeclarationKindModuleDeclarationKindModuleBlockKindCaseBlockKindNamespaceExportDeclarationKindImportEqualsDeclarationKindImportDeclarationKindImportClauseKindNamespaceImportKindNamedImportsKindImportSpecifierKindExportAssignmentKindExportDeclarationKindNamedExportsKindNamespaceExportKindExportSpecifierKindMissingDeclarationKindExternalModuleReferenceKindJsxElementKindJsxSelfClosingElementKindJsxOpeningElementKindJsxClosingElementKindJsxFragmentKindJsxOpeningFragmentKindJsxClosingFragmentKindJsxAttributeKindJsxAttributesKindJsxSpreadAttributeKindJsxExpressionKindJsxNamespacedNameKindCaseClauseKindDefaultClauseKindHeritageClauseKindCatchClauseKindImportAttributesKindImportAttributeKindPropertyAssignmentKindShorthandPropertyAssignmentKindSpreadAssignmentKindEnumMemberKindSourceFileKindBundleKindJSDocTypeExpressionKindJSDocNameReferenceKindJSDocMemberNameKindJSDocAllTypeKindJSDocUnknownTypeKindJSDocNullableTypeKindJSDocNonNullableTypeKindJSDocOptionalTypeKindJSDocFunctionTypeKindJSDocVariadicTypeKindJSDocNamepathTypeKindJSDocKindJSDocTextKindJSDocTypeLiteralKindJSDocSignatureKindJSDocLinkKindJSDocLinkCodeKindJSDocLinkPlainKindJSDocTagKindJSDocAugmentsTagKindJSDocImplementsTagKindJSDocAuthorTagKindJSDocDeprecatedTagKindJSDocImmediateTagKindJSDocClassTagKindJSDocPublicTagKindJSDocPrivateTagKindJSDocProtectedTagKindJSDocReadonlyTagKindJSDocOverrideTagKindJSDocCallbackTagKindJSDocOverloadTagKindJSDocEnumTagKindJSDocParameterTagKindJSDocReturnTagKindJSDocThisTagKindJSDocTypeTagKindJSDocTemplateTagKindJSDocTypedefTagKindJSDocSeeTagKindJSDocPropertyTagKindJSDocThrowsTagKindJSDocSatisfiesTagKindJSDocImportTagKindSyntaxListKindNotEmittedStatementKindPartiallyEmittedExpressionKindCommaListExpressionKindSyntheticReferenceExpressionKindCount"

var _Kind_index = [...]uint16{0, 11, 24, 44, 61, 85, 112, 130, 147, 164, 175, 200, 228, 261, 277, 295, 311, 329, 348, 366, 385, 405, 426, 438, 456, 474, 488, 508, 525, 547, 567, 590, 616, 637, 663, 690, 722, 748, 761, 775, 792, 817, 831, 847, 864, 883, 908, 939, 981, 999, 1011, 1025, 1045, 1059, 1086, 1101, 1118, 1132, 1143, 1168, 1185, 1198, 1213, 1232, 1252, 1275, 1306, 1326, 1348, 1379, 1416, 1464, 1488, 1506, 1527, 1560, 1591, 1611, 1625, 1646, 1671, 1687, 1702, 1718, 1734, 1750, 1769, 1788, 1806, 1823, 1836, 1851, 1866, 1883, 1901, 1917, 1935, 1949, 1968, 1981, 1998, 2011, 2032, 2046, 2061, 2078, 2094, 2111, 2126, 2142, 2157, 2171, 2188, 2202, 2217, 2233, 2248, 2269, 2289, 2303, 2321, 2339, 2359, 2376, 2393, 2409, 2428, 2447, 2460, 2478, 2495, 2509, 2525, 2541, 2559, 2581, 2599, 2613, 2633, 2649, 2669, 2682, 2698, 2715, 2735, 2751, 2765, 2784, 2802, 2819, 2836, 2856, 2870, 2887, 2904, 2919, 2939, 2956, 2974, 2990, 3005, 3022, 3039, 3058, 3071, 3088, 3112, 3128, 3149, 3169, 3182, 3202, 3218, 3235, 3248, 3261, 3282, 3305, 3324, 3345, 3376, 3391, 3406, 3421, 3438, 3460, 3478, 3495, 3512, 3528, 3547, 3560, 3575, 3588, 3601, 3617, 3629, 3642, 3662, 3681, 3694, 3715, 3727, 3743, 3764, 3778, 3793, 3813, 3836, 3863, 3877, 3901, 3924, 3942, 3968, 3995, 4023, 4050, 4068, 4085, 4113, 4140, 4167, 4189, 4206, 4226, 4246, 4264, 4283, 4308, 4334, 4354, 4379, 4401, 4420, 4437, 4456, 4477, 4508, 4524, 4545, 4561, 4584, 4607, 4623, 4648, 4657, 4675, 4696, 4719, 4734, 4749, 4767, 4783, 4801, 4819, 4840, 4858, 4877, 4894, 4913, 4933, 4951, 4967, 4988, 5011, 5038, 5061, 5081, 5105, 5129, 5148, 5169, 5184, 5197, 5227, 5254, 5275, 5291, 5310, 5326, 5345, 5365, 5386, 5402, 5421, 5440, 5462, 5489, 5503, 5528, 5549, 5570, 5585, 5607, 5629, 5645, 5662, 5684, 5701, 5722, 5736, 5753, 5771, 5786, 5806, 5825, 5847, 5878, 5898, 5912, 5926, 5936, 5959, 5981, 6000, 6016, 6036, 6057, 6081, 6102, 6123, 6144, 6165, 6174, 6187, 6207, 6225, 6238, 6255, 6273, 6285, 6305, 6327, 6345, 6367, 6388, 6405, 6423, 6442, 6463, 6483, 6503, 6523, 6543, 6559, 6580, 6598, 6614, 6630, 6650, 6669, 6684, 6704, 6722, 6743, 6761, 6775, 6798, 6828, 6851, 6883, 6892}

func (i Kind) String() string {
	if i < 0 || i >= Kind(len(_Kind_index)-1) {
		return "Kind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Kind_name[_Kind_index[i]:_Kind_index[i+1]]
}
