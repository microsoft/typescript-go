// Code generated by "stringer -type=Kind -output=kind_stringer_generated.go"; DO NOT EDIT.

package ast

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[KindUnknown-0]
	_ = x[KindEndOfFile-1]
	_ = x[KindSingleLineCommentTrivia-2]
	_ = x[KindMultiLineCommentTrivia-3]
	_ = x[KindConflictMarkerTrivia-4]
	_ = x[KindNonTextFileMarkerTrivia-5]
	_ = x[KindNumericLiteral-6]
	_ = x[KindBigIntLiteral-7]
	_ = x[KindStringLiteral-8]
	_ = x[KindJsxText-9]
	_ = x[KindJsxTextAllWhiteSpaces-10]
	_ = x[KindRegularExpressionLiteral-11]
	_ = x[KindNoSubstitutionTemplateLiteral-12]
	_ = x[KindTemplateHead-13]
	_ = x[KindTemplateMiddle-14]
	_ = x[KindTemplateTail-15]
	_ = x[KindOpenBraceToken-16]
	_ = x[KindCloseBraceToken-17]
	_ = x[KindOpenParenToken-18]
	_ = x[KindCloseParenToken-19]
	_ = x[KindOpenBracketToken-20]
	_ = x[KindCloseBracketToken-21]
	_ = x[KindDotToken-22]
	_ = x[KindDotDotDotToken-23]
	_ = x[KindSemicolonToken-24]
	_ = x[KindCommaToken-25]
	_ = x[KindQuestionDotToken-26]
	_ = x[KindLessThanToken-27]
	_ = x[KindLessThanSlashToken-28]
	_ = x[KindGreaterThanToken-29]
	_ = x[KindLessThanEqualsToken-30]
	_ = x[KindGreaterThanEqualsToken-31]
	_ = x[KindEqualsEqualsToken-32]
	_ = x[KindExclamationEqualsToken-33]
	_ = x[KindEqualsEqualsEqualsToken-34]
	_ = x[KindExclamationEqualsEqualsToken-35]
	_ = x[KindEqualsGreaterThanToken-36]
	_ = x[KindPlusToken-37]
	_ = x[KindMinusToken-38]
	_ = x[KindAsteriskToken-39]
	_ = x[KindAsteriskAsteriskToken-40]
	_ = x[KindSlashToken-41]
	_ = x[KindPercentToken-42]
	_ = x[KindPlusPlusToken-43]
	_ = x[KindMinusMinusToken-44]
	_ = x[KindLessThanLessThanToken-45]
	_ = x[KindGreaterThanGreaterThanToken-46]
	_ = x[KindGreaterThanGreaterThanGreaterThanToken-47]
	_ = x[KindAmpersandToken-48]
	_ = x[KindBarToken-49]
	_ = x[KindCaretToken-50]
	_ = x[KindExclamationToken-51]
	_ = x[KindTildeToken-52]
	_ = x[KindAmpersandAmpersandToken-53]
	_ = x[KindBarBarToken-54]
	_ = x[KindQuestionToken-55]
	_ = x[KindColonToken-56]
	_ = x[KindAtToken-57]
	_ = x[KindQuestionQuestionToken-58]
	_ = x[KindBacktickToken-59]
	_ = x[KindHashToken-60]
	_ = x[KindEqualsToken-61]
	_ = x[KindPlusEqualsToken-62]
	_ = x[KindMinusEqualsToken-63]
	_ = x[KindAsteriskEqualsToken-64]
	_ = x[KindAsteriskAsteriskEqualsToken-65]
	_ = x[KindSlashEqualsToken-66]
	_ = x[KindPercentEqualsToken-67]
	_ = x[KindLessThanLessThanEqualsToken-68]
	_ = x[KindGreaterThanGreaterThanEqualsToken-69]
	_ = x[KindGreaterThanGreaterThanGreaterThanEqualsToken-70]
	_ = x[KindAmpersandEqualsToken-71]
	_ = x[KindBarEqualsToken-72]
	_ = x[KindBarBarEqualsToken-73]
	_ = x[KindAmpersandAmpersandEqualsToken-74]
	_ = x[KindQuestionQuestionEqualsToken-75]
	_ = x[KindCaretEqualsToken-76]
	_ = x[KindIdentifier-77]
	_ = x[KindPrivateIdentifier-78]
	_ = x[KindJSDocCommentTextToken-79]
	_ = x[KindBreakKeyword-80]
	_ = x[KindCaseKeyword-81]
	_ = x[KindCatchKeyword-82]
	_ = x[KindClassKeyword-83]
	_ = x[KindConstKeyword-84]
	_ = x[KindContinueKeyword-85]
	_ = x[KindDebuggerKeyword-86]
	_ = x[KindDefaultKeyword-87]
	_ = x[KindDeleteKeyword-88]
	_ = x[KindDoKeyword-89]
	_ = x[KindElseKeyword-90]
	_ = x[KindEnumKeyword-91]
	_ = x[KindExportKeyword-92]
	_ = x[KindExtendsKeyword-93]
	_ = x[KindFalseKeyword-94]
	_ = x[KindFinallyKeyword-95]
	_ = x[KindForKeyword-96]
	_ = x[KindFunctionKeyword-97]
	_ = x[KindIfKeyword-98]
	_ = x[KindImportKeyword-99]
	_ = x[KindInKeyword-100]
	_ = x[KindInstanceOfKeyword-101]
	_ = x[KindNewKeyword-102]
	_ = x[KindNullKeyword-103]
	_ = x[KindReturnKeyword-104]
	_ = x[KindSuperKeyword-105]
	_ = x[KindSwitchKeyword-106]
	_ = x[KindThisKeyword-107]
	_ = x[KindThrowKeyword-108]
	_ = x[KindTrueKeyword-109]
	_ = x[KindTryKeyword-110]
	_ = x[KindTypeOfKeyword-111]
	_ = x[KindVarKeyword-112]
	_ = x[KindVoidKeyword-113]
	_ = x[KindWhileKeyword-114]
	_ = x[KindWithKeyword-115]
	_ = x[KindImplementsKeyword-116]
	_ = x[KindInterfaceKeyword-117]
	_ = x[KindLetKeyword-118]
	_ = x[KindPackageKeyword-119]
	_ = x[KindPrivateKeyword-120]
	_ = x[KindProtectedKeyword-121]
	_ = x[KindPublicKeyword-122]
	_ = x[KindStaticKeyword-123]
	_ = x[KindYieldKeyword-124]
	_ = x[KindAbstractKeyword-125]
	_ = x[KindAccessorKeyword-126]
	_ = x[KindAsKeyword-127]
	_ = x[KindAssertsKeyword-128]
	_ = x[KindAssertKeyword-129]
	_ = x[KindAnyKeyword-130]
	_ = x[KindAsyncKeyword-131]
	_ = x[KindAwaitKeyword-132]
	_ = x[KindBooleanKeyword-133]
	_ = x[KindConstructorKeyword-134]
	_ = x[KindDeclareKeyword-135]
	_ = x[KindGetKeyword-136]
	_ = x[KindImmediateKeyword-137]
	_ = x[KindInferKeyword-138]
	_ = x[KindIntrinsicKeyword-139]
	_ = x[KindIsKeyword-140]
	_ = x[KindKeyOfKeyword-141]
	_ = x[KindModuleKeyword-142]
	_ = x[KindNamespaceKeyword-143]
	_ = x[KindNeverKeyword-144]
	_ = x[KindOutKeyword-145]
	_ = x[KindReadonlyKeyword-146]
	_ = x[KindRequireKeyword-147]
	_ = x[KindNumberKeyword-148]
	_ = x[KindObjectKeyword-149]
	_ = x[KindSatisfiesKeyword-150]
	_ = x[KindSetKeyword-151]
	_ = x[KindStringKeyword-152]
	_ = x[KindSymbolKeyword-153]
	_ = x[KindTypeKeyword-154]
	_ = x[KindUndefinedKeyword-155]
	_ = x[KindUniqueKeyword-156]
	_ = x[KindUnknownKeyword-157]
	_ = x[KindUsingKeyword-158]
	_ = x[KindFromKeyword-159]
	_ = x[KindGlobalKeyword-160]
	_ = x[KindBigIntKeyword-161]
	_ = x[KindOverrideKeyword-162]
	_ = x[KindOfKeyword-163]
	_ = x[KindQualifiedName-164]
	_ = x[KindComputedPropertyName-165]
	_ = x[KindTypeParameter-166]
	_ = x[KindParameter-167]
	_ = x[KindDecorator-168]
	_ = x[KindPropertySignature-169]
	_ = x[KindPropertyDeclaration-170]
	_ = x[KindMethodSignature-171]
	_ = x[KindMethodDeclaration-172]
	_ = x[KindClassStaticBlockDeclaration-173]
	_ = x[KindConstructor-174]
	_ = x[KindGetAccessor-175]
	_ = x[KindSetAccessor-176]
	_ = x[KindCallSignature-177]
	_ = x[KindConstructSignature-178]
	_ = x[KindIndexSignature-179]
	_ = x[KindTypePredicate-180]
	_ = x[KindTypeReference-181]
	_ = x[KindFunctionType-182]
	_ = x[KindConstructorType-183]
	_ = x[KindTypeQuery-184]
	_ = x[KindTypeLiteral-185]
	_ = x[KindArrayType-186]
	_ = x[KindTupleType-187]
	_ = x[KindOptionalType-188]
	_ = x[KindRestType-189]
	_ = x[KindUnionType-190]
	_ = x[KindIntersectionType-191]
	_ = x[KindConditionalType-192]
	_ = x[KindInferType-193]
	_ = x[KindParenthesizedType-194]
	_ = x[KindThisType-195]
	_ = x[KindTypeOperator-196]
	_ = x[KindIndexedAccessType-197]
	_ = x[KindMappedType-198]
	_ = x[KindLiteralType-199]
	_ = x[KindNamedTupleMember-200]
	_ = x[KindTemplateLiteralType-201]
	_ = x[KindTemplateLiteralTypeSpan-202]
	_ = x[KindImportType-203]
	_ = x[KindObjectBindingPattern-204]
	_ = x[KindArrayBindingPattern-205]
	_ = x[KindBindingElement-206]
	_ = x[KindArrayLiteralExpression-207]
	_ = x[KindObjectLiteralExpression-208]
	_ = x[KindPropertyAccessExpression-209]
	_ = x[KindElementAccessExpression-210]
	_ = x[KindCallExpression-211]
	_ = x[KindNewExpression-212]
	_ = x[KindTaggedTemplateExpression-213]
	_ = x[KindTypeAssertionExpression-214]
	_ = x[KindParenthesizedExpression-215]
	_ = x[KindFunctionExpression-216]
	_ = x[KindArrowFunction-217]
	_ = x[KindDeleteExpression-218]
	_ = x[KindTypeOfExpression-219]
	_ = x[KindVoidExpression-220]
	_ = x[KindAwaitExpression-221]
	_ = x[KindPrefixUnaryExpression-222]
	_ = x[KindPostfixUnaryExpression-223]
	_ = x[KindBinaryExpression-224]
	_ = x[KindConditionalExpression-225]
	_ = x[KindTemplateExpression-226]
	_ = x[KindYieldExpression-227]
	_ = x[KindSpreadElement-228]
	_ = x[KindClassExpression-229]
	_ = x[KindOmittedExpression-230]
	_ = x[KindExpressionWithTypeArguments-231]
	_ = x[KindAsExpression-232]
	_ = x[KindNonNullExpression-233]
	_ = x[KindMetaProperty-234]
	_ = x[KindSyntheticExpression-235]
	_ = x[KindSatisfiesExpression-236]
	_ = x[KindTemplateSpan-237]
	_ = x[KindSemicolonClassElement-238]
	_ = x[KindBlock-239]
	_ = x[KindEmptyStatement-240]
	_ = x[KindVariableStatement-241]
	_ = x[KindExpressionStatement-242]
	_ = x[KindIfStatement-243]
	_ = x[KindDoStatement-244]
	_ = x[KindWhileStatement-245]
	_ = x[KindForStatement-246]
	_ = x[KindForInStatement-247]
	_ = x[KindForOfStatement-248]
	_ = x[KindContinueStatement-249]
	_ = x[KindBreakStatement-250]
	_ = x[KindReturnStatement-251]
	_ = x[KindWithStatement-252]
	_ = x[KindSwitchStatement-253]
	_ = x[KindLabeledStatement-254]
	_ = x[KindThrowStatement-255]
	_ = x[KindTryStatement-256]
	_ = x[KindDebuggerStatement-257]
	_ = x[KindVariableDeclaration-258]
	_ = x[KindVariableDeclarationList-259]
	_ = x[KindFunctionDeclaration-260]
	_ = x[KindClassDeclaration-261]
	_ = x[KindInterfaceDeclaration-262]
	_ = x[KindTypeAliasDeclaration-263]
	_ = x[KindEnumDeclaration-264]
	_ = x[KindModuleDeclaration-265]
	_ = x[KindModuleBlock-266]
	_ = x[KindCaseBlock-267]
	_ = x[KindNamespaceExportDeclaration-268]
	_ = x[KindImportEqualsDeclaration-269]
	_ = x[KindImportDeclaration-270]
	_ = x[KindImportClause-271]
	_ = x[KindNamespaceImport-272]
	_ = x[KindNamedImports-273]
	_ = x[KindImportSpecifier-274]
	_ = x[KindExportAssignment-275]
	_ = x[KindExportDeclaration-276]
	_ = x[KindNamedExports-277]
	_ = x[KindNamespaceExport-278]
	_ = x[KindExportSpecifier-279]
	_ = x[KindMissingDeclaration-280]
	_ = x[KindExternalModuleReference-281]
	_ = x[KindJsxElement-282]
	_ = x[KindJsxSelfClosingElement-283]
	_ = x[KindJsxOpeningElement-284]
	_ = x[KindJsxClosingElement-285]
	_ = x[KindJsxFragment-286]
	_ = x[KindJsxOpeningFragment-287]
	_ = x[KindJsxClosingFragment-288]
	_ = x[KindJsxAttribute-289]
	_ = x[KindJsxAttributes-290]
	_ = x[KindJsxSpreadAttribute-291]
	_ = x[KindJsxExpression-292]
	_ = x[KindJsxNamespacedName-293]
	_ = x[KindCaseClause-294]
	_ = x[KindDefaultClause-295]
	_ = x[KindHeritageClause-296]
	_ = x[KindCatchClause-297]
	_ = x[KindImportAttributes-298]
	_ = x[KindImportAttribute-299]
	_ = x[KindPropertyAssignment-300]
	_ = x[KindShorthandPropertyAssignment-301]
	_ = x[KindSpreadAssignment-302]
	_ = x[KindEnumMember-303]
	_ = x[KindSourceFile-304]
	_ = x[KindBundle-305]
	_ = x[KindJSDocTypeExpression-306]
	_ = x[KindJSDocNameReference-307]
	_ = x[KindJSDocMemberName-308]
	_ = x[KindJSDocAllType-309]
	_ = x[KindJSDocUnknownType-310]
	_ = x[KindJSDocNullableType-311]
	_ = x[KindJSDocNonNullableType-312]
	_ = x[KindJSDocOptionalType-313]
	_ = x[KindJSDocFunctionType-314]
	_ = x[KindJSDocVariadicType-315]
	_ = x[KindJSDocNamepathType-316]
	_ = x[KindJSDoc-317]
	_ = x[KindJSDocText-318]
	_ = x[KindJSDocTypeLiteral-319]
	_ = x[KindJSDocSignature-320]
	_ = x[KindJSDocLink-321]
	_ = x[KindJSDocLinkCode-322]
	_ = x[KindJSDocLinkPlain-323]
	_ = x[KindJSDocTag-324]
	_ = x[KindJSDocAugmentsTag-325]
	_ = x[KindJSDocImplementsTag-326]
	_ = x[KindJSDocAuthorTag-327]
	_ = x[KindJSDocDeprecatedTag-328]
	_ = x[KindJSDocImmediateTag-329]
	_ = x[KindJSDocClassTag-330]
	_ = x[KindJSDocPublicTag-331]
	_ = x[KindJSDocPrivateTag-332]
	_ = x[KindJSDocProtectedTag-333]
	_ = x[KindJSDocReadonlyTag-334]
	_ = x[KindJSDocOverrideTag-335]
	_ = x[KindJSDocCallbackTag-336]
	_ = x[KindJSDocOverloadTag-337]
	_ = x[KindJSDocEnumTag-338]
	_ = x[KindJSDocParameterTag-339]
	_ = x[KindJSDocReturnTag-340]
	_ = x[KindJSDocThisTag-341]
	_ = x[KindJSDocTypeTag-342]
	_ = x[KindJSDocTemplateTag-343]
	_ = x[KindJSDocTypedefTag-344]
	_ = x[KindJSDocSeeTag-345]
	_ = x[KindJSDocPropertyTag-346]
	_ = x[KindJSDocThrowsTag-347]
	_ = x[KindJSDocSatisfiesTag-348]
	_ = x[KindJSDocImportTag-349]
	_ = x[KindSyntaxList-350]
	_ = x[KindNotEmittedStatement-351]
	_ = x[KindPartiallyEmittedExpression-352]
	_ = x[KindCommaListExpression-353]
	_ = x[KindSyntheticReferenceExpression-354]
	_ = x[KindCount-355]
}

const _Kind_name = "KindUnknownKindEndOfFileKindSingleLineCommentTriviaKindMultiLineCommentTriviaKindConflictMarkerTriviaKindNonTextFileMarkerTriviaKindNumericLiteralKindBigIntLiteralKindStringLiteralKindJsxTextKindJsxTextAllWhiteSpacesKindRegularExpressionLiteralKindNoSubstitutionTemplateLiteralKindTemplateHeadKindTemplateMiddleKindTemplateTailKindOpenBraceTokenKindCloseBraceTokenKindOpenParenTokenKindCloseParenTokenKindOpenBracketTokenKindCloseBracketTokenKindDotTokenKindDotDotDotTokenKindSemicolonTokenKindCommaTokenKindQuestionDotTokenKindLessThanTokenKindLessThanSlashTokenKindGreaterThanTokenKindLessThanEqualsTokenKindGreaterThanEqualsTokenKindEqualsEqualsTokenKindExclamationEqualsTokenKindEqualsEqualsEqualsTokenKindExclamationEqualsEqualsTokenKindEqualsGreaterThanTokenKindPlusTokenKindMinusTokenKindAsteriskTokenKindAsteriskAsteriskTokenKindSlashTokenKindPercentTokenKindPlusPlusTokenKindMinusMinusTokenKindLessThanLessThanTokenKindGreaterThanGreaterThanTokenKindGreaterThanGreaterThanGreaterThanTokenKindAmpersandTokenKindBarTokenKindCaretTokenKindExclamationTokenKindTildeTokenKindAmpersandAmpersandTokenKindBarBarTokenKindQuestionTokenKindColonTokenKindAtTokenKindQuestionQuestionTokenKindBacktickTokenKindHashTokenKindEqualsTokenKindPlusEqualsTokenKindMinusEqualsTokenKindAsteriskEqualsTokenKindAsteriskAsteriskEqualsTokenKindSlashEqualsTokenKindPercentEqualsTokenKindLessThanLessThanEqualsTokenKindGreaterThanGreaterThanEqualsTokenKindGreaterThanGreaterThanGreaterThanEqualsTokenKindAmpersandEqualsTokenKindBarEqualsTokenKindBarBarEqualsTokenKindAmpersandAmpersandEqualsTokenKindQuestionQuestionEqualsTokenKindCaretEqualsTokenKindIdentifierKindPrivateIdentifierKindJSDocCommentTextTokenKindBreakKeywordKindCaseKeywordKindCatchKeywordKindClassKeywordKindConstKeywordKindContinueKeywordKindDebuggerKeywordKindDefaultKeywordKindDeleteKeywordKindDoKeywordKindElseKeywordKindEnumKeywordKindExportKeywordKindExtendsKeywordKindFalseKeywordKindFinallyKeywordKindForKeywordKindFunctionKeywordKindIfKeywordKindImportKeywordKindInKeywordKindInstanceOfKeywordKindNewKeywordKindNullKeywordKindReturnKeywordKindSuperKeywordKindSwitchKeywordKindThisKeywordKindThrowKeywordKindTrueKeywordKindTryKeywordKindTypeOfKeywordKindVarKeywordKindVoidKeywordKindWhileKeywordKindWithKeywordKindImplementsKeywordKindInterfaceKeywordKindLetKeywordKindPackageKeywordKindPrivateKeywordKindProtectedKeywordKindPublicKeywordKindStaticKeywordKindYieldKeywordKindAbstractKeywordKindAccessorKeywordKindAsKeywordKindAssertsKeywordKindAssertKeywordKindAnyKeywordKindAsyncKeywordKindAwaitKeywordKindBooleanKeywordKindConstructorKeywordKindDeclareKeywordKindGetKeywordKindImmediateKeywordKindInferKeywordKindIntrinsicKeywordKindIsKeywordKindKeyOfKeywordKindModuleKeywordKindNamespaceKeywordKindNeverKeywordKindOutKeywordKindReadonlyKeywordKindRequireKeywordKindNumberKeywordKindObjectKeywordKindSatisfiesKeywordKindSetKeywordKindStringKeywordKindSymbolKeywordKindTypeKeywordKindUndefinedKeywordKindUniqueKeywordKindUnknownKeywordKindUsingKeywordKindFromKeywordKindGlobalKeywordKindBigIntKeywordKindOverrideKeywordKindOfKeywordKindQualifiedNameKindComputedPropertyNameKindTypeParameterKindParameterKindDecoratorKindPropertySignatureKindPropertyDeclarationKindMethodSignatureKindMethodDeclarationKindClassStaticBlockDeclarationKindConstructorKindGetAccessorKindSetAccessorKindCallSignatureKindConstructSignatureKindIndexSignatureKindTypePredicateKindTypeReferenceKindFunctionTypeKindConstructorTypeKindTypeQueryKindTypeLiteralKindArrayTypeKindTupleTypeKindOptionalTypeKindRestTypeKindUnionTypeKindIntersectionTypeKindConditionalTypeKindInferTypeKindParenthesizedTypeKindThisTypeKindTypeOperatorKindIndexedAccessTypeKindMappedTypeKindLiteralTypeKindNamedTupleMemberKindTemplateLiteralTypeKindTemplateLiteralTypeSpanKindImportTypeKindObjectBindingPatternKindArrayBindingPatternKindBindingElementKindArrayLiteralExpressionKindObjectLiteralExpressionKindPropertyAccessExpressionKindElementAccessExpressionKindCallExpressionKindNewExpressionKindTaggedTemplateExpressionKindTypeAssertionExpressionKindParenthesizedExpressionKindFunctionExpressionKindArrowFunctionKindDeleteExpressionKindTypeOfExpressionKindVoidExpressionKindAwaitExpressionKindPrefixUnaryExpressionKindPostfixUnaryExpressionKindBinaryExpressionKindConditionalExpressionKindTemplateExpressionKindYieldExpressionKindSpreadElementKindClassExpressionKindOmittedExpressionKindExpressionWithTypeArgumentsKindAsExpressionKindNonNullExpressionKindMetaPropertyKindSyntheticExpressionKindSatisfiesExpressionKindTemplateSpanKindSemicolonClassElementKindBlockKindEmptyStatementKindVariableStatementKindExpressionStatementKindIfStatementKindDoStatementKindWhileStatementKindForStatementKindForInStatementKindForOfStatementKindContinueStatementKindBreakStatementKindReturnStatementKindWithStatementKindSwitchStatementKindLabeledStatementKindThrowStatementKindTryStatementKindDebuggerStatementKindVariableDeclarationKindVariableDeclarationListKindFunctionDeclarationKindClassDeclarationKindInterfaceDeclarationKindTypeAliasDeclarationKindEnumDeclarationKindModuleDeclarationKindModuleBlockKindCaseBlockKindNamespaceExportDeclarationKindImportEqualsDeclarationKindImportDeclarationKindImportClauseKindNamespaceImportKindNamedImportsKindImportSpecifierKindExportAssignmentKindExportDeclarationKindNamedExportsKindNamespaceExportKindExportSpecifierKindMissingDeclarationKindExternalModuleReferenceKindJsxElementKindJsxSelfClosingElementKindJsxOpeningElementKindJsxClosingElementKindJsxFragmentKindJsxOpeningFragmentKindJsxClosingFragmentKindJsxAttributeKindJsxAttributesKindJsxSpreadAttributeKindJsxExpressionKindJsxNamespacedNameKindCaseClauseKindDefaultClauseKindHeritageClauseKindCatchClauseKindImportAttributesKindImportAttributeKindPropertyAssignmentKindShorthandPropertyAssignmentKindSpreadAssignmentKindEnumMemberKindSourceFileKindBundleKindJSDocTypeExpressionKindJSDocNameReferenceKindJSDocMemberNameKindJSDocAllTypeKindJSDocUnknownTypeKindJSDocNullableTypeKindJSDocNonNullableTypeKindJSDocOptionalTypeKindJSDocFunctionTypeKindJSDocVariadicTypeKindJSDocNamepathTypeKindJSDocKindJSDocTextKindJSDocTypeLiteralKindJSDocSignatureKindJSDocLinkKindJSDocLinkCodeKindJSDocLinkPlainKindJSDocTagKindJSDocAugmentsTagKindJSDocImplementsTagKindJSDocAuthorTagKindJSDocDeprecatedTagKindJSDocImmediateTagKindJSDocClassTagKindJSDocPublicTagKindJSDocPrivateTagKindJSDocProtectedTagKindJSDocReadonlyTagKindJSDocOverrideTagKindJSDocCallbackTagKindJSDocOverloadTagKindJSDocEnumTagKindJSDocParameterTagKindJSDocReturnTagKindJSDocThisTagKindJSDocTypeTagKindJSDocTemplateTagKindJSDocTypedefTagKindJSDocSeeTagKindJSDocPropertyTagKindJSDocThrowsTagKindJSDocSatisfiesTagKindJSDocImportTagKindSyntaxListKindNotEmittedStatementKindPartiallyEmittedExpressionKindCommaListExpressionKindSyntheticReferenceExpressionKindCount"

var _Kind_index = [...]uint16{0, 11, 24, 51, 77, 101, 128, 146, 163, 180, 191, 216, 244, 277, 293, 311, 327, 345, 364, 382, 401, 421, 442, 454, 472, 490, 504, 524, 541, 563, 583, 606, 632, 653, 679, 706, 738, 764, 777, 791, 808, 833, 847, 863, 880, 899, 924, 955, 997, 1015, 1027, 1041, 1061, 1075, 1102, 1117, 1134, 1148, 1159, 1184, 1201, 1214, 1229, 1248, 1268, 1291, 1322, 1342, 1364, 1395, 1432, 1480, 1504, 1522, 1543, 1576, 1607, 1627, 1641, 1662, 1687, 1703, 1718, 1734, 1750, 1766, 1785, 1804, 1822, 1839, 1852, 1867, 1882, 1899, 1917, 1933, 1951, 1965, 1984, 1997, 2014, 2027, 2048, 2062, 2077, 2094, 2110, 2127, 2142, 2158, 2173, 2187, 2204, 2218, 2233, 2249, 2264, 2285, 2305, 2319, 2337, 2355, 2375, 2392, 2409, 2425, 2444, 2463, 2476, 2494, 2511, 2525, 2541, 2557, 2575, 2597, 2615, 2629, 2649, 2665, 2685, 2698, 2714, 2731, 2751, 2767, 2781, 2800, 2818, 2835, 2852, 2872, 2886, 2903, 2920, 2935, 2955, 2972, 2990, 3006, 3021, 3038, 3055, 3074, 3087, 3104, 3128, 3145, 3158, 3171, 3192, 3215, 3234, 3255, 3286, 3301, 3316, 3331, 3348, 3370, 3388, 3405, 3422, 3438, 3457, 3470, 3485, 3498, 3511, 3527, 3539, 3552, 3572, 3591, 3604, 3625, 3637, 3653, 3674, 3688, 3703, 3723, 3746, 3773, 3787, 3811, 3834, 3852, 3878, 3905, 3933, 3960, 3978, 3995, 4023, 4050, 4077, 4099, 4116, 4136, 4156, 4174, 4193, 4218, 4244, 4264, 4289, 4311, 4330, 4347, 4366, 4387, 4418, 4434, 4455, 4471, 4494, 4517, 4533, 4558, 4567, 4585, 4606, 4629, 4644, 4659, 4677, 4693, 4711, 4729, 4750, 4768, 4787, 4804, 4823, 4843, 4861, 4877, 4898, 4921, 4948, 4971, 4991, 5015, 5039, 5058, 5079, 5094, 5107, 5137, 5164, 5185, 5201, 5220, 5236, 5255, 5275, 5296, 5312, 5331, 5350, 5372, 5399, 5413, 5438, 5459, 5480, 5495, 5517, 5539, 5555, 5572, 5594, 5611, 5632, 5646, 5663, 5681, 5696, 5716, 5735, 5757, 5788, 5808, 5822, 5836, 5846, 5869, 5891, 5910, 5926, 5946, 5967, 5991, 6012, 6033, 6054, 6075, 6084, 6097, 6117, 6135, 6148, 6165, 6183, 6195, 6215, 6237, 6255, 6277, 6298, 6315, 6333, 6352, 6373, 6393, 6413, 6433, 6453, 6469, 6490, 6508, 6524, 6540, 6560, 6579, 6594, 6614, 6632, 6653, 6671, 6685, 6708, 6738, 6761, 6793, 6802}

func (i Kind) String() string {
	if i < 0 || i >= Kind(len(_Kind_index)-1) {
		return "Kind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Kind_name[_Kind_index[i]:_Kind_index[i+1]]
}
