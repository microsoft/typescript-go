package options

import (
	"github.com/microsoft/typescript-go/internal/collections"
	"github.com/microsoft/typescript-go/internal/core"
)

var libMap = collections.NewOrderedMapFromList([]collections.MapEntry[string, string]{
	// JavaScript only
	{"es5", "lib.es5.d.ts"},
	{"es6", "lib.es2015.d.ts"},
	{"es2015", "lib.es2015.d.ts"},
	{"es7", "lib.es2016.d.ts"},
	{"es2016", "lib.es2016.d.ts"},
	{"es2017", "lib.es2017.d.ts"},
	{"es2018", "lib.es2018.d.ts"},
	{"es2019", "lib.es2019.d.ts"},
	{"es2020", "lib.es2020.d.ts"},
	{"es2021", "lib.es2021.d.ts"},
	{"es2022", "lib.es2022.d.ts"},
	{"es2023", "lib.es2023.d.ts"},
	{"es2024", "lib.es2024.d.ts"},
	{"esnext", "lib.esnext.d.ts"},
	// Host only
	{"dom", "lib.dom.d.ts"},
	{"dom.iterable", "lib.dom.iterable.d.ts"},
	{"dom.asynciterable", "lib.dom.asynciterable.d.ts"},
	{"webworker", "lib.webworker.d.ts"},
	{"webworker.importscripts", "lib.webworker.importscripts.d.ts"},
	{"webworker.iterable", "lib.webworker.iterable.d.ts"},
	{"webworker.asynciterable", "lib.webworker.asynciterable.d.ts"},
	{"scripthost", "lib.scripthost.d.ts"},
	// ES2015 Or ESNext By-feature options
	{"es2015.core", "lib.es2015.core.d.ts"},
	{"es2015.collection", "lib.es2015.collection.d.ts"},
	{"es2015.generator", "lib.es2015.generator.d.ts"},
	{"es2015.iterable", "lib.es2015.iterable.d.ts"},
	{"es2015.promise", "lib.es2015.promise.d.ts"},
	{"es2015.proxy", "lib.es2015.proxy.d.ts"},
	{"es2015.reflect", "lib.es2015.reflect.d.ts"},
	{"es2015.symbol", "lib.es2015.symbol.d.ts"},
	{"es2015.symbol.wellknown", "lib.es2015.symbol.wellknown.d.ts"},
	{"es2016.array.include", "lib.es2016.array.include.d.ts"},
	{"es2016.intl", "lib.es2016.intl.d.ts"},
	{"es2017.arraybuffer", "lib.es2017.arraybuffer.d.ts"},
	{"es2017.date", "lib.es2017.date.d.ts"},
	{"es2017.object", "lib.es2017.object.d.ts"},
	{"es2017.sharedmemory", "lib.es2017.sharedmemory.d.ts"},
	{"es2017.string", "lib.es2017.string.d.ts"},
	{"es2017.intl", "lib.es2017.intl.d.ts"},
	{"es2017.typedarrays", "lib.es2017.typedarrays.d.ts"},
	{"es2018.asyncgenerator", "lib.es2018.asyncgenerator.d.ts"},
	{"es2018.asynciterable", "lib.es2018.asynciterable.d.ts"},
	{"es2018.intl", "lib.es2018.intl.d.ts"},
	{"es2018.promise", "lib.es2018.promise.d.ts"},
	{"es2018.regexp", "lib.es2018.regexp.d.ts"},
	{"es2019.array", "lib.es2019.array.d.ts"},
	{"es2019.object", "lib.es2019.object.d.ts"},
	{"es2019.string", "lib.es2019.string.d.ts"},
	{"es2019.symbol", "lib.es2019.symbol.d.ts"},
	{"es2019.intl", "lib.es2019.intl.d.ts"},
	{"es2020.bigint", "lib.es2020.bigint.d.ts"},
	{"es2020.date", "lib.es2020.date.d.ts"},
	{"es2020.promise", "lib.es2020.promise.d.ts"},
	{"es2020.sharedmemory", "lib.es2020.sharedmemory.d.ts"},
	{"es2020.string", "lib.es2020.string.d.ts"},
	{"es2020.symbol.wellknown", "lib.es2020.symbol.wellknown.d.ts"},
	{"es2020.intl", "lib.es2020.intl.d.ts"},
	{"es2020.number", "lib.es2020.number.d.ts"},
	{"es2021.promise", "lib.es2021.promise.d.ts"},
	{"es2021.string", "lib.es2021.string.d.ts"},
	{"es2021.weakref", "lib.es2021.weakref.d.ts"},
	{"es2021.intl", "lib.es2021.intl.d.ts"},
	{"es2022.array", "lib.es2022.array.d.ts"},
	{"es2022.error", "lib.es2022.error.d.ts"},
	{"es2022.intl", "lib.es2022.intl.d.ts"},
	{"es2022.object", "lib.es2022.object.d.ts"},
	{"es2022.string", "lib.es2022.string.d.ts"},
	{"es2022.regexp", "lib.es2022.regexp.d.ts"},
	{"es2023.array", "lib.es2023.array.d.ts"},
	{"es2023.collection", "lib.es2023.collection.d.ts"},
	{"es2023.intl", "lib.es2023.intl.d.ts"},
	{"es2024.arraybuffer", "lib.es2024.arraybuffer.d.ts"},
	{"es2024.collection", "lib.es2024.collection.d.ts"},
	{"es2024.object", "lib.es2024.object.d.ts"},
	{"es2024.promise", "lib.es2024.promise.d.ts"},
	{"es2024.regexp", "lib.es2024.regexp.d.ts"},
	{"es2024.sharedmemory", "lib.es2024.sharedmemory.d.ts"},
	{"es2024.string", "lib.es2024.string.d.ts"},
	{"esnext.array", "lib.esnext.array.d.ts"},
	{"esnext.collection", "lib.esnext.collection.d.ts"},
	{"esnext.symbol", "lib.es2019.symbol.d.ts"},
	{"esnext.asynciterable", "lib.es2018.asynciterable.d.ts"},
	{"esnext.intl", "lib.esnext.intl.d.ts"},
	{"esnext.disposable", "lib.esnext.disposable.d.ts"},
	{"esnext.bigint", "lib.es2020.bigint.d.ts"},
	{"esnext.string", "lib.es2024.string.d.ts"},
	{"esnext.promise", "lib.es2024.promise.d.ts"},
	{"esnext.weakref", "lib.es2021.weakref.d.ts"},
	{"esnext.decorators", "lib.esnext.decorators.d.ts"},
	{"esnext.object", "lib.es2024.object.d.ts"},
	{"esnext.regexp", "lib.es2024.regexp.d.ts"},
	{"esnext.iterator", "lib.esnext.iterator.d.ts"},
	{"esnext.promise", "lib.esnext.promise.d.ts"},
	{"decorators", "lib.decorators.d.ts"},
	{"decorators.legacy", "lib.decorators.legacy.d.ts"},
})

var moduleResolutionOptionMap = collections.NewOrderedMapFromList([]collections.MapEntry[string, core.ModuleResolutionKind]{
	{"node16", core.ModuleResolutionKindNode16},
	{"nodenext", core.ModuleResolutionKindNodeNext},
	{"bundler", core.ModuleResolutionKindBundler},
})

var targetOptionMap = collections.NewOrderedMapFromList([]collections.MapEntry[string, core.ScriptTarget]{
	{"es3", core.ScriptTargetES3},
	{"es5", core.ScriptTargetES5},
	{"es6", core.ScriptTargetES2015},
	{"es2015", core.ScriptTargetES2015},
	{"es2016", core.ScriptTargetES2016},
	{"es2017", core.ScriptTargetES2017},
	{"es2018", core.ScriptTargetES2018},
	{"es2019", core.ScriptTargetES2019},
	{"es2020", core.ScriptTargetES2020},
	{"es2021", core.ScriptTargetES2021},
	{"es2022", core.ScriptTargetES2022},
	{"es2023", core.ScriptTargetES2023},
	// {"es2024", string(core.ScriptTargetES2024},
	{"esnext", core.ScriptTargetESNext},
})

var moduleOptionMap = collections.NewOrderedMapFromList([]collections.MapEntry[string, core.ModuleKind]{
	{"none", core.ModuleKindNone},
	{"commonjs", core.ModuleKindCommonJS},
	{"amd", core.ModuleKindAMD},
	{"system", core.ModuleKindSystem},
	{"umd", core.ModuleKindUMD},
	{"es6", core.ModuleKindES2015},
	{"es2015", core.ModuleKindES2015},
	{"es2020", core.ModuleKindES2020},
	{"es2022", core.ModuleKindES2022},
	{"esnext", core.ModuleKindESNext},
	{"node16", core.ModuleKindNode16},
	{"nodenext", core.ModuleKindNodeNext},
	{"preserve", core.ModuleKindPreserve},
})

var moduleDetectionOptionMap = collections.NewOrderedMapFromList([]collections.MapEntry[string, core.ModuleDetectionKind]{
	{"auto", core.ModuleDetectionKindAuto},
	{"legacy", core.ModuleDetectionKindLegacy},
	{"force", core.ModuleDetectionKindForce},
})

var jsxOptionMap = collections.NewOrderedMapFromList([]collections.MapEntry[string, core.JsxEmit]{
	{"preserve", core.JsxEmitPreserve},
	{"react-native", core.JsxEmitReactNative},
	{"react", core.JsxEmitReact},
	{"react-jsx", core.JsxEmitReactJSX},
	{"react-jsxdev", core.JsxEmitReactJSXDev},
})

var newLineOptionMap = collections.NewOrderedMapFromList([]collections.MapEntry[string, core.NewLineKind]{
	{"crlf", core.NewLineKindCRLF},
	{"lf", core.NewLineKindLF},
})
