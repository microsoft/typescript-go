SourceFile
  ModuleDeclaration
    DeclareKeyword
    Identifier: ' ts'
    ModuleBlock
      ModuleDeclaration
        Identifier: ' server'
        ModuleBlock
          ModuleDeclaration
            Identifier: ' protocol'
            ModuleBlock
              ImportEqualsDeclaration
                ExportKeyword
                Identifier: ' ApplicableRefactorInfo'
                QualifiedName
                  Identifier: ' ts'
                  Identifier: 'ApplicableRefactorInfo'
              ImportEqualsDeclaration
                ExportKeyword
                Identifier: ' ClassificationType'
                QualifiedName
                  Identifier: ' ts'
                  Identifier: 'ClassificationType'
              ImportEqualsDeclaration
                ExportKeyword
                Identifier: ' CompletionsTriggerCharacter'
                QualifiedName
                  Identifier: ' ts'
                  Identifier: 'CompletionsTriggerCharacter'
              ImportEqualsDeclaration
                ExportKeyword
                Identifier: ' CompletionTriggerKind'
                QualifiedName
                  Identifier: ' ts'
                  Identifier: 'CompletionTriggerKind'
              ImportEqualsDeclaration
                ExportKeyword
                Identifier: ' InlayHintKind'
                QualifiedName
                  Identifier: ' ts'
                  Identifier: 'InlayHintKind'
              ImportEqualsDeclaration
                ExportKeyword
                Identifier: ' OrganizeImportsMode'
                QualifiedName
                  Identifier: ' ts'
                  Identifier: 'OrganizeImportsMode'
              ImportEqualsDeclaration
                ExportKeyword
                Identifier: ' RefactorActionInfo'
                QualifiedName
                  Identifier: ' ts'
                  Identifier: 'RefactorActionInfo'
              ImportEqualsDeclaration
                ExportKeyword
                Identifier: ' RefactorTriggerReason'
                QualifiedName
                  Identifier: ' ts'
                  Identifier: 'RefactorTriggerReason'
              ImportEqualsDeclaration
                ExportKeyword
                Identifier: ' RenameInfoFailure'
                QualifiedName
                  Identifier: ' ts'
                  Identifier: 'RenameInfoFailure'
              ImportEqualsDeclaration
                ExportKeyword
                Identifier: ' SemicolonPreference'
                QualifiedName
                  Identifier: ' ts'
                  Identifier: 'SemicolonPreference'
              ImportEqualsDeclaration
                ExportKeyword
                Identifier: ' SignatureHelpCharacterTypedReason'
                QualifiedName
                  Identifier: ' ts'
                  Identifier: 'SignatureHelpCharacterTypedReason'
              ImportEqualsDeclaration
                ExportKeyword
                Identifier: ' SignatureHelpInvokedReason'
                QualifiedName
                  Identifier: ' ts'
                  Identifier: 'SignatureHelpInvokedReason'
              ImportEqualsDeclaration
                ExportKeyword
                Identifier: ' SignatureHelpParameter'
                QualifiedName
                  Identifier: ' ts'
                  Identifier: 'SignatureHelpParameter'
              ImportEqualsDeclaration
                ExportKeyword
                Identifier: ' SignatureHelpRetriggerCharacter'
                QualifiedName
                  Identifier: ' ts'
                  Identifier: 'SignatureHelpRetriggerCharacter'
              ImportEqualsDeclaration
                ExportKeyword
                Identifier: ' SignatureHelpRetriggeredReason'
                QualifiedName
                  Identifier: ' ts'
                  Identifier: 'SignatureHelpRetriggeredReason'
              ImportEqualsDeclaration
                ExportKeyword
                Identifier: ' SignatureHelpTriggerCharacter'
                QualifiedName
                  Identifier: ' ts'
                  Identifier: 'SignatureHelpTriggerCharacter'
              ImportEqualsDeclaration
                ExportKeyword
                Identifier: ' SignatureHelpTriggerReason'
                QualifiedName
                  Identifier: ' ts'
                  Identifier: 'SignatureHelpTriggerReason'
              ImportEqualsDeclaration
                ExportKeyword
                Identifier: ' SymbolDisplayPart'
                QualifiedName
                  Identifier: ' ts'
                  Identifier: 'SymbolDisplayPart'
              ImportEqualsDeclaration
                ExportKeyword
                Identifier: ' UserPreferences'
                QualifiedName
                  Identifier: ' ts'
                  Identifier: 'UserPreferences'
              TypeAliasDeclaration
                Identifier: ' ChangePropertyTypes'
                TypeParameter
                  Identifier: '
                T'
                TypeParameter
                  Identifier: '
                Substitutions'
                  MappedType
                    TypeParameter
                      Identifier: 'K'
                      TypeOperator
                        TypeReference
                          Identifier: ' T'
                    QuestionToken
                    AnyKeyword
                MappedType
                  TypeParameter
                    Identifier: 'K'
                    TypeOperator
                      TypeReference
                        Identifier: ' T'
                  ConditionalType
                    TypeReference
                      Identifier: ' K'
                    TypeOperator
                      TypeReference
                        Identifier: ' Substitutions'
                    IndexedAccessType
                      TypeReference
                        Identifier: ' Substitutions'
                      TypeReference
                        Identifier: 'K'
                    IndexedAccessType
                      TypeReference
                        Identifier: ' T'
                      TypeReference
                        Identifier: 'K'
              TypeAliasDeclaration
                Identifier: ' ChangeStringIndexSignature'
                TypeParameter
                  Identifier: 'T'
                TypeParameter
                  Identifier: ' NewStringIndexSignatureType'
                MappedType
                  TypeParameter
                    Identifier: 'K'
                    TypeOperator
                      TypeReference
                        Identifier: ' T'
                  ConditionalType
                    StringKeyword
                    TypeReference
                      Identifier: ' K'
                    TypeReference
                      Identifier: ' NewStringIndexSignatureType'
                    IndexedAccessType
                      TypeReference
                        Identifier: ' T'
                      TypeReference
                        Identifier: 'K'
              EnumDeclaration
                ExportKeyword
                Identifier: ' CommandTypes'
                EnumMember
                  Identifier: '
                JsxClosingTag'
                  StringLiteral
                EnumMember
                  Identifier: '
                LinkedEditingRange'
                  StringLiteral
                EnumMember
                  Identifier: '
                Brace'
                  StringLiteral
                EnumMember
                  Identifier: '
                BraceCompletion'
                  StringLiteral
                EnumMember
                  Identifier: '
                GetSpanOfEnclosingComment'
                  StringLiteral
                EnumMember
                  Identifier: '
                Change'
                  StringLiteral
                EnumMember
                  Identifier: '
                Close'
                  StringLiteral
                EnumMember
                  Identifier: '
                /** @deprecated Prefer CompletionInfo -- see comment on CompletionsResponse */
                Completions'
                  StringLiteral
                EnumMember
                  Identifier: '
                CompletionInfo'
                  StringLiteral
                EnumMember
                  Identifier: '
                CompletionDetails'
                  StringLiteral
                EnumMember
                  Identifier: '
                CompileOnSaveAffectedFileList'
                  StringLiteral
                EnumMember
                  Identifier: '
                CompileOnSaveEmitFile'
                  StringLiteral
                EnumMember
                  Identifier: '
                Configure'
                  StringLiteral
                EnumMember
                  Identifier: '
                Definition'
                  StringLiteral
                EnumMember
                  Identifier: '
                DefinitionAndBoundSpan'
                  StringLiteral
                EnumMember
                  Identifier: '
                Implementation'
                  StringLiteral
                EnumMember
                  Identifier: '
                Exit'
                  StringLiteral
                EnumMember
                  Identifier: '
                FileReferences'
                  StringLiteral
                EnumMember
                  Identifier: '
                Format'
                  StringLiteral
                EnumMember
                  Identifier: '
                Formatonkey'
                  StringLiteral
                EnumMember
                  Identifier: '
                Geterr'
                  StringLiteral
                EnumMember
                  Identifier: '
                GeterrForProject'
                  StringLiteral
                EnumMember
                  Identifier: '
                SemanticDiagnosticsSync'
                  StringLiteral
                EnumMember
                  Identifier: '
                SyntacticDiagnosticsSync'
                  StringLiteral
                EnumMember
                  Identifier: '
                SuggestionDiagnosticsSync'
                  StringLiteral
                EnumMember
                  Identifier: '
                NavBar'
                  StringLiteral
                EnumMember
                  Identifier: '
                Navto'
                  StringLiteral
                EnumMember
                  Identifier: '
                NavTree'
                  StringLiteral
                EnumMember
                  Identifier: '
                NavTreeFull'
                  StringLiteral
                EnumMember
                  Identifier: '
                DocumentHighlights'
                  StringLiteral
                EnumMember
                  Identifier: '
                Open'
                  StringLiteral
                EnumMember
                  Identifier: '
                Quickinfo'
                  StringLiteral
                EnumMember
                  Identifier: '
                References'
                  StringLiteral
                EnumMember
                  Identifier: '
                Reload'
                  StringLiteral
                EnumMember
                  Identifier: '
                Rename'
                  StringLiteral
                EnumMember
                  Identifier: '
                Saveto'
                  StringLiteral
                EnumMember
                  Identifier: '
                SignatureHelp'
                  StringLiteral
                EnumMember
                  Identifier: '
                FindSourceDefinition'
                  StringLiteral
                EnumMember
                  Identifier: '
                Status'
                  StringLiteral
                EnumMember
                  Identifier: '
                TypeDefinition'
                  StringLiteral
                EnumMember
                  Identifier: '
                ProjectInfo'
                  StringLiteral
                EnumMember
                  Identifier: '
                ReloadProjects'
                  StringLiteral
                EnumMember
                  Identifier: '
                Unknown'
                  StringLiteral
                EnumMember
                  Identifier: '
                OpenExternalProject'
                  StringLiteral
                EnumMember
                  Identifier: '
                OpenExternalProjects'
                  StringLiteral
                EnumMember
                  Identifier: '
                CloseExternalProject'
                  StringLiteral
                EnumMember
                  Identifier: '
                UpdateOpen'
                  StringLiteral
                EnumMember
                  Identifier: '
                GetOutliningSpans'
                  StringLiteral
                EnumMember
                  Identifier: '
                TodoComments'
                  StringLiteral
                EnumMember
                  Identifier: '
                Indentation'
                  StringLiteral
                EnumMember
                  Identifier: '
                DocCommentTemplate'
                  StringLiteral
                EnumMember
                  Identifier: '
                CompilerOptionsForInferredProjects'
                  StringLiteral
                EnumMember
                  Identifier: '
                GetCodeFixes'
                  StringLiteral
                EnumMember
                  Identifier: '
                GetCombinedCodeFix'
                  StringLiteral
                EnumMember
                  Identifier: '
                ApplyCodeActionCommand'
                  StringLiteral
                EnumMember
                  Identifier: '
                GetSupportedCodeFixes'
                  StringLiteral
                EnumMember
                  Identifier: '
                GetApplicableRefactors'
                  StringLiteral
                EnumMember
                  Identifier: '
                GetEditsForRefactor'
                  StringLiteral
                EnumMember
                  Identifier: '
                GetMoveToRefactoringFileSuggestions'
                  StringLiteral
                EnumMember
                  Identifier: '
                PreparePasteEdits'
                  StringLiteral
                EnumMember
                  Identifier: '
                GetPasteEdits'
                  StringLiteral
                EnumMember
                  Identifier: '
                OrganizeImports'
                  StringLiteral
                EnumMember
                  Identifier: '
                GetEditsForFileRename'
                  StringLiteral
                EnumMember
                  Identifier: '
                ConfigurePlugin'
                  StringLiteral
                EnumMember
                  Identifier: '
                SelectionRange'
                  StringLiteral
                EnumMember
                  Identifier: '
                ToggleLineComment'
                  StringLiteral
                EnumMember
                  Identifier: '
                ToggleMultilineComment'
                  StringLiteral
                EnumMember
                  Identifier: '
                CommentSelection'
                  StringLiteral
                EnumMember
                  Identifier: '
                UncommentSelection'
                  StringLiteral
                EnumMember
                  Identifier: '
                PrepareCallHierarchy'
                  StringLiteral
                EnumMember
                  Identifier: '
                ProvideCallHierarchyIncomingCalls'
                  StringLiteral
                EnumMember
                  Identifier: '
                ProvideCallHierarchyOutgoingCalls'
                  StringLiteral
                EnumMember
                  Identifier: '
                ProvideInlayHints'
                  StringLiteral
                EnumMember
                  Identifier: '
                WatchChange'
                  StringLiteral
                EnumMember
                  Identifier: '
                MapCode'
                  StringLiteral
                EnumMember
                  Identifier: '
                CopilotRelated'
                  StringLiteral
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' Message'
                PropertySignature
                  Identifier: '
                /**
                 * Sequence number of the message
                 */
                seq'
                  NumberKeyword
                PropertySignature
                  Identifier: '
                /**
                 * One of "request", "response", or "event"
                 */
                type'
                  UnionType
                    LiteralType
                      StringLiteral
                    LiteralType
                      StringLiteral
                    LiteralType
                      StringLiteral
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' Request'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Message'
                PropertySignature
                  Identifier: '
                type'
                  LiteralType
                    StringLiteral
                PropertySignature
                  Identifier: '
                /**
                 * The command to execute
                 */
                command'
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * Object containing arguments for the command
                 */
                arguments'
                  QuestionToken
                  AnyKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ReloadProjectsRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Request'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'ReloadProjects'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' Event'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Message'
                PropertySignature
                  Identifier: '
                type'
                  LiteralType
                    StringLiteral
                PropertySignature
                  Identifier: '
                /**
                 * Name of event
                 */
                event'
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * Event-specific information
                 */
                body'
                  QuestionToken
                  AnyKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' Response'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Message'
                PropertySignature
                  Identifier: '
                type'
                  LiteralType
                    StringLiteral
                PropertySignature
                  Identifier: '
                /**
                 * Sequence number of the request message.
                 */
                request_seq'
                  NumberKeyword
                PropertySignature
                  Identifier: '
                /**
                 * Outcome of the request.
                 */
                success'
                  BooleanKeyword
                PropertySignature
                  Identifier: '
                /**
                 * The command requested.
                 */
                command'
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * If success === false, this should always be provided.
                 * Otherwise, may (or may not) contain a success message.
                 */
                message'
                  QuestionToken
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * Contains message body if success === true.
                 */
                body'
                  QuestionToken
                  AnyKeyword
                PropertySignature
                  Identifier: '
                /**
                 * Contains extra information that plugin can include to be passed on
                 */
                metadata'
                  QuestionToken
                  UnknownKeyword
                PropertySignature
                  Identifier: '
                /**
                 * Exposes information about the performance of this request-response pair.
                 */
                performanceData'
                  QuestionToken
                  TypeReference
                    Identifier: ' PerformanceData'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' PerformanceData'
                PropertySignature
                  Identifier: '
                /**
                 * Time spent updating the program graph, in milliseconds.
                 */
                updateGraphDurationMs'
                  QuestionToken
                  NumberKeyword
                PropertySignature
                  Identifier: '
                /**
                 * The time spent creating or updating the auto-import program, in milliseconds.
                 */
                createAutoImportProviderProgramDurationMs'
                  QuestionToken
                  NumberKeyword
                PropertySignature
                  Identifier: '
                /**
                 * The time spent computing diagnostics, in milliseconds.
                 */
                diagnosticsDuration'
                  QuestionToken
                  ArrayType
                    TypeReference
                      Identifier: ' FileDiagnosticPerformanceData'
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' DiagnosticPerformanceData'
                MappedType
                  TypeParameter
                    Identifier: 'Kind'
                    TypeReference
                      Identifier: ' DiagnosticEventKind'
                  QuestionToken
                  NumberKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' FileDiagnosticPerformanceData'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' DiagnosticPerformanceData'
                PropertySignature
                  Identifier: '
                /**
                 * The file for which the performance data is reported.
                 */
                file'
                  StringKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' FileRequestArgs'
                PropertySignature
                  Identifier: '
                /**
                 * The file for the request (absolute pathname required).
                 */
                file'
                  StringKeyword
                PropertySignature
                  Identifier: '
                projectFileName'
                  QuestionToken
                  StringKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' StatusRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Request'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'Status'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' StatusResponseBody'
                PropertySignature
                  Identifier: '
                /**
                 * The TypeScript version (`ts.version`).
                 */
                version'
                  StringKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' StatusResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  TypeReference
                    Identifier: ' StatusResponseBody'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' DocCommentTemplateRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'DocCommentTemplate'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' DocCommandTemplateResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  TypeReference
                    Identifier: ' TextInsertion'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' TodoCommentRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'TodoComments'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' TodoCommentRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' TodoCommentRequestArgs'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequestArgs'
                PropertySignature
                  Identifier: '
                /**
                 * Array of target TodoCommentDescriptors that describes TODO comments to be found
                 */
                descriptors'
                  ArrayType
                    TypeReference
                      Identifier: ' TodoCommentDescriptor'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' TodoCommentsResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  ArrayType
                    TypeReference
                      Identifier: ' TodoComment'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' SpanOfEnclosingCommentRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'GetSpanOfEnclosingComment'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' SpanOfEnclosingCommentRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' SpanOfEnclosingCommentRequestArgs'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequestArgs'
                PropertySignature
                  Identifier: '
                /**
                 * Requires that the enclosing span be a multi-line comment, or else the request returns undefined.
                 */
                onlyMultiLine'
                  BooleanKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' OutliningSpansRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'GetOutliningSpans'
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' OutliningSpan'
                TypeReference
                  Identifier: ' ChangePropertyTypes'
                  TypeReference
                    QualifiedName
                      Identifier: 'ts'
                      Identifier: 'OutliningSpan'
                  TypeLiteral
                    PropertySignature
                      Identifier: '
                textSpan'
                      TypeReference
                        Identifier: ' TextSpan'
                    PropertySignature
                      Identifier: '
                hintSpan'
                      TypeReference
                        Identifier: ' TextSpan'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' OutliningSpansResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  ArrayType
                    TypeReference
                      Identifier: ' OutliningSpan'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' IndentationRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'Indentation'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' IndentationRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' IndentationResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  TypeReference
                    Identifier: ' IndentationResult'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' IndentationResult'
                PropertySignature
                  Identifier: '
                /**
                 * The base position in the document that the indent should be relative to
                 */
                position'
                  NumberKeyword
                PropertySignature
                  Identifier: '
                /**
                 * The number of columns the indent should be at relative to the position's column.
                 */
                indentation'
                  NumberKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' IndentationRequestArgs'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequestArgs'
                PropertySignature
                  Identifier: '
                /**
                 * An optional set of settings to be used when computing indentation.
                 * If argument is omitted - then it will use settings for file that were previously set via 'configure' request or global settings.
                 */
                options'
                  QuestionToken
                  TypeReference
                    Identifier: ' EditorSettings'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ProjectInfoRequestArgs'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequestArgs'
                PropertySignature
                  Identifier: '
                /**
                 * Indicate if the file name list of the project is needed
                 */
                needFileNameList'
                  BooleanKeyword
                PropertySignature
                  Identifier: '
                /**
                 * if true returns details about default configured project calculation
                 */
                needDefaultConfiguredProjectInfo'
                  QuestionToken
                  BooleanKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ProjectInfoRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Request'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'ProjectInfo'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' ProjectInfoRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CompilerOptionsDiagnosticsRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Request'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' CompilerOptionsDiagnosticsRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CompilerOptionsDiagnosticsRequestArgs'
                PropertySignature
                  Identifier: '
                /**
                 * Name of the project to retrieve compiler options diagnostics.
                 */
                projectFileName'
                  StringKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' DefaultConfiguredProjectInfo'
                PropertySignature
                  Identifier: '
                /** List of config files looked and did not match because file was not part of root file names */
                notMatchedByConfig'
                  QuestionToken
                  TypeOperator
                    ArrayType
                      StringKeyword
                PropertySignature
                  Identifier: '
                /** List of projects which were loaded but file was not part of the project or is file from referenced project */
                notInProject'
                  QuestionToken
                  TypeOperator
                    ArrayType
                      StringKeyword
                PropertySignature
                  Identifier: '
                /** Configured project used as default */
                defaultProject'
                  QuestionToken
                  StringKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ProjectInfo'
                PropertySignature
                  Identifier: '
                /**
                 * For configured project, this is the normalized path of the 'tsconfig.json' file
                 * For inferred project, this is undefined
                 */
                configFileName'
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * The list of normalized file name in the project, including 'lib.d.ts'
                 */
                fileNames'
                  QuestionToken
                  ArrayType
                    StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * Indicates if the project has a active language service instance
                 */
                languageServiceDisabled'
                  QuestionToken
                  BooleanKeyword
                PropertySignature
                  Identifier: '
                /**
                 * Information about default project
                 */
                configuredProjectInfo'
                  QuestionToken
                  TypeReference
                    Identifier: ' DefaultConfiguredProjectInfo'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' DiagnosticWithLinePosition'
                PropertySignature
                  Identifier: '
                message'
                  StringKeyword
                PropertySignature
                  Identifier: '
                start'
                  NumberKeyword
                PropertySignature
                  Identifier: '
                length'
                  NumberKeyword
                PropertySignature
                  Identifier: '
                startLocation'
                  TypeReference
                    Identifier: ' Location'
                PropertySignature
                  Identifier: '
                endLocation'
                  TypeReference
                    Identifier: ' Location'
                PropertySignature
                  Identifier: '
                category'
                  StringKeyword
                PropertySignature
                  Identifier: '
                code'
                  NumberKeyword
                PropertySignature
                  Identifier: '
                /** May store more in future. For now, this will simply be `true` to indicate when a diagnostic is an unused-identifier diagnostic. */
                reportsUnnecessary'
                  QuestionToken
                  TypeLiteral
                PropertySignature
                  Identifier: '
                reportsDeprecated'
                  QuestionToken
                  TypeLiteral
                PropertySignature
                  Identifier: '
                relatedInformation'
                  QuestionToken
                  ArrayType
                    TypeReference
                      Identifier: ' DiagnosticRelatedInformation'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ProjectInfoResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  TypeReference
                    Identifier: ' ProjectInfo'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' FileRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Request'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' FileRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' FileLocationRequestArgs'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequestArgs'
                PropertySignature
                  Identifier: '
                /**
                 * The line number for the request (1-based).
                 */
                line'
                  NumberKeyword
                PropertySignature
                  Identifier: '
                /**
                 * The character offset (on the line) for the request (1-based).
                 */
                offset'
                  NumberKeyword
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' FileLocationOrRangeRequestArgs'
                UnionType
                  TypeReference
                    Identifier: ' FileLocationRequestArgs'
                  TypeReference
                    Identifier: ' FileRangeRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' GetApplicableRefactorsRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Request'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'GetApplicableRefactors'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' GetApplicableRefactorsRequestArgs'
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' GetApplicableRefactorsRequestArgs'
                IntersectionType
                  TypeReference
                    Identifier: ' FileLocationOrRangeRequestArgs'
                  TypeLiteral
                    PropertySignature
                      Identifier: '
                triggerReason'
                      QuestionToken
                      TypeReference
                        Identifier: ' RefactorTriggerReason'
                    PropertySignature
                      Identifier: '
                kind'
                      QuestionToken
                      StringKeyword
                    PropertySignature
                      Identifier: '
                /**
                 * Include refactor actions that require additional arguments to be passed when
                 * calling 'GetEditsForRefactor'. When true, clients should inspect the
                 * `isInteractive` property of each returned `RefactorActionInfo`
                 * and ensure they are able to collect the appropriate arguments for any
                 * interactive refactor before offering it.
                 */
                includeInteractiveActions'
                      QuestionToken
                      BooleanKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' GetApplicableRefactorsResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  ArrayType
                    TypeReference
                      Identifier: ' ApplicableRefactorInfo'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' GetMoveToRefactoringFileSuggestionsRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Request'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'GetMoveToRefactoringFileSuggestions'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' GetMoveToRefactoringFileSuggestionsRequestArgs'
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' GetMoveToRefactoringFileSuggestionsRequestArgs'
                IntersectionType
                  TypeReference
                    Identifier: ' FileLocationOrRangeRequestArgs'
                  TypeLiteral
                    PropertySignature
                      Identifier: '
                kind'
                      QuestionToken
                      StringKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' GetMoveToRefactoringFileSuggestions'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  TypeLiteral
                    PropertySignature
                      Identifier: '
                    newFileName'
                      StringKeyword
                    PropertySignature
                      Identifier: '
                    files'
                      ArrayType
                        StringKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' PreparePasteEditsRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'PreparePasteEdits'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' PreparePasteEditsRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' PreparePasteEditsRequestArgs'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequestArgs'
                PropertySignature
                  Identifier: '
                copiedTextSpan'
                  ArrayType
                    TypeReference
                      Identifier: ' TextSpan'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' PreparePasteEditsResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  BooleanKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' GetPasteEditsRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Request'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'GetPasteEdits'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' GetPasteEditsRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' GetPasteEditsRequestArgs'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequestArgs'
                PropertySignature
                  Identifier: '
                /** The text that gets pasted in a file.  */
                pastedText'
                  ArrayType
                    StringKeyword
                PropertySignature
                  Identifier: '
                /** Locations of where the `pastedText` gets added in a file. If the length of the `pastedText` and `pastedLocations` are not the same,
                 *  then the `pastedText` is combined into one and added at all the `pastedLocations`.
                 */
                pasteLocations'
                  ArrayType
                    TypeReference
                      Identifier: ' TextSpan'
                PropertySignature
                  Identifier: '
                /** The source location of each `pastedText`. If present, the length of `spans` must be equal to the length of `pastedText`. */
                copiedFrom'
                  QuestionToken
                  TypeLiteral
                    PropertySignature
                      Identifier: '
                    file'
                      StringKeyword
                    PropertySignature
                      Identifier: '
                    spans'
                      ArrayType
                        TypeReference
                          Identifier: ' TextSpan'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' GetPasteEditsResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  TypeReference
                    Identifier: ' PasteEditsAction'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' PasteEditsAction'
                PropertySignature
                  Identifier: '
                edits'
                  ArrayType
                    TypeReference
                      Identifier: ' FileCodeEdits'
                PropertySignature
                  Identifier: '
                fixId'
                  QuestionToken
                  TypeLiteral
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' GetEditsForRefactorRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Request'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'GetEditsForRefactor'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' GetEditsForRefactorRequestArgs'
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' GetEditsForRefactorRequestArgs'
                IntersectionType
                  TypeReference
                    Identifier: ' FileLocationOrRangeRequestArgs'
                  TypeLiteral
                    PropertySignature
                      Identifier: '
                refactor'
                      StringKeyword
                    PropertySignature
                      Identifier: '
                action'
                      StringKeyword
                    PropertySignature
                      Identifier: '
                interactiveRefactorArguments'
                      QuestionToken
                      TypeReference
                        Identifier: ' InteractiveRefactorArguments'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' GetEditsForRefactorResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  TypeReference
                    Identifier: ' RefactorEditInfo'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' RefactorEditInfo'
                PropertySignature
                  Identifier: '
                edits'
                  ArrayType
                    TypeReference
                      Identifier: ' FileCodeEdits'
                PropertySignature
                  Identifier: '
                /**
                 * An optional location where the editor should start a rename operation once
                 * the refactoring edits have been applied
                 */
                renameLocation'
                  QuestionToken
                  TypeReference
                    Identifier: ' Location'
                PropertySignature
                  Identifier: '
                renameFilename'
                  QuestionToken
                  StringKeyword
                PropertySignature
                  Identifier: '
                notApplicableReason'
                  QuestionToken
                  StringKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' OrganizeImportsRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Request'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'OrganizeImports'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' OrganizeImportsRequestArgs'
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' OrganizeImportsScope'
                TypeReference
                  Identifier: ' GetCombinedCodeFixScope'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' OrganizeImportsRequestArgs'
                PropertySignature
                  Identifier: '
                scope'
                  TypeReference
                    Identifier: ' OrganizeImportsScope'
                PropertySignature
                  Identifier: '
                /** @deprecated Use `mode` instead */
                skipDestructiveCodeActions'
                  QuestionToken
                  BooleanKeyword
                PropertySignature
                  Identifier: '
                mode'
                  QuestionToken
                  TypeReference
                    Identifier: ' OrganizeImportsMode'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' OrganizeImportsResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  TypeOperator
                    ArrayType
                      TypeReference
                        Identifier: ' FileCodeEdits'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' GetEditsForFileRenameRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Request'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'GetEditsForFileRename'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' GetEditsForFileRenameRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' GetEditsForFileRenameRequestArgs'
                PropertySignature
                  ReadonlyKeyword
                  Identifier: ' oldFilePath'
                  StringKeyword
                PropertySignature
                  ReadonlyKeyword
                  Identifier: ' newFilePath'
                  StringKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' GetEditsForFileRenameResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  TypeOperator
                    ArrayType
                      TypeReference
                        Identifier: ' FileCodeEdits'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CodeFixRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Request'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'GetCodeFixes'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' CodeFixRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' GetCombinedCodeFixRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Request'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'GetCombinedCodeFix'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' GetCombinedCodeFixRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' GetCombinedCodeFixResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  TypeReference
                    Identifier: ' CombinedCodeActions'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ApplyCodeActionCommandRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Request'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'ApplyCodeActionCommand'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' ApplyCodeActionCommandRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ApplyCodeActionCommandResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' FileRangeRequestArgs'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequestArgs'
                  ExpressionWithTypeArguments
                    Identifier: ' FileRange'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CodeFixRequestArgs'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRangeRequestArgs'
                PropertySignature
                  Identifier: '
                /**
                 * Errorcodes we want to get the fixes for.
                 */
                errorCodes'
                  TypeOperator
                    ArrayType
                      NumberKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' GetCombinedCodeFixRequestArgs'
                PropertySignature
                  Identifier: '
                scope'
                  TypeReference
                    Identifier: ' GetCombinedCodeFixScope'
                PropertySignature
                  Identifier: '
                fixId'
                  TypeLiteral
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' GetCombinedCodeFixScope'
                PropertySignature
                  Identifier: '
                type'
                  LiteralType
                    StringLiteral
                PropertySignature
                  Identifier: '
                args'
                  TypeReference
                    Identifier: ' FileRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ApplyCodeActionCommandRequestArgs'
                PropertySignature
                  Identifier: '
                /** May also be an array of commands. */
                command'
                  TypeLiteral
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' GetCodeFixesResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  ArrayType
                    TypeReference
                      Identifier: ' CodeAction'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' FileLocationRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequest'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' FileLocationRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' GetSupportedCodeFixesRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Request'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'GetSupportedCodeFixes'
                PropertySignature
                  Identifier: '
                arguments'
                  QuestionToken
                  TypeReference
                    Identifier: ' Partial'
                    TypeReference
                      Identifier: 'FileRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' GetSupportedCodeFixesResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                /**
                 * List of error codes supported by the server.
                 */
                body'
                  QuestionToken
                  ArrayType
                    StringKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' EncodedSemanticClassificationsRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequest'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' EncodedSemanticClassificationsRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' EncodedSemanticClassificationsRequestArgs'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequestArgs'
                PropertySignature
                  Identifier: '
                /**
                 * Start position of the span.
                 */
                start'
                  NumberKeyword
                PropertySignature
                  Identifier: '
                /**
                 * Length of the span.
                 */
                length'
                  NumberKeyword
                PropertySignature
                  Identifier: '
                /**
                 * Optional parameter for the semantic highlighting response, if absent it
                 * defaults to "original".
                 */
                format'
                  QuestionToken
                  UnionType
                    LiteralType
                      StringLiteral
                    LiteralType
                      StringLiteral
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' EncodedSemanticClassificationsResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  TypeReference
                    Identifier: ' EncodedSemanticClassificationsResponseBody'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' EncodedSemanticClassificationsResponseBody'
                PropertySignature
                  Identifier: '
                endOfLineState'
                  TypeReference
                    Identifier: ' EndOfLineState'
                PropertySignature
                  Identifier: '
                spans'
                  ArrayType
                    NumberKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' DocumentHighlightsRequestArgs'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequestArgs'
                PropertySignature
                  Identifier: '
                /**
                 * List of files to search for document highlights.
                 */
                filesToSearch'
                  ArrayType
                    StringKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' DefinitionRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'Definition'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' DefinitionAndBoundSpanRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequest'
                PropertySignature
                  ReadonlyKeyword
                  Identifier: ' command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'DefinitionAndBoundSpan'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' FindSourceDefinitionRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequest'
                PropertySignature
                  ReadonlyKeyword
                  Identifier: ' command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'FindSourceDefinition'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' DefinitionAndBoundSpanResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  ReadonlyKeyword
                  Identifier: ' body'
                  TypeReference
                    Identifier: ' DefinitionInfoAndBoundSpan'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' TypeDefinitionRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'TypeDefinition'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ImplementationRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'Implementation'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' Location'
                PropertySignature
                  Identifier: '
                line'
                  NumberKeyword
                PropertySignature
                  Identifier: '
                offset'
                  NumberKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' TextSpan'
                PropertySignature
                  Identifier: '
                /**
                 * First character of the definition.
                 */
                start'
                  TypeReference
                    Identifier: ' Location'
                PropertySignature
                  Identifier: '
                /**
                 * One character past last character of the definition.
                 */
                end'
                  TypeReference
                    Identifier: ' Location'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' FileSpan'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' TextSpan'
                PropertySignature
                  Identifier: '
                /**
                 * File containing text span.
                 */
                file'
                  StringKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' JSDocTagInfo'
                PropertySignature
                  Identifier: '
                /** Name of the JSDoc tag */
                name'
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * Comment text after the JSDoc tag -- the text after the tag name until the next tag or end of comment
                 * Display parts when UserPreferences.displayPartsForJSDoc is true, flattened to string otherwise.
                 */
                text'
                  QuestionToken
                  UnionType
                    StringKeyword
                    ArrayType
                      TypeReference
                        Identifier: ' SymbolDisplayPart'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' TextSpanWithContext'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' TextSpan'
                PropertySignature
                  Identifier: '
                contextStart'
                  QuestionToken
                  TypeReference
                    Identifier: ' Location'
                PropertySignature
                  Identifier: '
                contextEnd'
                  QuestionToken
                  TypeReference
                    Identifier: ' Location'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' FileSpanWithContext'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileSpan'
                  ExpressionWithTypeArguments
                    Identifier: ' TextSpanWithContext'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' DefinitionInfo'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileSpanWithContext'
                PropertySignature
                  Identifier: '
                /**
                 * When true, the file may or may not exist.
                 */
                unverified'
                  QuestionToken
                  BooleanKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' DefinitionInfoAndBoundSpan'
                PropertySignature
                  Identifier: '
                definitions'
                  TypeOperator
                    ArrayType
                      TypeReference
                        Identifier: ' DefinitionInfo'
                PropertySignature
                  Identifier: '
                textSpan'
                  TypeReference
                    Identifier: ' TextSpan'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' DefinitionResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  ArrayType
                    TypeReference
                      Identifier: ' DefinitionInfo'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' DefinitionInfoAndBoundSpanResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  TypeReference
                    Identifier: ' DefinitionInfoAndBoundSpan'
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' DefinitionInfoAndBoundSpanReponse'
                TypeReference
                  Identifier: ' DefinitionInfoAndBoundSpanResponse'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' TypeDefinitionResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  ArrayType
                    TypeReference
                      Identifier: ' FileSpanWithContext'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ImplementationResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  ArrayType
                    TypeReference
                      Identifier: ' FileSpanWithContext'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' BraceCompletionRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'BraceCompletion'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' BraceCompletionRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' BraceCompletionRequestArgs'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequestArgs'
                PropertySignature
                  Identifier: '
                /**
                 * Kind of opening brace
                 */
                openingBrace'
                  StringKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' JsxClosingTagRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequest'
                PropertySignature
                  ReadonlyKeyword
                  Identifier: ' command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'JsxClosingTag'
                PropertySignature
                  ReadonlyKeyword
                  Identifier: ' arguments'
                  TypeReference
                    Identifier: ' JsxClosingTagRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' JsxClosingTagRequestArgs'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' JsxClosingTagResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  ReadonlyKeyword
                  Identifier: ' body'
                  TypeReference
                    Identifier: ' TextInsertion'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' LinkedEditingRangeRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequest'
                PropertySignature
                  ReadonlyKeyword
                  Identifier: ' command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'LinkedEditingRange'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' LinkedEditingRangesBody'
                PropertySignature
                  Identifier: '
                ranges'
                  ArrayType
                    TypeReference
                      Identifier: ' TextSpan'
                PropertySignature
                  Identifier: '
                wordPattern'
                  QuestionToken
                  StringKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' LinkedEditingRangeResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  ReadonlyKeyword
                  Identifier: ' body'
                  TypeReference
                    Identifier: ' LinkedEditingRangesBody'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' DocumentHighlightsRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'DocumentHighlights'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' DocumentHighlightsRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' HighlightSpan'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' TextSpanWithContext'
                PropertySignature
                  Identifier: '
                kind'
                  TypeReference
                    Identifier: ' HighlightSpanKind'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' DocumentHighlightsItem'
                PropertySignature
                  Identifier: '
                /**
                 * File containing highlight spans.
                 */
                file'
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * Spans to highlight in file.
                 */
                highlightSpans'
                  ArrayType
                    TypeReference
                      Identifier: ' HighlightSpan'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' DocumentHighlightsResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  ArrayType
                    TypeReference
                      Identifier: ' DocumentHighlightsItem'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ReferencesRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'References'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ReferencesResponseItem'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileSpanWithContext'
                PropertySignature
                  Identifier: '
                /**
                 * Text of line containing the reference. Including this
                 * with the response avoids latency of editor loading files
                 * to show text of reference line (the server already has loaded the referencing files).
                 *
                 * If {@link UserPreferences.disableLineTextInReferences} is enabled, the property won't be filled
                 */
                lineText'
                  QuestionToken
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * True if reference is a write location, false otherwise.
                 */
                isWriteAccess'
                  BooleanKeyword
                PropertySignature
                  Identifier: '
                /**
                 * Present only if the search was triggered from a declaration.
                 * True indicates that the references refers to the same symbol
                 * (i.e. has the same meaning) as the declaration that began the
                 * search.
                 */
                isDefinition'
                  QuestionToken
                  BooleanKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ReferencesResponseBody'
                PropertySignature
                  Identifier: '
                /**
                 * The file locations referencing the symbol.
                 */
                refs'
                  TypeOperator
                    ArrayType
                      TypeReference
                        Identifier: ' ReferencesResponseItem'
                PropertySignature
                  Identifier: '
                /**
                 * The name of the symbol.
                 */
                symbolName'
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * The start character offset of the symbol (on the line provided by the references request).
                 */
                symbolStartOffset'
                  NumberKeyword
                PropertySignature
                  Identifier: '
                /**
                 * The full display name of the symbol.
                 */
                symbolDisplayString'
                  StringKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ReferencesResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  TypeReference
                    Identifier: ' ReferencesResponseBody'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' FileReferencesRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'FileReferences'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' FileReferencesResponseBody'
                PropertySignature
                  Identifier: '
                /**
                 * The file locations referencing the symbol.
                 */
                refs'
                  TypeOperator
                    ArrayType
                      TypeReference
                        Identifier: ' ReferencesResponseItem'
                PropertySignature
                  Identifier: '
                /**
                 * The name of the symbol.
                 */
                symbolName'
                  StringKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' FileReferencesResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  TypeReference
                    Identifier: ' FileReferencesResponseBody'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' RenameRequestArgs'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequestArgs'
                PropertySignature
                  Identifier: '
                /**
                 * Should text at specified location be found/changed in comments?
                 */
                findInComments'
                  QuestionToken
                  BooleanKeyword
                PropertySignature
                  Identifier: '
                /**
                 * Should text at specified location be found/changed in strings?
                 */
                findInStrings'
                  QuestionToken
                  BooleanKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' RenameRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'Rename'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' RenameRequestArgs'
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' RenameInfo'
                UnionType
                  TypeReference
                    Identifier: ' RenameInfoSuccess'
                  TypeReference
                    Identifier: ' RenameInfoFailure'
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' RenameInfoSuccess'
                TypeReference
                  Identifier: ' ChangePropertyTypes'
                  TypeReference
                    QualifiedName
                      Identifier: 'ts'
                      Identifier: 'RenameInfoSuccess'
                  TypeLiteral
                    PropertySignature
                      Identifier: '
                triggerSpan'
                      TypeReference
                        Identifier: ' TextSpan'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' SpanGroup'
                PropertySignature
                  Identifier: '
                /** The file to which the spans apply */
                file'
                  StringKeyword
                PropertySignature
                  Identifier: '
                /** The text spans in this group */
                locs'
                  ArrayType
                    TypeReference
                      Identifier: ' RenameTextSpan'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' RenameTextSpan'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' TextSpanWithContext'
                PropertySignature
                  ReadonlyKeyword
                  Identifier: ' prefixText'
                  QuestionToken
                  StringKeyword
                PropertySignature
                  ReadonlyKeyword
                  Identifier: ' suffixText'
                  QuestionToken
                  StringKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' RenameResponseBody'
                PropertySignature
                  Identifier: '
                /**
                 * Information about the item to be renamed.
                 */
                info'
                  TypeReference
                    Identifier: ' RenameInfo'
                PropertySignature
                  Identifier: '
                /**
                 * An array of span groups (one per file) that refer to the item to be renamed.
                 */
                locs'
                  TypeOperator
                    ArrayType
                      TypeReference
                        Identifier: ' SpanGroup'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' RenameResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  TypeReference
                    Identifier: ' RenameResponseBody'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ExternalFile'
                PropertySignature
                  Identifier: '
                /**
                 * Name of file file
                 */
                fileName'
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * Script kind of the file
                 */
                scriptKind'
                  QuestionToken
                  UnionType
                    TypeReference
                      Identifier: ' ScriptKindName'
                    TypeReference
                      Identifier: ' ScriptKind'
                PropertySignature
                  Identifier: '
                /**
                 * Whether file has mixed content (i.e. .cshtml file that combines html markup with C#/JavaScript)
                 */
                hasMixedContent'
                  QuestionToken
                  BooleanKeyword
                PropertySignature
                  Identifier: '
                /**
                 * Content of the file
                 */
                content'
                  QuestionToken
                  StringKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ExternalProject'
                PropertySignature
                  Identifier: '
                /**
                 * Project name
                 */
                projectFileName'
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * List of root files in project
                 */
                rootFiles'
                  ArrayType
                    TypeReference
                      Identifier: ' ExternalFile'
                PropertySignature
                  Identifier: '
                /**
                 * Compiler options for the project
                 */
                options'
                  TypeReference
                    Identifier: ' ExternalProjectCompilerOptions'
                PropertySignature
                  Identifier: '
                /**
                 * Explicitly specified type acquisition for the project
                 */
                typeAcquisition'
                  QuestionToken
                  TypeReference
                    Identifier: ' TypeAcquisition'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CompileOnSaveMixin'
                PropertySignature
                  Identifier: '
                /**
                 * If compile on save is enabled for the project
                 */
                compileOnSave'
                  QuestionToken
                  BooleanKeyword
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' ExternalProjectCompilerOptions'
                IntersectionType
                  TypeReference
                    Identifier: ' CompilerOptions'
                  TypeReference
                    Identifier: ' CompileOnSaveMixin'
                  TypeReference
                    Identifier: ' WatchOptions'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' FileWithProjectReferenceRedirectInfo'
                PropertySignature
                  Identifier: '
                /**
                 * Name of file
                 */
                fileName'
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * True if the file is primarily included in a referenced project
                 */
                isSourceOfProjectReferenceRedirect'
                  BooleanKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ProjectChanges'
                PropertySignature
                  Identifier: '
                /**
                 * List of added files
                 */
                added'
                  UnionType
                    ArrayType
                      StringKeyword
                    ArrayType
                      TypeReference
                        Identifier: ' FileWithProjectReferenceRedirectInfo'
                PropertySignature
                  Identifier: '
                /**
                 * List of removed files
                 */
                removed'
                  UnionType
                    ArrayType
                      StringKeyword
                    ArrayType
                      TypeReference
                        Identifier: ' FileWithProjectReferenceRedirectInfo'
                PropertySignature
                  Identifier: '
                /**
                 * List of updated files
                 */
                updated'
                  UnionType
                    ArrayType
                      StringKeyword
                    ArrayType
                      TypeReference
                        Identifier: ' FileWithProjectReferenceRedirectInfo'
                PropertySignature
                  Identifier: '
                /**
                 * List of files that have had their project reference redirect status updated
                 * Only provided when the synchronizeProjectList request has includeProjectReferenceRedirectInfo set to true
                 */
                updatedRedirects'
                  QuestionToken
                  ArrayType
                    TypeReference
                      Identifier: ' FileWithProjectReferenceRedirectInfo'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ConfigureRequestArguments'
                PropertySignature
                  Identifier: '
                /**
                 * Information about the host, for example 'Emacs 24.4' or
                 * 'Sublime Text version 3075'
                 */
                hostInfo'
                  QuestionToken
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * If present, tab settings apply only to this file.
                 */
                file'
                  QuestionToken
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * The format options to use during formatting and other code editing features.
                 */
                formatOptions'
                  QuestionToken
                  TypeReference
                    Identifier: ' FormatCodeSettings'
                PropertySignature
                  Identifier: '
                preferences'
                  QuestionToken
                  TypeReference
                    Identifier: ' UserPreferences'
                PropertySignature
                  Identifier: '
                /**
                 * The host's additional supported .js file extensions
                 */
                extraFileExtensions'
                  QuestionToken
                  ArrayType
                    TypeReference
                      Identifier: ' FileExtensionInfo'
                PropertySignature
                  Identifier: '
                watchOptions'
                  QuestionToken
                  TypeReference
                    Identifier: ' WatchOptions'
              EnumDeclaration
                ExportKeyword
                Identifier: ' WatchFileKind'
                EnumMember
                  Identifier: '
                FixedPollingInterval'
                  StringLiteral
                EnumMember
                  Identifier: '
                PriorityPollingInterval'
                  StringLiteral
                EnumMember
                  Identifier: '
                DynamicPriorityPolling'
                  StringLiteral
                EnumMember
                  Identifier: '
                FixedChunkSizePolling'
                  StringLiteral
                EnumMember
                  Identifier: '
                UseFsEvents'
                  StringLiteral
                EnumMember
                  Identifier: '
                UseFsEventsOnParentDirectory'
                  StringLiteral
              EnumDeclaration
                ExportKeyword
                Identifier: ' WatchDirectoryKind'
                EnumMember
                  Identifier: '
                UseFsEvents'
                  StringLiteral
                EnumMember
                  Identifier: '
                FixedPollingInterval'
                  StringLiteral
                EnumMember
                  Identifier: '
                DynamicPriorityPolling'
                  StringLiteral
                EnumMember
                  Identifier: '
                FixedChunkSizePolling'
                  StringLiteral
              EnumDeclaration
                ExportKeyword
                Identifier: ' PollingWatchKind'
                EnumMember
                  Identifier: '
                FixedInterval'
                  StringLiteral
                EnumMember
                  Identifier: '
                PriorityInterval'
                  StringLiteral
                EnumMember
                  Identifier: '
                DynamicPriority'
                  StringLiteral
                EnumMember
                  Identifier: '
                FixedChunkSize'
                  StringLiteral
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' WatchOptions'
                PropertySignature
                  Identifier: '
                watchFile'
                  QuestionToken
                  UnionType
                    TypeReference
                      Identifier: ' WatchFileKind'
                    TypeReference
                      QualifiedName
                        Identifier: ' ts'
                        Identifier: 'WatchFileKind'
                PropertySignature
                  Identifier: '
                watchDirectory'
                  QuestionToken
                  UnionType
                    TypeReference
                      Identifier: ' WatchDirectoryKind'
                    TypeReference
                      QualifiedName
                        Identifier: ' ts'
                        Identifier: 'WatchDirectoryKind'
                PropertySignature
                  Identifier: '
                fallbackPolling'
                  QuestionToken
                  UnionType
                    TypeReference
                      Identifier: ' PollingWatchKind'
                    TypeReference
                      QualifiedName
                        Identifier: ' ts'
                        Identifier: 'PollingWatchKind'
                PropertySignature
                  Identifier: '
                synchronousWatchDirectory'
                  QuestionToken
                  BooleanKeyword
                PropertySignature
                  Identifier: '
                excludeDirectories'
                  QuestionToken
                  ArrayType
                    StringKeyword
                PropertySignature
                  Identifier: '
                excludeFiles'
                  QuestionToken
                  ArrayType
                    StringKeyword
                IndexSignature
                  Parameter
                    Identifier: 'option'
                    StringKeyword
                  UnionType
                    TypeReference
                      Identifier: ' CompilerOptionsValue'
                    UndefinedKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ConfigureRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Request'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'Configure'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' ConfigureRequestArguments'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ConfigureResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ConfigurePluginRequestArguments'
                PropertySignature
                  Identifier: '
                pluginName'
                  StringKeyword
                PropertySignature
                  Identifier: '
                configuration'
                  AnyKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ConfigurePluginRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Request'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'ConfigurePlugin'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' ConfigurePluginRequestArguments'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ConfigurePluginResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' SelectionRangeRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'SelectionRange'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' SelectionRangeRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' SelectionRangeRequestArgs'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequestArgs'
                PropertySignature
                  Identifier: '
                locations'
                  ArrayType
                    TypeReference
                      Identifier: ' Location'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' SelectionRangeResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  ArrayType
                    TypeReference
                      Identifier: ' SelectionRange'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' SelectionRange'
                PropertySignature
                  Identifier: '
                textSpan'
                  TypeReference
                    Identifier: ' TextSpan'
                PropertySignature
                  Identifier: '
                parent'
                  QuestionToken
                  TypeReference
                    Identifier: ' SelectionRange'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ToggleLineCommentRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'ToggleLineComment'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' FileRangeRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ToggleMultilineCommentRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'ToggleMultilineComment'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' FileRangeRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CommentSelectionRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'CommentSelection'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' FileRangeRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' UncommentSelectionRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'UncommentSelection'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' FileRangeRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' OpenRequestArgs'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequestArgs'
                PropertySignature
                  Identifier: '
                /**
                 * Used when a version of the file content is known to be more up to date than the one on disk.
                 * Then the known content will be used upon opening instead of the disk copy
                 */
                fileContent'
                  QuestionToken
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * Used to specify the script kind of the file explicitly. It could be one of the following:
                 *      "TS", "JS", "TSX", "JSX"
                 */
                scriptKindName'
                  QuestionToken
                  TypeReference
                    Identifier: ' ScriptKindName'
                PropertySignature
                  Identifier: '
                /**
                 * Used to limit the searching for project config file. If given the searching will stop at this
                 * root path; otherwise it will go all the way up to the dist root path.
                 */
                projectRootPath'
                  QuestionToken
                  StringKeyword
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' ScriptKindName'
                UnionType
                  LiteralType
                    StringLiteral
                  LiteralType
                    StringLiteral
                  LiteralType
                    StringLiteral
                  LiteralType
                    StringLiteral
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' OpenRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Request'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'Open'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' OpenRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' OpenExternalProjectRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Request'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'OpenExternalProject'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' OpenExternalProjectArgs'
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' OpenExternalProjectArgs'
                TypeReference
                  Identifier: ' ExternalProject'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' OpenExternalProjectsRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Request'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'OpenExternalProjects'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' OpenExternalProjectsArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' OpenExternalProjectsArgs'
                PropertySignature
                  Identifier: '
                /**
                 * List of external projects to open or update
                 */
                projects'
                  ArrayType
                    TypeReference
                      Identifier: ' ExternalProject'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' OpenExternalProjectResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' OpenExternalProjectsResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CloseExternalProjectRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Request'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'CloseExternalProject'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' CloseExternalProjectRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CloseExternalProjectRequestArgs'
                PropertySignature
                  Identifier: '
                /**
                 * Name of the project to close
                 */
                projectFileName'
                  StringKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CloseExternalProjectResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' UpdateOpenRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Request'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'UpdateOpen'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' UpdateOpenRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' UpdateOpenRequestArgs'
                PropertySignature
                  Identifier: '
                /**
                 * List of newly open files
                 */
                openFiles'
                  QuestionToken
                  ArrayType
                    TypeReference
                      Identifier: ' OpenRequestArgs'
                PropertySignature
                  Identifier: '
                /**
                 * List of open files files that were changes
                 */
                changedFiles'
                  QuestionToken
                  ArrayType
                    TypeReference
                      Identifier: ' FileCodeEdits'
                PropertySignature
                  Identifier: '
                /**
                 * List of files that were closed
                 */
                closedFiles'
                  QuestionToken
                  ArrayType
                    StringKeyword
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' InferredProjectCompilerOptions'
                IntersectionType
                  TypeReference
                    Identifier: ' ExternalProjectCompilerOptions'
                  TypeReference
                    Identifier: ' TypeAcquisition'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' SetCompilerOptionsForInferredProjectsRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Request'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'CompilerOptionsForInferredProjects'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' SetCompilerOptionsForInferredProjectsArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' SetCompilerOptionsForInferredProjectsArgs'
                PropertySignature
                  Identifier: '
                /**
                 * Compiler options to be used with inferred projects.
                 */
                options'
                  TypeReference
                    Identifier: ' InferredProjectCompilerOptions'
                PropertySignature
                  Identifier: '
                /**
                 * Specifies the project root path used to scope compiler options.
                 * It is an error to provide this property if the server has not been started with
                 * `useInferredProjectPerProjectRoot` enabled.
                 */
                projectRootPath'
                  QuestionToken
                  StringKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' SetCompilerOptionsForInferredProjectsResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ExitRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Request'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'Exit'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CloseRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'Close'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' WatchChangeRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Request'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'WatchChange'
                PropertySignature
                  Identifier: '
                arguments'
                  UnionType
                    TypeReference
                      Identifier: ' WatchChangeRequestArgs'
                    TypeOperator
                      ArrayType
                        TypeReference
                          Identifier: ' WatchChangeRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' WatchChangeRequestArgs'
                PropertySignature
                  Identifier: '
                id'
                  NumberKeyword
                PropertySignature
                  Identifier: '
                created'
                  QuestionToken
                  ArrayType
                    StringKeyword
                PropertySignature
                  Identifier: '
                deleted'
                  QuestionToken
                  ArrayType
                    StringKeyword
                PropertySignature
                  Identifier: '
                updated'
                  QuestionToken
                  ArrayType
                    StringKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CompileOnSaveAffectedFileListRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'CompileOnSaveAffectedFileList'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CompileOnSaveAffectedFileListSingleProject'
                PropertySignature
                  Identifier: '
                /**
                 * Project name
                 */
                projectFileName'
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * List of files names that should be recompiled
                 */
                fileNames'
                  ArrayType
                    StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * true if project uses outFile or out compiler option
                 */
                projectUsesOutFile'
                  BooleanKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CompileOnSaveAffectedFileListResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  ArrayType
                    TypeReference
                      Identifier: ' CompileOnSaveAffectedFileListSingleProject'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CompileOnSaveEmitFileRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'CompileOnSaveEmitFile'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' CompileOnSaveEmitFileRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CompileOnSaveEmitFileRequestArgs'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequestArgs'
                PropertySignature
                  Identifier: '
                /**
                 * if true - then file should be recompiled even if it does not have any changes.
                 */
                forced'
                  QuestionToken
                  BooleanKeyword
                PropertySignature
                  Identifier: '
                includeLinePosition'
                  QuestionToken
                  BooleanKeyword
                PropertySignature
                  Identifier: '
                /** if true - return response as object with emitSkipped and diagnostics */
                richResponse'
                  QuestionToken
                  BooleanKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CompileOnSaveEmitFileResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  UnionType
                    BooleanKeyword
                    TypeReference
                      Identifier: ' EmitResult'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' EmitResult'
                PropertySignature
                  Identifier: '
                emitSkipped'
                  BooleanKeyword
                PropertySignature
                  Identifier: '
                diagnostics'
                  UnionType
                    ArrayType
                      TypeReference
                        Identifier: ' Diagnostic'
                    ArrayType
                      TypeReference
                        Identifier: ' DiagnosticWithLinePosition'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' QuickInfoRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'Quickinfo'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' FileLocationRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' QuickInfoResponseBody'
                PropertySignature
                  Identifier: '
                /**
                 * The symbol's kind (such as 'className' or 'parameterName' or plain 'text').
                 */
                kind'
                  TypeReference
                    Identifier: ' ScriptElementKind'
                PropertySignature
                  Identifier: '
                /**
                 * Optional modifiers for the kind (such as 'public').
                 */
                kindModifiers'
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * Starting file location of symbol.
                 */
                start'
                  TypeReference
                    Identifier: ' Location'
                PropertySignature
                  Identifier: '
                /**
                 * One past last character of symbol.
                 */
                end'
                  TypeReference
                    Identifier: ' Location'
                PropertySignature
                  Identifier: '
                /**
                 * Type and kind of symbol.
                 */
                displayString'
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * Documentation associated with symbol.
                 * Display parts when UserPreferences.displayPartsForJSDoc is true, flattened to string otherwise.
                 */
                documentation'
                  UnionType
                    StringKeyword
                    ArrayType
                      TypeReference
                        Identifier: ' SymbolDisplayPart'
                PropertySignature
                  Identifier: '
                /**
                 * JSDoc tags associated with symbol.
                 */
                tags'
                  ArrayType
                    TypeReference
                      Identifier: ' JSDocTagInfo'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' QuickInfoResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  TypeReference
                    Identifier: ' QuickInfoResponseBody'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' FormatRequestArgs'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequestArgs'
                PropertySignature
                  Identifier: '
                /**
                 * Last line of range for which to format text in file.
                 */
                endLine'
                  NumberKeyword
                PropertySignature
                  Identifier: '
                /**
                 * Character offset on last line of range for which to format text in file.
                 */
                endOffset'
                  NumberKeyword
                PropertySignature
                  Identifier: '
                /**
                 * Format options to be used.
                 */
                options'
                  QuestionToken
                  TypeReference
                    Identifier: ' FormatCodeSettings'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' FormatRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'Format'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' FormatRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CodeEdit'
                PropertySignature
                  Identifier: '
                /**
                 * First character of the text span to edit.
                 */
                start'
                  TypeReference
                    Identifier: ' Location'
                PropertySignature
                  Identifier: '
                /**
                 * One character past last character of the text span to edit.
                 */
                end'
                  TypeReference
                    Identifier: ' Location'
                PropertySignature
                  Identifier: '
                /**
                 * Replace the span defined above with this string (may be
                 * the empty string).
                 */
                newText'
                  StringKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' FileCodeEdits'
                PropertySignature
                  Identifier: '
                fileName'
                  StringKeyword
                PropertySignature
                  Identifier: '
                textChanges'
                  ArrayType
                    TypeReference
                      Identifier: ' CodeEdit'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CodeFixResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                /** The code actions that are available */
                body'
                  QuestionToken
                  ArrayType
                    TypeReference
                      Identifier: ' CodeFixAction'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CodeAction'
                PropertySignature
                  Identifier: '
                /** Description of the code action to display in the UI of the editor */
                description'
                  StringKeyword
                PropertySignature
                  Identifier: '
                /** Text changes to apply to each file as part of the code action */
                changes'
                  ArrayType
                    TypeReference
                      Identifier: ' FileCodeEdits'
                PropertySignature
                  Identifier: '
                /** A command is an opaque object that should be passed to `ApplyCodeActionCommandRequestArgs` without modification.  */
                commands'
                  QuestionToken
                  ArrayType
                    TypeLiteral
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CombinedCodeActions'
                PropertySignature
                  Identifier: '
                changes'
                  TypeOperator
                    ArrayType
                      TypeReference
                        Identifier: ' FileCodeEdits'
                PropertySignature
                  Identifier: '
                commands'
                  QuestionToken
                  TypeOperator
                    ArrayType
                      TypeLiteral
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CodeFixAction'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' CodeAction'
                PropertySignature
                  Identifier: '
                /** Short name to identify the fix, for use by telemetry. */
                fixName'
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * If present, one may call 'getCombinedCodeFix' with this fixId.
                 * This may be omitted to indicate that the code fix can't be applied in a group.
                 */
                fixId'
                  QuestionToken
                  TypeLiteral
                PropertySignature
                  Identifier: '
                /** Should be present if and only if 'fixId' is. */
                fixAllDescription'
                  QuestionToken
                  StringKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' FormatResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  ArrayType
                    TypeReference
                      Identifier: ' CodeEdit'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' FormatOnKeyRequestArgs'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequestArgs'
                PropertySignature
                  Identifier: '
                /**
                 * Key pressed (';', '\n', or '}').
                 */
                key'
                  StringKeyword
                PropertySignature
                  Identifier: '
                options'
                  QuestionToken
                  TypeReference
                    Identifier: ' FormatCodeSettings'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' FormatOnKeyRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'Formatonkey'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' FormatOnKeyRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CompletionsRequestArgs'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequestArgs'
                PropertySignature
                  Identifier: '
                /**
                 * Optional prefix to apply to possible completions.
                 */
                prefix'
                  QuestionToken
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * Character that was responsible for triggering completion.
                 * Should be `undefined` if a user manually requested completion.
                 */
                triggerCharacter'
                  QuestionToken
                  TypeReference
                    Identifier: ' CompletionsTriggerCharacter'
                PropertySignature
                  Identifier: '
                triggerKind'
                  QuestionToken
                  TypeReference
                    Identifier: ' CompletionTriggerKind'
                PropertySignature
                  Identifier: '
                /**
                 * @deprecated Use UserPreferences.includeCompletionsForModuleExports
                 */
                includeExternalModuleExports'
                  QuestionToken
                  BooleanKeyword
                PropertySignature
                  Identifier: '
                /**
                 * @deprecated Use UserPreferences.includeCompletionsWithInsertText
                 */
                includeInsertTextCompletions'
                  QuestionToken
                  BooleanKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CompletionsRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequest'
                PropertySignature
                  Identifier: '
                command'
                  UnionType
                    TypeReference
                      QualifiedName
                        Identifier: ' CommandTypes'
                        Identifier: 'Completions'
                    TypeReference
                      QualifiedName
                        Identifier: ' CommandTypes'
                        Identifier: 'CompletionInfo'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' CompletionsRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CompletionDetailsRequestArgs'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequestArgs'
                PropertySignature
                  Identifier: '
                /**
                 * Names of one or more entries for which to obtain details.
                 */
                entryNames'
                  ArrayType
                    ParenthesizedType
                      UnionType
                        StringKeyword
                        TypeReference
                          Identifier: ' CompletionEntryIdentifier'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CompletionEntryIdentifier'
                PropertySignature
                  Identifier: '
                name'
                  StringKeyword
                PropertySignature
                  Identifier: '
                source'
                  QuestionToken
                  StringKeyword
                PropertySignature
                  Identifier: '
                data'
                  QuestionToken
                  UnknownKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CompletionDetailsRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'CompletionDetails'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' CompletionDetailsRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' JSDocLinkDisplayPart'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' SymbolDisplayPart'
                PropertySignature
                  Identifier: '
                /** The location of the declaration that the @link tag links to. */
                target'
                  TypeReference
                    Identifier: ' FileSpan'
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' CompletionEntry'
                TypeReference
                  Identifier: ' ChangePropertyTypes'
                  TypeReference
                    Identifier: 'Omit'
                    TypeReference
                      QualifiedName
                        Identifier: 'ts'
                        Identifier: 'CompletionEntry'
                    LiteralType
                      StringLiteral
                  TypeLiteral
                    PropertySignature
                      Identifier: '
                replacementSpan'
                      TypeReference
                        Identifier: ' TextSpan'
                    PropertySignature
                      Identifier: '
                data'
                      UnknownKeyword
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' CompletionEntryDetails'
                TypeReference
                  Identifier: ' ChangePropertyTypes'
                  TypeReference
                    QualifiedName
                      Identifier: 'ts'
                      Identifier: 'CompletionEntryDetails'
                  TypeLiteral
                    PropertySignature
                      Identifier: '
                tags'
                      ArrayType
                        TypeReference
                          Identifier: ' JSDocTagInfo'
                    PropertySignature
                      Identifier: '
                codeActions'
                      ArrayType
                        TypeReference
                          Identifier: ' CodeAction'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CompletionsResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  ArrayType
                    TypeReference
                      Identifier: ' CompletionEntry'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CompletionInfoResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  TypeReference
                    Identifier: ' CompletionInfo'
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' CompletionInfo'
                TypeReference
                  Identifier: ' ChangePropertyTypes'
                  TypeReference
                    QualifiedName
                      Identifier: 'ts'
                      Identifier: 'CompletionInfo'
                  TypeLiteral
                    PropertySignature
                      Identifier: '
                entries'
                      TypeOperator
                        ArrayType
                          TypeReference
                            Identifier: ' CompletionEntry'
                    PropertySignature
                      Identifier: '
                optionalReplacementSpan'
                      TypeReference
                        Identifier: ' TextSpan'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CompletionDetailsResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  ArrayType
                    TypeReference
                      Identifier: ' CompletionEntryDetails'
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' SignatureHelpItem'
                TypeReference
                  Identifier: ' ChangePropertyTypes'
                  TypeReference
                    QualifiedName
                      Identifier: 'ts'
                      Identifier: 'SignatureHelpItem'
                  TypeLiteral
                    PropertySignature
                      Identifier: '
                tags'
                      ArrayType
                        TypeReference
                          Identifier: ' JSDocTagInfo'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' SignatureHelpItems'
                PropertySignature
                  Identifier: '
                /**
                 * The signature help items.
                 */
                items'
                  ArrayType
                    TypeReference
                      Identifier: ' SignatureHelpItem'
                PropertySignature
                  Identifier: '
                /**
                 * The span for which signature help should appear on a signature
                 */
                applicableSpan'
                  TypeReference
                    Identifier: ' TextSpan'
                PropertySignature
                  Identifier: '
                /**
                 * The item selected in the set of available help items.
                 */
                selectedItemIndex'
                  NumberKeyword
                PropertySignature
                  Identifier: '
                /**
                 * The argument selected in the set of parameters.
                 */
                argumentIndex'
                  NumberKeyword
                PropertySignature
                  Identifier: '
                /**
                 * The argument count
                 */
                argumentCount'
                  NumberKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' SignatureHelpRequestArgs'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequestArgs'
                PropertySignature
                  Identifier: '
                /**
                 * Reason why signature help was invoked.
                 * See each individual possible
                 */
                triggerReason'
                  QuestionToken
                  TypeReference
                    Identifier: ' SignatureHelpTriggerReason'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' SignatureHelpRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'SignatureHelp'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' SignatureHelpRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' SignatureHelpResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  TypeReference
                    Identifier: ' SignatureHelpItems'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' InlayHintsRequestArgs'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequestArgs'
                PropertySignature
                  Identifier: '
                /**
                 * Start position of the span.
                 */
                start'
                  NumberKeyword
                PropertySignature
                  Identifier: '
                /**
                 * Length of the span.
                 */
                length'
                  NumberKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' InlayHintsRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Request'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'ProvideInlayHints'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' InlayHintsRequestArgs'
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' InlayHintItem'
                TypeReference
                  Identifier: ' ChangePropertyTypes'
                  TypeReference
                    QualifiedName
                      Identifier: 'ts'
                      Identifier: 'InlayHint'
                  TypeLiteral
                    PropertySignature
                      Identifier: '
                position'
                      TypeReference
                        Identifier: ' Location'
                    PropertySignature
                      Identifier: '
                displayParts'
                      ArrayType
                        TypeReference
                          Identifier: ' InlayHintItemDisplayPart'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' InlayHintItemDisplayPart'
                PropertySignature
                  Identifier: '
                text'
                  StringKeyword
                PropertySignature
                  Identifier: '
                span'
                  QuestionToken
                  TypeReference
                    Identifier: ' FileSpan'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' InlayHintsResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  ArrayType
                    TypeReference
                      Identifier: ' InlayHintItem'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' MapCodeRequestArgs'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequestArgs'
                PropertySignature
                  Identifier: '
                /**
                 * The files and changes to try and apply/map.
                 */
                mapping'
                  TypeReference
                    Identifier: ' MapCodeRequestDocumentMapping'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' MapCodeRequestDocumentMapping'
                PropertySignature
                  Identifier: '
                /**
                 * The specific code to map/insert/replace in the file.
                 */
                contents'
                  ArrayType
                    StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * Areas of "focus" to inform the code mapper with. For example, cursor
                 * location, current selection, viewport, etc. Nested arrays denote
                 * priority: toplevel arrays are more important than inner arrays, and
                 * inner array priorities are based on items within that array. Items
                 * earlier in the arrays have higher priority.
                 */
                focusLocations'
                  QuestionToken
                  ArrayType
                    ArrayType
                      TypeReference
                        Identifier: ' TextSpan'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' MapCodeRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'MapCode'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' MapCodeRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' MapCodeResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  TypeOperator
                    ArrayType
                      TypeReference
                        Identifier: ' FileCodeEdits'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CopilotRelatedRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'CopilotRelated'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' FileRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CopilotRelatedItems'
                PropertySignature
                  Identifier: '
                relatedFiles'
                  TypeOperator
                    ArrayType
                      StringKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CopilotRelatedResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  TypeReference
                    Identifier: ' CopilotRelatedItems'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' SemanticDiagnosticsSyncRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'SemanticDiagnosticsSync'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' SemanticDiagnosticsSyncRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' SemanticDiagnosticsSyncRequestArgs'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequestArgs'
                PropertySignature
                  Identifier: '
                includeLinePosition'
                  QuestionToken
                  BooleanKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' SemanticDiagnosticsSyncResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  UnionType
                    ArrayType
                      TypeReference
                        Identifier: ' Diagnostic'
                    ArrayType
                      TypeReference
                        Identifier: ' DiagnosticWithLinePosition'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' SuggestionDiagnosticsSyncRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'SuggestionDiagnosticsSync'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' SuggestionDiagnosticsSyncRequestArgs'
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' SuggestionDiagnosticsSyncRequestArgs'
                TypeReference
                  Identifier: ' SemanticDiagnosticsSyncRequestArgs'
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' SuggestionDiagnosticsSyncResponse'
                TypeReference
                  Identifier: ' SemanticDiagnosticsSyncResponse'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' SyntacticDiagnosticsSyncRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'SyntacticDiagnosticsSync'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' SyntacticDiagnosticsSyncRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' SyntacticDiagnosticsSyncRequestArgs'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequestArgs'
                PropertySignature
                  Identifier: '
                includeLinePosition'
                  QuestionToken
                  BooleanKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' SyntacticDiagnosticsSyncResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  UnionType
                    ArrayType
                      TypeReference
                        Identifier: ' Diagnostic'
                    ArrayType
                      TypeReference
                        Identifier: ' DiagnosticWithLinePosition'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' GeterrForProjectRequestArgs'
                PropertySignature
                  Identifier: '
                /**
                 * the file requesting project error list
                 */
                file'
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * Delay in milliseconds to wait before starting to compute
                 * errors for the files in the file list
                 */
                delay'
                  NumberKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' GeterrForProjectRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Request'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'GeterrForProject'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' GeterrForProjectRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' GeterrRequestArgs'
                PropertySignature
                  Identifier: '
                /**
                 * List of file names for which to compute compiler errors.
                 * The files will be checked in list order.
                 */
                files'
                  ArrayType
                    ParenthesizedType
                      UnionType
                        StringKeyword
                        TypeReference
                          Identifier: ' FileRangesRequestArgs'
                PropertySignature
                  Identifier: '
                /**
                 * Delay in milliseconds to wait before starting to compute
                 * errors for the files in the file list
                 */
                delay'
                  NumberKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' GeterrRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Request'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'Geterr'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' GeterrRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' FileRange'
                PropertySignature
                  Identifier: '
                /**
                 * The line number for the request (1-based).
                 */
                startLine'
                  NumberKeyword
                PropertySignature
                  Identifier: '
                /**
                 * The character offset (on the line) for the request (1-based).
                 */
                startOffset'
                  NumberKeyword
                PropertySignature
                  Identifier: '
                /**
                 * The line number for the request (1-based).
                 */
                endLine'
                  NumberKeyword
                PropertySignature
                  Identifier: '
                /**
                 * The character offset (on the line) for the request (1-based).
                 */
                endOffset'
                  NumberKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' FileRangesRequestArgs'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Pick'
                    TypeReference
                      Identifier: 'FileRequestArgs'
                    LiteralType
                      StringLiteral
                PropertySignature
                  Identifier: '
                ranges'
                  ArrayType
                    TypeReference
                      Identifier: ' FileRange'
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' RequestCompletedEventName'
                LiteralType
                  StringLiteral
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' RequestCompletedEvent'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Event'
                PropertySignature
                  Identifier: '
                event'
                  TypeReference
                    Identifier: ' RequestCompletedEventName'
                PropertySignature
                  Identifier: '
                body'
                  TypeReference
                    Identifier: ' RequestCompletedEventBody'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' RequestCompletedEventBody'
                PropertySignature
                  Identifier: '
                request_seq'
                  NumberKeyword
                PropertySignature
                  Identifier: '
                performanceData'
                  QuestionToken
                  TypeReference
                    Identifier: ' PerformanceData'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' Diagnostic'
                PropertySignature
                  Identifier: '
                /**
                 * Starting file location at which text applies.
                 */
                start'
                  TypeReference
                    Identifier: ' Location'
                PropertySignature
                  Identifier: '
                /**
                 * The last file location at which the text applies.
                 */
                end'
                  TypeReference
                    Identifier: ' Location'
                PropertySignature
                  Identifier: '
                /**
                 * Text of diagnostic message.
                 */
                text'
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * The category of the diagnostic message, e.g. "error", "warning", or "suggestion".
                 */
                category'
                  StringKeyword
                PropertySignature
                  Identifier: '
                reportsUnnecessary'
                  QuestionToken
                  TypeLiteral
                PropertySignature
                  Identifier: '
                reportsDeprecated'
                  QuestionToken
                  TypeLiteral
                PropertySignature
                  Identifier: '
                /**
                 * Any related spans the diagnostic may have, such as other locations relevant to an error, such as declarartion sites
                 */
                relatedInformation'
                  QuestionToken
                  ArrayType
                    TypeReference
                      Identifier: ' DiagnosticRelatedInformation'
                PropertySignature
                  Identifier: '
                /**
                 * The error code of the diagnostic message.
                 */
                code'
                  QuestionToken
                  NumberKeyword
                PropertySignature
                  Identifier: '
                /**
                 * The name of the plugin reporting the message.
                 */
                source'
                  QuestionToken
                  StringKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' DiagnosticWithFileName'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Diagnostic'
                PropertySignature
                  Identifier: '
                /**
                 * Name of the file the diagnostic is in
                 */
                fileName'
                  StringKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' DiagnosticRelatedInformation'
                PropertySignature
                  Identifier: '
                /**
                 * The category of the related information message, e.g. "error", "warning", or "suggestion".
                 */
                category'
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * The code used ot identify the related information
                 */
                code'
                  NumberKeyword
                PropertySignature
                  Identifier: '
                /**
                 * Text of related or additional information.
                 */
                message'
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * Associated location
                 */
                span'
                  QuestionToken
                  TypeReference
                    Identifier: ' FileSpan'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' DiagnosticEventBody'
                PropertySignature
                  Identifier: '
                /**
                 * The file for which diagnostic information is reported.
                 */
                file'
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * An array of diagnostic information items.
                 */
                diagnostics'
                  ArrayType
                    TypeReference
                      Identifier: ' Diagnostic'
                PropertySignature
                  Identifier: '
                /**
                 * Spans where the region diagnostic was requested, if this is a region semantic diagnostic event.
                 */
                spans'
                  QuestionToken
                  ArrayType
                    TypeReference
                      Identifier: ' TextSpan'
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' DiagnosticEventKind'
                UnionType
                  LiteralType
                    StringLiteral
                  LiteralType
                    StringLiteral
                  LiteralType
                    StringLiteral
                  LiteralType
                    StringLiteral
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' DiagnosticEvent'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Event'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  TypeReference
                    Identifier: ' DiagnosticEventBody'
                PropertySignature
                  Identifier: '
                event'
                  TypeReference
                    Identifier: ' DiagnosticEventKind'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ConfigFileDiagnosticEventBody'
                PropertySignature
                  Identifier: '
                /**
                 * The file which trigged the searching and error-checking of the config file
                 */
                triggerFile'
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * The name of the found config file.
                 */
                configFile'
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * An arry of diagnostic information items for the found config file.
                 */
                diagnostics'
                  ArrayType
                    TypeReference
                      Identifier: ' DiagnosticWithFileName'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ConfigFileDiagnosticEvent'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Event'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  TypeReference
                    Identifier: ' ConfigFileDiagnosticEventBody'
                PropertySignature
                  Identifier: '
                event'
                  LiteralType
                    StringLiteral
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' ProjectLanguageServiceStateEventName'
                LiteralType
                  StringLiteral
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ProjectLanguageServiceStateEvent'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Event'
                PropertySignature
                  Identifier: '
                event'
                  TypeReference
                    Identifier: ' ProjectLanguageServiceStateEventName'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  TypeReference
                    Identifier: ' ProjectLanguageServiceStateEventBody'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ProjectLanguageServiceStateEventBody'
                PropertySignature
                  Identifier: '
                /**
                 * Project name that has changes in the state of language service.
                 * For configured projects this will be the config file path.
                 * For external projects this will be the name of the projects specified when project was open.
                 * For inferred projects this event is not raised.
                 */
                projectName'
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * True if language service state switched from disabled to enabled
                 * and false otherwise.
                 */
                languageServiceEnabled'
                  BooleanKeyword
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' ProjectsUpdatedInBackgroundEventName'
                LiteralType
                  StringLiteral
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ProjectsUpdatedInBackgroundEvent'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Event'
                PropertySignature
                  Identifier: '
                event'
                  TypeReference
                    Identifier: ' ProjectsUpdatedInBackgroundEventName'
                PropertySignature
                  Identifier: '
                body'
                  TypeReference
                    Identifier: ' ProjectsUpdatedInBackgroundEventBody'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ProjectsUpdatedInBackgroundEventBody'
                PropertySignature
                  Identifier: '
                /**
                 * Current set of open files
                 */
                openFiles'
                  ArrayType
                    StringKeyword
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' ProjectLoadingStartEventName'
                LiteralType
                  StringLiteral
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ProjectLoadingStartEvent'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Event'
                PropertySignature
                  Identifier: '
                event'
                  TypeReference
                    Identifier: ' ProjectLoadingStartEventName'
                PropertySignature
                  Identifier: '
                body'
                  TypeReference
                    Identifier: ' ProjectLoadingStartEventBody'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ProjectLoadingStartEventBody'
                PropertySignature
                  Identifier: '
                /** name of the project */
                projectName'
                  StringKeyword
                PropertySignature
                  Identifier: '
                /** reason for loading */
                reason'
                  StringKeyword
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' ProjectLoadingFinishEventName'
                LiteralType
                  StringLiteral
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ProjectLoadingFinishEvent'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Event'
                PropertySignature
                  Identifier: '
                event'
                  TypeReference
                    Identifier: ' ProjectLoadingFinishEventName'
                PropertySignature
                  Identifier: '
                body'
                  TypeReference
                    Identifier: ' ProjectLoadingFinishEventBody'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ProjectLoadingFinishEventBody'
                PropertySignature
                  Identifier: '
                /** name of the project */
                projectName'
                  StringKeyword
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' SurveyReadyEventName'
                LiteralType
                  StringLiteral
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' SurveyReadyEvent'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Event'
                PropertySignature
                  Identifier: '
                event'
                  TypeReference
                    Identifier: ' SurveyReadyEventName'
                PropertySignature
                  Identifier: '
                body'
                  TypeReference
                    Identifier: ' SurveyReadyEventBody'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' SurveyReadyEventBody'
                PropertySignature
                  Identifier: '
                /** Name of the survey. This is an internal machine- and programmer-friendly name */
                surveyId'
                  StringKeyword
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' LargeFileReferencedEventName'
                LiteralType
                  StringLiteral
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' LargeFileReferencedEvent'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Event'
                PropertySignature
                  Identifier: '
                event'
                  TypeReference
                    Identifier: ' LargeFileReferencedEventName'
                PropertySignature
                  Identifier: '
                body'
                  TypeReference
                    Identifier: ' LargeFileReferencedEventBody'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' LargeFileReferencedEventBody'
                PropertySignature
                  Identifier: '
                /**
                 * name of the large file being loaded
                 */
                file'
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * size of the file
                 */
                fileSize'
                  NumberKeyword
                PropertySignature
                  Identifier: '
                /**
                 * max file size allowed on the server
                 */
                maxFileSize'
                  NumberKeyword
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' CreateFileWatcherEventName'
                LiteralType
                  StringLiteral
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CreateFileWatcherEvent'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Event'
                PropertySignature
                  ReadonlyKeyword
                  Identifier: ' event'
                  TypeReference
                    Identifier: ' CreateFileWatcherEventName'
                PropertySignature
                  ReadonlyKeyword
                  Identifier: ' body'
                  TypeReference
                    Identifier: ' CreateFileWatcherEventBody'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CreateFileWatcherEventBody'
                PropertySignature
                  ReadonlyKeyword
                  Identifier: ' id'
                  NumberKeyword
                PropertySignature
                  ReadonlyKeyword
                  Identifier: ' path'
                  StringKeyword
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' CreateDirectoryWatcherEventName'
                LiteralType
                  StringLiteral
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CreateDirectoryWatcherEvent'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Event'
                PropertySignature
                  ReadonlyKeyword
                  Identifier: ' event'
                  TypeReference
                    Identifier: ' CreateDirectoryWatcherEventName'
                PropertySignature
                  ReadonlyKeyword
                  Identifier: ' body'
                  TypeReference
                    Identifier: ' CreateDirectoryWatcherEventBody'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CreateDirectoryWatcherEventBody'
                PropertySignature
                  ReadonlyKeyword
                  Identifier: ' id'
                  NumberKeyword
                PropertySignature
                  ReadonlyKeyword
                  Identifier: ' path'
                  StringKeyword
                PropertySignature
                  ReadonlyKeyword
                  Identifier: ' recursive'
                  BooleanKeyword
                PropertySignature
                  ReadonlyKeyword
                  Identifier: ' ignoreUpdate'
                  QuestionToken
                  BooleanKeyword
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' CloseFileWatcherEventName'
                LiteralType
                  StringLiteral
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CloseFileWatcherEvent'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Event'
                PropertySignature
                  ReadonlyKeyword
                  Identifier: ' event'
                  TypeReference
                    Identifier: ' CloseFileWatcherEventName'
                PropertySignature
                  ReadonlyKeyword
                  Identifier: ' body'
                  TypeReference
                    Identifier: ' CloseFileWatcherEventBody'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CloseFileWatcherEventBody'
                PropertySignature
                  ReadonlyKeyword
                  Identifier: ' id'
                  NumberKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ReloadRequestArgs'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequestArgs'
                PropertySignature
                  Identifier: '
                /**
                 * Name of temporary file from which to reload file
                 * contents. May be same as file.
                 */
                tmpfile'
                  StringKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ReloadRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'Reload'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' ReloadRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ReloadResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' SavetoRequestArgs'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequestArgs'
                PropertySignature
                  Identifier: '
                /**
                 * Name of temporary file into which to save server's view of
                 * file contents.
                 */
                tmpfile'
                  StringKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' SavetoRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'Saveto'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' SavetoRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' NavtoRequestArgs'
                PropertySignature
                  Identifier: '
                /**
                 * Search term to navigate to from current location; term can
                 * be '.*' or an identifier prefix.
                 */
                searchValue'
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 *  Optional limit on the number of items to return.
                 */
                maxResultCount'
                  QuestionToken
                  NumberKeyword
                PropertySignature
                  Identifier: '
                /**
                 * The file for the request (absolute pathname required).
                 */
                file'
                  QuestionToken
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * Optional flag to indicate we want results for just the current file
                 * or the entire project.
                 */
                currentFileOnly'
                  QuestionToken
                  BooleanKeyword
                PropertySignature
                  Identifier: '
                projectFileName'
                  QuestionToken
                  StringKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' NavtoRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Request'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'Navto'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' NavtoRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' NavtoItem'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileSpan'
                PropertySignature
                  Identifier: '
                /**
                 * The symbol's name.
                 */
                name'
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * The symbol's kind (such as 'className' or 'parameterName').
                 */
                kind'
                  TypeReference
                    Identifier: ' ScriptElementKind'
                PropertySignature
                  Identifier: '
                /**
                 * exact, substring, or prefix.
                 */
                matchKind'
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * If this was a case sensitive or insensitive match.
                 */
                isCaseSensitive'
                  BooleanKeyword
                PropertySignature
                  Identifier: '
                /**
                 * Optional modifiers for the kind (such as 'public').
                 */
                kindModifiers'
                  QuestionToken
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * Name of symbol's container symbol (if any); for example,
                 * the class name if symbol is a class member.
                 */
                containerName'
                  QuestionToken
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * Kind of symbol's container symbol (if any).
                 */
                containerKind'
                  QuestionToken
                  TypeReference
                    Identifier: ' ScriptElementKind'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' NavtoResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  ArrayType
                    TypeReference
                      Identifier: ' NavtoItem'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ChangeRequestArgs'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FormatRequestArgs'
                PropertySignature
                  Identifier: '
                /**
                 * Optional string to insert at location (file, line, offset).
                 */
                insertString'
                  QuestionToken
                  StringKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ChangeRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'Change'
                PropertySignature
                  Identifier: '
                arguments'
                  TypeReference
                    Identifier: ' ChangeRequestArgs'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' BraceResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  ArrayType
                    TypeReference
                      Identifier: ' TextSpan'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' BraceRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'Brace'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' NavBarRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'NavBar'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' NavTreeRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'NavTree'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' NavigationBarItem'
                PropertySignature
                  Identifier: '
                /**
                 * The item's display text.
                 */
                text'
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * The symbol's kind (such as 'className' or 'parameterName').
                 */
                kind'
                  TypeReference
                    Identifier: ' ScriptElementKind'
                PropertySignature
                  Identifier: '
                /**
                 * Optional modifiers for the kind (such as 'public').
                 */
                kindModifiers'
                  QuestionToken
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * The definition locations of the item.
                 */
                spans'
                  ArrayType
                    TypeReference
                      Identifier: ' TextSpan'
                PropertySignature
                  Identifier: '
                /**
                 * Optional children.
                 */
                childItems'
                  QuestionToken
                  ArrayType
                    TypeReference
                      Identifier: ' NavigationBarItem'
                PropertySignature
                  Identifier: '
                /**
                 * Number of levels deep this item should appear.
                 */
                indent'
                  NumberKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' NavigationTree'
                PropertySignature
                  Identifier: '
                text'
                  StringKeyword
                PropertySignature
                  Identifier: '
                kind'
                  TypeReference
                    Identifier: ' ScriptElementKind'
                PropertySignature
                  Identifier: '
                kindModifiers'
                  StringKeyword
                PropertySignature
                  Identifier: '
                spans'
                  ArrayType
                    TypeReference
                      Identifier: ' TextSpan'
                PropertySignature
                  Identifier: '
                nameSpan'
                  UnionType
                    TypeReference
                      Identifier: ' TextSpan'
                    UndefinedKeyword
                PropertySignature
                  Identifier: '
                childItems'
                  QuestionToken
                  ArrayType
                    TypeReference
                      Identifier: ' NavigationTree'
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' TelemetryEventName'
                LiteralType
                  StringLiteral
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' TelemetryEvent'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Event'
                PropertySignature
                  Identifier: '
                event'
                  TypeReference
                    Identifier: ' TelemetryEventName'
                PropertySignature
                  Identifier: '
                body'
                  TypeReference
                    Identifier: ' TelemetryEventBody'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' TelemetryEventBody'
                PropertySignature
                  Identifier: '
                telemetryEventName'
                  StringKeyword
                PropertySignature
                  Identifier: '
                payload'
                  AnyKeyword
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' TypesInstallerInitializationFailedEventName'
                LiteralType
                  StringLiteral
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' TypesInstallerInitializationFailedEvent'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Event'
                PropertySignature
                  Identifier: '
                event'
                  TypeReference
                    Identifier: ' TypesInstallerInitializationFailedEventName'
                PropertySignature
                  Identifier: '
                body'
                  TypeReference
                    Identifier: ' TypesInstallerInitializationFailedEventBody'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' TypesInstallerInitializationFailedEventBody'
                PropertySignature
                  Identifier: '
                message'
                  StringKeyword
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' TypingsInstalledTelemetryEventName'
                LiteralType
                  StringLiteral
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' TypingsInstalledTelemetryEventBody'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' TelemetryEventBody'
                PropertySignature
                  Identifier: '
                telemetryEventName'
                  TypeReference
                    Identifier: ' TypingsInstalledTelemetryEventName'
                PropertySignature
                  Identifier: '
                payload'
                  TypeReference
                    Identifier: ' TypingsInstalledTelemetryEventPayload'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' TypingsInstalledTelemetryEventPayload'
                PropertySignature
                  Identifier: '
                /**
                 * Comma separated list of installed typing packages
                 */
                installedPackages'
                  StringKeyword
                PropertySignature
                  Identifier: '
                /**
                 * true if install request succeeded, otherwise - false
                 */
                installSuccess'
                  BooleanKeyword
                PropertySignature
                  Identifier: '
                /**
                 * version of typings installer
                 */
                typingsInstallerVersion'
                  StringKeyword
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' BeginInstallTypesEventName'
                LiteralType
                  StringLiteral
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' EndInstallTypesEventName'
                LiteralType
                  StringLiteral
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' BeginInstallTypesEvent'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Event'
                PropertySignature
                  Identifier: '
                event'
                  TypeReference
                    Identifier: ' BeginInstallTypesEventName'
                PropertySignature
                  Identifier: '
                body'
                  TypeReference
                    Identifier: ' BeginInstallTypesEventBody'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' EndInstallTypesEvent'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Event'
                PropertySignature
                  Identifier: '
                event'
                  TypeReference
                    Identifier: ' EndInstallTypesEventName'
                PropertySignature
                  Identifier: '
                body'
                  TypeReference
                    Identifier: ' EndInstallTypesEventBody'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' InstallTypesEventBody'
                PropertySignature
                  Identifier: '
                /**
                 * correlation id to match begin and end events
                 */
                eventId'
                  NumberKeyword
                PropertySignature
                  Identifier: '
                /**
                 * list of packages to install
                 */
                packages'
                  TypeOperator
                    ArrayType
                      StringKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' BeginInstallTypesEventBody'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' InstallTypesEventBody'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' EndInstallTypesEventBody'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' InstallTypesEventBody'
                PropertySignature
                  Identifier: '
                /**
                 * true if installation succeeded, otherwise false
                 */
                success'
                  BooleanKeyword
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' NavBarResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  ArrayType
                    TypeReference
                      Identifier: ' NavigationBarItem'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' NavTreeResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  Identifier: '
                body'
                  QuestionToken
                  TypeReference
                    Identifier: ' NavigationTree'
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' CallHierarchyItem'
                TypeReference
                  Identifier: ' ChangePropertyTypes'
                  TypeReference
                    QualifiedName
                      Identifier: 'ts'
                      Identifier: 'CallHierarchyItem'
                  TypeLiteral
                    PropertySignature
                      Identifier: '
                span'
                      TypeReference
                        Identifier: ' TextSpan'
                    PropertySignature
                      Identifier: '
                selectionSpan'
                      TypeReference
                        Identifier: ' TextSpan'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CallHierarchyIncomingCall'
                PropertySignature
                  Identifier: '
                from'
                  TypeReference
                    Identifier: ' CallHierarchyItem'
                PropertySignature
                  Identifier: '
                fromSpans'
                  ArrayType
                    TypeReference
                      Identifier: ' TextSpan'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' CallHierarchyOutgoingCall'
                PropertySignature
                  Identifier: '
                to'
                  TypeReference
                    Identifier: ' CallHierarchyItem'
                PropertySignature
                  Identifier: '
                fromSpans'
                  ArrayType
                    TypeReference
                      Identifier: ' TextSpan'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' PrepareCallHierarchyRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'PrepareCallHierarchy'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' PrepareCallHierarchyResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  ReadonlyKeyword
                  Identifier: ' body'
                  UnionType
                    TypeReference
                      Identifier: ' CallHierarchyItem'
                    ArrayType
                      TypeReference
                        Identifier: ' CallHierarchyItem'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ProvideCallHierarchyIncomingCallsRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'ProvideCallHierarchyIncomingCalls'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ProvideCallHierarchyIncomingCallsResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  ReadonlyKeyword
                  Identifier: ' body'
                  ArrayType
                    TypeReference
                      Identifier: ' CallHierarchyIncomingCall'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ProvideCallHierarchyOutgoingCallsRequest'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' FileLocationRequest'
                PropertySignature
                  Identifier: '
                command'
                  TypeReference
                    QualifiedName
                      Identifier: ' CommandTypes'
                      Identifier: 'ProvideCallHierarchyOutgoingCalls'
              InterfaceDeclaration
                ExportKeyword
                Identifier: ' ProvideCallHierarchyOutgoingCallsResponse'
                HeritageClause
                  ExpressionWithTypeArguments
                    Identifier: ' Response'
                PropertySignature
                  ReadonlyKeyword
                  Identifier: ' body'
                  ArrayType
                    TypeReference
                      Identifier: ' CallHierarchyOutgoingCall'
              EnumDeclaration
                ExportKeyword
                Identifier: ' IndentStyle'
                EnumMember
                  Identifier: '
                None'
                  StringLiteral
                EnumMember
                  Identifier: '
                Block'
                  StringLiteral
                EnumMember
                  Identifier: '
                Smart'
                  StringLiteral
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' EditorSettings'
                TypeReference
                  Identifier: ' ChangePropertyTypes'
                  TypeReference
                    QualifiedName
                      Identifier: 'ts'
                      Identifier: 'EditorSettings'
                  TypeLiteral
                    PropertySignature
                      Identifier: '
                indentStyle'
                      UnionType
                        TypeReference
                          Identifier: ' IndentStyle'
                        TypeReference
                          QualifiedName
                            Identifier: ' ts'
                            Identifier: 'IndentStyle'
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' FormatCodeSettings'
                TypeReference
                  Identifier: ' ChangePropertyTypes'
                  TypeReference
                    QualifiedName
                      Identifier: 'ts'
                      Identifier: 'FormatCodeSettings'
                  TypeLiteral
                    PropertySignature
                      Identifier: '
                indentStyle'
                      UnionType
                        TypeReference
                          Identifier: ' IndentStyle'
                        TypeReference
                          QualifiedName
                            Identifier: ' ts'
                            Identifier: 'IndentStyle'
              TypeAliasDeclaration
                ExportKeyword
                Identifier: ' CompilerOptions'
                TypeReference
                  Identifier: ' ChangePropertyTypes'
                  TypeReference
                    Identifier: 'ChangeStringIndexSignature'
                    TypeReference
                      QualifiedName
                        Identifier: 'ts'
                        Identifier: 'CompilerOptions'
                    TypeReference
                      Identifier: ' CompilerOptionsValue'
                  TypeLiteral
                    PropertySignature
                      Identifier: '
                jsx'
                      UnionType
                        TypeReference
                          Identifier: ' JsxEmit'
                        TypeReference
                          QualifiedName
                            Identifier: ' ts'
                            Identifier: 'JsxEmit'
                    PropertySignature
                      Identifier: '
                module'
                      UnionType
                        TypeReference
                          Identifier: ' ModuleKind'
                        TypeReference
                          QualifiedName
                            Identifier: ' ts'
                            Identifier: 'ModuleKind'
                    PropertySignature
                      Identifier: '
                moduleResolution'
                      UnionType
                        TypeReference
                          Identifier: ' ModuleResolutionKind'
                        TypeReference
                          QualifiedName
                            Identifier: ' ts'
                            Identifier: 'ModuleResolutionKind'
                    PropertySignature
                      Identifier: '
                newLine'
                      UnionType
                        TypeReference
                          Identifier: ' NewLineKind'
                        TypeReference
                          QualifiedName
                            Identifier: ' ts'
                            Identifier: 'NewLineKind'
                    PropertySignature
                      Identifier: '
                target'
                      UnionType
                        TypeReference
                          Identifier: ' ScriptTarget'
                        TypeReference
                          QualifiedName
                            Identifier: ' ts'
                            Identifier: 'ScriptTarget'
              EnumDeclaration
                ExportKeyword
                Identifier: ' JsxEmit'
                EnumMember
                  Identifier: '
                None'
                  StringLiteral
                EnumMember
                  Identifier: '
                Preserve'
                  StringLiteral
                EnumMember
                  Identifier: '
                ReactNative'
                  StringLiteral
                EnumMember
                  Identifier: '
                React'
                  StringLiteral
                EnumMember
                  Identifier: '
                ReactJSX'
                  StringLiteral
                EnumMember
                  Identifier: '
                ReactJSXDev'
                  StringLiteral
              EnumDeclaration
                ExportKeyword
                Identifier: ' ModuleKind'
                EnumMember
                  Identifier: '
                None'
                  StringLiteral
                EnumMember
                  Identifier: '
                CommonJS'
                  StringLiteral
                EnumMember
                  Identifier: '
                AMD'
                  StringLiteral
                EnumMember
                  Identifier: '
                UMD'
                  StringLiteral
                EnumMember
                  Identifier: '
                System'
                  StringLiteral
                EnumMember
                  Identifier: '
                ES6'
                  StringLiteral
                EnumMember
                  Identifier: '
                ES2015'
                  StringLiteral
                EnumMember
                  Identifier: '
                ES2020'
                  StringLiteral
                EnumMember
                  Identifier: '
                ES2022'
                  StringLiteral
                EnumMember
                  Identifier: '
                ESNext'
                  StringLiteral
                EnumMember
                  Identifier: '
                Node16'
                  StringLiteral
                EnumMember
                  Identifier: '
                NodeNext'
                  StringLiteral
                EnumMember
                  Identifier: '
                Preserve'
                  StringLiteral
              EnumDeclaration
                ExportKeyword
                Identifier: ' ModuleResolutionKind'
                EnumMember
                  Identifier: '
                Classic'
                  StringLiteral
                EnumMember
                  Identifier: '
                /** @deprecated Renamed to `Node10` */
                Node'
                  StringLiteral
                EnumMember
                  Identifier: '
                /** @deprecated Renamed to `Node10` */
                NodeJs'
                  StringLiteral
                EnumMember
                  Identifier: '
                Node10'
                  StringLiteral
                EnumMember
                  Identifier: '
                Node16'
                  StringLiteral
                EnumMember
                  Identifier: '
                NodeNext'
                  StringLiteral
                EnumMember
                  Identifier: '
                Bundler'
                  StringLiteral
              EnumDeclaration
                ExportKeyword
                Identifier: ' NewLineKind'
                EnumMember
                  Identifier: '
                Crlf'
                  StringLiteral
                EnumMember
                  Identifier: '
                Lf'
                  StringLiteral
              EnumDeclaration
                ExportKeyword
                Identifier: ' ScriptTarget'
                EnumMember
                  Identifier: '
                /** @deprecated */
                ES3'
                  StringLiteral
                EnumMember
                  Identifier: '
                ES5'
                  StringLiteral
                EnumMember
                  Identifier: '
                ES6'
                  StringLiteral
                EnumMember
                  Identifier: '
                ES2015'
                  StringLiteral
                EnumMember
                  Identifier: '
                ES2016'
                  StringLiteral
                EnumMember
                  Identifier: '
                ES2017'
                  StringLiteral
                EnumMember
                  Identifier: '
                ES2018'
                  StringLiteral
                EnumMember
                  Identifier: '
                ES2019'
                  StringLiteral
                EnumMember
                  Identifier: '
                ES2020'
                  StringLiteral
                EnumMember
                  Identifier: '
                ES2021'
                  StringLiteral
                EnumMember
                  Identifier: '
                ES2022'
                  StringLiteral
                EnumMember
                  Identifier: '
                ES2023'
                  StringLiteral
                EnumMember
                  Identifier: '
                ESNext'
                  StringLiteral
                EnumMember
                  Identifier: '
                JSON'
                  StringLiteral
                EnumMember
                  Identifier: '
                Latest'
                  StringLiteral
          ModuleDeclaration
            Identifier: ' typingsInstaller'
            ModuleBlock
              InterfaceDeclaration
                Identifier: ' Log'
                MethodSignature
                  Identifier: '
                isEnabled'
                  BooleanKeyword
                MethodSignature
                  Identifier: '
                writeLine'
                  Parameter
                    Identifier: 'text'
                    StringKeyword
                  VoidKeyword
              TypeAliasDeclaration
                Identifier: ' RequestCompletedAction'
                FunctionType
                  Parameter
                    Identifier: 'success'
                    BooleanKeyword
                  VoidKeyword
              InterfaceDeclaration
                Identifier: ' PendingRequest'
                PropertySignature
                  Identifier: '
                requestId'
                  NumberKeyword
                PropertySignature
                  Identifier: '
                packageNames'
                  ArrayType
                    StringKeyword
                PropertySignature
                  Identifier: '
                cwd'
                  StringKeyword
                PropertySignature
                  Identifier: '
                onRequestCompleted'
                  TypeReference
                    Identifier: ' RequestCompletedAction'
              ClassDeclaration
                AbstractKeyword
                Identifier: ' TypingsInstaller'
                PropertyDeclaration
                  ProtectedKeyword
                  ReadonlyKeyword
                  Identifier: ' installTypingHost'
                  TypeReference
                    Identifier: ' InstallTypingHost'
                PropertyDeclaration
                  PrivateKeyword
                  ReadonlyKeyword
                  Identifier: ' globalCachePath'
                PropertyDeclaration
                  PrivateKeyword
                  ReadonlyKeyword
                  Identifier: ' safeListPath'
                PropertyDeclaration
                  PrivateKeyword
                  ReadonlyKeyword
                  Identifier: ' typesMapLocation'
                PropertyDeclaration
                  PrivateKeyword
                  ReadonlyKeyword
                  Identifier: ' throttleLimit'
                PropertyDeclaration
                  ProtectedKeyword
                  ReadonlyKeyword
                  Identifier: ' log'
                  TypeReference
                    Identifier: ' Log'
                PropertyDeclaration
                  PrivateKeyword
                  ReadonlyKeyword
                  Identifier: ' packageNameToTypingLocation'
                PropertyDeclaration
                  PrivateKeyword
                  ReadonlyKeyword
                  Identifier: ' missingTypingsSet'
                PropertyDeclaration
                  PrivateKeyword
                  ReadonlyKeyword
                  Identifier: ' knownCachesSet'
                PropertyDeclaration
                  PrivateKeyword
                  ReadonlyKeyword
                  Identifier: ' projectWatchers'
                PropertyDeclaration
                  PrivateKeyword
                  Identifier: ' safeList'
                PropertyDeclaration
                  PrivateKeyword
                  Identifier: ' pendingRunRequests'
                PropertyDeclaration
                  PrivateKeyword
                  Identifier: ' installRunCount'
                PropertyDeclaration
                  PrivateKeyword
                  Identifier: ' inFlightRequestCount'
                PropertyDeclaration
                  AbstractKeyword
                  ReadonlyKeyword
                  Identifier: ' typesRegistry'
                  TypeReference
                    Identifier: ' Map'
                    StringKeyword
                    TypeReference
                      Identifier: ' MapLike'
                      StringKeyword
                Constructor
                  Parameter
                    Identifier: 'installTypingHost'
                    TypeReference
                      Identifier: ' InstallTypingHost'
                  Parameter
                    Identifier: ' globalCachePath'
                    StringKeyword
                  Parameter
                    Identifier: ' safeListPath'
                    TypeReference
                      Identifier: ' Path'
                  Parameter
                    Identifier: ' typesMapLocation'
                    TypeReference
                      Identifier: ' Path'
                  Parameter
                    Identifier: ' throttleLimit'
                    NumberKeyword
                  Parameter
                    Identifier: ' log'
                    QuestionToken
                    TypeReference
                      Identifier: ' Log'
                MethodDeclaration
                  Identifier: '
                closeProject'
                  Parameter
                    Identifier: 'req'
                    TypeReference
                      Identifier: ' CloseProject'
                  VoidKeyword
                PropertyDeclaration
                  PrivateKeyword
                  Identifier: ' closeWatchers'
                MethodDeclaration
                  Identifier: '
                install'
                  Parameter
                    Identifier: 'req'
                    TypeReference
                      Identifier: ' DiscoverTypings'
                  VoidKeyword
                PropertyDeclaration
                  PrivateKeyword
                  Identifier: ' initializeSafeList'
                PropertyDeclaration
                  PrivateKeyword
                  Identifier: ' processCacheLocation'
                PropertyDeclaration
                  PrivateKeyword
                  Identifier: ' filterTypings'
                MethodDeclaration
                  ProtectedKeyword
                  Identifier: ' ensurePackageDirectoryExists'
                  Parameter
                    Identifier: 'directory'
                    StringKeyword
                  VoidKeyword
                PropertyDeclaration
                  PrivateKeyword
                  Identifier: ' installTypings'
                PropertyDeclaration
                  PrivateKeyword
                  Identifier: ' ensureDirectoryExists'
                PropertyDeclaration
                  PrivateKeyword
                  Identifier: ' watchFiles'
                PropertyDeclaration
                  PrivateKeyword
                  Identifier: ' createSetTypings'
                PropertyDeclaration
                  PrivateKeyword
                  Identifier: ' installTypingsAsync'
                PropertyDeclaration
                  PrivateKeyword
                  Identifier: ' executeWithThrottling'
                MethodDeclaration
                  ProtectedKeyword
                  AbstractKeyword
                  Identifier: ' installWorker'
                  Parameter
                    Identifier: 'requestId'
                    NumberKeyword
                  Parameter
                    Identifier: ' packageNames'
                    ArrayType
                      StringKeyword
                  Parameter
                    Identifier: ' cwd'
                    StringKeyword
                  Parameter
                    Identifier: ' onRequestCompleted'
                    TypeReference
                      Identifier: ' RequestCompletedAction'
                  VoidKeyword
                MethodDeclaration
                  ProtectedKeyword
                  AbstractKeyword
                  Identifier: ' sendResponse'
                  Parameter
                    Identifier: 'response'
                    UnionType
                      TypeReference
                        Identifier: ' SetTypings'
                      TypeReference
                        Identifier: ' InvalidateCachedTypings'
                      TypeReference
                        Identifier: ' BeginInstallTypes'
                      TypeReference
                        Identifier: ' EndInstallTypes'
                      TypeReference
                        Identifier: ' WatchTypingLocations'
                  VoidKeyword
                PropertyDeclaration
                  ProtectedKeyword
                  ReadonlyKeyword
                  Identifier: ' latestDistTag'
                  StringLiteral
          TypeAliasDeclaration
            Identifier: ' ActionSet'
            LiteralType
              StringLiteral
          TypeAliasDeclaration
            Identifier: ' ActionInvalidate'
            LiteralType
              StringLiteral
          TypeAliasDeclaration
            Identifier: ' ActionPackageInstalled'
            LiteralType
              StringLiteral
          TypeAliasDeclaration
            Identifier: ' EventTypesRegistry'
            LiteralType
              StringLiteral
          TypeAliasDeclaration
            Identifier: ' EventBeginInstallTypes'
            LiteralType
              StringLiteral
          TypeAliasDeclaration
            Identifier: ' EventEndInstallTypes'
            LiteralType
              StringLiteral
          TypeAliasDeclaration
            Identifier: ' EventInitializationFailed'
            LiteralType
              StringLiteral
          TypeAliasDeclaration
            Identifier: ' ActionWatchTypingLocations'
            LiteralType
              StringLiteral
          InterfaceDeclaration
            Identifier: ' TypingInstallerResponse'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' kind'
              UnionType
                TypeReference
                  Identifier: ' ActionSet'
                TypeReference
                  Identifier: ' ActionInvalidate'
                TypeReference
                  Identifier: ' EventTypesRegistry'
                TypeReference
                  Identifier: ' ActionPackageInstalled'
                TypeReference
                  Identifier: ' EventBeginInstallTypes'
                TypeReference
                  Identifier: ' EventEndInstallTypes'
                TypeReference
                  Identifier: ' EventInitializationFailed'
                TypeReference
                  Identifier: ' ActionWatchTypingLocations'
          InterfaceDeclaration
            Identifier: ' TypingInstallerRequestWithProjectName'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' projectName'
              StringKeyword
          InterfaceDeclaration
            Identifier: ' DiscoverTypings'
            HeritageClause
              ExpressionWithTypeArguments
                Identifier: ' TypingInstallerRequestWithProjectName'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' fileNames'
              ArrayType
                StringKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' projectRootPath'
              TypeReference
                Identifier: ' Path'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' compilerOptions'
              TypeReference
                Identifier: ' CompilerOptions'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' typeAcquisition'
              TypeReference
                Identifier: ' TypeAcquisition'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' unresolvedImports'
              TypeReference
                Identifier: ' SortedReadonlyArray'
                StringKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' cachePath'
              QuestionToken
              StringKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' kind'
              LiteralType
                StringLiteral
          InterfaceDeclaration
            Identifier: ' CloseProject'
            HeritageClause
              ExpressionWithTypeArguments
                Identifier: ' TypingInstallerRequestWithProjectName'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' kind'
              LiteralType
                StringLiteral
          InterfaceDeclaration
            Identifier: ' TypesRegistryRequest'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' kind'
              LiteralType
                StringLiteral
          InterfaceDeclaration
            Identifier: ' InstallPackageRequest'
            HeritageClause
              ExpressionWithTypeArguments
                Identifier: ' TypingInstallerRequestWithProjectName'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' kind'
              LiteralType
                StringLiteral
            PropertySignature
              ReadonlyKeyword
              Identifier: ' fileName'
              TypeReference
                Identifier: ' Path'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' packageName'
              StringKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' projectRootPath'
              TypeReference
                Identifier: ' Path'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' id'
              NumberKeyword
          InterfaceDeclaration
            Identifier: ' PackageInstalledResponse'
            HeritageClause
              ExpressionWithTypeArguments
                Identifier: ' ProjectResponse'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' kind'
              TypeReference
                Identifier: ' ActionPackageInstalled'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' id'
              NumberKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' success'
              BooleanKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' message'
              StringKeyword
          InterfaceDeclaration
            Identifier: ' InitializationFailedResponse'
            HeritageClause
              ExpressionWithTypeArguments
                Identifier: ' TypingInstallerResponse'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' kind'
              TypeReference
                Identifier: ' EventInitializationFailed'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' message'
              StringKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' stack'
              QuestionToken
              StringKeyword
          InterfaceDeclaration
            Identifier: ' ProjectResponse'
            HeritageClause
              ExpressionWithTypeArguments
                Identifier: ' TypingInstallerResponse'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' projectName'
              StringKeyword
          InterfaceDeclaration
            Identifier: ' InvalidateCachedTypings'
            HeritageClause
              ExpressionWithTypeArguments
                Identifier: ' ProjectResponse'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' kind'
              TypeReference
                Identifier: ' ActionInvalidate'
          InterfaceDeclaration
            Identifier: ' InstallTypes'
            HeritageClause
              ExpressionWithTypeArguments
                Identifier: ' ProjectResponse'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' kind'
              UnionType
                TypeReference
                  Identifier: ' EventBeginInstallTypes'
                TypeReference
                  Identifier: ' EventEndInstallTypes'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' eventId'
              NumberKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' typingsInstallerVersion'
              StringKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' packagesToInstall'
              TypeOperator
                ArrayType
                  StringKeyword
          InterfaceDeclaration
            Identifier: ' BeginInstallTypes'
            HeritageClause
              ExpressionWithTypeArguments
                Identifier: ' InstallTypes'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' kind'
              TypeReference
                Identifier: ' EventBeginInstallTypes'
          InterfaceDeclaration
            Identifier: ' EndInstallTypes'
            HeritageClause
              ExpressionWithTypeArguments
                Identifier: ' InstallTypes'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' kind'
              TypeReference
                Identifier: ' EventEndInstallTypes'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' installSuccess'
              BooleanKeyword
          InterfaceDeclaration
            Identifier: ' InstallTypingHost'
            HeritageClause
              ExpressionWithTypeArguments
                PropertyAccessExpression
                  Identifier: ' JsTyping'
                  Identifier: 'TypingResolutionHost'
            PropertySignature
              Identifier: '
            useCaseSensitiveFileNames'
              BooleanKeyword
            MethodSignature
              Identifier: '
            writeFile'
              Parameter
                Identifier: 'path'
                StringKeyword
              Parameter
                Identifier: ' content'
                StringKeyword
              VoidKeyword
            MethodSignature
              Identifier: '
            createDirectory'
              Parameter
                Identifier: 'path'
                StringKeyword
              VoidKeyword
            MethodSignature
              Identifier: '
            getCurrentDirectory'
              QuestionToken
              StringKeyword
          InterfaceDeclaration
            Identifier: ' SetTypings'
            HeritageClause
              ExpressionWithTypeArguments
                Identifier: ' ProjectResponse'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' typeAcquisition'
              TypeReference
                Identifier: ' TypeAcquisition'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' compilerOptions'
              TypeReference
                Identifier: ' CompilerOptions'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' typings'
              ArrayType
                StringKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' unresolvedImports'
              TypeReference
                Identifier: ' SortedReadonlyArray'
                StringKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' kind'
              TypeReference
                Identifier: ' ActionSet'
          InterfaceDeclaration
            Identifier: ' WatchTypingLocations'
            HeritageClause
              ExpressionWithTypeArguments
                Identifier: ' ProjectResponse'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' files'
              UnionType
                TypeOperator
                  ArrayType
                    StringKeyword
                UndefinedKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' kind'
              TypeReference
                Identifier: ' ActionWatchTypingLocations'
          InterfaceDeclaration
            Identifier: ' CompressedData'
            PropertySignature
              Identifier: '
            length'
              NumberKeyword
            PropertySignature
              Identifier: '
            compressionKind'
              StringKeyword
            PropertySignature
              Identifier: '
            data'
              AnyKeyword
          TypeAliasDeclaration
            Identifier: ' ModuleImportResult'
            UnionType
              TypeLiteral
                PropertySignature
                  Identifier: '
            module'
                  TypeLiteral
                PropertySignature
                  Identifier: '
            error'
                  UndefinedKeyword
              TypeLiteral
                PropertySignature
                  Identifier: '
            module'
                  UndefinedKeyword
                PropertySignature
                  Identifier: '
            error'
                  TypeLiteral
                    PropertySignature
                      Identifier: '
                stack'
                      QuestionToken
                      StringKeyword
                    PropertySignature
                      Identifier: '
                message'
                      QuestionToken
                      StringKeyword
          TypeAliasDeclaration
            Identifier: ' RequireResult'
            TypeReference
              Identifier: ' ModuleImportResult'
          InterfaceDeclaration
            Identifier: ' ServerHost'
            HeritageClause
              ExpressionWithTypeArguments
                Identifier: ' System'
            MethodSignature
              Identifier: '
            watchFile'
              Parameter
                Identifier: 'path'
                StringKeyword
              Parameter
                Identifier: ' callback'
                TypeReference
                  Identifier: ' FileWatcherCallback'
              Parameter
                Identifier: ' pollingInterval'
                QuestionToken
                NumberKeyword
              Parameter
                Identifier: ' options'
                QuestionToken
                TypeReference
                  Identifier: ' WatchOptions'
              TypeReference
                Identifier: ' FileWatcher'
            MethodSignature
              Identifier: '
            watchDirectory'
              Parameter
                Identifier: 'path'
                StringKeyword
              Parameter
                Identifier: ' callback'
                TypeReference
                  Identifier: ' DirectoryWatcherCallback'
              Parameter
                Identifier: ' recursive'
                QuestionToken
                BooleanKeyword
              Parameter
                Identifier: ' options'
                QuestionToken
                TypeReference
                  Identifier: ' WatchOptions'
              TypeReference
                Identifier: ' FileWatcher'
            PropertySignature
              Identifier: '
            preferNonRecursiveWatch'
              QuestionToken
              BooleanKeyword
            MethodSignature
              Identifier: '
            setTimeout'
              Parameter
                Identifier: 'callback'
                FunctionType
                  Parameter
                    DotDotDotToken
                    Identifier: 'args'
                    ArrayType
                      AnyKeyword
                  VoidKeyword
              Parameter
                Identifier: ' ms'
                NumberKeyword
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              AnyKeyword
            MethodSignature
              Identifier: '
            clearTimeout'
              Parameter
                Identifier: 'timeoutId'
                AnyKeyword
              VoidKeyword
            MethodSignature
              Identifier: '
            setImmediate'
              Parameter
                Identifier: 'callback'
                FunctionType
                  Parameter
                    DotDotDotToken
                    Identifier: 'args'
                    ArrayType
                      AnyKeyword
                  VoidKeyword
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              AnyKeyword
            MethodSignature
              Identifier: '
            clearImmediate'
              Parameter
                Identifier: 'timeoutId'
                AnyKeyword
              VoidKeyword
            MethodSignature
              Identifier: '
            gc'
              QuestionToken
              VoidKeyword
            MethodSignature
              Identifier: '
            trace'
              QuestionToken
              Parameter
                Identifier: 's'
                StringKeyword
              VoidKeyword
            MethodSignature
              Identifier: '
            require'
              QuestionToken
              Parameter
                Identifier: 'initialPath'
                StringKeyword
              Parameter
                Identifier: ' moduleName'
                StringKeyword
              TypeReference
                Identifier: ' ModuleImportResult'
          InterfaceDeclaration
            Identifier: ' InstallPackageOptionsWithProject'
            HeritageClause
              ExpressionWithTypeArguments
                Identifier: ' InstallPackageOptions'
            PropertySignature
              Identifier: '
            projectName'
              StringKeyword
            PropertySignature
              Identifier: '
            projectRootPath'
              TypeReference
                Identifier: ' Path'
          InterfaceDeclaration
            Identifier: ' ITypingsInstaller'
            MethodSignature
              Identifier: '
            isKnownTypesPackageName'
              Parameter
                Identifier: 'name'
                StringKeyword
              BooleanKeyword
            MethodSignature
              Identifier: '
            installPackage'
              Parameter
                Identifier: 'options'
                TypeReference
                  Identifier: ' InstallPackageOptionsWithProject'
              TypeReference
                Identifier: ' Promise'
                TypeReference
                  Identifier: 'ApplyCodeActionCommandResult'
            MethodSignature
              Identifier: '
            enqueueInstallTypingsRequest'
              Parameter
                Identifier: 'p'
                TypeReference
                  Identifier: ' Project'
              Parameter
                Identifier: ' typeAcquisition'
                TypeReference
                  Identifier: ' TypeAcquisition'
              Parameter
                Identifier: ' unresolvedImports'
                UnionType
                  TypeReference
                    Identifier: ' SortedReadonlyArray'
                    StringKeyword
                  UndefinedKeyword
              VoidKeyword
            MethodSignature
              Identifier: '
            attach'
              Parameter
                Identifier: 'projectService'
                TypeReference
                  Identifier: ' ProjectService'
              VoidKeyword
            MethodSignature
              Identifier: '
            onProjectClosed'
              Parameter
                Identifier: 'p'
                TypeReference
                  Identifier: ' Project'
              VoidKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' globalTypingsCacheLocation'
              UnionType
                StringKeyword
                UndefinedKeyword
          FunctionDeclaration
            Identifier: ' createInstallTypingsRequest'
            Parameter
              Identifier: 'project'
              TypeReference
                Identifier: ' Project'
            Parameter
              Identifier: ' typeAcquisition'
              TypeReference
                Identifier: ' TypeAcquisition'
            Parameter
              Identifier: ' unresolvedImports'
              TypeReference
                Identifier: ' SortedReadonlyArray'
                StringKeyword
            Parameter
              Identifier: ' cachePath'
              QuestionToken
              StringKeyword
            TypeReference
              Identifier: ' DiscoverTypings'
          FunctionDeclaration
            Identifier: ' toNormalizedPath'
            Parameter
              Identifier: 'fileName'
              StringKeyword
            TypeReference
              Identifier: ' NormalizedPath'
          FunctionDeclaration
            Identifier: ' normalizedPathToPath'
            Parameter
              Identifier: 'normalizedPath'
              TypeReference
                Identifier: ' NormalizedPath'
            Parameter
              Identifier: ' currentDirectory'
              StringKeyword
            Parameter
              Identifier: ' getCanonicalFileName'
              FunctionType
                Parameter
                  Identifier: 'f'
                  StringKeyword
                StringKeyword
            TypeReference
              Identifier: ' Path'
          FunctionDeclaration
            Identifier: ' asNormalizedPath'
            Parameter
              Identifier: 'fileName'
              StringKeyword
            TypeReference
              Identifier: ' NormalizedPath'
          FunctionDeclaration
            Identifier: ' createNormalizedPathMap'
            TypeParameter
              Identifier: 'T'
            TypeReference
              Identifier: ' NormalizedPathMap'
              TypeReference
                Identifier: 'T'
          FunctionDeclaration
            Identifier: ' isInferredProjectName'
            Parameter
              Identifier: 'name'
              StringKeyword
            BooleanKeyword
          FunctionDeclaration
            Identifier: ' makeInferredProjectName'
            Parameter
              Identifier: 'counter'
              NumberKeyword
            StringKeyword
          FunctionDeclaration
            Identifier: ' createSortedArray'
            TypeParameter
              Identifier: 'T'
            TypeReference
              Identifier: ' SortedArray'
              TypeReference
                Identifier: 'T'
          EnumDeclaration
            Identifier: ' LogLevel'
            EnumMember
              Identifier: '
            terse'
              NumericLiteral
            EnumMember
              Identifier: '
            normal'
              NumericLiteral
            EnumMember
              Identifier: '
            requestTime'
              NumericLiteral
            EnumMember
              Identifier: '
            verbose'
              NumericLiteral
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' emptyArray'
                TypeReference
                  Identifier: ' SortedReadonlyArray'
                  NeverKeyword
          InterfaceDeclaration
            Identifier: ' Logger'
            MethodSignature
              Identifier: '
            close'
              VoidKeyword
            MethodSignature
              Identifier: '
            hasLevel'
              Parameter
                Identifier: 'level'
                TypeReference
                  Identifier: ' LogLevel'
              BooleanKeyword
            MethodSignature
              Identifier: '
            loggingEnabled'
              BooleanKeyword
            MethodSignature
              Identifier: '
            perftrc'
              Parameter
                Identifier: 's'
                StringKeyword
              VoidKeyword
            MethodSignature
              Identifier: '
            info'
              Parameter
                Identifier: 's'
                StringKeyword
              VoidKeyword
            MethodSignature
              Identifier: '
            startGroup'
              VoidKeyword
            MethodSignature
              Identifier: '
            endGroup'
              VoidKeyword
            MethodSignature
              Identifier: '
            msg'
              Parameter
                Identifier: 's'
                StringKeyword
              Parameter
                Identifier: ' type'
                QuestionToken
                TypeReference
                  Identifier: ' Msg'
              VoidKeyword
            MethodSignature
              Identifier: '
            getLogFileName'
              UnionType
                StringKeyword
                UndefinedKeyword
          EnumDeclaration
            Identifier: ' Msg'
            EnumMember
              Identifier: '
            Err'
              StringLiteral
            EnumMember
              Identifier: '
            Info'
              StringLiteral
            EnumMember
              Identifier: '
            Perf'
              StringLiteral
          ModuleDeclaration
            Identifier: ' Errors'
            ModuleBlock
              FunctionDeclaration
                Identifier: ' ThrowNoProject'
                NeverKeyword
              FunctionDeclaration
                Identifier: ' ThrowProjectLanguageServiceDisabled'
                NeverKeyword
              FunctionDeclaration
                Identifier: ' ThrowProjectDoesNotContainDocument'
                Parameter
                  Identifier: 'fileName'
                  StringKeyword
                Parameter
                  Identifier: ' project'
                  TypeReference
                    Identifier: ' Project'
                NeverKeyword
          TypeAliasDeclaration
            Identifier: ' NormalizedPath'
            IntersectionType
              StringKeyword
              TypeLiteral
                PropertySignature
                  Identifier: '
            __normalizedPathTag'
                  AnyKeyword
          InterfaceDeclaration
            Identifier: ' NormalizedPathMap'
            TypeParameter
              Identifier: 'T'
            MethodSignature
              Identifier: '
            get'
              Parameter
                Identifier: 'path'
                TypeReference
                  Identifier: ' NormalizedPath'
              UnionType
                TypeReference
                  Identifier: ' T'
                UndefinedKeyword
            MethodSignature
              Identifier: '
            set'
              Parameter
                Identifier: 'path'
                TypeReference
                  Identifier: ' NormalizedPath'
              Parameter
                Identifier: ' value'
                TypeReference
                  Identifier: ' T'
              VoidKeyword
            MethodSignature
              Identifier: '
            contains'
              Parameter
                Identifier: 'path'
                TypeReference
                  Identifier: ' NormalizedPath'
              BooleanKeyword
            MethodSignature
              Identifier: '
            remove'
              Parameter
                Identifier: 'path'
                TypeReference
                  Identifier: ' NormalizedPath'
              VoidKeyword
          FunctionDeclaration
            Identifier: ' isDynamicFileName'
            Parameter
              Identifier: 'fileName'
              TypeReference
                Identifier: ' NormalizedPath'
            BooleanKeyword
          ClassDeclaration
            Identifier: ' ScriptInfo'
            PropertyDeclaration
              PrivateKeyword
              ReadonlyKeyword
              Identifier: ' host'
            PropertyDeclaration
              ReadonlyKeyword
              Identifier: ' fileName'
              TypeReference
                Identifier: ' NormalizedPath'
            PropertyDeclaration
              ReadonlyKeyword
              Identifier: ' scriptKind'
              TypeReference
                Identifier: ' ScriptKind'
            PropertyDeclaration
              ReadonlyKeyword
              Identifier: ' hasMixedContent'
              BooleanKeyword
            PropertyDeclaration
              ReadonlyKeyword
              Identifier: ' path'
              TypeReference
                Identifier: ' Path'
            PropertyDeclaration
              ReadonlyKeyword
              Identifier: ' containingProjects'
              ArrayType
                TypeReference
                  Identifier: ' Project'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' formatSettings'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' preferences'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' realpath'
            Constructor
              Parameter
                Identifier: 'host'
                TypeReference
                  Identifier: ' ServerHost'
              Parameter
                Identifier: ' fileName'
                TypeReference
                  Identifier: ' NormalizedPath'
              Parameter
                Identifier: ' scriptKind'
                TypeReference
                  Identifier: ' ScriptKind'
              Parameter
                Identifier: ' hasMixedContent'
                BooleanKeyword
              Parameter
                Identifier: ' path'
                TypeReference
                  Identifier: ' Path'
              Parameter
                Identifier: ' initialVersion'
                QuestionToken
                NumberKeyword
            MethodDeclaration
              Identifier: '
            isScriptOpen'
              BooleanKeyword
            MethodDeclaration
              Identifier: '
            open'
              Parameter
                Identifier: 'newText'
                UnionType
                  StringKeyword
                  UndefinedKeyword
              VoidKeyword
            MethodDeclaration
              Identifier: '
            close'
              Parameter
                Identifier: 'fileExists'
                QuestionToken
                BooleanKeyword
              VoidKeyword
            MethodDeclaration
              Identifier: '
            getSnapshot'
              TypeReference
                Identifier: ' IScriptSnapshot'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' ensureRealPath'
            MethodDeclaration
              Identifier: '
            getFormatCodeSettings'
              UnionType
                TypeReference
                  Identifier: ' FormatCodeSettings'
                UndefinedKeyword
            MethodDeclaration
              Identifier: '
            getPreferences'
              UnionType
                TypeReference
                  QualifiedName
                    Identifier: ' protocol'
                    Identifier: 'UserPreferences'
                UndefinedKeyword
            MethodDeclaration
              Identifier: '
            attachToProject'
              Parameter
                Identifier: 'project'
                TypeReference
                  Identifier: ' Project'
              BooleanKeyword
            MethodDeclaration
              Identifier: '
            isAttached'
              Parameter
                Identifier: 'project'
                TypeReference
                  Identifier: ' Project'
              BooleanKeyword
            MethodDeclaration
              Identifier: '
            detachFromProject'
              Parameter
                Identifier: 'project'
                TypeReference
                  Identifier: ' Project'
              VoidKeyword
            MethodDeclaration
              Identifier: '
            detachAllProjects'
              VoidKeyword
            MethodDeclaration
              Identifier: '
            getDefaultProject'
              TypeReference
                Identifier: ' Project'
            MethodDeclaration
              Identifier: '
            registerFileUpdate'
              VoidKeyword
            MethodDeclaration
              Identifier: '
            setOptions'
              Parameter
                Identifier: 'formatSettings'
                TypeReference
                  Identifier: ' FormatCodeSettings'
              Parameter
                Identifier: ' preferences'
                UnionType
                  TypeReference
                    QualifiedName
                      Identifier: ' protocol'
                      Identifier: 'UserPreferences'
                  UndefinedKeyword
              VoidKeyword
            MethodDeclaration
              Identifier: '
            getLatestVersion'
              StringKeyword
            MethodDeclaration
              Identifier: '
            saveTo'
              Parameter
                Identifier: 'fileName'
                StringKeyword
              VoidKeyword
            MethodDeclaration
              Identifier: '
            reloadFromFile'
              Parameter
                Identifier: 'tempFileName'
                QuestionToken
                TypeReference
                  Identifier: ' NormalizedPath'
              BooleanKeyword
            MethodDeclaration
              Identifier: '
            editContent'
              Parameter
                Identifier: 'start'
                NumberKeyword
              Parameter
                Identifier: ' end'
                NumberKeyword
              Parameter
                Identifier: ' newText'
                StringKeyword
              VoidKeyword
            MethodDeclaration
              Identifier: '
            markContainingProjectsAsDirty'
              VoidKeyword
            MethodDeclaration
              Identifier: '
            isOrphan'
              BooleanKeyword
            MethodDeclaration
              Identifier: '
            /**
             *  @param line 1 based index
             */
            lineToTextSpan'
              Parameter
                Identifier: 'line'
                NumberKeyword
              TypeReference
                Identifier: ' TextSpan'
            MethodDeclaration
              Identifier: '
            /**
             * @param line 1 based index
             * @param offset 1 based index
             */
            lineOffsetToPosition'
              Parameter
                Identifier: 'line'
                NumberKeyword
              Parameter
                Identifier: ' offset'
                NumberKeyword
              NumberKeyword
            MethodDeclaration
              Identifier: '
            positionToLineOffset'
              Parameter
                Identifier: 'position'
                NumberKeyword
              TypeReference
                QualifiedName
                  Identifier: ' protocol'
                  Identifier: 'Location'
            MethodDeclaration
              Identifier: '
            isJavaScript'
              BooleanKeyword
          FunctionDeclaration
            Identifier: ' allRootFilesAreJsOrDts'
            Parameter
              Identifier: 'project'
              TypeReference
                Identifier: ' Project'
            BooleanKeyword
          FunctionDeclaration
            Identifier: ' allFilesAreJsOrDts'
            Parameter
              Identifier: 'project'
              TypeReference
                Identifier: ' Project'
            BooleanKeyword
          EnumDeclaration
            Identifier: ' ProjectKind'
            EnumMember
              Identifier: '
            Inferred'
              NumericLiteral
            EnumMember
              Identifier: '
            Configured'
              NumericLiteral
            EnumMember
              Identifier: '
            External'
              NumericLiteral
            EnumMember
              Identifier: '
            AutoImportProvider'
              NumericLiteral
            EnumMember
              Identifier: '
            Auxiliary'
              NumericLiteral
          InterfaceDeclaration
            Identifier: ' PluginCreateInfo'
            PropertySignature
              Identifier: '
            project'
              TypeReference
                Identifier: ' Project'
            PropertySignature
              Identifier: '
            languageService'
              TypeReference
                Identifier: ' LanguageService'
            PropertySignature
              Identifier: '
            languageServiceHost'
              TypeReference
                Identifier: ' LanguageServiceHost'
            PropertySignature
              Identifier: '
            serverHost'
              TypeReference
                Identifier: ' ServerHost'
            PropertySignature
              Identifier: '
            session'
              QuestionToken
              TypeReference
                Identifier: ' Session'
                UnknownKeyword
            PropertySignature
              Identifier: '
            config'
              AnyKeyword
          InterfaceDeclaration
            Identifier: ' PluginModule'
            MethodSignature
              Identifier: '
            create'
              Parameter
                Identifier: 'createInfo'
                TypeReference
                  Identifier: ' PluginCreateInfo'
              TypeReference
                Identifier: ' LanguageService'
            MethodSignature
              Identifier: '
            getExternalFiles'
              QuestionToken
              Parameter
                Identifier: 'proj'
                TypeReference
                  Identifier: ' Project'
              Parameter
                Identifier: ' updateLevel'
                TypeReference
                  Identifier: ' ProgramUpdateLevel'
              ArrayType
                StringKeyword
            MethodSignature
              Identifier: '
            onConfigurationChanged'
              QuestionToken
              Parameter
                Identifier: 'config'
                AnyKeyword
              VoidKeyword
          InterfaceDeclaration
            Identifier: ' PluginModuleWithName'
            PropertySignature
              Identifier: '
            name'
              StringKeyword
            PropertySignature
              Identifier: '
            module'
              TypeReference
                Identifier: ' PluginModule'
          TypeAliasDeclaration
            Identifier: ' PluginModuleFactory'
            FunctionType
              Parameter
                Identifier: 'mod'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            typescript'
                    TypeQuery
                      Identifier: ' ts'
              TypeReference
                Identifier: ' PluginModule'
          ClassDeclaration
            AbstractKeyword
            Identifier: ' Project'
            HeritageClause
              ExpressionWithTypeArguments
                Identifier: ' LanguageServiceHost'
              ExpressionWithTypeArguments
                Identifier: ' ModuleResolutionHost'
            PropertyDeclaration
              ReadonlyKeyword
              Identifier: ' projectKind'
              TypeReference
                Identifier: ' ProjectKind'
            PropertyDeclaration
              ReadonlyKeyword
              Identifier: ' projectService'
              TypeReference
                Identifier: ' ProjectService'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' compilerOptions'
            PropertyDeclaration
              Identifier: '
            compileOnSaveEnabled'
              BooleanKeyword
            PropertyDeclaration
              ProtectedKeyword
              Identifier: ' watchOptions'
              UnionType
                TypeReference
                  Identifier: ' WatchOptions'
                UndefinedKeyword
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' rootFilesMap'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' program'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' externalFiles'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' missingFilesMap'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' generatedFilesMap'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' hasAddedorRemovedFiles'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' hasAddedOrRemovedSymlinks'
            PropertyDeclaration
              ProtectedKeyword
              Identifier: ' languageService'
              TypeReference
                Identifier: ' LanguageService'
            PropertyDeclaration
              Identifier: '
            languageServiceEnabled'
              BooleanKeyword
            PropertyDeclaration
              ReadonlyKeyword
              Identifier: ' trace'
              QuestionToken
              FunctionType
                Parameter
                  Identifier: 's'
                  StringKeyword
                VoidKeyword
            PropertyDeclaration
              ReadonlyKeyword
              Identifier: ' realpath'
              QuestionToken
              FunctionType
                Parameter
                  Identifier: 'path'
                  StringKeyword
                StringKeyword
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' builderState'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' updatedFileNames'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' lastReportedFileNames'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' lastReportedVersion'
            PropertyDeclaration
              ProtectedKeyword
              Identifier: ' projectErrors'
              UnionType
                ArrayType
                  TypeReference
                    Identifier: ' Diagnostic'
                UndefinedKeyword
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' typingsCache'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' typingWatchers'
            PropertyDeclaration
              PrivateKeyword
              ReadonlyKeyword
              Identifier: ' cancellationToken'
            MethodDeclaration
              Identifier: '
            isNonTsProject'
              BooleanKeyword
            MethodDeclaration
              Identifier: '
            isJsOnlyProject'
              BooleanKeyword
            MethodDeclaration
              StaticKeyword
              Identifier: ' resolveModule'
              Parameter
                Identifier: 'moduleName'
                StringKeyword
              Parameter
                Identifier: ' initialDir'
                StringKeyword
              Parameter
                Identifier: ' host'
                TypeReference
                  Identifier: ' ServerHost'
              Parameter
                Identifier: ' log'
                FunctionType
                  Parameter
                    Identifier: 'message'
                    StringKeyword
                  VoidKeyword
              UnionType
                TypeLiteral
                UndefinedKeyword
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' exportMapCache'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' changedFilesForExportMapCache'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' moduleSpecifierCache'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' symlinks'
            PropertyDeclaration
              ReadonlyKeyword
              Identifier: ' jsDocParsingMode'
              UnionType
                TypeReference
                  Identifier: ' JSDocParsingMode'
                UndefinedKeyword
            MethodDeclaration
              Identifier: '
            isKnownTypesPackageName'
              Parameter
                Identifier: 'name'
                StringKeyword
              BooleanKeyword
            MethodDeclaration
              Identifier: '
            installPackage'
              Parameter
                Identifier: 'options'
                TypeReference
                  Identifier: ' InstallPackageOptions'
              TypeReference
                Identifier: ' Promise'
                TypeReference
                  Identifier: 'ApplyCodeActionCommandResult'
            MethodDeclaration
              Identifier: '
            getCompilationSettings'
              TypeReference
                Identifier: ' CompilerOptions'
            MethodDeclaration
              Identifier: '
            getCompilerOptions'
              TypeReference
                Identifier: ' CompilerOptions'
            MethodDeclaration
              Identifier: '
            getNewLine'
              StringKeyword
            MethodDeclaration
              Identifier: '
            getProjectVersion'
              StringKeyword
            MethodDeclaration
              Identifier: '
            getProjectReferences'
              UnionType
                TypeOperator
                  ArrayType
                    TypeReference
                      Identifier: ' ProjectReference'
                UndefinedKeyword
            MethodDeclaration
              Identifier: '
            getScriptFileNames'
              ArrayType
                StringKeyword
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getOrCreateScriptInfoAndAttachToProject'
            MethodDeclaration
              Identifier: '
            getScriptKind'
              Parameter
                Identifier: 'fileName'
                StringKeyword
              TypeReference
                Identifier: ' ScriptKind'
            MethodDeclaration
              Identifier: '
            getScriptVersion'
              Parameter
                Identifier: 'filename'
                StringKeyword
              StringKeyword
            MethodDeclaration
              Identifier: '
            getScriptSnapshot'
              Parameter
                Identifier: 'filename'
                StringKeyword
              UnionType
                TypeReference
                  Identifier: ' IScriptSnapshot'
                UndefinedKeyword
            MethodDeclaration
              Identifier: '
            getCancellationToken'
              TypeReference
                Identifier: ' HostCancellationToken'
            MethodDeclaration
              Identifier: '
            getCurrentDirectory'
              StringKeyword
            MethodDeclaration
              Identifier: '
            getDefaultLibFileName'
              StringKeyword
            MethodDeclaration
              Identifier: '
            useCaseSensitiveFileNames'
              BooleanKeyword
            MethodDeclaration
              Identifier: '
            readDirectory'
              Parameter
                Identifier: 'path'
                StringKeyword
              Parameter
                Identifier: ' extensions'
                QuestionToken
                TypeOperator
                  ArrayType
                    StringKeyword
              Parameter
                Identifier: ' exclude'
                QuestionToken
                TypeOperator
                  ArrayType
                    StringKeyword
              Parameter
                Identifier: ' include'
                QuestionToken
                TypeOperator
                  ArrayType
                    StringKeyword
              Parameter
                Identifier: ' depth'
                QuestionToken
                NumberKeyword
              ArrayType
                StringKeyword
            MethodDeclaration
              Identifier: '
            readFile'
              Parameter
                Identifier: 'fileName'
                StringKeyword
              UnionType
                StringKeyword
                UndefinedKeyword
            MethodDeclaration
              Identifier: '
            writeFile'
              Parameter
                Identifier: 'fileName'
                StringKeyword
              Parameter
                Identifier: ' content'
                StringKeyword
              VoidKeyword
            MethodDeclaration
              Identifier: '
            fileExists'
              Parameter
                Identifier: 'file'
                StringKeyword
              BooleanKeyword
            MethodDeclaration
              Identifier: '
            directoryExists'
              Parameter
                Identifier: 'path'
                StringKeyword
              BooleanKeyword
            MethodDeclaration
              Identifier: '
            getDirectories'
              Parameter
                Identifier: 'path'
                StringKeyword
              ArrayType
                StringKeyword
            MethodDeclaration
              Identifier: '
            log'
              Parameter
                Identifier: 's'
                StringKeyword
              VoidKeyword
            MethodDeclaration
              Identifier: '
            error'
              Parameter
                Identifier: 's'
                StringKeyword
              VoidKeyword
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' setInternalCompilerOptionsForEmittingJsFiles'
            MethodDeclaration
              Identifier: '
            /**
             * Get the errors that dont have any file name associated
             */
            getGlobalProjectErrors'
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' Diagnostic'
            MethodDeclaration
              Identifier: '
            /**
             * Get all the project errors
             */
            getAllProjectErrors'
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' Diagnostic'
            MethodDeclaration
              Identifier: '
            setProjectErrors'
              Parameter
                Identifier: 'projectErrors'
                UnionType
                  ArrayType
                    TypeReference
                      Identifier: ' Diagnostic'
                  UndefinedKeyword
              VoidKeyword
            MethodDeclaration
              Identifier: '
            getLanguageService'
              Parameter
                Identifier: 'ensureSynchronized'
                QuestionToken
                BooleanKeyword
              TypeReference
                Identifier: ' LanguageService'
            MethodDeclaration
              Identifier: '
            getCompileOnSaveAffectedFileList'
              Parameter
                Identifier: 'scriptInfo'
                TypeReference
                  Identifier: ' ScriptInfo'
              ArrayType
                StringKeyword
            MethodDeclaration
              Identifier: '
            /**
             * Returns true if emit was conducted
             */
            emitFile'
              Parameter
                Identifier: 'scriptInfo'
                TypeReference
                  Identifier: ' ScriptInfo'
              Parameter
                Identifier: ' writeFile'
                FunctionType
                  Parameter
                    Identifier: 'path'
                    StringKeyword
                  Parameter
                    Identifier: ' data'
                    StringKeyword
                  Parameter
                    Identifier: ' writeByteOrderMark'
                    QuestionToken
                    BooleanKeyword
                  VoidKeyword
              TypeReference
                Identifier: ' EmitResult'
            MethodDeclaration
              Identifier: '
            enableLanguageService'
              VoidKeyword
            MethodDeclaration
              Identifier: '
            disableLanguageService'
              Parameter
                Identifier: 'lastFileExceededProgramSize'
                QuestionToken
                StringKeyword
              VoidKeyword
            MethodDeclaration
              Identifier: '
            getProjectName'
              StringKeyword
            MethodDeclaration
              ProtectedKeyword
              Identifier: ' removeLocalTypingsFromTypeAcquisition'
              Parameter
                Identifier: 'newTypeAcquisition'
                TypeReference
                  Identifier: ' TypeAcquisition'
              TypeReference
                Identifier: ' TypeAcquisition'
            MethodDeclaration
              Identifier: '
            getExternalFiles'
              Parameter
                Identifier: 'updateLevel'
                QuestionToken
                TypeReference
                  Identifier: ' ProgramUpdateLevel'
              TypeReference
                Identifier: ' SortedReadonlyArray'
                StringKeyword
            MethodDeclaration
              Identifier: '
            getSourceFile'
              Parameter
                Identifier: 'path'
                TypeReference
                  Identifier: ' Path'
              UnionType
                TypeReference
                  Identifier: ' SourceFile'
                UndefinedKeyword
            MethodDeclaration
              Identifier: '
            close'
              VoidKeyword
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' detachScriptInfoIfNotRoot'
            MethodDeclaration
              Identifier: '
            isClosed'
              BooleanKeyword
            MethodDeclaration
              Identifier: '
            hasRoots'
              BooleanKeyword
            MethodDeclaration
              Identifier: '
            getRootFiles'
              ArrayType
                TypeReference
                  Identifier: ' NormalizedPath'
            MethodDeclaration
              Identifier: '
            getRootScriptInfos'
              ArrayType
                TypeReference
                  Identifier: ' ScriptInfo'
            MethodDeclaration
              Identifier: '
            getScriptInfos'
              ArrayType
                TypeReference
                  Identifier: ' ScriptInfo'
            MethodDeclaration
              Identifier: '
            getExcludedFiles'
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' NormalizedPath'
            MethodDeclaration
              Identifier: '
            getFileNames'
              Parameter
                Identifier: 'excludeFilesFromExternalLibraries'
                QuestionToken
                BooleanKeyword
              Parameter
                Identifier: ' excludeConfigFiles'
                QuestionToken
                BooleanKeyword
              ArrayType
                TypeReference
                  Identifier: ' NormalizedPath'
            MethodDeclaration
              Identifier: '
            hasConfigFile'
              Parameter
                Identifier: 'configFilePath'
                TypeReference
                  Identifier: ' NormalizedPath'
              BooleanKeyword
            MethodDeclaration
              Identifier: '
            containsScriptInfo'
              Parameter
                Identifier: 'info'
                TypeReference
                  Identifier: ' ScriptInfo'
              BooleanKeyword
            MethodDeclaration
              Identifier: '
            containsFile'
              Parameter
                Identifier: 'filename'
                TypeReference
                  Identifier: ' NormalizedPath'
              Parameter
                Identifier: ' requireOpen'
                QuestionToken
                BooleanKeyword
              BooleanKeyword
            MethodDeclaration
              Identifier: '
            isRoot'
              Parameter
                Identifier: 'info'
                TypeReference
                  Identifier: ' ScriptInfo'
              BooleanKeyword
            MethodDeclaration
              Identifier: '
            addRoot'
              Parameter
                Identifier: 'info'
                TypeReference
                  Identifier: ' ScriptInfo'
              Parameter
                Identifier: ' fileName'
                QuestionToken
                TypeReference
                  Identifier: ' NormalizedPath'
              VoidKeyword
            MethodDeclaration
              Identifier: '
            addMissingFileRoot'
              Parameter
                Identifier: 'fileName'
                TypeReference
                  Identifier: ' NormalizedPath'
              VoidKeyword
            MethodDeclaration
              Identifier: '
            removeFile'
              Parameter
                Identifier: 'info'
                TypeReference
                  Identifier: ' ScriptInfo'
              Parameter
                Identifier: ' fileExists'
                BooleanKeyword
              Parameter
                Identifier: ' detachFromProject'
                BooleanKeyword
              VoidKeyword
            MethodDeclaration
              Identifier: '
            registerFileUpdate'
              Parameter
                Identifier: 'fileName'
                StringKeyword
              VoidKeyword
            MethodDeclaration
              Identifier: '
            /**
             * Updates set of files that contribute to this project
             * @returns: true if set of files in the project stays the same and false - otherwise.
             */
            updateGraph'
              BooleanKeyword
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' closeWatchingTypingLocations'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' onTypingInstallerWatchInvoke'
            MethodDeclaration
              ProtectedKeyword
              Identifier: ' removeExistingTypings'
              Parameter
                Identifier: 'include'
                ArrayType
                  StringKeyword
              ArrayType
                StringKeyword
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' updateGraphWorker'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' detachScriptInfoFromProject'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' addMissingFileWatcher'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' isWatchedMissingFile'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' createGeneratedFileWatcher'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' isValidGeneratedFileWatcher'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' clearGeneratedFileWatch'
            MethodDeclaration
              Identifier: '
            getScriptInfoForNormalizedPath'
              Parameter
                Identifier: 'fileName'
                TypeReference
                  Identifier: ' NormalizedPath'
              UnionType
                TypeReference
                  Identifier: ' ScriptInfo'
                UndefinedKeyword
            MethodDeclaration
              Identifier: '
            getScriptInfo'
              Parameter
                Identifier: 'uncheckedFileName'
                StringKeyword
              UnionType
                TypeReference
                  Identifier: ' ScriptInfo'
                UndefinedKeyword
            MethodDeclaration
              Identifier: '
            filesToString'
              Parameter
                Identifier: 'writeProjectFileNames'
                BooleanKeyword
              StringKeyword
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' filesToStringWorker'
            MethodDeclaration
              Identifier: '
            setCompilerOptions'
              Parameter
                Identifier: 'compilerOptions'
                TypeReference
                  Identifier: ' CompilerOptions'
              VoidKeyword
            MethodDeclaration
              Identifier: '
            setTypeAcquisition'
              Parameter
                Identifier: 'newTypeAcquisition'
                UnionType
                  TypeReference
                    Identifier: ' TypeAcquisition'
                  UndefinedKeyword
              VoidKeyword
            MethodDeclaration
              Identifier: '
            getTypeAcquisition'
              TypeReference
                Identifier: ' TypeAcquisition'
            MethodDeclaration
              ProtectedKeyword
              Identifier: ' removeRoot'
              Parameter
                Identifier: 'info'
                TypeReference
                  Identifier: ' ScriptInfo'
              VoidKeyword
            MethodDeclaration
              ProtectedKeyword
              Identifier: ' enableGlobalPlugins'
              Parameter
                Identifier: 'options'
                TypeReference
                  Identifier: ' CompilerOptions'
              VoidKeyword
            MethodDeclaration
              ProtectedKeyword
              Identifier: ' enablePlugin'
              Parameter
                Identifier: 'pluginConfigEntry'
                TypeReference
                  Identifier: ' PluginImport'
              Parameter
                Identifier: ' searchPaths'
                ArrayType
                  StringKeyword
              VoidKeyword
            MethodDeclaration
              Identifier: '
            /** Starts a new check for diagnostics. Call this if some file has updated that would cause diagnostics to be changed. */
            refreshDiagnostics'
              VoidKeyword
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' isDefaultProjectForOpenFiles'
          ClassDeclaration
            Identifier: ' InferredProject'
            HeritageClause
              ExpressionWithTypeArguments
                Identifier: ' Project'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' _isJsInferredProject'
            MethodDeclaration
              Identifier: '
            toggleJsInferredProject'
              Parameter
                Identifier: 'isJsInferredProject'
                BooleanKeyword
              VoidKeyword
            MethodDeclaration
              Identifier: '
            setCompilerOptions'
              Parameter
                Identifier: 'options'
                QuestionToken
                TypeReference
                  Identifier: ' CompilerOptions'
              VoidKeyword
            PropertyDeclaration
              ReadonlyKeyword
              Identifier: ' projectRootPath'
              UnionType
                StringKeyword
                UndefinedKeyword
            MethodDeclaration
              Identifier: '
            addRoot'
              Parameter
                Identifier: 'info'
                TypeReference
                  Identifier: ' ScriptInfo'
              VoidKeyword
            MethodDeclaration
              Identifier: '
            removeRoot'
              Parameter
                Identifier: 'info'
                TypeReference
                  Identifier: ' ScriptInfo'
              VoidKeyword
            MethodDeclaration
              Identifier: '
            isProjectWithSingleRoot'
              BooleanKeyword
            MethodDeclaration
              Identifier: '
            close'
              VoidKeyword
            MethodDeclaration
              Identifier: '
            getTypeAcquisition'
              TypeReference
                Identifier: ' TypeAcquisition'
          ClassDeclaration
            Identifier: ' AutoImportProviderProject'
            HeritageClause
              ExpressionWithTypeArguments
                Identifier: ' Project'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' hostProject'
            PropertyDeclaration
              PrivateKeyword
              StaticKeyword
              ReadonlyKeyword
              Identifier: ' maxDependencies'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' rootFileNames'
            MethodDeclaration
              Identifier: '
            updateGraph'
              BooleanKeyword
            MethodDeclaration
              Identifier: '
            hasRoots'
              BooleanKeyword
            MethodDeclaration
              Identifier: '
            getScriptFileNames'
              ArrayType
                StringKeyword
            MethodDeclaration
              Identifier: '
            getLanguageService'
              NeverKeyword
            MethodDeclaration
              Identifier: '
            getHostForAutoImportProvider'
              NeverKeyword
            MethodDeclaration
              Identifier: '
            getProjectReferences'
              UnionType
                TypeOperator
                  ArrayType
                    TypeReference
                      Identifier: ' ProjectReference'
                UndefinedKeyword
          ClassDeclaration
            Identifier: ' ConfiguredProject'
            HeritageClause
              ExpressionWithTypeArguments
                Identifier: ' Project'
            PropertyDeclaration
              ReadonlyKeyword
              Identifier: ' canonicalConfigFilePath'
              TypeReference
                Identifier: ' NormalizedPath'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' projectReferences'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' compilerHost'
              QuestionToken
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' releaseParsedConfig'
            MethodDeclaration
              Identifier: '
            /**
             * If the project has reload from disk pending, it reloads (and then updates graph as part of that) instead of just updating the graph
             * @returns: true if set of files in the project stays the same and false - otherwise.
             */
            updateGraph'
              BooleanKeyword
            MethodDeclaration
              Identifier: '
            getConfigFilePath'
              TypeReference
                Identifier: ' NormalizedPath'
            MethodDeclaration
              Identifier: '
            getProjectReferences'
              UnionType
                TypeOperator
                  ArrayType
                    TypeReference
                      Identifier: ' ProjectReference'
                UndefinedKeyword
            MethodDeclaration
              Identifier: '
            updateReferences'
              Parameter
                Identifier: 'refs'
                UnionType
                  TypeOperator
                    ArrayType
                      TypeReference
                        Identifier: ' ProjectReference'
                  UndefinedKeyword
              VoidKeyword
            MethodDeclaration
              Identifier: '
            /**
             * Get the errors that dont have any file name associated
             */
            getGlobalProjectErrors'
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' Diagnostic'
            MethodDeclaration
              Identifier: '
            /**
             * Get all the project errors
             */
            getAllProjectErrors'
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' Diagnostic'
            MethodDeclaration
              Identifier: '
            setProjectErrors'
              Parameter
                Identifier: 'projectErrors'
                ArrayType
                  TypeReference
                    Identifier: ' Diagnostic'
              VoidKeyword
            MethodDeclaration
              Identifier: '
            close'
              VoidKeyword
            MethodDeclaration
              Identifier: '
            getEffectiveTypeRoots'
              ArrayType
                StringKeyword
          ClassDeclaration
            Identifier: ' ExternalProject'
            HeritageClause
              ExpressionWithTypeArguments
                Identifier: ' Project'
            PropertyDeclaration
              Identifier: '
            externalProjectName'
              StringKeyword
            PropertyDeclaration
              Identifier: '
            compileOnSaveEnabled'
              BooleanKeyword
            PropertyDeclaration
              Identifier: '
            excludedFiles'
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' NormalizedPath'
            MethodDeclaration
              Identifier: '
            updateGraph'
              BooleanKeyword
            MethodDeclaration
              Identifier: '
            getExcludedFiles'
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' NormalizedPath'
          FunctionDeclaration
            Identifier: ' convertFormatOptions'
            Parameter
              Identifier: 'protocolOptions'
              TypeReference
                QualifiedName
                  Identifier: ' protocol'
                  Identifier: 'FormatCodeSettings'
            TypeReference
              Identifier: ' FormatCodeSettings'
          FunctionDeclaration
            Identifier: ' convertCompilerOptions'
            Parameter
              Identifier: 'protocolOptions'
              TypeReference
                QualifiedName
                  Identifier: ' protocol'
                  Identifier: 'ExternalProjectCompilerOptions'
            IntersectionType
              TypeReference
                Identifier: ' CompilerOptions'
              TypeReference
                QualifiedName
                  Identifier: ' protocol'
                  Identifier: 'CompileOnSaveMixin'
          FunctionDeclaration
            Identifier: ' convertWatchOptions'
            Parameter
              Identifier: 'protocolOptions'
              TypeReference
                QualifiedName
                  Identifier: ' protocol'
                  Identifier: 'ExternalProjectCompilerOptions'
            Parameter
              Identifier: ' currentDirectory'
              QuestionToken
              StringKeyword
            UnionType
              TypeReference
                Identifier: ' WatchOptionsAndErrors'
              UndefinedKeyword
          FunctionDeclaration
            Identifier: ' convertTypeAcquisition'
            Parameter
              Identifier: 'protocolOptions'
              TypeReference
                QualifiedName
                  Identifier: ' protocol'
                  Identifier: 'InferredProjectCompilerOptions'
            UnionType
              TypeReference
                Identifier: ' TypeAcquisition'
              UndefinedKeyword
          FunctionDeclaration
            Identifier: ' tryConvertScriptKindName'
            Parameter
              Identifier: 'scriptKindName'
              UnionType
                TypeReference
                  QualifiedName
                    Identifier: ' protocol'
                    Identifier: 'ScriptKindName'
                TypeReference
                  Identifier: ' ScriptKind'
            TypeReference
              Identifier: ' ScriptKind'
          FunctionDeclaration
            Identifier: ' convertScriptKindName'
            Parameter
              Identifier: 'scriptKindName'
              TypeReference
                QualifiedName
                  Identifier: ' protocol'
                  Identifier: 'ScriptKindName'
            TypeReference
              Identifier: ' ScriptKind'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' maxProgramSizeForNonTsFiles'
                NumberKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' ProjectsUpdatedInBackgroundEvent'
                StringLiteral
          InterfaceDeclaration
            Identifier: ' ProjectsUpdatedInBackgroundEvent'
            PropertySignature
              Identifier: '
            eventName'
              TypeQuery
                Identifier: ' ProjectsUpdatedInBackgroundEvent'
            PropertySignature
              Identifier: '
            data'
              TypeLiteral
                PropertySignature
                  Identifier: '
                openFiles'
                  ArrayType
                    StringKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' ProjectLoadingStartEvent'
                StringLiteral
          InterfaceDeclaration
            Identifier: ' ProjectLoadingStartEvent'
            PropertySignature
              Identifier: '
            eventName'
              TypeQuery
                Identifier: ' ProjectLoadingStartEvent'
            PropertySignature
              Identifier: '
            data'
              TypeLiteral
                PropertySignature
                  Identifier: '
                project'
                  TypeReference
                    Identifier: ' Project'
                PropertySignature
                  Identifier: '
                reason'
                  StringKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' ProjectLoadingFinishEvent'
                StringLiteral
          InterfaceDeclaration
            Identifier: ' ProjectLoadingFinishEvent'
            PropertySignature
              Identifier: '
            eventName'
              TypeQuery
                Identifier: ' ProjectLoadingFinishEvent'
            PropertySignature
              Identifier: '
            data'
              TypeLiteral
                PropertySignature
                  Identifier: '
                project'
                  TypeReference
                    Identifier: ' Project'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' LargeFileReferencedEvent'
                StringLiteral
          InterfaceDeclaration
            Identifier: ' LargeFileReferencedEvent'
            PropertySignature
              Identifier: '
            eventName'
              TypeQuery
                Identifier: ' LargeFileReferencedEvent'
            PropertySignature
              Identifier: '
            data'
              TypeLiteral
                PropertySignature
                  Identifier: '
                file'
                  StringKeyword
                PropertySignature
                  Identifier: '
                fileSize'
                  NumberKeyword
                PropertySignature
                  Identifier: '
                maxFileSize'
                  NumberKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' ConfigFileDiagEvent'
                StringLiteral
          InterfaceDeclaration
            Identifier: ' ConfigFileDiagEvent'
            PropertySignature
              Identifier: '
            eventName'
              TypeQuery
                Identifier: ' ConfigFileDiagEvent'
            PropertySignature
              Identifier: '
            data'
              TypeLiteral
                PropertySignature
                  Identifier: '
                triggerFile'
                  StringKeyword
                PropertySignature
                  Identifier: '
                configFileName'
                  StringKeyword
                PropertySignature
                  Identifier: '
                diagnostics'
                  TypeOperator
                    ArrayType
                      TypeReference
                        Identifier: ' Diagnostic'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' ProjectLanguageServiceStateEvent'
                StringLiteral
          InterfaceDeclaration
            Identifier: ' ProjectLanguageServiceStateEvent'
            PropertySignature
              Identifier: '
            eventName'
              TypeQuery
                Identifier: ' ProjectLanguageServiceStateEvent'
            PropertySignature
              Identifier: '
            data'
              TypeLiteral
                PropertySignature
                  Identifier: '
                project'
                  TypeReference
                    Identifier: ' Project'
                PropertySignature
                  Identifier: '
                languageServiceEnabled'
                  BooleanKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' ProjectInfoTelemetryEvent'
                StringLiteral
          InterfaceDeclaration
            Identifier: ' ProjectInfoTelemetryEvent'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' eventName'
              TypeQuery
                Identifier: ' ProjectInfoTelemetryEvent'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' data'
              TypeReference
                Identifier: ' ProjectInfoTelemetryEventData'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' OpenFileInfoTelemetryEvent'
                StringLiteral
          InterfaceDeclaration
            Identifier: ' OpenFileInfoTelemetryEvent'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' eventName'
              TypeQuery
                Identifier: ' OpenFileInfoTelemetryEvent'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' data'
              TypeReference
                Identifier: ' OpenFileInfoTelemetryEventData'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' CreateFileWatcherEvent'
                TypeReference
                  QualifiedName
                    Identifier: ' protocol'
                    Identifier: 'CreateFileWatcherEventName'
          InterfaceDeclaration
            Identifier: ' CreateFileWatcherEvent'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' eventName'
              TypeReference
                QualifiedName
                  Identifier: ' protocol'
                  Identifier: 'CreateFileWatcherEventName'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' data'
              TypeReference
                QualifiedName
                  Identifier: ' protocol'
                  Identifier: 'CreateFileWatcherEventBody'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' CreateDirectoryWatcherEvent'
                TypeReference
                  QualifiedName
                    Identifier: ' protocol'
                    Identifier: 'CreateDirectoryWatcherEventName'
          InterfaceDeclaration
            Identifier: ' CreateDirectoryWatcherEvent'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' eventName'
              TypeReference
                QualifiedName
                  Identifier: ' protocol'
                  Identifier: 'CreateDirectoryWatcherEventName'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' data'
              TypeReference
                QualifiedName
                  Identifier: ' protocol'
                  Identifier: 'CreateDirectoryWatcherEventBody'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' CloseFileWatcherEvent'
                TypeReference
                  QualifiedName
                    Identifier: ' protocol'
                    Identifier: 'CloseFileWatcherEventName'
          InterfaceDeclaration
            Identifier: ' CloseFileWatcherEvent'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' eventName'
              TypeReference
                QualifiedName
                  Identifier: ' protocol'
                  Identifier: 'CloseFileWatcherEventName'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' data'
              TypeReference
                QualifiedName
                  Identifier: ' protocol'
                  Identifier: 'CloseFileWatcherEventBody'
          InterfaceDeclaration
            Identifier: ' ProjectInfoTelemetryEventData'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' projectId'
              StringKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' fileStats'
              TypeReference
                Identifier: ' FileStats'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' compilerOptions'
              TypeReference
                Identifier: ' CompilerOptions'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' extends'
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' files'
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' include'
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' exclude'
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' compileOnSave'
              BooleanKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' typeAcquisition'
              TypeReference
                Identifier: ' ProjectInfoTypeAcquisitionData'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' configFileName'
              UnionType
                LiteralType
                  StringLiteral
                LiteralType
                  StringLiteral
                LiteralType
                  StringLiteral
            PropertySignature
              ReadonlyKeyword
              Identifier: ' projectType'
              UnionType
                LiteralType
                  StringLiteral
                LiteralType
                  StringLiteral
            PropertySignature
              ReadonlyKeyword
              Identifier: ' languageServiceEnabled'
              BooleanKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' version'
              StringKeyword
          InterfaceDeclaration
            Identifier: ' OpenFileInfoTelemetryEventData'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' info'
              TypeReference
                Identifier: ' OpenFileInfo'
          InterfaceDeclaration
            Identifier: ' ProjectInfoTypeAcquisitionData'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' enable'
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' include'
              BooleanKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' exclude'
              BooleanKeyword
          InterfaceDeclaration
            Identifier: ' FileStats'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' js'
              NumberKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' jsSize'
              QuestionToken
              NumberKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' jsx'
              NumberKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' jsxSize'
              QuestionToken
              NumberKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' ts'
              NumberKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' tsSize'
              QuestionToken
              NumberKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' tsx'
              NumberKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' tsxSize'
              QuestionToken
              NumberKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' dts'
              NumberKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' dtsSize'
              QuestionToken
              NumberKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' deferred'
              NumberKeyword
            PropertySignature
              ReadonlyKeyword
              Identifier: ' deferredSize'
              QuestionToken
              NumberKeyword
          InterfaceDeclaration
            Identifier: ' OpenFileInfo'
            PropertySignature
              ReadonlyKeyword
              Identifier: ' checkJs'
              BooleanKeyword
          TypeAliasDeclaration
            Identifier: ' ProjectServiceEvent'
            UnionType
              TypeReference
                Identifier: ' LargeFileReferencedEvent'
              TypeReference
                Identifier: ' ProjectsUpdatedInBackgroundEvent'
              TypeReference
                Identifier: ' ProjectLoadingStartEvent'
              TypeReference
                Identifier: ' ProjectLoadingFinishEvent'
              TypeReference
                Identifier: ' ConfigFileDiagEvent'
              TypeReference
                Identifier: ' ProjectLanguageServiceStateEvent'
              TypeReference
                Identifier: ' ProjectInfoTelemetryEvent'
              TypeReference
                Identifier: ' OpenFileInfoTelemetryEvent'
              TypeReference
                Identifier: ' CreateFileWatcherEvent'
              TypeReference
                Identifier: ' CreateDirectoryWatcherEvent'
              TypeReference
                Identifier: ' CloseFileWatcherEvent'
          TypeAliasDeclaration
            Identifier: ' ProjectServiceEventHandler'
            FunctionType
              Parameter
                Identifier: 'event'
                TypeReference
                  Identifier: ' ProjectServiceEvent'
              VoidKeyword
          InterfaceDeclaration
            Identifier: ' SafeList'
            IndexSignature
              Parameter
                Identifier: 'name'
                StringKeyword
              TypeLiteral
                PropertySignature
                  Identifier: '
                match'
                  TypeReference
                    Identifier: ' RegExp'
                PropertySignature
                  Identifier: '
                exclude'
                  QuestionToken
                  ArrayType
                    ArrayType
                      ParenthesizedType
                        UnionType
                          StringKeyword
                          NumberKeyword
                PropertySignature
                  Identifier: '
                types'
                  QuestionToken
                  ArrayType
                    StringKeyword
          InterfaceDeclaration
            Identifier: ' TypesMapFile'
            PropertySignature
              Identifier: '
            typesMap'
              TypeReference
                Identifier: ' SafeList'
            PropertySignature
              Identifier: '
            simpleMap'
              TypeLiteral
                IndexSignature
                  Parameter
                    Identifier: 'libName'
                    StringKeyword
                  StringKeyword
          InterfaceDeclaration
            Identifier: ' HostConfiguration'
            PropertySignature
              Identifier: '
            formatCodeOptions'
              TypeReference
                Identifier: ' FormatCodeSettings'
            PropertySignature
              Identifier: '
            preferences'
              TypeReference
                QualifiedName
                  Identifier: ' protocol'
                  Identifier: 'UserPreferences'
            PropertySignature
              Identifier: '
            hostInfo'
              StringKeyword
            PropertySignature
              Identifier: '
            extraFileExtensions'
              QuestionToken
              ArrayType
                TypeReference
                  Identifier: ' FileExtensionInfo'
            PropertySignature
              Identifier: '
            watchOptions'
              QuestionToken
              TypeReference
                Identifier: ' WatchOptions'
          InterfaceDeclaration
            Identifier: ' OpenConfiguredProjectResult'
            PropertySignature
              Identifier: '
            configFileName'
              QuestionToken
              TypeReference
                Identifier: ' NormalizedPath'
            PropertySignature
              Identifier: '
            configFileErrors'
              QuestionToken
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' Diagnostic'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' nullTypingsInstaller'
                TypeReference
                  Identifier: ' ITypingsInstaller'
          InterfaceDeclaration
            Identifier: ' ProjectServiceOptions'
            PropertySignature
              Identifier: '
            host'
              TypeReference
                Identifier: ' ServerHost'
            PropertySignature
              Identifier: '
            logger'
              TypeReference
                Identifier: ' Logger'
            PropertySignature
              Identifier: '
            cancellationToken'
              TypeReference
                Identifier: ' HostCancellationToken'
            PropertySignature
              Identifier: '
            useSingleInferredProject'
              BooleanKeyword
            PropertySignature
              Identifier: '
            useInferredProjectPerProjectRoot'
              BooleanKeyword
            PropertySignature
              Identifier: '
            typingsInstaller'
              QuestionToken
              TypeReference
                Identifier: ' ITypingsInstaller'
            PropertySignature
              Identifier: '
            eventHandler'
              QuestionToken
              TypeReference
                Identifier: ' ProjectServiceEventHandler'
            PropertySignature
              Identifier: '
            canUseWatchEvents'
              QuestionToken
              BooleanKeyword
            PropertySignature
              Identifier: '
            suppressDiagnosticEvents'
              QuestionToken
              BooleanKeyword
            PropertySignature
              Identifier: '
            throttleWaitMilliseconds'
              QuestionToken
              NumberKeyword
            PropertySignature
              Identifier: '
            globalPlugins'
              QuestionToken
              TypeOperator
                ArrayType
                  StringKeyword
            PropertySignature
              Identifier: '
            pluginProbeLocations'
              QuestionToken
              TypeOperator
                ArrayType
                  StringKeyword
            PropertySignature
              Identifier: '
            allowLocalPluginLoads'
              QuestionToken
              BooleanKeyword
            PropertySignature
              Identifier: '
            typesMapLocation'
              QuestionToken
              StringKeyword
            PropertySignature
              Identifier: '
            serverMode'
              QuestionToken
              TypeReference
                Identifier: ' LanguageServiceMode'
            PropertySignature
              Identifier: '
            session'
              UnionType
                TypeReference
                  Identifier: ' Session'
                  UnknownKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            jsDocParsingMode'
              QuestionToken
              TypeReference
                Identifier: ' JSDocParsingMode'
          InterfaceDeclaration
            Identifier: ' WatchOptionsAndErrors'
            PropertySignature
              Identifier: '
            watchOptions'
              TypeReference
                Identifier: ' WatchOptions'
            PropertySignature
              Identifier: '
            errors'
              UnionType
                ArrayType
                  TypeReference
                    Identifier: ' Diagnostic'
                UndefinedKeyword
          ClassDeclaration
            Identifier: ' ProjectService'
            PropertyDeclaration
              PrivateKeyword
              ReadonlyKeyword
              Identifier: ' nodeModulesWatchers'
            PropertyDeclaration
              PrivateKeyword
              ReadonlyKeyword
              Identifier: ' filenameToScriptInfoVersion'
            PropertyDeclaration
              PrivateKeyword
              ReadonlyKeyword
              Identifier: ' allJsFilesForOpenFileTelemetry'
            PropertyDeclaration
              PrivateKeyword
              ReadonlyKeyword
              Identifier: ' externalProjectToConfiguredProjectMap'
            PropertyDeclaration
              ReadonlyKeyword
              Identifier: ' externalProjects'
              ArrayType
                TypeReference
                  Identifier: ' ExternalProject'
            PropertyDeclaration
              ReadonlyKeyword
              Identifier: ' inferredProjects'
              ArrayType
                TypeReference
                  Identifier: ' InferredProject'
            PropertyDeclaration
              ReadonlyKeyword
              Identifier: ' configuredProjects'
              TypeReference
                Identifier: ' Map'
                StringKeyword
                TypeReference
                  Identifier: ' ConfiguredProject'
            PropertyDeclaration
              ReadonlyKeyword
              Identifier: ' openFiles'
              TypeReference
                Identifier: ' Map'
                TypeReference
                  Identifier: 'Path'
                UnionType
                  TypeReference
                    Identifier: ' NormalizedPath'
                  UndefinedKeyword
            PropertyDeclaration
              PrivateKeyword
              ReadonlyKeyword
              Identifier: ' configFileForOpenFiles'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' rootOfInferredProjects'
            PropertyDeclaration
              PrivateKeyword
              ReadonlyKeyword
              Identifier: ' openFilesWithNonRootedDiskPath'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' compilerOptionsForInferredProjects'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' compilerOptionsForInferredProjectsPerProjectRoot'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' watchOptionsForInferredProjects'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' watchOptionsForInferredProjectsPerProjectRoot'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' typeAcquisitionForInferredProjects'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' typeAcquisitionForInferredProjectsPerProjectRoot'
            PropertyDeclaration
              PrivateKeyword
              ReadonlyKeyword
              Identifier: ' projectToSizeMap'
            PropertyDeclaration
              PrivateKeyword
              ReadonlyKeyword
              Identifier: ' hostConfiguration'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' safelist'
            PropertyDeclaration
              PrivateKeyword
              ReadonlyKeyword
              Identifier: ' legacySafelist'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' pendingProjectUpdates'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' pendingOpenFileProjectUpdates'
              QuestionToken
            PropertyDeclaration
              ReadonlyKeyword
              Identifier: ' currentDirectory'
              TypeReference
                Identifier: ' NormalizedPath'
            PropertyDeclaration
              ReadonlyKeyword
              Identifier: ' toCanonicalFileName'
              FunctionType
                Parameter
                  Identifier: 'f'
                  StringKeyword
                StringKeyword
            PropertyDeclaration
              ReadonlyKeyword
              Identifier: ' host'
              TypeReference
                Identifier: ' ServerHost'
            PropertyDeclaration
              ReadonlyKeyword
              Identifier: ' logger'
              TypeReference
                Identifier: ' Logger'
            PropertyDeclaration
              ReadonlyKeyword
              Identifier: ' cancellationToken'
              TypeReference
                Identifier: ' HostCancellationToken'
            PropertyDeclaration
              ReadonlyKeyword
              Identifier: ' useSingleInferredProject'
              BooleanKeyword
            PropertyDeclaration
              ReadonlyKeyword
              Identifier: ' useInferredProjectPerProjectRoot'
              BooleanKeyword
            PropertyDeclaration
              ReadonlyKeyword
              Identifier: ' typingsInstaller'
              TypeReference
                Identifier: ' ITypingsInstaller'
            PropertyDeclaration
              PrivateKeyword
              ReadonlyKeyword
              Identifier: ' globalCacheLocationDirectoryPath'
            PropertyDeclaration
              ReadonlyKeyword
              Identifier: ' throttleWaitMilliseconds'
              QuestionToken
              NumberKeyword
            PropertyDeclaration
              PrivateKeyword
              ReadonlyKeyword
              Identifier: ' suppressDiagnosticEvents'
              QuestionToken
            PropertyDeclaration
              ReadonlyKeyword
              Identifier: ' globalPlugins'
              TypeOperator
                ArrayType
                  StringKeyword
            PropertyDeclaration
              ReadonlyKeyword
              Identifier: ' pluginProbeLocations'
              TypeOperator
                ArrayType
                  StringKeyword
            PropertyDeclaration
              ReadonlyKeyword
              Identifier: ' allowLocalPluginLoads'
              BooleanKeyword
            PropertyDeclaration
              ReadonlyKeyword
              Identifier: ' typesMapLocation'
              UnionType
                StringKeyword
                UndefinedKeyword
            PropertyDeclaration
              ReadonlyKeyword
              Identifier: ' serverMode'
              TypeReference
                Identifier: ' LanguageServiceMode'
            PropertyDeclaration
              PrivateKeyword
              ReadonlyKeyword
              Identifier: ' seenProjects'
            PropertyDeclaration
              PrivateKeyword
              ReadonlyKeyword
              Identifier: ' sharedExtendedConfigFileWatchers'
            PropertyDeclaration
              PrivateKeyword
              ReadonlyKeyword
              Identifier: ' extendedConfigCache'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' packageJsonFilesMap'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' incompleteCompletionsCache'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' performanceEventHandler'
              QuestionToken
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' pendingPluginEnablements'
              QuestionToken
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' currentPluginEnablementPromise'
              QuestionToken
            PropertyDeclaration
              ReadonlyKeyword
              Identifier: ' jsDocParsingMode'
              UnionType
                TypeReference
                  Identifier: ' JSDocParsingMode'
                UndefinedKeyword
            Constructor
              Parameter
                Identifier: 'opts'
                TypeReference
                  Identifier: ' ProjectServiceOptions'
            MethodDeclaration
              Identifier: '
            toPath'
              Parameter
                Identifier: 'fileName'
                StringKeyword
              TypeReference
                Identifier: ' Path'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' loadTypesMap'
            MethodDeclaration
              Identifier: '
            updateTypingsForProject'
              Parameter
                Identifier: 'response'
                UnionType
                  TypeReference
                    Identifier: ' SetTypings'
                  TypeReference
                    Identifier: ' InvalidateCachedTypings'
                  TypeReference
                    Identifier: ' PackageInstalledResponse'
              VoidKeyword
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' delayUpdateProjectGraph'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' delayUpdateProjectGraphs'
            MethodDeclaration
              Identifier: '
            setCompilerOptionsForInferredProjects'
              Parameter
                Identifier: 'projectCompilerOptions'
                TypeReference
                  QualifiedName
                    Identifier: ' protocol'
                    Identifier: 'InferredProjectCompilerOptions'
              Parameter
                Identifier: ' projectRootPath'
                QuestionToken
                StringKeyword
              VoidKeyword
            MethodDeclaration
              Identifier: '
            findProject'
              Parameter
                Identifier: 'projectName'
                StringKeyword
              UnionType
                TypeReference
                  Identifier: ' Project'
                UndefinedKeyword
            MethodDeclaration
              Identifier: '
            getDefaultProjectForFile'
              Parameter
                Identifier: 'fileName'
                TypeReference
                  Identifier: ' NormalizedPath'
              Parameter
                Identifier: ' ensureProject'
                BooleanKeyword
              UnionType
                TypeReference
                  Identifier: ' Project'
                UndefinedKeyword
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' tryGetDefaultProjectForEnsuringConfiguredProjectForFile'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' doEnsureDefaultProjectForFile'
            MethodDeclaration
              Identifier: '
            getScriptInfoEnsuringProjectsUptoDate'
              Parameter
                Identifier: 'uncheckedFileName'
                StringKeyword
              UnionType
                TypeReference
                  Identifier: ' ScriptInfo'
                UndefinedKeyword
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' ensureProjectStructuresUptoDate'
            MethodDeclaration
              Identifier: '
            getFormatCodeOptions'
              Parameter
                Identifier: 'file'
                TypeReference
                  Identifier: ' NormalizedPath'
              TypeReference
                Identifier: ' FormatCodeSettings'
            MethodDeclaration
              Identifier: '
            getPreferences'
              Parameter
                Identifier: 'file'
                TypeReference
                  Identifier: ' NormalizedPath'
              TypeReference
                QualifiedName
                  Identifier: ' protocol'
                  Identifier: 'UserPreferences'
            MethodDeclaration
              Identifier: '
            getHostFormatCodeOptions'
              TypeReference
                Identifier: ' FormatCodeSettings'
            MethodDeclaration
              Identifier: '
            getHostPreferences'
              TypeReference
                QualifiedName
                  Identifier: ' protocol'
                  Identifier: 'UserPreferences'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' onSourceFileChanged'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' handleSourceMapProjects'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' delayUpdateSourceInfoProjects'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' delayUpdateProjectsOfScriptInfoPath'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' handleDeletedFile'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' watchWildcardDirectory'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' onWildCardDirectoryWatcherInvoke'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' delayUpdateProjectsFromParsedConfigOnConfigFileChange'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' onConfigFileChanged'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' removeProject'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' assignOrphanScriptInfosToInferredProject'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' closeOpenFile'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' deleteScriptInfo'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' configFileExists'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' createConfigFileWatcherForParsedConfig'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' ensureConfigFileWatcherForProject'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' forEachConfigFileLocation'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getConfigFileNameForFileFromCache'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' setConfigFileNameForFileInCache'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' printProjects'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getConfiguredProjectByCanonicalConfigFilePath'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' findExternalProjectByProjectName'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getFilenameForExceededTotalSizeLimitForNonTsFiles'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' createExternalProject'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' addFilesToNonInferredProject'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' loadConfiguredProject'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' updateNonInferredProjectFiles'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' updateRootAndOptionsOfNonInferredProject'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' reloadFileNamesOfParsedConfig'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' setProjectForReload'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' clearSemanticCache'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getOrCreateInferredProjectForProjectRootPathIfEnabled'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getOrCreateSingleInferredProjectIfEnabled'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getOrCreateSingleInferredWithoutProjectRoot'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' createInferredProject'
            MethodDeclaration
              Identifier: '
            getScriptInfo'
              Parameter
                Identifier: 'uncheckedFileName'
                StringKeyword
              UnionType
                TypeReference
                  Identifier: ' ScriptInfo'
                UndefinedKeyword
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' watchClosedScriptInfo'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' createNodeModulesWatcher'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' watchClosedScriptInfoInNodeModules'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getModifiedTime'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' refreshScriptInfo'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' refreshScriptInfosInDirectory'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' stopWatchingScriptInfo'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getOrCreateScriptInfoNotOpenedByClientForNormalizedPath'
            MethodDeclaration
              Identifier: '
            getOrCreateScriptInfoForNormalizedPath'
              Parameter
                Identifier: 'fileName'
                TypeReference
                  Identifier: ' NormalizedPath'
              Parameter
                Identifier: ' openedByClient'
                BooleanKeyword
              Parameter
                Identifier: ' fileContent'
                QuestionToken
                StringKeyword
              Parameter
                Identifier: ' scriptKind'
                QuestionToken
                TypeReference
                  Identifier: ' ScriptKind'
              Parameter
                Identifier: ' hasMixedContent'
                QuestionToken
                BooleanKeyword
              Parameter
                Identifier: ' hostToQueryFileExistsOn'
                QuestionToken
                TypeLiteral
                  MethodSignature
                    Identifier: '
                fileExists'
                    Parameter
                      Identifier: 'path'
                      StringKeyword
                    BooleanKeyword
              UnionType
                TypeReference
                  Identifier: ' ScriptInfo'
                UndefinedKeyword
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getOrCreateScriptInfoWorker'
            MethodDeclaration
              Identifier: '
            /**
             * This gets the script info for the normalized path. If the path is not rooted disk path then the open script info with project root context is preferred
             */
            getScriptInfoForNormalizedPath'
              Parameter
                Identifier: 'fileName'
                TypeReference
                  Identifier: ' NormalizedPath'
              UnionType
                TypeReference
                  Identifier: ' ScriptInfo'
                UndefinedKeyword
            MethodDeclaration
              Identifier: '
            getScriptInfoForPath'
              Parameter
                Identifier: 'fileName'
                TypeReference
                  Identifier: ' Path'
              UnionType
                TypeReference
                  Identifier: ' ScriptInfo'
                UndefinedKeyword
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' addSourceInfoToSourceMap'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' addMissingSourceMapFile'
            MethodDeclaration
              Identifier: '
            setHostConfiguration'
              Parameter
                Identifier: 'args'
                TypeReference
                  QualifiedName
                    Identifier: ' protocol'
                    Identifier: 'ConfigureRequestArguments'
              VoidKeyword
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getWatchOptionsFromProjectWatchOptions'
            MethodDeclaration
              Identifier: '
            closeLog'
              VoidKeyword
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' sendSourceFileChange'
            MethodDeclaration
              Identifier: '
            /**
             * This function rebuilds the project for every file opened by the client
             * This does not reload contents of open files from disk. But we could do that if needed
             */
            reloadProjects'
              VoidKeyword
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' removeRootOfInferredProjectIfNowPartOfOtherProject'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' ensureProjectForOpenFiles'
            MethodDeclaration
              Identifier: '
            /**
             * Open file whose contents is managed by the client
             * @param filename is absolute pathname
             * @param fileContent is a known version of the file content that is more up to date than the one on disk
             */
            openClientFile'
              Parameter
                Identifier: 'fileName'
                StringKeyword
              Parameter
                Identifier: ' fileContent'
                QuestionToken
                StringKeyword
              Parameter
                Identifier: ' scriptKind'
                QuestionToken
                TypeReference
                  Identifier: ' ScriptKind'
              Parameter
                Identifier: ' projectRootPath'
                QuestionToken
                StringKeyword
              TypeReference
                Identifier: ' OpenConfiguredProjectResult'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' findExternalProjectContainingOpenScriptInfo'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getOrCreateOpenScriptInfo'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' assignProjectToOpenedScriptInfo'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' tryFindDefaultConfiguredProjectForOpenScriptInfo'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' isMatchedByConfig'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' tryFindDefaultConfiguredProjectForOpenScriptInfoOrClosedFileInfo'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' tryFindDefaultConfiguredProjectAndLoadAncestorsForOpenScriptInfo'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' ensureProjectChildren'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' cleanupConfiguredProjects'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' cleanupProjectsAndScriptInfos'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' tryInvokeWildCardDirectories'
            MethodDeclaration
              Identifier: '
            openClientFileWithNormalizedPath'
              Parameter
                Identifier: 'fileName'
                TypeReference
                  Identifier: ' NormalizedPath'
              Parameter
                Identifier: ' fileContent'
                QuestionToken
                StringKeyword
              Parameter
                Identifier: ' scriptKind'
                QuestionToken
                TypeReference
                  Identifier: ' ScriptKind'
              Parameter
                Identifier: ' hasMixedContent'
                QuestionToken
                BooleanKeyword
              Parameter
                Identifier: ' projectRootPath'
                QuestionToken
                TypeReference
                  Identifier: ' NormalizedPath'
              TypeReference
                Identifier: ' OpenConfiguredProjectResult'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' removeOrphanScriptInfos'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' telemetryOnOpenFile'
            MethodDeclaration
              Identifier: '
            /**
             * Close file whose contents is managed by the client
             * @param filename is absolute pathname
             */
            closeClientFile'
              Parameter
                Identifier: 'uncheckedFileName'
                StringKeyword
              VoidKeyword
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' collectChanges'
            MethodDeclaration
              Identifier: '
            closeExternalProject'
              Parameter
                Identifier: 'uncheckedFileName'
                StringKeyword
              VoidKeyword
            MethodDeclaration
              Identifier: '
            openExternalProjects'
              Parameter
                Identifier: 'projects'
                ArrayType
                  TypeReference
                    QualifiedName
                      Identifier: ' protocol'
                      Identifier: 'ExternalProject'
              VoidKeyword
            PropertyDeclaration
              PrivateKeyword
              StaticKeyword
              ReadonlyKeyword
              Identifier: ' filenameEscapeRegexp'
            PropertyDeclaration
              PrivateKeyword
              StaticKeyword
              Identifier: ' escapeFilenameForRegex'
            MethodDeclaration
              Identifier: '
            resetSafeList'
              VoidKeyword
            MethodDeclaration
              Identifier: '
            applySafeList'
              Parameter
                Identifier: 'proj'
                TypeReference
                  QualifiedName
                    Identifier: ' protocol'
                    Identifier: 'ExternalProject'
              ArrayType
                TypeReference
                  Identifier: ' NormalizedPath'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' applySafeListWorker'
            MethodDeclaration
              Identifier: '
            openExternalProject'
              Parameter
                Identifier: 'proj'
                TypeReference
                  QualifiedName
                    Identifier: ' protocol'
                    Identifier: 'ExternalProject'
              VoidKeyword
            MethodDeclaration
              Identifier: '
            hasDeferredExtension'
              BooleanKeyword
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' endEnablePlugin'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' enableRequestedPluginsAsync'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' enableRequestedPluginsWorker'
            MethodDeclaration
              Identifier: '
            configurePlugin'
              Parameter
                Identifier: 'args'
                TypeReference
                  QualifiedName
                    Identifier: ' protocol'
                    Identifier: 'ConfigurePluginRequestArguments'
              VoidKeyword
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' watchPackageJsonFile'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' onPackageJsonChange'
          FunctionDeclaration
            Identifier: ' formatMessage'
            TypeParameter
              Identifier: 'T'
              TypeReference
                QualifiedName
                  Identifier: ' protocol'
                  Identifier: 'Message'
            Parameter
              Identifier: 'msg'
              TypeReference
                Identifier: ' T'
            Parameter
              Identifier: ' logger'
              TypeReference
                Identifier: ' Logger'
            Parameter
              Identifier: ' byteLength'
              FunctionType
                Parameter
                  Identifier: 's'
                  StringKeyword
                Parameter
                  Identifier: ' encoding'
                  TypeReference
                    Identifier: ' BufferEncoding'
                NumberKeyword
            Parameter
              Identifier: ' newLine'
              StringKeyword
            StringKeyword
          InterfaceDeclaration
            Identifier: ' ServerCancellationToken'
            HeritageClause
              ExpressionWithTypeArguments
                Identifier: ' HostCancellationToken'
            MethodSignature
              Identifier: '
            setRequest'
              Parameter
                Identifier: 'requestId'
                NumberKeyword
              VoidKeyword
            MethodSignature
              Identifier: '
            resetRequest'
              Parameter
                Identifier: 'requestId'
                NumberKeyword
              VoidKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' nullCancellationToken'
                TypeReference
                  Identifier: ' ServerCancellationToken'
          TypeAliasDeclaration
            Identifier: ' CommandNames'
            TypeReference
              QualifiedName
                Identifier: ' protocol'
                Identifier: 'CommandTypes'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' CommandNames'
                AnyKeyword
          TypeAliasDeclaration
            Identifier: ' Event'
            FunctionType
              TypeParameter
                Identifier: 'T'
                ObjectKeyword
              Parameter
                Identifier: 'body'
                TypeReference
                  Identifier: ' T'
              Parameter
                Identifier: ' eventName'
                StringKeyword
              VoidKeyword
          InterfaceDeclaration
            Identifier: ' EventSender'
            PropertySignature
              Identifier: '
            event'
              TypeReference
                Identifier: ' Event'
          InterfaceDeclaration
            Identifier: ' SessionOptions'
            PropertySignature
              Identifier: '
            host'
              TypeReference
                Identifier: ' ServerHost'
            PropertySignature
              Identifier: '
            cancellationToken'
              TypeReference
                Identifier: ' ServerCancellationToken'
            PropertySignature
              Identifier: '
            useSingleInferredProject'
              BooleanKeyword
            PropertySignature
              Identifier: '
            useInferredProjectPerProjectRoot'
              BooleanKeyword
            PropertySignature
              Identifier: '
            typingsInstaller'
              QuestionToken
              TypeReference
                Identifier: ' ITypingsInstaller'
            PropertySignature
              Identifier: '
            byteLength'
              FunctionType
                Parameter
                  Identifier: 'buf'
                  StringKeyword
                Parameter
                  Identifier: ' encoding'
                  QuestionToken
                  TypeReference
                    Identifier: ' BufferEncoding'
                NumberKeyword
            PropertySignature
              Identifier: '
            hrtime'
              FunctionType
                Parameter
                  Identifier: 'start'
                  QuestionToken
                  TupleType
                    NumberKeyword
                    NumberKeyword
                TupleType
                  NumberKeyword
                  NumberKeyword
            PropertySignature
              Identifier: '
            logger'
              TypeReference
                Identifier: ' Logger'
            PropertySignature
              Identifier: '
            /**
             * If falsy, all events are suppressed.
             */
            canUseEvents'
              BooleanKeyword
            PropertySignature
              Identifier: '
            canUseWatchEvents'
              QuestionToken
              BooleanKeyword
            PropertySignature
              Identifier: '
            eventHandler'
              QuestionToken
              TypeReference
                Identifier: ' ProjectServiceEventHandler'
            PropertySignature
              Identifier: '
            /** Has no effect if eventHandler is also specified. */
            suppressDiagnosticEvents'
              QuestionToken
              BooleanKeyword
            PropertySignature
              Identifier: '
            serverMode'
              QuestionToken
              TypeReference
                Identifier: ' LanguageServiceMode'
            PropertySignature
              Identifier: '
            throttleWaitMilliseconds'
              QuestionToken
              NumberKeyword
            PropertySignature
              Identifier: '
            noGetErrOnBackgroundUpdate'
              QuestionToken
              BooleanKeyword
            PropertySignature
              Identifier: '
            globalPlugins'
              QuestionToken
              TypeOperator
                ArrayType
                  StringKeyword
            PropertySignature
              Identifier: '
            pluginProbeLocations'
              QuestionToken
              TypeOperator
                ArrayType
                  StringKeyword
            PropertySignature
              Identifier: '
            allowLocalPluginLoads'
              QuestionToken
              BooleanKeyword
            PropertySignature
              Identifier: '
            typesMapLocation'
              QuestionToken
              StringKeyword
          ClassDeclaration
            Identifier: ' Session'
            TypeParameter
              Identifier: 'TMessage'
              StringKeyword
            HeritageClause
              ExpressionWithTypeArguments
                Identifier: ' EventSender'
            PropertyDeclaration
              PrivateKeyword
              ReadonlyKeyword
              Identifier: ' gcTimer'
            PropertyDeclaration
              ProtectedKeyword
              Identifier: ' projectService'
              TypeReference
                Identifier: ' ProjectService'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' changeSeq'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' performanceData'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' currentRequestId'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' errorCheck'
            PropertyDeclaration
              ProtectedKeyword
              Identifier: ' host'
              TypeReference
                Identifier: ' ServerHost'
            PropertyDeclaration
              PrivateKeyword
              ReadonlyKeyword
              Identifier: ' cancellationToken'
            PropertyDeclaration
              ProtectedKeyword
              ReadonlyKeyword
              Identifier: ' typingsInstaller'
              TypeReference
                Identifier: ' ITypingsInstaller'
            PropertyDeclaration
              ProtectedKeyword
              Identifier: ' byteLength'
              FunctionType
                Parameter
                  Identifier: 'buf'
                  StringKeyword
                Parameter
                  Identifier: ' encoding'
                  QuestionToken
                  TypeReference
                    Identifier: ' BufferEncoding'
                NumberKeyword
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' hrtime'
            PropertyDeclaration
              ProtectedKeyword
              Identifier: ' logger'
              TypeReference
                Identifier: ' Logger'
            PropertyDeclaration
              ProtectedKeyword
              Identifier: ' canUseEvents'
              BooleanKeyword
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' suppressDiagnosticEvents'
              QuestionToken
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' eventHandler'
            PropertyDeclaration
              PrivateKeyword
              ReadonlyKeyword
              Identifier: ' noGetErrOnBackgroundUpdate'
              QuestionToken
            Constructor
              Parameter
                Identifier: 'opts'
                TypeReference
                  Identifier: ' SessionOptions'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' sendRequestCompletedEvent'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' addPerformanceData'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' addDiagnosticsPerformanceData'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' performanceEventHandler'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' defaultEventHandler'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' projectsUpdatedInBackgroundEvent'
            MethodDeclaration
              Identifier: '
            logError'
              Parameter
                Identifier: 'err'
                TypeReference
                  Identifier: ' Error'
              Parameter
                Identifier: ' cmd'
                StringKeyword
              VoidKeyword
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' logErrorWorker'
            MethodDeclaration
              Identifier: '
            send'
              Parameter
                Identifier: 'msg'
                TypeReference
                  QualifiedName
                    Identifier: ' protocol'
                    Identifier: 'Message'
              VoidKeyword
            MethodDeclaration
              ProtectedKeyword
              Identifier: ' writeMessage'
              Parameter
                Identifier: 'msg'
                TypeReference
                  QualifiedName
                    Identifier: ' protocol'
                    Identifier: 'Message'
              VoidKeyword
            MethodDeclaration
              Identifier: '
            event'
              TypeParameter
                Identifier: 'T'
                ObjectKeyword
              Parameter
                Identifier: 'body'
                TypeReference
                  Identifier: ' T'
              Parameter
                Identifier: ' eventName'
                StringKeyword
              VoidKeyword
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' semanticCheck'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' syntacticCheck'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' suggestionCheck'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' regionSemanticCheck'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' sendDiagnosticsEvent'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' updateErrorCheck'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' cleanProjects'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' cleanup'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getEncodedSyntacticClassifications'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getEncodedSemanticClassifications'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getProject'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getConfigFileAndProject'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getConfigFileDiagnostics'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' convertToDiagnosticsWithLinePositionFromDiagnosticFile'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getCompilerOptionsDiagnostics'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' convertToDiagnosticsWithLinePosition'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getDiagnosticsWorker'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getDefinition'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' mapDefinitionInfoLocations'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getDefinitionAndBoundSpan'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' findSourceDefinition'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getEmitOutput'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' mapJSDocTagInfo'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' mapDisplayParts'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' mapSignatureHelpItems'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' mapDefinitionInfo'
            PropertyDeclaration
              PrivateKeyword
              StaticKeyword
              Identifier: ' mapToOriginalLocation'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' toFileSpan'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' toFileSpanWithContext'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getTypeDefinition'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' mapImplementationLocations'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getImplementation'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getSyntacticDiagnosticsSync'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getSemanticDiagnosticsSync'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getSuggestionDiagnosticsSync'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getJsxClosingTag'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getLinkedEditingRange'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getDocumentHighlights'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' provideInlayHints'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' mapCode'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getCopilotRelatedInfo'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' setCompilerOptionsForInferredProjects'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getProjectInfo'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getProjectInfoWorker'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getDefaultConfiguredProjectInfo'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getRenameInfo'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getProjects'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getDefaultProject'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getRenameLocations'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' mapRenameInfo'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' toSpanGroups'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getReferences'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getFileReferences'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' openClientFile'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getPosition'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getPositionInFile'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getFileAndProject'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getFileAndLanguageServiceForSyntacticOperation'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getFileAndProjectWorker'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getOutliningSpans'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getTodoComments'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getDocCommentTemplate'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getSpanOfEnclosingComment'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getIndentation'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getBreakpointStatement'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getNameOrDottedNameSpan'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' isValidBraceCompletion'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getQuickInfoWorker'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getFormattingEditsForRange'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getFormattingEditsForRangeFull'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getFormattingEditsForDocumentFull'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getFormattingEditsAfterKeystrokeFull'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getFormattingEditsAfterKeystroke'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getCompletions'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getCompletionEntryDetails'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getCompileOnSaveAffectedFileList'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' emitFile'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getSignatureHelpItems'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' toPendingErrorCheck'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getDiagnostics'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' change'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' reload'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' saveToTmp'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' closeClientFile'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' mapLocationNavigationBarItems'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getNavigationBarItems'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' toLocationNavigationTree'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getNavigationTree'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getNavigateToItems'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getFullNavigateToItems'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getSupportedCodeFixes'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' isLocation'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' extractPositionOrRange'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getRange'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getApplicableRefactors'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getEditsForRefactor'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getMoveToRefactoringFileSuggestions'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' preparePasteEdits'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getPasteEdits'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' organizeImports'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getEditsForFileRename'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getCodeFixes'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getCombinedCodeFix'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' applyCodeActionCommand'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getStartAndEndPosition'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' mapCodeAction'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' mapCodeFixAction'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' mapPasteEditsAction'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' mapTextChangesToCodeEdits'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' mapTextChangeToCodeEdit'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' convertTextChangeToCodeEdit'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getBraceMatching'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getDiagnosticsForProject'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' configurePlugin'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getSmartSelectionRange'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' toggleLineComment'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' toggleMultilineComment'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' commentSelection'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' uncommentSelection'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' mapSelectionRange'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getScriptInfoFromProjectService'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' toProtocolCallHierarchyItem'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' toProtocolCallHierarchyIncomingCall'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' toProtocolCallHierarchyOutgoingCall'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' prepareCallHierarchy'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' provideCallHierarchyIncomingCalls'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' provideCallHierarchyOutgoingCalls'
            MethodDeclaration
              Identifier: '
            getCanonicalFileName'
              Parameter
                Identifier: 'fileName'
                StringKeyword
              StringKeyword
            MethodDeclaration
              Identifier: '
            exit'
              VoidKeyword
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' notRequired'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' requiredResponse'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' handlers'
            MethodDeclaration
              Identifier: '
            addProtocolHandler'
              Parameter
                Identifier: 'command'
                StringKeyword
              Parameter
                Identifier: ' handler'
                FunctionType
                  Parameter
                    Identifier: 'request'
                    TypeReference
                      QualifiedName
                        Identifier: ' protocol'
                        Identifier: 'Request'
                  TypeReference
                    Identifier: ' HandlerResponse'
              VoidKeyword
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' setCurrentRequest'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' resetCurrentRequest'
            MethodDeclaration
              Identifier: '
            executeWithRequestId'
              TypeParameter
                Identifier: 'T'
              Parameter
                Identifier: 'requestId'
                NumberKeyword
              Parameter
                Identifier: ' f'
                FunctionType
                  TypeReference
                    Identifier: ' T'
              TypeReference
                Identifier: ' T'
            MethodDeclaration
              Identifier: '
            executeCommand'
              Parameter
                Identifier: 'request'
                TypeReference
                  QualifiedName
                    Identifier: ' protocol'
                    Identifier: 'Request'
              TypeReference
                Identifier: ' HandlerResponse'
            MethodDeclaration
              Identifier: '
            onMessage'
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' TMessage'
              VoidKeyword
            MethodDeclaration
              ProtectedKeyword
              Identifier: ' parseMessage'
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' TMessage'
              TypeReference
                QualifiedName
                  Identifier: ' protocol'
                  Identifier: 'Request'
            MethodDeclaration
              ProtectedKeyword
              Identifier: ' toStringMessage'
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' TMessage'
              StringKeyword
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getFormatOptions'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getPreferences'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getHostFormatOptions'
            PropertyDeclaration
              PrivateKeyword
              Identifier: ' getHostPreferences'
          InterfaceDeclaration
            Identifier: ' HandlerResponse'
            PropertySignature
              Identifier: '
            response'
              QuestionToken
              TypeLiteral
            PropertySignature
              Identifier: '
            responseRequired'
              QuestionToken
              BooleanKeyword
      ModuleDeclaration
        Identifier: ' JsTyping'
        ModuleBlock
          InterfaceDeclaration
            Identifier: ' TypingResolutionHost'
            MethodSignature
              Identifier: '
            directoryExists'
              Parameter
                Identifier: 'path'
                StringKeyword
              BooleanKeyword
            MethodSignature
              Identifier: '
            fileExists'
              Parameter
                Identifier: 'fileName'
                StringKeyword
              BooleanKeyword
            MethodSignature
              Identifier: '
            readFile'
              Parameter
                Identifier: 'path'
                StringKeyword
              Parameter
                Identifier: ' encoding'
                QuestionToken
                StringKeyword
              UnionType
                StringKeyword
                UndefinedKeyword
            MethodSignature
              Identifier: '
            readDirectory'
              Parameter
                Identifier: 'rootDir'
                StringKeyword
              Parameter
                Identifier: ' extensions'
                TypeOperator
                  ArrayType
                    StringKeyword
              Parameter
                Identifier: ' excludes'
                UnionType
                  TypeOperator
                    ArrayType
                      StringKeyword
                  UndefinedKeyword
              Parameter
                Identifier: ' includes'
                UnionType
                  TypeOperator
                    ArrayType
                      StringKeyword
                  UndefinedKeyword
              Parameter
                Identifier: ' depth'
                QuestionToken
                NumberKeyword
              ArrayType
                StringKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' versionMajorMinor'
            StringLiteral
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' version'
            StringKeyword
      InterfaceDeclaration
        Identifier: ' MapLike'
        TypeParameter
          Identifier: 'T'
        IndexSignature
          Parameter
            Identifier: 'index'
            StringKeyword
          TypeReference
            Identifier: ' T'
      InterfaceDeclaration
        Identifier: ' SortedReadonlyArray'
        TypeParameter
          Identifier: 'T'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ReadonlyArray'
            TypeReference
              Identifier: 'T'
        PropertySignature
          StringLiteral
          AnyKeyword
      InterfaceDeclaration
        Identifier: ' SortedArray'
        TypeParameter
          Identifier: 'T'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Array'
            TypeReference
              Identifier: 'T'
        PropertySignature
          StringLiteral
          AnyKeyword
      TypeAliasDeclaration
        Identifier: ' Path'
        IntersectionType
          StringKeyword
          TypeLiteral
            PropertySignature
              Identifier: '
        __pathBrand'
              AnyKeyword
      InterfaceDeclaration
        Identifier: ' TextRange'
        PropertySignature
          Identifier: '
        pos'
          NumberKeyword
        PropertySignature
          Identifier: '
        end'
          NumberKeyword
      InterfaceDeclaration
        Identifier: ' ReadonlyTextRange'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' pos'
          NumberKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' end'
          NumberKeyword
      EnumDeclaration
        Identifier: ' SyntaxKind'
        EnumMember
          Identifier: '
        Unknown'
          NumericLiteral
        EnumMember
          Identifier: '
        EndOfFileToken'
          NumericLiteral
        EnumMember
          Identifier: '
        SingleLineCommentTrivia'
          NumericLiteral
        EnumMember
          Identifier: '
        MultiLineCommentTrivia'
          NumericLiteral
        EnumMember
          Identifier: '
        NewLineTrivia'
          NumericLiteral
        EnumMember
          Identifier: '
        WhitespaceTrivia'
          NumericLiteral
        EnumMember
          Identifier: '
        ShebangTrivia'
          NumericLiteral
        EnumMember
          Identifier: '
        ConflictMarkerTrivia'
          NumericLiteral
        EnumMember
          Identifier: '
        NonTextFileMarkerTrivia'
          NumericLiteral
        EnumMember
          Identifier: '
        NumericLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        BigIntLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        StringLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        JsxText'
          NumericLiteral
        EnumMember
          Identifier: '
        JsxTextAllWhiteSpaces'
          NumericLiteral
        EnumMember
          Identifier: '
        RegularExpressionLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        NoSubstitutionTemplateLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        TemplateHead'
          NumericLiteral
        EnumMember
          Identifier: '
        TemplateMiddle'
          NumericLiteral
        EnumMember
          Identifier: '
        TemplateTail'
          NumericLiteral
        EnumMember
          Identifier: '
        OpenBraceToken'
          NumericLiteral
        EnumMember
          Identifier: '
        CloseBraceToken'
          NumericLiteral
        EnumMember
          Identifier: '
        OpenParenToken'
          NumericLiteral
        EnumMember
          Identifier: '
        CloseParenToken'
          NumericLiteral
        EnumMember
          Identifier: '
        OpenBracketToken'
          NumericLiteral
        EnumMember
          Identifier: '
        CloseBracketToken'
          NumericLiteral
        EnumMember
          Identifier: '
        DotToken'
          NumericLiteral
        EnumMember
          Identifier: '
        DotDotDotToken'
          NumericLiteral
        EnumMember
          Identifier: '
        SemicolonToken'
          NumericLiteral
        EnumMember
          Identifier: '
        CommaToken'
          NumericLiteral
        EnumMember
          Identifier: '
        QuestionDotToken'
          NumericLiteral
        EnumMember
          Identifier: '
        LessThanToken'
          NumericLiteral
        EnumMember
          Identifier: '
        LessThanSlashToken'
          NumericLiteral
        EnumMember
          Identifier: '
        GreaterThanToken'
          NumericLiteral
        EnumMember
          Identifier: '
        LessThanEqualsToken'
          NumericLiteral
        EnumMember
          Identifier: '
        GreaterThanEqualsToken'
          NumericLiteral
        EnumMember
          Identifier: '
        EqualsEqualsToken'
          NumericLiteral
        EnumMember
          Identifier: '
        ExclamationEqualsToken'
          NumericLiteral
        EnumMember
          Identifier: '
        EqualsEqualsEqualsToken'
          NumericLiteral
        EnumMember
          Identifier: '
        ExclamationEqualsEqualsToken'
          NumericLiteral
        EnumMember
          Identifier: '
        EqualsGreaterThanToken'
          NumericLiteral
        EnumMember
          Identifier: '
        PlusToken'
          NumericLiteral
        EnumMember
          Identifier: '
        MinusToken'
          NumericLiteral
        EnumMember
          Identifier: '
        AsteriskToken'
          NumericLiteral
        EnumMember
          Identifier: '
        AsteriskAsteriskToken'
          NumericLiteral
        EnumMember
          Identifier: '
        SlashToken'
          NumericLiteral
        EnumMember
          Identifier: '
        PercentToken'
          NumericLiteral
        EnumMember
          Identifier: '
        PlusPlusToken'
          NumericLiteral
        EnumMember
          Identifier: '
        MinusMinusToken'
          NumericLiteral
        EnumMember
          Identifier: '
        LessThanLessThanToken'
          NumericLiteral
        EnumMember
          Identifier: '
        GreaterThanGreaterThanToken'
          NumericLiteral
        EnumMember
          Identifier: '
        GreaterThanGreaterThanGreaterThanToken'
          NumericLiteral
        EnumMember
          Identifier: '
        AmpersandToken'
          NumericLiteral
        EnumMember
          Identifier: '
        BarToken'
          NumericLiteral
        EnumMember
          Identifier: '
        CaretToken'
          NumericLiteral
        EnumMember
          Identifier: '
        ExclamationToken'
          NumericLiteral
        EnumMember
          Identifier: '
        TildeToken'
          NumericLiteral
        EnumMember
          Identifier: '
        AmpersandAmpersandToken'
          NumericLiteral
        EnumMember
          Identifier: '
        BarBarToken'
          NumericLiteral
        EnumMember
          Identifier: '
        QuestionToken'
          NumericLiteral
        EnumMember
          Identifier: '
        ColonToken'
          NumericLiteral
        EnumMember
          Identifier: '
        AtToken'
          NumericLiteral
        EnumMember
          Identifier: '
        QuestionQuestionToken'
          NumericLiteral
        EnumMember
          Identifier: '
        /** Only the JSDoc scanner produces BacktickToken. The normal scanner produces NoSubstitutionTemplateLiteral and related kinds. */
        BacktickToken'
          NumericLiteral
        EnumMember
          Identifier: '
        /** Only the JSDoc scanner produces HashToken. The normal scanner produces PrivateIdentifier. */
        HashToken'
          NumericLiteral
        EnumMember
          Identifier: '
        EqualsToken'
          NumericLiteral
        EnumMember
          Identifier: '
        PlusEqualsToken'
          NumericLiteral
        EnumMember
          Identifier: '
        MinusEqualsToken'
          NumericLiteral
        EnumMember
          Identifier: '
        AsteriskEqualsToken'
          NumericLiteral
        EnumMember
          Identifier: '
        AsteriskAsteriskEqualsToken'
          NumericLiteral
        EnumMember
          Identifier: '
        SlashEqualsToken'
          NumericLiteral
        EnumMember
          Identifier: '
        PercentEqualsToken'
          NumericLiteral
        EnumMember
          Identifier: '
        LessThanLessThanEqualsToken'
          NumericLiteral
        EnumMember
          Identifier: '
        GreaterThanGreaterThanEqualsToken'
          NumericLiteral
        EnumMember
          Identifier: '
        GreaterThanGreaterThanGreaterThanEqualsToken'
          NumericLiteral
        EnumMember
          Identifier: '
        AmpersandEqualsToken'
          NumericLiteral
        EnumMember
          Identifier: '
        BarEqualsToken'
          NumericLiteral
        EnumMember
          Identifier: '
        BarBarEqualsToken'
          NumericLiteral
        EnumMember
          Identifier: '
        AmpersandAmpersandEqualsToken'
          NumericLiteral
        EnumMember
          Identifier: '
        QuestionQuestionEqualsToken'
          NumericLiteral
        EnumMember
          Identifier: '
        CaretEqualsToken'
          NumericLiteral
        EnumMember
          Identifier: '
        Identifier'
          NumericLiteral
        EnumMember
          Identifier: '
        PrivateIdentifier'
          NumericLiteral
        EnumMember
          Identifier: '
        BreakKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        CaseKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        CatchKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        ClassKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        ConstKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        ContinueKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        DebuggerKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        DefaultKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        DeleteKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        DoKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        ElseKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        EnumKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        ExportKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        ExtendsKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        FalseKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        FinallyKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        ForKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        FunctionKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        IfKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        ImportKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        InKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        InstanceOfKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        NewKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        NullKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        ReturnKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        SuperKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        SwitchKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        ThisKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        ThrowKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        TrueKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        TryKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        TypeOfKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        VarKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        VoidKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        WhileKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        WithKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        ImplementsKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        InterfaceKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        LetKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        PackageKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        PrivateKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        ProtectedKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        PublicKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        StaticKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        YieldKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        AbstractKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        AccessorKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        AsKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        AssertsKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        AssertKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        AnyKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        AsyncKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        AwaitKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        BooleanKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        ConstructorKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        DeclareKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        GetKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        InferKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        IntrinsicKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        IsKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        KeyOfKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        ModuleKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        NamespaceKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        NeverKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        OutKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        ReadonlyKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        RequireKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        NumberKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        ObjectKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        SatisfiesKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        SetKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        StringKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        SymbolKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        TypeKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        UndefinedKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        UniqueKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        UnknownKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        UsingKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        FromKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        GlobalKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        BigIntKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        OverrideKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        OfKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        QualifiedName'
          NumericLiteral
        EnumMember
          Identifier: '
        ComputedPropertyName'
          NumericLiteral
        EnumMember
          Identifier: '
        TypeParameter'
          NumericLiteral
        EnumMember
          Identifier: '
        Parameter'
          NumericLiteral
        EnumMember
          Identifier: '
        Decorator'
          NumericLiteral
        EnumMember
          Identifier: '
        PropertySignature'
          NumericLiteral
        EnumMember
          Identifier: '
        PropertyDeclaration'
          NumericLiteral
        EnumMember
          Identifier: '
        MethodSignature'
          NumericLiteral
        EnumMember
          Identifier: '
        MethodDeclaration'
          NumericLiteral
        EnumMember
          Identifier: '
        ClassStaticBlockDeclaration'
          NumericLiteral
        EnumMember
          Identifier: '
        Constructor'
          NumericLiteral
        EnumMember
          Identifier: '
        GetAccessor'
          NumericLiteral
        EnumMember
          Identifier: '
        SetAccessor'
          NumericLiteral
        EnumMember
          Identifier: '
        CallSignature'
          NumericLiteral
        EnumMember
          Identifier: '
        ConstructSignature'
          NumericLiteral
        EnumMember
          Identifier: '
        IndexSignature'
          NumericLiteral
        EnumMember
          Identifier: '
        TypePredicate'
          NumericLiteral
        EnumMember
          Identifier: '
        TypeReference'
          NumericLiteral
        EnumMember
          Identifier: '
        FunctionType'
          NumericLiteral
        EnumMember
          Identifier: '
        ConstructorType'
          NumericLiteral
        EnumMember
          Identifier: '
        TypeQuery'
          NumericLiteral
        EnumMember
          Identifier: '
        TypeLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        ArrayType'
          NumericLiteral
        EnumMember
          Identifier: '
        TupleType'
          NumericLiteral
        EnumMember
          Identifier: '
        OptionalType'
          NumericLiteral
        EnumMember
          Identifier: '
        RestType'
          NumericLiteral
        EnumMember
          Identifier: '
        UnionType'
          NumericLiteral
        EnumMember
          Identifier: '
        IntersectionType'
          NumericLiteral
        EnumMember
          Identifier: '
        ConditionalType'
          NumericLiteral
        EnumMember
          Identifier: '
        InferType'
          NumericLiteral
        EnumMember
          Identifier: '
        ParenthesizedType'
          NumericLiteral
        EnumMember
          Identifier: '
        ThisType'
          NumericLiteral
        EnumMember
          Identifier: '
        TypeOperator'
          NumericLiteral
        EnumMember
          Identifier: '
        IndexedAccessType'
          NumericLiteral
        EnumMember
          Identifier: '
        MappedType'
          NumericLiteral
        EnumMember
          Identifier: '
        LiteralType'
          NumericLiteral
        EnumMember
          Identifier: '
        NamedTupleMember'
          NumericLiteral
        EnumMember
          Identifier: '
        TemplateLiteralType'
          NumericLiteral
        EnumMember
          Identifier: '
        TemplateLiteralTypeSpan'
          NumericLiteral
        EnumMember
          Identifier: '
        ImportType'
          NumericLiteral
        EnumMember
          Identifier: '
        ObjectBindingPattern'
          NumericLiteral
        EnumMember
          Identifier: '
        ArrayBindingPattern'
          NumericLiteral
        EnumMember
          Identifier: '
        BindingElement'
          NumericLiteral
        EnumMember
          Identifier: '
        ArrayLiteralExpression'
          NumericLiteral
        EnumMember
          Identifier: '
        ObjectLiteralExpression'
          NumericLiteral
        EnumMember
          Identifier: '
        PropertyAccessExpression'
          NumericLiteral
        EnumMember
          Identifier: '
        ElementAccessExpression'
          NumericLiteral
        EnumMember
          Identifier: '
        CallExpression'
          NumericLiteral
        EnumMember
          Identifier: '
        NewExpression'
          NumericLiteral
        EnumMember
          Identifier: '
        TaggedTemplateExpression'
          NumericLiteral
        EnumMember
          Identifier: '
        TypeAssertionExpression'
          NumericLiteral
        EnumMember
          Identifier: '
        ParenthesizedExpression'
          NumericLiteral
        EnumMember
          Identifier: '
        FunctionExpression'
          NumericLiteral
        EnumMember
          Identifier: '
        ArrowFunction'
          NumericLiteral
        EnumMember
          Identifier: '
        DeleteExpression'
          NumericLiteral
        EnumMember
          Identifier: '
        TypeOfExpression'
          NumericLiteral
        EnumMember
          Identifier: '
        VoidExpression'
          NumericLiteral
        EnumMember
          Identifier: '
        AwaitExpression'
          NumericLiteral
        EnumMember
          Identifier: '
        PrefixUnaryExpression'
          NumericLiteral
        EnumMember
          Identifier: '
        PostfixUnaryExpression'
          NumericLiteral
        EnumMember
          Identifier: '
        BinaryExpression'
          NumericLiteral
        EnumMember
          Identifier: '
        ConditionalExpression'
          NumericLiteral
        EnumMember
          Identifier: '
        TemplateExpression'
          NumericLiteral
        EnumMember
          Identifier: '
        YieldExpression'
          NumericLiteral
        EnumMember
          Identifier: '
        SpreadElement'
          NumericLiteral
        EnumMember
          Identifier: '
        ClassExpression'
          NumericLiteral
        EnumMember
          Identifier: '
        OmittedExpression'
          NumericLiteral
        EnumMember
          Identifier: '
        ExpressionWithTypeArguments'
          NumericLiteral
        EnumMember
          Identifier: '
        AsExpression'
          NumericLiteral
        EnumMember
          Identifier: '
        NonNullExpression'
          NumericLiteral
        EnumMember
          Identifier: '
        MetaProperty'
          NumericLiteral
        EnumMember
          Identifier: '
        SyntheticExpression'
          NumericLiteral
        EnumMember
          Identifier: '
        SatisfiesExpression'
          NumericLiteral
        EnumMember
          Identifier: '
        TemplateSpan'
          NumericLiteral
        EnumMember
          Identifier: '
        SemicolonClassElement'
          NumericLiteral
        EnumMember
          Identifier: '
        Block'
          NumericLiteral
        EnumMember
          Identifier: '
        EmptyStatement'
          NumericLiteral
        EnumMember
          Identifier: '
        VariableStatement'
          NumericLiteral
        EnumMember
          Identifier: '
        ExpressionStatement'
          NumericLiteral
        EnumMember
          Identifier: '
        IfStatement'
          NumericLiteral
        EnumMember
          Identifier: '
        DoStatement'
          NumericLiteral
        EnumMember
          Identifier: '
        WhileStatement'
          NumericLiteral
        EnumMember
          Identifier: '
        ForStatement'
          NumericLiteral
        EnumMember
          Identifier: '
        ForInStatement'
          NumericLiteral
        EnumMember
          Identifier: '
        ForOfStatement'
          NumericLiteral
        EnumMember
          Identifier: '
        ContinueStatement'
          NumericLiteral
        EnumMember
          Identifier: '
        BreakStatement'
          NumericLiteral
        EnumMember
          Identifier: '
        ReturnStatement'
          NumericLiteral
        EnumMember
          Identifier: '
        WithStatement'
          NumericLiteral
        EnumMember
          Identifier: '
        SwitchStatement'
          NumericLiteral
        EnumMember
          Identifier: '
        LabeledStatement'
          NumericLiteral
        EnumMember
          Identifier: '
        ThrowStatement'
          NumericLiteral
        EnumMember
          Identifier: '
        TryStatement'
          NumericLiteral
        EnumMember
          Identifier: '
        DebuggerStatement'
          NumericLiteral
        EnumMember
          Identifier: '
        VariableDeclaration'
          NumericLiteral
        EnumMember
          Identifier: '
        VariableDeclarationList'
          NumericLiteral
        EnumMember
          Identifier: '
        FunctionDeclaration'
          NumericLiteral
        EnumMember
          Identifier: '
        ClassDeclaration'
          NumericLiteral
        EnumMember
          Identifier: '
        InterfaceDeclaration'
          NumericLiteral
        EnumMember
          Identifier: '
        TypeAliasDeclaration'
          NumericLiteral
        EnumMember
          Identifier: '
        EnumDeclaration'
          NumericLiteral
        EnumMember
          Identifier: '
        ModuleDeclaration'
          NumericLiteral
        EnumMember
          Identifier: '
        ModuleBlock'
          NumericLiteral
        EnumMember
          Identifier: '
        CaseBlock'
          NumericLiteral
        EnumMember
          Identifier: '
        NamespaceExportDeclaration'
          NumericLiteral
        EnumMember
          Identifier: '
        ImportEqualsDeclaration'
          NumericLiteral
        EnumMember
          Identifier: '
        ImportDeclaration'
          NumericLiteral
        EnumMember
          Identifier: '
        ImportClause'
          NumericLiteral
        EnumMember
          Identifier: '
        NamespaceImport'
          NumericLiteral
        EnumMember
          Identifier: '
        NamedImports'
          NumericLiteral
        EnumMember
          Identifier: '
        ImportSpecifier'
          NumericLiteral
        EnumMember
          Identifier: '
        ExportAssignment'
          NumericLiteral
        EnumMember
          Identifier: '
        ExportDeclaration'
          NumericLiteral
        EnumMember
          Identifier: '
        NamedExports'
          NumericLiteral
        EnumMember
          Identifier: '
        NamespaceExport'
          NumericLiteral
        EnumMember
          Identifier: '
        ExportSpecifier'
          NumericLiteral
        EnumMember
          Identifier: '
        MissingDeclaration'
          NumericLiteral
        EnumMember
          Identifier: '
        ExternalModuleReference'
          NumericLiteral
        EnumMember
          Identifier: '
        JsxElement'
          NumericLiteral
        EnumMember
          Identifier: '
        JsxSelfClosingElement'
          NumericLiteral
        EnumMember
          Identifier: '
        JsxOpeningElement'
          NumericLiteral
        EnumMember
          Identifier: '
        JsxClosingElement'
          NumericLiteral
        EnumMember
          Identifier: '
        JsxFragment'
          NumericLiteral
        EnumMember
          Identifier: '
        JsxOpeningFragment'
          NumericLiteral
        EnumMember
          Identifier: '
        JsxClosingFragment'
          NumericLiteral
        EnumMember
          Identifier: '
        JsxAttribute'
          NumericLiteral
        EnumMember
          Identifier: '
        JsxAttributes'
          NumericLiteral
        EnumMember
          Identifier: '
        JsxSpreadAttribute'
          NumericLiteral
        EnumMember
          Identifier: '
        JsxExpression'
          NumericLiteral
        EnumMember
          Identifier: '
        JsxNamespacedName'
          NumericLiteral
        EnumMember
          Identifier: '
        CaseClause'
          NumericLiteral
        EnumMember
          Identifier: '
        DefaultClause'
          NumericLiteral
        EnumMember
          Identifier: '
        HeritageClause'
          NumericLiteral
        EnumMember
          Identifier: '
        CatchClause'
          NumericLiteral
        EnumMember
          Identifier: '
        ImportAttributes'
          NumericLiteral
        EnumMember
          Identifier: '
        ImportAttribute'
          NumericLiteral
        EnumMember
          Identifier: '
        /** @deprecated */ AssertClause'
          NumericLiteral
        EnumMember
          Identifier: '
        /** @deprecated */ AssertEntry'
          NumericLiteral
        EnumMember
          Identifier: '
        /** @deprecated */ ImportTypeAssertionContainer'
          NumericLiteral
        EnumMember
          Identifier: '
        PropertyAssignment'
          NumericLiteral
        EnumMember
          Identifier: '
        ShorthandPropertyAssignment'
          NumericLiteral
        EnumMember
          Identifier: '
        SpreadAssignment'
          NumericLiteral
        EnumMember
          Identifier: '
        EnumMember'
          NumericLiteral
        EnumMember
          Identifier: '
        SourceFile'
          NumericLiteral
        EnumMember
          Identifier: '
        Bundle'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocTypeExpression'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocNameReference'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocMemberName'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocAllType'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocUnknownType'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocNullableType'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocNonNullableType'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocOptionalType'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocFunctionType'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocVariadicType'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocNamepathType'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDoc'
          NumericLiteral
        EnumMember
          Identifier: '
        /** @deprecated Use SyntaxKind.JSDoc */
        JSDocComment'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocText'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocTypeLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocSignature'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocLink'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocLinkCode'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocLinkPlain'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocTag'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocAugmentsTag'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocImplementsTag'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocAuthorTag'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocDeprecatedTag'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocClassTag'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocPublicTag'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocPrivateTag'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocProtectedTag'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocReadonlyTag'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocOverrideTag'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocCallbackTag'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocOverloadTag'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocEnumTag'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocParameterTag'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocReturnTag'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocThisTag'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocTypeTag'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocTemplateTag'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocTypedefTag'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocSeeTag'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocPropertyTag'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocThrowsTag'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocSatisfiesTag'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocImportTag'
          NumericLiteral
        EnumMember
          Identifier: '
        SyntaxList'
          NumericLiteral
        EnumMember
          Identifier: '
        NotEmittedStatement'
          NumericLiteral
        EnumMember
          Identifier: '
        NotEmittedTypeElement'
          NumericLiteral
        EnumMember
          Identifier: '
        PartiallyEmittedExpression'
          NumericLiteral
        EnumMember
          Identifier: '
        CommaListExpression'
          NumericLiteral
        EnumMember
          Identifier: '
        SyntheticReferenceExpression'
          NumericLiteral
        EnumMember
          Identifier: '
        Count'
          NumericLiteral
        EnumMember
          Identifier: '
        FirstAssignment'
          NumericLiteral
        EnumMember
          Identifier: '
        LastAssignment'
          NumericLiteral
        EnumMember
          Identifier: '
        FirstCompoundAssignment'
          NumericLiteral
        EnumMember
          Identifier: '
        LastCompoundAssignment'
          NumericLiteral
        EnumMember
          Identifier: '
        FirstReservedWord'
          NumericLiteral
        EnumMember
          Identifier: '
        LastReservedWord'
          NumericLiteral
        EnumMember
          Identifier: '
        FirstKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        LastKeyword'
          NumericLiteral
        EnumMember
          Identifier: '
        FirstFutureReservedWord'
          NumericLiteral
        EnumMember
          Identifier: '
        LastFutureReservedWord'
          NumericLiteral
        EnumMember
          Identifier: '
        FirstTypeNode'
          NumericLiteral
        EnumMember
          Identifier: '
        LastTypeNode'
          NumericLiteral
        EnumMember
          Identifier: '
        FirstPunctuation'
          NumericLiteral
        EnumMember
          Identifier: '
        LastPunctuation'
          NumericLiteral
        EnumMember
          Identifier: '
        FirstToken'
          NumericLiteral
        EnumMember
          Identifier: '
        LastToken'
          NumericLiteral
        EnumMember
          Identifier: '
        FirstTriviaToken'
          NumericLiteral
        EnumMember
          Identifier: '
        LastTriviaToken'
          NumericLiteral
        EnumMember
          Identifier: '
        FirstLiteralToken'
          NumericLiteral
        EnumMember
          Identifier: '
        LastLiteralToken'
          NumericLiteral
        EnumMember
          Identifier: '
        FirstTemplateToken'
          NumericLiteral
        EnumMember
          Identifier: '
        LastTemplateToken'
          NumericLiteral
        EnumMember
          Identifier: '
        FirstBinaryOperator'
          NumericLiteral
        EnumMember
          Identifier: '
        LastBinaryOperator'
          NumericLiteral
        EnumMember
          Identifier: '
        FirstStatement'
          NumericLiteral
        EnumMember
          Identifier: '
        LastStatement'
          NumericLiteral
        EnumMember
          Identifier: '
        FirstNode'
          NumericLiteral
        EnumMember
          Identifier: '
        FirstJSDocNode'
          NumericLiteral
        EnumMember
          Identifier: '
        LastJSDocNode'
          NumericLiteral
        EnumMember
          Identifier: '
        FirstJSDocTagNode'
          NumericLiteral
        EnumMember
          Identifier: '
        LastJSDocTagNode'
          NumericLiteral
      TypeAliasDeclaration
        Identifier: ' TriviaSyntaxKind'
        UnionType
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'SingleLineCommentTrivia'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'MultiLineCommentTrivia'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'NewLineTrivia'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'WhitespaceTrivia'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ShebangTrivia'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ConflictMarkerTrivia'
      TypeAliasDeclaration
        Identifier: ' LiteralSyntaxKind'
        UnionType
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'NumericLiteral'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'BigIntLiteral'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'StringLiteral'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JsxText'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JsxTextAllWhiteSpaces'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'RegularExpressionLiteral'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'NoSubstitutionTemplateLiteral'
      TypeAliasDeclaration
        Identifier: ' PseudoLiteralSyntaxKind'
        UnionType
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'TemplateHead'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'TemplateMiddle'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'TemplateTail'
      TypeAliasDeclaration
        Identifier: ' PunctuationSyntaxKind'
        UnionType
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'OpenBraceToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'CloseBraceToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'OpenParenToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'CloseParenToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'OpenBracketToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'CloseBracketToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'DotToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'DotDotDotToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'SemicolonToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'CommaToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'QuestionDotToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'LessThanToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'LessThanSlashToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'GreaterThanToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'LessThanEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'GreaterThanEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'EqualsEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ExclamationEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'EqualsEqualsEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ExclamationEqualsEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'EqualsGreaterThanToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'PlusToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'MinusToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AsteriskToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AsteriskAsteriskToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'SlashToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'PercentToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'PlusPlusToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'MinusMinusToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'LessThanLessThanToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'GreaterThanGreaterThanToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'GreaterThanGreaterThanGreaterThanToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AmpersandToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'BarToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'CaretToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ExclamationToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'TildeToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AmpersandAmpersandToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AmpersandAmpersandEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'BarBarToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'BarBarEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'QuestionQuestionToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'QuestionQuestionEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'QuestionToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ColonToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AtToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'BacktickToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'HashToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'EqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'PlusEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'MinusEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AsteriskEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AsteriskAsteriskEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'SlashEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'PercentEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'LessThanLessThanEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'GreaterThanGreaterThanEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'GreaterThanGreaterThanGreaterThanEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AmpersandEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'BarEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'CaretEqualsToken'
      TypeAliasDeclaration
        Identifier: ' KeywordSyntaxKind'
        UnionType
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AbstractKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AccessorKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AnyKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AsKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AssertsKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AssertKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AsyncKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AwaitKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'BigIntKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'BooleanKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'BreakKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'CaseKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'CatchKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ClassKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ConstKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ConstructorKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ContinueKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'DebuggerKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'DeclareKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'DefaultKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'DeleteKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'DoKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ElseKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'EnumKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ExportKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ExtendsKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'FalseKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'FinallyKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ForKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'FromKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'FunctionKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'GetKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'GlobalKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'IfKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ImplementsKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ImportKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'InferKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'InKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'InstanceOfKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'InterfaceKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'IntrinsicKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'IsKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'KeyOfKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'LetKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ModuleKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'NamespaceKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'NeverKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'NewKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'NullKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'NumberKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ObjectKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'OfKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'PackageKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'PrivateKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ProtectedKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'PublicKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ReadonlyKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'OutKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'OverrideKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'RequireKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ReturnKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'SatisfiesKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'SetKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'StaticKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'StringKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'SuperKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'SwitchKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'SymbolKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ThisKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ThrowKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'TrueKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'TryKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'TypeKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'TypeOfKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'UndefinedKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'UniqueKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'UnknownKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'UsingKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'VarKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'VoidKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'WhileKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'WithKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'YieldKeyword'
      TypeAliasDeclaration
        Identifier: ' ModifierSyntaxKind'
        UnionType
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AbstractKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AccessorKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AsyncKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ConstKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'DeclareKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'DefaultKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ExportKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'InKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'PrivateKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ProtectedKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'PublicKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ReadonlyKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'OutKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'OverrideKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'StaticKeyword'
      TypeAliasDeclaration
        Identifier: ' KeywordTypeSyntaxKind'
        UnionType
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AnyKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'BigIntKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'BooleanKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'IntrinsicKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'NeverKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'NumberKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ObjectKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'StringKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'SymbolKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'UndefinedKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'UnknownKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'VoidKeyword'
      TypeAliasDeclaration
        Identifier: ' TokenSyntaxKind'
        UnionType
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'Unknown'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'EndOfFileToken'
          TypeReference
            Identifier: ' TriviaSyntaxKind'
          TypeReference
            Identifier: ' LiteralSyntaxKind'
          TypeReference
            Identifier: ' PseudoLiteralSyntaxKind'
          TypeReference
            Identifier: ' PunctuationSyntaxKind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'Identifier'
          TypeReference
            Identifier: ' KeywordSyntaxKind'
      TypeAliasDeclaration
        Identifier: ' JsxTokenSyntaxKind'
        UnionType
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'LessThanSlashToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'EndOfFileToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ConflictMarkerTrivia'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JsxText'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JsxTextAllWhiteSpaces'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'OpenBraceToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'LessThanToken'
      TypeAliasDeclaration
        Identifier: ' JSDocSyntaxKind'
        UnionType
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'EndOfFileToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'WhitespaceTrivia'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AtToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'NewLineTrivia'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AsteriskToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'OpenBraceToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'CloseBraceToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'LessThanToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'GreaterThanToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'OpenBracketToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'CloseBracketToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'OpenParenToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'CloseParenToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'EqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'CommaToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'DotToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'Identifier'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'BacktickToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'HashToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'Unknown'
          TypeReference
            Identifier: ' KeywordSyntaxKind'
      EnumDeclaration
        Identifier: ' NodeFlags'
        EnumMember
          Identifier: '
        None'
          NumericLiteral
        EnumMember
          Identifier: '
        Let'
          NumericLiteral
        EnumMember
          Identifier: '
        Const'
          NumericLiteral
        EnumMember
          Identifier: '
        Using'
          NumericLiteral
        EnumMember
          Identifier: '
        AwaitUsing'
          NumericLiteral
        EnumMember
          Identifier: '
        NestedNamespace'
          NumericLiteral
        EnumMember
          Identifier: '
        Synthesized'
          NumericLiteral
        EnumMember
          Identifier: '
        Namespace'
          NumericLiteral
        EnumMember
          Identifier: '
        OptionalChain'
          NumericLiteral
        EnumMember
          Identifier: '
        ExportContext'
          NumericLiteral
        EnumMember
          Identifier: '
        ContainsThis'
          NumericLiteral
        EnumMember
          Identifier: '
        HasImplicitReturn'
          NumericLiteral
        EnumMember
          Identifier: '
        HasExplicitReturn'
          NumericLiteral
        EnumMember
          Identifier: '
        GlobalAugmentation'
          NumericLiteral
        EnumMember
          Identifier: '
        HasAsyncFunctions'
          NumericLiteral
        EnumMember
          Identifier: '
        DisallowInContext'
          NumericLiteral
        EnumMember
          Identifier: '
        YieldContext'
          NumericLiteral
        EnumMember
          Identifier: '
        DecoratorContext'
          NumericLiteral
        EnumMember
          Identifier: '
        AwaitContext'
          NumericLiteral
        EnumMember
          Identifier: '
        DisallowConditionalTypesContext'
          NumericLiteral
        EnumMember
          Identifier: '
        ThisNodeHasError'
          NumericLiteral
        EnumMember
          Identifier: '
        JavaScriptFile'
          NumericLiteral
        EnumMember
          Identifier: '
        ThisNodeOrAnySubNodesHasError'
          NumericLiteral
        EnumMember
          Identifier: '
        HasAggregatedChildData'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDoc'
          NumericLiteral
        EnumMember
          Identifier: '
        JsonFile'
          NumericLiteral
        EnumMember
          Identifier: '
        BlockScoped'
          NumericLiteral
        EnumMember
          Identifier: '
        Constant'
          NumericLiteral
        EnumMember
          Identifier: '
        ReachabilityCheckFlags'
          NumericLiteral
        EnumMember
          Identifier: '
        ReachabilityAndEmitFlags'
          NumericLiteral
        EnumMember
          Identifier: '
        ContextFlags'
          NumericLiteral
        EnumMember
          Identifier: '
        TypeExcludesFlags'
          NumericLiteral
      EnumDeclaration
        Identifier: ' ModifierFlags'
        EnumMember
          Identifier: '
        None'
          NumericLiteral
        EnumMember
          Identifier: '
        Public'
          NumericLiteral
        EnumMember
          Identifier: '
        Private'
          NumericLiteral
        EnumMember
          Identifier: '
        Protected'
          NumericLiteral
        EnumMember
          Identifier: '
        Readonly'
          NumericLiteral
        EnumMember
          Identifier: '
        Override'
          NumericLiteral
        EnumMember
          Identifier: '
        Export'
          NumericLiteral
        EnumMember
          Identifier: '
        Abstract'
          NumericLiteral
        EnumMember
          Identifier: '
        Ambient'
          NumericLiteral
        EnumMember
          Identifier: '
        Static'
          NumericLiteral
        EnumMember
          Identifier: '
        Accessor'
          NumericLiteral
        EnumMember
          Identifier: '
        Async'
          NumericLiteral
        EnumMember
          Identifier: '
        Default'
          NumericLiteral
        EnumMember
          Identifier: '
        Const'
          NumericLiteral
        EnumMember
          Identifier: '
        In'
          NumericLiteral
        EnumMember
          Identifier: '
        Out'
          NumericLiteral
        EnumMember
          Identifier: '
        Decorator'
          NumericLiteral
        EnumMember
          Identifier: '
        Deprecated'
          NumericLiteral
        EnumMember
          Identifier: '
        HasComputedJSDocModifiers'
          NumericLiteral
        EnumMember
          Identifier: '
        HasComputedFlags'
          NumericLiteral
        EnumMember
          Identifier: '
        AccessibilityModifier'
          NumericLiteral
        EnumMember
          Identifier: '
        ParameterPropertyModifier'
          NumericLiteral
        EnumMember
          Identifier: '
        NonPublicAccessibilityModifier'
          NumericLiteral
        EnumMember
          Identifier: '
        TypeScriptModifier'
          NumericLiteral
        EnumMember
          Identifier: '
        ExportDefault'
          NumericLiteral
        EnumMember
          Identifier: '
        All'
          NumericLiteral
        EnumMember
          Identifier: '
        Modifier'
          NumericLiteral
      EnumDeclaration
        Identifier: ' JsxFlags'
        EnumMember
          Identifier: '
        None'
          NumericLiteral
        EnumMember
          Identifier: '
        /** An element from a named property of the JSX.IntrinsicElements interface */
        IntrinsicNamedElement'
          NumericLiteral
        EnumMember
          Identifier: '
        /** An element inferred from the string index signature of the JSX.IntrinsicElements interface */
        IntrinsicIndexedElement'
          NumericLiteral
        EnumMember
          Identifier: '
        IntrinsicElement'
          NumericLiteral
      InterfaceDeclaration
        Identifier: ' Node'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ReadonlyTextRange'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            Identifier: ' SyntaxKind'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' flags'
          TypeReference
            Identifier: ' NodeFlags'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' Node'
      InterfaceDeclaration
        Identifier: ' Node'
        MethodSignature
          Identifier: '
        getSourceFile'
          TypeReference
            Identifier: ' SourceFile'
        MethodSignature
          Identifier: '
        getChildCount'
          Parameter
            Identifier: 'sourceFile'
            QuestionToken
            TypeReference
              Identifier: ' SourceFile'
          NumberKeyword
        MethodSignature
          Identifier: '
        getChildAt'
          Parameter
            Identifier: 'index'
            NumberKeyword
          Parameter
            Identifier: ' sourceFile'
            QuestionToken
            TypeReference
              Identifier: ' SourceFile'
          TypeReference
            Identifier: ' Node'
        MethodSignature
          Identifier: '
        getChildren'
          Parameter
            Identifier: 'sourceFile'
            QuestionToken
            TypeReference
              Identifier: ' SourceFile'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Node'
        MethodSignature
          Identifier: '
        getStart'
          Parameter
            Identifier: 'sourceFile'
            QuestionToken
            TypeReference
              Identifier: ' SourceFile'
          Parameter
            Identifier: ' includeJsDocComment'
            QuestionToken
            BooleanKeyword
          NumberKeyword
        MethodSignature
          Identifier: '
        getFullStart'
          NumberKeyword
        MethodSignature
          Identifier: '
        getEnd'
          NumberKeyword
        MethodSignature
          Identifier: '
        getWidth'
          Parameter
            Identifier: 'sourceFile'
            QuestionToken
            TypeReference
              Identifier: ' SourceFileLike'
          NumberKeyword
        MethodSignature
          Identifier: '
        getFullWidth'
          NumberKeyword
        MethodSignature
          Identifier: '
        getLeadingTriviaWidth'
          Parameter
            Identifier: 'sourceFile'
            QuestionToken
            TypeReference
              Identifier: ' SourceFile'
          NumberKeyword
        MethodSignature
          Identifier: '
        getFullText'
          Parameter
            Identifier: 'sourceFile'
            QuestionToken
            TypeReference
              Identifier: ' SourceFile'
          StringKeyword
        MethodSignature
          Identifier: '
        getText'
          Parameter
            Identifier: 'sourceFile'
            QuestionToken
            TypeReference
              Identifier: ' SourceFile'
          StringKeyword
        MethodSignature
          Identifier: '
        getFirstToken'
          Parameter
            Identifier: 'sourceFile'
            QuestionToken
            TypeReference
              Identifier: ' SourceFile'
          UnionType
            TypeReference
              Identifier: ' Node'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getLastToken'
          Parameter
            Identifier: 'sourceFile'
            QuestionToken
            TypeReference
              Identifier: ' SourceFile'
          UnionType
            TypeReference
              Identifier: ' Node'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        forEachChild'
          TypeParameter
            Identifier: 'T'
          Parameter
            Identifier: 'cbNode'
            FunctionType
              Parameter
                Identifier: 'node'
                TypeReference
                  Identifier: ' Node'
              UnionType
                TypeReference
                  Identifier: ' T'
                UndefinedKeyword
          Parameter
            Identifier: ' cbNodeArray'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'nodes'
                TypeReference
                  Identifier: ' NodeArray'
                  TypeReference
                    Identifier: 'Node'
              UnionType
                TypeReference
                  Identifier: ' T'
                UndefinedKeyword
          UnionType
            TypeReference
              Identifier: ' T'
            UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' JSDocContainer'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          Identifier: '
        _jsdocContainerBrand'
          AnyKeyword
      InterfaceDeclaration
        Identifier: ' LocalsContainer'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          Identifier: '
        _localsContainerBrand'
          AnyKeyword
      InterfaceDeclaration
        Identifier: ' FlowContainer'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          Identifier: '
        _flowContainerBrand'
          AnyKeyword
      TypeAliasDeclaration
        Identifier: ' HasJSDoc'
        UnionType
          TypeReference
            Identifier: ' AccessorDeclaration'
          TypeReference
            Identifier: ' ArrowFunction'
          TypeReference
            Identifier: ' BinaryExpression'
          TypeReference
            Identifier: ' Block'
          TypeReference
            Identifier: ' BreakStatement'
          TypeReference
            Identifier: ' CallSignatureDeclaration'
          TypeReference
            Identifier: ' CaseClause'
          TypeReference
            Identifier: ' ClassLikeDeclaration'
          TypeReference
            Identifier: ' ClassStaticBlockDeclaration'
          TypeReference
            Identifier: ' ConstructorDeclaration'
          TypeReference
            Identifier: ' ConstructorTypeNode'
          TypeReference
            Identifier: ' ConstructSignatureDeclaration'
          TypeReference
            Identifier: ' ContinueStatement'
          TypeReference
            Identifier: ' DebuggerStatement'
          TypeReference
            Identifier: ' DoStatement'
          TypeReference
            Identifier: ' ElementAccessExpression'
          TypeReference
            Identifier: ' EmptyStatement'
          TypeReference
            Identifier: ' EndOfFileToken'
          TypeReference
            Identifier: ' EnumDeclaration'
          TypeReference
            Identifier: ' EnumMember'
          TypeReference
            Identifier: ' ExportAssignment'
          TypeReference
            Identifier: ' ExportDeclaration'
          TypeReference
            Identifier: ' ExportSpecifier'
          TypeReference
            Identifier: ' ExpressionStatement'
          TypeReference
            Identifier: ' ForInStatement'
          TypeReference
            Identifier: ' ForOfStatement'
          TypeReference
            Identifier: ' ForStatement'
          TypeReference
            Identifier: ' FunctionDeclaration'
          TypeReference
            Identifier: ' FunctionExpression'
          TypeReference
            Identifier: ' FunctionTypeNode'
          TypeReference
            Identifier: ' Identifier'
          TypeReference
            Identifier: ' IfStatement'
          TypeReference
            Identifier: ' ImportDeclaration'
          TypeReference
            Identifier: ' ImportEqualsDeclaration'
          TypeReference
            Identifier: ' IndexSignatureDeclaration'
          TypeReference
            Identifier: ' InterfaceDeclaration'
          TypeReference
            Identifier: ' JSDocFunctionType'
          TypeReference
            Identifier: ' JSDocSignature'
          TypeReference
            Identifier: ' LabeledStatement'
          TypeReference
            Identifier: ' MethodDeclaration'
          TypeReference
            Identifier: ' MethodSignature'
          TypeReference
            Identifier: ' ModuleDeclaration'
          TypeReference
            Identifier: ' NamedTupleMember'
          TypeReference
            Identifier: ' NamespaceExportDeclaration'
          TypeReference
            Identifier: ' ObjectLiteralExpression'
          TypeReference
            Identifier: ' ParameterDeclaration'
          TypeReference
            Identifier: ' ParenthesizedExpression'
          TypeReference
            Identifier: ' PropertyAccessExpression'
          TypeReference
            Identifier: ' PropertyAssignment'
          TypeReference
            Identifier: ' PropertyDeclaration'
          TypeReference
            Identifier: ' PropertySignature'
          TypeReference
            Identifier: ' ReturnStatement'
          TypeReference
            Identifier: ' SemicolonClassElement'
          TypeReference
            Identifier: ' ShorthandPropertyAssignment'
          TypeReference
            Identifier: ' SpreadAssignment'
          TypeReference
            Identifier: ' SwitchStatement'
          TypeReference
            Identifier: ' ThrowStatement'
          TypeReference
            Identifier: ' TryStatement'
          TypeReference
            Identifier: ' TypeAliasDeclaration'
          TypeReference
            Identifier: ' TypeParameterDeclaration'
          TypeReference
            Identifier: ' VariableDeclaration'
          TypeReference
            Identifier: ' VariableStatement'
          TypeReference
            Identifier: ' WhileStatement'
          TypeReference
            Identifier: ' WithStatement'
      TypeAliasDeclaration
        Identifier: ' HasType'
        UnionType
          TypeReference
            Identifier: ' SignatureDeclaration'
          TypeReference
            Identifier: ' VariableDeclaration'
          TypeReference
            Identifier: ' ParameterDeclaration'
          TypeReference
            Identifier: ' PropertySignature'
          TypeReference
            Identifier: ' PropertyDeclaration'
          TypeReference
            Identifier: ' TypePredicateNode'
          TypeReference
            Identifier: ' ParenthesizedTypeNode'
          TypeReference
            Identifier: ' TypeOperatorNode'
          TypeReference
            Identifier: ' MappedTypeNode'
          TypeReference
            Identifier: ' AssertionExpression'
          TypeReference
            Identifier: ' TypeAliasDeclaration'
          TypeReference
            Identifier: ' JSDocTypeExpression'
          TypeReference
            Identifier: ' JSDocNonNullableType'
          TypeReference
            Identifier: ' JSDocNullableType'
          TypeReference
            Identifier: ' JSDocOptionalType'
          TypeReference
            Identifier: ' JSDocVariadicType'
      TypeAliasDeclaration
        Identifier: ' HasTypeArguments'
        UnionType
          TypeReference
            Identifier: ' CallExpression'
          TypeReference
            Identifier: ' NewExpression'
          TypeReference
            Identifier: ' TaggedTemplateExpression'
          TypeReference
            Identifier: ' JsxOpeningElement'
          TypeReference
            Identifier: ' JsxSelfClosingElement'
      TypeAliasDeclaration
        Identifier: ' HasInitializer'
        UnionType
          TypeReference
            Identifier: ' HasExpressionInitializer'
          TypeReference
            Identifier: ' ForStatement'
          TypeReference
            Identifier: ' ForInStatement'
          TypeReference
            Identifier: ' ForOfStatement'
          TypeReference
            Identifier: ' JsxAttribute'
      TypeAliasDeclaration
        Identifier: ' HasExpressionInitializer'
        UnionType
          TypeReference
            Identifier: ' VariableDeclaration'
          TypeReference
            Identifier: ' ParameterDeclaration'
          TypeReference
            Identifier: ' BindingElement'
          TypeReference
            Identifier: ' PropertyDeclaration'
          TypeReference
            Identifier: ' PropertyAssignment'
          TypeReference
            Identifier: ' EnumMember'
      TypeAliasDeclaration
        Identifier: ' HasDecorators'
        UnionType
          TypeReference
            Identifier: ' ParameterDeclaration'
          TypeReference
            Identifier: ' PropertyDeclaration'
          TypeReference
            Identifier: ' MethodDeclaration'
          TypeReference
            Identifier: ' GetAccessorDeclaration'
          TypeReference
            Identifier: ' SetAccessorDeclaration'
          TypeReference
            Identifier: ' ClassExpression'
          TypeReference
            Identifier: ' ClassDeclaration'
      TypeAliasDeclaration
        Identifier: ' HasModifiers'
        UnionType
          TypeReference
            Identifier: ' TypeParameterDeclaration'
          TypeReference
            Identifier: ' ParameterDeclaration'
          TypeReference
            Identifier: ' ConstructorTypeNode'
          TypeReference
            Identifier: ' PropertySignature'
          TypeReference
            Identifier: ' PropertyDeclaration'
          TypeReference
            Identifier: ' MethodSignature'
          TypeReference
            Identifier: ' MethodDeclaration'
          TypeReference
            Identifier: ' ConstructorDeclaration'
          TypeReference
            Identifier: ' GetAccessorDeclaration'
          TypeReference
            Identifier: ' SetAccessorDeclaration'
          TypeReference
            Identifier: ' IndexSignatureDeclaration'
          TypeReference
            Identifier: ' FunctionExpression'
          TypeReference
            Identifier: ' ArrowFunction'
          TypeReference
            Identifier: ' ClassExpression'
          TypeReference
            Identifier: ' VariableStatement'
          TypeReference
            Identifier: ' FunctionDeclaration'
          TypeReference
            Identifier: ' ClassDeclaration'
          TypeReference
            Identifier: ' InterfaceDeclaration'
          TypeReference
            Identifier: ' TypeAliasDeclaration'
          TypeReference
            Identifier: ' EnumDeclaration'
          TypeReference
            Identifier: ' ModuleDeclaration'
          TypeReference
            Identifier: ' ImportEqualsDeclaration'
          TypeReference
            Identifier: ' ImportDeclaration'
          TypeReference
            Identifier: ' ExportAssignment'
          TypeReference
            Identifier: ' ExportDeclaration'
      InterfaceDeclaration
        Identifier: ' NodeArray'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' Node'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ReadonlyArray'
            TypeReference
              Identifier: 'T'
          ExpressionWithTypeArguments
            Identifier: ' ReadonlyTextRange'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' hasTrailingComma'
          BooleanKeyword
      InterfaceDeclaration
        Identifier: ' Token'
        TypeParameter
          Identifier: 'TKind'
          TypeReference
            Identifier: ' SyntaxKind'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            Identifier: ' TKind'
      TypeAliasDeclaration
        Identifier: ' EndOfFileToken'
        IntersectionType
          TypeReference
            Identifier: ' Token'
            TypeReference
              QualifiedName
                Identifier: 'SyntaxKind'
                Identifier: 'EndOfFileToken'
          TypeReference
            Identifier: ' JSDocContainer'
      InterfaceDeclaration
        Identifier: ' PunctuationToken'
        TypeParameter
          Identifier: 'TKind'
          TypeReference
            Identifier: ' PunctuationSyntaxKind'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Token'
            TypeReference
              Identifier: 'TKind'
      TypeAliasDeclaration
        Identifier: ' DotToken'
        TypeReference
          Identifier: ' PunctuationToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'DotToken'
      TypeAliasDeclaration
        Identifier: ' DotDotDotToken'
        TypeReference
          Identifier: ' PunctuationToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'DotDotDotToken'
      TypeAliasDeclaration
        Identifier: ' QuestionToken'
        TypeReference
          Identifier: ' PunctuationToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'QuestionToken'
      TypeAliasDeclaration
        Identifier: ' ExclamationToken'
        TypeReference
          Identifier: ' PunctuationToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'ExclamationToken'
      TypeAliasDeclaration
        Identifier: ' ColonToken'
        TypeReference
          Identifier: ' PunctuationToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'ColonToken'
      TypeAliasDeclaration
        Identifier: ' EqualsToken'
        TypeReference
          Identifier: ' PunctuationToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'EqualsToken'
      TypeAliasDeclaration
        Identifier: ' AmpersandAmpersandEqualsToken'
        TypeReference
          Identifier: ' PunctuationToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'AmpersandAmpersandEqualsToken'
      TypeAliasDeclaration
        Identifier: ' BarBarEqualsToken'
        TypeReference
          Identifier: ' PunctuationToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'BarBarEqualsToken'
      TypeAliasDeclaration
        Identifier: ' QuestionQuestionEqualsToken'
        TypeReference
          Identifier: ' PunctuationToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'QuestionQuestionEqualsToken'
      TypeAliasDeclaration
        Identifier: ' AsteriskToken'
        TypeReference
          Identifier: ' PunctuationToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'AsteriskToken'
      TypeAliasDeclaration
        Identifier: ' EqualsGreaterThanToken'
        TypeReference
          Identifier: ' PunctuationToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'EqualsGreaterThanToken'
      TypeAliasDeclaration
        Identifier: ' PlusToken'
        TypeReference
          Identifier: ' PunctuationToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'PlusToken'
      TypeAliasDeclaration
        Identifier: ' MinusToken'
        TypeReference
          Identifier: ' PunctuationToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'MinusToken'
      TypeAliasDeclaration
        Identifier: ' QuestionDotToken'
        TypeReference
          Identifier: ' PunctuationToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'QuestionDotToken'
      InterfaceDeclaration
        Identifier: ' KeywordToken'
        TypeParameter
          Identifier: 'TKind'
          TypeReference
            Identifier: ' KeywordSyntaxKind'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Token'
            TypeReference
              Identifier: 'TKind'
      TypeAliasDeclaration
        Identifier: ' AssertsKeyword'
        TypeReference
          Identifier: ' KeywordToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'AssertsKeyword'
      TypeAliasDeclaration
        Identifier: ' AssertKeyword'
        TypeReference
          Identifier: ' KeywordToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'AssertKeyword'
      TypeAliasDeclaration
        Identifier: ' AwaitKeyword'
        TypeReference
          Identifier: ' KeywordToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'AwaitKeyword'
      TypeAliasDeclaration
        Identifier: ' CaseKeyword'
        TypeReference
          Identifier: ' KeywordToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'CaseKeyword'
      InterfaceDeclaration
        Identifier: ' ModifierToken'
        TypeParameter
          Identifier: 'TKind'
          TypeReference
            Identifier: ' ModifierSyntaxKind'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' KeywordToken'
            TypeReference
              Identifier: 'TKind'
      TypeAliasDeclaration
        Identifier: ' AbstractKeyword'
        TypeReference
          Identifier: ' ModifierToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'AbstractKeyword'
      TypeAliasDeclaration
        Identifier: ' AccessorKeyword'
        TypeReference
          Identifier: ' ModifierToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'AccessorKeyword'
      TypeAliasDeclaration
        Identifier: ' AsyncKeyword'
        TypeReference
          Identifier: ' ModifierToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'AsyncKeyword'
      TypeAliasDeclaration
        Identifier: ' ConstKeyword'
        TypeReference
          Identifier: ' ModifierToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'ConstKeyword'
      TypeAliasDeclaration
        Identifier: ' DeclareKeyword'
        TypeReference
          Identifier: ' ModifierToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'DeclareKeyword'
      TypeAliasDeclaration
        Identifier: ' DefaultKeyword'
        TypeReference
          Identifier: ' ModifierToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'DefaultKeyword'
      TypeAliasDeclaration
        Identifier: ' ExportKeyword'
        TypeReference
          Identifier: ' ModifierToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'ExportKeyword'
      TypeAliasDeclaration
        Identifier: ' InKeyword'
        TypeReference
          Identifier: ' ModifierToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'InKeyword'
      TypeAliasDeclaration
        Identifier: ' PrivateKeyword'
        TypeReference
          Identifier: ' ModifierToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'PrivateKeyword'
      TypeAliasDeclaration
        Identifier: ' ProtectedKeyword'
        TypeReference
          Identifier: ' ModifierToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'ProtectedKeyword'
      TypeAliasDeclaration
        Identifier: ' PublicKeyword'
        TypeReference
          Identifier: ' ModifierToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'PublicKeyword'
      TypeAliasDeclaration
        Identifier: ' ReadonlyKeyword'
        TypeReference
          Identifier: ' ModifierToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'ReadonlyKeyword'
      TypeAliasDeclaration
        Identifier: ' OutKeyword'
        TypeReference
          Identifier: ' ModifierToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'OutKeyword'
      TypeAliasDeclaration
        Identifier: ' OverrideKeyword'
        TypeReference
          Identifier: ' ModifierToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'OverrideKeyword'
      TypeAliasDeclaration
        Identifier: ' StaticKeyword'
        TypeReference
          Identifier: ' ModifierToken'
          TypeReference
            QualifiedName
              Identifier: 'SyntaxKind'
              Identifier: 'StaticKeyword'
      TypeAliasDeclaration
        Identifier: ' Modifier'
        UnionType
          TypeReference
            Identifier: ' AbstractKeyword'
          TypeReference
            Identifier: ' AccessorKeyword'
          TypeReference
            Identifier: ' AsyncKeyword'
          TypeReference
            Identifier: ' ConstKeyword'
          TypeReference
            Identifier: ' DeclareKeyword'
          TypeReference
            Identifier: ' DefaultKeyword'
          TypeReference
            Identifier: ' ExportKeyword'
          TypeReference
            Identifier: ' InKeyword'
          TypeReference
            Identifier: ' PrivateKeyword'
          TypeReference
            Identifier: ' ProtectedKeyword'
          TypeReference
            Identifier: ' PublicKeyword'
          TypeReference
            Identifier: ' OutKeyword'
          TypeReference
            Identifier: ' OverrideKeyword'
          TypeReference
            Identifier: ' ReadonlyKeyword'
          TypeReference
            Identifier: ' StaticKeyword'
      TypeAliasDeclaration
        Identifier: ' ModifierLike'
        UnionType
          TypeReference
            Identifier: ' Modifier'
          TypeReference
            Identifier: ' Decorator'
      TypeAliasDeclaration
        Identifier: ' AccessibilityModifier'
        UnionType
          TypeReference
            Identifier: ' PublicKeyword'
          TypeReference
            Identifier: ' PrivateKeyword'
          TypeReference
            Identifier: ' ProtectedKeyword'
      TypeAliasDeclaration
        Identifier: ' ParameterPropertyModifier'
        UnionType
          TypeReference
            Identifier: ' AccessibilityModifier'
          TypeReference
            Identifier: ' ReadonlyKeyword'
      TypeAliasDeclaration
        Identifier: ' ClassMemberModifier'
        UnionType
          TypeReference
            Identifier: ' AccessibilityModifier'
          TypeReference
            Identifier: ' ReadonlyKeyword'
          TypeReference
            Identifier: ' StaticKeyword'
          TypeReference
            Identifier: ' AccessorKeyword'
      TypeAliasDeclaration
        Identifier: ' ModifiersArray'
        TypeReference
          Identifier: ' NodeArray'
          TypeReference
            Identifier: 'Modifier'
      EnumDeclaration
        Identifier: ' GeneratedIdentifierFlags'
        EnumMember
          Identifier: '
        None'
          NumericLiteral
        EnumMember
          Identifier: '
        ReservedInNestedScopes'
          NumericLiteral
        EnumMember
          Identifier: '
        Optimistic'
          NumericLiteral
        EnumMember
          Identifier: '
        FileLevel'
          NumericLiteral
        EnumMember
          Identifier: '
        AllowNameSubstitution'
          NumericLiteral
      InterfaceDeclaration
        Identifier: ' Identifier'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' PrimaryExpression'
          ExpressionWithTypeArguments
            Identifier: ' Declaration'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
          ExpressionWithTypeArguments
            Identifier: ' FlowContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'Identifier'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' escapedText'
          TypeReference
            Identifier: ' __String'
      InterfaceDeclaration
        Identifier: ' Identifier'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' text'
          StringKeyword
      InterfaceDeclaration
        Identifier: ' TransientIdentifier'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Identifier'
        PropertySignature
          Identifier: '
        resolvedSymbol'
          TypeReference
            Identifier: ' Symbol'
      InterfaceDeclaration
        Identifier: ' QualifiedName'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
          ExpressionWithTypeArguments
            Identifier: ' FlowContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'QualifiedName'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' left'
          TypeReference
            Identifier: ' EntityName'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' right'
          TypeReference
            Identifier: ' Identifier'
      TypeAliasDeclaration
        Identifier: ' EntityName'
        UnionType
          TypeReference
            Identifier: ' Identifier'
          TypeReference
            Identifier: ' QualifiedName'
      TypeAliasDeclaration
        Identifier: ' PropertyName'
        UnionType
          TypeReference
            Identifier: ' Identifier'
          TypeReference
            Identifier: ' StringLiteral'
          TypeReference
            Identifier: ' NoSubstitutionTemplateLiteral'
          TypeReference
            Identifier: ' NumericLiteral'
          TypeReference
            Identifier: ' ComputedPropertyName'
          TypeReference
            Identifier: ' PrivateIdentifier'
          TypeReference
            Identifier: ' BigIntLiteral'
      TypeAliasDeclaration
        Identifier: ' MemberName'
        UnionType
          TypeReference
            Identifier: ' Identifier'
          TypeReference
            Identifier: ' PrivateIdentifier'
      TypeAliasDeclaration
        Identifier: ' DeclarationName'
        UnionType
          TypeReference
            Identifier: ' PropertyName'
          TypeReference
            Identifier: ' JsxAttributeName'
          TypeReference
            Identifier: ' StringLiteralLike'
          TypeReference
            Identifier: ' ElementAccessExpression'
          TypeReference
            Identifier: ' BindingPattern'
          TypeReference
            Identifier: ' EntityNameExpression'
      InterfaceDeclaration
        Identifier: ' Declaration'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          Identifier: '
        _declarationBrand'
          AnyKeyword
      InterfaceDeclaration
        Identifier: ' NamedDeclaration'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Declaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          QuestionToken
          TypeReference
            Identifier: ' DeclarationName'
      InterfaceDeclaration
        Identifier: ' DeclarationStatement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' NamedDeclaration'
          ExpressionWithTypeArguments
            Identifier: ' Statement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' Identifier'
            TypeReference
              Identifier: ' StringLiteral'
            TypeReference
              Identifier: ' NumericLiteral'
      InterfaceDeclaration
        Identifier: ' ComputedPropertyName'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ComputedPropertyName'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' Declaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' Expression'
      InterfaceDeclaration
        Identifier: ' PrivateIdentifier'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' PrimaryExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'PrivateIdentifier'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' escapedText'
          TypeReference
            Identifier: ' __String'
      InterfaceDeclaration
        Identifier: ' PrivateIdentifier'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' text'
          StringKeyword
      InterfaceDeclaration
        Identifier: ' Decorator'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'Decorator'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' NamedDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' LeftHandSideExpression'
      InterfaceDeclaration
        Identifier: ' TypeParameterDeclaration'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' NamedDeclaration'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'TypeParameter'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          UnionType
            TypeReference
              Identifier: ' DeclarationWithTypeParameterChildren'
            TypeReference
              Identifier: ' InferTypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' modifiers'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'Modifier'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' Identifier'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' constraint'
          QuestionToken
          TypeReference
            Identifier: ' TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' default'
          QuestionToken
          TypeReference
            Identifier: ' TypeNode'
        PropertySignature
          Identifier: '
        expression'
          QuestionToken
          TypeReference
            Identifier: ' Expression'
      InterfaceDeclaration
        Identifier: ' SignatureDeclarationBase'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' NamedDeclaration'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          IndexedAccessType
            TypeReference
              Identifier: ' SignatureDeclaration'
            LiteralType
              StringLiteral
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          QuestionToken
          TypeReference
            Identifier: ' PropertyName'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' typeParameters'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' NodeArray'
              TypeReference
                Identifier: 'TypeParameterDeclaration'
            UndefinedKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parameters'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'ParameterDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' type'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' TypeNode'
            UndefinedKeyword
      TypeAliasDeclaration
        Identifier: ' SignatureDeclaration'
        UnionType
          TypeReference
            Identifier: ' CallSignatureDeclaration'
          TypeReference
            Identifier: ' ConstructSignatureDeclaration'
          TypeReference
            Identifier: ' MethodSignature'
          TypeReference
            Identifier: ' IndexSignatureDeclaration'
          TypeReference
            Identifier: ' FunctionTypeNode'
          TypeReference
            Identifier: ' ConstructorTypeNode'
          TypeReference
            Identifier: ' JSDocFunctionType'
          TypeReference
            Identifier: ' FunctionDeclaration'
          TypeReference
            Identifier: ' MethodDeclaration'
          TypeReference
            Identifier: ' ConstructorDeclaration'
          TypeReference
            Identifier: ' AccessorDeclaration'
          TypeReference
            Identifier: ' FunctionExpression'
          TypeReference
            Identifier: ' ArrowFunction'
      InterfaceDeclaration
        Identifier: ' CallSignatureDeclaration'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' SignatureDeclarationBase'
          ExpressionWithTypeArguments
            Identifier: ' TypeElement'
          ExpressionWithTypeArguments
            Identifier: ' LocalsContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'CallSignature'
      InterfaceDeclaration
        Identifier: ' ConstructSignatureDeclaration'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' SignatureDeclarationBase'
          ExpressionWithTypeArguments
            Identifier: ' TypeElement'
          ExpressionWithTypeArguments
            Identifier: ' LocalsContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ConstructSignature'
      TypeAliasDeclaration
        Identifier: ' BindingName'
        UnionType
          TypeReference
            Identifier: ' Identifier'
          TypeReference
            Identifier: ' BindingPattern'
      InterfaceDeclaration
        Identifier: ' VariableDeclaration'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' NamedDeclaration'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'VariableDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          UnionType
            TypeReference
              Identifier: ' VariableDeclarationList'
            TypeReference
              Identifier: ' CatchClause'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' BindingName'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' exclamationToken'
          QuestionToken
          TypeReference
            Identifier: ' ExclamationToken'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' type'
          QuestionToken
          TypeReference
            Identifier: ' TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' initializer'
          QuestionToken
          TypeReference
            Identifier: ' Expression'
      InterfaceDeclaration
        Identifier: ' VariableDeclarationList'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'VariableDeclarationList'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          UnionType
            TypeReference
              Identifier: ' VariableStatement'
            TypeReference
              Identifier: ' ForStatement'
            TypeReference
              Identifier: ' ForOfStatement'
            TypeReference
              Identifier: ' ForInStatement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' declarations'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'VariableDeclaration'
      InterfaceDeclaration
        Identifier: ' ParameterDeclaration'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' NamedDeclaration'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'Parameter'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' SignatureDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' modifiers'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'ModifierLike'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' dotDotDotToken'
          QuestionToken
          TypeReference
            Identifier: ' DotDotDotToken'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' BindingName'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' questionToken'
          QuestionToken
          TypeReference
            Identifier: ' QuestionToken'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' type'
          QuestionToken
          TypeReference
            Identifier: ' TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' initializer'
          QuestionToken
          TypeReference
            Identifier: ' Expression'
      InterfaceDeclaration
        Identifier: ' BindingElement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' NamedDeclaration'
          ExpressionWithTypeArguments
            Identifier: ' FlowContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'BindingElement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' BindingPattern'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' propertyName'
          QuestionToken
          TypeReference
            Identifier: ' PropertyName'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' dotDotDotToken'
          QuestionToken
          TypeReference
            Identifier: ' DotDotDotToken'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' BindingName'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' initializer'
          QuestionToken
          TypeReference
            Identifier: ' Expression'
      InterfaceDeclaration
        Identifier: ' PropertySignature'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TypeElement'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'PropertySignature'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          UnionType
            TypeReference
              Identifier: ' TypeLiteralNode'
            TypeReference
              Identifier: ' InterfaceDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' modifiers'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'Modifier'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' PropertyName'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' questionToken'
          QuestionToken
          TypeReference
            Identifier: ' QuestionToken'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' type'
          QuestionToken
          TypeReference
            Identifier: ' TypeNode'
      InterfaceDeclaration
        Identifier: ' PropertyDeclaration'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ClassElement'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'PropertyDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' ClassLikeDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' modifiers'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'ModifierLike'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' PropertyName'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' questionToken'
          QuestionToken
          TypeReference
            Identifier: ' QuestionToken'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' exclamationToken'
          QuestionToken
          TypeReference
            Identifier: ' ExclamationToken'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' type'
          QuestionToken
          TypeReference
            Identifier: ' TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' initializer'
          QuestionToken
          TypeReference
            Identifier: ' Expression'
      InterfaceDeclaration
        Identifier: ' AutoAccessorPropertyDeclaration'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' PropertyDeclaration'
        PropertySignature
          Identifier: '
        _autoAccessorBrand'
          AnyKeyword
      InterfaceDeclaration
        Identifier: ' ObjectLiteralElement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' NamedDeclaration'
        PropertySignature
          Identifier: '
        _objectLiteralBrand'
          AnyKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          QuestionToken
          TypeReference
            Identifier: ' PropertyName'
      TypeAliasDeclaration
        Identifier: ' ObjectLiteralElementLike'
        UnionType
          TypeReference
            Identifier: ' PropertyAssignment'
          TypeReference
            Identifier: ' ShorthandPropertyAssignment'
          TypeReference
            Identifier: ' SpreadAssignment'
          TypeReference
            Identifier: ' MethodDeclaration'
          TypeReference
            Identifier: ' AccessorDeclaration'
      InterfaceDeclaration
        Identifier: ' PropertyAssignment'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ObjectLiteralElement'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'PropertyAssignment'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' ObjectLiteralExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' PropertyName'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' initializer'
          TypeReference
            Identifier: ' Expression'
      InterfaceDeclaration
        Identifier: ' ShorthandPropertyAssignment'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ObjectLiteralElement'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ShorthandPropertyAssignment'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' ObjectLiteralExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' Identifier'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' equalsToken'
          QuestionToken
          TypeReference
            Identifier: ' EqualsToken'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' objectAssignmentInitializer'
          QuestionToken
          TypeReference
            Identifier: ' Expression'
      InterfaceDeclaration
        Identifier: ' SpreadAssignment'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ObjectLiteralElement'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'SpreadAssignment'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' ObjectLiteralExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' Expression'
      TypeAliasDeclaration
        Identifier: ' VariableLikeDeclaration'
        UnionType
          TypeReference
            Identifier: ' VariableDeclaration'
          TypeReference
            Identifier: ' ParameterDeclaration'
          TypeReference
            Identifier: ' BindingElement'
          TypeReference
            Identifier: ' PropertyDeclaration'
          TypeReference
            Identifier: ' PropertyAssignment'
          TypeReference
            Identifier: ' PropertySignature'
          TypeReference
            Identifier: ' JsxAttribute'
          TypeReference
            Identifier: ' ShorthandPropertyAssignment'
          TypeReference
            Identifier: ' EnumMember'
          TypeReference
            Identifier: ' JSDocPropertyTag'
          TypeReference
            Identifier: ' JSDocParameterTag'
      InterfaceDeclaration
        Identifier: ' ObjectBindingPattern'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ObjectBindingPattern'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          UnionType
            TypeReference
              Identifier: ' VariableDeclaration'
            TypeReference
              Identifier: ' ParameterDeclaration'
            TypeReference
              Identifier: ' BindingElement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' elements'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'BindingElement'
      InterfaceDeclaration
        Identifier: ' ArrayBindingPattern'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ArrayBindingPattern'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          UnionType
            TypeReference
              Identifier: ' VariableDeclaration'
            TypeReference
              Identifier: ' ParameterDeclaration'
            TypeReference
              Identifier: ' BindingElement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' elements'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'ArrayBindingElement'
      TypeAliasDeclaration
        Identifier: ' BindingPattern'
        UnionType
          TypeReference
            Identifier: ' ObjectBindingPattern'
          TypeReference
            Identifier: ' ArrayBindingPattern'
      TypeAliasDeclaration
        Identifier: ' ArrayBindingElement'
        UnionType
          TypeReference
            Identifier: ' BindingElement'
          TypeReference
            Identifier: ' OmittedExpression'
      InterfaceDeclaration
        Identifier: ' FunctionLikeDeclarationBase'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' SignatureDeclarationBase'
        PropertySignature
          Identifier: '
        _functionLikeDeclarationBrand'
          AnyKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' asteriskToken'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' AsteriskToken'
            UndefinedKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' questionToken'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' QuestionToken'
            UndefinedKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' exclamationToken'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' ExclamationToken'
            UndefinedKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' body'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' Block'
            TypeReference
              Identifier: ' Expression'
            UndefinedKeyword
      TypeAliasDeclaration
        Identifier: ' FunctionLikeDeclaration'
        UnionType
          TypeReference
            Identifier: ' FunctionDeclaration'
          TypeReference
            Identifier: ' MethodDeclaration'
          TypeReference
            Identifier: ' GetAccessorDeclaration'
          TypeReference
            Identifier: ' SetAccessorDeclaration'
          TypeReference
            Identifier: ' ConstructorDeclaration'
          TypeReference
            Identifier: ' FunctionExpression'
          TypeReference
            Identifier: ' ArrowFunction'
      TypeAliasDeclaration
        Identifier: ' FunctionLike'
        TypeReference
          Identifier: ' SignatureDeclaration'
      InterfaceDeclaration
        Identifier: ' FunctionDeclaration'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' FunctionLikeDeclarationBase'
          ExpressionWithTypeArguments
            Identifier: ' DeclarationStatement'
          ExpressionWithTypeArguments
            Identifier: ' LocalsContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'FunctionDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' modifiers'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'ModifierLike'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          QuestionToken
          TypeReference
            Identifier: ' Identifier'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' body'
          QuestionToken
          TypeReference
            Identifier: ' FunctionBody'
      InterfaceDeclaration
        Identifier: ' MethodSignature'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' SignatureDeclarationBase'
          ExpressionWithTypeArguments
            Identifier: ' TypeElement'
          ExpressionWithTypeArguments
            Identifier: ' LocalsContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'MethodSignature'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          UnionType
            TypeReference
              Identifier: ' TypeLiteralNode'
            TypeReference
              Identifier: ' InterfaceDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' modifiers'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'Modifier'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' PropertyName'
      InterfaceDeclaration
        Identifier: ' MethodDeclaration'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' FunctionLikeDeclarationBase'
          ExpressionWithTypeArguments
            Identifier: ' ClassElement'
          ExpressionWithTypeArguments
            Identifier: ' ObjectLiteralElement'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
          ExpressionWithTypeArguments
            Identifier: ' LocalsContainer'
          ExpressionWithTypeArguments
            Identifier: ' FlowContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'MethodDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          UnionType
            TypeReference
              Identifier: ' ClassLikeDeclaration'
            TypeReference
              Identifier: ' ObjectLiteralExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' modifiers'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' NodeArray'
              TypeReference
                Identifier: 'ModifierLike'
            UndefinedKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' PropertyName'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' body'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' FunctionBody'
            UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' ConstructorDeclaration'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' FunctionLikeDeclarationBase'
          ExpressionWithTypeArguments
            Identifier: ' ClassElement'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
          ExpressionWithTypeArguments
            Identifier: ' LocalsContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'Constructor'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' ClassLikeDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' modifiers'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' NodeArray'
              TypeReference
                Identifier: 'ModifierLike'
            UndefinedKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' body'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' FunctionBody'
            UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' SemicolonClassElement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ClassElement'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'SemicolonClassElement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' ClassLikeDeclaration'
      InterfaceDeclaration
        Identifier: ' GetAccessorDeclaration'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' FunctionLikeDeclarationBase'
          ExpressionWithTypeArguments
            Identifier: ' ClassElement'
          ExpressionWithTypeArguments
            Identifier: ' TypeElement'
          ExpressionWithTypeArguments
            Identifier: ' ObjectLiteralElement'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
          ExpressionWithTypeArguments
            Identifier: ' LocalsContainer'
          ExpressionWithTypeArguments
            Identifier: ' FlowContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'GetAccessor'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          UnionType
            TypeReference
              Identifier: ' ClassLikeDeclaration'
            TypeReference
              Identifier: ' ObjectLiteralExpression'
            TypeReference
              Identifier: ' TypeLiteralNode'
            TypeReference
              Identifier: ' InterfaceDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' modifiers'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'ModifierLike'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' PropertyName'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' body'
          QuestionToken
          TypeReference
            Identifier: ' FunctionBody'
      InterfaceDeclaration
        Identifier: ' SetAccessorDeclaration'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' FunctionLikeDeclarationBase'
          ExpressionWithTypeArguments
            Identifier: ' ClassElement'
          ExpressionWithTypeArguments
            Identifier: ' TypeElement'
          ExpressionWithTypeArguments
            Identifier: ' ObjectLiteralElement'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
          ExpressionWithTypeArguments
            Identifier: ' LocalsContainer'
          ExpressionWithTypeArguments
            Identifier: ' FlowContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'SetAccessor'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          UnionType
            TypeReference
              Identifier: ' ClassLikeDeclaration'
            TypeReference
              Identifier: ' ObjectLiteralExpression'
            TypeReference
              Identifier: ' TypeLiteralNode'
            TypeReference
              Identifier: ' InterfaceDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' modifiers'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'ModifierLike'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' PropertyName'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' body'
          QuestionToken
          TypeReference
            Identifier: ' FunctionBody'
      TypeAliasDeclaration
        Identifier: ' AccessorDeclaration'
        UnionType
          TypeReference
            Identifier: ' GetAccessorDeclaration'
          TypeReference
            Identifier: ' SetAccessorDeclaration'
      InterfaceDeclaration
        Identifier: ' IndexSignatureDeclaration'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' SignatureDeclarationBase'
          ExpressionWithTypeArguments
            Identifier: ' ClassElement'
          ExpressionWithTypeArguments
            Identifier: ' TypeElement'
          ExpressionWithTypeArguments
            Identifier: ' LocalsContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'IndexSignature'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' ObjectTypeDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' modifiers'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'ModifierLike'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' type'
          TypeReference
            Identifier: ' TypeNode'
      InterfaceDeclaration
        Identifier: ' ClassStaticBlockDeclaration'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ClassElement'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
          ExpressionWithTypeArguments
            Identifier: ' LocalsContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ClassStaticBlockDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          UnionType
            TypeReference
              Identifier: ' ClassDeclaration'
            TypeReference
              Identifier: ' ClassExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' body'
          TypeReference
            Identifier: ' Block'
      InterfaceDeclaration
        Identifier: ' TypeNode'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          Identifier: '
        _typeNodeBrand'
          AnyKeyword
      InterfaceDeclaration
        Identifier: ' KeywordTypeNode'
        TypeParameter
          Identifier: 'TKind'
          TypeReference
            Identifier: ' KeywordTypeSyntaxKind'
          TypeReference
            Identifier: ' KeywordTypeSyntaxKind'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' KeywordToken'
            TypeReference
              Identifier: 'TKind'
          ExpressionWithTypeArguments
            Identifier: ' TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            Identifier: ' TKind'
      InterfaceDeclaration
        Identifier: ' ImportTypeAssertionContainer'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ImportTypeAssertionContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' ImportTypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' assertClause'
          TypeReference
            Identifier: ' AssertClause'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' multiLine'
          QuestionToken
          BooleanKeyword
      InterfaceDeclaration
        Identifier: ' ImportTypeNode'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' NodeWithTypeArguments'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ImportType'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' isTypeOf'
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' argument'
          TypeReference
            Identifier: ' TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' assertions'
          QuestionToken
          TypeReference
            Identifier: ' ImportTypeAssertionContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' attributes'
          QuestionToken
          TypeReference
            Identifier: ' ImportAttributes'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' qualifier'
          QuestionToken
          TypeReference
            Identifier: ' EntityName'
      InterfaceDeclaration
        Identifier: ' ThisTypeNode'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ThisType'
      TypeAliasDeclaration
        Identifier: ' FunctionOrConstructorTypeNode'
        UnionType
          TypeReference
            Identifier: ' FunctionTypeNode'
          TypeReference
            Identifier: ' ConstructorTypeNode'
      InterfaceDeclaration
        Identifier: ' FunctionOrConstructorTypeNodeBase'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TypeNode'
          ExpressionWithTypeArguments
            Identifier: ' SignatureDeclarationBase'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          UnionType
            TypeReference
              QualifiedName
                Identifier: ' SyntaxKind'
                Identifier: 'FunctionType'
            TypeReference
              QualifiedName
                Identifier: ' SyntaxKind'
                Identifier: 'ConstructorType'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' type'
          TypeReference
            Identifier: ' TypeNode'
      InterfaceDeclaration
        Identifier: ' FunctionTypeNode'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' FunctionOrConstructorTypeNodeBase'
          ExpressionWithTypeArguments
            Identifier: ' LocalsContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'FunctionType'
      InterfaceDeclaration
        Identifier: ' ConstructorTypeNode'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' FunctionOrConstructorTypeNodeBase'
          ExpressionWithTypeArguments
            Identifier: ' LocalsContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ConstructorType'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' modifiers'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'Modifier'
      InterfaceDeclaration
        Identifier: ' NodeWithTypeArguments'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' typeArguments'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'TypeNode'
      TypeAliasDeclaration
        Identifier: ' TypeReferenceType'
        UnionType
          TypeReference
            Identifier: ' TypeReferenceNode'
          TypeReference
            Identifier: ' ExpressionWithTypeArguments'
      InterfaceDeclaration
        Identifier: ' TypeReferenceNode'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' NodeWithTypeArguments'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'TypeReference'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' typeName'
          TypeReference
            Identifier: ' EntityName'
      InterfaceDeclaration
        Identifier: ' TypePredicateNode'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'TypePredicate'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          UnionType
            TypeReference
              Identifier: ' SignatureDeclaration'
            TypeReference
              Identifier: ' JSDocTypeExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' assertsModifier'
          QuestionToken
          TypeReference
            Identifier: ' AssertsKeyword'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parameterName'
          UnionType
            TypeReference
              Identifier: ' Identifier'
            TypeReference
              Identifier: ' ThisTypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' type'
          QuestionToken
          TypeReference
            Identifier: ' TypeNode'
      InterfaceDeclaration
        Identifier: ' TypeQueryNode'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' NodeWithTypeArguments'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'TypeQuery'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' exprName'
          TypeReference
            Identifier: ' EntityName'
      InterfaceDeclaration
        Identifier: ' TypeLiteralNode'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TypeNode'
          ExpressionWithTypeArguments
            Identifier: ' Declaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'TypeLiteral'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' members'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'TypeElement'
      InterfaceDeclaration
        Identifier: ' ArrayTypeNode'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ArrayType'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' elementType'
          TypeReference
            Identifier: ' TypeNode'
      InterfaceDeclaration
        Identifier: ' TupleTypeNode'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'TupleType'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' elements'
          TypeReference
            Identifier: ' NodeArray'
            UnionType
              TypeReference
                Identifier: 'TypeNode'
              TypeReference
                Identifier: ' NamedTupleMember'
      InterfaceDeclaration
        Identifier: ' NamedTupleMember'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TypeNode'
          ExpressionWithTypeArguments
            Identifier: ' Declaration'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'NamedTupleMember'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' dotDotDotToken'
          QuestionToken
          TypeReference
            Identifier: ' Token'
            TypeReference
              QualifiedName
                Identifier: 'SyntaxKind'
                Identifier: 'DotDotDotToken'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' Identifier'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' questionToken'
          QuestionToken
          TypeReference
            Identifier: ' Token'
            TypeReference
              QualifiedName
                Identifier: 'SyntaxKind'
                Identifier: 'QuestionToken'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' type'
          TypeReference
            Identifier: ' TypeNode'
      InterfaceDeclaration
        Identifier: ' OptionalTypeNode'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'OptionalType'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' type'
          TypeReference
            Identifier: ' TypeNode'
      InterfaceDeclaration
        Identifier: ' RestTypeNode'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'RestType'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' type'
          TypeReference
            Identifier: ' TypeNode'
      TypeAliasDeclaration
        Identifier: ' UnionOrIntersectionTypeNode'
        UnionType
          TypeReference
            Identifier: ' UnionTypeNode'
          TypeReference
            Identifier: ' IntersectionTypeNode'
      InterfaceDeclaration
        Identifier: ' UnionTypeNode'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'UnionType'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' types'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'TypeNode'
      InterfaceDeclaration
        Identifier: ' IntersectionTypeNode'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'IntersectionType'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' types'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'TypeNode'
      InterfaceDeclaration
        Identifier: ' ConditionalTypeNode'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TypeNode'
          ExpressionWithTypeArguments
            Identifier: ' LocalsContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ConditionalType'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' checkType'
          TypeReference
            Identifier: ' TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' extendsType'
          TypeReference
            Identifier: ' TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' trueType'
          TypeReference
            Identifier: ' TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' falseType'
          TypeReference
            Identifier: ' TypeNode'
      InterfaceDeclaration
        Identifier: ' InferTypeNode'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'InferType'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' typeParameter'
          TypeReference
            Identifier: ' TypeParameterDeclaration'
      InterfaceDeclaration
        Identifier: ' ParenthesizedTypeNode'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ParenthesizedType'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' type'
          TypeReference
            Identifier: ' TypeNode'
      InterfaceDeclaration
        Identifier: ' TypeOperatorNode'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'TypeOperator'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' operator'
          UnionType
            TypeReference
              QualifiedName
                Identifier: ' SyntaxKind'
                Identifier: 'KeyOfKeyword'
            TypeReference
              QualifiedName
                Identifier: ' SyntaxKind'
                Identifier: 'UniqueKeyword'
            TypeReference
              QualifiedName
                Identifier: ' SyntaxKind'
                Identifier: 'ReadonlyKeyword'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' type'
          TypeReference
            Identifier: ' TypeNode'
      InterfaceDeclaration
        Identifier: ' IndexedAccessTypeNode'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'IndexedAccessType'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' objectType'
          TypeReference
            Identifier: ' TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' indexType'
          TypeReference
            Identifier: ' TypeNode'
      InterfaceDeclaration
        Identifier: ' MappedTypeNode'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TypeNode'
          ExpressionWithTypeArguments
            Identifier: ' Declaration'
          ExpressionWithTypeArguments
            Identifier: ' LocalsContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'MappedType'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' readonlyToken'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' ReadonlyKeyword'
            TypeReference
              Identifier: ' PlusToken'
            TypeReference
              Identifier: ' MinusToken'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' typeParameter'
          TypeReference
            Identifier: ' TypeParameterDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' nameType'
          QuestionToken
          TypeReference
            Identifier: ' TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' questionToken'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' QuestionToken'
            TypeReference
              Identifier: ' PlusToken'
            TypeReference
              Identifier: ' MinusToken'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' type'
          QuestionToken
          TypeReference
            Identifier: ' TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' members'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'TypeElement'
      InterfaceDeclaration
        Identifier: ' LiteralTypeNode'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'LiteralType'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' literal'
          UnionType
            TypeReference
              Identifier: ' NullLiteral'
            TypeReference
              Identifier: ' BooleanLiteral'
            TypeReference
              Identifier: ' LiteralExpression'
            TypeReference
              Identifier: ' PrefixUnaryExpression'
      InterfaceDeclaration
        Identifier: ' StringLiteral'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' LiteralExpression'
          ExpressionWithTypeArguments
            Identifier: ' Declaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'StringLiteral'
      TypeAliasDeclaration
        Identifier: ' StringLiteralLike'
        UnionType
          TypeReference
            Identifier: ' StringLiteral'
          TypeReference
            Identifier: ' NoSubstitutionTemplateLiteral'
      TypeAliasDeclaration
        Identifier: ' PropertyNameLiteral'
        UnionType
          TypeReference
            Identifier: ' Identifier'
          TypeReference
            Identifier: ' StringLiteralLike'
          TypeReference
            Identifier: ' NumericLiteral'
          TypeReference
            Identifier: ' JsxNamespacedName'
          TypeReference
            Identifier: ' BigIntLiteral'
      InterfaceDeclaration
        Identifier: ' TemplateLiteralTypeNode'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TypeNode'
        PropertySignature
          Identifier: '
        kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'TemplateLiteralType'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' head'
          TypeReference
            Identifier: ' TemplateHead'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' templateSpans'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'TemplateLiteralTypeSpan'
      InterfaceDeclaration
        Identifier: ' TemplateLiteralTypeSpan'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'TemplateLiteralTypeSpan'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' TemplateLiteralTypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' type'
          TypeReference
            Identifier: ' TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' literal'
          UnionType
            TypeReference
              Identifier: ' TemplateMiddle'
            TypeReference
              Identifier: ' TemplateTail'
      InterfaceDeclaration
        Identifier: ' Expression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          Identifier: '
        _expressionBrand'
          AnyKeyword
      InterfaceDeclaration
        Identifier: ' OmittedExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Expression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'OmittedExpression'
      InterfaceDeclaration
        Identifier: ' PartiallyEmittedExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' LeftHandSideExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'PartiallyEmittedExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' Expression'
      InterfaceDeclaration
        Identifier: ' UnaryExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Expression'
        PropertySignature
          Identifier: '
        _unaryExpressionBrand'
          AnyKeyword
      TypeAliasDeclaration
        Identifier: ' IncrementExpression'
        TypeReference
          Identifier: ' UpdateExpression'
      InterfaceDeclaration
        Identifier: ' UpdateExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' UnaryExpression'
        PropertySignature
          Identifier: '
        _updateExpressionBrand'
          AnyKeyword
      TypeAliasDeclaration
        Identifier: ' PrefixUnaryOperator'
        UnionType
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'PlusPlusToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'MinusMinusToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'PlusToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'MinusToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'TildeToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ExclamationToken'
      InterfaceDeclaration
        Identifier: ' PrefixUnaryExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' UpdateExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'PrefixUnaryExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' operator'
          TypeReference
            Identifier: ' PrefixUnaryOperator'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' operand'
          TypeReference
            Identifier: ' UnaryExpression'
      TypeAliasDeclaration
        Identifier: ' PostfixUnaryOperator'
        UnionType
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'PlusPlusToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'MinusMinusToken'
      InterfaceDeclaration
        Identifier: ' PostfixUnaryExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' UpdateExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'PostfixUnaryExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' operand'
          TypeReference
            Identifier: ' LeftHandSideExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' operator'
          TypeReference
            Identifier: ' PostfixUnaryOperator'
      InterfaceDeclaration
        Identifier: ' LeftHandSideExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' UpdateExpression'
        PropertySignature
          Identifier: '
        _leftHandSideExpressionBrand'
          AnyKeyword
      InterfaceDeclaration
        Identifier: ' MemberExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' LeftHandSideExpression'
        PropertySignature
          Identifier: '
        _memberExpressionBrand'
          AnyKeyword
      InterfaceDeclaration
        Identifier: ' PrimaryExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' MemberExpression'
        PropertySignature
          Identifier: '
        _primaryExpressionBrand'
          AnyKeyword
      InterfaceDeclaration
        Identifier: ' NullLiteral'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' PrimaryExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'NullKeyword'
      InterfaceDeclaration
        Identifier: ' TrueLiteral'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' PrimaryExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'TrueKeyword'
      InterfaceDeclaration
        Identifier: ' FalseLiteral'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' PrimaryExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'FalseKeyword'
      TypeAliasDeclaration
        Identifier: ' BooleanLiteral'
        UnionType
          TypeReference
            Identifier: ' TrueLiteral'
          TypeReference
            Identifier: ' FalseLiteral'
      InterfaceDeclaration
        Identifier: ' ThisExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' PrimaryExpression'
          ExpressionWithTypeArguments
            Identifier: ' FlowContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ThisKeyword'
      InterfaceDeclaration
        Identifier: ' SuperExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' PrimaryExpression'
          ExpressionWithTypeArguments
            Identifier: ' FlowContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'SuperKeyword'
      InterfaceDeclaration
        Identifier: ' ImportExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' PrimaryExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ImportKeyword'
      InterfaceDeclaration
        Identifier: ' DeleteExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' UnaryExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'DeleteExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' UnaryExpression'
      InterfaceDeclaration
        Identifier: ' TypeOfExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' UnaryExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'TypeOfExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' UnaryExpression'
      InterfaceDeclaration
        Identifier: ' VoidExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' UnaryExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'VoidExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' UnaryExpression'
      InterfaceDeclaration
        Identifier: ' AwaitExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' UnaryExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AwaitExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' UnaryExpression'
      InterfaceDeclaration
        Identifier: ' YieldExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Expression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'YieldExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' asteriskToken'
          QuestionToken
          TypeReference
            Identifier: ' AsteriskToken'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          QuestionToken
          TypeReference
            Identifier: ' Expression'
      InterfaceDeclaration
        Identifier: ' SyntheticExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Expression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'SyntheticExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' isSpread'
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' type'
          TypeReference
            Identifier: ' Type'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' tupleNameSource'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' ParameterDeclaration'
            TypeReference
              Identifier: ' NamedTupleMember'
      TypeAliasDeclaration
        Identifier: ' ExponentiationOperator'
        TypeReference
          QualifiedName
            Identifier: ' SyntaxKind'
            Identifier: 'AsteriskAsteriskToken'
      TypeAliasDeclaration
        Identifier: ' MultiplicativeOperator'
        UnionType
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AsteriskToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'SlashToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'PercentToken'
      TypeAliasDeclaration
        Identifier: ' MultiplicativeOperatorOrHigher'
        UnionType
          TypeReference
            Identifier: ' ExponentiationOperator'
          TypeReference
            Identifier: ' MultiplicativeOperator'
      TypeAliasDeclaration
        Identifier: ' AdditiveOperator'
        UnionType
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'PlusToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'MinusToken'
      TypeAliasDeclaration
        Identifier: ' AdditiveOperatorOrHigher'
        UnionType
          TypeReference
            Identifier: ' MultiplicativeOperatorOrHigher'
          TypeReference
            Identifier: ' AdditiveOperator'
      TypeAliasDeclaration
        Identifier: ' ShiftOperator'
        UnionType
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'LessThanLessThanToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'GreaterThanGreaterThanToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'GreaterThanGreaterThanGreaterThanToken'
      TypeAliasDeclaration
        Identifier: ' ShiftOperatorOrHigher'
        UnionType
          TypeReference
            Identifier: ' AdditiveOperatorOrHigher'
          TypeReference
            Identifier: ' ShiftOperator'
      TypeAliasDeclaration
        Identifier: ' RelationalOperator'
        UnionType
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'LessThanToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'LessThanEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'GreaterThanToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'GreaterThanEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'InstanceOfKeyword'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'InKeyword'
      TypeAliasDeclaration
        Identifier: ' RelationalOperatorOrHigher'
        UnionType
          TypeReference
            Identifier: ' ShiftOperatorOrHigher'
          TypeReference
            Identifier: ' RelationalOperator'
      TypeAliasDeclaration
        Identifier: ' EqualityOperator'
        UnionType
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'EqualsEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'EqualsEqualsEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ExclamationEqualsEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ExclamationEqualsToken'
      TypeAliasDeclaration
        Identifier: ' EqualityOperatorOrHigher'
        UnionType
          TypeReference
            Identifier: ' RelationalOperatorOrHigher'
          TypeReference
            Identifier: ' EqualityOperator'
      TypeAliasDeclaration
        Identifier: ' BitwiseOperator'
        UnionType
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AmpersandToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'BarToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'CaretToken'
      TypeAliasDeclaration
        Identifier: ' BitwiseOperatorOrHigher'
        UnionType
          TypeReference
            Identifier: ' EqualityOperatorOrHigher'
          TypeReference
            Identifier: ' BitwiseOperator'
      TypeAliasDeclaration
        Identifier: ' LogicalOperator'
        UnionType
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AmpersandAmpersandToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'BarBarToken'
      TypeAliasDeclaration
        Identifier: ' LogicalOperatorOrHigher'
        UnionType
          TypeReference
            Identifier: ' BitwiseOperatorOrHigher'
          TypeReference
            Identifier: ' LogicalOperator'
      TypeAliasDeclaration
        Identifier: ' CompoundAssignmentOperator'
        UnionType
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'PlusEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'MinusEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AsteriskAsteriskEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AsteriskEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'SlashEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'PercentEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AmpersandEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'BarEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'CaretEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'LessThanLessThanEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'GreaterThanGreaterThanGreaterThanEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'GreaterThanGreaterThanEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'BarBarEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AmpersandAmpersandEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'QuestionQuestionEqualsToken'
      TypeAliasDeclaration
        Identifier: ' AssignmentOperator'
        UnionType
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'EqualsToken'
          TypeReference
            Identifier: ' CompoundAssignmentOperator'
      TypeAliasDeclaration
        Identifier: ' AssignmentOperatorOrHigher'
        UnionType
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'QuestionQuestionToken'
          TypeReference
            Identifier: ' LogicalOperatorOrHigher'
          TypeReference
            Identifier: ' AssignmentOperator'
      TypeAliasDeclaration
        Identifier: ' BinaryOperator'
        UnionType
          TypeReference
            Identifier: ' AssignmentOperatorOrHigher'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'CommaToken'
      TypeAliasDeclaration
        Identifier: ' LogicalOrCoalescingAssignmentOperator'
        UnionType
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AmpersandAmpersandEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'BarBarEqualsToken'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'QuestionQuestionEqualsToken'
      TypeAliasDeclaration
        Identifier: ' BinaryOperatorToken'
        TypeReference
          Identifier: ' Token'
          TypeReference
            Identifier: 'BinaryOperator'
      InterfaceDeclaration
        Identifier: ' BinaryExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Expression'
          ExpressionWithTypeArguments
            Identifier: ' Declaration'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'BinaryExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' left'
          TypeReference
            Identifier: ' Expression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' operatorToken'
          TypeReference
            Identifier: ' BinaryOperatorToken'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' right'
          TypeReference
            Identifier: ' Expression'
      TypeAliasDeclaration
        Identifier: ' AssignmentOperatorToken'
        TypeReference
          Identifier: ' Token'
          TypeReference
            Identifier: 'AssignmentOperator'
      InterfaceDeclaration
        Identifier: ' AssignmentExpression'
        TypeParameter
          Identifier: 'TOperator'
          TypeReference
            Identifier: ' AssignmentOperatorToken'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' BinaryExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' left'
          TypeReference
            Identifier: ' LeftHandSideExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' operatorToken'
          TypeReference
            Identifier: ' TOperator'
      InterfaceDeclaration
        Identifier: ' ObjectDestructuringAssignment'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' AssignmentExpression'
            TypeReference
              Identifier: 'EqualsToken'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' left'
          TypeReference
            Identifier: ' ObjectLiteralExpression'
      InterfaceDeclaration
        Identifier: ' ArrayDestructuringAssignment'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' AssignmentExpression'
            TypeReference
              Identifier: 'EqualsToken'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' left'
          TypeReference
            Identifier: ' ArrayLiteralExpression'
      TypeAliasDeclaration
        Identifier: ' DestructuringAssignment'
        UnionType
          TypeReference
            Identifier: ' ObjectDestructuringAssignment'
          TypeReference
            Identifier: ' ArrayDestructuringAssignment'
      TypeAliasDeclaration
        Identifier: ' BindingOrAssignmentElement'
        UnionType
          TypeReference
            Identifier: ' VariableDeclaration'
          TypeReference
            Identifier: ' ParameterDeclaration'
          TypeReference
            Identifier: ' ObjectBindingOrAssignmentElement'
          TypeReference
            Identifier: ' ArrayBindingOrAssignmentElement'
      TypeAliasDeclaration
        Identifier: ' ObjectBindingOrAssignmentElement'
        UnionType
          TypeReference
            Identifier: ' BindingElement'
          TypeReference
            Identifier: ' PropertyAssignment'
          TypeReference
            Identifier: ' ShorthandPropertyAssignment'
          TypeReference
            Identifier: ' SpreadAssignment'
      TypeAliasDeclaration
        Identifier: ' ArrayBindingOrAssignmentElement'
        UnionType
          TypeReference
            Identifier: ' BindingElement'
          TypeReference
            Identifier: ' OmittedExpression'
          TypeReference
            Identifier: ' SpreadElement'
          TypeReference
            Identifier: ' ArrayLiteralExpression'
          TypeReference
            Identifier: ' ObjectLiteralExpression'
          TypeReference
            Identifier: ' AssignmentExpression'
            TypeReference
              Identifier: 'EqualsToken'
          TypeReference
            Identifier: ' Identifier'
          TypeReference
            Identifier: ' PropertyAccessExpression'
          TypeReference
            Identifier: ' ElementAccessExpression'
      TypeAliasDeclaration
        Identifier: ' BindingOrAssignmentElementRestIndicator'
        UnionType
          TypeReference
            Identifier: ' DotDotDotToken'
          TypeReference
            Identifier: ' SpreadElement'
          TypeReference
            Identifier: ' SpreadAssignment'
      TypeAliasDeclaration
        Identifier: ' BindingOrAssignmentElementTarget'
        UnionType
          TypeReference
            Identifier: ' BindingOrAssignmentPattern'
          TypeReference
            Identifier: ' Identifier'
          TypeReference
            Identifier: ' PropertyAccessExpression'
          TypeReference
            Identifier: ' ElementAccessExpression'
          TypeReference
            Identifier: ' OmittedExpression'
      TypeAliasDeclaration
        Identifier: ' ObjectBindingOrAssignmentPattern'
        UnionType
          TypeReference
            Identifier: ' ObjectBindingPattern'
          TypeReference
            Identifier: ' ObjectLiteralExpression'
      TypeAliasDeclaration
        Identifier: ' ArrayBindingOrAssignmentPattern'
        UnionType
          TypeReference
            Identifier: ' ArrayBindingPattern'
          TypeReference
            Identifier: ' ArrayLiteralExpression'
      TypeAliasDeclaration
        Identifier: ' AssignmentPattern'
        UnionType
          TypeReference
            Identifier: ' ObjectLiteralExpression'
          TypeReference
            Identifier: ' ArrayLiteralExpression'
      TypeAliasDeclaration
        Identifier: ' BindingOrAssignmentPattern'
        UnionType
          TypeReference
            Identifier: ' ObjectBindingOrAssignmentPattern'
          TypeReference
            Identifier: ' ArrayBindingOrAssignmentPattern'
      InterfaceDeclaration
        Identifier: ' ConditionalExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Expression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ConditionalExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' condition'
          TypeReference
            Identifier: ' Expression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' questionToken'
          TypeReference
            Identifier: ' QuestionToken'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' whenTrue'
          TypeReference
            Identifier: ' Expression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' colonToken'
          TypeReference
            Identifier: ' ColonToken'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' whenFalse'
          TypeReference
            Identifier: ' Expression'
      TypeAliasDeclaration
        Identifier: ' FunctionBody'
        TypeReference
          Identifier: ' Block'
      TypeAliasDeclaration
        Identifier: ' ConciseBody'
        UnionType
          TypeReference
            Identifier: ' FunctionBody'
          TypeReference
            Identifier: ' Expression'
      InterfaceDeclaration
        Identifier: ' FunctionExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' PrimaryExpression'
          ExpressionWithTypeArguments
            Identifier: ' FunctionLikeDeclarationBase'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
          ExpressionWithTypeArguments
            Identifier: ' LocalsContainer'
          ExpressionWithTypeArguments
            Identifier: ' FlowContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'FunctionExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' modifiers'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'Modifier'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          QuestionToken
          TypeReference
            Identifier: ' Identifier'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' body'
          TypeReference
            Identifier: ' FunctionBody'
      InterfaceDeclaration
        Identifier: ' ArrowFunction'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Expression'
          ExpressionWithTypeArguments
            Identifier: ' FunctionLikeDeclarationBase'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
          ExpressionWithTypeArguments
            Identifier: ' LocalsContainer'
          ExpressionWithTypeArguments
            Identifier: ' FlowContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ArrowFunction'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' modifiers'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'Modifier'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' equalsGreaterThanToken'
          TypeReference
            Identifier: ' EqualsGreaterThanToken'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' body'
          TypeReference
            Identifier: ' ConciseBody'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          NeverKeyword
      InterfaceDeclaration
        Identifier: ' LiteralLikeNode'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          Identifier: '
        text'
          StringKeyword
        PropertySignature
          Identifier: '
        isUnterminated'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        hasExtendedUnicodeEscape'
          QuestionToken
          BooleanKeyword
      InterfaceDeclaration
        Identifier: ' TemplateLiteralLikeNode'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' LiteralLikeNode'
        PropertySignature
          Identifier: '
        rawText'
          QuestionToken
          StringKeyword
      InterfaceDeclaration
        Identifier: ' LiteralExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' LiteralLikeNode'
          ExpressionWithTypeArguments
            Identifier: ' PrimaryExpression'
        PropertySignature
          Identifier: '
        _literalExpressionBrand'
          AnyKeyword
      InterfaceDeclaration
        Identifier: ' RegularExpressionLiteral'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' LiteralExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'RegularExpressionLiteral'
      InterfaceDeclaration
        Identifier: ' NoSubstitutionTemplateLiteral'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' LiteralExpression'
          ExpressionWithTypeArguments
            Identifier: ' TemplateLiteralLikeNode'
          ExpressionWithTypeArguments
            Identifier: ' Declaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'NoSubstitutionTemplateLiteral'
      EnumDeclaration
        Identifier: ' TokenFlags'
        EnumMember
          Identifier: '
        None'
          NumericLiteral
        EnumMember
          Identifier: '
        Scientific'
          NumericLiteral
        EnumMember
          Identifier: '
        Octal'
          NumericLiteral
        EnumMember
          Identifier: '
        HexSpecifier'
          NumericLiteral
        EnumMember
          Identifier: '
        BinarySpecifier'
          NumericLiteral
        EnumMember
          Identifier: '
        OctalSpecifier'
          NumericLiteral
      InterfaceDeclaration
        Identifier: ' NumericLiteral'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' LiteralExpression'
          ExpressionWithTypeArguments
            Identifier: ' Declaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'NumericLiteral'
      InterfaceDeclaration
        Identifier: ' BigIntLiteral'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' LiteralExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'BigIntLiteral'
      TypeAliasDeclaration
        Identifier: ' LiteralToken'
        UnionType
          TypeReference
            Identifier: ' NumericLiteral'
          TypeReference
            Identifier: ' BigIntLiteral'
          TypeReference
            Identifier: ' StringLiteral'
          TypeReference
            Identifier: ' JsxText'
          TypeReference
            Identifier: ' RegularExpressionLiteral'
          TypeReference
            Identifier: ' NoSubstitutionTemplateLiteral'
      InterfaceDeclaration
        Identifier: ' TemplateHead'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TemplateLiteralLikeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'TemplateHead'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          UnionType
            TypeReference
              Identifier: ' TemplateExpression'
            TypeReference
              Identifier: ' TemplateLiteralTypeNode'
      InterfaceDeclaration
        Identifier: ' TemplateMiddle'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TemplateLiteralLikeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'TemplateMiddle'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          UnionType
            TypeReference
              Identifier: ' TemplateSpan'
            TypeReference
              Identifier: ' TemplateLiteralTypeSpan'
      InterfaceDeclaration
        Identifier: ' TemplateTail'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TemplateLiteralLikeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'TemplateTail'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          UnionType
            TypeReference
              Identifier: ' TemplateSpan'
            TypeReference
              Identifier: ' TemplateLiteralTypeSpan'
      TypeAliasDeclaration
        Identifier: ' PseudoLiteralToken'
        UnionType
          TypeReference
            Identifier: ' TemplateHead'
          TypeReference
            Identifier: ' TemplateMiddle'
          TypeReference
            Identifier: ' TemplateTail'
      TypeAliasDeclaration
        Identifier: ' TemplateLiteralToken'
        UnionType
          TypeReference
            Identifier: ' NoSubstitutionTemplateLiteral'
          TypeReference
            Identifier: ' PseudoLiteralToken'
      InterfaceDeclaration
        Identifier: ' TemplateExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' PrimaryExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'TemplateExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' head'
          TypeReference
            Identifier: ' TemplateHead'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' templateSpans'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'TemplateSpan'
      TypeAliasDeclaration
        Identifier: ' TemplateLiteral'
        UnionType
          TypeReference
            Identifier: ' TemplateExpression'
          TypeReference
            Identifier: ' NoSubstitutionTemplateLiteral'
      InterfaceDeclaration
        Identifier: ' TemplateSpan'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'TemplateSpan'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' TemplateExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' Expression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' literal'
          UnionType
            TypeReference
              Identifier: ' TemplateMiddle'
            TypeReference
              Identifier: ' TemplateTail'
      InterfaceDeclaration
        Identifier: ' ParenthesizedExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' PrimaryExpression'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ParenthesizedExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' Expression'
      InterfaceDeclaration
        Identifier: ' ArrayLiteralExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' PrimaryExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ArrayLiteralExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' elements'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'Expression'
      InterfaceDeclaration
        Identifier: ' SpreadElement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Expression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'SpreadElement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          UnionType
            TypeReference
              Identifier: ' ArrayLiteralExpression'
            TypeReference
              Identifier: ' CallExpression'
            TypeReference
              Identifier: ' NewExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' Expression'
      InterfaceDeclaration
        Identifier: ' ObjectLiteralExpressionBase'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' ObjectLiteralElement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' PrimaryExpression'
          ExpressionWithTypeArguments
            Identifier: ' Declaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' properties'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'T'
      InterfaceDeclaration
        Identifier: ' ObjectLiteralExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ObjectLiteralExpressionBase'
            TypeReference
              Identifier: 'ObjectLiteralElementLike'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ObjectLiteralExpression'
      TypeAliasDeclaration
        Identifier: ' EntityNameExpression'
        UnionType
          TypeReference
            Identifier: ' Identifier'
          TypeReference
            Identifier: ' PropertyAccessEntityNameExpression'
      TypeAliasDeclaration
        Identifier: ' EntityNameOrEntityNameExpression'
        UnionType
          TypeReference
            Identifier: ' EntityName'
          TypeReference
            Identifier: ' EntityNameExpression'
      TypeAliasDeclaration
        Identifier: ' AccessExpression'
        UnionType
          TypeReference
            Identifier: ' PropertyAccessExpression'
          TypeReference
            Identifier: ' ElementAccessExpression'
      InterfaceDeclaration
        Identifier: ' PropertyAccessExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' MemberExpression'
          ExpressionWithTypeArguments
            Identifier: ' NamedDeclaration'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
          ExpressionWithTypeArguments
            Identifier: ' FlowContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'PropertyAccessExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' LeftHandSideExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' questionDotToken'
          QuestionToken
          TypeReference
            Identifier: ' QuestionDotToken'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' MemberName'
      InterfaceDeclaration
        Identifier: ' PropertyAccessChain'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' PropertyAccessExpression'
        PropertySignature
          Identifier: '
        _optionalChainBrand'
          AnyKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' MemberName'
      InterfaceDeclaration
        Identifier: ' SuperPropertyAccessExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' PropertyAccessExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' SuperExpression'
      InterfaceDeclaration
        Identifier: ' PropertyAccessEntityNameExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' PropertyAccessExpression'
        PropertySignature
          Identifier: '
        _propertyAccessExpressionLikeQualifiedNameBrand'
          QuestionToken
          AnyKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' EntityNameExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' Identifier'
      InterfaceDeclaration
        Identifier: ' ElementAccessExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' MemberExpression'
          ExpressionWithTypeArguments
            Identifier: ' Declaration'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
          ExpressionWithTypeArguments
            Identifier: ' FlowContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ElementAccessExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' LeftHandSideExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' questionDotToken'
          QuestionToken
          TypeReference
            Identifier: ' QuestionDotToken'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' argumentExpression'
          TypeReference
            Identifier: ' Expression'
      InterfaceDeclaration
        Identifier: ' ElementAccessChain'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ElementAccessExpression'
        PropertySignature
          Identifier: '
        _optionalChainBrand'
          AnyKeyword
      InterfaceDeclaration
        Identifier: ' SuperElementAccessExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ElementAccessExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' SuperExpression'
      TypeAliasDeclaration
        Identifier: ' SuperProperty'
        UnionType
          TypeReference
            Identifier: ' SuperPropertyAccessExpression'
          TypeReference
            Identifier: ' SuperElementAccessExpression'
      InterfaceDeclaration
        Identifier: ' CallExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' LeftHandSideExpression'
          ExpressionWithTypeArguments
            Identifier: ' Declaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'CallExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' LeftHandSideExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' questionDotToken'
          QuestionToken
          TypeReference
            Identifier: ' QuestionDotToken'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' typeArguments'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' arguments'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'Expression'
      InterfaceDeclaration
        Identifier: ' CallChain'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' CallExpression'
        PropertySignature
          Identifier: '
        _optionalChainBrand'
          AnyKeyword
      TypeAliasDeclaration
        Identifier: ' OptionalChain'
        UnionType
          TypeReference
            Identifier: ' PropertyAccessChain'
          TypeReference
            Identifier: ' ElementAccessChain'
          TypeReference
            Identifier: ' CallChain'
          TypeReference
            Identifier: ' NonNullChain'
      InterfaceDeclaration
        Identifier: ' SuperCall'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' CallExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' SuperExpression'
      InterfaceDeclaration
        Identifier: ' ImportCall'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' CallExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' ImportExpression'
      InterfaceDeclaration
        Identifier: ' ExpressionWithTypeArguments'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' MemberExpression'
          ExpressionWithTypeArguments
            Identifier: ' NodeWithTypeArguments'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ExpressionWithTypeArguments'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' LeftHandSideExpression'
      InterfaceDeclaration
        Identifier: ' NewExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' PrimaryExpression'
          ExpressionWithTypeArguments
            Identifier: ' Declaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'NewExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' LeftHandSideExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' typeArguments'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' arguments'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'Expression'
      InterfaceDeclaration
        Identifier: ' TaggedTemplateExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' MemberExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'TaggedTemplateExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' tag'
          TypeReference
            Identifier: ' LeftHandSideExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' typeArguments'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' template'
          TypeReference
            Identifier: ' TemplateLiteral'
      InterfaceDeclaration
        Identifier: ' InstanceofExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' BinaryExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' operatorToken'
          TypeReference
            Identifier: ' Token'
            TypeReference
              QualifiedName
                Identifier: 'SyntaxKind'
                Identifier: 'InstanceOfKeyword'
      TypeAliasDeclaration
        Identifier: ' CallLikeExpression'
        UnionType
          TypeReference
            Identifier: ' CallExpression'
          TypeReference
            Identifier: ' NewExpression'
          TypeReference
            Identifier: ' TaggedTemplateExpression'
          TypeReference
            Identifier: ' Decorator'
          TypeReference
            Identifier: ' JsxOpeningLikeElement'
          TypeReference
            Identifier: ' InstanceofExpression'
      InterfaceDeclaration
        Identifier: ' AsExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Expression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'AsExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' Expression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' type'
          TypeReference
            Identifier: ' TypeNode'
      InterfaceDeclaration
        Identifier: ' TypeAssertion'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' UnaryExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'TypeAssertionExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' type'
          TypeReference
            Identifier: ' TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' UnaryExpression'
      InterfaceDeclaration
        Identifier: ' SatisfiesExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Expression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'SatisfiesExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' Expression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' type'
          TypeReference
            Identifier: ' TypeNode'
      TypeAliasDeclaration
        Identifier: ' AssertionExpression'
        UnionType
          TypeReference
            Identifier: ' TypeAssertion'
          TypeReference
            Identifier: ' AsExpression'
      InterfaceDeclaration
        Identifier: ' NonNullExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' LeftHandSideExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'NonNullExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' Expression'
      InterfaceDeclaration
        Identifier: ' NonNullChain'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' NonNullExpression'
        PropertySignature
          Identifier: '
        _optionalChainBrand'
          AnyKeyword
      InterfaceDeclaration
        Identifier: ' MetaProperty'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' PrimaryExpression'
          ExpressionWithTypeArguments
            Identifier: ' FlowContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'MetaProperty'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' keywordToken'
          UnionType
            TypeReference
              QualifiedName
                Identifier: ' SyntaxKind'
                Identifier: 'NewKeyword'
            TypeReference
              QualifiedName
                Identifier: ' SyntaxKind'
                Identifier: 'ImportKeyword'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' Identifier'
      InterfaceDeclaration
        Identifier: ' JsxElement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' PrimaryExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JsxElement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' openingElement'
          TypeReference
            Identifier: ' JsxOpeningElement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' children'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'JsxChild'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' closingElement'
          TypeReference
            Identifier: ' JsxClosingElement'
      TypeAliasDeclaration
        Identifier: ' JsxOpeningLikeElement'
        UnionType
          TypeReference
            Identifier: ' JsxSelfClosingElement'
          TypeReference
            Identifier: ' JsxOpeningElement'
      TypeAliasDeclaration
        Identifier: ' JsxAttributeLike'
        UnionType
          TypeReference
            Identifier: ' JsxAttribute'
          TypeReference
            Identifier: ' JsxSpreadAttribute'
      TypeAliasDeclaration
        Identifier: ' JsxAttributeName'
        UnionType
          TypeReference
            Identifier: ' Identifier'
          TypeReference
            Identifier: ' JsxNamespacedName'
      TypeAliasDeclaration
        Identifier: ' JsxTagNameExpression'
        UnionType
          TypeReference
            Identifier: ' Identifier'
          TypeReference
            Identifier: ' ThisExpression'
          TypeReference
            Identifier: ' JsxTagNamePropertyAccess'
          TypeReference
            Identifier: ' JsxNamespacedName'
      InterfaceDeclaration
        Identifier: ' JsxTagNamePropertyAccess'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' PropertyAccessExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          UnionType
            TypeReference
              Identifier: ' Identifier'
            TypeReference
              Identifier: ' ThisExpression'
            TypeReference
              Identifier: ' JsxTagNamePropertyAccess'
      InterfaceDeclaration
        Identifier: ' JsxAttributes'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' PrimaryExpression'
          ExpressionWithTypeArguments
            Identifier: ' Declaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' properties'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'JsxAttributeLike'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JsxAttributes'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' JsxOpeningLikeElement'
      InterfaceDeclaration
        Identifier: ' JsxNamespacedName'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JsxNamespacedName'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' Identifier'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' namespace'
          TypeReference
            Identifier: ' Identifier'
      InterfaceDeclaration
        Identifier: ' JsxOpeningElement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Expression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JsxOpeningElement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' JsxElement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' tagName'
          TypeReference
            Identifier: ' JsxTagNameExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' typeArguments'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' attributes'
          TypeReference
            Identifier: ' JsxAttributes'
      InterfaceDeclaration
        Identifier: ' JsxSelfClosingElement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' PrimaryExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JsxSelfClosingElement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' tagName'
          TypeReference
            Identifier: ' JsxTagNameExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' typeArguments'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' attributes'
          TypeReference
            Identifier: ' JsxAttributes'
      InterfaceDeclaration
        Identifier: ' JsxFragment'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' PrimaryExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JsxFragment'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' openingFragment'
          TypeReference
            Identifier: ' JsxOpeningFragment'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' children'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'JsxChild'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' closingFragment'
          TypeReference
            Identifier: ' JsxClosingFragment'
      InterfaceDeclaration
        Identifier: ' JsxOpeningFragment'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Expression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JsxOpeningFragment'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' JsxFragment'
      InterfaceDeclaration
        Identifier: ' JsxClosingFragment'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Expression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JsxClosingFragment'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' JsxFragment'
      InterfaceDeclaration
        Identifier: ' JsxAttribute'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Declaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JsxAttribute'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' JsxAttributes'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' JsxAttributeName'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' initializer'
          QuestionToken
          TypeReference
            Identifier: ' JsxAttributeValue'
      TypeAliasDeclaration
        Identifier: ' JsxAttributeValue'
        UnionType
          TypeReference
            Identifier: ' StringLiteral'
          TypeReference
            Identifier: ' JsxExpression'
          TypeReference
            Identifier: ' JsxElement'
          TypeReference
            Identifier: ' JsxSelfClosingElement'
          TypeReference
            Identifier: ' JsxFragment'
      InterfaceDeclaration
        Identifier: ' JsxSpreadAttribute'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ObjectLiteralElement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JsxSpreadAttribute'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' JsxAttributes'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' Expression'
      InterfaceDeclaration
        Identifier: ' JsxClosingElement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JsxClosingElement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' JsxElement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' tagName'
          TypeReference
            Identifier: ' JsxTagNameExpression'
      InterfaceDeclaration
        Identifier: ' JsxExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Expression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JsxExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          UnionType
            TypeReference
              Identifier: ' JsxElement'
            TypeReference
              Identifier: ' JsxFragment'
            TypeReference
              Identifier: ' JsxAttributeLike'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' dotDotDotToken'
          QuestionToken
          TypeReference
            Identifier: ' Token'
            TypeReference
              QualifiedName
                Identifier: 'SyntaxKind'
                Identifier: 'DotDotDotToken'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          QuestionToken
          TypeReference
            Identifier: ' Expression'
      InterfaceDeclaration
        Identifier: ' JsxText'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' LiteralLikeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JsxText'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          UnionType
            TypeReference
              Identifier: ' JsxElement'
            TypeReference
              Identifier: ' JsxFragment'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' containsOnlyTriviaWhiteSpaces'
          BooleanKeyword
      TypeAliasDeclaration
        Identifier: ' JsxChild'
        UnionType
          TypeReference
            Identifier: ' JsxText'
          TypeReference
            Identifier: ' JsxExpression'
          TypeReference
            Identifier: ' JsxElement'
          TypeReference
            Identifier: ' JsxSelfClosingElement'
          TypeReference
            Identifier: ' JsxFragment'
      InterfaceDeclaration
        Identifier: ' Statement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
        PropertySignature
          Identifier: '
        _statementBrand'
          AnyKeyword
      InterfaceDeclaration
        Identifier: ' NotEmittedStatement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Statement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'NotEmittedStatement'
      InterfaceDeclaration
        Identifier: ' NotEmittedTypeElement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TypeElement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'NotEmittedTypeElement'
      InterfaceDeclaration
        Identifier: ' CommaListExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Expression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'CommaListExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' elements'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'Expression'
      InterfaceDeclaration
        Identifier: ' EmptyStatement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Statement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'EmptyStatement'
      InterfaceDeclaration
        Identifier: ' DebuggerStatement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Statement'
          ExpressionWithTypeArguments
            Identifier: ' FlowContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'DebuggerStatement'
      InterfaceDeclaration
        Identifier: ' MissingDeclaration'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' DeclarationStatement'
          ExpressionWithTypeArguments
            Identifier: ' PrimaryExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'MissingDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          QuestionToken
          TypeReference
            Identifier: ' Identifier'
      TypeAliasDeclaration
        Identifier: ' BlockLike'
        UnionType
          TypeReference
            Identifier: ' SourceFile'
          TypeReference
            Identifier: ' Block'
          TypeReference
            Identifier: ' ModuleBlock'
          TypeReference
            Identifier: ' CaseOrDefaultClause'
      InterfaceDeclaration
        Identifier: ' Block'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Statement'
          ExpressionWithTypeArguments
            Identifier: ' LocalsContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'Block'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' statements'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'Statement'
      InterfaceDeclaration
        Identifier: ' VariableStatement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Statement'
          ExpressionWithTypeArguments
            Identifier: ' FlowContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'VariableStatement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' modifiers'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'ModifierLike'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' declarationList'
          TypeReference
            Identifier: ' VariableDeclarationList'
      InterfaceDeclaration
        Identifier: ' ExpressionStatement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Statement'
          ExpressionWithTypeArguments
            Identifier: ' FlowContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ExpressionStatement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' Expression'
      InterfaceDeclaration
        Identifier: ' IfStatement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Statement'
          ExpressionWithTypeArguments
            Identifier: ' FlowContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'IfStatement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' Expression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' thenStatement'
          TypeReference
            Identifier: ' Statement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' elseStatement'
          QuestionToken
          TypeReference
            Identifier: ' Statement'
      InterfaceDeclaration
        Identifier: ' IterationStatement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Statement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' statement'
          TypeReference
            Identifier: ' Statement'
      InterfaceDeclaration
        Identifier: ' DoStatement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' IterationStatement'
          ExpressionWithTypeArguments
            Identifier: ' FlowContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'DoStatement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' Expression'
      InterfaceDeclaration
        Identifier: ' WhileStatement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' IterationStatement'
          ExpressionWithTypeArguments
            Identifier: ' FlowContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'WhileStatement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' Expression'
      TypeAliasDeclaration
        Identifier: ' ForInitializer'
        UnionType
          TypeReference
            Identifier: ' VariableDeclarationList'
          TypeReference
            Identifier: ' Expression'
      InterfaceDeclaration
        Identifier: ' ForStatement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' IterationStatement'
          ExpressionWithTypeArguments
            Identifier: ' LocalsContainer'
          ExpressionWithTypeArguments
            Identifier: ' FlowContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ForStatement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' initializer'
          QuestionToken
          TypeReference
            Identifier: ' ForInitializer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' condition'
          QuestionToken
          TypeReference
            Identifier: ' Expression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' incrementor'
          QuestionToken
          TypeReference
            Identifier: ' Expression'
      TypeAliasDeclaration
        Identifier: ' ForInOrOfStatement'
        UnionType
          TypeReference
            Identifier: ' ForInStatement'
          TypeReference
            Identifier: ' ForOfStatement'
      InterfaceDeclaration
        Identifier: ' ForInStatement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' IterationStatement'
          ExpressionWithTypeArguments
            Identifier: ' LocalsContainer'
          ExpressionWithTypeArguments
            Identifier: ' FlowContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ForInStatement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' initializer'
          TypeReference
            Identifier: ' ForInitializer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' Expression'
      InterfaceDeclaration
        Identifier: ' ForOfStatement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' IterationStatement'
          ExpressionWithTypeArguments
            Identifier: ' LocalsContainer'
          ExpressionWithTypeArguments
            Identifier: ' FlowContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ForOfStatement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' awaitModifier'
          QuestionToken
          TypeReference
            Identifier: ' AwaitKeyword'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' initializer'
          TypeReference
            Identifier: ' ForInitializer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' Expression'
      InterfaceDeclaration
        Identifier: ' BreakStatement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Statement'
          ExpressionWithTypeArguments
            Identifier: ' FlowContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'BreakStatement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' label'
          QuestionToken
          TypeReference
            Identifier: ' Identifier'
      InterfaceDeclaration
        Identifier: ' ContinueStatement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Statement'
          ExpressionWithTypeArguments
            Identifier: ' FlowContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ContinueStatement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' label'
          QuestionToken
          TypeReference
            Identifier: ' Identifier'
      TypeAliasDeclaration
        Identifier: ' BreakOrContinueStatement'
        UnionType
          TypeReference
            Identifier: ' BreakStatement'
          TypeReference
            Identifier: ' ContinueStatement'
      InterfaceDeclaration
        Identifier: ' ReturnStatement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Statement'
          ExpressionWithTypeArguments
            Identifier: ' FlowContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ReturnStatement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          QuestionToken
          TypeReference
            Identifier: ' Expression'
      InterfaceDeclaration
        Identifier: ' WithStatement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Statement'
          ExpressionWithTypeArguments
            Identifier: ' FlowContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'WithStatement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' Expression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' statement'
          TypeReference
            Identifier: ' Statement'
      InterfaceDeclaration
        Identifier: ' SwitchStatement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Statement'
          ExpressionWithTypeArguments
            Identifier: ' FlowContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'SwitchStatement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' Expression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' caseBlock'
          TypeReference
            Identifier: ' CaseBlock'
        PropertySignature
          Identifier: '
        possiblyExhaustive'
          QuestionToken
          BooleanKeyword
      InterfaceDeclaration
        Identifier: ' CaseBlock'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
          ExpressionWithTypeArguments
            Identifier: ' LocalsContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'CaseBlock'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' SwitchStatement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' clauses'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'CaseOrDefaultClause'
      InterfaceDeclaration
        Identifier: ' CaseClause'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'CaseClause'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' CaseBlock'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' Expression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' statements'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'Statement'
      InterfaceDeclaration
        Identifier: ' DefaultClause'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'DefaultClause'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' CaseBlock'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' statements'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'Statement'
      TypeAliasDeclaration
        Identifier: ' CaseOrDefaultClause'
        UnionType
          TypeReference
            Identifier: ' CaseClause'
          TypeReference
            Identifier: ' DefaultClause'
      InterfaceDeclaration
        Identifier: ' LabeledStatement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Statement'
          ExpressionWithTypeArguments
            Identifier: ' FlowContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'LabeledStatement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' label'
          TypeReference
            Identifier: ' Identifier'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' statement'
          TypeReference
            Identifier: ' Statement'
      InterfaceDeclaration
        Identifier: ' ThrowStatement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Statement'
          ExpressionWithTypeArguments
            Identifier: ' FlowContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ThrowStatement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' Expression'
      InterfaceDeclaration
        Identifier: ' TryStatement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Statement'
          ExpressionWithTypeArguments
            Identifier: ' FlowContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'TryStatement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' tryBlock'
          TypeReference
            Identifier: ' Block'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' catchClause'
          QuestionToken
          TypeReference
            Identifier: ' CatchClause'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' finallyBlock'
          QuestionToken
          TypeReference
            Identifier: ' Block'
      InterfaceDeclaration
        Identifier: ' CatchClause'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
          ExpressionWithTypeArguments
            Identifier: ' LocalsContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'CatchClause'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' TryStatement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' variableDeclaration'
          QuestionToken
          TypeReference
            Identifier: ' VariableDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' block'
          TypeReference
            Identifier: ' Block'
      TypeAliasDeclaration
        Identifier: ' ObjectTypeDeclaration'
        UnionType
          TypeReference
            Identifier: ' ClassLikeDeclaration'
          TypeReference
            Identifier: ' InterfaceDeclaration'
          TypeReference
            Identifier: ' TypeLiteralNode'
      TypeAliasDeclaration
        Identifier: ' DeclarationWithTypeParameters'
        UnionType
          TypeReference
            Identifier: ' DeclarationWithTypeParameterChildren'
          TypeReference
            Identifier: ' JSDocTypedefTag'
          TypeReference
            Identifier: ' JSDocCallbackTag'
          TypeReference
            Identifier: ' JSDocSignature'
      TypeAliasDeclaration
        Identifier: ' DeclarationWithTypeParameterChildren'
        UnionType
          TypeReference
            Identifier: ' SignatureDeclaration'
          TypeReference
            Identifier: ' ClassLikeDeclaration'
          TypeReference
            Identifier: ' InterfaceDeclaration'
          TypeReference
            Identifier: ' TypeAliasDeclaration'
          TypeReference
            Identifier: ' JSDocTemplateTag'
      InterfaceDeclaration
        Identifier: ' ClassLikeDeclarationBase'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' NamedDeclaration'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          UnionType
            TypeReference
              QualifiedName
                Identifier: ' SyntaxKind'
                Identifier: 'ClassDeclaration'
            TypeReference
              QualifiedName
                Identifier: ' SyntaxKind'
                Identifier: 'ClassExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          QuestionToken
          TypeReference
            Identifier: ' Identifier'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' typeParameters'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'TypeParameterDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' heritageClauses'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'HeritageClause'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' members'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'ClassElement'
      InterfaceDeclaration
        Identifier: ' ClassDeclaration'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ClassLikeDeclarationBase'
          ExpressionWithTypeArguments
            Identifier: ' DeclarationStatement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ClassDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' modifiers'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'ModifierLike'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          QuestionToken
          TypeReference
            Identifier: ' Identifier'
      InterfaceDeclaration
        Identifier: ' ClassExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ClassLikeDeclarationBase'
          ExpressionWithTypeArguments
            Identifier: ' PrimaryExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ClassExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' modifiers'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'ModifierLike'
      TypeAliasDeclaration
        Identifier: ' ClassLikeDeclaration'
        UnionType
          TypeReference
            Identifier: ' ClassDeclaration'
          TypeReference
            Identifier: ' ClassExpression'
      InterfaceDeclaration
        Identifier: ' ClassElement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' NamedDeclaration'
        PropertySignature
          Identifier: '
        _classElementBrand'
          AnyKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          QuestionToken
          TypeReference
            Identifier: ' PropertyName'
      InterfaceDeclaration
        Identifier: ' TypeElement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' NamedDeclaration'
        PropertySignature
          Identifier: '
        _typeElementBrand'
          AnyKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          QuestionToken
          TypeReference
            Identifier: ' PropertyName'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' questionToken'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' QuestionToken'
            UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' InterfaceDeclaration'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' DeclarationStatement'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'InterfaceDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' modifiers'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'ModifierLike'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' Identifier'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' typeParameters'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'TypeParameterDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' heritageClauses'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'HeritageClause'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' members'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'TypeElement'
      InterfaceDeclaration
        Identifier: ' HeritageClause'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'HeritageClause'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          UnionType
            TypeReference
              Identifier: ' InterfaceDeclaration'
            TypeReference
              Identifier: ' ClassLikeDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' token'
          UnionType
            TypeReference
              QualifiedName
                Identifier: ' SyntaxKind'
                Identifier: 'ExtendsKeyword'
            TypeReference
              QualifiedName
                Identifier: ' SyntaxKind'
                Identifier: 'ImplementsKeyword'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' types'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'ExpressionWithTypeArguments'
      InterfaceDeclaration
        Identifier: ' TypeAliasDeclaration'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' DeclarationStatement'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
          ExpressionWithTypeArguments
            Identifier: ' LocalsContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'TypeAliasDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' modifiers'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'ModifierLike'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' Identifier'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' typeParameters'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'TypeParameterDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' type'
          TypeReference
            Identifier: ' TypeNode'
      InterfaceDeclaration
        Identifier: ' EnumMember'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' NamedDeclaration'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'EnumMember'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' EnumDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' PropertyName'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' initializer'
          QuestionToken
          TypeReference
            Identifier: ' Expression'
      InterfaceDeclaration
        Identifier: ' EnumDeclaration'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' DeclarationStatement'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'EnumDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' modifiers'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'ModifierLike'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' Identifier'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' members'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'EnumMember'
      TypeAliasDeclaration
        Identifier: ' ModuleName'
        UnionType
          TypeReference
            Identifier: ' Identifier'
          TypeReference
            Identifier: ' StringLiteral'
      TypeAliasDeclaration
        Identifier: ' ModuleBody'
        UnionType
          TypeReference
            Identifier: ' NamespaceBody'
          TypeReference
            Identifier: ' JSDocNamespaceBody'
      InterfaceDeclaration
        Identifier: ' ModuleDeclaration'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' DeclarationStatement'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
          ExpressionWithTypeArguments
            Identifier: ' LocalsContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ModuleDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          UnionType
            TypeReference
              Identifier: ' ModuleBody'
            TypeReference
              Identifier: ' SourceFile'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' modifiers'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'ModifierLike'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' ModuleName'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' body'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' ModuleBody'
            TypeReference
              Identifier: ' JSDocNamespaceDeclaration'
      TypeAliasDeclaration
        Identifier: ' NamespaceBody'
        UnionType
          TypeReference
            Identifier: ' ModuleBlock'
          TypeReference
            Identifier: ' NamespaceDeclaration'
      InterfaceDeclaration
        Identifier: ' NamespaceDeclaration'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ModuleDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' Identifier'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' body'
          TypeReference
            Identifier: ' NamespaceBody'
      TypeAliasDeclaration
        Identifier: ' JSDocNamespaceBody'
        UnionType
          TypeReference
            Identifier: ' Identifier'
          TypeReference
            Identifier: ' JSDocNamespaceDeclaration'
      InterfaceDeclaration
        Identifier: ' JSDocNamespaceDeclaration'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ModuleDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' Identifier'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' body'
          QuestionToken
          TypeReference
            Identifier: ' JSDocNamespaceBody'
      InterfaceDeclaration
        Identifier: ' ModuleBlock'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
          ExpressionWithTypeArguments
            Identifier: ' Statement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ModuleBlock'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' ModuleDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' statements'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'Statement'
      TypeAliasDeclaration
        Identifier: ' ModuleReference'
        UnionType
          TypeReference
            Identifier: ' EntityName'
          TypeReference
            Identifier: ' ExternalModuleReference'
      InterfaceDeclaration
        Identifier: ' ImportEqualsDeclaration'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' DeclarationStatement'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ImportEqualsDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          UnionType
            TypeReference
              Identifier: ' SourceFile'
            TypeReference
              Identifier: ' ModuleBlock'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' modifiers'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'ModifierLike'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' Identifier'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' isTypeOnly'
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' moduleReference'
          TypeReference
            Identifier: ' ModuleReference'
      InterfaceDeclaration
        Identifier: ' ExternalModuleReference'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ExternalModuleReference'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' ImportEqualsDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' Expression'
      InterfaceDeclaration
        Identifier: ' ImportDeclaration'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Statement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ImportDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          UnionType
            TypeReference
              Identifier: ' SourceFile'
            TypeReference
              Identifier: ' ModuleBlock'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' modifiers'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'ModifierLike'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' importClause'
          QuestionToken
          TypeReference
            Identifier: ' ImportClause'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' moduleSpecifier'
          TypeReference
            Identifier: ' Expression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' assertClause'
          QuestionToken
          TypeReference
            Identifier: ' AssertClause'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' attributes'
          QuestionToken
          TypeReference
            Identifier: ' ImportAttributes'
      TypeAliasDeclaration
        Identifier: ' NamedImportBindings'
        UnionType
          TypeReference
            Identifier: ' NamespaceImport'
          TypeReference
            Identifier: ' NamedImports'
      TypeAliasDeclaration
        Identifier: ' NamedExportBindings'
        UnionType
          TypeReference
            Identifier: ' NamespaceExport'
          TypeReference
            Identifier: ' NamedExports'
      InterfaceDeclaration
        Identifier: ' ImportClause'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' NamedDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ImportClause'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          UnionType
            TypeReference
              Identifier: ' ImportDeclaration'
            TypeReference
              Identifier: ' JSDocImportTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' isTypeOnly'
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          QuestionToken
          TypeReference
            Identifier: ' Identifier'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' namedBindings'
          QuestionToken
          TypeReference
            Identifier: ' NamedImportBindings'
      TypeAliasDeclaration
        Identifier: ' AssertionKey'
        TypeReference
          Identifier: ' ImportAttributeName'
      InterfaceDeclaration
        Identifier: ' AssertEntry'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ImportAttribute'
      InterfaceDeclaration
        Identifier: ' AssertClause'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ImportAttributes'
      TypeAliasDeclaration
        Identifier: ' ImportAttributeName'
        UnionType
          TypeReference
            Identifier: ' Identifier'
          TypeReference
            Identifier: ' StringLiteral'
      InterfaceDeclaration
        Identifier: ' ImportAttribute'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ImportAttribute'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' ImportAttributes'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' ImportAttributeName'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' value'
          TypeReference
            Identifier: ' Expression'
      InterfaceDeclaration
        Identifier: ' ImportAttributes'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' token'
          UnionType
            TypeReference
              QualifiedName
                Identifier: ' SyntaxKind'
                Identifier: 'WithKeyword'
            TypeReference
              QualifiedName
                Identifier: ' SyntaxKind'
                Identifier: 'AssertKeyword'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ImportAttributes'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          UnionType
            TypeReference
              Identifier: ' ImportDeclaration'
            TypeReference
              Identifier: ' ExportDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' elements'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'ImportAttribute'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' multiLine'
          QuestionToken
          BooleanKeyword
      InterfaceDeclaration
        Identifier: ' NamespaceImport'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' NamedDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'NamespaceImport'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' ImportClause'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' Identifier'
      InterfaceDeclaration
        Identifier: ' NamespaceExport'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' NamedDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'NamespaceExport'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' ExportDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' ModuleExportName'
      InterfaceDeclaration
        Identifier: ' NamespaceExportDeclaration'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' DeclarationStatement'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'NamespaceExportDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' Identifier'
      InterfaceDeclaration
        Identifier: ' ExportDeclaration'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' DeclarationStatement'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ExportDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          UnionType
            TypeReference
              Identifier: ' SourceFile'
            TypeReference
              Identifier: ' ModuleBlock'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' modifiers'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'ModifierLike'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' isTypeOnly'
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' exportClause'
          QuestionToken
          TypeReference
            Identifier: ' NamedExportBindings'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' moduleSpecifier'
          QuestionToken
          TypeReference
            Identifier: ' Expression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' assertClause'
          QuestionToken
          TypeReference
            Identifier: ' AssertClause'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' attributes'
          QuestionToken
          TypeReference
            Identifier: ' ImportAttributes'
      InterfaceDeclaration
        Identifier: ' NamedImports'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'NamedImports'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' ImportClause'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' elements'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'ImportSpecifier'
      InterfaceDeclaration
        Identifier: ' NamedExports'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'NamedExports'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' ExportDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' elements'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'ExportSpecifier'
      TypeAliasDeclaration
        Identifier: ' NamedImportsOrExports'
        UnionType
          TypeReference
            Identifier: ' NamedImports'
          TypeReference
            Identifier: ' NamedExports'
      InterfaceDeclaration
        Identifier: ' ImportSpecifier'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' NamedDeclaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ImportSpecifier'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' NamedImports'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' propertyName'
          QuestionToken
          TypeReference
            Identifier: ' ModuleExportName'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' Identifier'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' isTypeOnly'
          BooleanKeyword
      InterfaceDeclaration
        Identifier: ' ExportSpecifier'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' NamedDeclaration'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ExportSpecifier'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' NamedExports'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' isTypeOnly'
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' propertyName'
          QuestionToken
          TypeReference
            Identifier: ' ModuleExportName'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' ModuleExportName'
      TypeAliasDeclaration
        Identifier: ' ModuleExportName'
        UnionType
          TypeReference
            Identifier: ' Identifier'
          TypeReference
            Identifier: ' StringLiteral'
      TypeAliasDeclaration
        Identifier: ' ImportOrExportSpecifier'
        UnionType
          TypeReference
            Identifier: ' ImportSpecifier'
          TypeReference
            Identifier: ' ExportSpecifier'
      TypeAliasDeclaration
        Identifier: ' TypeOnlyCompatibleAliasDeclaration'
        UnionType
          TypeReference
            Identifier: ' ImportClause'
          TypeReference
            Identifier: ' ImportEqualsDeclaration'
          TypeReference
            Identifier: ' NamespaceImport'
          TypeReference
            Identifier: ' ImportOrExportSpecifier'
          TypeReference
            Identifier: ' ExportDeclaration'
          TypeReference
            Identifier: ' NamespaceExport'
      TypeAliasDeclaration
        Identifier: ' TypeOnlyImportDeclaration'
        UnionType
          IntersectionType
            TypeReference
              Identifier: ' ImportClause'
            TypeLiteral
              PropertySignature
                ReadonlyKeyword
                Identifier: ' isTypeOnly'
                LiteralType
                  TrueKeyword
              PropertySignature
                ReadonlyKeyword
                Identifier: ' name'
                TypeReference
                  Identifier: ' Identifier'
          IntersectionType
            TypeReference
              Identifier: ' ImportEqualsDeclaration'
            TypeLiteral
              PropertySignature
                ReadonlyKeyword
                Identifier: ' isTypeOnly'
                LiteralType
                  TrueKeyword
          IntersectionType
            TypeReference
              Identifier: ' NamespaceImport'
            TypeLiteral
              PropertySignature
                ReadonlyKeyword
                Identifier: ' parent'
                IntersectionType
                  TypeReference
                    Identifier: ' ImportClause'
                  TypeLiteral
                    PropertySignature
                      ReadonlyKeyword
                      Identifier: ' isTypeOnly'
                      LiteralType
                        TrueKeyword
          IntersectionType
            TypeReference
              Identifier: ' ImportSpecifier'
            ParenthesizedType
              UnionType
                TypeLiteral
                  PropertySignature
                    ReadonlyKeyword
                    Identifier: ' isTypeOnly'
                    LiteralType
                      TrueKeyword
                TypeLiteral
                  PropertySignature
                    ReadonlyKeyword
                    Identifier: ' parent'
                    IntersectionType
                      TypeReference
                        Identifier: ' NamedImports'
                      TypeLiteral
                        PropertySignature
                          ReadonlyKeyword
                          Identifier: ' parent'
                          IntersectionType
                            TypeReference
                              Identifier: ' ImportClause'
                            TypeLiteral
                              PropertySignature
                                ReadonlyKeyword
                                Identifier: ' isTypeOnly'
                                LiteralType
                                  TrueKeyword
      TypeAliasDeclaration
        Identifier: ' TypeOnlyExportDeclaration'
        UnionType
          IntersectionType
            TypeReference
              Identifier: ' ExportSpecifier'
            ParenthesizedType
              UnionType
                TypeLiteral
                  PropertySignature
                    ReadonlyKeyword
                    Identifier: ' isTypeOnly'
                    LiteralType
                      TrueKeyword
                TypeLiteral
                  PropertySignature
                    ReadonlyKeyword
                    Identifier: ' parent'
                    IntersectionType
                      TypeReference
                        Identifier: ' NamedExports'
                      TypeLiteral
                        PropertySignature
                          ReadonlyKeyword
                          Identifier: ' parent'
                          IntersectionType
                            TypeReference
                              Identifier: ' ExportDeclaration'
                            TypeLiteral
                              PropertySignature
                                ReadonlyKeyword
                                Identifier: ' isTypeOnly'
                                LiteralType
                                  TrueKeyword
          IntersectionType
            TypeReference
              Identifier: ' ExportDeclaration'
            TypeLiteral
              PropertySignature
                ReadonlyKeyword
                Identifier: ' isTypeOnly'
                LiteralType
                  TrueKeyword
              PropertySignature
                ReadonlyKeyword
                Identifier: ' moduleSpecifier'
                TypeReference
                  Identifier: ' Expression'
          IntersectionType
            TypeReference
              Identifier: ' NamespaceExport'
            TypeLiteral
              PropertySignature
                ReadonlyKeyword
                Identifier: ' parent'
                IntersectionType
                  TypeReference
                    Identifier: ' ExportDeclaration'
                  TypeLiteral
                    PropertySignature
                      ReadonlyKeyword
                      Identifier: ' isTypeOnly'
                      LiteralType
                        TrueKeyword
                    PropertySignature
                      ReadonlyKeyword
                      Identifier: ' moduleSpecifier'
                      TypeReference
                        Identifier: ' Expression'
      TypeAliasDeclaration
        Identifier: ' TypeOnlyAliasDeclaration'
        UnionType
          TypeReference
            Identifier: ' TypeOnlyImportDeclaration'
          TypeReference
            Identifier: ' TypeOnlyExportDeclaration'
      InterfaceDeclaration
        Identifier: ' ExportAssignment'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' DeclarationStatement'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'ExportAssignment'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' SourceFile'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' modifiers'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'ModifierLike'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' isExportEquals'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' Expression'
      InterfaceDeclaration
        Identifier: ' FileReference'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TextRange'
        PropertySignature
          Identifier: '
        fileName'
          StringKeyword
        PropertySignature
          Identifier: '
        resolutionMode'
          QuestionToken
          TypeReference
            Identifier: ' ResolutionMode'
        PropertySignature
          Identifier: '
        preserve'
          QuestionToken
          BooleanKeyword
      InterfaceDeclaration
        Identifier: ' CheckJsDirective'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TextRange'
        PropertySignature
          Identifier: '
        enabled'
          BooleanKeyword
      TypeAliasDeclaration
        Identifier: ' CommentKind'
        UnionType
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'SingleLineCommentTrivia'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'MultiLineCommentTrivia'
      InterfaceDeclaration
        Identifier: ' CommentRange'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TextRange'
        PropertySignature
          Identifier: '
        hasTrailingNewLine'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        kind'
          TypeReference
            Identifier: ' CommentKind'
      InterfaceDeclaration
        Identifier: ' SynthesizedComment'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' CommentRange'
        PropertySignature
          Identifier: '
        text'
          StringKeyword
        PropertySignature
          Identifier: '
        pos'
          LiteralType
            PrefixUnaryExpression
              NumericLiteral
        PropertySignature
          Identifier: '
        end'
          LiteralType
            PrefixUnaryExpression
              NumericLiteral
        PropertySignature
          Identifier: '
        hasLeadingNewline'
          QuestionToken
          BooleanKeyword
      InterfaceDeclaration
        Identifier: ' JSDocTypeExpression'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocTypeExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' type'
          TypeReference
            Identifier: ' TypeNode'
      InterfaceDeclaration
        Identifier: ' JSDocNameReference'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocNameReference'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          UnionType
            TypeReference
              Identifier: ' EntityName'
            TypeReference
              Identifier: ' JSDocMemberName'
      InterfaceDeclaration
        Identifier: ' JSDocMemberName'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocMemberName'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' left'
          UnionType
            TypeReference
              Identifier: ' EntityName'
            TypeReference
              Identifier: ' JSDocMemberName'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' right'
          TypeReference
            Identifier: ' Identifier'
      InterfaceDeclaration
        Identifier: ' JSDocType'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TypeNode'
        PropertySignature
          Identifier: '
        _jsDocTypeBrand'
          AnyKeyword
      InterfaceDeclaration
        Identifier: ' JSDocAllType'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocType'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocAllType'
      InterfaceDeclaration
        Identifier: ' JSDocUnknownType'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocType'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocUnknownType'
      InterfaceDeclaration
        Identifier: ' JSDocNonNullableType'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocType'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocNonNullableType'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' type'
          TypeReference
            Identifier: ' TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' postfix'
          BooleanKeyword
      InterfaceDeclaration
        Identifier: ' JSDocNullableType'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocType'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocNullableType'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' type'
          TypeReference
            Identifier: ' TypeNode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' postfix'
          BooleanKeyword
      InterfaceDeclaration
        Identifier: ' JSDocOptionalType'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocType'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocOptionalType'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' type'
          TypeReference
            Identifier: ' TypeNode'
      InterfaceDeclaration
        Identifier: ' JSDocFunctionType'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocType'
          ExpressionWithTypeArguments
            Identifier: ' SignatureDeclarationBase'
          ExpressionWithTypeArguments
            Identifier: ' LocalsContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocFunctionType'
      InterfaceDeclaration
        Identifier: ' JSDocVariadicType'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocType'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocVariadicType'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' type'
          TypeReference
            Identifier: ' TypeNode'
      InterfaceDeclaration
        Identifier: ' JSDocNamepathType'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocType'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocNamepathType'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' type'
          TypeReference
            Identifier: ' TypeNode'
      TypeAliasDeclaration
        Identifier: ' JSDocTypeReferencingNode'
        UnionType
          TypeReference
            Identifier: ' JSDocVariadicType'
          TypeReference
            Identifier: ' JSDocOptionalType'
          TypeReference
            Identifier: ' JSDocNullableType'
          TypeReference
            Identifier: ' JSDocNonNullableType'
      InterfaceDeclaration
        Identifier: ' JSDoc'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDoc'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' HasJSDoc'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' tags'
          QuestionToken
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'JSDocTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' comment'
          QuestionToken
          UnionType
            StringKeyword
            TypeReference
              Identifier: ' NodeArray'
              TypeReference
                Identifier: 'JSDocComment'
      InterfaceDeclaration
        Identifier: ' JSDocTag'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          UnionType
            TypeReference
              Identifier: ' JSDoc'
            TypeReference
              Identifier: ' JSDocTypeLiteral'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' tagName'
          TypeReference
            Identifier: ' Identifier'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' comment'
          QuestionToken
          UnionType
            StringKeyword
            TypeReference
              Identifier: ' NodeArray'
              TypeReference
                Identifier: 'JSDocComment'
      InterfaceDeclaration
        Identifier: ' JSDocLink'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocLink'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' EntityName'
            TypeReference
              Identifier: ' JSDocMemberName'
        PropertySignature
          Identifier: '
        text'
          StringKeyword
      InterfaceDeclaration
        Identifier: ' JSDocLinkCode'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocLinkCode'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' EntityName'
            TypeReference
              Identifier: ' JSDocMemberName'
        PropertySignature
          Identifier: '
        text'
          StringKeyword
      InterfaceDeclaration
        Identifier: ' JSDocLinkPlain'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocLinkPlain'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' EntityName'
            TypeReference
              Identifier: ' JSDocMemberName'
        PropertySignature
          Identifier: '
        text'
          StringKeyword
      TypeAliasDeclaration
        Identifier: ' JSDocComment'
        UnionType
          TypeReference
            Identifier: ' JSDocText'
          TypeReference
            Identifier: ' JSDocLink'
          TypeReference
            Identifier: ' JSDocLinkCode'
          TypeReference
            Identifier: ' JSDocLinkPlain'
      InterfaceDeclaration
        Identifier: ' JSDocText'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocText'
        PropertySignature
          Identifier: '
        text'
          StringKeyword
      InterfaceDeclaration
        Identifier: ' JSDocUnknownTag'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocTag'
      InterfaceDeclaration
        Identifier: ' JSDocAugmentsTag'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocAugmentsTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' class'
          IntersectionType
            TypeReference
              Identifier: ' ExpressionWithTypeArguments'
            TypeLiteral
              PropertySignature
                ReadonlyKeyword
                Identifier: ' expression'
                UnionType
                  TypeReference
                    Identifier: ' Identifier'
                  TypeReference
                    Identifier: ' PropertyAccessEntityNameExpression'
      InterfaceDeclaration
        Identifier: ' JSDocImplementsTag'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocImplementsTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' class'
          IntersectionType
            TypeReference
              Identifier: ' ExpressionWithTypeArguments'
            TypeLiteral
              PropertySignature
                ReadonlyKeyword
                Identifier: ' expression'
                UnionType
                  TypeReference
                    Identifier: ' Identifier'
                  TypeReference
                    Identifier: ' PropertyAccessEntityNameExpression'
      InterfaceDeclaration
        Identifier: ' JSDocAuthorTag'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocAuthorTag'
      InterfaceDeclaration
        Identifier: ' JSDocDeprecatedTag'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocTag'
        PropertySignature
          Identifier: '
        kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocDeprecatedTag'
      InterfaceDeclaration
        Identifier: ' JSDocClassTag'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocClassTag'
      InterfaceDeclaration
        Identifier: ' JSDocPublicTag'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocPublicTag'
      InterfaceDeclaration
        Identifier: ' JSDocPrivateTag'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocPrivateTag'
      InterfaceDeclaration
        Identifier: ' JSDocProtectedTag'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocProtectedTag'
      InterfaceDeclaration
        Identifier: ' JSDocReadonlyTag'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocReadonlyTag'
      InterfaceDeclaration
        Identifier: ' JSDocOverrideTag'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocOverrideTag'
      InterfaceDeclaration
        Identifier: ' JSDocEnumTag'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocTag'
          ExpressionWithTypeArguments
            Identifier: ' Declaration'
          ExpressionWithTypeArguments
            Identifier: ' LocalsContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocEnumTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' JSDoc'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' typeExpression'
          TypeReference
            Identifier: ' JSDocTypeExpression'
      InterfaceDeclaration
        Identifier: ' JSDocThisTag'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocThisTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' typeExpression'
          TypeReference
            Identifier: ' JSDocTypeExpression'
      InterfaceDeclaration
        Identifier: ' JSDocTemplateTag'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocTemplateTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' constraint'
          UnionType
            TypeReference
              Identifier: ' JSDocTypeExpression'
            UndefinedKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' typeParameters'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'TypeParameterDeclaration'
      InterfaceDeclaration
        Identifier: ' JSDocSeeTag'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocSeeTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          QuestionToken
          TypeReference
            Identifier: ' JSDocNameReference'
      InterfaceDeclaration
        Identifier: ' JSDocReturnTag'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocReturnTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' typeExpression'
          QuestionToken
          TypeReference
            Identifier: ' JSDocTypeExpression'
      InterfaceDeclaration
        Identifier: ' JSDocTypeTag'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocTypeTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' typeExpression'
          TypeReference
            Identifier: ' JSDocTypeExpression'
      InterfaceDeclaration
        Identifier: ' JSDocTypedefTag'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocTag'
          ExpressionWithTypeArguments
            Identifier: ' NamedDeclaration'
          ExpressionWithTypeArguments
            Identifier: ' LocalsContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocTypedefTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' JSDoc'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' fullName'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' JSDocNamespaceDeclaration'
            TypeReference
              Identifier: ' Identifier'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          QuestionToken
          TypeReference
            Identifier: ' Identifier'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' typeExpression'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' JSDocTypeExpression'
            TypeReference
              Identifier: ' JSDocTypeLiteral'
      InterfaceDeclaration
        Identifier: ' JSDocCallbackTag'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocTag'
          ExpressionWithTypeArguments
            Identifier: ' NamedDeclaration'
          ExpressionWithTypeArguments
            Identifier: ' LocalsContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocCallbackTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' JSDoc'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' fullName'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' JSDocNamespaceDeclaration'
            TypeReference
              Identifier: ' Identifier'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          QuestionToken
          TypeReference
            Identifier: ' Identifier'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' typeExpression'
          TypeReference
            Identifier: ' JSDocSignature'
      InterfaceDeclaration
        Identifier: ' JSDocOverloadTag'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocOverloadTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' JSDoc'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' typeExpression'
          TypeReference
            Identifier: ' JSDocSignature'
      InterfaceDeclaration
        Identifier: ' JSDocThrowsTag'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocThrowsTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' typeExpression'
          QuestionToken
          TypeReference
            Identifier: ' JSDocTypeExpression'
      InterfaceDeclaration
        Identifier: ' JSDocSignature'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocType'
          ExpressionWithTypeArguments
            Identifier: ' Declaration'
          ExpressionWithTypeArguments
            Identifier: ' JSDocContainer'
          ExpressionWithTypeArguments
            Identifier: ' LocalsContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocSignature'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' typeParameters'
          QuestionToken
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' JSDocTemplateTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parameters'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' JSDocParameterTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' type'
          UnionType
            TypeReference
              Identifier: ' JSDocReturnTag'
            UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' JSDocPropertyLikeTag'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocTag'
          ExpressionWithTypeArguments
            Identifier: ' Declaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' JSDoc'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          TypeReference
            Identifier: ' EntityName'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' typeExpression'
          QuestionToken
          TypeReference
            Identifier: ' JSDocTypeExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' isNameFirst'
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' isBracketed'
          BooleanKeyword
      InterfaceDeclaration
        Identifier: ' JSDocPropertyTag'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocPropertyLikeTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocPropertyTag'
      InterfaceDeclaration
        Identifier: ' JSDocParameterTag'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocPropertyLikeTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocParameterTag'
      InterfaceDeclaration
        Identifier: ' JSDocTypeLiteral'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocType'
          ExpressionWithTypeArguments
            Identifier: ' Declaration'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocTypeLiteral'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' jsDocPropertyTags'
          QuestionToken
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' JSDocPropertyLikeTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' isArrayType'
          BooleanKeyword
      InterfaceDeclaration
        Identifier: ' JSDocSatisfiesTag'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocSatisfiesTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' typeExpression'
          TypeReference
            Identifier: ' JSDocTypeExpression'
      InterfaceDeclaration
        Identifier: ' JSDocImportTag'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JSDocTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocImportTag'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' parent'
          TypeReference
            Identifier: ' JSDoc'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' importClause'
          QuestionToken
          TypeReference
            Identifier: ' ImportClause'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' moduleSpecifier'
          TypeReference
            Identifier: ' Expression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' attributes'
          QuestionToken
          TypeReference
            Identifier: ' ImportAttributes'
      TypeAliasDeclaration
        Identifier: ' FlowType'
        UnionType
          TypeReference
            Identifier: ' Type'
          TypeReference
            Identifier: ' IncompleteType'
      InterfaceDeclaration
        Identifier: ' IncompleteType'
        PropertySignature
          Identifier: '
        flags'
          UnionType
            TypeReference
              Identifier: ' TypeFlags'
            LiteralType
              NumericLiteral
        PropertySignature
          Identifier: '
        type'
          TypeReference
            Identifier: ' Type'
      InterfaceDeclaration
        Identifier: ' AmdDependency'
        PropertySignature
          Identifier: '
        path'
          StringKeyword
        PropertySignature
          Identifier: '
        name'
          QuestionToken
          StringKeyword
      InterfaceDeclaration
        Identifier: ' SourceFileLike'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' text'
          StringKeyword
      InterfaceDeclaration
        Identifier: ' SourceFileLike'
        MethodSignature
          Identifier: '
        getLineAndCharacterOfPosition'
          Parameter
            Identifier: 'pos'
            NumberKeyword
          TypeReference
            Identifier: ' LineAndCharacter'
      TypeAliasDeclaration
        Identifier: ' ResolutionMode'
        UnionType
          TypeReference
            QualifiedName
              Identifier: ' ModuleKind'
              Identifier: 'ESNext'
          TypeReference
            QualifiedName
              Identifier: ' ModuleKind'
              Identifier: 'CommonJS'
          UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' SourceFile'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Declaration'
          ExpressionWithTypeArguments
            Identifier: ' LocalsContainer'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'SourceFile'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' statements'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'Statement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' endOfFileToken'
          TypeReference
            Identifier: ' Token'
            TypeReference
              QualifiedName
                Identifier: 'SyntaxKind'
                Identifier: 'EndOfFileToken'
        PropertySignature
          Identifier: '
        fileName'
          StringKeyword
        PropertySignature
          Identifier: '
        text'
          StringKeyword
        PropertySignature
          Identifier: '
        amdDependencies'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' AmdDependency'
        PropertySignature
          Identifier: '
        moduleName'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        referencedFiles'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' FileReference'
        PropertySignature
          Identifier: '
        typeReferenceDirectives'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' FileReference'
        PropertySignature
          Identifier: '
        libReferenceDirectives'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' FileReference'
        PropertySignature
          Identifier: '
        languageVariant'
          TypeReference
            Identifier: ' LanguageVariant'
        PropertySignature
          Identifier: '
        isDeclarationFile'
          BooleanKeyword
        PropertySignature
          Identifier: '
        /**
         * lib.d.ts should have a reference comment like
         *
         *  /// <reference no-default-lib="true"/>
         *
         * If any other file has this comment, it signals not to include lib.d.ts
         * because this containing file is intended to act as a default library.
         */
        hasNoDefaultLib'
          BooleanKeyword
        PropertySignature
          Identifier: '
        languageVersion'
          TypeReference
            Identifier: ' ScriptTarget'
        PropertySignature
          Identifier: '
        /**
         * When `module` is `Node16` or `NodeNext`, this field controls whether the
         * source file in question is an ESNext-output-format file, or a CommonJS-output-format
         * module. This is derived by the module resolver as it looks up the file, since
         * it is derived from either the file extension of the module, or the containing
         * `package.json` context, and affects both checking and emit.
         *
         * It is _public_ so that (pre)transformers can set this field,
         * since it switches the builtin `node` module transform. Generally speaking, if unset,
         * the field is treated as though it is `ModuleKind.CommonJS`.
         *
         * Note that this field is only set by the module resolution process when
         * `moduleResolution` is `Node16` or `NodeNext`, which is implied by the `module` setting
         * of `Node16` or `NodeNext`, respectively, but may be overriden (eg, by a `moduleResolution`
         * of `node`). If so, this field will be unset and source files will be considered to be
         * CommonJS-output-format by the node module transformer and type checker, regardless of extension or context.
         */
        impliedNodeFormat'
          QuestionToken
          TypeReference
            Identifier: ' ResolutionMode'
      InterfaceDeclaration
        Identifier: ' SourceFile'
        MethodSignature
          Identifier: '
        getLineAndCharacterOfPosition'
          Parameter
            Identifier: 'pos'
            NumberKeyword
          TypeReference
            Identifier: ' LineAndCharacter'
        MethodSignature
          Identifier: '
        getLineEndOfPosition'
          Parameter
            Identifier: 'pos'
            NumberKeyword
          NumberKeyword
        MethodSignature
          Identifier: '
        getLineStarts'
          TypeOperator
            ArrayType
              NumberKeyword
        MethodSignature
          Identifier: '
        getPositionOfLineAndCharacter'
          Parameter
            Identifier: 'line'
            NumberKeyword
          Parameter
            Identifier: ' character'
            NumberKeyword
          NumberKeyword
        MethodSignature
          Identifier: '
        update'
          Parameter
            Identifier: 'newText'
            StringKeyword
          Parameter
            Identifier: ' textChangeRange'
            TypeReference
              Identifier: ' TextChangeRange'
          TypeReference
            Identifier: ' SourceFile'
      InterfaceDeclaration
        Identifier: ' Bundle'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'Bundle'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' sourceFiles'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' SourceFile'
      InterfaceDeclaration
        Identifier: ' JsonSourceFile'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' SourceFile'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' statements'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'JsonObjectExpressionStatement'
      InterfaceDeclaration
        Identifier: ' TsConfigSourceFile'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' JsonSourceFile'
        PropertySignature
          Identifier: '
        extendedSourceFiles'
          QuestionToken
          ArrayType
            StringKeyword
      InterfaceDeclaration
        Identifier: ' JsonMinusNumericLiteral'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' PrefixUnaryExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'PrefixUnaryExpression'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' operator'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'MinusToken'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' operand'
          TypeReference
            Identifier: ' NumericLiteral'
      TypeAliasDeclaration
        Identifier: ' JsonObjectExpression'
        UnionType
          TypeReference
            Identifier: ' ObjectLiteralExpression'
          TypeReference
            Identifier: ' ArrayLiteralExpression'
          TypeReference
            Identifier: ' JsonMinusNumericLiteral'
          TypeReference
            Identifier: ' NumericLiteral'
          TypeReference
            Identifier: ' StringLiteral'
          TypeReference
            Identifier: ' BooleanLiteral'
          TypeReference
            Identifier: ' NullLiteral'
      InterfaceDeclaration
        Identifier: ' JsonObjectExpressionStatement'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ExpressionStatement'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' expression'
          TypeReference
            Identifier: ' JsonObjectExpression'
      InterfaceDeclaration
        Identifier: ' ScriptReferenceHost'
        MethodSignature
          Identifier: '
        getCompilerOptions'
          TypeReference
            Identifier: ' CompilerOptions'
        MethodSignature
          Identifier: '
        getSourceFile'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          UnionType
            TypeReference
              Identifier: ' SourceFile'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getSourceFileByPath'
          Parameter
            Identifier: 'path'
            TypeReference
              Identifier: ' Path'
          UnionType
            TypeReference
              Identifier: ' SourceFile'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getCurrentDirectory'
          StringKeyword
      InterfaceDeclaration
        Identifier: ' ParseConfigHost'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ModuleResolutionHost'
        PropertySignature
          Identifier: '
        useCaseSensitiveFileNames'
          BooleanKeyword
        MethodSignature
          Identifier: '
        readDirectory'
          Parameter
            Identifier: 'rootDir'
            StringKeyword
          Parameter
            Identifier: ' extensions'
            TypeOperator
              ArrayType
                StringKeyword
          Parameter
            Identifier: ' excludes'
            UnionType
              TypeOperator
                ArrayType
                  StringKeyword
              UndefinedKeyword
          Parameter
            Identifier: ' includes'
            TypeOperator
              ArrayType
                StringKeyword
          Parameter
            Identifier: ' depth'
            QuestionToken
            NumberKeyword
          TypeOperator
            ArrayType
              StringKeyword
        MethodSignature
          Identifier: '
        /**
         * Gets a value indicating whether the specified path exists and is a file.
         * @param path The path to test.
         */
        fileExists'
          Parameter
            Identifier: 'path'
            StringKeyword
          BooleanKeyword
        MethodSignature
          Identifier: '
        readFile'
          Parameter
            Identifier: 'path'
            StringKeyword
          UnionType
            StringKeyword
            UndefinedKeyword
        MethodSignature
          Identifier: '
        trace'
          QuestionToken
          Parameter
            Identifier: 's'
            StringKeyword
          VoidKeyword
      TypeAliasDeclaration
        Identifier: ' ResolvedConfigFileName'
        IntersectionType
          StringKeyword
          TypeLiteral
            PropertySignature
              Identifier: '
        _isResolvedConfigFileName'
              NeverKeyword
      InterfaceDeclaration
        Identifier: ' WriteFileCallbackData'
      TypeAliasDeclaration
        Identifier: ' WriteFileCallback'
        FunctionType
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' text'
            StringKeyword
          Parameter
            Identifier: ' writeByteOrderMark'
            BooleanKeyword
          Parameter
            Identifier: ' onError'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'message'
                StringKeyword
              VoidKeyword
          Parameter
            Identifier: ' sourceFiles'
            QuestionToken
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' SourceFile'
          Parameter
            Identifier: ' data'
            QuestionToken
            TypeReference
              Identifier: ' WriteFileCallbackData'
          VoidKeyword
      ClassDeclaration
        Identifier: ' OperationCanceledException'
      InterfaceDeclaration
        Identifier: ' CancellationToken'
        MethodSignature
          Identifier: '
        isCancellationRequested'
          BooleanKeyword
        MethodSignature
          Identifier: '
        /** @throws OperationCanceledException if isCancellationRequested is true */
        throwIfCancellationRequested'
          VoidKeyword
      InterfaceDeclaration
        Identifier: ' Program'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ScriptReferenceHost'
        MethodSignature
          Identifier: '
        getCurrentDirectory'
          StringKeyword
        MethodSignature
          Identifier: '
        /**
         * Get a list of root file names that were passed to a 'createProgram'
         */
        getRootFileNames'
          TypeOperator
            ArrayType
              StringKeyword
        MethodSignature
          Identifier: '
        /**
         * Get a list of files in the program
         */
        getSourceFiles'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' SourceFile'
        MethodSignature
          Identifier: '
        /**
         * Emits the JavaScript and declaration files.  If targetSourceFile is not specified, then
         * the JavaScript and declaration files will be produced for all the files in this program.
         * If targetSourceFile is specified, then only the JavaScript and declaration for that
         * specific file will be generated.
         *
         * If writeFile is not specified then the writeFile callback from the compiler host will be
         * used for writing the JavaScript and declaration files.  Otherwise, the writeFile parameter
         * will be invoked when writing the JavaScript and declaration files.
         */
        emit'
          Parameter
            Identifier: 'targetSourceFile'
            QuestionToken
            TypeReference
              Identifier: ' SourceFile'
          Parameter
            Identifier: ' writeFile'
            QuestionToken
            TypeReference
              Identifier: ' WriteFileCallback'
          Parameter
            Identifier: ' cancellationToken'
            QuestionToken
            TypeReference
              Identifier: ' CancellationToken'
          Parameter
            Identifier: ' emitOnlyDtsFiles'
            QuestionToken
            BooleanKeyword
          Parameter
            Identifier: ' customTransformers'
            QuestionToken
            TypeReference
              Identifier: ' CustomTransformers'
          TypeReference
            Identifier: ' EmitResult'
        MethodSignature
          Identifier: '
        getOptionsDiagnostics'
          Parameter
            Identifier: 'cancellationToken'
            QuestionToken
            TypeReference
              Identifier: ' CancellationToken'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Diagnostic'
        MethodSignature
          Identifier: '
        getGlobalDiagnostics'
          Parameter
            Identifier: 'cancellationToken'
            QuestionToken
            TypeReference
              Identifier: ' CancellationToken'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Diagnostic'
        MethodSignature
          Identifier: '
        getSyntacticDiagnostics'
          Parameter
            Identifier: 'sourceFile'
            QuestionToken
            TypeReference
              Identifier: ' SourceFile'
          Parameter
            Identifier: ' cancellationToken'
            QuestionToken
            TypeReference
              Identifier: ' CancellationToken'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' DiagnosticWithLocation'
        MethodSignature
          Identifier: '
        /** The first time this is called, it will return global diagnostics (no location). */
        getSemanticDiagnostics'
          Parameter
            Identifier: 'sourceFile'
            QuestionToken
            TypeReference
              Identifier: ' SourceFile'
          Parameter
            Identifier: ' cancellationToken'
            QuestionToken
            TypeReference
              Identifier: ' CancellationToken'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Diagnostic'
        MethodSignature
          Identifier: '
        getDeclarationDiagnostics'
          Parameter
            Identifier: 'sourceFile'
            QuestionToken
            TypeReference
              Identifier: ' SourceFile'
          Parameter
            Identifier: ' cancellationToken'
            QuestionToken
            TypeReference
              Identifier: ' CancellationToken'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' DiagnosticWithLocation'
        MethodSignature
          Identifier: '
        getConfigFileParsingDiagnostics'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Diagnostic'
        MethodSignature
          Identifier: '
        /**
         * Gets a type checker that can be used to semantically analyze source files in the program.
         */
        getTypeChecker'
          TypeReference
            Identifier: ' TypeChecker'
        MethodSignature
          Identifier: '
        getNodeCount'
          NumberKeyword
        MethodSignature
          Identifier: '
        getIdentifierCount'
          NumberKeyword
        MethodSignature
          Identifier: '
        getSymbolCount'
          NumberKeyword
        MethodSignature
          Identifier: '
        getTypeCount'
          NumberKeyword
        MethodSignature
          Identifier: '
        getInstantiationCount'
          NumberKeyword
        MethodSignature
          Identifier: '
        getRelationCacheSizes'
          TypeLiteral
            PropertySignature
              Identifier: '
            assignable'
              NumberKeyword
            PropertySignature
              Identifier: '
            identity'
              NumberKeyword
            PropertySignature
              Identifier: '
            subtype'
              NumberKeyword
            PropertySignature
              Identifier: '
            strictSubtype'
              NumberKeyword
        MethodSignature
          Identifier: '
        isSourceFileFromExternalLibrary'
          Parameter
            Identifier: 'file'
            TypeReference
              Identifier: ' SourceFile'
          BooleanKeyword
        MethodSignature
          Identifier: '
        isSourceFileDefaultLibrary'
          Parameter
            Identifier: 'file'
            TypeReference
              Identifier: ' SourceFile'
          BooleanKeyword
        MethodSignature
          Identifier: '
        /**
         * Calculates the final resolution mode for a given module reference node. This function only returns a result when module resolution
         * settings allow differing resolution between ESM imports and CJS requires, or when a mode is explicitly provided via import attributes,
         * which cause an `import` or `require` condition to be used during resolution regardless of module resolution settings. In absence of
         * overriding attributes, and in modes that support differing resolution, the result indicates the syntax the usage would emit to JavaScript.
         * Some examples:
         *
         * ```ts
         * // tsc foo.mts --module nodenext
         * import {} from "mod";
         * // Result: ESNext - the import emits as ESM due to `impliedNodeFormat` set by .mts file extension
         *
         * // tsc foo.cts --module nodenext
         * import {} from "mod";
         * // Result: CommonJS - the import emits as CJS due to `impliedNodeFormat` set by .cts file extension
         *
         * // tsc foo.ts --module preserve --moduleResolution bundler
         * import {} from "mod";
         * // Result: ESNext - the import emits as ESM due to `--module preserve` and `--moduleResolution bundler`
         * // supports conditional imports/exports
         *
         * // tsc foo.ts --module preserve --moduleResolution node10
         * import {} from "mod";
         * // Result: undefined - the import emits as ESM due to `--module preserve`, but `--moduleResolution node10`
         * // does not support conditional imports/exports
         *
         * // tsc foo.ts --module commonjs --moduleResolution node10
         * import type {} from "mod" with { "resolution-mode": "import" };
         * // Result: ESNext - conditional imports/exports always supported with "resolution-mode" attribute
         * ```
         */
        getModeForUsageLocation'
          Parameter
            Identifier: 'file'
            TypeReference
              Identifier: ' SourceFile'
          Parameter
            Identifier: ' usage'
            TypeReference
              Identifier: ' StringLiteralLike'
          TypeReference
            Identifier: ' ResolutionMode'
        MethodSignature
          Identifier: '
        /**
         * Calculates the final resolution mode for an import at some index within a file's `imports` list. This function only returns a result
         * when module resolution settings allow differing resolution between ESM imports and CJS requires, or when a mode is explicitly provided
         * via import attributes, which cause an `import` or `require` condition to be used during resolution regardless of module resolution
         * settings. In absence of overriding attributes, and in modes that support differing resolution, the result indicates the syntax the
         * usage would emit to JavaScript. Some examples:
         *
         * ```ts
         * // tsc foo.mts --module nodenext
         * import {} from "mod";
         * // Result: ESNext - the import emits as ESM due to `impliedNodeFormat` set by .mts file extension
         *
         * // tsc foo.cts --module nodenext
         * import {} from "mod";
         * // Result: CommonJS - the import emits as CJS due to `impliedNodeFormat` set by .cts file extension
         *
         * // tsc foo.ts --module preserve --moduleResolution bundler
         * import {} from "mod";
         * // Result: ESNext - the import emits as ESM due to `--module preserve` and `--moduleResolution bundler`
         * // supports conditional imports/exports
         *
         * // tsc foo.ts --module preserve --moduleResolution node10
         * import {} from "mod";
         * // Result: undefined - the import emits as ESM due to `--module preserve`, but `--moduleResolution node10`
         * // does not support conditional imports/exports
         *
         * // tsc foo.ts --module commonjs --moduleResolution node10
         * import type {} from "mod" with { "resolution-mode": "import" };
         * // Result: ESNext - conditional imports/exports always supported with "resolution-mode" attribute
         * ```
         */
        getModeForResolutionAtIndex'
          Parameter
            Identifier: 'file'
            TypeReference
              Identifier: ' SourceFile'
          Parameter
            Identifier: ' index'
            NumberKeyword
          TypeReference
            Identifier: ' ResolutionMode'
        MethodSignature
          Identifier: '
        getProjectReferences'
          UnionType
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ProjectReference'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getResolvedProjectReferences'
          UnionType
            TypeOperator
              ArrayType
                ParenthesizedType
                  UnionType
                    TypeReference
                      Identifier: 'ResolvedProjectReference'
                    UndefinedKeyword
            UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' ResolvedProjectReference'
        PropertySignature
          Identifier: '
        commandLine'
          TypeReference
            Identifier: ' ParsedCommandLine'
        PropertySignature
          Identifier: '
        sourceFile'
          TypeReference
            Identifier: ' SourceFile'
        PropertySignature
          Identifier: '
        references'
          QuestionToken
          TypeOperator
            ArrayType
              ParenthesizedType
                UnionType
                  TypeReference
                    Identifier: 'ResolvedProjectReference'
                  UndefinedKeyword
      TypeAliasDeclaration
        Identifier: ' CustomTransformerFactory'
        FunctionType
          Parameter
            Identifier: 'context'
            TypeReference
              Identifier: ' TransformationContext'
          TypeReference
            Identifier: ' CustomTransformer'
      InterfaceDeclaration
        Identifier: ' CustomTransformer'
        MethodSignature
          Identifier: '
        transformSourceFile'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' SourceFile'
          TypeReference
            Identifier: ' SourceFile'
        MethodSignature
          Identifier: '
        transformBundle'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' Bundle'
          TypeReference
            Identifier: ' Bundle'
      InterfaceDeclaration
        Identifier: ' CustomTransformers'
        PropertySignature
          Identifier: '
        /** Custom transformers to evaluate before built-in .js transformations. */
        before'
          QuestionToken
          ArrayType
            ParenthesizedType
              UnionType
                TypeReference
                  Identifier: 'TransformerFactory'
                  TypeReference
                    Identifier: 'SourceFile'
                TypeReference
                  Identifier: ' CustomTransformerFactory'
        PropertySignature
          Identifier: '
        /** Custom transformers to evaluate after built-in .js transformations. */
        after'
          QuestionToken
          ArrayType
            ParenthesizedType
              UnionType
                TypeReference
                  Identifier: 'TransformerFactory'
                  TypeReference
                    Identifier: 'SourceFile'
                TypeReference
                  Identifier: ' CustomTransformerFactory'
        PropertySignature
          Identifier: '
        /** Custom transformers to evaluate after built-in .d.ts transformations. */
        afterDeclarations'
          QuestionToken
          ArrayType
            ParenthesizedType
              UnionType
                TypeReference
                  Identifier: 'TransformerFactory'
                  UnionType
                    TypeReference
                      Identifier: 'Bundle'
                    TypeReference
                      Identifier: ' SourceFile'
                TypeReference
                  Identifier: ' CustomTransformerFactory'
      InterfaceDeclaration
        Identifier: ' SourceMapSpan'
        PropertySignature
          Identifier: '
        /** Line number in the .js file. */
        emittedLine'
          NumberKeyword
        PropertySignature
          Identifier: '
        /** Column number in the .js file. */
        emittedColumn'
          NumberKeyword
        PropertySignature
          Identifier: '
        /** Line number in the .ts file. */
        sourceLine'
          NumberKeyword
        PropertySignature
          Identifier: '
        /** Column number in the .ts file. */
        sourceColumn'
          NumberKeyword
        PropertySignature
          Identifier: '
        /** Optional name (index into names array) associated with this span. */
        nameIndex'
          QuestionToken
          NumberKeyword
        PropertySignature
          Identifier: '
        /** .ts file (index into sources array) associated with this span */
        sourceIndex'
          NumberKeyword
      EnumDeclaration
        Identifier: ' ExitStatus'
        EnumMember
          Identifier: '
        Success'
          NumericLiteral
        EnumMember
          Identifier: '
        DiagnosticsPresent_OutputsSkipped'
          NumericLiteral
        EnumMember
          Identifier: '
        DiagnosticsPresent_OutputsGenerated'
          NumericLiteral
        EnumMember
          Identifier: '
        InvalidProject_OutputsSkipped'
          NumericLiteral
        EnumMember
          Identifier: '
        ProjectReferenceCycle_OutputsSkipped'
          NumericLiteral
      InterfaceDeclaration
        Identifier: ' EmitResult'
        PropertySignature
          Identifier: '
        emitSkipped'
          BooleanKeyword
        PropertySignature
          Identifier: '
        /** Contains declaration emit diagnostics */
        diagnostics'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Diagnostic'
        PropertySignature
          Identifier: '
        emittedFiles'
          QuestionToken
          ArrayType
            StringKeyword
      InterfaceDeclaration
        Identifier: ' TypeChecker'
        MethodSignature
          Identifier: '
        getTypeOfSymbolAtLocation'
          Parameter
            Identifier: 'symbol'
            TypeReference
              Identifier: ' Symbol'
          Parameter
            Identifier: ' node'
            TypeReference
              Identifier: ' Node'
          TypeReference
            Identifier: ' Type'
        MethodSignature
          Identifier: '
        getTypeOfSymbol'
          Parameter
            Identifier: 'symbol'
            TypeReference
              Identifier: ' Symbol'
          TypeReference
            Identifier: ' Type'
        MethodSignature
          Identifier: '
        getDeclaredTypeOfSymbol'
          Parameter
            Identifier: 'symbol'
            TypeReference
              Identifier: ' Symbol'
          TypeReference
            Identifier: ' Type'
        MethodSignature
          Identifier: '
        getPropertiesOfType'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' Type'
          ArrayType
            TypeReference
              Identifier: ' Symbol'
        MethodSignature
          Identifier: '
        getPropertyOfType'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' Type'
          Parameter
            Identifier: ' propertyName'
            StringKeyword
          UnionType
            TypeReference
              Identifier: ' Symbol'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getPrivateIdentifierPropertyOfType'
          Parameter
            Identifier: 'leftType'
            TypeReference
              Identifier: ' Type'
          Parameter
            Identifier: ' name'
            StringKeyword
          Parameter
            Identifier: ' location'
            TypeReference
              Identifier: ' Node'
          UnionType
            TypeReference
              Identifier: ' Symbol'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getIndexInfoOfType'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' Type'
          Parameter
            Identifier: ' kind'
            TypeReference
              Identifier: ' IndexKind'
          UnionType
            TypeReference
              Identifier: ' IndexInfo'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getIndexInfosOfType'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' Type'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' IndexInfo'
        PropertySignature
          Identifier: '
        getIndexInfosOfIndexSymbol'
          FunctionType
            Parameter
              Identifier: 'indexSymbol'
              TypeReference
                Identifier: ' Symbol'
            Parameter
              Identifier: ' siblingSymbols'
              QuestionToken
              UnionType
                ArrayType
                  TypeReference
                    Identifier: ' Symbol'
                UndefinedKeyword
            ArrayType
              TypeReference
                Identifier: ' IndexInfo'
        MethodSignature
          Identifier: '
        getSignaturesOfType'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' Type'
          Parameter
            Identifier: ' kind'
            TypeReference
              Identifier: ' SignatureKind'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Signature'
        MethodSignature
          Identifier: '
        getIndexTypeOfType'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' Type'
          Parameter
            Identifier: ' kind'
            TypeReference
              Identifier: ' IndexKind'
          UnionType
            TypeReference
              Identifier: ' Type'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getBaseTypes'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' InterfaceType'
          ArrayType
            TypeReference
              Identifier: ' BaseType'
        MethodSignature
          Identifier: '
        getBaseTypeOfLiteralType'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' Type'
          TypeReference
            Identifier: ' Type'
        MethodSignature
          Identifier: '
        getWidenedType'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' Type'
          TypeReference
            Identifier: ' Type'
        MethodSignature
          Identifier: '
        /**
         * Gets the "awaited type" of a type.
         *
         * If an expression has a Promise-like type, the "awaited type" of the expression is
         * derived from the type of the first argument of the fulfillment callback for that
         * Promise's `then` method. If the "awaited type" is itself a Promise-like, it is
         * recursively unwrapped in the same manner until a non-promise type is found.
         *
         * If an expression does not have a Promise-like type, its "awaited type" is the type
         * of the expression.
         *
         * If the resulting "awaited type" is a generic object type, then it is wrapped in
         * an `Awaited<T>`.
         *
         * In the event the "awaited type" circularly references itself, or is a non-Promise
         * object-type with a callable `then()` method, an "awaited type" cannot be determined
         * and the value `undefined` will be returned.
         *
         * This is used to reflect the runtime behavior of the `await` keyword.
         */
        getAwaitedType'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' Type'
          UnionType
            TypeReference
              Identifier: ' Type'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getReturnTypeOfSignature'
          Parameter
            Identifier: 'signature'
            TypeReference
              Identifier: ' Signature'
          TypeReference
            Identifier: ' Type'
        MethodSignature
          Identifier: '
        getNullableType'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' Type'
          Parameter
            Identifier: ' flags'
            TypeReference
              Identifier: ' TypeFlags'
          TypeReference
            Identifier: ' Type'
        MethodSignature
          Identifier: '
        getNonNullableType'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' Type'
          TypeReference
            Identifier: ' Type'
        MethodSignature
          Identifier: '
        getTypeArguments'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' TypeReference'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Type'
        MethodSignature
          Identifier: '
        /** Note that the resulting nodes cannot be checked. */
        typeToTypeNode'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' Type'
          Parameter
            Identifier: ' enclosingDeclaration'
            UnionType
              TypeReference
                Identifier: ' Node'
              UndefinedKeyword
          Parameter
            Identifier: ' flags'
            UnionType
              TypeReference
                Identifier: ' NodeBuilderFlags'
              UndefinedKeyword
          UnionType
            TypeReference
              Identifier: ' TypeNode'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        /** Note that the resulting nodes cannot be checked. */
        signatureToSignatureDeclaration'
          Parameter
            Identifier: 'signature'
            TypeReference
              Identifier: ' Signature'
          Parameter
            Identifier: ' kind'
            TypeReference
              Identifier: ' SyntaxKind'
          Parameter
            Identifier: ' enclosingDeclaration'
            UnionType
              TypeReference
                Identifier: ' Node'
              UndefinedKeyword
          Parameter
            Identifier: ' flags'
            UnionType
              TypeReference
                Identifier: ' NodeBuilderFlags'
              UndefinedKeyword
          UnionType
            IntersectionType
              TypeReference
                Identifier: ' SignatureDeclaration'
              TypeLiteral
                PropertySignature
                  Identifier: '
                typeArguments'
                  QuestionToken
                  TypeReference
                    Identifier: ' NodeArray'
                    TypeReference
                      Identifier: 'TypeNode'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        /** Note that the resulting nodes cannot be checked. */
        indexInfoToIndexSignatureDeclaration'
          Parameter
            Identifier: 'indexInfo'
            TypeReference
              Identifier: ' IndexInfo'
          Parameter
            Identifier: ' enclosingDeclaration'
            UnionType
              TypeReference
                Identifier: ' Node'
              UndefinedKeyword
          Parameter
            Identifier: ' flags'
            UnionType
              TypeReference
                Identifier: ' NodeBuilderFlags'
              UndefinedKeyword
          UnionType
            TypeReference
              Identifier: ' IndexSignatureDeclaration'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        /** Note that the resulting nodes cannot be checked. */
        symbolToEntityName'
          Parameter
            Identifier: 'symbol'
            TypeReference
              Identifier: ' Symbol'
          Parameter
            Identifier: ' meaning'
            TypeReference
              Identifier: ' SymbolFlags'
          Parameter
            Identifier: ' enclosingDeclaration'
            UnionType
              TypeReference
                Identifier: ' Node'
              UndefinedKeyword
          Parameter
            Identifier: ' flags'
            UnionType
              TypeReference
                Identifier: ' NodeBuilderFlags'
              UndefinedKeyword
          UnionType
            TypeReference
              Identifier: ' EntityName'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        /** Note that the resulting nodes cannot be checked. */
        symbolToExpression'
          Parameter
            Identifier: 'symbol'
            TypeReference
              Identifier: ' Symbol'
          Parameter
            Identifier: ' meaning'
            TypeReference
              Identifier: ' SymbolFlags'
          Parameter
            Identifier: ' enclosingDeclaration'
            UnionType
              TypeReference
                Identifier: ' Node'
              UndefinedKeyword
          Parameter
            Identifier: ' flags'
            UnionType
              TypeReference
                Identifier: ' NodeBuilderFlags'
              UndefinedKeyword
          UnionType
            TypeReference
              Identifier: ' Expression'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        /** Note that the resulting nodes cannot be checked. */
        symbolToTypeParameterDeclarations'
          Parameter
            Identifier: 'symbol'
            TypeReference
              Identifier: ' Symbol'
          Parameter
            Identifier: ' enclosingDeclaration'
            UnionType
              TypeReference
                Identifier: ' Node'
              UndefinedKeyword
          Parameter
            Identifier: ' flags'
            UnionType
              TypeReference
                Identifier: ' NodeBuilderFlags'
              UndefinedKeyword
          UnionType
            TypeReference
              Identifier: ' NodeArray'
              TypeReference
                Identifier: 'TypeParameterDeclaration'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        /** Note that the resulting nodes cannot be checked. */
        symbolToParameterDeclaration'
          Parameter
            Identifier: 'symbol'
            TypeReference
              Identifier: ' Symbol'
          Parameter
            Identifier: ' enclosingDeclaration'
            UnionType
              TypeReference
                Identifier: ' Node'
              UndefinedKeyword
          Parameter
            Identifier: ' flags'
            UnionType
              TypeReference
                Identifier: ' NodeBuilderFlags'
              UndefinedKeyword
          UnionType
            TypeReference
              Identifier: ' ParameterDeclaration'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        /** Note that the resulting nodes cannot be checked. */
        typeParameterToDeclaration'
          Parameter
            Identifier: 'parameter'
            TypeReference
              Identifier: ' TypeParameter'
          Parameter
            Identifier: ' enclosingDeclaration'
            UnionType
              TypeReference
                Identifier: ' Node'
              UndefinedKeyword
          Parameter
            Identifier: ' flags'
            UnionType
              TypeReference
                Identifier: ' NodeBuilderFlags'
              UndefinedKeyword
          UnionType
            TypeReference
              Identifier: ' TypeParameterDeclaration'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getSymbolsInScope'
          Parameter
            Identifier: 'location'
            TypeReference
              Identifier: ' Node'
          Parameter
            Identifier: ' meaning'
            TypeReference
              Identifier: ' SymbolFlags'
          ArrayType
            TypeReference
              Identifier: ' Symbol'
        MethodSignature
          Identifier: '
        getSymbolAtLocation'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' Node'
          UnionType
            TypeReference
              Identifier: ' Symbol'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getSymbolsOfParameterPropertyDeclaration'
          Parameter
            Identifier: 'parameter'
            TypeReference
              Identifier: ' ParameterDeclaration'
          Parameter
            Identifier: ' parameterName'
            StringKeyword
          ArrayType
            TypeReference
              Identifier: ' Symbol'
        MethodSignature
          Identifier: '
        /**
         * The function returns the value (local variable) symbol of an identifier in the short-hand property assignment.
         * This is necessary as an identifier in short-hand property assignment can contains two meaning: property name and property value.
         */
        getShorthandAssignmentValueSymbol'
          Parameter
            Identifier: 'location'
            UnionType
              TypeReference
                Identifier: ' Node'
              UndefinedKeyword
          UnionType
            TypeReference
              Identifier: ' Symbol'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getExportSpecifierLocalTargetSymbol'
          Parameter
            Identifier: 'location'
            UnionType
              TypeReference
                Identifier: ' ExportSpecifier'
              TypeReference
                Identifier: ' Identifier'
          UnionType
            TypeReference
              Identifier: ' Symbol'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        /**
         * If a symbol is a local symbol with an associated exported symbol, returns the exported symbol.
         * Otherwise returns its input.
         * For example, at `export type T = number;`:
         *     - `getSymbolAtLocation` at the location `T` will return the exported symbol for `T`.
         *     - But the result of `getSymbolsInScope` will contain the *local* symbol for `T`, not the exported symbol.
         *     - Calling `getExportSymbolOfSymbol` on that local symbol will return the exported symbol.
         */
        getExportSymbolOfSymbol'
          Parameter
            Identifier: 'symbol'
            TypeReference
              Identifier: ' Symbol'
          TypeReference
            Identifier: ' Symbol'
        MethodSignature
          Identifier: '
        getPropertySymbolOfDestructuringAssignment'
          Parameter
            Identifier: 'location'
            TypeReference
              Identifier: ' Identifier'
          UnionType
            TypeReference
              Identifier: ' Symbol'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getTypeOfAssignmentPattern'
          Parameter
            Identifier: 'pattern'
            TypeReference
              Identifier: ' AssignmentPattern'
          TypeReference
            Identifier: ' Type'
        MethodSignature
          Identifier: '
        getTypeAtLocation'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' Node'
          TypeReference
            Identifier: ' Type'
        MethodSignature
          Identifier: '
        getTypeFromTypeNode'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' Type'
        MethodSignature
          Identifier: '
        signatureToString'
          Parameter
            Identifier: 'signature'
            TypeReference
              Identifier: ' Signature'
          Parameter
            Identifier: ' enclosingDeclaration'
            QuestionToken
            TypeReference
              Identifier: ' Node'
          Parameter
            Identifier: ' flags'
            QuestionToken
            TypeReference
              Identifier: ' TypeFormatFlags'
          Parameter
            Identifier: ' kind'
            QuestionToken
            TypeReference
              Identifier: ' SignatureKind'
          StringKeyword
        MethodSignature
          Identifier: '
        typeToString'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' Type'
          Parameter
            Identifier: ' enclosingDeclaration'
            QuestionToken
            TypeReference
              Identifier: ' Node'
          Parameter
            Identifier: ' flags'
            QuestionToken
            TypeReference
              Identifier: ' TypeFormatFlags'
          StringKeyword
        MethodSignature
          Identifier: '
        symbolToString'
          Parameter
            Identifier: 'symbol'
            TypeReference
              Identifier: ' Symbol'
          Parameter
            Identifier: ' enclosingDeclaration'
            QuestionToken
            TypeReference
              Identifier: ' Node'
          Parameter
            Identifier: ' meaning'
            QuestionToken
            TypeReference
              Identifier: ' SymbolFlags'
          Parameter
            Identifier: ' flags'
            QuestionToken
            TypeReference
              Identifier: ' SymbolFormatFlags'
          StringKeyword
        MethodSignature
          Identifier: '
        typePredicateToString'
          Parameter
            Identifier: 'predicate'
            TypeReference
              Identifier: ' TypePredicate'
          Parameter
            Identifier: ' enclosingDeclaration'
            QuestionToken
            TypeReference
              Identifier: ' Node'
          Parameter
            Identifier: ' flags'
            QuestionToken
            TypeReference
              Identifier: ' TypeFormatFlags'
          StringKeyword
        MethodSignature
          Identifier: '
        getFullyQualifiedName'
          Parameter
            Identifier: 'symbol'
            TypeReference
              Identifier: ' Symbol'
          StringKeyword
        MethodSignature
          Identifier: '
        getAugmentedPropertiesOfType'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' Type'
          ArrayType
            TypeReference
              Identifier: ' Symbol'
        MethodSignature
          Identifier: '
        getRootSymbols'
          Parameter
            Identifier: 'symbol'
            TypeReference
              Identifier: ' Symbol'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Symbol'
        MethodSignature
          Identifier: '
        getSymbolOfExpando'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' Node'
          Parameter
            Identifier: ' allowDeclaration'
            BooleanKeyword
          UnionType
            TypeReference
              Identifier: ' Symbol'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getContextualType'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' Expression'
          UnionType
            TypeReference
              Identifier: ' Type'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        /**
         * returns unknownSignature in the case of an error.
         * returns undefined if the node is not valid.
         * @param argumentCount Apparent number of arguments, passed in case of a possibly incomplete call. This should come from an ArgumentListInfo. See `signatureHelp.ts`.
         */
        getResolvedSignature'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' CallLikeExpression'
          Parameter
            Identifier: ' candidatesOutArray'
            QuestionToken
            ArrayType
              TypeReference
                Identifier: ' Signature'
          Parameter
            Identifier: ' argumentCount'
            QuestionToken
            NumberKeyword
          UnionType
            TypeReference
              Identifier: ' Signature'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getSignatureFromDeclaration'
          Parameter
            Identifier: 'declaration'
            TypeReference
              Identifier: ' SignatureDeclaration'
          UnionType
            TypeReference
              Identifier: ' Signature'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        isImplementationOfOverload'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' SignatureDeclaration'
          UnionType
            BooleanKeyword
            UndefinedKeyword
        MethodSignature
          Identifier: '
        isUndefinedSymbol'
          Parameter
            Identifier: 'symbol'
            TypeReference
              Identifier: ' Symbol'
          BooleanKeyword
        MethodSignature
          Identifier: '
        isArgumentsSymbol'
          Parameter
            Identifier: 'symbol'
            TypeReference
              Identifier: ' Symbol'
          BooleanKeyword
        MethodSignature
          Identifier: '
        isUnknownSymbol'
          Parameter
            Identifier: 'symbol'
            TypeReference
              Identifier: ' Symbol'
          BooleanKeyword
        MethodSignature
          Identifier: '
        getMergedSymbol'
          Parameter
            Identifier: 'symbol'
            TypeReference
              Identifier: ' Symbol'
          TypeReference
            Identifier: ' Symbol'
        MethodSignature
          Identifier: '
        getConstantValue'
          Parameter
            Identifier: 'node'
            UnionType
              TypeReference
                Identifier: ' EnumMember'
              TypeReference
                Identifier: ' PropertyAccessExpression'
              TypeReference
                Identifier: ' ElementAccessExpression'
          UnionType
            StringKeyword
            NumberKeyword
            UndefinedKeyword
        MethodSignature
          Identifier: '
        isValidPropertyAccess'
          Parameter
            Identifier: 'node'
            UnionType
              TypeReference
                Identifier: ' PropertyAccessExpression'
              TypeReference
                Identifier: ' QualifiedName'
              TypeReference
                Identifier: ' ImportTypeNode'
          Parameter
            Identifier: ' propertyName'
            StringKeyword
          BooleanKeyword
        MethodSignature
          Identifier: '
        /** Follow all aliases to get the original symbol. */
        getAliasedSymbol'
          Parameter
            Identifier: 'symbol'
            TypeReference
              Identifier: ' Symbol'
          TypeReference
            Identifier: ' Symbol'
        MethodSignature
          Identifier: '
        /** Follow a *single* alias to get the immediately aliased symbol. */
        getImmediateAliasedSymbol'
          Parameter
            Identifier: 'symbol'
            TypeReference
              Identifier: ' Symbol'
          UnionType
            TypeReference
              Identifier: ' Symbol'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getExportsOfModule'
          Parameter
            Identifier: 'moduleSymbol'
            TypeReference
              Identifier: ' Symbol'
          ArrayType
            TypeReference
              Identifier: ' Symbol'
        MethodSignature
          Identifier: '
        getJsxIntrinsicTagNamesAt'
          Parameter
            Identifier: 'location'
            TypeReference
              Identifier: ' Node'
          ArrayType
            TypeReference
              Identifier: ' Symbol'
        MethodSignature
          Identifier: '
        isOptionalParameter'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ParameterDeclaration'
          BooleanKeyword
        MethodSignature
          Identifier: '
        getAmbientModules'
          ArrayType
            TypeReference
              Identifier: ' Symbol'
        MethodSignature
          Identifier: '
        tryGetMemberInModuleExports'
          Parameter
            Identifier: 'memberName'
            StringKeyword
          Parameter
            Identifier: ' moduleSymbol'
            TypeReference
              Identifier: ' Symbol'
          UnionType
            TypeReference
              Identifier: ' Symbol'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getApparentType'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' Type'
          TypeReference
            Identifier: ' Type'
        MethodSignature
          Identifier: '
        getBaseConstraintOfType'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' Type'
          UnionType
            TypeReference
              Identifier: ' Type'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getDefaultFromTypeParameter'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' Type'
          UnionType
            TypeReference
              Identifier: ' Type'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        /**
         * Gets the intrinsic `any` type. There are multiple types that act as `any` used internally in the compiler,
         * so the type returned by this function should not be used in equality checks to determine if another type
         * is `any`. Instead, use `type.flags & TypeFlags.Any`.
         */
        getAnyType'
          TypeReference
            Identifier: ' Type'
        MethodSignature
          Identifier: '
        getStringType'
          TypeReference
            Identifier: ' Type'
        MethodSignature
          Identifier: '
        getStringLiteralType'
          Parameter
            Identifier: 'value'
            StringKeyword
          TypeReference
            Identifier: ' StringLiteralType'
        MethodSignature
          Identifier: '
        getNumberType'
          TypeReference
            Identifier: ' Type'
        MethodSignature
          Identifier: '
        getNumberLiteralType'
          Parameter
            Identifier: 'value'
            NumberKeyword
          TypeReference
            Identifier: ' NumberLiteralType'
        MethodSignature
          Identifier: '
        getBigIntType'
          TypeReference
            Identifier: ' Type'
        MethodSignature
          Identifier: '
        getBigIntLiteralType'
          Parameter
            Identifier: 'value'
            TypeReference
              Identifier: ' PseudoBigInt'
          TypeReference
            Identifier: ' BigIntLiteralType'
        MethodSignature
          Identifier: '
        getBooleanType'
          TypeReference
            Identifier: ' Type'
        MethodSignature
          Identifier: '
        getFalseType'
          TypeReference
            Identifier: ' Type'
        MethodSignature
          Identifier: '
        getTrueType'
          TypeReference
            Identifier: ' Type'
        MethodSignature
          Identifier: '
        getVoidType'
          TypeReference
            Identifier: ' Type'
        MethodSignature
          Identifier: '
        /**
         * Gets the intrinsic `undefined` type. There are multiple types that act as `undefined` used internally in the compiler
         * depending on compiler options, so the type returned by this function should not be used in equality checks to determine
         * if another type is `undefined`. Instead, use `type.flags & TypeFlags.Undefined`.
         */
        getUndefinedType'
          TypeReference
            Identifier: ' Type'
        MethodSignature
          Identifier: '
        /**
         * Gets the intrinsic `null` type. There are multiple types that act as `null` used internally in the compiler,
         * so the type returned by this function should not be used in equality checks to determine if another type
         * is `null`. Instead, use `type.flags & TypeFlags.Null`.
         */
        getNullType'
          TypeReference
            Identifier: ' Type'
        MethodSignature
          Identifier: '
        getESSymbolType'
          TypeReference
            Identifier: ' Type'
        MethodSignature
          Identifier: '
        /**
         * Gets the intrinsic `never` type. There are multiple types that act as `never` used internally in the compiler,
         * so the type returned by this function should not be used in equality checks to determine if another type
         * is `never`. Instead, use `type.flags & TypeFlags.Never`.
         */
        getNeverType'
          TypeReference
            Identifier: ' Type'
        MethodSignature
          Identifier: '
        /**
         * Returns true if the "source" type is assignable to the "target" type.
         *
         * ```ts
         * declare const abcLiteral: ts.Type; // Type of "abc"
         * declare const stringType: ts.Type; // Type of string
         *
         * isTypeAssignableTo(abcLiteral, abcLiteral); // true; "abc" is assignable to "abc"
         * isTypeAssignableTo(abcLiteral, stringType); // true; "abc" is assignable to string
         * isTypeAssignableTo(stringType, abcLiteral); // false; string is not assignable to "abc"
         * isTypeAssignableTo(stringType, stringType); // true; string is assignable to string
         * ```
         */
        isTypeAssignableTo'
          Parameter
            Identifier: 'source'
            TypeReference
              Identifier: ' Type'
          Parameter
            Identifier: ' target'
            TypeReference
              Identifier: ' Type'
          BooleanKeyword
        MethodSignature
          Identifier: '
        /**
         * True if this type is the `Array` or `ReadonlyArray` type from lib.d.ts.
         * This function will _not_ return true if passed a type which
         * extends `Array` (for example, the TypeScript AST's `NodeArray` type).
         */
        isArrayType'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' Type'
          BooleanKeyword
        MethodSignature
          Identifier: '
        /**
         * True if this type is a tuple type. This function will _not_ return true if
         * passed a type which extends from a tuple.
         */
        isTupleType'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' Type'
          BooleanKeyword
        MethodSignature
          Identifier: '
        /**
         * True if this type is assignable to `ReadonlyArray<any>`.
         */
        isArrayLikeType'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' Type'
          BooleanKeyword
        MethodSignature
          Identifier: '
        resolveName'
          Parameter
            Identifier: 'name'
            StringKeyword
          Parameter
            Identifier: ' location'
            UnionType
              TypeReference
                Identifier: ' Node'
              UndefinedKeyword
          Parameter
            Identifier: ' meaning'
            TypeReference
              Identifier: ' SymbolFlags'
          Parameter
            Identifier: ' excludeGlobals'
            BooleanKeyword
          UnionType
            TypeReference
              Identifier: ' Symbol'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getTypePredicateOfSignature'
          Parameter
            Identifier: 'signature'
            TypeReference
              Identifier: ' Signature'
          UnionType
            TypeReference
              Identifier: ' TypePredicate'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        /**
         * Depending on the operation performed, it may be appropriate to throw away the checker
         * if the cancellation token is triggered. Typically, if it is used for error checking
         * and the operation is cancelled, then it should be discarded, otherwise it is safe to keep.
         */
        runWithCancellationToken'
          TypeParameter
            Identifier: 'T'
          Parameter
            Identifier: 'token'
            TypeReference
              Identifier: ' CancellationToken'
          Parameter
            Identifier: ' cb'
            FunctionType
              Parameter
                Identifier: 'checker'
                TypeReference
                  Identifier: ' TypeChecker'
              TypeReference
                Identifier: ' T'
          TypeReference
            Identifier: ' T'
      EnumDeclaration
        Identifier: ' NodeBuilderFlags'
        EnumMember
          Identifier: '
        None'
          NumericLiteral
        EnumMember
          Identifier: '
        NoTruncation'
          NumericLiteral
        EnumMember
          Identifier: '
        WriteArrayAsGenericType'
          NumericLiteral
        EnumMember
          Identifier: '
        GenerateNamesForShadowedTypeParams'
          NumericLiteral
        EnumMember
          Identifier: '
        UseStructuralFallback'
          NumericLiteral
        EnumMember
          Identifier: '
        ForbidIndexedAccessSymbolReferences'
          NumericLiteral
        EnumMember
          Identifier: '
        WriteTypeArgumentsOfSignature'
          NumericLiteral
        EnumMember
          Identifier: '
        UseFullyQualifiedType'
          NumericLiteral
        EnumMember
          Identifier: '
        UseOnlyExternalAliasing'
          NumericLiteral
        EnumMember
          Identifier: '
        SuppressAnyReturnType'
          NumericLiteral
        EnumMember
          Identifier: '
        WriteTypeParametersInQualifiedName'
          NumericLiteral
        EnumMember
          Identifier: '
        MultilineObjectLiterals'
          NumericLiteral
        EnumMember
          Identifier: '
        WriteClassExpressionAsTypeLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        UseTypeOfFunction'
          NumericLiteral
        EnumMember
          Identifier: '
        OmitParameterModifiers'
          NumericLiteral
        EnumMember
          Identifier: '
        UseAliasDefinedOutsideCurrentScope'
          NumericLiteral
        EnumMember
          Identifier: '
        UseSingleQuotesForStringLiteralType'
          NumericLiteral
        EnumMember
          Identifier: '
        NoTypeReduction'
          NumericLiteral
        EnumMember
          Identifier: '
        OmitThisParameter'
          NumericLiteral
        EnumMember
          Identifier: '
        AllowThisInObjectLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        AllowQualifiedNameInPlaceOfIdentifier'
          NumericLiteral
        EnumMember
          Identifier: '
        AllowAnonymousIdentifier'
          NumericLiteral
        EnumMember
          Identifier: '
        AllowEmptyUnionOrIntersection'
          NumericLiteral
        EnumMember
          Identifier: '
        AllowEmptyTuple'
          NumericLiteral
        EnumMember
          Identifier: '
        AllowUniqueESSymbolType'
          NumericLiteral
        EnumMember
          Identifier: '
        AllowEmptyIndexInfoType'
          NumericLiteral
        EnumMember
          Identifier: '
        AllowNodeModulesRelativePaths'
          NumericLiteral
        EnumMember
          Identifier: '
        IgnoreErrors'
          NumericLiteral
        EnumMember
          Identifier: '
        InObjectTypeLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        InTypeAlias'
          NumericLiteral
        EnumMember
          Identifier: '
        InInitialEntityName'
          NumericLiteral
      EnumDeclaration
        Identifier: ' TypeFormatFlags'
        EnumMember
          Identifier: '
        None'
          NumericLiteral
        EnumMember
          Identifier: '
        NoTruncation'
          NumericLiteral
        EnumMember
          Identifier: '
        WriteArrayAsGenericType'
          NumericLiteral
        EnumMember
          Identifier: '
        GenerateNamesForShadowedTypeParams'
          NumericLiteral
        EnumMember
          Identifier: '
        UseStructuralFallback'
          NumericLiteral
        EnumMember
          Identifier: '
        WriteTypeArgumentsOfSignature'
          NumericLiteral
        EnumMember
          Identifier: '
        UseFullyQualifiedType'
          NumericLiteral
        EnumMember
          Identifier: '
        SuppressAnyReturnType'
          NumericLiteral
        EnumMember
          Identifier: '
        MultilineObjectLiterals'
          NumericLiteral
        EnumMember
          Identifier: '
        WriteClassExpressionAsTypeLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        UseTypeOfFunction'
          NumericLiteral
        EnumMember
          Identifier: '
        OmitParameterModifiers'
          NumericLiteral
        EnumMember
          Identifier: '
        UseAliasDefinedOutsideCurrentScope'
          NumericLiteral
        EnumMember
          Identifier: '
        UseSingleQuotesForStringLiteralType'
          NumericLiteral
        EnumMember
          Identifier: '
        NoTypeReduction'
          NumericLiteral
        EnumMember
          Identifier: '
        OmitThisParameter'
          NumericLiteral
        EnumMember
          Identifier: '
        AllowUniqueESSymbolType'
          NumericLiteral
        EnumMember
          Identifier: '
        AddUndefined'
          NumericLiteral
        EnumMember
          Identifier: '
        WriteArrowStyleSignature'
          NumericLiteral
        EnumMember
          Identifier: '
        InArrayType'
          NumericLiteral
        EnumMember
          Identifier: '
        InElementType'
          NumericLiteral
        EnumMember
          Identifier: '
        InFirstTypeArgument'
          NumericLiteral
        EnumMember
          Identifier: '
        InTypeAlias'
          NumericLiteral
        EnumMember
          Identifier: '
        NodeBuilderFlagsMask'
          NumericLiteral
      EnumDeclaration
        Identifier: ' SymbolFormatFlags'
        EnumMember
          Identifier: '
        None'
          NumericLiteral
        EnumMember
          Identifier: '
        WriteTypeParametersOrArguments'
          NumericLiteral
        EnumMember
          Identifier: '
        UseOnlyExternalAliasing'
          NumericLiteral
        EnumMember
          Identifier: '
        AllowAnyNodeKind'
          NumericLiteral
        EnumMember
          Identifier: '
        UseAliasDefinedOutsideCurrentScope'
          NumericLiteral
      EnumDeclaration
        Identifier: ' TypePredicateKind'
        EnumMember
          Identifier: '
        This'
          NumericLiteral
        EnumMember
          Identifier: '
        Identifier'
          NumericLiteral
        EnumMember
          Identifier: '
        AssertsThis'
          NumericLiteral
        EnumMember
          Identifier: '
        AssertsIdentifier'
          NumericLiteral
      InterfaceDeclaration
        Identifier: ' TypePredicateBase'
        PropertySignature
          Identifier: '
        kind'
          TypeReference
            Identifier: ' TypePredicateKind'
        PropertySignature
          Identifier: '
        type'
          UnionType
            TypeReference
              Identifier: ' Type'
            UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' ThisTypePredicate'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TypePredicateBase'
        PropertySignature
          Identifier: '
        kind'
          TypeReference
            QualifiedName
              Identifier: ' TypePredicateKind'
              Identifier: 'This'
        PropertySignature
          Identifier: '
        parameterName'
          UndefinedKeyword
        PropertySignature
          Identifier: '
        parameterIndex'
          UndefinedKeyword
        PropertySignature
          Identifier: '
        type'
          TypeReference
            Identifier: ' Type'
      InterfaceDeclaration
        Identifier: ' IdentifierTypePredicate'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TypePredicateBase'
        PropertySignature
          Identifier: '
        kind'
          TypeReference
            QualifiedName
              Identifier: ' TypePredicateKind'
              Identifier: 'Identifier'
        PropertySignature
          Identifier: '
        parameterName'
          StringKeyword
        PropertySignature
          Identifier: '
        parameterIndex'
          NumberKeyword
        PropertySignature
          Identifier: '
        type'
          TypeReference
            Identifier: ' Type'
      InterfaceDeclaration
        Identifier: ' AssertsThisTypePredicate'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TypePredicateBase'
        PropertySignature
          Identifier: '
        kind'
          TypeReference
            QualifiedName
              Identifier: ' TypePredicateKind'
              Identifier: 'AssertsThis'
        PropertySignature
          Identifier: '
        parameterName'
          UndefinedKeyword
        PropertySignature
          Identifier: '
        parameterIndex'
          UndefinedKeyword
        PropertySignature
          Identifier: '
        type'
          UnionType
            TypeReference
              Identifier: ' Type'
            UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' AssertsIdentifierTypePredicate'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TypePredicateBase'
        PropertySignature
          Identifier: '
        kind'
          TypeReference
            QualifiedName
              Identifier: ' TypePredicateKind'
              Identifier: 'AssertsIdentifier'
        PropertySignature
          Identifier: '
        parameterName'
          StringKeyword
        PropertySignature
          Identifier: '
        parameterIndex'
          NumberKeyword
        PropertySignature
          Identifier: '
        type'
          UnionType
            TypeReference
              Identifier: ' Type'
            UndefinedKeyword
      TypeAliasDeclaration
        Identifier: ' TypePredicate'
        UnionType
          TypeReference
            Identifier: ' ThisTypePredicate'
          TypeReference
            Identifier: ' IdentifierTypePredicate'
          TypeReference
            Identifier: ' AssertsThisTypePredicate'
          TypeReference
            Identifier: ' AssertsIdentifierTypePredicate'
      EnumDeclaration
        Identifier: ' SymbolFlags'
        EnumMember
          Identifier: '
        None'
          NumericLiteral
        EnumMember
          Identifier: '
        FunctionScopedVariable'
          NumericLiteral
        EnumMember
          Identifier: '
        BlockScopedVariable'
          NumericLiteral
        EnumMember
          Identifier: '
        Property'
          NumericLiteral
        EnumMember
          Identifier: '
        EnumMember'
          NumericLiteral
        EnumMember
          Identifier: '
        Function'
          NumericLiteral
        EnumMember
          Identifier: '
        Class'
          NumericLiteral
        EnumMember
          Identifier: '
        Interface'
          NumericLiteral
        EnumMember
          Identifier: '
        ConstEnum'
          NumericLiteral
        EnumMember
          Identifier: '
        RegularEnum'
          NumericLiteral
        EnumMember
          Identifier: '
        ValueModule'
          NumericLiteral
        EnumMember
          Identifier: '
        NamespaceModule'
          NumericLiteral
        EnumMember
          Identifier: '
        TypeLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        ObjectLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        Method'
          NumericLiteral
        EnumMember
          Identifier: '
        Constructor'
          NumericLiteral
        EnumMember
          Identifier: '
        GetAccessor'
          NumericLiteral
        EnumMember
          Identifier: '
        SetAccessor'
          NumericLiteral
        EnumMember
          Identifier: '
        Signature'
          NumericLiteral
        EnumMember
          Identifier: '
        TypeParameter'
          NumericLiteral
        EnumMember
          Identifier: '
        TypeAlias'
          NumericLiteral
        EnumMember
          Identifier: '
        ExportValue'
          NumericLiteral
        EnumMember
          Identifier: '
        Alias'
          NumericLiteral
        EnumMember
          Identifier: '
        Prototype'
          NumericLiteral
        EnumMember
          Identifier: '
        ExportStar'
          NumericLiteral
        EnumMember
          Identifier: '
        Optional'
          NumericLiteral
        EnumMember
          Identifier: '
        Transient'
          NumericLiteral
        EnumMember
          Identifier: '
        Assignment'
          NumericLiteral
        EnumMember
          Identifier: '
        ModuleExports'
          NumericLiteral
        EnumMember
          Identifier: '
        All'
          PrefixUnaryExpression
            NumericLiteral
        EnumMember
          Identifier: '
        Enum'
          NumericLiteral
        EnumMember
          Identifier: '
        Variable'
          NumericLiteral
        EnumMember
          Identifier: '
        Value'
          NumericLiteral
        EnumMember
          Identifier: '
        Type'
          NumericLiteral
        EnumMember
          Identifier: '
        Namespace'
          NumericLiteral
        EnumMember
          Identifier: '
        Module'
          NumericLiteral
        EnumMember
          Identifier: '
        Accessor'
          NumericLiteral
        EnumMember
          Identifier: '
        FunctionScopedVariableExcludes'
          NumericLiteral
        EnumMember
          Identifier: '
        BlockScopedVariableExcludes'
          NumericLiteral
        EnumMember
          Identifier: '
        ParameterExcludes'
          NumericLiteral
        EnumMember
          Identifier: '
        PropertyExcludes'
          NumericLiteral
        EnumMember
          Identifier: '
        EnumMemberExcludes'
          NumericLiteral
        EnumMember
          Identifier: '
        FunctionExcludes'
          NumericLiteral
        EnumMember
          Identifier: '
        ClassExcludes'
          NumericLiteral
        EnumMember
          Identifier: '
        InterfaceExcludes'
          NumericLiteral
        EnumMember
          Identifier: '
        RegularEnumExcludes'
          NumericLiteral
        EnumMember
          Identifier: '
        ConstEnumExcludes'
          NumericLiteral
        EnumMember
          Identifier: '
        ValueModuleExcludes'
          NumericLiteral
        EnumMember
          Identifier: '
        NamespaceModuleExcludes'
          NumericLiteral
        EnumMember
          Identifier: '
        MethodExcludes'
          NumericLiteral
        EnumMember
          Identifier: '
        GetAccessorExcludes'
          NumericLiteral
        EnumMember
          Identifier: '
        SetAccessorExcludes'
          NumericLiteral
        EnumMember
          Identifier: '
        AccessorExcludes'
          NumericLiteral
        EnumMember
          Identifier: '
        TypeParameterExcludes'
          NumericLiteral
        EnumMember
          Identifier: '
        TypeAliasExcludes'
          NumericLiteral
        EnumMember
          Identifier: '
        AliasExcludes'
          NumericLiteral
        EnumMember
          Identifier: '
        ModuleMember'
          NumericLiteral
        EnumMember
          Identifier: '
        ExportHasLocal'
          NumericLiteral
        EnumMember
          Identifier: '
        BlockScoped'
          NumericLiteral
        EnumMember
          Identifier: '
        PropertyOrAccessor'
          NumericLiteral
        EnumMember
          Identifier: '
        ClassMember'
          NumericLiteral
      InterfaceDeclaration
        Identifier: ' Symbol'
        PropertySignature
          Identifier: '
        flags'
          TypeReference
            Identifier: ' SymbolFlags'
        PropertySignature
          Identifier: '
        escapedName'
          TypeReference
            Identifier: ' __String'
        PropertySignature
          Identifier: '
        declarations'
          QuestionToken
          ArrayType
            TypeReference
              Identifier: ' Declaration'
        PropertySignature
          Identifier: '
        valueDeclaration'
          QuestionToken
          TypeReference
            Identifier: ' Declaration'
        PropertySignature
          Identifier: '
        members'
          QuestionToken
          TypeReference
            Identifier: ' SymbolTable'
        PropertySignature
          Identifier: '
        exports'
          QuestionToken
          TypeReference
            Identifier: ' SymbolTable'
        PropertySignature
          Identifier: '
        globalExports'
          QuestionToken
          TypeReference
            Identifier: ' SymbolTable'
      InterfaceDeclaration
        Identifier: ' Symbol'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          StringKeyword
        MethodSignature
          Identifier: '
        getFlags'
          TypeReference
            Identifier: ' SymbolFlags'
        MethodSignature
          Identifier: '
        getEscapedName'
          TypeReference
            Identifier: ' __String'
        MethodSignature
          Identifier: '
        getName'
          StringKeyword
        MethodSignature
          Identifier: '
        getDeclarations'
          UnionType
            ArrayType
              TypeReference
                Identifier: ' Declaration'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getDocumentationComment'
          Parameter
            Identifier: 'typeChecker'
            UnionType
              TypeReference
                Identifier: ' TypeChecker'
              UndefinedKeyword
          ArrayType
            TypeReference
              Identifier: ' SymbolDisplayPart'
        MethodSignature
          Identifier: '
        getJsDocTags'
          Parameter
            Identifier: 'checker'
            QuestionToken
            TypeReference
              Identifier: ' TypeChecker'
          ArrayType
            TypeReference
              Identifier: ' JSDocTagInfo'
      EnumDeclaration
        Identifier: ' InternalSymbolName'
        EnumMember
          Identifier: '
        Call'
          StringLiteral
        EnumMember
          Identifier: '
        Constructor'
          StringLiteral
        EnumMember
          Identifier: '
        New'
          StringLiteral
        EnumMember
          Identifier: '
        Index'
          StringLiteral
        EnumMember
          Identifier: '
        ExportStar'
          StringLiteral
        EnumMember
          Identifier: '
        Global'
          StringLiteral
        EnumMember
          Identifier: '
        Missing'
          StringLiteral
        EnumMember
          Identifier: '
        Type'
          StringLiteral
        EnumMember
          Identifier: '
        Object'
          StringLiteral
        EnumMember
          Identifier: '
        JSXAttributes'
          StringLiteral
        EnumMember
          Identifier: '
        Class'
          StringLiteral
        EnumMember
          Identifier: '
        Function'
          StringLiteral
        EnumMember
          Identifier: '
        Computed'
          StringLiteral
        EnumMember
          Identifier: '
        Resolving'
          StringLiteral
        EnumMember
          Identifier: '
        ExportEquals'
          StringLiteral
        EnumMember
          Identifier: '
        Default'
          StringLiteral
        EnumMember
          Identifier: '
        This'
          StringLiteral
        EnumMember
          Identifier: '
        InstantiationExpression'
          StringLiteral
        EnumMember
          Identifier: '
        ImportAttributes'
          StringLiteral
      TypeAliasDeclaration
        Identifier: ' __String'
        UnionType
          ParenthesizedType
            IntersectionType
              StringKeyword
              TypeLiteral
                PropertySignature
                  Identifier: '
            __escapedIdentifier'
                  VoidKeyword
          ParenthesizedType
            IntersectionType
              VoidKeyword
              TypeLiteral
                PropertySignature
                  Identifier: '
            __escapedIdentifier'
                  VoidKeyword
          TypeReference
            Identifier: ' InternalSymbolName'
      TypeAliasDeclaration
        Identifier: ' ReadonlyUnderscoreEscapedMap'
        TypeParameter
          Identifier: 'T'
        TypeReference
          Identifier: ' ReadonlyMap'
          TypeReference
            Identifier: '__String'
          TypeReference
            Identifier: ' T'
      TypeAliasDeclaration
        Identifier: ' UnderscoreEscapedMap'
        TypeParameter
          Identifier: 'T'
        TypeReference
          Identifier: ' Map'
          TypeReference
            Identifier: '__String'
          TypeReference
            Identifier: ' T'
      TypeAliasDeclaration
        Identifier: ' SymbolTable'
        TypeReference
          Identifier: ' Map'
          TypeReference
            Identifier: '__String'
          TypeReference
            Identifier: ' Symbol'
      EnumDeclaration
        Identifier: ' TypeFlags'
        EnumMember
          Identifier: '
        Any'
          NumericLiteral
        EnumMember
          Identifier: '
        Unknown'
          NumericLiteral
        EnumMember
          Identifier: '
        String'
          NumericLiteral
        EnumMember
          Identifier: '
        Number'
          NumericLiteral
        EnumMember
          Identifier: '
        Boolean'
          NumericLiteral
        EnumMember
          Identifier: '
        Enum'
          NumericLiteral
        EnumMember
          Identifier: '
        BigInt'
          NumericLiteral
        EnumMember
          Identifier: '
        StringLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        NumberLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        BooleanLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        EnumLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        BigIntLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        ESSymbol'
          NumericLiteral
        EnumMember
          Identifier: '
        UniqueESSymbol'
          NumericLiteral
        EnumMember
          Identifier: '
        Void'
          NumericLiteral
        EnumMember
          Identifier: '
        Undefined'
          NumericLiteral
        EnumMember
          Identifier: '
        Null'
          NumericLiteral
        EnumMember
          Identifier: '
        Never'
          NumericLiteral
        EnumMember
          Identifier: '
        TypeParameter'
          NumericLiteral
        EnumMember
          Identifier: '
        Object'
          NumericLiteral
        EnumMember
          Identifier: '
        Union'
          NumericLiteral
        EnumMember
          Identifier: '
        Intersection'
          NumericLiteral
        EnumMember
          Identifier: '
        Index'
          NumericLiteral
        EnumMember
          Identifier: '
        IndexedAccess'
          NumericLiteral
        EnumMember
          Identifier: '
        Conditional'
          NumericLiteral
        EnumMember
          Identifier: '
        Substitution'
          NumericLiteral
        EnumMember
          Identifier: '
        NonPrimitive'
          NumericLiteral
        EnumMember
          Identifier: '
        TemplateLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        StringMapping'
          NumericLiteral
        EnumMember
          Identifier: '
        Literal'
          NumericLiteral
        EnumMember
          Identifier: '
        Unit'
          NumericLiteral
        EnumMember
          Identifier: '
        Freshable'
          NumericLiteral
        EnumMember
          Identifier: '
        StringOrNumberLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        PossiblyFalsy'
          NumericLiteral
        EnumMember
          Identifier: '
        StringLike'
          NumericLiteral
        EnumMember
          Identifier: '
        NumberLike'
          NumericLiteral
        EnumMember
          Identifier: '
        BigIntLike'
          NumericLiteral
        EnumMember
          Identifier: '
        BooleanLike'
          NumericLiteral
        EnumMember
          Identifier: '
        EnumLike'
          NumericLiteral
        EnumMember
          Identifier: '
        ESSymbolLike'
          NumericLiteral
        EnumMember
          Identifier: '
        VoidLike'
          NumericLiteral
        EnumMember
          Identifier: '
        UnionOrIntersection'
          NumericLiteral
        EnumMember
          Identifier: '
        StructuredType'
          NumericLiteral
        EnumMember
          Identifier: '
        TypeVariable'
          NumericLiteral
        EnumMember
          Identifier: '
        InstantiableNonPrimitive'
          NumericLiteral
        EnumMember
          Identifier: '
        InstantiablePrimitive'
          NumericLiteral
        EnumMember
          Identifier: '
        Instantiable'
          NumericLiteral
        EnumMember
          Identifier: '
        StructuredOrInstantiable'
          NumericLiteral
        EnumMember
          Identifier: '
        Narrowable'
          NumericLiteral
      TypeAliasDeclaration
        Identifier: ' DestructuringPattern'
        UnionType
          TypeReference
            Identifier: ' BindingPattern'
          TypeReference
            Identifier: ' ObjectLiteralExpression'
          TypeReference
            Identifier: ' ArrayLiteralExpression'
      InterfaceDeclaration
        Identifier: ' Type'
        PropertySignature
          Identifier: '
        flags'
          TypeReference
            Identifier: ' TypeFlags'
        PropertySignature
          Identifier: '
        symbol'
          TypeReference
            Identifier: ' Symbol'
        PropertySignature
          Identifier: '
        pattern'
          QuestionToken
          TypeReference
            Identifier: ' DestructuringPattern'
        PropertySignature
          Identifier: '
        aliasSymbol'
          QuestionToken
          TypeReference
            Identifier: ' Symbol'
        PropertySignature
          Identifier: '
        aliasTypeArguments'
          QuestionToken
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Type'
      InterfaceDeclaration
        Identifier: ' Type'
        MethodSignature
          Identifier: '
        getFlags'
          TypeReference
            Identifier: ' TypeFlags'
        MethodSignature
          Identifier: '
        getSymbol'
          UnionType
            TypeReference
              Identifier: ' Symbol'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getProperties'
          ArrayType
            TypeReference
              Identifier: ' Symbol'
        MethodSignature
          Identifier: '
        getProperty'
          Parameter
            Identifier: 'propertyName'
            StringKeyword
          UnionType
            TypeReference
              Identifier: ' Symbol'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getApparentProperties'
          ArrayType
            TypeReference
              Identifier: ' Symbol'
        MethodSignature
          Identifier: '
        getCallSignatures'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Signature'
        MethodSignature
          Identifier: '
        getConstructSignatures'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Signature'
        MethodSignature
          Identifier: '
        getStringIndexType'
          UnionType
            TypeReference
              Identifier: ' Type'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getNumberIndexType'
          UnionType
            TypeReference
              Identifier: ' Type'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getBaseTypes'
          UnionType
            ArrayType
              TypeReference
                Identifier: ' BaseType'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getNonNullableType'
          TypeReference
            Identifier: ' Type'
        MethodSignature
          Identifier: '
        getConstraint'
          UnionType
            TypeReference
              Identifier: ' Type'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getDefault'
          UnionType
            TypeReference
              Identifier: ' Type'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        isUnion'
          TypePredicate
            ThisType
            TypeReference
              Identifier: ' UnionType'
        MethodSignature
          Identifier: '
        isIntersection'
          TypePredicate
            ThisType
            TypeReference
              Identifier: ' IntersectionType'
        MethodSignature
          Identifier: '
        isUnionOrIntersection'
          TypePredicate
            ThisType
            TypeReference
              Identifier: ' UnionOrIntersectionType'
        MethodSignature
          Identifier: '
        isLiteral'
          TypePredicate
            ThisType
            TypeReference
              Identifier: ' LiteralType'
        MethodSignature
          Identifier: '
        isStringLiteral'
          TypePredicate
            ThisType
            TypeReference
              Identifier: ' StringLiteralType'
        MethodSignature
          Identifier: '
        isNumberLiteral'
          TypePredicate
            ThisType
            TypeReference
              Identifier: ' NumberLiteralType'
        MethodSignature
          Identifier: '
        isTypeParameter'
          TypePredicate
            ThisType
            TypeReference
              Identifier: ' TypeParameter'
        MethodSignature
          Identifier: '
        isClassOrInterface'
          TypePredicate
            ThisType
            TypeReference
              Identifier: ' InterfaceType'
        MethodSignature
          Identifier: '
        isClass'
          TypePredicate
            ThisType
            TypeReference
              Identifier: ' InterfaceType'
        MethodSignature
          Identifier: '
        isIndexType'
          TypePredicate
            ThisType
            TypeReference
              Identifier: ' IndexType'
      InterfaceDeclaration
        Identifier: ' FreshableType'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Type'
        PropertySignature
          Identifier: '
        freshType'
          TypeReference
            Identifier: ' FreshableType'
        PropertySignature
          Identifier: '
        regularType'
          TypeReference
            Identifier: ' FreshableType'
      InterfaceDeclaration
        Identifier: ' LiteralType'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' FreshableType'
        PropertySignature
          Identifier: '
        value'
          UnionType
            StringKeyword
            NumberKeyword
            TypeReference
              Identifier: ' PseudoBigInt'
      InterfaceDeclaration
        Identifier: ' UniqueESSymbolType'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Type'
        PropertySignature
          Identifier: '
        symbol'
          TypeReference
            Identifier: ' Symbol'
        PropertySignature
          Identifier: '
        escapedName'
          TypeReference
            Identifier: ' __String'
      InterfaceDeclaration
        Identifier: ' StringLiteralType'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' LiteralType'
        PropertySignature
          Identifier: '
        value'
          StringKeyword
      InterfaceDeclaration
        Identifier: ' NumberLiteralType'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' LiteralType'
        PropertySignature
          Identifier: '
        value'
          NumberKeyword
      InterfaceDeclaration
        Identifier: ' BigIntLiteralType'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' LiteralType'
        PropertySignature
          Identifier: '
        value'
          TypeReference
            Identifier: ' PseudoBigInt'
      InterfaceDeclaration
        Identifier: ' EnumType'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' FreshableType'
      EnumDeclaration
        Identifier: ' ObjectFlags'
        EnumMember
          Identifier: '
        None'
          NumericLiteral
        EnumMember
          Identifier: '
        Class'
          NumericLiteral
        EnumMember
          Identifier: '
        Interface'
          NumericLiteral
        EnumMember
          Identifier: '
        Reference'
          NumericLiteral
        EnumMember
          Identifier: '
        Tuple'
          NumericLiteral
        EnumMember
          Identifier: '
        Anonymous'
          NumericLiteral
        EnumMember
          Identifier: '
        Mapped'
          NumericLiteral
        EnumMember
          Identifier: '
        Instantiated'
          NumericLiteral
        EnumMember
          Identifier: '
        ObjectLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        EvolvingArray'
          NumericLiteral
        EnumMember
          Identifier: '
        ObjectLiteralPatternWithComputedProperties'
          NumericLiteral
        EnumMember
          Identifier: '
        ReverseMapped'
          NumericLiteral
        EnumMember
          Identifier: '
        JsxAttributes'
          NumericLiteral
        EnumMember
          Identifier: '
        JSLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        FreshLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        ArrayLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        ClassOrInterface'
          NumericLiteral
        EnumMember
          Identifier: '
        ContainsSpread'
          NumericLiteral
        EnumMember
          Identifier: '
        ObjectRestType'
          NumericLiteral
        EnumMember
          Identifier: '
        InstantiationExpressionType'
          NumericLiteral
        EnumMember
          Identifier: '
        SingleSignatureType'
          NumericLiteral
      InterfaceDeclaration
        Identifier: ' ObjectType'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Type'
        PropertySignature
          Identifier: '
        objectFlags'
          TypeReference
            Identifier: ' ObjectFlags'
      InterfaceDeclaration
        Identifier: ' InterfaceType'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ObjectType'
        PropertySignature
          Identifier: '
        typeParameters'
          UnionType
            ArrayType
              TypeReference
                Identifier: ' TypeParameter'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        outerTypeParameters'
          UnionType
            ArrayType
              TypeReference
                Identifier: ' TypeParameter'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        localTypeParameters'
          UnionType
            ArrayType
              TypeReference
                Identifier: ' TypeParameter'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        thisType'
          UnionType
            TypeReference
              Identifier: ' TypeParameter'
            UndefinedKeyword
      TypeAliasDeclaration
        Identifier: ' BaseType'
        UnionType
          TypeReference
            Identifier: ' ObjectType'
          TypeReference
            Identifier: ' IntersectionType'
          TypeReference
            Identifier: ' TypeVariable'
      InterfaceDeclaration
        Identifier: ' InterfaceTypeWithDeclaredMembers'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' InterfaceType'
        PropertySignature
          Identifier: '
        declaredProperties'
          ArrayType
            TypeReference
              Identifier: ' Symbol'
        PropertySignature
          Identifier: '
        declaredCallSignatures'
          ArrayType
            TypeReference
              Identifier: ' Signature'
        PropertySignature
          Identifier: '
        declaredConstructSignatures'
          ArrayType
            TypeReference
              Identifier: ' Signature'
        PropertySignature
          Identifier: '
        declaredIndexInfos'
          ArrayType
            TypeReference
              Identifier: ' IndexInfo'
      InterfaceDeclaration
        Identifier: ' TypeReference'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ObjectType'
        PropertySignature
          Identifier: '
        target'
          TypeReference
            Identifier: ' GenericType'
        PropertySignature
          Identifier: '
        node'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' TypeReferenceNode'
            TypeReference
              Identifier: ' ArrayTypeNode'
            TypeReference
              Identifier: ' TupleTypeNode'
      InterfaceDeclaration
        Identifier: ' TypeReference'
        PropertySignature
          Identifier: '
        typeArguments'
          QuestionToken
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Type'
      InterfaceDeclaration
        Identifier: ' DeferredTypeReference'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TypeReference'
      InterfaceDeclaration
        Identifier: ' GenericType'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' InterfaceType'
          ExpressionWithTypeArguments
            Identifier: ' TypeReference'
      EnumDeclaration
        Identifier: ' ElementFlags'
        EnumMember
          Identifier: '
        Required'
          NumericLiteral
        EnumMember
          Identifier: '
        Optional'
          NumericLiteral
        EnumMember
          Identifier: '
        Rest'
          NumericLiteral
        EnumMember
          Identifier: '
        Variadic'
          NumericLiteral
        EnumMember
          Identifier: '
        Fixed'
          NumericLiteral
        EnumMember
          Identifier: '
        Variable'
          NumericLiteral
        EnumMember
          Identifier: '
        NonRequired'
          NumericLiteral
        EnumMember
          Identifier: '
        NonRest'
          NumericLiteral
      InterfaceDeclaration
        Identifier: ' TupleType'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' GenericType'
        PropertySignature
          Identifier: '
        elementFlags'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' ElementFlags'
        PropertySignature
          Identifier: '
        /** Number of required or variadic elements */
        minLength'
          NumberKeyword
        PropertySignature
          Identifier: '
        /** Number of initial required or optional elements */
        fixedLength'
          NumberKeyword
        PropertySignature
          Identifier: '
        /**
         * True if tuple has any rest or variadic elements
         *
         * @deprecated Use `.combinedFlags & ElementFlags.Variable` instead
         */
        hasRestElement'
          BooleanKeyword
        PropertySignature
          Identifier: '
        combinedFlags'
          TypeReference
            Identifier: ' ElementFlags'
        PropertySignature
          Identifier: '
        readonly'
          BooleanKeyword
        PropertySignature
          Identifier: '
        labeledElementDeclarations'
          QuestionToken
          TypeOperator
            ArrayType
              ParenthesizedType
                UnionType
                  TypeReference
                    Identifier: 'NamedTupleMember'
                  TypeReference
                    Identifier: ' ParameterDeclaration'
                  UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' TupleTypeReference'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TypeReference'
        PropertySignature
          Identifier: '
        target'
          TypeReference
            Identifier: ' TupleType'
      InterfaceDeclaration
        Identifier: ' UnionOrIntersectionType'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Type'
        PropertySignature
          Identifier: '
        types'
          ArrayType
            TypeReference
              Identifier: ' Type'
      InterfaceDeclaration
        Identifier: ' UnionType'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' UnionOrIntersectionType'
      InterfaceDeclaration
        Identifier: ' IntersectionType'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' UnionOrIntersectionType'
      TypeAliasDeclaration
        Identifier: ' StructuredType'
        UnionType
          TypeReference
            Identifier: ' ObjectType'
          TypeReference
            Identifier: ' UnionType'
          TypeReference
            Identifier: ' IntersectionType'
      InterfaceDeclaration
        Identifier: ' EvolvingArrayType'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ObjectType'
        PropertySignature
          Identifier: '
        elementType'
          TypeReference
            Identifier: ' Type'
        PropertySignature
          Identifier: '
        finalArrayType'
          QuestionToken
          TypeReference
            Identifier: ' Type'
      InterfaceDeclaration
        Identifier: ' InstantiableType'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Type'
      InterfaceDeclaration
        Identifier: ' TypeParameter'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' InstantiableType'
      InterfaceDeclaration
        Identifier: ' IndexedAccessType'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' InstantiableType'
        PropertySignature
          Identifier: '
        objectType'
          TypeReference
            Identifier: ' Type'
        PropertySignature
          Identifier: '
        indexType'
          TypeReference
            Identifier: ' Type'
        PropertySignature
          Identifier: '
        constraint'
          QuestionToken
          TypeReference
            Identifier: ' Type'
        PropertySignature
          Identifier: '
        simplifiedForReading'
          QuestionToken
          TypeReference
            Identifier: ' Type'
        PropertySignature
          Identifier: '
        simplifiedForWriting'
          QuestionToken
          TypeReference
            Identifier: ' Type'
      TypeAliasDeclaration
        Identifier: ' TypeVariable'
        UnionType
          TypeReference
            Identifier: ' TypeParameter'
          TypeReference
            Identifier: ' IndexedAccessType'
      InterfaceDeclaration
        Identifier: ' IndexType'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' InstantiableType'
        PropertySignature
          Identifier: '
        type'
          UnionType
            TypeReference
              Identifier: ' InstantiableType'
            TypeReference
              Identifier: ' UnionOrIntersectionType'
      InterfaceDeclaration
        Identifier: ' ConditionalRoot'
        PropertySignature
          Identifier: '
        node'
          TypeReference
            Identifier: ' ConditionalTypeNode'
        PropertySignature
          Identifier: '
        checkType'
          TypeReference
            Identifier: ' Type'
        PropertySignature
          Identifier: '
        extendsType'
          TypeReference
            Identifier: ' Type'
        PropertySignature
          Identifier: '
        isDistributive'
          BooleanKeyword
        PropertySignature
          Identifier: '
        inferTypeParameters'
          QuestionToken
          ArrayType
            TypeReference
              Identifier: ' TypeParameter'
        PropertySignature
          Identifier: '
        outerTypeParameters'
          QuestionToken
          ArrayType
            TypeReference
              Identifier: ' TypeParameter'
        PropertySignature
          Identifier: '
        instantiations'
          QuestionToken
          TypeReference
            Identifier: ' Map'
            StringKeyword
            TypeReference
              Identifier: ' Type'
        PropertySignature
          Identifier: '
        aliasSymbol'
          QuestionToken
          TypeReference
            Identifier: ' Symbol'
        PropertySignature
          Identifier: '
        aliasTypeArguments'
          QuestionToken
          ArrayType
            TypeReference
              Identifier: ' Type'
      InterfaceDeclaration
        Identifier: ' ConditionalType'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' InstantiableType'
        PropertySignature
          Identifier: '
        root'
          TypeReference
            Identifier: ' ConditionalRoot'
        PropertySignature
          Identifier: '
        checkType'
          TypeReference
            Identifier: ' Type'
        PropertySignature
          Identifier: '
        extendsType'
          TypeReference
            Identifier: ' Type'
        PropertySignature
          Identifier: '
        resolvedTrueType'
          QuestionToken
          TypeReference
            Identifier: ' Type'
        PropertySignature
          Identifier: '
        resolvedFalseType'
          QuestionToken
          TypeReference
            Identifier: ' Type'
      InterfaceDeclaration
        Identifier: ' TemplateLiteralType'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' InstantiableType'
        PropertySignature
          Identifier: '
        texts'
          TypeOperator
            ArrayType
              StringKeyword
        PropertySignature
          Identifier: '
        types'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Type'
      InterfaceDeclaration
        Identifier: ' StringMappingType'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' InstantiableType'
        PropertySignature
          Identifier: '
        symbol'
          TypeReference
            Identifier: ' Symbol'
        PropertySignature
          Identifier: '
        type'
          TypeReference
            Identifier: ' Type'
      InterfaceDeclaration
        Identifier: ' SubstitutionType'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' InstantiableType'
        PropertySignature
          Identifier: '
        objectFlags'
          TypeReference
            Identifier: ' ObjectFlags'
        PropertySignature
          Identifier: '
        baseType'
          TypeReference
            Identifier: ' Type'
        PropertySignature
          Identifier: '
        constraint'
          TypeReference
            Identifier: ' Type'
      EnumDeclaration
        Identifier: ' SignatureKind'
        EnumMember
          Identifier: '
        Call'
          NumericLiteral
        EnumMember
          Identifier: '
        Construct'
          NumericLiteral
      InterfaceDeclaration
        Identifier: ' Signature'
        PropertySignature
          Identifier: '
        declaration'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' SignatureDeclaration'
            TypeReference
              Identifier: ' JSDocSignature'
        PropertySignature
          Identifier: '
        typeParameters'
          QuestionToken
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' TypeParameter'
        PropertySignature
          Identifier: '
        parameters'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Symbol'
        PropertySignature
          Identifier: '
        thisParameter'
          QuestionToken
          TypeReference
            Identifier: ' Symbol'
      InterfaceDeclaration
        Identifier: ' Signature'
        MethodSignature
          Identifier: '
        getDeclaration'
          TypeReference
            Identifier: ' SignatureDeclaration'
        MethodSignature
          Identifier: '
        getTypeParameters'
          UnionType
            ArrayType
              TypeReference
                Identifier: ' TypeParameter'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getParameters'
          ArrayType
            TypeReference
              Identifier: ' Symbol'
        MethodSignature
          Identifier: '
        getTypeParameterAtPosition'
          Parameter
            Identifier: 'pos'
            NumberKeyword
          TypeReference
            Identifier: ' Type'
        MethodSignature
          Identifier: '
        getReturnType'
          TypeReference
            Identifier: ' Type'
        MethodSignature
          Identifier: '
        getDocumentationComment'
          Parameter
            Identifier: 'typeChecker'
            UnionType
              TypeReference
                Identifier: ' TypeChecker'
              UndefinedKeyword
          ArrayType
            TypeReference
              Identifier: ' SymbolDisplayPart'
        MethodSignature
          Identifier: '
        getJsDocTags'
          ArrayType
            TypeReference
              Identifier: ' JSDocTagInfo'
      EnumDeclaration
        Identifier: ' IndexKind'
        EnumMember
          Identifier: '
        String'
          NumericLiteral
        EnumMember
          Identifier: '
        Number'
          NumericLiteral
      InterfaceDeclaration
        Identifier: ' IndexInfo'
        PropertySignature
          Identifier: '
        keyType'
          TypeReference
            Identifier: ' Type'
        PropertySignature
          Identifier: '
        type'
          TypeReference
            Identifier: ' Type'
        PropertySignature
          Identifier: '
        isReadonly'
          BooleanKeyword
        PropertySignature
          Identifier: '
        declaration'
          QuestionToken
          TypeReference
            Identifier: ' IndexSignatureDeclaration'
      EnumDeclaration
        Identifier: ' InferencePriority'
        EnumMember
          Identifier: '
        None'
          NumericLiteral
        EnumMember
          Identifier: '
        NakedTypeVariable'
          NumericLiteral
        EnumMember
          Identifier: '
        SpeculativeTuple'
          NumericLiteral
        EnumMember
          Identifier: '
        SubstituteSource'
          NumericLiteral
        EnumMember
          Identifier: '
        HomomorphicMappedType'
          NumericLiteral
        EnumMember
          Identifier: '
        PartialHomomorphicMappedType'
          NumericLiteral
        EnumMember
          Identifier: '
        MappedTypeConstraint'
          NumericLiteral
        EnumMember
          Identifier: '
        ContravariantConditional'
          NumericLiteral
        EnumMember
          Identifier: '
        ReturnType'
          NumericLiteral
        EnumMember
          Identifier: '
        LiteralKeyof'
          NumericLiteral
        EnumMember
          Identifier: '
        NoConstraints'
          NumericLiteral
        EnumMember
          Identifier: '
        AlwaysStrict'
          NumericLiteral
        EnumMember
          Identifier: '
        MaxValue'
          NumericLiteral
        EnumMember
          Identifier: '
        PriorityImpliesCombination'
          NumericLiteral
        EnumMember
          Identifier: '
        Circularity'
          PrefixUnaryExpression
            NumericLiteral
      InterfaceDeclaration
        Identifier: ' FileExtensionInfo'
        PropertySignature
          Identifier: '
        extension'
          StringKeyword
        PropertySignature
          Identifier: '
        isMixedContent'
          BooleanKeyword
        PropertySignature
          Identifier: '
        scriptKind'
          QuestionToken
          TypeReference
            Identifier: ' ScriptKind'
      InterfaceDeclaration
        Identifier: ' DiagnosticMessage'
        PropertySignature
          Identifier: '
        key'
          StringKeyword
        PropertySignature
          Identifier: '
        category'
          TypeReference
            Identifier: ' DiagnosticCategory'
        PropertySignature
          Identifier: '
        code'
          NumberKeyword
        PropertySignature
          Identifier: '
        message'
          StringKeyword
        PropertySignature
          Identifier: '
        reportsUnnecessary'
          QuestionToken
          TypeLiteral
        PropertySignature
          Identifier: '
        reportsDeprecated'
          QuestionToken
          TypeLiteral
      InterfaceDeclaration
        Identifier: ' DiagnosticMessageChain'
        PropertySignature
          Identifier: '
        messageText'
          StringKeyword
        PropertySignature
          Identifier: '
        category'
          TypeReference
            Identifier: ' DiagnosticCategory'
        PropertySignature
          Identifier: '
        code'
          NumberKeyword
        PropertySignature
          Identifier: '
        next'
          QuestionToken
          ArrayType
            TypeReference
              Identifier: ' DiagnosticMessageChain'
      InterfaceDeclaration
        Identifier: ' Diagnostic'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' DiagnosticRelatedInformation'
        PropertySignature
          Identifier: '
        /** May store more in future. For now, this will simply be `true` to indicate when a diagnostic is an unused-identifier diagnostic. */
        reportsUnnecessary'
          QuestionToken
          TypeLiteral
        PropertySignature
          Identifier: '
        reportsDeprecated'
          QuestionToken
          TypeLiteral
        PropertySignature
          Identifier: '
        source'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        relatedInformation'
          QuestionToken
          ArrayType
            TypeReference
              Identifier: ' DiagnosticRelatedInformation'
      InterfaceDeclaration
        Identifier: ' DiagnosticRelatedInformation'
        PropertySignature
          Identifier: '
        category'
          TypeReference
            Identifier: ' DiagnosticCategory'
        PropertySignature
          Identifier: '
        code'
          NumberKeyword
        PropertySignature
          Identifier: '
        file'
          UnionType
            TypeReference
              Identifier: ' SourceFile'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        start'
          UnionType
            NumberKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        length'
          UnionType
            NumberKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        messageText'
          UnionType
            StringKeyword
            TypeReference
              Identifier: ' DiagnosticMessageChain'
      InterfaceDeclaration
        Identifier: ' DiagnosticWithLocation'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Diagnostic'
        PropertySignature
          Identifier: '
        file'
          TypeReference
            Identifier: ' SourceFile'
        PropertySignature
          Identifier: '
        start'
          NumberKeyword
        PropertySignature
          Identifier: '
        length'
          NumberKeyword
      EnumDeclaration
        Identifier: ' DiagnosticCategory'
        EnumMember
          Identifier: '
        Warning'
          NumericLiteral
        EnumMember
          Identifier: '
        Error'
          NumericLiteral
        EnumMember
          Identifier: '
        Suggestion'
          NumericLiteral
        EnumMember
          Identifier: '
        Message'
          NumericLiteral
      EnumDeclaration
        Identifier: ' ModuleResolutionKind'
        EnumMember
          Identifier: '
        Classic'
          NumericLiteral
        EnumMember
          Identifier: '
        /**
         * @deprecated
         * `NodeJs` was renamed to `Node10` to better reflect the version of Node that it targets.
         * Use the new name or consider switching to a modern module resolution target.
         */
        NodeJs'
          NumericLiteral
        EnumMember
          Identifier: '
        Node10'
          NumericLiteral
        EnumMember
          Identifier: '
        Node16'
          NumericLiteral
        EnumMember
          Identifier: '
        NodeNext'
          NumericLiteral
        EnumMember
          Identifier: '
        Bundler'
          NumericLiteral
      EnumDeclaration
        Identifier: ' ModuleDetectionKind'
        EnumMember
          Identifier: '
        /**
         * Files with imports, exports and/or import.meta are considered modules
         */
        Legacy'
          NumericLiteral
        EnumMember
          Identifier: '
        /**
         * Legacy, but also files with jsx under react-jsx or react-jsxdev and esm mode files under moduleResolution: node16+
         */
        Auto'
          NumericLiteral
        EnumMember
          Identifier: '
        /**
         * Consider all non-declaration files modules, regardless of present syntax
         */
        Force'
          NumericLiteral
      InterfaceDeclaration
        Identifier: ' PluginImport'
        PropertySignature
          Identifier: '
        name'
          StringKeyword
      InterfaceDeclaration
        Identifier: ' ProjectReference'
        PropertySignature
          Identifier: '
        /** A normalized path on disk */
        path'
          StringKeyword
        PropertySignature
          Identifier: '
        /** The path as the user originally wrote it */
        originalPath'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        /** @deprecated */
        prepend'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        /** True if it is intended that this reference form a circularity */
        circular'
          QuestionToken
          BooleanKeyword
      EnumDeclaration
        Identifier: ' WatchFileKind'
        EnumMember
          Identifier: '
        FixedPollingInterval'
          NumericLiteral
        EnumMember
          Identifier: '
        PriorityPollingInterval'
          NumericLiteral
        EnumMember
          Identifier: '
        DynamicPriorityPolling'
          NumericLiteral
        EnumMember
          Identifier: '
        FixedChunkSizePolling'
          NumericLiteral
        EnumMember
          Identifier: '
        UseFsEvents'
          NumericLiteral
        EnumMember
          Identifier: '
        UseFsEventsOnParentDirectory'
          NumericLiteral
      EnumDeclaration
        Identifier: ' WatchDirectoryKind'
        EnumMember
          Identifier: '
        UseFsEvents'
          NumericLiteral
        EnumMember
          Identifier: '
        FixedPollingInterval'
          NumericLiteral
        EnumMember
          Identifier: '
        DynamicPriorityPolling'
          NumericLiteral
        EnumMember
          Identifier: '
        FixedChunkSizePolling'
          NumericLiteral
      EnumDeclaration
        Identifier: ' PollingWatchKind'
        EnumMember
          Identifier: '
        FixedInterval'
          NumericLiteral
        EnumMember
          Identifier: '
        PriorityInterval'
          NumericLiteral
        EnumMember
          Identifier: '
        DynamicPriority'
          NumericLiteral
        EnumMember
          Identifier: '
        FixedChunkSize'
          NumericLiteral
      TypeAliasDeclaration
        Identifier: ' CompilerOptionsValue'
        UnionType
          StringKeyword
          NumberKeyword
          BooleanKeyword
          ArrayType
            ParenthesizedType
              UnionType
                StringKeyword
                NumberKeyword
          ArrayType
            StringKeyword
          TypeReference
            Identifier: ' MapLike'
            ArrayType
              StringKeyword
          ArrayType
            TypeReference
              Identifier: ' PluginImport'
          ArrayType
            TypeReference
              Identifier: ' ProjectReference'
          LiteralType
            NullKeyword
          UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' CompilerOptions'
        PropertySignature
          Identifier: '
        allowImportingTsExtensions'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        allowJs'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        allowArbitraryExtensions'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        allowSyntheticDefaultImports'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        allowUmdGlobalAccess'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        allowUnreachableCode'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        allowUnusedLabels'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        alwaysStrict'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        baseUrl'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        /** @deprecated */
        charset'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        checkJs'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        customConditions'
          QuestionToken
          ArrayType
            StringKeyword
        PropertySignature
          Identifier: '
        declaration'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        declarationMap'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        emitDeclarationOnly'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        declarationDir'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        disableSizeLimit'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        disableSourceOfProjectReferenceRedirect'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        disableSolutionSearching'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        disableReferencedProjectLoad'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        downlevelIteration'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        emitBOM'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        emitDecoratorMetadata'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        exactOptionalPropertyTypes'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        experimentalDecorators'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        forceConsistentCasingInFileNames'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        ignoreDeprecations'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        importHelpers'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        /** @deprecated */
        importsNotUsedAsValues'
          QuestionToken
          TypeReference
            Identifier: ' ImportsNotUsedAsValues'
        PropertySignature
          Identifier: '
        inlineSourceMap'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        inlineSources'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        isolatedModules'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        isolatedDeclarations'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        jsx'
          QuestionToken
          TypeReference
            Identifier: ' JsxEmit'
        PropertySignature
          Identifier: '
        /** @deprecated */
        keyofStringsOnly'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        lib'
          QuestionToken
          ArrayType
            StringKeyword
        PropertySignature
          Identifier: '
        locale'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        mapRoot'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        maxNodeModuleJsDepth'
          QuestionToken
          NumberKeyword
        PropertySignature
          Identifier: '
        module'
          QuestionToken
          TypeReference
            Identifier: ' ModuleKind'
        PropertySignature
          Identifier: '
        moduleResolution'
          QuestionToken
          TypeReference
            Identifier: ' ModuleResolutionKind'
        PropertySignature
          Identifier: '
        moduleSuffixes'
          QuestionToken
          ArrayType
            StringKeyword
        PropertySignature
          Identifier: '
        moduleDetection'
          QuestionToken
          TypeReference
            Identifier: ' ModuleDetectionKind'
        PropertySignature
          Identifier: '
        newLine'
          QuestionToken
          TypeReference
            Identifier: ' NewLineKind'
        PropertySignature
          Identifier: '
        noEmit'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        noCheck'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        noEmitHelpers'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        noEmitOnError'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        noErrorTruncation'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        noFallthroughCasesInSwitch'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        noImplicitAny'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        noImplicitReturns'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        noImplicitThis'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        /** @deprecated */
        noStrictGenericChecks'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        noUnusedLocals'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        noUnusedParameters'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        /** @deprecated */
        noImplicitUseStrict'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        noPropertyAccessFromIndexSignature'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        assumeChangesOnlyAffectDirectDependencies'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        noLib'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        noResolve'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        noUncheckedIndexedAccess'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        /** @deprecated */
        out'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        outDir'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        outFile'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        paths'
          QuestionToken
          TypeReference
            Identifier: ' MapLike'
            ArrayType
              StringKeyword
        PropertySignature
          Identifier: '
        preserveConstEnums'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        noImplicitOverride'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        preserveSymlinks'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        /** @deprecated */
        preserveValueImports'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        project'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        reactNamespace'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        jsxFactory'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        jsxFragmentFactory'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        jsxImportSource'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        composite'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        incremental'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        tsBuildInfoFile'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        removeComments'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        resolvePackageJsonExports'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        resolvePackageJsonImports'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        rootDir'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        rootDirs'
          QuestionToken
          ArrayType
            StringKeyword
        PropertySignature
          Identifier: '
        skipLibCheck'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        skipDefaultLibCheck'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        sourceMap'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        sourceRoot'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        strict'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        strictFunctionTypes'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        strictBindCallApply'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        strictNullChecks'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        strictPropertyInitialization'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        strictBuiltinIteratorReturn'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        stripInternal'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        /** @deprecated */
        suppressExcessPropertyErrors'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        /** @deprecated */
        suppressImplicitAnyIndexErrors'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        target'
          QuestionToken
          TypeReference
            Identifier: ' ScriptTarget'
        PropertySignature
          Identifier: '
        traceResolution'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        useUnknownInCatchVariables'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        noUncheckedSideEffectImports'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        resolveJsonModule'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        types'
          QuestionToken
          ArrayType
            StringKeyword
        PropertySignature
          Identifier: '
        /** Paths used to compute primary types search locations */
        typeRoots'
          QuestionToken
          ArrayType
            StringKeyword
        PropertySignature
          Identifier: '
        verbatimModuleSyntax'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        esModuleInterop'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        useDefineForClassFields'
          QuestionToken
          BooleanKeyword
        IndexSignature
          Parameter
            Identifier: 'option'
            StringKeyword
          UnionType
            TypeReference
              Identifier: ' CompilerOptionsValue'
            TypeReference
              Identifier: ' TsConfigSourceFile'
            UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' WatchOptions'
        PropertySignature
          Identifier: '
        watchFile'
          QuestionToken
          TypeReference
            Identifier: ' WatchFileKind'
        PropertySignature
          Identifier: '
        watchDirectory'
          QuestionToken
          TypeReference
            Identifier: ' WatchDirectoryKind'
        PropertySignature
          Identifier: '
        fallbackPolling'
          QuestionToken
          TypeReference
            Identifier: ' PollingWatchKind'
        PropertySignature
          Identifier: '
        synchronousWatchDirectory'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        excludeDirectories'
          QuestionToken
          ArrayType
            StringKeyword
        PropertySignature
          Identifier: '
        excludeFiles'
          QuestionToken
          ArrayType
            StringKeyword
        IndexSignature
          Parameter
            Identifier: 'option'
            StringKeyword
          UnionType
            TypeReference
              Identifier: ' CompilerOptionsValue'
            UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' TypeAcquisition'
        PropertySignature
          Identifier: '
        enable'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        include'
          QuestionToken
          ArrayType
            StringKeyword
        PropertySignature
          Identifier: '
        exclude'
          QuestionToken
          ArrayType
            StringKeyword
        PropertySignature
          Identifier: '
        disableFilenameBasedTypeAcquisition'
          QuestionToken
          BooleanKeyword
        IndexSignature
          Parameter
            Identifier: 'option'
            StringKeyword
          UnionType
            TypeReference
              Identifier: ' CompilerOptionsValue'
            UndefinedKeyword
      EnumDeclaration
        Identifier: ' ModuleKind'
        EnumMember
          Identifier: '
        None'
          NumericLiteral
        EnumMember
          Identifier: '
        CommonJS'
          NumericLiteral
        EnumMember
          Identifier: '
        AMD'
          NumericLiteral
        EnumMember
          Identifier: '
        UMD'
          NumericLiteral
        EnumMember
          Identifier: '
        System'
          NumericLiteral
        EnumMember
          Identifier: '
        ES2015'
          NumericLiteral
        EnumMember
          Identifier: '
        ES2020'
          NumericLiteral
        EnumMember
          Identifier: '
        ES2022'
          NumericLiteral
        EnumMember
          Identifier: '
        ESNext'
          NumericLiteral
        EnumMember
          Identifier: '
        Node16'
          NumericLiteral
        EnumMember
          Identifier: '
        NodeNext'
          NumericLiteral
        EnumMember
          Identifier: '
        Preserve'
          NumericLiteral
      EnumDeclaration
        Identifier: ' JsxEmit'
        EnumMember
          Identifier: '
        None'
          NumericLiteral
        EnumMember
          Identifier: '
        Preserve'
          NumericLiteral
        EnumMember
          Identifier: '
        React'
          NumericLiteral
        EnumMember
          Identifier: '
        ReactNative'
          NumericLiteral
        EnumMember
          Identifier: '
        ReactJSX'
          NumericLiteral
        EnumMember
          Identifier: '
        ReactJSXDev'
          NumericLiteral
      EnumDeclaration
        Identifier: ' ImportsNotUsedAsValues'
        EnumMember
          Identifier: '
        Remove'
          NumericLiteral
        EnumMember
          Identifier: '
        Preserve'
          NumericLiteral
        EnumMember
          Identifier: '
        Error'
          NumericLiteral
      EnumDeclaration
        Identifier: ' NewLineKind'
        EnumMember
          Identifier: '
        CarriageReturnLineFeed'
          NumericLiteral
        EnumMember
          Identifier: '
        LineFeed'
          NumericLiteral
      InterfaceDeclaration
        Identifier: ' LineAndCharacter'
        PropertySignature
          Identifier: '
        /** 0-based. */
        line'
          NumberKeyword
        PropertySignature
          Identifier: '
        character'
          NumberKeyword
      EnumDeclaration
        Identifier: ' ScriptKind'
        EnumMember
          Identifier: '
        Unknown'
          NumericLiteral
        EnumMember
          Identifier: '
        JS'
          NumericLiteral
        EnumMember
          Identifier: '
        JSX'
          NumericLiteral
        EnumMember
          Identifier: '
        TS'
          NumericLiteral
        EnumMember
          Identifier: '
        TSX'
          NumericLiteral
        EnumMember
          Identifier: '
        External'
          NumericLiteral
        EnumMember
          Identifier: '
        JSON'
          NumericLiteral
        EnumMember
          Identifier: '
        /**
         * Used on extensions that doesn't define the ScriptKind but the content defines it.
         * Deferred extensions are going to be included in all project contexts.
         */
        Deferred'
          NumericLiteral
      EnumDeclaration
        Identifier: ' ScriptTarget'
        EnumMember
          Identifier: '
        /** @deprecated */
        ES3'
          NumericLiteral
        EnumMember
          Identifier: '
        ES5'
          NumericLiteral
        EnumMember
          Identifier: '
        ES2015'
          NumericLiteral
        EnumMember
          Identifier: '
        ES2016'
          NumericLiteral
        EnumMember
          Identifier: '
        ES2017'
          NumericLiteral
        EnumMember
          Identifier: '
        ES2018'
          NumericLiteral
        EnumMember
          Identifier: '
        ES2019'
          NumericLiteral
        EnumMember
          Identifier: '
        ES2020'
          NumericLiteral
        EnumMember
          Identifier: '
        ES2021'
          NumericLiteral
        EnumMember
          Identifier: '
        ES2022'
          NumericLiteral
        EnumMember
          Identifier: '
        ES2023'
          NumericLiteral
        EnumMember
          Identifier: '
        ESNext'
          NumericLiteral
        EnumMember
          Identifier: '
        JSON'
          NumericLiteral
        EnumMember
          Identifier: '
        Latest'
          NumericLiteral
      EnumDeclaration
        Identifier: ' LanguageVariant'
        EnumMember
          Identifier: '
        Standard'
          NumericLiteral
        EnumMember
          Identifier: '
        JSX'
          NumericLiteral
      InterfaceDeclaration
        Identifier: ' ParsedCommandLine'
        PropertySignature
          Identifier: '
        options'
          TypeReference
            Identifier: ' CompilerOptions'
        PropertySignature
          Identifier: '
        typeAcquisition'
          QuestionToken
          TypeReference
            Identifier: ' TypeAcquisition'
        PropertySignature
          Identifier: '
        fileNames'
          ArrayType
            StringKeyword
        PropertySignature
          Identifier: '
        projectReferences'
          QuestionToken
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' ProjectReference'
        PropertySignature
          Identifier: '
        watchOptions'
          QuestionToken
          TypeReference
            Identifier: ' WatchOptions'
        PropertySignature
          Identifier: '
        raw'
          QuestionToken
          AnyKeyword
        PropertySignature
          Identifier: '
        errors'
          ArrayType
            TypeReference
              Identifier: ' Diagnostic'
        PropertySignature
          Identifier: '
        wildcardDirectories'
          QuestionToken
          TypeReference
            Identifier: ' MapLike'
            TypeReference
              Identifier: 'WatchDirectoryFlags'
        PropertySignature
          Identifier: '
        compileOnSave'
          QuestionToken
          BooleanKeyword
      EnumDeclaration
        Identifier: ' WatchDirectoryFlags'
        EnumMember
          Identifier: '
        None'
          NumericLiteral
        EnumMember
          Identifier: '
        Recursive'
          NumericLiteral
      InterfaceDeclaration
        Identifier: ' CreateProgramOptions'
        PropertySignature
          Identifier: '
        rootNames'
          TypeOperator
            ArrayType
              StringKeyword
        PropertySignature
          Identifier: '
        options'
          TypeReference
            Identifier: ' CompilerOptions'
        PropertySignature
          Identifier: '
        projectReferences'
          QuestionToken
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' ProjectReference'
        PropertySignature
          Identifier: '
        host'
          QuestionToken
          TypeReference
            Identifier: ' CompilerHost'
        PropertySignature
          Identifier: '
        oldProgram'
          QuestionToken
          TypeReference
            Identifier: ' Program'
        PropertySignature
          Identifier: '
        configFileParsingDiagnostics'
          QuestionToken
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Diagnostic'
      InterfaceDeclaration
        Identifier: ' ModuleResolutionHost'
        MethodSignature
          Identifier: '
        fileExists'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          BooleanKeyword
        MethodSignature
          Identifier: '
        readFile'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          UnionType
            StringKeyword
            UndefinedKeyword
        MethodSignature
          Identifier: '
        trace'
          QuestionToken
          Parameter
            Identifier: 's'
            StringKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        directoryExists'
          QuestionToken
          Parameter
            Identifier: 'directoryName'
            StringKeyword
          BooleanKeyword
        MethodSignature
          Identifier: '
        /**
         * Resolve a symbolic link.
         * @see https://nodejs.org/api/fs.html#fs_fs_realpathsync_path_options
         */
        realpath'
          QuestionToken
          Parameter
            Identifier: 'path'
            StringKeyword
          StringKeyword
        MethodSignature
          Identifier: '
        getCurrentDirectory'
          QuestionToken
          StringKeyword
        MethodSignature
          Identifier: '
        getDirectories'
          QuestionToken
          Parameter
            Identifier: 'path'
            StringKeyword
          ArrayType
            StringKeyword
        PropertySignature
          Identifier: '
        useCaseSensitiveFileNames'
          QuestionToken
          UnionType
            BooleanKeyword
            ParenthesizedType
              FunctionType
                BooleanKeyword
            UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' MinimalResolutionCacheHost'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ModuleResolutionHost'
        MethodSignature
          Identifier: '
        getCompilationSettings'
          TypeReference
            Identifier: ' CompilerOptions'
        MethodSignature
          Identifier: '
        getCompilerHost'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' CompilerHost'
            UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' ResolvedModule'
        PropertySignature
          Identifier: '
        /** Path of the file the module was resolved to. */
        resolvedFileName'
          StringKeyword
        PropertySignature
          Identifier: '
        /** True if `resolvedFileName` comes from `node_modules`. */
        isExternalLibraryImport'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        /**
         * True if the original module reference used a .ts extension to refer directly to a .ts file,
         * which should produce an error during checking if emit is enabled.
         */
        resolvedUsingTsExtension'
          QuestionToken
          BooleanKeyword
      InterfaceDeclaration
        Identifier: ' ResolvedModuleFull'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ResolvedModule'
        PropertySignature
          Identifier: '
        /**
         * Extension of resolvedFileName. This must match what's at the end of resolvedFileName.
         * This is optional for backwards-compatibility, but will be added if not provided.
         */
        extension'
          StringKeyword
        PropertySignature
          Identifier: '
        packageId'
          QuestionToken
          TypeReference
            Identifier: ' PackageId'
      InterfaceDeclaration
        Identifier: ' PackageId'
        PropertySignature
          Identifier: '
        /**
         * Name of the package.
         * Should not include `@types`.
         * If accessing a non-index file, this should include its name e.g. "foo/bar".
         */
        name'
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * Name of a submodule within this package.
         * May be "".
         */
        subModuleName'
          StringKeyword
        PropertySignature
          Identifier: '
        /** Version of the package, e.g. "1.2.3" */
        version'
          StringKeyword
      EnumDeclaration
        Identifier: ' Extension'
        EnumMember
          Identifier: '
        Ts'
          StringLiteral
        EnumMember
          Identifier: '
        Tsx'
          StringLiteral
        EnumMember
          Identifier: '
        Dts'
          StringLiteral
        EnumMember
          Identifier: '
        Js'
          StringLiteral
        EnumMember
          Identifier: '
        Jsx'
          StringLiteral
        EnumMember
          Identifier: '
        Json'
          StringLiteral
        EnumMember
          Identifier: '
        TsBuildInfo'
          StringLiteral
        EnumMember
          Identifier: '
        Mjs'
          StringLiteral
        EnumMember
          Identifier: '
        Mts'
          StringLiteral
        EnumMember
          Identifier: '
        Dmts'
          StringLiteral
        EnumMember
          Identifier: '
        Cjs'
          StringLiteral
        EnumMember
          Identifier: '
        Cts'
          StringLiteral
        EnumMember
          Identifier: '
        Dcts'
          StringLiteral
      InterfaceDeclaration
        Identifier: ' ResolvedModuleWithFailedLookupLocations'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' resolvedModule'
          UnionType
            TypeReference
              Identifier: ' ResolvedModuleFull'
            UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' ResolvedTypeReferenceDirective'
        PropertySignature
          Identifier: '
        primary'
          BooleanKeyword
        PropertySignature
          Identifier: '
        resolvedFileName'
          UnionType
            StringKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        packageId'
          QuestionToken
          TypeReference
            Identifier: ' PackageId'
        PropertySignature
          Identifier: '
        /** True if `resolvedFileName` comes from `node_modules`. */
        isExternalLibraryImport'
          QuestionToken
          BooleanKeyword
      InterfaceDeclaration
        Identifier: ' ResolvedTypeReferenceDirectiveWithFailedLookupLocations'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' resolvedTypeReferenceDirective'
          UnionType
            TypeReference
              Identifier: ' ResolvedTypeReferenceDirective'
            UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' CompilerHost'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ModuleResolutionHost'
        MethodSignature
          Identifier: '
        getSourceFile'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' languageVersionOrOptions'
            UnionType
              TypeReference
                Identifier: ' ScriptTarget'
              TypeReference
                Identifier: ' CreateSourceFileOptions'
          Parameter
            Identifier: ' onError'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'message'
                StringKeyword
              VoidKeyword
          Parameter
            Identifier: ' shouldCreateNewSourceFile'
            QuestionToken
            BooleanKeyword
          UnionType
            TypeReference
              Identifier: ' SourceFile'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getSourceFileByPath'
          QuestionToken
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' path'
            TypeReference
              Identifier: ' Path'
          Parameter
            Identifier: ' languageVersionOrOptions'
            UnionType
              TypeReference
                Identifier: ' ScriptTarget'
              TypeReference
                Identifier: ' CreateSourceFileOptions'
          Parameter
            Identifier: ' onError'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'message'
                StringKeyword
              VoidKeyword
          Parameter
            Identifier: ' shouldCreateNewSourceFile'
            QuestionToken
            BooleanKeyword
          UnionType
            TypeReference
              Identifier: ' SourceFile'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getCancellationToken'
          QuestionToken
          TypeReference
            Identifier: ' CancellationToken'
        MethodSignature
          Identifier: '
        getDefaultLibFileName'
          Parameter
            Identifier: 'options'
            TypeReference
              Identifier: ' CompilerOptions'
          StringKeyword
        MethodSignature
          Identifier: '
        getDefaultLibLocation'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        writeFile'
          TypeReference
            Identifier: ' WriteFileCallback'
        MethodSignature
          Identifier: '
        getCurrentDirectory'
          StringKeyword
        MethodSignature
          Identifier: '
        getCanonicalFileName'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          StringKeyword
        MethodSignature
          Identifier: '
        useCaseSensitiveFileNames'
          BooleanKeyword
        MethodSignature
          Identifier: '
        getNewLine'
          StringKeyword
        MethodSignature
          Identifier: '
        readDirectory'
          QuestionToken
          Parameter
            Identifier: 'rootDir'
            StringKeyword
          Parameter
            Identifier: ' extensions'
            TypeOperator
              ArrayType
                StringKeyword
          Parameter
            Identifier: ' excludes'
            UnionType
              TypeOperator
                ArrayType
                  StringKeyword
              UndefinedKeyword
          Parameter
            Identifier: ' includes'
            TypeOperator
              ArrayType
                StringKeyword
          Parameter
            Identifier: ' depth'
            QuestionToken
            NumberKeyword
          ArrayType
            StringKeyword
        MethodSignature
          Identifier: '
        /** @deprecated supply resolveModuleNameLiterals instead for resolution that can handle newer resolution modes like nodenext */
        resolveModuleNames'
          QuestionToken
          Parameter
            Identifier: 'moduleNames'
            ArrayType
              StringKeyword
          Parameter
            Identifier: ' containingFile'
            StringKeyword
          Parameter
            Identifier: ' reusedNames'
            UnionType
              ArrayType
                StringKeyword
              UndefinedKeyword
          Parameter
            Identifier: ' redirectedReference'
            UnionType
              TypeReference
                Identifier: ' ResolvedProjectReference'
              UndefinedKeyword
          Parameter
            Identifier: ' options'
            TypeReference
              Identifier: ' CompilerOptions'
          Parameter
            Identifier: ' containingSourceFile'
            QuestionToken
            TypeReference
              Identifier: ' SourceFile'
          ArrayType
            ParenthesizedType
              UnionType
                TypeReference
                  Identifier: 'ResolvedModule'
                UndefinedKeyword
        MethodSignature
          Identifier: '
        /**
         * Returns the module resolution cache used by a provided `resolveModuleNames` implementation so that any non-name module resolution operations (eg, package.json lookup) can reuse it
         */
        getModuleResolutionCache'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' ModuleResolutionCache'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        /**
         * @deprecated supply resolveTypeReferenceDirectiveReferences instead for resolution that can handle newer resolution modes like nodenext
         *
         * This method is a companion for 'resolveModuleNames' and is used to resolve 'types' references to actual type declaration files
         */
        resolveTypeReferenceDirectives'
          QuestionToken
          Parameter
            Identifier: 'typeReferenceDirectiveNames'
            UnionType
              ArrayType
                StringKeyword
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' FileReference'
          Parameter
            Identifier: ' containingFile'
            StringKeyword
          Parameter
            Identifier: ' redirectedReference'
            UnionType
              TypeReference
                Identifier: ' ResolvedProjectReference'
              UndefinedKeyword
          Parameter
            Identifier: ' options'
            TypeReference
              Identifier: ' CompilerOptions'
          Parameter
            Identifier: ' containingFileMode'
            QuestionToken
            TypeReference
              Identifier: ' ResolutionMode'
          ArrayType
            ParenthesizedType
              UnionType
                TypeReference
                  Identifier: 'ResolvedTypeReferenceDirective'
                UndefinedKeyword
        MethodSignature
          Identifier: '
        resolveModuleNameLiterals'
          QuestionToken
          Parameter
            Identifier: 'moduleLiterals'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' StringLiteralLike'
          Parameter
            Identifier: ' containingFile'
            StringKeyword
          Parameter
            Identifier: ' redirectedReference'
            UnionType
              TypeReference
                Identifier: ' ResolvedProjectReference'
              UndefinedKeyword
          Parameter
            Identifier: ' options'
            TypeReference
              Identifier: ' CompilerOptions'
          Parameter
            Identifier: ' containingSourceFile'
            TypeReference
              Identifier: ' SourceFile'
          Parameter
            Identifier: ' reusedNames'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' StringLiteralLike'
              UndefinedKeyword
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' ResolvedModuleWithFailedLookupLocations'
        MethodSignature
          Identifier: '
        resolveTypeReferenceDirectiveReferences'
          QuestionToken
          TypeParameter
            Identifier: 'T'
            UnionType
              TypeReference
                Identifier: ' FileReference'
              StringKeyword
          Parameter
            Identifier: 'typeDirectiveReferences'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' T'
          Parameter
            Identifier: ' containingFile'
            StringKeyword
          Parameter
            Identifier: ' redirectedReference'
            UnionType
              TypeReference
                Identifier: ' ResolvedProjectReference'
              UndefinedKeyword
          Parameter
            Identifier: ' options'
            TypeReference
              Identifier: ' CompilerOptions'
          Parameter
            Identifier: ' containingSourceFile'
            UnionType
              TypeReference
                Identifier: ' SourceFile'
              UndefinedKeyword
          Parameter
            Identifier: ' reusedNames'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' T'
              UndefinedKeyword
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' ResolvedTypeReferenceDirectiveWithFailedLookupLocations'
        MethodSignature
          Identifier: '
        getEnvironmentVariable'
          QuestionToken
          Parameter
            Identifier: 'name'
            StringKeyword
          UnionType
            StringKeyword
            UndefinedKeyword
        MethodSignature
          Identifier: '
        /** If provided along with custom resolveModuleNames or resolveTypeReferenceDirectives, used to determine if unchanged file path needs to re-resolve modules/type reference directives */
        hasInvalidatedResolutions'
          QuestionToken
          Parameter
            Identifier: 'filePath'
            TypeReference
              Identifier: ' Path'
          BooleanKeyword
        MethodSignature
          Identifier: '
        createHash'
          QuestionToken
          Parameter
            Identifier: 'data'
            StringKeyword
          StringKeyword
        MethodSignature
          Identifier: '
        getParsedCommandLine'
          QuestionToken
          Parameter
            Identifier: 'fileName'
            StringKeyword
          UnionType
            TypeReference
              Identifier: ' ParsedCommandLine'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        jsDocParsingMode'
          QuestionToken
          TypeReference
            Identifier: ' JSDocParsingMode'
      InterfaceDeclaration
        Identifier: ' SourceMapRange'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TextRange'
        PropertySignature
          Identifier: '
        source'
          QuestionToken
          TypeReference
            Identifier: ' SourceMapSource'
      InterfaceDeclaration
        Identifier: ' SourceMapSource'
        PropertySignature
          Identifier: '
        fileName'
          StringKeyword
        PropertySignature
          Identifier: '
        text'
          StringKeyword
        PropertySignature
          Identifier: '
        skipTrivia'
          QuestionToken
          FunctionType
            Parameter
              Identifier: 'pos'
              NumberKeyword
            NumberKeyword
      InterfaceDeclaration
        Identifier: ' SourceMapSource'
        MethodSignature
          Identifier: '
        getLineAndCharacterOfPosition'
          Parameter
            Identifier: 'pos'
            NumberKeyword
          TypeReference
            Identifier: ' LineAndCharacter'
      EnumDeclaration
        Identifier: ' EmitFlags'
        EnumMember
          Identifier: '
        None'
          NumericLiteral
        EnumMember
          Identifier: '
        SingleLine'
          NumericLiteral
        EnumMember
          Identifier: '
        MultiLine'
          NumericLiteral
        EnumMember
          Identifier: '
        AdviseOnEmitNode'
          NumericLiteral
        EnumMember
          Identifier: '
        NoSubstitution'
          NumericLiteral
        EnumMember
          Identifier: '
        CapturesThis'
          NumericLiteral
        EnumMember
          Identifier: '
        NoLeadingSourceMap'
          NumericLiteral
        EnumMember
          Identifier: '
        NoTrailingSourceMap'
          NumericLiteral
        EnumMember
          Identifier: '
        NoSourceMap'
          NumericLiteral
        EnumMember
          Identifier: '
        NoNestedSourceMaps'
          NumericLiteral
        EnumMember
          Identifier: '
        NoTokenLeadingSourceMaps'
          NumericLiteral
        EnumMember
          Identifier: '
        NoTokenTrailingSourceMaps'
          NumericLiteral
        EnumMember
          Identifier: '
        NoTokenSourceMaps'
          NumericLiteral
        EnumMember
          Identifier: '
        NoLeadingComments'
          NumericLiteral
        EnumMember
          Identifier: '
        NoTrailingComments'
          NumericLiteral
        EnumMember
          Identifier: '
        NoComments'
          NumericLiteral
        EnumMember
          Identifier: '
        NoNestedComments'
          NumericLiteral
        EnumMember
          Identifier: '
        HelperName'
          NumericLiteral
        EnumMember
          Identifier: '
        ExportName'
          NumericLiteral
        EnumMember
          Identifier: '
        LocalName'
          NumericLiteral
        EnumMember
          Identifier: '
        InternalName'
          NumericLiteral
        EnumMember
          Identifier: '
        Indented'
          NumericLiteral
        EnumMember
          Identifier: '
        NoIndentation'
          NumericLiteral
        EnumMember
          Identifier: '
        AsyncFunctionBody'
          NumericLiteral
        EnumMember
          Identifier: '
        ReuseTempVariableScope'
          NumericLiteral
        EnumMember
          Identifier: '
        CustomPrologue'
          NumericLiteral
        EnumMember
          Identifier: '
        NoHoisting'
          NumericLiteral
        EnumMember
          Identifier: '
        Iterator'
          NumericLiteral
        EnumMember
          Identifier: '
        NoAsciiEscaping'
          NumericLiteral
      InterfaceDeclaration
        Identifier: ' EmitHelperBase'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' name'
          StringKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' scoped'
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' text'
          UnionType
            StringKeyword
            ParenthesizedType
              FunctionType
                Parameter
                  Identifier: 'node'
                  TypeReference
                    Identifier: ' EmitHelperUniqueNameCallback'
                StringKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' priority'
          QuestionToken
          NumberKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' dependencies'
          QuestionToken
          ArrayType
            TypeReference
              Identifier: ' EmitHelper'
      InterfaceDeclaration
        Identifier: ' ScopedEmitHelper'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' EmitHelperBase'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' scoped'
          LiteralType
            TrueKeyword
      InterfaceDeclaration
        Identifier: ' UnscopedEmitHelper'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' EmitHelperBase'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' scoped'
          LiteralType
            FalseKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' text'
          StringKeyword
      TypeAliasDeclaration
        Identifier: ' EmitHelper'
        UnionType
          TypeReference
            Identifier: ' ScopedEmitHelper'
          TypeReference
            Identifier: ' UnscopedEmitHelper'
      TypeAliasDeclaration
        Identifier: ' EmitHelperUniqueNameCallback'
        FunctionType
          Parameter
            Identifier: 'name'
            StringKeyword
          StringKeyword
      EnumDeclaration
        Identifier: ' EmitHint'
        EnumMember
          Identifier: '
        SourceFile'
          NumericLiteral
        EnumMember
          Identifier: '
        Expression'
          NumericLiteral
        EnumMember
          Identifier: '
        IdentifierName'
          NumericLiteral
        EnumMember
          Identifier: '
        MappedTypeParameter'
          NumericLiteral
        EnumMember
          Identifier: '
        Unspecified'
          NumericLiteral
        EnumMember
          Identifier: '
        EmbeddedStatement'
          NumericLiteral
        EnumMember
          Identifier: '
        JsxAttributeValue'
          NumericLiteral
        EnumMember
          Identifier: '
        ImportTypeNodeAttributes'
          NumericLiteral
      EnumDeclaration
        Identifier: ' OuterExpressionKinds'
        EnumMember
          Identifier: '
        Parentheses'
          NumericLiteral
        EnumMember
          Identifier: '
        TypeAssertions'
          NumericLiteral
        EnumMember
          Identifier: '
        NonNullAssertions'
          NumericLiteral
        EnumMember
          Identifier: '
        PartiallyEmittedExpressions'
          NumericLiteral
        EnumMember
          Identifier: '
        ExpressionsWithTypeArguments'
          NumericLiteral
        EnumMember
          Identifier: '
        Assertions'
          NumericLiteral
        EnumMember
          Identifier: '
        All'
          NumericLiteral
        EnumMember
          Identifier: '
        ExcludeJSDocTypeAssertion'
          PrefixUnaryExpression
            NumericLiteral
      TypeAliasDeclaration
        Identifier: ' ImmediatelyInvokedFunctionExpression'
        IntersectionType
          TypeReference
            Identifier: ' CallExpression'
          TypeLiteral
            PropertySignature
              ReadonlyKeyword
              Identifier: ' expression'
              TypeReference
                Identifier: ' FunctionExpression'
      TypeAliasDeclaration
        Identifier: ' ImmediatelyInvokedArrowFunction'
        IntersectionType
          TypeReference
            Identifier: ' CallExpression'
          TypeLiteral
            PropertySignature
              ReadonlyKeyword
              Identifier: ' expression'
              IntersectionType
                TypeReference
                  Identifier: ' ParenthesizedExpression'
                TypeLiteral
                  PropertySignature
                    ReadonlyKeyword
                    Identifier: ' expression'
                    TypeReference
                      Identifier: ' ArrowFunction'
      InterfaceDeclaration
        Identifier: ' NodeFactory'
        MethodSignature
          Identifier: '
        createNodeArray'
          TypeParameter
            Identifier: 'T'
            TypeReference
              Identifier: ' Node'
          Parameter
            Identifier: 'elements'
            QuestionToken
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' T'
          Parameter
            Identifier: ' hasTrailingComma'
            QuestionToken
            BooleanKeyword
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'T'
        MethodSignature
          Identifier: '
        createNumericLiteral'
          Parameter
            Identifier: 'value'
            UnionType
              StringKeyword
              NumberKeyword
          Parameter
            Identifier: ' numericLiteralFlags'
            QuestionToken
            TypeReference
              Identifier: ' TokenFlags'
          TypeReference
            Identifier: ' NumericLiteral'
        MethodSignature
          Identifier: '
        createBigIntLiteral'
          Parameter
            Identifier: 'value'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' PseudoBigInt'
          TypeReference
            Identifier: ' BigIntLiteral'
        MethodSignature
          Identifier: '
        createStringLiteral'
          Parameter
            Identifier: 'text'
            StringKeyword
          Parameter
            Identifier: ' isSingleQuote'
            QuestionToken
            BooleanKeyword
          TypeReference
            Identifier: ' StringLiteral'
        MethodSignature
          Identifier: '
        createStringLiteralFromNode'
          Parameter
            Identifier: 'sourceNode'
            UnionType
              TypeReference
                Identifier: ' PropertyNameLiteral'
              TypeReference
                Identifier: ' PrivateIdentifier'
          Parameter
            Identifier: ' isSingleQuote'
            QuestionToken
            BooleanKeyword
          TypeReference
            Identifier: ' StringLiteral'
        MethodSignature
          Identifier: '
        createRegularExpressionLiteral'
          Parameter
            Identifier: 'text'
            StringKeyword
          TypeReference
            Identifier: ' RegularExpressionLiteral'
        MethodSignature
          Identifier: '
        createIdentifier'
          Parameter
            Identifier: 'text'
            StringKeyword
          TypeReference
            Identifier: ' Identifier'
        MethodSignature
          Identifier: '
        /**
         * Create a unique temporary variable.
         * @param recordTempVariable An optional callback used to record the temporary variable name. This
         * should usually be a reference to `hoistVariableDeclaration` from a `TransformationContext`, but
         * can be `undefined` if you plan to record the temporary variable manually.
         * @param reservedInNestedScopes When `true`, reserves the temporary variable name in all nested scopes
         * during emit so that the variable can be referenced in a nested function body. This is an alternative to
         * setting `EmitFlags.ReuseTempVariableScope` on the nested function itself.
         */
        createTempVariable'
          Parameter
            Identifier: 'recordTempVariable'
            UnionType
              ParenthesizedType
                FunctionType
                  Parameter
                    Identifier: 'node'
                    TypeReference
                      Identifier: ' Identifier'
                  VoidKeyword
              UndefinedKeyword
          Parameter
            Identifier: ' reservedInNestedScopes'
            QuestionToken
            BooleanKeyword
          TypeReference
            Identifier: ' Identifier'
        MethodSignature
          Identifier: '
        /**
         * Create a unique temporary variable for use in a loop.
         * @param reservedInNestedScopes When `true`, reserves the temporary variable name in all nested scopes
         * during emit so that the variable can be referenced in a nested function body. This is an alternative to
         * setting `EmitFlags.ReuseTempVariableScope` on the nested function itself.
         */
        createLoopVariable'
          Parameter
            Identifier: 'reservedInNestedScopes'
            QuestionToken
            BooleanKeyword
          TypeReference
            Identifier: ' Identifier'
        MethodSignature
          Identifier: '
        /** Create a unique name based on the supplied text. */
        createUniqueName'
          Parameter
            Identifier: 'text'
            StringKeyword
          Parameter
            Identifier: ' flags'
            QuestionToken
            TypeReference
              Identifier: ' GeneratedIdentifierFlags'
          TypeReference
            Identifier: ' Identifier'
        MethodSignature
          Identifier: '
        /** Create a unique name generated for a node. */
        getGeneratedNameForNode'
          Parameter
            Identifier: 'node'
            UnionType
              TypeReference
                Identifier: ' Node'
              UndefinedKeyword
          Parameter
            Identifier: ' flags'
            QuestionToken
            TypeReference
              Identifier: ' GeneratedIdentifierFlags'
          TypeReference
            Identifier: ' Identifier'
        MethodSignature
          Identifier: '
        createPrivateIdentifier'
          Parameter
            Identifier: 'text'
            StringKeyword
          TypeReference
            Identifier: ' PrivateIdentifier'
        MethodSignature
          Identifier: '
        createUniquePrivateName'
          Parameter
            Identifier: 'text'
            QuestionToken
            StringKeyword
          TypeReference
            Identifier: ' PrivateIdentifier'
        MethodSignature
          Identifier: '
        getGeneratedPrivateNameForNode'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' Node'
          TypeReference
            Identifier: ' PrivateIdentifier'
        MethodSignature
          Identifier: '
        createToken'
          Parameter
            Identifier: 'token'
            TypeReference
              QualifiedName
                Identifier: ' SyntaxKind'
                Identifier: 'SuperKeyword'
          TypeReference
            Identifier: ' SuperExpression'
        MethodSignature
          Identifier: '
        createToken'
          Parameter
            Identifier: 'token'
            TypeReference
              QualifiedName
                Identifier: ' SyntaxKind'
                Identifier: 'ThisKeyword'
          TypeReference
            Identifier: ' ThisExpression'
        MethodSignature
          Identifier: '
        createToken'
          Parameter
            Identifier: 'token'
            TypeReference
              QualifiedName
                Identifier: ' SyntaxKind'
                Identifier: 'NullKeyword'
          TypeReference
            Identifier: ' NullLiteral'
        MethodSignature
          Identifier: '
        createToken'
          Parameter
            Identifier: 'token'
            TypeReference
              QualifiedName
                Identifier: ' SyntaxKind'
                Identifier: 'TrueKeyword'
          TypeReference
            Identifier: ' TrueLiteral'
        MethodSignature
          Identifier: '
        createToken'
          Parameter
            Identifier: 'token'
            TypeReference
              QualifiedName
                Identifier: ' SyntaxKind'
                Identifier: 'FalseKeyword'
          TypeReference
            Identifier: ' FalseLiteral'
        MethodSignature
          Identifier: '
        createToken'
          Parameter
            Identifier: 'token'
            TypeReference
              QualifiedName
                Identifier: ' SyntaxKind'
                Identifier: 'EndOfFileToken'
          TypeReference
            Identifier: ' EndOfFileToken'
        MethodSignature
          Identifier: '
        createToken'
          Parameter
            Identifier: 'token'
            TypeReference
              QualifiedName
                Identifier: ' SyntaxKind'
                Identifier: 'Unknown'
          TypeReference
            Identifier: ' Token'
            TypeReference
              QualifiedName
                Identifier: 'SyntaxKind'
                Identifier: 'Unknown'
        MethodSignature
          Identifier: '
        createToken'
          TypeParameter
            Identifier: 'TKind'
            TypeReference
              Identifier: ' PunctuationSyntaxKind'
          Parameter
            Identifier: 'token'
            TypeReference
              Identifier: ' TKind'
          TypeReference
            Identifier: ' PunctuationToken'
            TypeReference
              Identifier: 'TKind'
        MethodSignature
          Identifier: '
        createToken'
          TypeParameter
            Identifier: 'TKind'
            TypeReference
              Identifier: ' KeywordTypeSyntaxKind'
          Parameter
            Identifier: 'token'
            TypeReference
              Identifier: ' TKind'
          TypeReference
            Identifier: ' KeywordTypeNode'
            TypeReference
              Identifier: 'TKind'
        MethodSignature
          Identifier: '
        createToken'
          TypeParameter
            Identifier: 'TKind'
            TypeReference
              Identifier: ' ModifierSyntaxKind'
          Parameter
            Identifier: 'token'
            TypeReference
              Identifier: ' TKind'
          TypeReference
            Identifier: ' ModifierToken'
            TypeReference
              Identifier: 'TKind'
        MethodSignature
          Identifier: '
        createToken'
          TypeParameter
            Identifier: 'TKind'
            TypeReference
              Identifier: ' KeywordSyntaxKind'
          Parameter
            Identifier: 'token'
            TypeReference
              Identifier: ' TKind'
          TypeReference
            Identifier: ' KeywordToken'
            TypeReference
              Identifier: 'TKind'
        MethodSignature
          Identifier: '
        createSuper'
          TypeReference
            Identifier: ' SuperExpression'
        MethodSignature
          Identifier: '
        createThis'
          TypeReference
            Identifier: ' ThisExpression'
        MethodSignature
          Identifier: '
        createNull'
          TypeReference
            Identifier: ' NullLiteral'
        MethodSignature
          Identifier: '
        createTrue'
          TypeReference
            Identifier: ' TrueLiteral'
        MethodSignature
          Identifier: '
        createFalse'
          TypeReference
            Identifier: ' FalseLiteral'
        MethodSignature
          Identifier: '
        createModifier'
          TypeParameter
            Identifier: 'T'
            TypeReference
              Identifier: ' ModifierSyntaxKind'
          Parameter
            Identifier: 'kind'
            TypeReference
              Identifier: ' T'
          TypeReference
            Identifier: ' ModifierToken'
            TypeReference
              Identifier: 'T'
        MethodSignature
          Identifier: '
        createModifiersFromModifierFlags'
          Parameter
            Identifier: 'flags'
            TypeReference
              Identifier: ' ModifierFlags'
          UnionType
            ArrayType
              TypeReference
                Identifier: ' Modifier'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        createQualifiedName'
          Parameter
            Identifier: 'left'
            TypeReference
              Identifier: ' EntityName'
          Parameter
            Identifier: ' right'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' Identifier'
          TypeReference
            Identifier: ' QualifiedName'
        MethodSignature
          Identifier: '
        updateQualifiedName'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' QualifiedName'
          Parameter
            Identifier: ' left'
            TypeReference
              Identifier: ' EntityName'
          Parameter
            Identifier: ' right'
            TypeReference
              Identifier: ' Identifier'
          TypeReference
            Identifier: ' QualifiedName'
        MethodSignature
          Identifier: '
        createComputedPropertyName'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' ComputedPropertyName'
        MethodSignature
          Identifier: '
        updateComputedPropertyName'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ComputedPropertyName'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' ComputedPropertyName'
        MethodSignature
          Identifier: '
        createTypeParameterDeclaration'
          Parameter
            Identifier: 'modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' Modifier'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' Identifier'
          Parameter
            Identifier: ' constraint'
            QuestionToken
            TypeReference
              Identifier: ' TypeNode'
          Parameter
            Identifier: ' defaultType'
            QuestionToken
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' TypeParameterDeclaration'
        MethodSignature
          Identifier: '
        updateTypeParameterDeclaration'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' TypeParameterDeclaration'
          Parameter
            Identifier: ' modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' Modifier'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' Identifier'
          Parameter
            Identifier: ' constraint'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          Parameter
            Identifier: ' defaultType'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          TypeReference
            Identifier: ' TypeParameterDeclaration'
        MethodSignature
          Identifier: '
        createParameterDeclaration'
          Parameter
            Identifier: 'modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' dotDotDotToken'
            UnionType
              TypeReference
                Identifier: ' DotDotDotToken'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' BindingName'
          Parameter
            Identifier: ' questionToken'
            QuestionToken
            TypeReference
              Identifier: ' QuestionToken'
          Parameter
            Identifier: ' type'
            QuestionToken
            TypeReference
              Identifier: ' TypeNode'
          Parameter
            Identifier: ' initializer'
            QuestionToken
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' ParameterDeclaration'
        MethodSignature
          Identifier: '
        updateParameterDeclaration'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ParameterDeclaration'
          Parameter
            Identifier: ' modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' dotDotDotToken'
            UnionType
              TypeReference
                Identifier: ' DotDotDotToken'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' BindingName'
          Parameter
            Identifier: ' questionToken'
            UnionType
              TypeReference
                Identifier: ' QuestionToken'
              UndefinedKeyword
          Parameter
            Identifier: ' type'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          Parameter
            Identifier: ' initializer'
            UnionType
              TypeReference
                Identifier: ' Expression'
              UndefinedKeyword
          TypeReference
            Identifier: ' ParameterDeclaration'
        MethodSignature
          Identifier: '
        createDecorator'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' Decorator'
        MethodSignature
          Identifier: '
        updateDecorator'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' Decorator'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' Decorator'
        MethodSignature
          Identifier: '
        createPropertySignature'
          Parameter
            Identifier: 'modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' Modifier'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            UnionType
              TypeReference
                Identifier: ' PropertyName'
              StringKeyword
          Parameter
            Identifier: ' questionToken'
            UnionType
              TypeReference
                Identifier: ' QuestionToken'
              UndefinedKeyword
          Parameter
            Identifier: ' type'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          TypeReference
            Identifier: ' PropertySignature'
        MethodSignature
          Identifier: '
        updatePropertySignature'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' PropertySignature'
          Parameter
            Identifier: ' modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' Modifier'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' PropertyName'
          Parameter
            Identifier: ' questionToken'
            UnionType
              TypeReference
                Identifier: ' QuestionToken'
              UndefinedKeyword
          Parameter
            Identifier: ' type'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          TypeReference
            Identifier: ' PropertySignature'
        MethodSignature
          Identifier: '
        createPropertyDeclaration'
          Parameter
            Identifier: 'modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' PropertyName'
          Parameter
            Identifier: ' questionOrExclamationToken'
            UnionType
              TypeReference
                Identifier: ' QuestionToken'
              TypeReference
                Identifier: ' ExclamationToken'
              UndefinedKeyword
          Parameter
            Identifier: ' type'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          Parameter
            Identifier: ' initializer'
            UnionType
              TypeReference
                Identifier: ' Expression'
              UndefinedKeyword
          TypeReference
            Identifier: ' PropertyDeclaration'
        MethodSignature
          Identifier: '
        updatePropertyDeclaration'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' PropertyDeclaration'
          Parameter
            Identifier: ' modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' PropertyName'
          Parameter
            Identifier: ' questionOrExclamationToken'
            UnionType
              TypeReference
                Identifier: ' QuestionToken'
              TypeReference
                Identifier: ' ExclamationToken'
              UndefinedKeyword
          Parameter
            Identifier: ' type'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          Parameter
            Identifier: ' initializer'
            UnionType
              TypeReference
                Identifier: ' Expression'
              UndefinedKeyword
          TypeReference
            Identifier: ' PropertyDeclaration'
        MethodSignature
          Identifier: '
        createMethodSignature'
          Parameter
            Identifier: 'modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' Modifier'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' PropertyName'
          Parameter
            Identifier: ' questionToken'
            UnionType
              TypeReference
                Identifier: ' QuestionToken'
              UndefinedKeyword
          Parameter
            Identifier: ' typeParameters'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeParameterDeclaration'
              UndefinedKeyword
          Parameter
            Identifier: ' parameters'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ParameterDeclaration'
          Parameter
            Identifier: ' type'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          TypeReference
            Identifier: ' MethodSignature'
        MethodSignature
          Identifier: '
        updateMethodSignature'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' MethodSignature'
          Parameter
            Identifier: ' modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' Modifier'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' PropertyName'
          Parameter
            Identifier: ' questionToken'
            UnionType
              TypeReference
                Identifier: ' QuestionToken'
              UndefinedKeyword
          Parameter
            Identifier: ' typeParameters'
            UnionType
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'TypeParameterDeclaration'
              UndefinedKeyword
          Parameter
            Identifier: ' parameters'
            TypeReference
              Identifier: ' NodeArray'
              TypeReference
                Identifier: 'ParameterDeclaration'
          Parameter
            Identifier: ' type'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          TypeReference
            Identifier: ' MethodSignature'
        MethodSignature
          Identifier: '
        createMethodDeclaration'
          Parameter
            Identifier: 'modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' asteriskToken'
            UnionType
              TypeReference
                Identifier: ' AsteriskToken'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' PropertyName'
          Parameter
            Identifier: ' questionToken'
            UnionType
              TypeReference
                Identifier: ' QuestionToken'
              UndefinedKeyword
          Parameter
            Identifier: ' typeParameters'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeParameterDeclaration'
              UndefinedKeyword
          Parameter
            Identifier: ' parameters'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ParameterDeclaration'
          Parameter
            Identifier: ' type'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          Parameter
            Identifier: ' body'
            UnionType
              TypeReference
                Identifier: ' Block'
              UndefinedKeyword
          TypeReference
            Identifier: ' MethodDeclaration'
        MethodSignature
          Identifier: '
        updateMethodDeclaration'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' MethodDeclaration'
          Parameter
            Identifier: ' modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' asteriskToken'
            UnionType
              TypeReference
                Identifier: ' AsteriskToken'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' PropertyName'
          Parameter
            Identifier: ' questionToken'
            UnionType
              TypeReference
                Identifier: ' QuestionToken'
              UndefinedKeyword
          Parameter
            Identifier: ' typeParameters'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeParameterDeclaration'
              UndefinedKeyword
          Parameter
            Identifier: ' parameters'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ParameterDeclaration'
          Parameter
            Identifier: ' type'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          Parameter
            Identifier: ' body'
            UnionType
              TypeReference
                Identifier: ' Block'
              UndefinedKeyword
          TypeReference
            Identifier: ' MethodDeclaration'
        MethodSignature
          Identifier: '
        createConstructorDeclaration'
          Parameter
            Identifier: 'modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' parameters'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ParameterDeclaration'
          Parameter
            Identifier: ' body'
            UnionType
              TypeReference
                Identifier: ' Block'
              UndefinedKeyword
          TypeReference
            Identifier: ' ConstructorDeclaration'
        MethodSignature
          Identifier: '
        updateConstructorDeclaration'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ConstructorDeclaration'
          Parameter
            Identifier: ' modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' parameters'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ParameterDeclaration'
          Parameter
            Identifier: ' body'
            UnionType
              TypeReference
                Identifier: ' Block'
              UndefinedKeyword
          TypeReference
            Identifier: ' ConstructorDeclaration'
        MethodSignature
          Identifier: '
        createGetAccessorDeclaration'
          Parameter
            Identifier: 'modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' PropertyName'
          Parameter
            Identifier: ' parameters'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ParameterDeclaration'
          Parameter
            Identifier: ' type'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          Parameter
            Identifier: ' body'
            UnionType
              TypeReference
                Identifier: ' Block'
              UndefinedKeyword
          TypeReference
            Identifier: ' GetAccessorDeclaration'
        MethodSignature
          Identifier: '
        updateGetAccessorDeclaration'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' GetAccessorDeclaration'
          Parameter
            Identifier: ' modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' PropertyName'
          Parameter
            Identifier: ' parameters'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ParameterDeclaration'
          Parameter
            Identifier: ' type'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          Parameter
            Identifier: ' body'
            UnionType
              TypeReference
                Identifier: ' Block'
              UndefinedKeyword
          TypeReference
            Identifier: ' GetAccessorDeclaration'
        MethodSignature
          Identifier: '
        createSetAccessorDeclaration'
          Parameter
            Identifier: 'modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' PropertyName'
          Parameter
            Identifier: ' parameters'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ParameterDeclaration'
          Parameter
            Identifier: ' body'
            UnionType
              TypeReference
                Identifier: ' Block'
              UndefinedKeyword
          TypeReference
            Identifier: ' SetAccessorDeclaration'
        MethodSignature
          Identifier: '
        updateSetAccessorDeclaration'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' SetAccessorDeclaration'
          Parameter
            Identifier: ' modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' PropertyName'
          Parameter
            Identifier: ' parameters'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ParameterDeclaration'
          Parameter
            Identifier: ' body'
            UnionType
              TypeReference
                Identifier: ' Block'
              UndefinedKeyword
          TypeReference
            Identifier: ' SetAccessorDeclaration'
        MethodSignature
          Identifier: '
        createCallSignature'
          Parameter
            Identifier: 'typeParameters'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeParameterDeclaration'
              UndefinedKeyword
          Parameter
            Identifier: ' parameters'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ParameterDeclaration'
          Parameter
            Identifier: ' type'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          TypeReference
            Identifier: ' CallSignatureDeclaration'
        MethodSignature
          Identifier: '
        updateCallSignature'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' CallSignatureDeclaration'
          Parameter
            Identifier: ' typeParameters'
            UnionType
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'TypeParameterDeclaration'
              UndefinedKeyword
          Parameter
            Identifier: ' parameters'
            TypeReference
              Identifier: ' NodeArray'
              TypeReference
                Identifier: 'ParameterDeclaration'
          Parameter
            Identifier: ' type'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          TypeReference
            Identifier: ' CallSignatureDeclaration'
        MethodSignature
          Identifier: '
        createConstructSignature'
          Parameter
            Identifier: 'typeParameters'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeParameterDeclaration'
              UndefinedKeyword
          Parameter
            Identifier: ' parameters'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ParameterDeclaration'
          Parameter
            Identifier: ' type'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          TypeReference
            Identifier: ' ConstructSignatureDeclaration'
        MethodSignature
          Identifier: '
        updateConstructSignature'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ConstructSignatureDeclaration'
          Parameter
            Identifier: ' typeParameters'
            UnionType
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'TypeParameterDeclaration'
              UndefinedKeyword
          Parameter
            Identifier: ' parameters'
            TypeReference
              Identifier: ' NodeArray'
              TypeReference
                Identifier: 'ParameterDeclaration'
          Parameter
            Identifier: ' type'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          TypeReference
            Identifier: ' ConstructSignatureDeclaration'
        MethodSignature
          Identifier: '
        createIndexSignature'
          Parameter
            Identifier: 'modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' parameters'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ParameterDeclaration'
          Parameter
            Identifier: ' type'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' IndexSignatureDeclaration'
        MethodSignature
          Identifier: '
        updateIndexSignature'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' IndexSignatureDeclaration'
          Parameter
            Identifier: ' modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' parameters'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ParameterDeclaration'
          Parameter
            Identifier: ' type'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' IndexSignatureDeclaration'
        MethodSignature
          Identifier: '
        createTemplateLiteralTypeSpan'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' TypeNode'
          Parameter
            Identifier: ' literal'
            UnionType
              TypeReference
                Identifier: ' TemplateMiddle'
              TypeReference
                Identifier: ' TemplateTail'
          TypeReference
            Identifier: ' TemplateLiteralTypeSpan'
        MethodSignature
          Identifier: '
        updateTemplateLiteralTypeSpan'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' TemplateLiteralTypeSpan'
          Parameter
            Identifier: ' type'
            TypeReference
              Identifier: ' TypeNode'
          Parameter
            Identifier: ' literal'
            UnionType
              TypeReference
                Identifier: ' TemplateMiddle'
              TypeReference
                Identifier: ' TemplateTail'
          TypeReference
            Identifier: ' TemplateLiteralTypeSpan'
        MethodSignature
          Identifier: '
        createClassStaticBlockDeclaration'
          Parameter
            Identifier: 'body'
            TypeReference
              Identifier: ' Block'
          TypeReference
            Identifier: ' ClassStaticBlockDeclaration'
        MethodSignature
          Identifier: '
        updateClassStaticBlockDeclaration'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ClassStaticBlockDeclaration'
          Parameter
            Identifier: ' body'
            TypeReference
              Identifier: ' Block'
          TypeReference
            Identifier: ' ClassStaticBlockDeclaration'
        MethodSignature
          Identifier: '
        createKeywordTypeNode'
          TypeParameter
            Identifier: 'TKind'
            TypeReference
              Identifier: ' KeywordTypeSyntaxKind'
          Parameter
            Identifier: 'kind'
            TypeReference
              Identifier: ' TKind'
          TypeReference
            Identifier: ' KeywordTypeNode'
            TypeReference
              Identifier: 'TKind'
        MethodSignature
          Identifier: '
        createTypePredicateNode'
          Parameter
            Identifier: 'assertsModifier'
            UnionType
              TypeReference
                Identifier: ' AssertsKeyword'
              UndefinedKeyword
          Parameter
            Identifier: ' parameterName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              TypeReference
                Identifier: ' ThisTypeNode'
              StringKeyword
          Parameter
            Identifier: ' type'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          TypeReference
            Identifier: ' TypePredicateNode'
        MethodSignature
          Identifier: '
        updateTypePredicateNode'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' TypePredicateNode'
          Parameter
            Identifier: ' assertsModifier'
            UnionType
              TypeReference
                Identifier: ' AssertsKeyword'
              UndefinedKeyword
          Parameter
            Identifier: ' parameterName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              TypeReference
                Identifier: ' ThisTypeNode'
          Parameter
            Identifier: ' type'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          TypeReference
            Identifier: ' TypePredicateNode'
        MethodSignature
          Identifier: '
        createTypeReferenceNode'
          Parameter
            Identifier: 'typeName'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' EntityName'
          Parameter
            Identifier: ' typeArguments'
            QuestionToken
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' TypeNode'
          TypeReference
            Identifier: ' TypeReferenceNode'
        MethodSignature
          Identifier: '
        updateTypeReferenceNode'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' TypeReferenceNode'
          Parameter
            Identifier: ' typeName'
            TypeReference
              Identifier: ' EntityName'
          Parameter
            Identifier: ' typeArguments'
            UnionType
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'TypeNode'
              UndefinedKeyword
          TypeReference
            Identifier: ' TypeReferenceNode'
        MethodSignature
          Identifier: '
        createFunctionTypeNode'
          Parameter
            Identifier: 'typeParameters'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeParameterDeclaration'
              UndefinedKeyword
          Parameter
            Identifier: ' parameters'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ParameterDeclaration'
          Parameter
            Identifier: ' type'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' FunctionTypeNode'
        MethodSignature
          Identifier: '
        updateFunctionTypeNode'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' FunctionTypeNode'
          Parameter
            Identifier: ' typeParameters'
            UnionType
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'TypeParameterDeclaration'
              UndefinedKeyword
          Parameter
            Identifier: ' parameters'
            TypeReference
              Identifier: ' NodeArray'
              TypeReference
                Identifier: 'ParameterDeclaration'
          Parameter
            Identifier: ' type'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' FunctionTypeNode'
        MethodSignature
          Identifier: '
        createConstructorTypeNode'
          Parameter
            Identifier: 'modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' Modifier'
              UndefinedKeyword
          Parameter
            Identifier: ' typeParameters'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeParameterDeclaration'
              UndefinedKeyword
          Parameter
            Identifier: ' parameters'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ParameterDeclaration'
          Parameter
            Identifier: ' type'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' ConstructorTypeNode'
        MethodSignature
          Identifier: '
        updateConstructorTypeNode'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ConstructorTypeNode'
          Parameter
            Identifier: ' modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' Modifier'
              UndefinedKeyword
          Parameter
            Identifier: ' typeParameters'
            UnionType
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'TypeParameterDeclaration'
              UndefinedKeyword
          Parameter
            Identifier: ' parameters'
            TypeReference
              Identifier: ' NodeArray'
              TypeReference
                Identifier: 'ParameterDeclaration'
          Parameter
            Identifier: ' type'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' ConstructorTypeNode'
        MethodSignature
          Identifier: '
        createTypeQueryNode'
          Parameter
            Identifier: 'exprName'
            TypeReference
              Identifier: ' EntityName'
          Parameter
            Identifier: ' typeArguments'
            QuestionToken
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' TypeNode'
          TypeReference
            Identifier: ' TypeQueryNode'
        MethodSignature
          Identifier: '
        updateTypeQueryNode'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' TypeQueryNode'
          Parameter
            Identifier: ' exprName'
            TypeReference
              Identifier: ' EntityName'
          Parameter
            Identifier: ' typeArguments'
            QuestionToken
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' TypeNode'
          TypeReference
            Identifier: ' TypeQueryNode'
        MethodSignature
          Identifier: '
        createTypeLiteralNode'
          Parameter
            Identifier: 'members'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeElement'
              UndefinedKeyword
          TypeReference
            Identifier: ' TypeLiteralNode'
        MethodSignature
          Identifier: '
        updateTypeLiteralNode'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' TypeLiteralNode'
          Parameter
            Identifier: ' members'
            TypeReference
              Identifier: ' NodeArray'
              TypeReference
                Identifier: 'TypeElement'
          TypeReference
            Identifier: ' TypeLiteralNode'
        MethodSignature
          Identifier: '
        createArrayTypeNode'
          Parameter
            Identifier: 'elementType'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' ArrayTypeNode'
        MethodSignature
          Identifier: '
        updateArrayTypeNode'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ArrayTypeNode'
          Parameter
            Identifier: ' elementType'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' ArrayTypeNode'
        MethodSignature
          Identifier: '
        createTupleTypeNode'
          Parameter
            Identifier: 'elements'
            TypeOperator
              ArrayType
                ParenthesizedType
                  UnionType
                    TypeReference
                      Identifier: 'TypeNode'
                    TypeReference
                      Identifier: ' NamedTupleMember'
          TypeReference
            Identifier: ' TupleTypeNode'
        MethodSignature
          Identifier: '
        updateTupleTypeNode'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' TupleTypeNode'
          Parameter
            Identifier: ' elements'
            TypeOperator
              ArrayType
                ParenthesizedType
                  UnionType
                    TypeReference
                      Identifier: 'TypeNode'
                    TypeReference
                      Identifier: ' NamedTupleMember'
          TypeReference
            Identifier: ' TupleTypeNode'
        MethodSignature
          Identifier: '
        createNamedTupleMember'
          Parameter
            Identifier: 'dotDotDotToken'
            UnionType
              TypeReference
                Identifier: ' DotDotDotToken'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' Identifier'
          Parameter
            Identifier: ' questionToken'
            UnionType
              TypeReference
                Identifier: ' QuestionToken'
              UndefinedKeyword
          Parameter
            Identifier: ' type'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' NamedTupleMember'
        MethodSignature
          Identifier: '
        updateNamedTupleMember'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' NamedTupleMember'
          Parameter
            Identifier: ' dotDotDotToken'
            UnionType
              TypeReference
                Identifier: ' DotDotDotToken'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' Identifier'
          Parameter
            Identifier: ' questionToken'
            UnionType
              TypeReference
                Identifier: ' QuestionToken'
              UndefinedKeyword
          Parameter
            Identifier: ' type'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' NamedTupleMember'
        MethodSignature
          Identifier: '
        createOptionalTypeNode'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' OptionalTypeNode'
        MethodSignature
          Identifier: '
        updateOptionalTypeNode'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' OptionalTypeNode'
          Parameter
            Identifier: ' type'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' OptionalTypeNode'
        MethodSignature
          Identifier: '
        createRestTypeNode'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' RestTypeNode'
        MethodSignature
          Identifier: '
        updateRestTypeNode'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' RestTypeNode'
          Parameter
            Identifier: ' type'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' RestTypeNode'
        MethodSignature
          Identifier: '
        createUnionTypeNode'
          Parameter
            Identifier: 'types'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' TypeNode'
          TypeReference
            Identifier: ' UnionTypeNode'
        MethodSignature
          Identifier: '
        updateUnionTypeNode'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' UnionTypeNode'
          Parameter
            Identifier: ' types'
            TypeReference
              Identifier: ' NodeArray'
              TypeReference
                Identifier: 'TypeNode'
          TypeReference
            Identifier: ' UnionTypeNode'
        MethodSignature
          Identifier: '
        createIntersectionTypeNode'
          Parameter
            Identifier: 'types'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' TypeNode'
          TypeReference
            Identifier: ' IntersectionTypeNode'
        MethodSignature
          Identifier: '
        updateIntersectionTypeNode'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' IntersectionTypeNode'
          Parameter
            Identifier: ' types'
            TypeReference
              Identifier: ' NodeArray'
              TypeReference
                Identifier: 'TypeNode'
          TypeReference
            Identifier: ' IntersectionTypeNode'
        MethodSignature
          Identifier: '
        createConditionalTypeNode'
          Parameter
            Identifier: 'checkType'
            TypeReference
              Identifier: ' TypeNode'
          Parameter
            Identifier: ' extendsType'
            TypeReference
              Identifier: ' TypeNode'
          Parameter
            Identifier: ' trueType'
            TypeReference
              Identifier: ' TypeNode'
          Parameter
            Identifier: ' falseType'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' ConditionalTypeNode'
        MethodSignature
          Identifier: '
        updateConditionalTypeNode'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ConditionalTypeNode'
          Parameter
            Identifier: ' checkType'
            TypeReference
              Identifier: ' TypeNode'
          Parameter
            Identifier: ' extendsType'
            TypeReference
              Identifier: ' TypeNode'
          Parameter
            Identifier: ' trueType'
            TypeReference
              Identifier: ' TypeNode'
          Parameter
            Identifier: ' falseType'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' ConditionalTypeNode'
        MethodSignature
          Identifier: '
        createInferTypeNode'
          Parameter
            Identifier: 'typeParameter'
            TypeReference
              Identifier: ' TypeParameterDeclaration'
          TypeReference
            Identifier: ' InferTypeNode'
        MethodSignature
          Identifier: '
        updateInferTypeNode'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' InferTypeNode'
          Parameter
            Identifier: ' typeParameter'
            TypeReference
              Identifier: ' TypeParameterDeclaration'
          TypeReference
            Identifier: ' InferTypeNode'
        MethodSignature
          Identifier: '
        createImportTypeNode'
          Parameter
            Identifier: 'argument'
            TypeReference
              Identifier: ' TypeNode'
          Parameter
            Identifier: ' attributes'
            QuestionToken
            TypeReference
              Identifier: ' ImportAttributes'
          Parameter
            Identifier: ' qualifier'
            QuestionToken
            TypeReference
              Identifier: ' EntityName'
          Parameter
            Identifier: ' typeArguments'
            QuestionToken
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' TypeNode'
          Parameter
            Identifier: ' isTypeOf'
            QuestionToken
            BooleanKeyword
          TypeReference
            Identifier: ' ImportTypeNode'
        MethodSignature
          Identifier: '
        updateImportTypeNode'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ImportTypeNode'
          Parameter
            Identifier: ' argument'
            TypeReference
              Identifier: ' TypeNode'
          Parameter
            Identifier: ' attributes'
            UnionType
              TypeReference
                Identifier: ' ImportAttributes'
              UndefinedKeyword
          Parameter
            Identifier: ' qualifier'
            UnionType
              TypeReference
                Identifier: ' EntityName'
              UndefinedKeyword
          Parameter
            Identifier: ' typeArguments'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeNode'
              UndefinedKeyword
          Parameter
            Identifier: ' isTypeOf'
            QuestionToken
            BooleanKeyword
          TypeReference
            Identifier: ' ImportTypeNode'
        MethodSignature
          Identifier: '
        createParenthesizedType'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' ParenthesizedTypeNode'
        MethodSignature
          Identifier: '
        updateParenthesizedType'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ParenthesizedTypeNode'
          Parameter
            Identifier: ' type'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' ParenthesizedTypeNode'
        MethodSignature
          Identifier: '
        createThisTypeNode'
          TypeReference
            Identifier: ' ThisTypeNode'
        MethodSignature
          Identifier: '
        createTypeOperatorNode'
          Parameter
            Identifier: 'operator'
            UnionType
              TypeReference
                QualifiedName
                  Identifier: ' SyntaxKind'
                  Identifier: 'KeyOfKeyword'
              TypeReference
                QualifiedName
                  Identifier: ' SyntaxKind'
                  Identifier: 'UniqueKeyword'
              TypeReference
                QualifiedName
                  Identifier: ' SyntaxKind'
                  Identifier: 'ReadonlyKeyword'
          Parameter
            Identifier: ' type'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' TypeOperatorNode'
        MethodSignature
          Identifier: '
        updateTypeOperatorNode'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' TypeOperatorNode'
          Parameter
            Identifier: ' type'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' TypeOperatorNode'
        MethodSignature
          Identifier: '
        createIndexedAccessTypeNode'
          Parameter
            Identifier: 'objectType'
            TypeReference
              Identifier: ' TypeNode'
          Parameter
            Identifier: ' indexType'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' IndexedAccessTypeNode'
        MethodSignature
          Identifier: '
        updateIndexedAccessTypeNode'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' IndexedAccessTypeNode'
          Parameter
            Identifier: ' objectType'
            TypeReference
              Identifier: ' TypeNode'
          Parameter
            Identifier: ' indexType'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' IndexedAccessTypeNode'
        MethodSignature
          Identifier: '
        createMappedTypeNode'
          Parameter
            Identifier: 'readonlyToken'
            UnionType
              TypeReference
                Identifier: ' ReadonlyKeyword'
              TypeReference
                Identifier: ' PlusToken'
              TypeReference
                Identifier: ' MinusToken'
              UndefinedKeyword
          Parameter
            Identifier: ' typeParameter'
            TypeReference
              Identifier: ' TypeParameterDeclaration'
          Parameter
            Identifier: ' nameType'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          Parameter
            Identifier: ' questionToken'
            UnionType
              TypeReference
                Identifier: ' QuestionToken'
              TypeReference
                Identifier: ' PlusToken'
              TypeReference
                Identifier: ' MinusToken'
              UndefinedKeyword
          Parameter
            Identifier: ' type'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          Parameter
            Identifier: ' members'
            UnionType
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'TypeElement'
              UndefinedKeyword
          TypeReference
            Identifier: ' MappedTypeNode'
        MethodSignature
          Identifier: '
        updateMappedTypeNode'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' MappedTypeNode'
          Parameter
            Identifier: ' readonlyToken'
            UnionType
              TypeReference
                Identifier: ' ReadonlyKeyword'
              TypeReference
                Identifier: ' PlusToken'
              TypeReference
                Identifier: ' MinusToken'
              UndefinedKeyword
          Parameter
            Identifier: ' typeParameter'
            TypeReference
              Identifier: ' TypeParameterDeclaration'
          Parameter
            Identifier: ' nameType'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          Parameter
            Identifier: ' questionToken'
            UnionType
              TypeReference
                Identifier: ' QuestionToken'
              TypeReference
                Identifier: ' PlusToken'
              TypeReference
                Identifier: ' MinusToken'
              UndefinedKeyword
          Parameter
            Identifier: ' type'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          Parameter
            Identifier: ' members'
            UnionType
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'TypeElement'
              UndefinedKeyword
          TypeReference
            Identifier: ' MappedTypeNode'
        MethodSignature
          Identifier: '
        createLiteralTypeNode'
          Parameter
            Identifier: 'literal'
            IndexedAccessType
              TypeReference
                Identifier: ' LiteralTypeNode'
              LiteralType
                StringLiteral
          TypeReference
            Identifier: ' LiteralTypeNode'
        MethodSignature
          Identifier: '
        updateLiteralTypeNode'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' LiteralTypeNode'
          Parameter
            Identifier: ' literal'
            IndexedAccessType
              TypeReference
                Identifier: ' LiteralTypeNode'
              LiteralType
                StringLiteral
          TypeReference
            Identifier: ' LiteralTypeNode'
        MethodSignature
          Identifier: '
        createTemplateLiteralType'
          Parameter
            Identifier: 'head'
            TypeReference
              Identifier: ' TemplateHead'
          Parameter
            Identifier: ' templateSpans'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' TemplateLiteralTypeSpan'
          TypeReference
            Identifier: ' TemplateLiteralTypeNode'
        MethodSignature
          Identifier: '
        updateTemplateLiteralType'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' TemplateLiteralTypeNode'
          Parameter
            Identifier: ' head'
            TypeReference
              Identifier: ' TemplateHead'
          Parameter
            Identifier: ' templateSpans'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' TemplateLiteralTypeSpan'
          TypeReference
            Identifier: ' TemplateLiteralTypeNode'
        MethodSignature
          Identifier: '
        createObjectBindingPattern'
          Parameter
            Identifier: 'elements'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' BindingElement'
          TypeReference
            Identifier: ' ObjectBindingPattern'
        MethodSignature
          Identifier: '
        updateObjectBindingPattern'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ObjectBindingPattern'
          Parameter
            Identifier: ' elements'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' BindingElement'
          TypeReference
            Identifier: ' ObjectBindingPattern'
        MethodSignature
          Identifier: '
        createArrayBindingPattern'
          Parameter
            Identifier: 'elements'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ArrayBindingElement'
          TypeReference
            Identifier: ' ArrayBindingPattern'
        MethodSignature
          Identifier: '
        updateArrayBindingPattern'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ArrayBindingPattern'
          Parameter
            Identifier: ' elements'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ArrayBindingElement'
          TypeReference
            Identifier: ' ArrayBindingPattern'
        MethodSignature
          Identifier: '
        createBindingElement'
          Parameter
            Identifier: 'dotDotDotToken'
            UnionType
              TypeReference
                Identifier: ' DotDotDotToken'
              UndefinedKeyword
          Parameter
            Identifier: ' propertyName'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' PropertyName'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' BindingName'
          Parameter
            Identifier: ' initializer'
            QuestionToken
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' BindingElement'
        MethodSignature
          Identifier: '
        updateBindingElement'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' BindingElement'
          Parameter
            Identifier: ' dotDotDotToken'
            UnionType
              TypeReference
                Identifier: ' DotDotDotToken'
              UndefinedKeyword
          Parameter
            Identifier: ' propertyName'
            UnionType
              TypeReference
                Identifier: ' PropertyName'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' BindingName'
          Parameter
            Identifier: ' initializer'
            UnionType
              TypeReference
                Identifier: ' Expression'
              UndefinedKeyword
          TypeReference
            Identifier: ' BindingElement'
        MethodSignature
          Identifier: '
        createArrayLiteralExpression'
          Parameter
            Identifier: 'elements'
            QuestionToken
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' Expression'
          Parameter
            Identifier: ' multiLine'
            QuestionToken
            BooleanKeyword
          TypeReference
            Identifier: ' ArrayLiteralExpression'
        MethodSignature
          Identifier: '
        updateArrayLiteralExpression'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ArrayLiteralExpression'
          Parameter
            Identifier: ' elements'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' Expression'
          TypeReference
            Identifier: ' ArrayLiteralExpression'
        MethodSignature
          Identifier: '
        createObjectLiteralExpression'
          Parameter
            Identifier: 'properties'
            QuestionToken
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ObjectLiteralElementLike'
          Parameter
            Identifier: ' multiLine'
            QuestionToken
            BooleanKeyword
          TypeReference
            Identifier: ' ObjectLiteralExpression'
        MethodSignature
          Identifier: '
        updateObjectLiteralExpression'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ObjectLiteralExpression'
          Parameter
            Identifier: ' properties'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ObjectLiteralElementLike'
          TypeReference
            Identifier: ' ObjectLiteralExpression'
        MethodSignature
          Identifier: '
        createPropertyAccessExpression'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' name'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' MemberName'
          TypeReference
            Identifier: ' PropertyAccessExpression'
        MethodSignature
          Identifier: '
        updatePropertyAccessExpression'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' PropertyAccessExpression'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' MemberName'
          TypeReference
            Identifier: ' PropertyAccessExpression'
        MethodSignature
          Identifier: '
        createPropertyAccessChain'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' questionDotToken'
            UnionType
              TypeReference
                Identifier: ' QuestionDotToken'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' MemberName'
          TypeReference
            Identifier: ' PropertyAccessChain'
        MethodSignature
          Identifier: '
        updatePropertyAccessChain'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' PropertyAccessChain'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' questionDotToken'
            UnionType
              TypeReference
                Identifier: ' QuestionDotToken'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' MemberName'
          TypeReference
            Identifier: ' PropertyAccessChain'
        MethodSignature
          Identifier: '
        createElementAccessExpression'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' index'
            UnionType
              NumberKeyword
              TypeReference
                Identifier: ' Expression'
          TypeReference
            Identifier: ' ElementAccessExpression'
        MethodSignature
          Identifier: '
        updateElementAccessExpression'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ElementAccessExpression'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' argumentExpression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' ElementAccessExpression'
        MethodSignature
          Identifier: '
        createElementAccessChain'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' questionDotToken'
            UnionType
              TypeReference
                Identifier: ' QuestionDotToken'
              UndefinedKeyword
          Parameter
            Identifier: ' index'
            UnionType
              NumberKeyword
              TypeReference
                Identifier: ' Expression'
          TypeReference
            Identifier: ' ElementAccessChain'
        MethodSignature
          Identifier: '
        updateElementAccessChain'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ElementAccessChain'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' questionDotToken'
            UnionType
              TypeReference
                Identifier: ' QuestionDotToken'
              UndefinedKeyword
          Parameter
            Identifier: ' argumentExpression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' ElementAccessChain'
        MethodSignature
          Identifier: '
        createCallExpression'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' typeArguments'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeNode'
              UndefinedKeyword
          Parameter
            Identifier: ' argumentsArray'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' Expression'
              UndefinedKeyword
          TypeReference
            Identifier: ' CallExpression'
        MethodSignature
          Identifier: '
        updateCallExpression'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' CallExpression'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' typeArguments'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeNode'
              UndefinedKeyword
          Parameter
            Identifier: ' argumentsArray'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' Expression'
          TypeReference
            Identifier: ' CallExpression'
        MethodSignature
          Identifier: '
        createCallChain'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' questionDotToken'
            UnionType
              TypeReference
                Identifier: ' QuestionDotToken'
              UndefinedKeyword
          Parameter
            Identifier: ' typeArguments'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeNode'
              UndefinedKeyword
          Parameter
            Identifier: ' argumentsArray'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' Expression'
              UndefinedKeyword
          TypeReference
            Identifier: ' CallChain'
        MethodSignature
          Identifier: '
        updateCallChain'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' CallChain'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' questionDotToken'
            UnionType
              TypeReference
                Identifier: ' QuestionDotToken'
              UndefinedKeyword
          Parameter
            Identifier: ' typeArguments'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeNode'
              UndefinedKeyword
          Parameter
            Identifier: ' argumentsArray'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' Expression'
          TypeReference
            Identifier: ' CallChain'
        MethodSignature
          Identifier: '
        createNewExpression'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' typeArguments'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeNode'
              UndefinedKeyword
          Parameter
            Identifier: ' argumentsArray'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' Expression'
              UndefinedKeyword
          TypeReference
            Identifier: ' NewExpression'
        MethodSignature
          Identifier: '
        updateNewExpression'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' NewExpression'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' typeArguments'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeNode'
              UndefinedKeyword
          Parameter
            Identifier: ' argumentsArray'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' Expression'
              UndefinedKeyword
          TypeReference
            Identifier: ' NewExpression'
        MethodSignature
          Identifier: '
        createTaggedTemplateExpression'
          Parameter
            Identifier: 'tag'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' typeArguments'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeNode'
              UndefinedKeyword
          Parameter
            Identifier: ' template'
            TypeReference
              Identifier: ' TemplateLiteral'
          TypeReference
            Identifier: ' TaggedTemplateExpression'
        MethodSignature
          Identifier: '
        updateTaggedTemplateExpression'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' TaggedTemplateExpression'
          Parameter
            Identifier: ' tag'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' typeArguments'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeNode'
              UndefinedKeyword
          Parameter
            Identifier: ' template'
            TypeReference
              Identifier: ' TemplateLiteral'
          TypeReference
            Identifier: ' TaggedTemplateExpression'
        MethodSignature
          Identifier: '
        createTypeAssertion'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' TypeNode'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' TypeAssertion'
        MethodSignature
          Identifier: '
        updateTypeAssertion'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' TypeAssertion'
          Parameter
            Identifier: ' type'
            TypeReference
              Identifier: ' TypeNode'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' TypeAssertion'
        MethodSignature
          Identifier: '
        createParenthesizedExpression'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' ParenthesizedExpression'
        MethodSignature
          Identifier: '
        updateParenthesizedExpression'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ParenthesizedExpression'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' ParenthesizedExpression'
        MethodSignature
          Identifier: '
        createFunctionExpression'
          Parameter
            Identifier: 'modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' Modifier'
              UndefinedKeyword
          Parameter
            Identifier: ' asteriskToken'
            UnionType
              TypeReference
                Identifier: ' AsteriskToken'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' typeParameters'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeParameterDeclaration'
              UndefinedKeyword
          Parameter
            Identifier: ' parameters'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ParameterDeclaration'
              UndefinedKeyword
          Parameter
            Identifier: ' type'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          Parameter
            Identifier: ' body'
            TypeReference
              Identifier: ' Block'
          TypeReference
            Identifier: ' FunctionExpression'
        MethodSignature
          Identifier: '
        updateFunctionExpression'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' FunctionExpression'
          Parameter
            Identifier: ' modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' Modifier'
              UndefinedKeyword
          Parameter
            Identifier: ' asteriskToken'
            UnionType
              TypeReference
                Identifier: ' AsteriskToken'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' typeParameters'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeParameterDeclaration'
              UndefinedKeyword
          Parameter
            Identifier: ' parameters'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ParameterDeclaration'
          Parameter
            Identifier: ' type'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          Parameter
            Identifier: ' body'
            TypeReference
              Identifier: ' Block'
          TypeReference
            Identifier: ' FunctionExpression'
        MethodSignature
          Identifier: '
        createArrowFunction'
          Parameter
            Identifier: 'modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' Modifier'
              UndefinedKeyword
          Parameter
            Identifier: ' typeParameters'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeParameterDeclaration'
              UndefinedKeyword
          Parameter
            Identifier: ' parameters'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ParameterDeclaration'
          Parameter
            Identifier: ' type'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          Parameter
            Identifier: ' equalsGreaterThanToken'
            UnionType
              TypeReference
                Identifier: ' EqualsGreaterThanToken'
              UndefinedKeyword
          Parameter
            Identifier: ' body'
            TypeReference
              Identifier: ' ConciseBody'
          TypeReference
            Identifier: ' ArrowFunction'
        MethodSignature
          Identifier: '
        updateArrowFunction'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ArrowFunction'
          Parameter
            Identifier: ' modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' Modifier'
              UndefinedKeyword
          Parameter
            Identifier: ' typeParameters'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeParameterDeclaration'
              UndefinedKeyword
          Parameter
            Identifier: ' parameters'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ParameterDeclaration'
          Parameter
            Identifier: ' type'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          Parameter
            Identifier: ' equalsGreaterThanToken'
            TypeReference
              Identifier: ' EqualsGreaterThanToken'
          Parameter
            Identifier: ' body'
            TypeReference
              Identifier: ' ConciseBody'
          TypeReference
            Identifier: ' ArrowFunction'
        MethodSignature
          Identifier: '
        createDeleteExpression'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' DeleteExpression'
        MethodSignature
          Identifier: '
        updateDeleteExpression'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' DeleteExpression'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' DeleteExpression'
        MethodSignature
          Identifier: '
        createTypeOfExpression'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' TypeOfExpression'
        MethodSignature
          Identifier: '
        updateTypeOfExpression'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' TypeOfExpression'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' TypeOfExpression'
        MethodSignature
          Identifier: '
        createVoidExpression'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' VoidExpression'
        MethodSignature
          Identifier: '
        updateVoidExpression'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' VoidExpression'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' VoidExpression'
        MethodSignature
          Identifier: '
        createAwaitExpression'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' AwaitExpression'
        MethodSignature
          Identifier: '
        updateAwaitExpression'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' AwaitExpression'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' AwaitExpression'
        MethodSignature
          Identifier: '
        createPrefixUnaryExpression'
          Parameter
            Identifier: 'operator'
            TypeReference
              Identifier: ' PrefixUnaryOperator'
          Parameter
            Identifier: ' operand'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' PrefixUnaryExpression'
        MethodSignature
          Identifier: '
        updatePrefixUnaryExpression'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' PrefixUnaryExpression'
          Parameter
            Identifier: ' operand'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' PrefixUnaryExpression'
        MethodSignature
          Identifier: '
        createPostfixUnaryExpression'
          Parameter
            Identifier: 'operand'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' operator'
            TypeReference
              Identifier: ' PostfixUnaryOperator'
          TypeReference
            Identifier: ' PostfixUnaryExpression'
        MethodSignature
          Identifier: '
        updatePostfixUnaryExpression'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' PostfixUnaryExpression'
          Parameter
            Identifier: ' operand'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' PostfixUnaryExpression'
        MethodSignature
          Identifier: '
        createBinaryExpression'
          Parameter
            Identifier: 'left'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' operator'
            UnionType
              TypeReference
                Identifier: ' BinaryOperator'
              TypeReference
                Identifier: ' BinaryOperatorToken'
          Parameter
            Identifier: ' right'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' BinaryExpression'
        MethodSignature
          Identifier: '
        updateBinaryExpression'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' BinaryExpression'
          Parameter
            Identifier: ' left'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' operator'
            UnionType
              TypeReference
                Identifier: ' BinaryOperator'
              TypeReference
                Identifier: ' BinaryOperatorToken'
          Parameter
            Identifier: ' right'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' BinaryExpression'
        MethodSignature
          Identifier: '
        createConditionalExpression'
          Parameter
            Identifier: 'condition'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' questionToken'
            UnionType
              TypeReference
                Identifier: ' QuestionToken'
              UndefinedKeyword
          Parameter
            Identifier: ' whenTrue'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' colonToken'
            UnionType
              TypeReference
                Identifier: ' ColonToken'
              UndefinedKeyword
          Parameter
            Identifier: ' whenFalse'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' ConditionalExpression'
        MethodSignature
          Identifier: '
        updateConditionalExpression'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ConditionalExpression'
          Parameter
            Identifier: ' condition'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' questionToken'
            TypeReference
              Identifier: ' QuestionToken'
          Parameter
            Identifier: ' whenTrue'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' colonToken'
            TypeReference
              Identifier: ' ColonToken'
          Parameter
            Identifier: ' whenFalse'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' ConditionalExpression'
        MethodSignature
          Identifier: '
        createTemplateExpression'
          Parameter
            Identifier: 'head'
            TypeReference
              Identifier: ' TemplateHead'
          Parameter
            Identifier: ' templateSpans'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' TemplateSpan'
          TypeReference
            Identifier: ' TemplateExpression'
        MethodSignature
          Identifier: '
        updateTemplateExpression'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' TemplateExpression'
          Parameter
            Identifier: ' head'
            TypeReference
              Identifier: ' TemplateHead'
          Parameter
            Identifier: ' templateSpans'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' TemplateSpan'
          TypeReference
            Identifier: ' TemplateExpression'
        MethodSignature
          Identifier: '
        createTemplateHead'
          Parameter
            Identifier: 'text'
            StringKeyword
          Parameter
            Identifier: ' rawText'
            QuestionToken
            StringKeyword
          Parameter
            Identifier: ' templateFlags'
            QuestionToken
            TypeReference
              Identifier: ' TokenFlags'
          TypeReference
            Identifier: ' TemplateHead'
        MethodSignature
          Identifier: '
        createTemplateHead'
          Parameter
            Identifier: 'text'
            UnionType
              StringKeyword
              UndefinedKeyword
          Parameter
            Identifier: ' rawText'
            StringKeyword
          Parameter
            Identifier: ' templateFlags'
            QuestionToken
            TypeReference
              Identifier: ' TokenFlags'
          TypeReference
            Identifier: ' TemplateHead'
        MethodSignature
          Identifier: '
        createTemplateMiddle'
          Parameter
            Identifier: 'text'
            StringKeyword
          Parameter
            Identifier: ' rawText'
            QuestionToken
            StringKeyword
          Parameter
            Identifier: ' templateFlags'
            QuestionToken
            TypeReference
              Identifier: ' TokenFlags'
          TypeReference
            Identifier: ' TemplateMiddle'
        MethodSignature
          Identifier: '
        createTemplateMiddle'
          Parameter
            Identifier: 'text'
            UnionType
              StringKeyword
              UndefinedKeyword
          Parameter
            Identifier: ' rawText'
            StringKeyword
          Parameter
            Identifier: ' templateFlags'
            QuestionToken
            TypeReference
              Identifier: ' TokenFlags'
          TypeReference
            Identifier: ' TemplateMiddle'
        MethodSignature
          Identifier: '
        createTemplateTail'
          Parameter
            Identifier: 'text'
            StringKeyword
          Parameter
            Identifier: ' rawText'
            QuestionToken
            StringKeyword
          Parameter
            Identifier: ' templateFlags'
            QuestionToken
            TypeReference
              Identifier: ' TokenFlags'
          TypeReference
            Identifier: ' TemplateTail'
        MethodSignature
          Identifier: '
        createTemplateTail'
          Parameter
            Identifier: 'text'
            UnionType
              StringKeyword
              UndefinedKeyword
          Parameter
            Identifier: ' rawText'
            StringKeyword
          Parameter
            Identifier: ' templateFlags'
            QuestionToken
            TypeReference
              Identifier: ' TokenFlags'
          TypeReference
            Identifier: ' TemplateTail'
        MethodSignature
          Identifier: '
        createNoSubstitutionTemplateLiteral'
          Parameter
            Identifier: 'text'
            StringKeyword
          Parameter
            Identifier: ' rawText'
            QuestionToken
            StringKeyword
          TypeReference
            Identifier: ' NoSubstitutionTemplateLiteral'
        MethodSignature
          Identifier: '
        createNoSubstitutionTemplateLiteral'
          Parameter
            Identifier: 'text'
            UnionType
              StringKeyword
              UndefinedKeyword
          Parameter
            Identifier: ' rawText'
            StringKeyword
          TypeReference
            Identifier: ' NoSubstitutionTemplateLiteral'
        MethodSignature
          Identifier: '
        createYieldExpression'
          Parameter
            Identifier: 'asteriskToken'
            TypeReference
              Identifier: ' AsteriskToken'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' YieldExpression'
        MethodSignature
          Identifier: '
        createYieldExpression'
          Parameter
            Identifier: 'asteriskToken'
            UndefinedKeyword
          Parameter
            Identifier: ' expression'
            UnionType
              TypeReference
                Identifier: ' Expression'
              UndefinedKeyword
          TypeReference
            Identifier: ' YieldExpression'
        MethodSignature
          Identifier: '
        updateYieldExpression'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' YieldExpression'
          Parameter
            Identifier: ' asteriskToken'
            UnionType
              TypeReference
                Identifier: ' AsteriskToken'
              UndefinedKeyword
          Parameter
            Identifier: ' expression'
            UnionType
              TypeReference
                Identifier: ' Expression'
              UndefinedKeyword
          TypeReference
            Identifier: ' YieldExpression'
        MethodSignature
          Identifier: '
        createSpreadElement'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' SpreadElement'
        MethodSignature
          Identifier: '
        updateSpreadElement'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' SpreadElement'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' SpreadElement'
        MethodSignature
          Identifier: '
        createClassExpression'
          Parameter
            Identifier: 'modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' typeParameters'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeParameterDeclaration'
              UndefinedKeyword
          Parameter
            Identifier: ' heritageClauses'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' HeritageClause'
              UndefinedKeyword
          Parameter
            Identifier: ' members'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ClassElement'
          TypeReference
            Identifier: ' ClassExpression'
        MethodSignature
          Identifier: '
        updateClassExpression'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ClassExpression'
          Parameter
            Identifier: ' modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' typeParameters'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeParameterDeclaration'
              UndefinedKeyword
          Parameter
            Identifier: ' heritageClauses'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' HeritageClause'
              UndefinedKeyword
          Parameter
            Identifier: ' members'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ClassElement'
          TypeReference
            Identifier: ' ClassExpression'
        MethodSignature
          Identifier: '
        createOmittedExpression'
          TypeReference
            Identifier: ' OmittedExpression'
        MethodSignature
          Identifier: '
        createExpressionWithTypeArguments'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' typeArguments'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeNode'
              UndefinedKeyword
          TypeReference
            Identifier: ' ExpressionWithTypeArguments'
        MethodSignature
          Identifier: '
        updateExpressionWithTypeArguments'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ExpressionWithTypeArguments'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' typeArguments'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeNode'
              UndefinedKeyword
          TypeReference
            Identifier: ' ExpressionWithTypeArguments'
        MethodSignature
          Identifier: '
        createAsExpression'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' type'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' AsExpression'
        MethodSignature
          Identifier: '
        updateAsExpression'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' AsExpression'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' type'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' AsExpression'
        MethodSignature
          Identifier: '
        createNonNullExpression'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' NonNullExpression'
        MethodSignature
          Identifier: '
        updateNonNullExpression'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' NonNullExpression'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' NonNullExpression'
        MethodSignature
          Identifier: '
        createNonNullChain'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' NonNullChain'
        MethodSignature
          Identifier: '
        updateNonNullChain'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' NonNullChain'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' NonNullChain'
        MethodSignature
          Identifier: '
        createMetaProperty'
          Parameter
            Identifier: 'keywordToken'
            IndexedAccessType
              TypeReference
                Identifier: ' MetaProperty'
              LiteralType
                StringLiteral
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' Identifier'
          TypeReference
            Identifier: ' MetaProperty'
        MethodSignature
          Identifier: '
        updateMetaProperty'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' MetaProperty'
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' Identifier'
          TypeReference
            Identifier: ' MetaProperty'
        MethodSignature
          Identifier: '
        createSatisfiesExpression'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' type'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' SatisfiesExpression'
        MethodSignature
          Identifier: '
        updateSatisfiesExpression'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' SatisfiesExpression'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' type'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' SatisfiesExpression'
        MethodSignature
          Identifier: '
        createTemplateSpan'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' literal'
            UnionType
              TypeReference
                Identifier: ' TemplateMiddle'
              TypeReference
                Identifier: ' TemplateTail'
          TypeReference
            Identifier: ' TemplateSpan'
        MethodSignature
          Identifier: '
        updateTemplateSpan'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' TemplateSpan'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' literal'
            UnionType
              TypeReference
                Identifier: ' TemplateMiddle'
              TypeReference
                Identifier: ' TemplateTail'
          TypeReference
            Identifier: ' TemplateSpan'
        MethodSignature
          Identifier: '
        createSemicolonClassElement'
          TypeReference
            Identifier: ' SemicolonClassElement'
        MethodSignature
          Identifier: '
        createBlock'
          Parameter
            Identifier: 'statements'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' Statement'
          Parameter
            Identifier: ' multiLine'
            QuestionToken
            BooleanKeyword
          TypeReference
            Identifier: ' Block'
        MethodSignature
          Identifier: '
        updateBlock'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' Block'
          Parameter
            Identifier: ' statements'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' Statement'
          TypeReference
            Identifier: ' Block'
        MethodSignature
          Identifier: '
        createVariableStatement'
          Parameter
            Identifier: 'modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' declarationList'
            UnionType
              TypeReference
                Identifier: ' VariableDeclarationList'
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' VariableDeclaration'
          TypeReference
            Identifier: ' VariableStatement'
        MethodSignature
          Identifier: '
        updateVariableStatement'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' VariableStatement'
          Parameter
            Identifier: ' modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' declarationList'
            TypeReference
              Identifier: ' VariableDeclarationList'
          TypeReference
            Identifier: ' VariableStatement'
        MethodSignature
          Identifier: '
        createEmptyStatement'
          TypeReference
            Identifier: ' EmptyStatement'
        MethodSignature
          Identifier: '
        createExpressionStatement'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' ExpressionStatement'
        MethodSignature
          Identifier: '
        updateExpressionStatement'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ExpressionStatement'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' ExpressionStatement'
        MethodSignature
          Identifier: '
        createIfStatement'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' thenStatement'
            TypeReference
              Identifier: ' Statement'
          Parameter
            Identifier: ' elseStatement'
            QuestionToken
            TypeReference
              Identifier: ' Statement'
          TypeReference
            Identifier: ' IfStatement'
        MethodSignature
          Identifier: '
        updateIfStatement'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' IfStatement'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' thenStatement'
            TypeReference
              Identifier: ' Statement'
          Parameter
            Identifier: ' elseStatement'
            UnionType
              TypeReference
                Identifier: ' Statement'
              UndefinedKeyword
          TypeReference
            Identifier: ' IfStatement'
        MethodSignature
          Identifier: '
        createDoStatement'
          Parameter
            Identifier: 'statement'
            TypeReference
              Identifier: ' Statement'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' DoStatement'
        MethodSignature
          Identifier: '
        updateDoStatement'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' DoStatement'
          Parameter
            Identifier: ' statement'
            TypeReference
              Identifier: ' Statement'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' DoStatement'
        MethodSignature
          Identifier: '
        createWhileStatement'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' statement'
            TypeReference
              Identifier: ' Statement'
          TypeReference
            Identifier: ' WhileStatement'
        MethodSignature
          Identifier: '
        updateWhileStatement'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' WhileStatement'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' statement'
            TypeReference
              Identifier: ' Statement'
          TypeReference
            Identifier: ' WhileStatement'
        MethodSignature
          Identifier: '
        createForStatement'
          Parameter
            Identifier: 'initializer'
            UnionType
              TypeReference
                Identifier: ' ForInitializer'
              UndefinedKeyword
          Parameter
            Identifier: ' condition'
            UnionType
              TypeReference
                Identifier: ' Expression'
              UndefinedKeyword
          Parameter
            Identifier: ' incrementor'
            UnionType
              TypeReference
                Identifier: ' Expression'
              UndefinedKeyword
          Parameter
            Identifier: ' statement'
            TypeReference
              Identifier: ' Statement'
          TypeReference
            Identifier: ' ForStatement'
        MethodSignature
          Identifier: '
        updateForStatement'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ForStatement'
          Parameter
            Identifier: ' initializer'
            UnionType
              TypeReference
                Identifier: ' ForInitializer'
              UndefinedKeyword
          Parameter
            Identifier: ' condition'
            UnionType
              TypeReference
                Identifier: ' Expression'
              UndefinedKeyword
          Parameter
            Identifier: ' incrementor'
            UnionType
              TypeReference
                Identifier: ' Expression'
              UndefinedKeyword
          Parameter
            Identifier: ' statement'
            TypeReference
              Identifier: ' Statement'
          TypeReference
            Identifier: ' ForStatement'
        MethodSignature
          Identifier: '
        createForInStatement'
          Parameter
            Identifier: 'initializer'
            TypeReference
              Identifier: ' ForInitializer'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' statement'
            TypeReference
              Identifier: ' Statement'
          TypeReference
            Identifier: ' ForInStatement'
        MethodSignature
          Identifier: '
        updateForInStatement'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ForInStatement'
          Parameter
            Identifier: ' initializer'
            TypeReference
              Identifier: ' ForInitializer'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' statement'
            TypeReference
              Identifier: ' Statement'
          TypeReference
            Identifier: ' ForInStatement'
        MethodSignature
          Identifier: '
        createForOfStatement'
          Parameter
            Identifier: 'awaitModifier'
            UnionType
              TypeReference
                Identifier: ' AwaitKeyword'
              UndefinedKeyword
          Parameter
            Identifier: ' initializer'
            TypeReference
              Identifier: ' ForInitializer'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' statement'
            TypeReference
              Identifier: ' Statement'
          TypeReference
            Identifier: ' ForOfStatement'
        MethodSignature
          Identifier: '
        updateForOfStatement'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ForOfStatement'
          Parameter
            Identifier: ' awaitModifier'
            UnionType
              TypeReference
                Identifier: ' AwaitKeyword'
              UndefinedKeyword
          Parameter
            Identifier: ' initializer'
            TypeReference
              Identifier: ' ForInitializer'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' statement'
            TypeReference
              Identifier: ' Statement'
          TypeReference
            Identifier: ' ForOfStatement'
        MethodSignature
          Identifier: '
        createContinueStatement'
          Parameter
            Identifier: 'label'
            QuestionToken
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' Identifier'
          TypeReference
            Identifier: ' ContinueStatement'
        MethodSignature
          Identifier: '
        updateContinueStatement'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ContinueStatement'
          Parameter
            Identifier: ' label'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          TypeReference
            Identifier: ' ContinueStatement'
        MethodSignature
          Identifier: '
        createBreakStatement'
          Parameter
            Identifier: 'label'
            QuestionToken
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' Identifier'
          TypeReference
            Identifier: ' BreakStatement'
        MethodSignature
          Identifier: '
        updateBreakStatement'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' BreakStatement'
          Parameter
            Identifier: ' label'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          TypeReference
            Identifier: ' BreakStatement'
        MethodSignature
          Identifier: '
        createReturnStatement'
          Parameter
            Identifier: 'expression'
            QuestionToken
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' ReturnStatement'
        MethodSignature
          Identifier: '
        updateReturnStatement'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ReturnStatement'
          Parameter
            Identifier: ' expression'
            UnionType
              TypeReference
                Identifier: ' Expression'
              UndefinedKeyword
          TypeReference
            Identifier: ' ReturnStatement'
        MethodSignature
          Identifier: '
        createWithStatement'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' statement'
            TypeReference
              Identifier: ' Statement'
          TypeReference
            Identifier: ' WithStatement'
        MethodSignature
          Identifier: '
        updateWithStatement'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' WithStatement'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' statement'
            TypeReference
              Identifier: ' Statement'
          TypeReference
            Identifier: ' WithStatement'
        MethodSignature
          Identifier: '
        createSwitchStatement'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' caseBlock'
            TypeReference
              Identifier: ' CaseBlock'
          TypeReference
            Identifier: ' SwitchStatement'
        MethodSignature
          Identifier: '
        updateSwitchStatement'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' SwitchStatement'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' caseBlock'
            TypeReference
              Identifier: ' CaseBlock'
          TypeReference
            Identifier: ' SwitchStatement'
        MethodSignature
          Identifier: '
        createLabeledStatement'
          Parameter
            Identifier: 'label'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' Identifier'
          Parameter
            Identifier: ' statement'
            TypeReference
              Identifier: ' Statement'
          TypeReference
            Identifier: ' LabeledStatement'
        MethodSignature
          Identifier: '
        updateLabeledStatement'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' LabeledStatement'
          Parameter
            Identifier: ' label'
            TypeReference
              Identifier: ' Identifier'
          Parameter
            Identifier: ' statement'
            TypeReference
              Identifier: ' Statement'
          TypeReference
            Identifier: ' LabeledStatement'
        MethodSignature
          Identifier: '
        createThrowStatement'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' ThrowStatement'
        MethodSignature
          Identifier: '
        updateThrowStatement'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ThrowStatement'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' ThrowStatement'
        MethodSignature
          Identifier: '
        createTryStatement'
          Parameter
            Identifier: 'tryBlock'
            TypeReference
              Identifier: ' Block'
          Parameter
            Identifier: ' catchClause'
            UnionType
              TypeReference
                Identifier: ' CatchClause'
              UndefinedKeyword
          Parameter
            Identifier: ' finallyBlock'
            UnionType
              TypeReference
                Identifier: ' Block'
              UndefinedKeyword
          TypeReference
            Identifier: ' TryStatement'
        MethodSignature
          Identifier: '
        updateTryStatement'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' TryStatement'
          Parameter
            Identifier: ' tryBlock'
            TypeReference
              Identifier: ' Block'
          Parameter
            Identifier: ' catchClause'
            UnionType
              TypeReference
                Identifier: ' CatchClause'
              UndefinedKeyword
          Parameter
            Identifier: ' finallyBlock'
            UnionType
              TypeReference
                Identifier: ' Block'
              UndefinedKeyword
          TypeReference
            Identifier: ' TryStatement'
        MethodSignature
          Identifier: '
        createDebuggerStatement'
          TypeReference
            Identifier: ' DebuggerStatement'
        MethodSignature
          Identifier: '
        createVariableDeclaration'
          Parameter
            Identifier: 'name'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' BindingName'
          Parameter
            Identifier: ' exclamationToken'
            QuestionToken
            TypeReference
              Identifier: ' ExclamationToken'
          Parameter
            Identifier: ' type'
            QuestionToken
            TypeReference
              Identifier: ' TypeNode'
          Parameter
            Identifier: ' initializer'
            QuestionToken
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' VariableDeclaration'
        MethodSignature
          Identifier: '
        updateVariableDeclaration'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' VariableDeclaration'
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' BindingName'
          Parameter
            Identifier: ' exclamationToken'
            UnionType
              TypeReference
                Identifier: ' ExclamationToken'
              UndefinedKeyword
          Parameter
            Identifier: ' type'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          Parameter
            Identifier: ' initializer'
            UnionType
              TypeReference
                Identifier: ' Expression'
              UndefinedKeyword
          TypeReference
            Identifier: ' VariableDeclaration'
        MethodSignature
          Identifier: '
        createVariableDeclarationList'
          Parameter
            Identifier: 'declarations'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' VariableDeclaration'
          Parameter
            Identifier: ' flags'
            QuestionToken
            TypeReference
              Identifier: ' NodeFlags'
          TypeReference
            Identifier: ' VariableDeclarationList'
        MethodSignature
          Identifier: '
        updateVariableDeclarationList'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' VariableDeclarationList'
          Parameter
            Identifier: ' declarations'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' VariableDeclaration'
          TypeReference
            Identifier: ' VariableDeclarationList'
        MethodSignature
          Identifier: '
        createFunctionDeclaration'
          Parameter
            Identifier: 'modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' asteriskToken'
            UnionType
              TypeReference
                Identifier: ' AsteriskToken'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' typeParameters'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeParameterDeclaration'
              UndefinedKeyword
          Parameter
            Identifier: ' parameters'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ParameterDeclaration'
          Parameter
            Identifier: ' type'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          Parameter
            Identifier: ' body'
            UnionType
              TypeReference
                Identifier: ' Block'
              UndefinedKeyword
          TypeReference
            Identifier: ' FunctionDeclaration'
        MethodSignature
          Identifier: '
        updateFunctionDeclaration'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' FunctionDeclaration'
          Parameter
            Identifier: ' modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' asteriskToken'
            UnionType
              TypeReference
                Identifier: ' AsteriskToken'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' typeParameters'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeParameterDeclaration'
              UndefinedKeyword
          Parameter
            Identifier: ' parameters'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ParameterDeclaration'
          Parameter
            Identifier: ' type'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          Parameter
            Identifier: ' body'
            UnionType
              TypeReference
                Identifier: ' Block'
              UndefinedKeyword
          TypeReference
            Identifier: ' FunctionDeclaration'
        MethodSignature
          Identifier: '
        createClassDeclaration'
          Parameter
            Identifier: 'modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' typeParameters'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeParameterDeclaration'
              UndefinedKeyword
          Parameter
            Identifier: ' heritageClauses'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' HeritageClause'
              UndefinedKeyword
          Parameter
            Identifier: ' members'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ClassElement'
          TypeReference
            Identifier: ' ClassDeclaration'
        MethodSignature
          Identifier: '
        updateClassDeclaration'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ClassDeclaration'
          Parameter
            Identifier: ' modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' typeParameters'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeParameterDeclaration'
              UndefinedKeyword
          Parameter
            Identifier: ' heritageClauses'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' HeritageClause'
              UndefinedKeyword
          Parameter
            Identifier: ' members'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ClassElement'
          TypeReference
            Identifier: ' ClassDeclaration'
        MethodSignature
          Identifier: '
        createInterfaceDeclaration'
          Parameter
            Identifier: 'modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' Identifier'
          Parameter
            Identifier: ' typeParameters'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeParameterDeclaration'
              UndefinedKeyword
          Parameter
            Identifier: ' heritageClauses'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' HeritageClause'
              UndefinedKeyword
          Parameter
            Identifier: ' members'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' TypeElement'
          TypeReference
            Identifier: ' InterfaceDeclaration'
        MethodSignature
          Identifier: '
        updateInterfaceDeclaration'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' InterfaceDeclaration'
          Parameter
            Identifier: ' modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' Identifier'
          Parameter
            Identifier: ' typeParameters'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeParameterDeclaration'
              UndefinedKeyword
          Parameter
            Identifier: ' heritageClauses'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' HeritageClause'
              UndefinedKeyword
          Parameter
            Identifier: ' members'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' TypeElement'
          TypeReference
            Identifier: ' InterfaceDeclaration'
        MethodSignature
          Identifier: '
        createTypeAliasDeclaration'
          Parameter
            Identifier: 'modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' Identifier'
          Parameter
            Identifier: ' typeParameters'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeParameterDeclaration'
              UndefinedKeyword
          Parameter
            Identifier: ' type'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' TypeAliasDeclaration'
        MethodSignature
          Identifier: '
        updateTypeAliasDeclaration'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' TypeAliasDeclaration'
          Parameter
            Identifier: ' modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' Identifier'
          Parameter
            Identifier: ' typeParameters'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeParameterDeclaration'
              UndefinedKeyword
          Parameter
            Identifier: ' type'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' TypeAliasDeclaration'
        MethodSignature
          Identifier: '
        createEnumDeclaration'
          Parameter
            Identifier: 'modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' Identifier'
          Parameter
            Identifier: ' members'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' EnumMember'
          TypeReference
            Identifier: ' EnumDeclaration'
        MethodSignature
          Identifier: '
        updateEnumDeclaration'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' EnumDeclaration'
          Parameter
            Identifier: ' modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' Identifier'
          Parameter
            Identifier: ' members'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' EnumMember'
          TypeReference
            Identifier: ' EnumDeclaration'
        MethodSignature
          Identifier: '
        createModuleDeclaration'
          Parameter
            Identifier: 'modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' ModuleName'
          Parameter
            Identifier: ' body'
            UnionType
              TypeReference
                Identifier: ' ModuleBody'
              UndefinedKeyword
          Parameter
            Identifier: ' flags'
            QuestionToken
            TypeReference
              Identifier: ' NodeFlags'
          TypeReference
            Identifier: ' ModuleDeclaration'
        MethodSignature
          Identifier: '
        updateModuleDeclaration'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ModuleDeclaration'
          Parameter
            Identifier: ' modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' ModuleName'
          Parameter
            Identifier: ' body'
            UnionType
              TypeReference
                Identifier: ' ModuleBody'
              UndefinedKeyword
          TypeReference
            Identifier: ' ModuleDeclaration'
        MethodSignature
          Identifier: '
        createModuleBlock'
          Parameter
            Identifier: 'statements'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' Statement'
          TypeReference
            Identifier: ' ModuleBlock'
        MethodSignature
          Identifier: '
        updateModuleBlock'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ModuleBlock'
          Parameter
            Identifier: ' statements'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' Statement'
          TypeReference
            Identifier: ' ModuleBlock'
        MethodSignature
          Identifier: '
        createCaseBlock'
          Parameter
            Identifier: 'clauses'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' CaseOrDefaultClause'
          TypeReference
            Identifier: ' CaseBlock'
        MethodSignature
          Identifier: '
        updateCaseBlock'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' CaseBlock'
          Parameter
            Identifier: ' clauses'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' CaseOrDefaultClause'
          TypeReference
            Identifier: ' CaseBlock'
        MethodSignature
          Identifier: '
        createNamespaceExportDeclaration'
          Parameter
            Identifier: 'name'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' Identifier'
          TypeReference
            Identifier: ' NamespaceExportDeclaration'
        MethodSignature
          Identifier: '
        updateNamespaceExportDeclaration'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' NamespaceExportDeclaration'
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' Identifier'
          TypeReference
            Identifier: ' NamespaceExportDeclaration'
        MethodSignature
          Identifier: '
        createImportEqualsDeclaration'
          Parameter
            Identifier: 'modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' isTypeOnly'
            BooleanKeyword
          Parameter
            Identifier: ' name'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' Identifier'
          Parameter
            Identifier: ' moduleReference'
            TypeReference
              Identifier: ' ModuleReference'
          TypeReference
            Identifier: ' ImportEqualsDeclaration'
        MethodSignature
          Identifier: '
        updateImportEqualsDeclaration'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ImportEqualsDeclaration'
          Parameter
            Identifier: ' modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' isTypeOnly'
            BooleanKeyword
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' Identifier'
          Parameter
            Identifier: ' moduleReference'
            TypeReference
              Identifier: ' ModuleReference'
          TypeReference
            Identifier: ' ImportEqualsDeclaration'
        MethodSignature
          Identifier: '
        createImportDeclaration'
          Parameter
            Identifier: 'modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' importClause'
            UnionType
              TypeReference
                Identifier: ' ImportClause'
              UndefinedKeyword
          Parameter
            Identifier: ' moduleSpecifier'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' attributes'
            QuestionToken
            TypeReference
              Identifier: ' ImportAttributes'
          TypeReference
            Identifier: ' ImportDeclaration'
        MethodSignature
          Identifier: '
        updateImportDeclaration'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ImportDeclaration'
          Parameter
            Identifier: ' modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' importClause'
            UnionType
              TypeReference
                Identifier: ' ImportClause'
              UndefinedKeyword
          Parameter
            Identifier: ' moduleSpecifier'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' attributes'
            UnionType
              TypeReference
                Identifier: ' ImportAttributes'
              UndefinedKeyword
          TypeReference
            Identifier: ' ImportDeclaration'
        MethodSignature
          Identifier: '
        createImportClause'
          Parameter
            Identifier: 'isTypeOnly'
            BooleanKeyword
          Parameter
            Identifier: ' name'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' namedBindings'
            UnionType
              TypeReference
                Identifier: ' NamedImportBindings'
              UndefinedKeyword
          TypeReference
            Identifier: ' ImportClause'
        MethodSignature
          Identifier: '
        updateImportClause'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ImportClause'
          Parameter
            Identifier: ' isTypeOnly'
            BooleanKeyword
          Parameter
            Identifier: ' name'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' namedBindings'
            UnionType
              TypeReference
                Identifier: ' NamedImportBindings'
              UndefinedKeyword
          TypeReference
            Identifier: ' ImportClause'
        MethodSignature
          Identifier: '
        /** @deprecated */ createAssertClause'
          Parameter
            Identifier: 'elements'
            TypeReference
              Identifier: ' NodeArray'
              TypeReference
                Identifier: 'AssertEntry'
          Parameter
            Identifier: ' multiLine'
            QuestionToken
            BooleanKeyword
          TypeReference
            Identifier: ' AssertClause'
        MethodSignature
          Identifier: '
        /** @deprecated */ updateAssertClause'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' AssertClause'
          Parameter
            Identifier: ' elements'
            TypeReference
              Identifier: ' NodeArray'
              TypeReference
                Identifier: 'AssertEntry'
          Parameter
            Identifier: ' multiLine'
            QuestionToken
            BooleanKeyword
          TypeReference
            Identifier: ' AssertClause'
        MethodSignature
          Identifier: '
        /** @deprecated */ createAssertEntry'
          Parameter
            Identifier: 'name'
            TypeReference
              Identifier: ' AssertionKey'
          Parameter
            Identifier: ' value'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' AssertEntry'
        MethodSignature
          Identifier: '
        /** @deprecated */ updateAssertEntry'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' AssertEntry'
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' AssertionKey'
          Parameter
            Identifier: ' value'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' AssertEntry'
        MethodSignature
          Identifier: '
        /** @deprecated */ createImportTypeAssertionContainer'
          Parameter
            Identifier: 'clause'
            TypeReference
              Identifier: ' AssertClause'
          Parameter
            Identifier: ' multiLine'
            QuestionToken
            BooleanKeyword
          TypeReference
            Identifier: ' ImportTypeAssertionContainer'
        MethodSignature
          Identifier: '
        /** @deprecated */ updateImportTypeAssertionContainer'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ImportTypeAssertionContainer'
          Parameter
            Identifier: ' clause'
            TypeReference
              Identifier: ' AssertClause'
          Parameter
            Identifier: ' multiLine'
            QuestionToken
            BooleanKeyword
          TypeReference
            Identifier: ' ImportTypeAssertionContainer'
        MethodSignature
          Identifier: '
        createImportAttributes'
          Parameter
            Identifier: 'elements'
            TypeReference
              Identifier: ' NodeArray'
              TypeReference
                Identifier: 'ImportAttribute'
          Parameter
            Identifier: ' multiLine'
            QuestionToken
            BooleanKeyword
          TypeReference
            Identifier: ' ImportAttributes'
        MethodSignature
          Identifier: '
        updateImportAttributes'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ImportAttributes'
          Parameter
            Identifier: ' elements'
            TypeReference
              Identifier: ' NodeArray'
              TypeReference
                Identifier: 'ImportAttribute'
          Parameter
            Identifier: ' multiLine'
            QuestionToken
            BooleanKeyword
          TypeReference
            Identifier: ' ImportAttributes'
        MethodSignature
          Identifier: '
        createImportAttribute'
          Parameter
            Identifier: 'name'
            TypeReference
              Identifier: ' ImportAttributeName'
          Parameter
            Identifier: ' value'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' ImportAttribute'
        MethodSignature
          Identifier: '
        updateImportAttribute'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ImportAttribute'
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' ImportAttributeName'
          Parameter
            Identifier: ' value'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' ImportAttribute'
        MethodSignature
          Identifier: '
        createNamespaceImport'
          Parameter
            Identifier: 'name'
            TypeReference
              Identifier: ' Identifier'
          TypeReference
            Identifier: ' NamespaceImport'
        MethodSignature
          Identifier: '
        updateNamespaceImport'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' NamespaceImport'
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' Identifier'
          TypeReference
            Identifier: ' NamespaceImport'
        MethodSignature
          Identifier: '
        createNamespaceExport'
          Parameter
            Identifier: 'name'
            TypeReference
              Identifier: ' ModuleExportName'
          TypeReference
            Identifier: ' NamespaceExport'
        MethodSignature
          Identifier: '
        updateNamespaceExport'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' NamespaceExport'
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' ModuleExportName'
          TypeReference
            Identifier: ' NamespaceExport'
        MethodSignature
          Identifier: '
        createNamedImports'
          Parameter
            Identifier: 'elements'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ImportSpecifier'
          TypeReference
            Identifier: ' NamedImports'
        MethodSignature
          Identifier: '
        updateNamedImports'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' NamedImports'
          Parameter
            Identifier: ' elements'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ImportSpecifier'
          TypeReference
            Identifier: ' NamedImports'
        MethodSignature
          Identifier: '
        createImportSpecifier'
          Parameter
            Identifier: 'isTypeOnly'
            BooleanKeyword
          Parameter
            Identifier: ' propertyName'
            UnionType
              TypeReference
                Identifier: ' ModuleExportName'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' Identifier'
          TypeReference
            Identifier: ' ImportSpecifier'
        MethodSignature
          Identifier: '
        updateImportSpecifier'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ImportSpecifier'
          Parameter
            Identifier: ' isTypeOnly'
            BooleanKeyword
          Parameter
            Identifier: ' propertyName'
            UnionType
              TypeReference
                Identifier: ' ModuleExportName'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' Identifier'
          TypeReference
            Identifier: ' ImportSpecifier'
        MethodSignature
          Identifier: '
        createExportAssignment'
          Parameter
            Identifier: 'modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' isExportEquals'
            UnionType
              BooleanKeyword
              UndefinedKeyword
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' ExportAssignment'
        MethodSignature
          Identifier: '
        updateExportAssignment'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ExportAssignment'
          Parameter
            Identifier: ' modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' ExportAssignment'
        MethodSignature
          Identifier: '
        createExportDeclaration'
          Parameter
            Identifier: 'modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' isTypeOnly'
            BooleanKeyword
          Parameter
            Identifier: ' exportClause'
            UnionType
              TypeReference
                Identifier: ' NamedExportBindings'
              UndefinedKeyword
          Parameter
            Identifier: ' moduleSpecifier'
            QuestionToken
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' attributes'
            QuestionToken
            TypeReference
              Identifier: ' ImportAttributes'
          TypeReference
            Identifier: ' ExportDeclaration'
        MethodSignature
          Identifier: '
        updateExportDeclaration'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ExportDeclaration'
          Parameter
            Identifier: ' modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          Parameter
            Identifier: ' isTypeOnly'
            BooleanKeyword
          Parameter
            Identifier: ' exportClause'
            UnionType
              TypeReference
                Identifier: ' NamedExportBindings'
              UndefinedKeyword
          Parameter
            Identifier: ' moduleSpecifier'
            UnionType
              TypeReference
                Identifier: ' Expression'
              UndefinedKeyword
          Parameter
            Identifier: ' attributes'
            UnionType
              TypeReference
                Identifier: ' ImportAttributes'
              UndefinedKeyword
          TypeReference
            Identifier: ' ExportDeclaration'
        MethodSignature
          Identifier: '
        createNamedExports'
          Parameter
            Identifier: 'elements'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ExportSpecifier'
          TypeReference
            Identifier: ' NamedExports'
        MethodSignature
          Identifier: '
        updateNamedExports'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' NamedExports'
          Parameter
            Identifier: ' elements'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ExportSpecifier'
          TypeReference
            Identifier: ' NamedExports'
        MethodSignature
          Identifier: '
        createExportSpecifier'
          Parameter
            Identifier: 'isTypeOnly'
            BooleanKeyword
          Parameter
            Identifier: ' propertyName'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' ModuleExportName'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' ModuleExportName'
          TypeReference
            Identifier: ' ExportSpecifier'
        MethodSignature
          Identifier: '
        updateExportSpecifier'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ExportSpecifier'
          Parameter
            Identifier: ' isTypeOnly'
            BooleanKeyword
          Parameter
            Identifier: ' propertyName'
            UnionType
              TypeReference
                Identifier: ' ModuleExportName'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' ModuleExportName'
          TypeReference
            Identifier: ' ExportSpecifier'
        MethodSignature
          Identifier: '
        createExternalModuleReference'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' ExternalModuleReference'
        MethodSignature
          Identifier: '
        updateExternalModuleReference'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ExternalModuleReference'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' ExternalModuleReference'
        MethodSignature
          Identifier: '
        createJSDocAllType'
          TypeReference
            Identifier: ' JSDocAllType'
        MethodSignature
          Identifier: '
        createJSDocUnknownType'
          TypeReference
            Identifier: ' JSDocUnknownType'
        MethodSignature
          Identifier: '
        createJSDocNonNullableType'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' TypeNode'
          Parameter
            Identifier: ' postfix'
            QuestionToken
            BooleanKeyword
          TypeReference
            Identifier: ' JSDocNonNullableType'
        MethodSignature
          Identifier: '
        updateJSDocNonNullableType'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocNonNullableType'
          Parameter
            Identifier: ' type'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' JSDocNonNullableType'
        MethodSignature
          Identifier: '
        createJSDocNullableType'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' TypeNode'
          Parameter
            Identifier: ' postfix'
            QuestionToken
            BooleanKeyword
          TypeReference
            Identifier: ' JSDocNullableType'
        MethodSignature
          Identifier: '
        updateJSDocNullableType'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocNullableType'
          Parameter
            Identifier: ' type'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' JSDocNullableType'
        MethodSignature
          Identifier: '
        createJSDocOptionalType'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' JSDocOptionalType'
        MethodSignature
          Identifier: '
        updateJSDocOptionalType'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocOptionalType'
          Parameter
            Identifier: ' type'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' JSDocOptionalType'
        MethodSignature
          Identifier: '
        createJSDocFunctionType'
          Parameter
            Identifier: 'parameters'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ParameterDeclaration'
          Parameter
            Identifier: ' type'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          TypeReference
            Identifier: ' JSDocFunctionType'
        MethodSignature
          Identifier: '
        updateJSDocFunctionType'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocFunctionType'
          Parameter
            Identifier: ' parameters'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ParameterDeclaration'
          Parameter
            Identifier: ' type'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          TypeReference
            Identifier: ' JSDocFunctionType'
        MethodSignature
          Identifier: '
        createJSDocVariadicType'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' JSDocVariadicType'
        MethodSignature
          Identifier: '
        updateJSDocVariadicType'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocVariadicType'
          Parameter
            Identifier: ' type'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' JSDocVariadicType'
        MethodSignature
          Identifier: '
        createJSDocNamepathType'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' JSDocNamepathType'
        MethodSignature
          Identifier: '
        updateJSDocNamepathType'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocNamepathType'
          Parameter
            Identifier: ' type'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' JSDocNamepathType'
        MethodSignature
          Identifier: '
        createJSDocTypeExpression'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' JSDocTypeExpression'
        MethodSignature
          Identifier: '
        updateJSDocTypeExpression'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocTypeExpression'
          Parameter
            Identifier: ' type'
            TypeReference
              Identifier: ' TypeNode'
          TypeReference
            Identifier: ' JSDocTypeExpression'
        MethodSignature
          Identifier: '
        createJSDocNameReference'
          Parameter
            Identifier: 'name'
            UnionType
              TypeReference
                Identifier: ' EntityName'
              TypeReference
                Identifier: ' JSDocMemberName'
          TypeReference
            Identifier: ' JSDocNameReference'
        MethodSignature
          Identifier: '
        updateJSDocNameReference'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocNameReference'
          Parameter
            Identifier: ' name'
            UnionType
              TypeReference
                Identifier: ' EntityName'
              TypeReference
                Identifier: ' JSDocMemberName'
          TypeReference
            Identifier: ' JSDocNameReference'
        MethodSignature
          Identifier: '
        createJSDocMemberName'
          Parameter
            Identifier: 'left'
            UnionType
              TypeReference
                Identifier: ' EntityName'
              TypeReference
                Identifier: ' JSDocMemberName'
          Parameter
            Identifier: ' right'
            TypeReference
              Identifier: ' Identifier'
          TypeReference
            Identifier: ' JSDocMemberName'
        MethodSignature
          Identifier: '
        updateJSDocMemberName'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocMemberName'
          Parameter
            Identifier: ' left'
            UnionType
              TypeReference
                Identifier: ' EntityName'
              TypeReference
                Identifier: ' JSDocMemberName'
          Parameter
            Identifier: ' right'
            TypeReference
              Identifier: ' Identifier'
          TypeReference
            Identifier: ' JSDocMemberName'
        MethodSignature
          Identifier: '
        createJSDocLink'
          Parameter
            Identifier: 'name'
            UnionType
              TypeReference
                Identifier: ' EntityName'
              TypeReference
                Identifier: ' JSDocMemberName'
              UndefinedKeyword
          Parameter
            Identifier: ' text'
            StringKeyword
          TypeReference
            Identifier: ' JSDocLink'
        MethodSignature
          Identifier: '
        updateJSDocLink'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocLink'
          Parameter
            Identifier: ' name'
            UnionType
              TypeReference
                Identifier: ' EntityName'
              TypeReference
                Identifier: ' JSDocMemberName'
              UndefinedKeyword
          Parameter
            Identifier: ' text'
            StringKeyword
          TypeReference
            Identifier: ' JSDocLink'
        MethodSignature
          Identifier: '
        createJSDocLinkCode'
          Parameter
            Identifier: 'name'
            UnionType
              TypeReference
                Identifier: ' EntityName'
              TypeReference
                Identifier: ' JSDocMemberName'
              UndefinedKeyword
          Parameter
            Identifier: ' text'
            StringKeyword
          TypeReference
            Identifier: ' JSDocLinkCode'
        MethodSignature
          Identifier: '
        updateJSDocLinkCode'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocLinkCode'
          Parameter
            Identifier: ' name'
            UnionType
              TypeReference
                Identifier: ' EntityName'
              TypeReference
                Identifier: ' JSDocMemberName'
              UndefinedKeyword
          Parameter
            Identifier: ' text'
            StringKeyword
          TypeReference
            Identifier: ' JSDocLinkCode'
        MethodSignature
          Identifier: '
        createJSDocLinkPlain'
          Parameter
            Identifier: 'name'
            UnionType
              TypeReference
                Identifier: ' EntityName'
              TypeReference
                Identifier: ' JSDocMemberName'
              UndefinedKeyword
          Parameter
            Identifier: ' text'
            StringKeyword
          TypeReference
            Identifier: ' JSDocLinkPlain'
        MethodSignature
          Identifier: '
        updateJSDocLinkPlain'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocLinkPlain'
          Parameter
            Identifier: ' name'
            UnionType
              TypeReference
                Identifier: ' EntityName'
              TypeReference
                Identifier: ' JSDocMemberName'
              UndefinedKeyword
          Parameter
            Identifier: ' text'
            StringKeyword
          TypeReference
            Identifier: ' JSDocLinkPlain'
        MethodSignature
          Identifier: '
        createJSDocTypeLiteral'
          Parameter
            Identifier: 'jsDocPropertyTags'
            QuestionToken
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' JSDocPropertyLikeTag'
          Parameter
            Identifier: ' isArrayType'
            QuestionToken
            BooleanKeyword
          TypeReference
            Identifier: ' JSDocTypeLiteral'
        MethodSignature
          Identifier: '
        updateJSDocTypeLiteral'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocTypeLiteral'
          Parameter
            Identifier: ' jsDocPropertyTags'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' JSDocPropertyLikeTag'
              UndefinedKeyword
          Parameter
            Identifier: ' isArrayType'
            UnionType
              BooleanKeyword
              UndefinedKeyword
          TypeReference
            Identifier: ' JSDocTypeLiteral'
        MethodSignature
          Identifier: '
        createJSDocSignature'
          Parameter
            Identifier: 'typeParameters'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' JSDocTemplateTag'
              UndefinedKeyword
          Parameter
            Identifier: ' parameters'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' JSDocParameterTag'
          Parameter
            Identifier: ' type'
            QuestionToken
            TypeReference
              Identifier: ' JSDocReturnTag'
          TypeReference
            Identifier: ' JSDocSignature'
        MethodSignature
          Identifier: '
        updateJSDocSignature'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocSignature'
          Parameter
            Identifier: ' typeParameters'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' JSDocTemplateTag'
              UndefinedKeyword
          Parameter
            Identifier: ' parameters'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' JSDocParameterTag'
          Parameter
            Identifier: ' type'
            UnionType
              TypeReference
                Identifier: ' JSDocReturnTag'
              UndefinedKeyword
          TypeReference
            Identifier: ' JSDocSignature'
        MethodSignature
          Identifier: '
        createJSDocTemplateTag'
          Parameter
            Identifier: 'tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' constraint'
            UnionType
              TypeReference
                Identifier: ' JSDocTypeExpression'
              UndefinedKeyword
          Parameter
            Identifier: ' typeParameters'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' TypeParameterDeclaration'
          Parameter
            Identifier: ' comment'
            QuestionToken
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
          TypeReference
            Identifier: ' JSDocTemplateTag'
        MethodSignature
          Identifier: '
        updateJSDocTemplateTag'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocTemplateTag'
          Parameter
            Identifier: ' tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' constraint'
            UnionType
              TypeReference
                Identifier: ' JSDocTypeExpression'
              UndefinedKeyword
          Parameter
            Identifier: ' typeParameters'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' TypeParameterDeclaration'
          Parameter
            Identifier: ' comment'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
              UndefinedKeyword
          TypeReference
            Identifier: ' JSDocTemplateTag'
        MethodSignature
          Identifier: '
        createJSDocTypedefTag'
          Parameter
            Identifier: 'tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' typeExpression'
            QuestionToken
            UnionType
              TypeReference
                Identifier: ' JSDocTypeExpression'
              TypeReference
                Identifier: ' JSDocTypeLiteral'
          Parameter
            Identifier: ' fullName'
            QuestionToken
            UnionType
              TypeReference
                Identifier: ' Identifier'
              TypeReference
                Identifier: ' JSDocNamespaceDeclaration'
          Parameter
            Identifier: ' comment'
            QuestionToken
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
          TypeReference
            Identifier: ' JSDocTypedefTag'
        MethodSignature
          Identifier: '
        updateJSDocTypedefTag'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocTypedefTag'
          Parameter
            Identifier: ' tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' typeExpression'
            UnionType
              TypeReference
                Identifier: ' JSDocTypeExpression'
              TypeReference
                Identifier: ' JSDocTypeLiteral'
              UndefinedKeyword
          Parameter
            Identifier: ' fullName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              TypeReference
                Identifier: ' JSDocNamespaceDeclaration'
              UndefinedKeyword
          Parameter
            Identifier: ' comment'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
              UndefinedKeyword
          TypeReference
            Identifier: ' JSDocTypedefTag'
        MethodSignature
          Identifier: '
        createJSDocParameterTag'
          Parameter
            Identifier: 'tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' EntityName'
          Parameter
            Identifier: ' isBracketed'
            BooleanKeyword
          Parameter
            Identifier: ' typeExpression'
            QuestionToken
            TypeReference
              Identifier: ' JSDocTypeExpression'
          Parameter
            Identifier: ' isNameFirst'
            QuestionToken
            BooleanKeyword
          Parameter
            Identifier: ' comment'
            QuestionToken
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
          TypeReference
            Identifier: ' JSDocParameterTag'
        MethodSignature
          Identifier: '
        updateJSDocParameterTag'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocParameterTag'
          Parameter
            Identifier: ' tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' EntityName'
          Parameter
            Identifier: ' isBracketed'
            BooleanKeyword
          Parameter
            Identifier: ' typeExpression'
            UnionType
              TypeReference
                Identifier: ' JSDocTypeExpression'
              UndefinedKeyword
          Parameter
            Identifier: ' isNameFirst'
            BooleanKeyword
          Parameter
            Identifier: ' comment'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
              UndefinedKeyword
          TypeReference
            Identifier: ' JSDocParameterTag'
        MethodSignature
          Identifier: '
        createJSDocPropertyTag'
          Parameter
            Identifier: 'tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' EntityName'
          Parameter
            Identifier: ' isBracketed'
            BooleanKeyword
          Parameter
            Identifier: ' typeExpression'
            QuestionToken
            TypeReference
              Identifier: ' JSDocTypeExpression'
          Parameter
            Identifier: ' isNameFirst'
            QuestionToken
            BooleanKeyword
          Parameter
            Identifier: ' comment'
            QuestionToken
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
          TypeReference
            Identifier: ' JSDocPropertyTag'
        MethodSignature
          Identifier: '
        updateJSDocPropertyTag'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocPropertyTag'
          Parameter
            Identifier: ' tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' EntityName'
          Parameter
            Identifier: ' isBracketed'
            BooleanKeyword
          Parameter
            Identifier: ' typeExpression'
            UnionType
              TypeReference
                Identifier: ' JSDocTypeExpression'
              UndefinedKeyword
          Parameter
            Identifier: ' isNameFirst'
            BooleanKeyword
          Parameter
            Identifier: ' comment'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
              UndefinedKeyword
          TypeReference
            Identifier: ' JSDocPropertyTag'
        MethodSignature
          Identifier: '
        createJSDocTypeTag'
          Parameter
            Identifier: 'tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' typeExpression'
            TypeReference
              Identifier: ' JSDocTypeExpression'
          Parameter
            Identifier: ' comment'
            QuestionToken
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
          TypeReference
            Identifier: ' JSDocTypeTag'
        MethodSignature
          Identifier: '
        updateJSDocTypeTag'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocTypeTag'
          Parameter
            Identifier: ' tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' typeExpression'
            TypeReference
              Identifier: ' JSDocTypeExpression'
          Parameter
            Identifier: ' comment'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
              UndefinedKeyword
          TypeReference
            Identifier: ' JSDocTypeTag'
        MethodSignature
          Identifier: '
        createJSDocSeeTag'
          Parameter
            Identifier: 'tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' nameExpression'
            UnionType
              TypeReference
                Identifier: ' JSDocNameReference'
              UndefinedKeyword
          Parameter
            Identifier: ' comment'
            QuestionToken
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
          TypeReference
            Identifier: ' JSDocSeeTag'
        MethodSignature
          Identifier: '
        updateJSDocSeeTag'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocSeeTag'
          Parameter
            Identifier: ' tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' nameExpression'
            UnionType
              TypeReference
                Identifier: ' JSDocNameReference'
              UndefinedKeyword
          Parameter
            Identifier: ' comment'
            QuestionToken
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
          TypeReference
            Identifier: ' JSDocSeeTag'
        MethodSignature
          Identifier: '
        createJSDocReturnTag'
          Parameter
            Identifier: 'tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' typeExpression'
            QuestionToken
            TypeReference
              Identifier: ' JSDocTypeExpression'
          Parameter
            Identifier: ' comment'
            QuestionToken
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
          TypeReference
            Identifier: ' JSDocReturnTag'
        MethodSignature
          Identifier: '
        updateJSDocReturnTag'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocReturnTag'
          Parameter
            Identifier: ' tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' typeExpression'
            UnionType
              TypeReference
                Identifier: ' JSDocTypeExpression'
              UndefinedKeyword
          Parameter
            Identifier: ' comment'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
              UndefinedKeyword
          TypeReference
            Identifier: ' JSDocReturnTag'
        MethodSignature
          Identifier: '
        createJSDocThisTag'
          Parameter
            Identifier: 'tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' typeExpression'
            TypeReference
              Identifier: ' JSDocTypeExpression'
          Parameter
            Identifier: ' comment'
            QuestionToken
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
          TypeReference
            Identifier: ' JSDocThisTag'
        MethodSignature
          Identifier: '
        updateJSDocThisTag'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocThisTag'
          Parameter
            Identifier: ' tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' typeExpression'
            UnionType
              TypeReference
                Identifier: ' JSDocTypeExpression'
              UndefinedKeyword
          Parameter
            Identifier: ' comment'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
              UndefinedKeyword
          TypeReference
            Identifier: ' JSDocThisTag'
        MethodSignature
          Identifier: '
        createJSDocEnumTag'
          Parameter
            Identifier: 'tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' typeExpression'
            TypeReference
              Identifier: ' JSDocTypeExpression'
          Parameter
            Identifier: ' comment'
            QuestionToken
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
          TypeReference
            Identifier: ' JSDocEnumTag'
        MethodSignature
          Identifier: '
        updateJSDocEnumTag'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocEnumTag'
          Parameter
            Identifier: ' tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' typeExpression'
            TypeReference
              Identifier: ' JSDocTypeExpression'
          Parameter
            Identifier: ' comment'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
              UndefinedKeyword
          TypeReference
            Identifier: ' JSDocEnumTag'
        MethodSignature
          Identifier: '
        createJSDocCallbackTag'
          Parameter
            Identifier: 'tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' typeExpression'
            TypeReference
              Identifier: ' JSDocSignature'
          Parameter
            Identifier: ' fullName'
            QuestionToken
            UnionType
              TypeReference
                Identifier: ' Identifier'
              TypeReference
                Identifier: ' JSDocNamespaceDeclaration'
          Parameter
            Identifier: ' comment'
            QuestionToken
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
          TypeReference
            Identifier: ' JSDocCallbackTag'
        MethodSignature
          Identifier: '
        updateJSDocCallbackTag'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocCallbackTag'
          Parameter
            Identifier: ' tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' typeExpression'
            TypeReference
              Identifier: ' JSDocSignature'
          Parameter
            Identifier: ' fullName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              TypeReference
                Identifier: ' JSDocNamespaceDeclaration'
              UndefinedKeyword
          Parameter
            Identifier: ' comment'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
              UndefinedKeyword
          TypeReference
            Identifier: ' JSDocCallbackTag'
        MethodSignature
          Identifier: '
        createJSDocOverloadTag'
          Parameter
            Identifier: 'tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' typeExpression'
            TypeReference
              Identifier: ' JSDocSignature'
          Parameter
            Identifier: ' comment'
            QuestionToken
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
          TypeReference
            Identifier: ' JSDocOverloadTag'
        MethodSignature
          Identifier: '
        updateJSDocOverloadTag'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocOverloadTag'
          Parameter
            Identifier: ' tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' typeExpression'
            TypeReference
              Identifier: ' JSDocSignature'
          Parameter
            Identifier: ' comment'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
              UndefinedKeyword
          TypeReference
            Identifier: ' JSDocOverloadTag'
        MethodSignature
          Identifier: '
        createJSDocAugmentsTag'
          Parameter
            Identifier: 'tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' className'
            IndexedAccessType
              TypeReference
                Identifier: ' JSDocAugmentsTag'
              LiteralType
                StringLiteral
          Parameter
            Identifier: ' comment'
            QuestionToken
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
          TypeReference
            Identifier: ' JSDocAugmentsTag'
        MethodSignature
          Identifier: '
        updateJSDocAugmentsTag'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocAugmentsTag'
          Parameter
            Identifier: ' tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' className'
            IndexedAccessType
              TypeReference
                Identifier: ' JSDocAugmentsTag'
              LiteralType
                StringLiteral
          Parameter
            Identifier: ' comment'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
              UndefinedKeyword
          TypeReference
            Identifier: ' JSDocAugmentsTag'
        MethodSignature
          Identifier: '
        createJSDocImplementsTag'
          Parameter
            Identifier: 'tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' className'
            IndexedAccessType
              TypeReference
                Identifier: ' JSDocImplementsTag'
              LiteralType
                StringLiteral
          Parameter
            Identifier: ' comment'
            QuestionToken
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
          TypeReference
            Identifier: ' JSDocImplementsTag'
        MethodSignature
          Identifier: '
        updateJSDocImplementsTag'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocImplementsTag'
          Parameter
            Identifier: ' tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' className'
            IndexedAccessType
              TypeReference
                Identifier: ' JSDocImplementsTag'
              LiteralType
                StringLiteral
          Parameter
            Identifier: ' comment'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
              UndefinedKeyword
          TypeReference
            Identifier: ' JSDocImplementsTag'
        MethodSignature
          Identifier: '
        createJSDocAuthorTag'
          Parameter
            Identifier: 'tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' comment'
            QuestionToken
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
          TypeReference
            Identifier: ' JSDocAuthorTag'
        MethodSignature
          Identifier: '
        updateJSDocAuthorTag'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocAuthorTag'
          Parameter
            Identifier: ' tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' comment'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
              UndefinedKeyword
          TypeReference
            Identifier: ' JSDocAuthorTag'
        MethodSignature
          Identifier: '
        createJSDocClassTag'
          Parameter
            Identifier: 'tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' comment'
            QuestionToken
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
          TypeReference
            Identifier: ' JSDocClassTag'
        MethodSignature
          Identifier: '
        updateJSDocClassTag'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocClassTag'
          Parameter
            Identifier: ' tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' comment'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
              UndefinedKeyword
          TypeReference
            Identifier: ' JSDocClassTag'
        MethodSignature
          Identifier: '
        createJSDocPublicTag'
          Parameter
            Identifier: 'tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' comment'
            QuestionToken
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
          TypeReference
            Identifier: ' JSDocPublicTag'
        MethodSignature
          Identifier: '
        updateJSDocPublicTag'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocPublicTag'
          Parameter
            Identifier: ' tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' comment'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
              UndefinedKeyword
          TypeReference
            Identifier: ' JSDocPublicTag'
        MethodSignature
          Identifier: '
        createJSDocPrivateTag'
          Parameter
            Identifier: 'tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' comment'
            QuestionToken
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
          TypeReference
            Identifier: ' JSDocPrivateTag'
        MethodSignature
          Identifier: '
        updateJSDocPrivateTag'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocPrivateTag'
          Parameter
            Identifier: ' tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' comment'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
              UndefinedKeyword
          TypeReference
            Identifier: ' JSDocPrivateTag'
        MethodSignature
          Identifier: '
        createJSDocProtectedTag'
          Parameter
            Identifier: 'tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' comment'
            QuestionToken
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
          TypeReference
            Identifier: ' JSDocProtectedTag'
        MethodSignature
          Identifier: '
        updateJSDocProtectedTag'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocProtectedTag'
          Parameter
            Identifier: ' tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' comment'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
              UndefinedKeyword
          TypeReference
            Identifier: ' JSDocProtectedTag'
        MethodSignature
          Identifier: '
        createJSDocReadonlyTag'
          Parameter
            Identifier: 'tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' comment'
            QuestionToken
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
          TypeReference
            Identifier: ' JSDocReadonlyTag'
        MethodSignature
          Identifier: '
        updateJSDocReadonlyTag'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocReadonlyTag'
          Parameter
            Identifier: ' tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' comment'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
              UndefinedKeyword
          TypeReference
            Identifier: ' JSDocReadonlyTag'
        MethodSignature
          Identifier: '
        createJSDocUnknownTag'
          Parameter
            Identifier: 'tagName'
            TypeReference
              Identifier: ' Identifier'
          Parameter
            Identifier: ' comment'
            QuestionToken
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
          TypeReference
            Identifier: ' JSDocUnknownTag'
        MethodSignature
          Identifier: '
        updateJSDocUnknownTag'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocUnknownTag'
          Parameter
            Identifier: ' tagName'
            TypeReference
              Identifier: ' Identifier'
          Parameter
            Identifier: ' comment'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
              UndefinedKeyword
          TypeReference
            Identifier: ' JSDocUnknownTag'
        MethodSignature
          Identifier: '
        createJSDocDeprecatedTag'
          Parameter
            Identifier: 'tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' comment'
            QuestionToken
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
          TypeReference
            Identifier: ' JSDocDeprecatedTag'
        MethodSignature
          Identifier: '
        updateJSDocDeprecatedTag'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocDeprecatedTag'
          Parameter
            Identifier: ' tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' comment'
            QuestionToken
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
          TypeReference
            Identifier: ' JSDocDeprecatedTag'
        MethodSignature
          Identifier: '
        createJSDocOverrideTag'
          Parameter
            Identifier: 'tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' comment'
            QuestionToken
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
          TypeReference
            Identifier: ' JSDocOverrideTag'
        MethodSignature
          Identifier: '
        updateJSDocOverrideTag'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocOverrideTag'
          Parameter
            Identifier: ' tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' comment'
            QuestionToken
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
          TypeReference
            Identifier: ' JSDocOverrideTag'
        MethodSignature
          Identifier: '
        createJSDocThrowsTag'
          Parameter
            Identifier: 'tagName'
            TypeReference
              Identifier: ' Identifier'
          Parameter
            Identifier: ' typeExpression'
            UnionType
              TypeReference
                Identifier: ' JSDocTypeExpression'
              UndefinedKeyword
          Parameter
            Identifier: ' comment'
            QuestionToken
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
          TypeReference
            Identifier: ' JSDocThrowsTag'
        MethodSignature
          Identifier: '
        updateJSDocThrowsTag'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocThrowsTag'
          Parameter
            Identifier: ' tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' typeExpression'
            UnionType
              TypeReference
                Identifier: ' JSDocTypeExpression'
              UndefinedKeyword
          Parameter
            Identifier: ' comment'
            QuestionToken
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
              UndefinedKeyword
          TypeReference
            Identifier: ' JSDocThrowsTag'
        MethodSignature
          Identifier: '
        createJSDocSatisfiesTag'
          Parameter
            Identifier: 'tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' typeExpression'
            TypeReference
              Identifier: ' JSDocTypeExpression'
          Parameter
            Identifier: ' comment'
            QuestionToken
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
          TypeReference
            Identifier: ' JSDocSatisfiesTag'
        MethodSignature
          Identifier: '
        updateJSDocSatisfiesTag'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocSatisfiesTag'
          Parameter
            Identifier: ' tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' typeExpression'
            TypeReference
              Identifier: ' JSDocTypeExpression'
          Parameter
            Identifier: ' comment'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
              UndefinedKeyword
          TypeReference
            Identifier: ' JSDocSatisfiesTag'
        MethodSignature
          Identifier: '
        createJSDocImportTag'
          Parameter
            Identifier: 'tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' importClause'
            UnionType
              TypeReference
                Identifier: ' ImportClause'
              UndefinedKeyword
          Parameter
            Identifier: ' moduleSpecifier'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' attributes'
            QuestionToken
            TypeReference
              Identifier: ' ImportAttributes'
          Parameter
            Identifier: ' comment'
            QuestionToken
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
          TypeReference
            Identifier: ' JSDocImportTag'
        MethodSignature
          Identifier: '
        updateJSDocImportTag'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocImportTag'
          Parameter
            Identifier: ' tagName'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
          Parameter
            Identifier: ' importClause'
            UnionType
              TypeReference
                Identifier: ' ImportClause'
              UndefinedKeyword
          Parameter
            Identifier: ' moduleSpecifier'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' attributes'
            UnionType
              TypeReference
                Identifier: ' ImportAttributes'
              UndefinedKeyword
          Parameter
            Identifier: ' comment'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
              UndefinedKeyword
          TypeReference
            Identifier: ' JSDocImportTag'
        MethodSignature
          Identifier: '
        createJSDocText'
          Parameter
            Identifier: 'text'
            StringKeyword
          TypeReference
            Identifier: ' JSDocText'
        MethodSignature
          Identifier: '
        updateJSDocText'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDocText'
          Parameter
            Identifier: ' text'
            StringKeyword
          TypeReference
            Identifier: ' JSDocText'
        MethodSignature
          Identifier: '
        createJSDocComment'
          Parameter
            Identifier: 'comment'
            QuestionToken
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
              UndefinedKeyword
          Parameter
            Identifier: ' tags'
            QuestionToken
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' JSDocTag'
              UndefinedKeyword
          TypeReference
            Identifier: ' JSDoc'
        MethodSignature
          Identifier: '
        updateJSDocComment'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JSDoc'
          Parameter
            Identifier: ' comment'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'JSDocComment'
              UndefinedKeyword
          Parameter
            Identifier: ' tags'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' JSDocTag'
              UndefinedKeyword
          TypeReference
            Identifier: ' JSDoc'
        MethodSignature
          Identifier: '
        createJsxElement'
          Parameter
            Identifier: 'openingElement'
            TypeReference
              Identifier: ' JsxOpeningElement'
          Parameter
            Identifier: ' children'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' JsxChild'
          Parameter
            Identifier: ' closingElement'
            TypeReference
              Identifier: ' JsxClosingElement'
          TypeReference
            Identifier: ' JsxElement'
        MethodSignature
          Identifier: '
        updateJsxElement'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JsxElement'
          Parameter
            Identifier: ' openingElement'
            TypeReference
              Identifier: ' JsxOpeningElement'
          Parameter
            Identifier: ' children'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' JsxChild'
          Parameter
            Identifier: ' closingElement'
            TypeReference
              Identifier: ' JsxClosingElement'
          TypeReference
            Identifier: ' JsxElement'
        MethodSignature
          Identifier: '
        createJsxSelfClosingElement'
          Parameter
            Identifier: 'tagName'
            TypeReference
              Identifier: ' JsxTagNameExpression'
          Parameter
            Identifier: ' typeArguments'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeNode'
              UndefinedKeyword
          Parameter
            Identifier: ' attributes'
            TypeReference
              Identifier: ' JsxAttributes'
          TypeReference
            Identifier: ' JsxSelfClosingElement'
        MethodSignature
          Identifier: '
        updateJsxSelfClosingElement'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JsxSelfClosingElement'
          Parameter
            Identifier: ' tagName'
            TypeReference
              Identifier: ' JsxTagNameExpression'
          Parameter
            Identifier: ' typeArguments'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeNode'
              UndefinedKeyword
          Parameter
            Identifier: ' attributes'
            TypeReference
              Identifier: ' JsxAttributes'
          TypeReference
            Identifier: ' JsxSelfClosingElement'
        MethodSignature
          Identifier: '
        createJsxOpeningElement'
          Parameter
            Identifier: 'tagName'
            TypeReference
              Identifier: ' JsxTagNameExpression'
          Parameter
            Identifier: ' typeArguments'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeNode'
              UndefinedKeyword
          Parameter
            Identifier: ' attributes'
            TypeReference
              Identifier: ' JsxAttributes'
          TypeReference
            Identifier: ' JsxOpeningElement'
        MethodSignature
          Identifier: '
        updateJsxOpeningElement'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JsxOpeningElement'
          Parameter
            Identifier: ' tagName'
            TypeReference
              Identifier: ' JsxTagNameExpression'
          Parameter
            Identifier: ' typeArguments'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeNode'
              UndefinedKeyword
          Parameter
            Identifier: ' attributes'
            TypeReference
              Identifier: ' JsxAttributes'
          TypeReference
            Identifier: ' JsxOpeningElement'
        MethodSignature
          Identifier: '
        createJsxClosingElement'
          Parameter
            Identifier: 'tagName'
            TypeReference
              Identifier: ' JsxTagNameExpression'
          TypeReference
            Identifier: ' JsxClosingElement'
        MethodSignature
          Identifier: '
        updateJsxClosingElement'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JsxClosingElement'
          Parameter
            Identifier: ' tagName'
            TypeReference
              Identifier: ' JsxTagNameExpression'
          TypeReference
            Identifier: ' JsxClosingElement'
        MethodSignature
          Identifier: '
        createJsxFragment'
          Parameter
            Identifier: 'openingFragment'
            TypeReference
              Identifier: ' JsxOpeningFragment'
          Parameter
            Identifier: ' children'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' JsxChild'
          Parameter
            Identifier: ' closingFragment'
            TypeReference
              Identifier: ' JsxClosingFragment'
          TypeReference
            Identifier: ' JsxFragment'
        MethodSignature
          Identifier: '
        createJsxText'
          Parameter
            Identifier: 'text'
            StringKeyword
          Parameter
            Identifier: ' containsOnlyTriviaWhiteSpaces'
            QuestionToken
            BooleanKeyword
          TypeReference
            Identifier: ' JsxText'
        MethodSignature
          Identifier: '
        updateJsxText'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JsxText'
          Parameter
            Identifier: ' text'
            StringKeyword
          Parameter
            Identifier: ' containsOnlyTriviaWhiteSpaces'
            QuestionToken
            BooleanKeyword
          TypeReference
            Identifier: ' JsxText'
        MethodSignature
          Identifier: '
        createJsxOpeningFragment'
          TypeReference
            Identifier: ' JsxOpeningFragment'
        MethodSignature
          Identifier: '
        createJsxJsxClosingFragment'
          TypeReference
            Identifier: ' JsxClosingFragment'
        MethodSignature
          Identifier: '
        updateJsxFragment'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JsxFragment'
          Parameter
            Identifier: ' openingFragment'
            TypeReference
              Identifier: ' JsxOpeningFragment'
          Parameter
            Identifier: ' children'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' JsxChild'
          Parameter
            Identifier: ' closingFragment'
            TypeReference
              Identifier: ' JsxClosingFragment'
          TypeReference
            Identifier: ' JsxFragment'
        MethodSignature
          Identifier: '
        createJsxAttribute'
          Parameter
            Identifier: 'name'
            TypeReference
              Identifier: ' JsxAttributeName'
          Parameter
            Identifier: ' initializer'
            UnionType
              TypeReference
                Identifier: ' JsxAttributeValue'
              UndefinedKeyword
          TypeReference
            Identifier: ' JsxAttribute'
        MethodSignature
          Identifier: '
        updateJsxAttribute'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JsxAttribute'
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' JsxAttributeName'
          Parameter
            Identifier: ' initializer'
            UnionType
              TypeReference
                Identifier: ' JsxAttributeValue'
              UndefinedKeyword
          TypeReference
            Identifier: ' JsxAttribute'
        MethodSignature
          Identifier: '
        createJsxAttributes'
          Parameter
            Identifier: 'properties'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' JsxAttributeLike'
          TypeReference
            Identifier: ' JsxAttributes'
        MethodSignature
          Identifier: '
        updateJsxAttributes'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JsxAttributes'
          Parameter
            Identifier: ' properties'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' JsxAttributeLike'
          TypeReference
            Identifier: ' JsxAttributes'
        MethodSignature
          Identifier: '
        createJsxSpreadAttribute'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' JsxSpreadAttribute'
        MethodSignature
          Identifier: '
        updateJsxSpreadAttribute'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JsxSpreadAttribute'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' JsxSpreadAttribute'
        MethodSignature
          Identifier: '
        createJsxExpression'
          Parameter
            Identifier: 'dotDotDotToken'
            UnionType
              TypeReference
                Identifier: ' DotDotDotToken'
              UndefinedKeyword
          Parameter
            Identifier: ' expression'
            UnionType
              TypeReference
                Identifier: ' Expression'
              UndefinedKeyword
          TypeReference
            Identifier: ' JsxExpression'
        MethodSignature
          Identifier: '
        updateJsxExpression'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JsxExpression'
          Parameter
            Identifier: ' expression'
            UnionType
              TypeReference
                Identifier: ' Expression'
              UndefinedKeyword
          TypeReference
            Identifier: ' JsxExpression'
        MethodSignature
          Identifier: '
        createJsxNamespacedName'
          Parameter
            Identifier: 'namespace'
            TypeReference
              Identifier: ' Identifier'
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' Identifier'
          TypeReference
            Identifier: ' JsxNamespacedName'
        MethodSignature
          Identifier: '
        updateJsxNamespacedName'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' JsxNamespacedName'
          Parameter
            Identifier: ' namespace'
            TypeReference
              Identifier: ' Identifier'
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' Identifier'
          TypeReference
            Identifier: ' JsxNamespacedName'
        MethodSignature
          Identifier: '
        createCaseClause'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' statements'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' Statement'
          TypeReference
            Identifier: ' CaseClause'
        MethodSignature
          Identifier: '
        updateCaseClause'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' CaseClause'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' statements'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' Statement'
          TypeReference
            Identifier: ' CaseClause'
        MethodSignature
          Identifier: '
        createDefaultClause'
          Parameter
            Identifier: 'statements'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' Statement'
          TypeReference
            Identifier: ' DefaultClause'
        MethodSignature
          Identifier: '
        updateDefaultClause'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' DefaultClause'
          Parameter
            Identifier: ' statements'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' Statement'
          TypeReference
            Identifier: ' DefaultClause'
        MethodSignature
          Identifier: '
        createHeritageClause'
          Parameter
            Identifier: 'token'
            IndexedAccessType
              TypeReference
                Identifier: ' HeritageClause'
              LiteralType
                StringLiteral
          Parameter
            Identifier: ' types'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ExpressionWithTypeArguments'
          TypeReference
            Identifier: ' HeritageClause'
        MethodSignature
          Identifier: '
        updateHeritageClause'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' HeritageClause'
          Parameter
            Identifier: ' types'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ExpressionWithTypeArguments'
          TypeReference
            Identifier: ' HeritageClause'
        MethodSignature
          Identifier: '
        createCatchClause'
          Parameter
            Identifier: 'variableDeclaration'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' BindingName'
              TypeReference
                Identifier: ' VariableDeclaration'
              UndefinedKeyword
          Parameter
            Identifier: ' block'
            TypeReference
              Identifier: ' Block'
          TypeReference
            Identifier: ' CatchClause'
        MethodSignature
          Identifier: '
        updateCatchClause'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' CatchClause'
          Parameter
            Identifier: ' variableDeclaration'
            UnionType
              TypeReference
                Identifier: ' VariableDeclaration'
              UndefinedKeyword
          Parameter
            Identifier: ' block'
            TypeReference
              Identifier: ' Block'
          TypeReference
            Identifier: ' CatchClause'
        MethodSignature
          Identifier: '
        createPropertyAssignment'
          Parameter
            Identifier: 'name'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' PropertyName'
          Parameter
            Identifier: ' initializer'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' PropertyAssignment'
        MethodSignature
          Identifier: '
        updatePropertyAssignment'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' PropertyAssignment'
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' PropertyName'
          Parameter
            Identifier: ' initializer'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' PropertyAssignment'
        MethodSignature
          Identifier: '
        createShorthandPropertyAssignment'
          Parameter
            Identifier: 'name'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' Identifier'
          Parameter
            Identifier: ' objectAssignmentInitializer'
            QuestionToken
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' ShorthandPropertyAssignment'
        MethodSignature
          Identifier: '
        updateShorthandPropertyAssignment'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' ShorthandPropertyAssignment'
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' Identifier'
          Parameter
            Identifier: ' objectAssignmentInitializer'
            UnionType
              TypeReference
                Identifier: ' Expression'
              UndefinedKeyword
          TypeReference
            Identifier: ' ShorthandPropertyAssignment'
        MethodSignature
          Identifier: '
        createSpreadAssignment'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' SpreadAssignment'
        MethodSignature
          Identifier: '
        updateSpreadAssignment'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' SpreadAssignment'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' SpreadAssignment'
        MethodSignature
          Identifier: '
        createEnumMember'
          Parameter
            Identifier: 'name'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' PropertyName'
          Parameter
            Identifier: ' initializer'
            QuestionToken
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' EnumMember'
        MethodSignature
          Identifier: '
        updateEnumMember'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' EnumMember'
          Parameter
            Identifier: ' name'
            TypeReference
              Identifier: ' PropertyName'
          Parameter
            Identifier: ' initializer'
            UnionType
              TypeReference
                Identifier: ' Expression'
              UndefinedKeyword
          TypeReference
            Identifier: ' EnumMember'
        MethodSignature
          Identifier: '
        createSourceFile'
          Parameter
            Identifier: 'statements'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' Statement'
          Parameter
            Identifier: ' endOfFileToken'
            TypeReference
              Identifier: ' EndOfFileToken'
          Parameter
            Identifier: ' flags'
            TypeReference
              Identifier: ' NodeFlags'
          TypeReference
            Identifier: ' SourceFile'
        MethodSignature
          Identifier: '
        updateSourceFile'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' SourceFile'
          Parameter
            Identifier: ' statements'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' Statement'
          Parameter
            Identifier: ' isDeclarationFile'
            QuestionToken
            BooleanKeyword
          Parameter
            Identifier: ' referencedFiles'
            QuestionToken
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' FileReference'
          Parameter
            Identifier: ' typeReferences'
            QuestionToken
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' FileReference'
          Parameter
            Identifier: ' hasNoDefaultLib'
            QuestionToken
            BooleanKeyword
          Parameter
            Identifier: ' libReferences'
            QuestionToken
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' FileReference'
          TypeReference
            Identifier: ' SourceFile'
        MethodSignature
          Identifier: '
        createNotEmittedStatement'
          Parameter
            Identifier: 'original'
            TypeReference
              Identifier: ' Node'
          TypeReference
            Identifier: ' NotEmittedStatement'
        MethodSignature
          Identifier: '
        createNotEmittedTypeElement'
          TypeReference
            Identifier: ' NotEmittedTypeElement'
        MethodSignature
          Identifier: '
        createPartiallyEmittedExpression'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' original'
            QuestionToken
            TypeReference
              Identifier: ' Node'
          TypeReference
            Identifier: ' PartiallyEmittedExpression'
        MethodSignature
          Identifier: '
        updatePartiallyEmittedExpression'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' PartiallyEmittedExpression'
          Parameter
            Identifier: ' expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' PartiallyEmittedExpression'
        MethodSignature
          Identifier: '
        createCommaListExpression'
          Parameter
            Identifier: 'elements'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' Expression'
          TypeReference
            Identifier: ' CommaListExpression'
        MethodSignature
          Identifier: '
        updateCommaListExpression'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' CommaListExpression'
          Parameter
            Identifier: ' elements'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' Expression'
          TypeReference
            Identifier: ' CommaListExpression'
        MethodSignature
          Identifier: '
        createBundle'
          Parameter
            Identifier: 'sourceFiles'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' SourceFile'
          TypeReference
            Identifier: ' Bundle'
        MethodSignature
          Identifier: '
        updateBundle'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' Bundle'
          Parameter
            Identifier: ' sourceFiles'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' SourceFile'
          TypeReference
            Identifier: ' Bundle'
        MethodSignature
          Identifier: '
        createComma'
          Parameter
            Identifier: 'left'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' right'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' BinaryExpression'
        MethodSignature
          Identifier: '
        createAssignment'
          Parameter
            Identifier: 'left'
            UnionType
              TypeReference
                Identifier: ' ObjectLiteralExpression'
              TypeReference
                Identifier: ' ArrayLiteralExpression'
          Parameter
            Identifier: ' right'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' DestructuringAssignment'
        MethodSignature
          Identifier: '
        createAssignment'
          Parameter
            Identifier: 'left'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' right'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' AssignmentExpression'
            TypeReference
              Identifier: 'EqualsToken'
        MethodSignature
          Identifier: '
        createLogicalOr'
          Parameter
            Identifier: 'left'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' right'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' BinaryExpression'
        MethodSignature
          Identifier: '
        createLogicalAnd'
          Parameter
            Identifier: 'left'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' right'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' BinaryExpression'
        MethodSignature
          Identifier: '
        createBitwiseOr'
          Parameter
            Identifier: 'left'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' right'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' BinaryExpression'
        MethodSignature
          Identifier: '
        createBitwiseXor'
          Parameter
            Identifier: 'left'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' right'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' BinaryExpression'
        MethodSignature
          Identifier: '
        createBitwiseAnd'
          Parameter
            Identifier: 'left'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' right'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' BinaryExpression'
        MethodSignature
          Identifier: '
        createStrictEquality'
          Parameter
            Identifier: 'left'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' right'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' BinaryExpression'
        MethodSignature
          Identifier: '
        createStrictInequality'
          Parameter
            Identifier: 'left'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' right'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' BinaryExpression'
        MethodSignature
          Identifier: '
        createEquality'
          Parameter
            Identifier: 'left'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' right'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' BinaryExpression'
        MethodSignature
          Identifier: '
        createInequality'
          Parameter
            Identifier: 'left'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' right'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' BinaryExpression'
        MethodSignature
          Identifier: '
        createLessThan'
          Parameter
            Identifier: 'left'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' right'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' BinaryExpression'
        MethodSignature
          Identifier: '
        createLessThanEquals'
          Parameter
            Identifier: 'left'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' right'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' BinaryExpression'
        MethodSignature
          Identifier: '
        createGreaterThan'
          Parameter
            Identifier: 'left'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' right'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' BinaryExpression'
        MethodSignature
          Identifier: '
        createGreaterThanEquals'
          Parameter
            Identifier: 'left'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' right'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' BinaryExpression'
        MethodSignature
          Identifier: '
        createLeftShift'
          Parameter
            Identifier: 'left'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' right'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' BinaryExpression'
        MethodSignature
          Identifier: '
        createRightShift'
          Parameter
            Identifier: 'left'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' right'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' BinaryExpression'
        MethodSignature
          Identifier: '
        createUnsignedRightShift'
          Parameter
            Identifier: 'left'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' right'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' BinaryExpression'
        MethodSignature
          Identifier: '
        createAdd'
          Parameter
            Identifier: 'left'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' right'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' BinaryExpression'
        MethodSignature
          Identifier: '
        createSubtract'
          Parameter
            Identifier: 'left'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' right'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' BinaryExpression'
        MethodSignature
          Identifier: '
        createMultiply'
          Parameter
            Identifier: 'left'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' right'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' BinaryExpression'
        MethodSignature
          Identifier: '
        createDivide'
          Parameter
            Identifier: 'left'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' right'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' BinaryExpression'
        MethodSignature
          Identifier: '
        createModulo'
          Parameter
            Identifier: 'left'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' right'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' BinaryExpression'
        MethodSignature
          Identifier: '
        createExponent'
          Parameter
            Identifier: 'left'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' right'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' BinaryExpression'
        MethodSignature
          Identifier: '
        createPrefixPlus'
          Parameter
            Identifier: 'operand'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' PrefixUnaryExpression'
        MethodSignature
          Identifier: '
        createPrefixMinus'
          Parameter
            Identifier: 'operand'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' PrefixUnaryExpression'
        MethodSignature
          Identifier: '
        createPrefixIncrement'
          Parameter
            Identifier: 'operand'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' PrefixUnaryExpression'
        MethodSignature
          Identifier: '
        createPrefixDecrement'
          Parameter
            Identifier: 'operand'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' PrefixUnaryExpression'
        MethodSignature
          Identifier: '
        createBitwiseNot'
          Parameter
            Identifier: 'operand'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' PrefixUnaryExpression'
        MethodSignature
          Identifier: '
        createLogicalNot'
          Parameter
            Identifier: 'operand'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' PrefixUnaryExpression'
        MethodSignature
          Identifier: '
        createPostfixIncrement'
          Parameter
            Identifier: 'operand'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' PostfixUnaryExpression'
        MethodSignature
          Identifier: '
        createPostfixDecrement'
          Parameter
            Identifier: 'operand'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' PostfixUnaryExpression'
        MethodSignature
          Identifier: '
        createImmediatelyInvokedFunctionExpression'
          Parameter
            Identifier: 'statements'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' Statement'
          TypeReference
            Identifier: ' CallExpression'
        MethodSignature
          Identifier: '
        createImmediatelyInvokedFunctionExpression'
          Parameter
            Identifier: 'statements'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' Statement'
          Parameter
            Identifier: ' param'
            TypeReference
              Identifier: ' ParameterDeclaration'
          Parameter
            Identifier: ' paramValue'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' CallExpression'
        MethodSignature
          Identifier: '
        createImmediatelyInvokedArrowFunction'
          Parameter
            Identifier: 'statements'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' Statement'
          TypeReference
            Identifier: ' ImmediatelyInvokedArrowFunction'
        MethodSignature
          Identifier: '
        createImmediatelyInvokedArrowFunction'
          Parameter
            Identifier: 'statements'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' Statement'
          Parameter
            Identifier: ' param'
            TypeReference
              Identifier: ' ParameterDeclaration'
          Parameter
            Identifier: ' paramValue'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' ImmediatelyInvokedArrowFunction'
        MethodSignature
          Identifier: '
        createVoidZero'
          TypeReference
            Identifier: ' VoidExpression'
        MethodSignature
          Identifier: '
        createExportDefault'
          Parameter
            Identifier: 'expression'
            TypeReference
              Identifier: ' Expression'
          TypeReference
            Identifier: ' ExportAssignment'
        MethodSignature
          Identifier: '
        createExternalModuleExport'
          Parameter
            Identifier: 'exportName'
            TypeReference
              Identifier: ' Identifier'
          TypeReference
            Identifier: ' ExportDeclaration'
        MethodSignature
          Identifier: '
        restoreOuterExpressions'
          Parameter
            Identifier: 'outerExpression'
            UnionType
              TypeReference
                Identifier: ' Expression'
              UndefinedKeyword
          Parameter
            Identifier: ' innerExpression'
            TypeReference
              Identifier: ' Expression'
          Parameter
            Identifier: ' kinds'
            QuestionToken
            TypeReference
              Identifier: ' OuterExpressionKinds'
          TypeReference
            Identifier: ' Expression'
        MethodSignature
          Identifier: '
        /**
         * Updates a node that may contain modifiers, replacing only the modifiers of the node.
         */
        replaceModifiers'
          TypeParameter
            Identifier: 'T'
            TypeReference
              Identifier: ' HasModifiers'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' T'
          Parameter
            Identifier: ' modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' Modifier'
              TypeReference
                Identifier: ' ModifierFlags'
              UndefinedKeyword
          TypeReference
            Identifier: ' T'
        MethodSignature
          Identifier: '
        /**
         * Updates a node that may contain decorators or modifiers, replacing only the decorators and modifiers of the node.
         */
        replaceDecoratorsAndModifiers'
          TypeParameter
            Identifier: 'T'
            IntersectionType
              TypeReference
                Identifier: ' HasModifiers'
              TypeReference
                Identifier: ' HasDecorators'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' T'
          Parameter
            Identifier: ' modifiers'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ModifierLike'
              UndefinedKeyword
          TypeReference
            Identifier: ' T'
        MethodSignature
          Identifier: '
        /**
         * Updates a node that contains a property name, replacing only the name of the node.
         */
        replacePropertyName'
          TypeParameter
            Identifier: 'T'
            UnionType
              TypeReference
                Identifier: ' AccessorDeclaration'
              TypeReference
                Identifier: ' MethodDeclaration'
              TypeReference
                Identifier: ' MethodSignature'
              TypeReference
                Identifier: ' PropertyDeclaration'
              TypeReference
                Identifier: ' PropertySignature'
              TypeReference
                Identifier: ' PropertyAssignment'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' T'
          Parameter
            Identifier: ' name'
            IndexedAccessType
              TypeReference
                Identifier: ' T'
              LiteralType
                StringLiteral
          TypeReference
            Identifier: ' T'
      InterfaceDeclaration
        Identifier: ' CoreTransformationContext'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' factory'
          TypeReference
            Identifier: ' NodeFactory'
        MethodSignature
          Identifier: '
        /** Gets the compiler options supplied to the transformer. */
        getCompilerOptions'
          TypeReference
            Identifier: ' CompilerOptions'
        MethodSignature
          Identifier: '
        /** Starts a new lexical environment. */
        startLexicalEnvironment'
          VoidKeyword
        MethodSignature
          Identifier: '
        /** Suspends the current lexical environment, usually after visiting a parameter list. */
        suspendLexicalEnvironment'
          VoidKeyword
        MethodSignature
          Identifier: '
        /** Resumes a suspended lexical environment, usually before visiting a function body. */
        resumeLexicalEnvironment'
          VoidKeyword
        MethodSignature
          Identifier: '
        /** Ends a lexical environment, returning any declarations. */
        endLexicalEnvironment'
          UnionType
            ArrayType
              TypeReference
                Identifier: ' Statement'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        /** Hoists a function declaration to the containing scope. */
        hoistFunctionDeclaration'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' FunctionDeclaration'
          VoidKeyword
        MethodSignature
          Identifier: '
        /** Hoists a variable declaration to the containing scope. */
        hoistVariableDeclaration'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' Identifier'
          VoidKeyword
      InterfaceDeclaration
        Identifier: ' TransformationContext'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' CoreTransformationContext'
        MethodSignature
          Identifier: '
        /** Records a request for a non-scoped emit helper in the current context. */
        requestEmitHelper'
          Parameter
            Identifier: 'helper'
            TypeReference
              Identifier: ' EmitHelper'
          VoidKeyword
        MethodSignature
          Identifier: '
        /** Gets and resets the requested non-scoped emit helpers. */
        readEmitHelpers'
          UnionType
            ArrayType
              TypeReference
                Identifier: ' EmitHelper'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        /** Enables expression substitutions in the pretty printer for the provided SyntaxKind. */
        enableSubstitution'
          Parameter
            Identifier: 'kind'
            TypeReference
              Identifier: ' SyntaxKind'
          VoidKeyword
        MethodSignature
          Identifier: '
        /** Determines whether expression substitutions are enabled for the provided node. */
        isSubstitutionEnabled'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' Node'
          BooleanKeyword
        PropertySignature
          Identifier: '
        /**
         * Hook used by transformers to substitute expressions just before they
         * are emitted by the pretty printer.
         *
         * NOTE: Transformation hooks should only be modified during `Transformer` initialization,
         * before returning the `NodeTransformer` callback.
         */
        onSubstituteNode'
          FunctionType
            Parameter
              Identifier: 'hint'
              TypeReference
                Identifier: ' EmitHint'
            Parameter
              Identifier: ' node'
              TypeReference
                Identifier: ' Node'
            TypeReference
              Identifier: ' Node'
        MethodSignature
          Identifier: '
        /**
         * Enables before/after emit notifications in the pretty printer for the provided
         * SyntaxKind.
         */
        enableEmitNotification'
          Parameter
            Identifier: 'kind'
            TypeReference
              Identifier: ' SyntaxKind'
          VoidKeyword
        MethodSignature
          Identifier: '
        /**
         * Determines whether before/after emit notifications should be raised in the pretty
         * printer when it emits a node.
         */
        isEmitNotificationEnabled'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' Node'
          BooleanKeyword
        PropertySignature
          Identifier: '
        /**
         * Hook used to allow transformers to capture state before or after
         * the printer emits a node.
         *
         * NOTE: Transformation hooks should only be modified during `Transformer` initialization,
         * before returning the `NodeTransformer` callback.
         */
        onEmitNode'
          FunctionType
            Parameter
              Identifier: 'hint'
              TypeReference
                Identifier: ' EmitHint'
            Parameter
              Identifier: ' node'
              TypeReference
                Identifier: ' Node'
            Parameter
              Identifier: ' emitCallback'
              FunctionType
                Parameter
                  Identifier: 'hint'
                  TypeReference
                    Identifier: ' EmitHint'
                Parameter
                  Identifier: ' node'
                  TypeReference
                    Identifier: ' Node'
                VoidKeyword
            VoidKeyword
      InterfaceDeclaration
        Identifier: ' TransformationResult'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' Node'
        PropertySignature
          Identifier: '
        /** Gets the transformed source files. */
        transformed'
          ArrayType
            TypeReference
              Identifier: ' T'
        PropertySignature
          Identifier: '
        /** Gets diagnostics for the transformation. */
        diagnostics'
          QuestionToken
          ArrayType
            TypeReference
              Identifier: ' DiagnosticWithLocation'
        MethodSignature
          Identifier: '
        /**
         * Gets a substitute for a node, if one is available; otherwise, returns the original node.
         *
         * @param hint A hint as to the intended usage of the node.
         * @param node The node to substitute.
         */
        substituteNode'
          Parameter
            Identifier: 'hint'
            TypeReference
              Identifier: ' EmitHint'
          Parameter
            Identifier: ' node'
            TypeReference
              Identifier: ' Node'
          TypeReference
            Identifier: ' Node'
        MethodSignature
          Identifier: '
        /**
         * Emits a node with possible notification.
         *
         * @param hint A hint as to the intended usage of the node.
         * @param node The node to emit.
         * @param emitCallback A callback used to emit the node.
         */
        emitNodeWithNotification'
          Parameter
            Identifier: 'hint'
            TypeReference
              Identifier: ' EmitHint'
          Parameter
            Identifier: ' node'
            TypeReference
              Identifier: ' Node'
          Parameter
            Identifier: ' emitCallback'
            FunctionType
              Parameter
                Identifier: 'hint'
                TypeReference
                  Identifier: ' EmitHint'
              Parameter
                Identifier: ' node'
                TypeReference
                  Identifier: ' Node'
              VoidKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        /**
         * Indicates if a given node needs an emit notification
         *
         * @param node The node to emit.
         */
        isEmitNotificationEnabled'
          QuestionToken
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' Node'
          BooleanKeyword
        MethodSignature
          Identifier: '
        /**
         * Clean up EmitNode entries on any parse-tree nodes.
         */
        dispose'
          VoidKeyword
      TypeAliasDeclaration
        Identifier: ' TransformerFactory'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' Node'
        FunctionType
          Parameter
            Identifier: 'context'
            TypeReference
              Identifier: ' TransformationContext'
          TypeReference
            Identifier: ' Transformer'
            TypeReference
              Identifier: 'T'
      TypeAliasDeclaration
        Identifier: ' Transformer'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' Node'
        FunctionType
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' T'
          TypeReference
            Identifier: ' T'
      TypeAliasDeclaration
        Identifier: ' Visitor'
        TypeParameter
          Identifier: 'TIn'
          TypeReference
            Identifier: ' Node'
          TypeReference
            Identifier: ' Node'
        TypeParameter
          Identifier: ' TOut'
          UnionType
            TypeReference
              Identifier: ' Node'
            UndefinedKeyword
          UnionType
            TypeReference
              Identifier: ' TIn'
            UndefinedKeyword
        FunctionType
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' TIn'
          TypeReference
            Identifier: ' VisitResult'
            TypeReference
              Identifier: 'TOut'
      InterfaceDeclaration
        Identifier: ' NodeVisitor'
        CallSignature
          TypeParameter
            Identifier: 'TIn'
            UnionType
              TypeReference
                Identifier: ' Node'
              UndefinedKeyword
          TypeParameter
            Identifier: ' TVisited'
            UnionType
              TypeReference
                Identifier: ' Node'
              UndefinedKeyword
          TypeParameter
            Identifier: ' TOut'
            TypeReference
              Identifier: ' Node'
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' TIn'
          Parameter
            Identifier: ' visitor'
            TypeReference
              Identifier: ' Visitor'
              TypeReference
                Identifier: 'NonNullable'
                TypeReference
                  Identifier: 'TIn'
              TypeReference
                Identifier: ' TVisited'
          Parameter
            Identifier: ' test'
            FunctionType
              Parameter
                Identifier: 'node'
                TypeReference
                  Identifier: ' Node'
              TypePredicate
                Identifier: ' node'
                TypeReference
                  Identifier: ' TOut'
          Parameter
            Identifier: ' lift'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'node'
                TypeOperator
                  ArrayType
                    TypeReference
                      Identifier: ' Node'
              TypeReference
                Identifier: ' Node'
          UnionType
            TypeReference
              Identifier: ' TOut'
            ParenthesizedType
              IntersectionType
                TypeReference
                  Identifier: 'TIn'
                UndefinedKeyword
            ParenthesizedType
              IntersectionType
                TypeReference
                  Identifier: 'TVisited'
                UndefinedKeyword
        CallSignature
          TypeParameter
            Identifier: 'TIn'
            UnionType
              TypeReference
                Identifier: ' Node'
              UndefinedKeyword
          TypeParameter
            Identifier: ' TVisited'
            UnionType
              TypeReference
                Identifier: ' Node'
              UndefinedKeyword
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' TIn'
          Parameter
            Identifier: ' visitor'
            TypeReference
              Identifier: ' Visitor'
              TypeReference
                Identifier: 'NonNullable'
                TypeReference
                  Identifier: 'TIn'
              TypeReference
                Identifier: ' TVisited'
          Parameter
            Identifier: ' test'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'node'
                TypeReference
                  Identifier: ' Node'
              BooleanKeyword
          Parameter
            Identifier: ' lift'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'node'
                TypeOperator
                  ArrayType
                    TypeReference
                      Identifier: ' Node'
              TypeReference
                Identifier: ' Node'
          UnionType
            TypeReference
              Identifier: ' Node'
            ParenthesizedType
              IntersectionType
                TypeReference
                  Identifier: 'TIn'
                UndefinedKeyword
            ParenthesizedType
              IntersectionType
                TypeReference
                  Identifier: 'TVisited'
                UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' NodesVisitor'
        CallSignature
          TypeParameter
            Identifier: 'TIn'
            TypeReference
              Identifier: ' Node'
          TypeParameter
            Identifier: ' TInArray'
            UnionType
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'TIn'
              UndefinedKeyword
          TypeParameter
            Identifier: ' TOut'
            TypeReference
              Identifier: ' Node'
          Parameter
            Identifier: 'nodes'
            TypeReference
              Identifier: ' TInArray'
          Parameter
            Identifier: ' visitor'
            TypeReference
              Identifier: ' Visitor'
              TypeReference
                Identifier: 'TIn'
              UnionType
                TypeReference
                  Identifier: ' Node'
                UndefinedKeyword
          Parameter
            Identifier: ' test'
            FunctionType
              Parameter
                Identifier: 'node'
                TypeReference
                  Identifier: ' Node'
              TypePredicate
                Identifier: ' node'
                TypeReference
                  Identifier: ' TOut'
          Parameter
            Identifier: ' start'
            QuestionToken
            NumberKeyword
          Parameter
            Identifier: ' count'
            QuestionToken
            NumberKeyword
          UnionType
            TypeReference
              Identifier: ' NodeArray'
              TypeReference
                Identifier: 'TOut'
            ParenthesizedType
              IntersectionType
                TypeReference
                  Identifier: 'TInArray'
                UndefinedKeyword
        CallSignature
          TypeParameter
            Identifier: 'TIn'
            TypeReference
              Identifier: ' Node'
          TypeParameter
            Identifier: ' TInArray'
            UnionType
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'TIn'
              UndefinedKeyword
          Parameter
            Identifier: 'nodes'
            TypeReference
              Identifier: ' TInArray'
          Parameter
            Identifier: ' visitor'
            TypeReference
              Identifier: ' Visitor'
              TypeReference
                Identifier: 'TIn'
              UnionType
                TypeReference
                  Identifier: ' Node'
                UndefinedKeyword
          Parameter
            Identifier: ' test'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'node'
                TypeReference
                  Identifier: ' Node'
              BooleanKeyword
          Parameter
            Identifier: ' start'
            QuestionToken
            NumberKeyword
          Parameter
            Identifier: ' count'
            QuestionToken
            NumberKeyword
          UnionType
            TypeReference
              Identifier: ' NodeArray'
              TypeReference
                Identifier: 'Node'
            ParenthesizedType
              IntersectionType
                TypeReference
                  Identifier: 'TInArray'
                UndefinedKeyword
      TypeAliasDeclaration
        Identifier: ' VisitResult'
        TypeParameter
          Identifier: 'T'
          UnionType
            TypeReference
              Identifier: ' Node'
            UndefinedKeyword
        UnionType
          TypeReference
            Identifier: ' T'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Node'
      InterfaceDeclaration
        Identifier: ' Printer'
        MethodSignature
          Identifier: '
        /**
         * Print a node and its subtree as-is, without any emit transformations.
         * @param hint A value indicating the purpose of a node. This is primarily used to
         * distinguish between an `Identifier` used in an expression position, versus an
         * `Identifier` used as an `IdentifierName` as part of a declaration. For most nodes you
         * should just pass `Unspecified`.
         * @param node The node to print. The node and its subtree are printed as-is, without any
         * emit transformations.
         * @param sourceFile A source file that provides context for the node. The source text of
         * the file is used to emit the original source content for literals and identifiers, while
         * the identifiers of the source file are used when generating unique names to avoid
         * collisions.
         */
        printNode'
          Parameter
            Identifier: 'hint'
            TypeReference
              Identifier: ' EmitHint'
          Parameter
            Identifier: ' node'
            TypeReference
              Identifier: ' Node'
          Parameter
            Identifier: ' sourceFile'
            TypeReference
              Identifier: ' SourceFile'
          StringKeyword
        MethodSignature
          Identifier: '
        /**
         * Prints a list of nodes using the given format flags
         */
        printList'
          TypeParameter
            Identifier: 'T'
            TypeReference
              Identifier: ' Node'
          Parameter
            Identifier: 'format'
            TypeReference
              Identifier: ' ListFormat'
          Parameter
            Identifier: ' list'
            TypeReference
              Identifier: ' NodeArray'
              TypeReference
                Identifier: 'T'
          Parameter
            Identifier: ' sourceFile'
            TypeReference
              Identifier: ' SourceFile'
          StringKeyword
        MethodSignature
          Identifier: '
        /**
         * Prints a source file as-is, without any emit transformations.
         */
        printFile'
          Parameter
            Identifier: 'sourceFile'
            TypeReference
              Identifier: ' SourceFile'
          StringKeyword
        MethodSignature
          Identifier: '
        /**
         * Prints a bundle of source files as-is, without any emit transformations.
         */
        printBundle'
          Parameter
            Identifier: 'bundle'
            TypeReference
              Identifier: ' Bundle'
          StringKeyword
      InterfaceDeclaration
        Identifier: ' PrintHandlers'
        MethodSignature
          Identifier: '
        /**
         * A hook used by the Printer when generating unique names to avoid collisions with
         * globally defined names that exist outside of the current source file.
         */
        hasGlobalName'
          QuestionToken
          Parameter
            Identifier: 'name'
            StringKeyword
          BooleanKeyword
        MethodSignature
          Identifier: '
        /**
         * A hook used by the Printer to provide notifications prior to emitting a node. A
         * compatible implementation **must** invoke `emitCallback` with the provided `hint` and
         * `node` values.
         * @param hint A hint indicating the intended purpose of the node.
         * @param node The node to emit.
         * @param emitCallback A callback that, when invoked, will emit the node.
         * @example
         * ```ts
         * var printer = createPrinter(printerOptions, {
         *   onEmitNode(hint, node, emitCallback) {
         *     // set up or track state prior to emitting the node...
         *     emitCallback(hint, node);
         *     // restore state after emitting the node...
         *   }
         * });
         * ```
         */
        onEmitNode'
          QuestionToken
          Parameter
            Identifier: 'hint'
            TypeReference
              Identifier: ' EmitHint'
          Parameter
            Identifier: ' node'
            TypeReference
              Identifier: ' Node'
          Parameter
            Identifier: ' emitCallback'
            FunctionType
              Parameter
                Identifier: 'hint'
                TypeReference
                  Identifier: ' EmitHint'
              Parameter
                Identifier: ' node'
                TypeReference
                  Identifier: ' Node'
              VoidKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        /**
         * A hook used to check if an emit notification is required for a node.
         * @param node The node to emit.
         */
        isEmitNotificationEnabled'
          QuestionToken
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' Node'
          BooleanKeyword
        MethodSignature
          Identifier: '
        /**
         * A hook used by the Printer to perform just-in-time substitution of a node. This is
         * primarily used by node transformations that need to substitute one node for another,
         * such as replacing `myExportedVar` with `exports.myExportedVar`.
         * @param hint A hint indicating the intended purpose of the node.
         * @param node The node to emit.
         * @example
         * ```ts
         * var printer = createPrinter(printerOptions, {
         *   substituteNode(hint, node) {
         *     // perform substitution if necessary...
         *     return node;
         *   }
         * });
         * ```
         */
        substituteNode'
          QuestionToken
          Parameter
            Identifier: 'hint'
            TypeReference
              Identifier: ' EmitHint'
          Parameter
            Identifier: ' node'
            TypeReference
              Identifier: ' Node'
          TypeReference
            Identifier: ' Node'
      InterfaceDeclaration
        Identifier: ' PrinterOptions'
        PropertySignature
          Identifier: '
        removeComments'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        newLine'
          QuestionToken
          TypeReference
            Identifier: ' NewLineKind'
        PropertySignature
          Identifier: '
        omitTrailingSemicolon'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        noEmitHelpers'
          QuestionToken
          BooleanKeyword
      InterfaceDeclaration
        Identifier: ' GetEffectiveTypeRootsHost'
        MethodSignature
          Identifier: '
        getCurrentDirectory'
          QuestionToken
          StringKeyword
      InterfaceDeclaration
        Identifier: ' TextSpan'
        PropertySignature
          Identifier: '
        start'
          NumberKeyword
        PropertySignature
          Identifier: '
        length'
          NumberKeyword
      InterfaceDeclaration
        Identifier: ' TextChangeRange'
        PropertySignature
          Identifier: '
        span'
          TypeReference
            Identifier: ' TextSpan'
        PropertySignature
          Identifier: '
        newLength'
          NumberKeyword
      InterfaceDeclaration
        Identifier: ' SyntaxList'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Node'
        PropertySignature
          Identifier: '
        kind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'SyntaxList'
      EnumDeclaration
        Identifier: ' ListFormat'
        EnumMember
          Identifier: '
        None'
          NumericLiteral
        EnumMember
          Identifier: '
        SingleLine'
          NumericLiteral
        EnumMember
          Identifier: '
        MultiLine'
          NumericLiteral
        EnumMember
          Identifier: '
        PreserveLines'
          NumericLiteral
        EnumMember
          Identifier: '
        LinesMask'
          NumericLiteral
        EnumMember
          Identifier: '
        NotDelimited'
          NumericLiteral
        EnumMember
          Identifier: '
        BarDelimited'
          NumericLiteral
        EnumMember
          Identifier: '
        AmpersandDelimited'
          NumericLiteral
        EnumMember
          Identifier: '
        CommaDelimited'
          NumericLiteral
        EnumMember
          Identifier: '
        AsteriskDelimited'
          NumericLiteral
        EnumMember
          Identifier: '
        DelimitersMask'
          NumericLiteral
        EnumMember
          Identifier: '
        AllowTrailingComma'
          NumericLiteral
        EnumMember
          Identifier: '
        Indented'
          NumericLiteral
        EnumMember
          Identifier: '
        SpaceBetweenBraces'
          NumericLiteral
        EnumMember
          Identifier: '
        SpaceBetweenSiblings'
          NumericLiteral
        EnumMember
          Identifier: '
        Braces'
          NumericLiteral
        EnumMember
          Identifier: '
        Parenthesis'
          NumericLiteral
        EnumMember
          Identifier: '
        AngleBrackets'
          NumericLiteral
        EnumMember
          Identifier: '
        SquareBrackets'
          NumericLiteral
        EnumMember
          Identifier: '
        BracketsMask'
          NumericLiteral
        EnumMember
          Identifier: '
        OptionalIfUndefined'
          NumericLiteral
        EnumMember
          Identifier: '
        OptionalIfEmpty'
          NumericLiteral
        EnumMember
          Identifier: '
        Optional'
          NumericLiteral
        EnumMember
          Identifier: '
        PreferNewLine'
          NumericLiteral
        EnumMember
          Identifier: '
        NoTrailingNewLine'
          NumericLiteral
        EnumMember
          Identifier: '
        NoInterveningComments'
          NumericLiteral
        EnumMember
          Identifier: '
        NoSpaceIfEmpty'
          NumericLiteral
        EnumMember
          Identifier: '
        SingleElement'
          NumericLiteral
        EnumMember
          Identifier: '
        SpaceAfterList'
          NumericLiteral
        EnumMember
          Identifier: '
        Modifiers'
          NumericLiteral
        EnumMember
          Identifier: '
        HeritageClauses'
          NumericLiteral
        EnumMember
          Identifier: '
        SingleLineTypeLiteralMembers'
          NumericLiteral
        EnumMember
          Identifier: '
        MultiLineTypeLiteralMembers'
          NumericLiteral
        EnumMember
          Identifier: '
        SingleLineTupleTypeElements'
          NumericLiteral
        EnumMember
          Identifier: '
        MultiLineTupleTypeElements'
          NumericLiteral
        EnumMember
          Identifier: '
        UnionTypeConstituents'
          NumericLiteral
        EnumMember
          Identifier: '
        IntersectionTypeConstituents'
          NumericLiteral
        EnumMember
          Identifier: '
        ObjectBindingPatternElements'
          NumericLiteral
        EnumMember
          Identifier: '
        ArrayBindingPatternElements'
          NumericLiteral
        EnumMember
          Identifier: '
        ObjectLiteralExpressionProperties'
          NumericLiteral
        EnumMember
          Identifier: '
        ImportAttributes'
          NumericLiteral
        EnumMember
          Identifier: '
        /** @deprecated */ ImportClauseEntries'
          NumericLiteral
        EnumMember
          Identifier: '
        ArrayLiteralExpressionElements'
          NumericLiteral
        EnumMember
          Identifier: '
        CommaListElements'
          NumericLiteral
        EnumMember
          Identifier: '
        CallExpressionArguments'
          NumericLiteral
        EnumMember
          Identifier: '
        NewExpressionArguments'
          NumericLiteral
        EnumMember
          Identifier: '
        TemplateExpressionSpans'
          NumericLiteral
        EnumMember
          Identifier: '
        SingleLineBlockStatements'
          NumericLiteral
        EnumMember
          Identifier: '
        MultiLineBlockStatements'
          NumericLiteral
        EnumMember
          Identifier: '
        VariableDeclarationList'
          NumericLiteral
        EnumMember
          Identifier: '
        SingleLineFunctionBodyStatements'
          NumericLiteral
        EnumMember
          Identifier: '
        MultiLineFunctionBodyStatements'
          NumericLiteral
        EnumMember
          Identifier: '
        ClassHeritageClauses'
          NumericLiteral
        EnumMember
          Identifier: '
        ClassMembers'
          NumericLiteral
        EnumMember
          Identifier: '
        InterfaceMembers'
          NumericLiteral
        EnumMember
          Identifier: '
        EnumMembers'
          NumericLiteral
        EnumMember
          Identifier: '
        CaseBlockClauses'
          NumericLiteral
        EnumMember
          Identifier: '
        NamedImportsOrExportsElements'
          NumericLiteral
        EnumMember
          Identifier: '
        JsxElementOrFragmentChildren'
          NumericLiteral
        EnumMember
          Identifier: '
        JsxElementAttributes'
          NumericLiteral
        EnumMember
          Identifier: '
        CaseOrDefaultClauseStatements'
          NumericLiteral
        EnumMember
          Identifier: '
        HeritageClauseTypes'
          NumericLiteral
        EnumMember
          Identifier: '
        SourceFileStatements'
          NumericLiteral
        EnumMember
          Identifier: '
        Decorators'
          NumericLiteral
        EnumMember
          Identifier: '
        TypeArguments'
          NumericLiteral
        EnumMember
          Identifier: '
        TypeParameters'
          NumericLiteral
        EnumMember
          Identifier: '
        Parameters'
          NumericLiteral
        EnumMember
          Identifier: '
        IndexSignatureParameters'
          NumericLiteral
        EnumMember
          Identifier: '
        JSDocComment'
          NumericLiteral
      EnumDeclaration
        Identifier: ' JSDocParsingMode'
        EnumMember
          Identifier: '
        /**
         * Always parse JSDoc comments and include them in the AST.
         *
         * This is the default if no mode is provided.
         */
        ParseAll'
          NumericLiteral
        EnumMember
          Identifier: '
        /**
         * Never parse JSDoc comments, mo matter the file type.
         */
        ParseNone'
          NumericLiteral
        EnumMember
          Identifier: '
        /**
         * Parse only JSDoc comments which are needed to provide correct type errors.
         *
         * This will always parse JSDoc in non-TS files, but only parse JSDoc comments
         * containing `@see` and `@link` in TS files.
         */
        ParseForTypeErrors'
          NumericLiteral
        EnumMember
          Identifier: '
        /**
         * Parse only JSDoc comments which are needed to provide correct type info.
         *
         * This will always parse JSDoc in non-TS files, but never in TS files.
         *
         * Note: Do not use this mode if you require accurate type errors; use {@link ParseForTypeErrors} instead.
         */
        ParseForTypeInfo'
          NumericLiteral
      InterfaceDeclaration
        Identifier: ' UserPreferences'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' disableSuggestions'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' quotePreference'
          QuestionToken
          UnionType
            LiteralType
              StringLiteral
            LiteralType
              StringLiteral
            LiteralType
              StringLiteral
        PropertySignature
          ReadonlyKeyword
          Identifier: ' includeCompletionsForModuleExports'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' includeCompletionsForImportStatements'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' includeCompletionsWithSnippetText'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' includeAutomaticOptionalChainCompletions'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' includeCompletionsWithInsertText'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' includeCompletionsWithClassMemberSnippets'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' includeCompletionsWithObjectLiteralMethodSnippets'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' useLabelDetailsInCompletionEntries'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' allowIncompleteCompletions'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' importModuleSpecifierPreference'
          QuestionToken
          UnionType
            LiteralType
              StringLiteral
            LiteralType
              StringLiteral
            LiteralType
              StringLiteral
            LiteralType
              StringLiteral
        PropertySignature
          ReadonlyKeyword
          Identifier: ' importModuleSpecifierEnding'
          QuestionToken
          UnionType
            LiteralType
              StringLiteral
            LiteralType
              StringLiteral
            LiteralType
              StringLiteral
            LiteralType
              StringLiteral
        PropertySignature
          ReadonlyKeyword
          Identifier: ' allowTextChangesInNewFiles'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' providePrefixAndSuffixTextForRename'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' includePackageJsonAutoImports'
          QuestionToken
          UnionType
            LiteralType
              StringLiteral
            LiteralType
              StringLiteral
            LiteralType
              StringLiteral
        PropertySignature
          ReadonlyKeyword
          Identifier: ' provideRefactorNotApplicableReason'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' jsxAttributeCompletionStyle'
          QuestionToken
          UnionType
            LiteralType
              StringLiteral
            LiteralType
              StringLiteral
            LiteralType
              StringLiteral
        PropertySignature
          ReadonlyKeyword
          Identifier: ' includeInlayParameterNameHints'
          QuestionToken
          UnionType
            LiteralType
              StringLiteral
            LiteralType
              StringLiteral
            LiteralType
              StringLiteral
        PropertySignature
          ReadonlyKeyword
          Identifier: ' includeInlayParameterNameHintsWhenArgumentMatchesName'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' includeInlayFunctionParameterTypeHints'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' includeInlayVariableTypeHints'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' includeInlayVariableTypeHintsWhenTypeMatchesName'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' includeInlayPropertyDeclarationTypeHints'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' includeInlayFunctionLikeReturnTypeHints'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' includeInlayEnumMemberValueHints'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' interactiveInlayHints'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' allowRenameOfImportPath'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' autoImportFileExcludePatterns'
          QuestionToken
          ArrayType
            StringKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' autoImportSpecifierExcludeRegexes'
          QuestionToken
          ArrayType
            StringKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' preferTypeOnlyAutoImports'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' organizeImportsIgnoreCase'
          QuestionToken
          UnionType
            LiteralType
              StringLiteral
            BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' organizeImportsCollation'
          QuestionToken
          UnionType
            LiteralType
              StringLiteral
            LiteralType
              StringLiteral
        PropertySignature
          ReadonlyKeyword
          Identifier: ' organizeImportsLocale'
          QuestionToken
          StringKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' organizeImportsNumericCollation'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' organizeImportsAccentCollation'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' organizeImportsCaseFirst'
          QuestionToken
          UnionType
            LiteralType
              StringLiteral
            LiteralType
              StringLiteral
            LiteralType
              FalseKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' organizeImportsTypeOrder'
          QuestionToken
          TypeReference
            Identifier: ' OrganizeImportsTypeOrder'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' excludeLibrarySymbolsInNavTo'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' lazyConfiguredProjectsFromExternalProject'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' displayPartsForJSDoc'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' generateReturnInDocTemplate'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' disableLineTextInReferences'
          QuestionToken
          BooleanKeyword
      TypeAliasDeclaration
        Identifier: ' OrganizeImportsTypeOrder'
        UnionType
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
      InterfaceDeclaration
        Identifier: ' PseudoBigInt'
        PropertySignature
          Identifier: '
        negative'
          BooleanKeyword
        PropertySignature
          Identifier: '
        base10Value'
          StringKeyword
      EnumDeclaration
        Identifier: ' FileWatcherEventKind'
        EnumMember
          Identifier: '
        Created'
          NumericLiteral
        EnumMember
          Identifier: '
        Changed'
          NumericLiteral
        EnumMember
          Identifier: '
        Deleted'
          NumericLiteral
      TypeAliasDeclaration
        Identifier: ' FileWatcherCallback'
        FunctionType
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' eventKind'
            TypeReference
              Identifier: ' FileWatcherEventKind'
          Parameter
            Identifier: ' modifiedTime'
            QuestionToken
            TypeReference
              Identifier: ' Date'
          VoidKeyword
      TypeAliasDeclaration
        Identifier: ' DirectoryWatcherCallback'
        FunctionType
          Parameter
            Identifier: 'fileName'
            StringKeyword
          VoidKeyword
      TypeAliasDeclaration
        Identifier: ' BufferEncoding'
        UnionType
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
      InterfaceDeclaration
        Identifier: ' System'
        PropertySignature
          Identifier: '
        args'
          ArrayType
            StringKeyword
        PropertySignature
          Identifier: '
        newLine'
          StringKeyword
        PropertySignature
          Identifier: '
        useCaseSensitiveFileNames'
          BooleanKeyword
        MethodSignature
          Identifier: '
        write'
          Parameter
            Identifier: 's'
            StringKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        writeOutputIsTTY'
          QuestionToken
          BooleanKeyword
        MethodSignature
          Identifier: '
        getWidthOfTerminal'
          QuestionToken
          NumberKeyword
        MethodSignature
          Identifier: '
        readFile'
          Parameter
            Identifier: 'path'
            StringKeyword
          Parameter
            Identifier: ' encoding'
            QuestionToken
            StringKeyword
          UnionType
            StringKeyword
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getFileSize'
          QuestionToken
          Parameter
            Identifier: 'path'
            StringKeyword
          NumberKeyword
        MethodSignature
          Identifier: '
        writeFile'
          Parameter
            Identifier: 'path'
            StringKeyword
          Parameter
            Identifier: ' data'
            StringKeyword
          Parameter
            Identifier: ' writeByteOrderMark'
            QuestionToken
            BooleanKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        /**
         * @pollingInterval - this parameter is used in polling-based watchers and ignored in watchers that
         * use native OS file watching
         */
        watchFile'
          QuestionToken
          Parameter
            Identifier: 'path'
            StringKeyword
          Parameter
            Identifier: ' callback'
            TypeReference
              Identifier: ' FileWatcherCallback'
          Parameter
            Identifier: ' pollingInterval'
            QuestionToken
            NumberKeyword
          Parameter
            Identifier: ' options'
            QuestionToken
            TypeReference
              Identifier: ' WatchOptions'
          TypeReference
            Identifier: ' FileWatcher'
        MethodSignature
          Identifier: '
        watchDirectory'
          QuestionToken
          Parameter
            Identifier: 'path'
            StringKeyword
          Parameter
            Identifier: ' callback'
            TypeReference
              Identifier: ' DirectoryWatcherCallback'
          Parameter
            Identifier: ' recursive'
            QuestionToken
            BooleanKeyword
          Parameter
            Identifier: ' options'
            QuestionToken
            TypeReference
              Identifier: ' WatchOptions'
          TypeReference
            Identifier: ' FileWatcher'
        MethodSignature
          Identifier: '
        resolvePath'
          Parameter
            Identifier: 'path'
            StringKeyword
          StringKeyword
        MethodSignature
          Identifier: '
        fileExists'
          Parameter
            Identifier: 'path'
            StringKeyword
          BooleanKeyword
        MethodSignature
          Identifier: '
        directoryExists'
          Parameter
            Identifier: 'path'
            StringKeyword
          BooleanKeyword
        MethodSignature
          Identifier: '
        createDirectory'
          Parameter
            Identifier: 'path'
            StringKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        getExecutingFilePath'
          StringKeyword
        MethodSignature
          Identifier: '
        getCurrentDirectory'
          StringKeyword
        MethodSignature
          Identifier: '
        getDirectories'
          Parameter
            Identifier: 'path'
            StringKeyword
          ArrayType
            StringKeyword
        MethodSignature
          Identifier: '
        readDirectory'
          Parameter
            Identifier: 'path'
            StringKeyword
          Parameter
            Identifier: ' extensions'
            QuestionToken
            TypeOperator
              ArrayType
                StringKeyword
          Parameter
            Identifier: ' exclude'
            QuestionToken
            TypeOperator
              ArrayType
                StringKeyword
          Parameter
            Identifier: ' include'
            QuestionToken
            TypeOperator
              ArrayType
                StringKeyword
          Parameter
            Identifier: ' depth'
            QuestionToken
            NumberKeyword
          ArrayType
            StringKeyword
        MethodSignature
          Identifier: '
        getModifiedTime'
          QuestionToken
          Parameter
            Identifier: 'path'
            StringKeyword
          UnionType
            TypeReference
              Identifier: ' Date'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        setModifiedTime'
          QuestionToken
          Parameter
            Identifier: 'path'
            StringKeyword
          Parameter
            Identifier: ' time'
            TypeReference
              Identifier: ' Date'
          VoidKeyword
        MethodSignature
          Identifier: '
        deleteFile'
          QuestionToken
          Parameter
            Identifier: 'path'
            StringKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        /**
         * A good implementation is node.js' `crypto.createHash`. (https://nodejs.org/api/crypto.html#crypto_crypto_createhash_algorithm)
         */
        createHash'
          QuestionToken
          Parameter
            Identifier: 'data'
            StringKeyword
          StringKeyword
        MethodSignature
          Identifier: '
        /** This must be cryptographically secure. Only implement this method using `crypto.createHash("sha256")`. */
        createSHA256Hash'
          QuestionToken
          Parameter
            Identifier: 'data'
            StringKeyword
          StringKeyword
        MethodSignature
          Identifier: '
        getMemoryUsage'
          QuestionToken
          NumberKeyword
        MethodSignature
          Identifier: '
        exit'
          Parameter
            Identifier: 'exitCode'
            QuestionToken
            NumberKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        realpath'
          QuestionToken
          Parameter
            Identifier: 'path'
            StringKeyword
          StringKeyword
        MethodSignature
          Identifier: '
        setTimeout'
          QuestionToken
          Parameter
            Identifier: 'callback'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          Parameter
            Identifier: ' ms'
            NumberKeyword
          Parameter
            DotDotDotToken
            Identifier: 'args'
            ArrayType
              AnyKeyword
          AnyKeyword
        MethodSignature
          Identifier: '
        clearTimeout'
          QuestionToken
          Parameter
            Identifier: 'timeoutId'
            AnyKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        clearScreen'
          QuestionToken
          VoidKeyword
        MethodSignature
          Identifier: '
        base64decode'
          QuestionToken
          Parameter
            Identifier: 'input'
            StringKeyword
          StringKeyword
        MethodSignature
          Identifier: '
        base64encode'
          QuestionToken
          Parameter
            Identifier: 'input'
            StringKeyword
          StringKeyword
      InterfaceDeclaration
        Identifier: ' FileWatcher'
        MethodSignature
          Identifier: '
        close'
          VoidKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' sys'
            TypeReference
              Identifier: ' System'
      FunctionDeclaration
        Identifier: ' tokenToString'
        Parameter
          Identifier: 't'
          TypeReference
            Identifier: ' SyntaxKind'
        UnionType
          StringKeyword
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' getPositionOfLineAndCharacter'
        Parameter
          Identifier: 'sourceFile'
          TypeReference
            Identifier: ' SourceFileLike'
        Parameter
          Identifier: ' line'
          NumberKeyword
        Parameter
          Identifier: ' character'
          NumberKeyword
        NumberKeyword
      FunctionDeclaration
        Identifier: ' getLineAndCharacterOfPosition'
        Parameter
          Identifier: 'sourceFile'
          TypeReference
            Identifier: ' SourceFileLike'
        Parameter
          Identifier: ' position'
          NumberKeyword
        TypeReference
          Identifier: ' LineAndCharacter'
      FunctionDeclaration
        Identifier: ' isWhiteSpaceLike'
        Parameter
          Identifier: 'ch'
          NumberKeyword
        BooleanKeyword
      FunctionDeclaration
        Identifier: ' isWhiteSpaceSingleLine'
        Parameter
          Identifier: 'ch'
          NumberKeyword
        BooleanKeyword
      FunctionDeclaration
        Identifier: ' isLineBreak'
        Parameter
          Identifier: 'ch'
          NumberKeyword
        BooleanKeyword
      FunctionDeclaration
        Identifier: ' couldStartTrivia'
        Parameter
          Identifier: 'text'
          StringKeyword
        Parameter
          Identifier: ' pos'
          NumberKeyword
        BooleanKeyword
      FunctionDeclaration
        Identifier: ' forEachLeadingCommentRange'
        TypeParameter
          Identifier: 'U'
        Parameter
          Identifier: 'text'
          StringKeyword
        Parameter
          Identifier: ' pos'
          NumberKeyword
        Parameter
          Identifier: ' cb'
          FunctionType
            Parameter
              Identifier: 'pos'
              NumberKeyword
            Parameter
              Identifier: ' end'
              NumberKeyword
            Parameter
              Identifier: ' kind'
              TypeReference
                Identifier: ' CommentKind'
            Parameter
              Identifier: ' hasTrailingNewLine'
              BooleanKeyword
            TypeReference
              Identifier: ' U'
        UnionType
          TypeReference
            Identifier: ' U'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' forEachLeadingCommentRange'
        TypeParameter
          Identifier: 'T'
        TypeParameter
          Identifier: ' U'
        Parameter
          Identifier: 'text'
          StringKeyword
        Parameter
          Identifier: ' pos'
          NumberKeyword
        Parameter
          Identifier: ' cb'
          FunctionType
            Parameter
              Identifier: 'pos'
              NumberKeyword
            Parameter
              Identifier: ' end'
              NumberKeyword
            Parameter
              Identifier: ' kind'
              TypeReference
                Identifier: ' CommentKind'
            Parameter
              Identifier: ' hasTrailingNewLine'
              BooleanKeyword
            Parameter
              Identifier: ' state'
              TypeReference
                Identifier: ' T'
            TypeReference
              Identifier: ' U'
        Parameter
          Identifier: ' state'
          TypeReference
            Identifier: ' T'
        UnionType
          TypeReference
            Identifier: ' U'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' forEachTrailingCommentRange'
        TypeParameter
          Identifier: 'U'
        Parameter
          Identifier: 'text'
          StringKeyword
        Parameter
          Identifier: ' pos'
          NumberKeyword
        Parameter
          Identifier: ' cb'
          FunctionType
            Parameter
              Identifier: 'pos'
              NumberKeyword
            Parameter
              Identifier: ' end'
              NumberKeyword
            Parameter
              Identifier: ' kind'
              TypeReference
                Identifier: ' CommentKind'
            Parameter
              Identifier: ' hasTrailingNewLine'
              BooleanKeyword
            TypeReference
              Identifier: ' U'
        UnionType
          TypeReference
            Identifier: ' U'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' forEachTrailingCommentRange'
        TypeParameter
          Identifier: 'T'
        TypeParameter
          Identifier: ' U'
        Parameter
          Identifier: 'text'
          StringKeyword
        Parameter
          Identifier: ' pos'
          NumberKeyword
        Parameter
          Identifier: ' cb'
          FunctionType
            Parameter
              Identifier: 'pos'
              NumberKeyword
            Parameter
              Identifier: ' end'
              NumberKeyword
            Parameter
              Identifier: ' kind'
              TypeReference
                Identifier: ' CommentKind'
            Parameter
              Identifier: ' hasTrailingNewLine'
              BooleanKeyword
            Parameter
              Identifier: ' state'
              TypeReference
                Identifier: ' T'
            TypeReference
              Identifier: ' U'
        Parameter
          Identifier: ' state'
          TypeReference
            Identifier: ' T'
        UnionType
          TypeReference
            Identifier: ' U'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' reduceEachLeadingCommentRange'
        TypeParameter
          Identifier: 'T'
        TypeParameter
          Identifier: ' U'
        Parameter
          Identifier: 'text'
          StringKeyword
        Parameter
          Identifier: ' pos'
          NumberKeyword
        Parameter
          Identifier: ' cb'
          FunctionType
            Parameter
              Identifier: 'pos'
              NumberKeyword
            Parameter
              Identifier: ' end'
              NumberKeyword
            Parameter
              Identifier: ' kind'
              TypeReference
                Identifier: ' CommentKind'
            Parameter
              Identifier: ' hasTrailingNewLine'
              BooleanKeyword
            Parameter
              Identifier: ' state'
              TypeReference
                Identifier: ' T'
            TypeReference
              Identifier: ' U'
        Parameter
          Identifier: ' state'
          TypeReference
            Identifier: ' T'
        Parameter
          Identifier: ' initial'
          TypeReference
            Identifier: ' U'
        UnionType
          TypeReference
            Identifier: ' U'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' reduceEachTrailingCommentRange'
        TypeParameter
          Identifier: 'T'
        TypeParameter
          Identifier: ' U'
        Parameter
          Identifier: 'text'
          StringKeyword
        Parameter
          Identifier: ' pos'
          NumberKeyword
        Parameter
          Identifier: ' cb'
          FunctionType
            Parameter
              Identifier: 'pos'
              NumberKeyword
            Parameter
              Identifier: ' end'
              NumberKeyword
            Parameter
              Identifier: ' kind'
              TypeReference
                Identifier: ' CommentKind'
            Parameter
              Identifier: ' hasTrailingNewLine'
              BooleanKeyword
            Parameter
              Identifier: ' state'
              TypeReference
                Identifier: ' T'
            TypeReference
              Identifier: ' U'
        Parameter
          Identifier: ' state'
          TypeReference
            Identifier: ' T'
        Parameter
          Identifier: ' initial'
          TypeReference
            Identifier: ' U'
        UnionType
          TypeReference
            Identifier: ' U'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' getLeadingCommentRanges'
        Parameter
          Identifier: 'text'
          StringKeyword
        Parameter
          Identifier: ' pos'
          NumberKeyword
        UnionType
          ArrayType
            TypeReference
              Identifier: ' CommentRange'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' getTrailingCommentRanges'
        Parameter
          Identifier: 'text'
          StringKeyword
        Parameter
          Identifier: ' pos'
          NumberKeyword
        UnionType
          ArrayType
            TypeReference
              Identifier: ' CommentRange'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' getShebang'
        Parameter
          Identifier: 'text'
          StringKeyword
        UnionType
          StringKeyword
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' isIdentifierStart'
        Parameter
          Identifier: 'ch'
          NumberKeyword
        Parameter
          Identifier: ' languageVersion'
          UnionType
            TypeReference
              Identifier: ' ScriptTarget'
            UndefinedKeyword
        BooleanKeyword
      FunctionDeclaration
        Identifier: ' isIdentifierPart'
        Parameter
          Identifier: 'ch'
          NumberKeyword
        Parameter
          Identifier: ' languageVersion'
          UnionType
            TypeReference
              Identifier: ' ScriptTarget'
            UndefinedKeyword
        Parameter
          Identifier: ' identifierVariant'
          QuestionToken
          TypeReference
            Identifier: ' LanguageVariant'
        BooleanKeyword
      FunctionDeclaration
        Identifier: ' createScanner'
        Parameter
          Identifier: 'languageVersion'
          TypeReference
            Identifier: ' ScriptTarget'
        Parameter
          Identifier: ' skipTrivia'
          BooleanKeyword
        Parameter
          Identifier: ' languageVariant'
          QuestionToken
          TypeReference
            Identifier: ' LanguageVariant'
        Parameter
          Identifier: ' textInitial'
          QuestionToken
          StringKeyword
        Parameter
          Identifier: ' onError'
          QuestionToken
          TypeReference
            Identifier: ' ErrorCallback'
        Parameter
          Identifier: ' start'
          QuestionToken
          NumberKeyword
        Parameter
          Identifier: ' length'
          QuestionToken
          NumberKeyword
        TypeReference
          Identifier: ' Scanner'
      TypeAliasDeclaration
        Identifier: ' ErrorCallback'
        FunctionType
          Parameter
            Identifier: 'message'
            TypeReference
              Identifier: ' DiagnosticMessage'
          Parameter
            Identifier: ' length'
            NumberKeyword
          Parameter
            Identifier: ' arg0'
            QuestionToken
            AnyKeyword
          VoidKeyword
      InterfaceDeclaration
        Identifier: ' Scanner'
        MethodSignature
          Identifier: '
        /** @deprecated use {@link getTokenFullStart} */
        getStartPos'
          NumberKeyword
        MethodSignature
          Identifier: '
        getToken'
          TypeReference
            Identifier: ' SyntaxKind'
        MethodSignature
          Identifier: '
        getTokenFullStart'
          NumberKeyword
        MethodSignature
          Identifier: '
        getTokenStart'
          NumberKeyword
        MethodSignature
          Identifier: '
        getTokenEnd'
          NumberKeyword
        MethodSignature
          Identifier: '
        /** @deprecated use {@link getTokenEnd} */
        getTextPos'
          NumberKeyword
        MethodSignature
          Identifier: '
        /** @deprecated use {@link getTokenStart} */
        getTokenPos'
          NumberKeyword
        MethodSignature
          Identifier: '
        getTokenText'
          StringKeyword
        MethodSignature
          Identifier: '
        getTokenValue'
          StringKeyword
        MethodSignature
          Identifier: '
        hasUnicodeEscape'
          BooleanKeyword
        MethodSignature
          Identifier: '
        hasExtendedUnicodeEscape'
          BooleanKeyword
        MethodSignature
          Identifier: '
        hasPrecedingLineBreak'
          BooleanKeyword
        MethodSignature
          Identifier: '
        isIdentifier'
          BooleanKeyword
        MethodSignature
          Identifier: '
        isReservedWord'
          BooleanKeyword
        MethodSignature
          Identifier: '
        isUnterminated'
          BooleanKeyword
        MethodSignature
          Identifier: '
        reScanGreaterToken'
          TypeReference
            Identifier: ' SyntaxKind'
        MethodSignature
          Identifier: '
        reScanSlashToken'
          TypeReference
            Identifier: ' SyntaxKind'
        MethodSignature
          Identifier: '
        reScanAsteriskEqualsToken'
          TypeReference
            Identifier: ' SyntaxKind'
        MethodSignature
          Identifier: '
        reScanTemplateToken'
          Parameter
            Identifier: 'isTaggedTemplate'
            BooleanKeyword
          TypeReference
            Identifier: ' SyntaxKind'
        MethodSignature
          Identifier: '
        /** @deprecated use {@link reScanTemplateToken}(false) */
        reScanTemplateHeadOrNoSubstitutionTemplate'
          TypeReference
            Identifier: ' SyntaxKind'
        MethodSignature
          Identifier: '
        scanJsxIdentifier'
          TypeReference
            Identifier: ' SyntaxKind'
        MethodSignature
          Identifier: '
        scanJsxAttributeValue'
          TypeReference
            Identifier: ' SyntaxKind'
        MethodSignature
          Identifier: '
        reScanJsxAttributeValue'
          TypeReference
            Identifier: ' SyntaxKind'
        MethodSignature
          Identifier: '
        reScanJsxToken'
          Parameter
            Identifier: 'allowMultilineJsxText'
            QuestionToken
            BooleanKeyword
          TypeReference
            Identifier: ' JsxTokenSyntaxKind'
        MethodSignature
          Identifier: '
        reScanLessThanToken'
          TypeReference
            Identifier: ' SyntaxKind'
        MethodSignature
          Identifier: '
        reScanHashToken'
          TypeReference
            Identifier: ' SyntaxKind'
        MethodSignature
          Identifier: '
        reScanQuestionToken'
          TypeReference
            Identifier: ' SyntaxKind'
        MethodSignature
          Identifier: '
        reScanInvalidIdentifier'
          TypeReference
            Identifier: ' SyntaxKind'
        MethodSignature
          Identifier: '
        scanJsxToken'
          TypeReference
            Identifier: ' JsxTokenSyntaxKind'
        MethodSignature
          Identifier: '
        scanJsDocToken'
          TypeReference
            Identifier: ' JSDocSyntaxKind'
        MethodSignature
          Identifier: '
        scan'
          TypeReference
            Identifier: ' SyntaxKind'
        MethodSignature
          Identifier: '
        getText'
          StringKeyword
        MethodSignature
          Identifier: '
        setText'
          Parameter
            Identifier: 'text'
            UnionType
              StringKeyword
              UndefinedKeyword
          Parameter
            Identifier: ' start'
            QuestionToken
            NumberKeyword
          Parameter
            Identifier: ' length'
            QuestionToken
            NumberKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        setOnError'
          Parameter
            Identifier: 'onError'
            UnionType
              TypeReference
                Identifier: ' ErrorCallback'
              UndefinedKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        setScriptTarget'
          Parameter
            Identifier: 'scriptTarget'
            TypeReference
              Identifier: ' ScriptTarget'
          VoidKeyword
        MethodSignature
          Identifier: '
        setLanguageVariant'
          Parameter
            Identifier: 'variant'
            TypeReference
              Identifier: ' LanguageVariant'
          VoidKeyword
        MethodSignature
          Identifier: '
        setScriptKind'
          Parameter
            Identifier: 'scriptKind'
            TypeReference
              Identifier: ' ScriptKind'
          VoidKeyword
        MethodSignature
          Identifier: '
        setJSDocParsingMode'
          Parameter
            Identifier: 'kind'
            TypeReference
              Identifier: ' JSDocParsingMode'
          VoidKeyword
        MethodSignature
          Identifier: '
        /** @deprecated use {@link resetTokenState} */
        setTextPos'
          Parameter
            Identifier: 'textPos'
            NumberKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        resetTokenState'
          Parameter
            Identifier: 'pos'
            NumberKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        lookAhead'
          TypeParameter
            Identifier: 'T'
          Parameter
            Identifier: 'callback'
            FunctionType
              TypeReference
                Identifier: ' T'
          TypeReference
            Identifier: ' T'
        MethodSignature
          Identifier: '
        scanRange'
          TypeParameter
            Identifier: 'T'
          Parameter
            Identifier: 'start'
            NumberKeyword
          Parameter
            Identifier: ' length'
            NumberKeyword
          Parameter
            Identifier: ' callback'
            FunctionType
              TypeReference
                Identifier: ' T'
          TypeReference
            Identifier: ' T'
        MethodSignature
          Identifier: '
        tryScan'
          TypeParameter
            Identifier: 'T'
          Parameter
            Identifier: 'callback'
            FunctionType
              TypeReference
                Identifier: ' T'
          TypeReference
            Identifier: ' T'
      FunctionDeclaration
        Identifier: ' isExternalModuleNameRelative'
        Parameter
          Identifier: 'moduleName'
          StringKeyword
        BooleanKeyword
      FunctionDeclaration
        Identifier: ' sortAndDeduplicateDiagnostics'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' Diagnostic'
        Parameter
          Identifier: 'diagnostics'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' T'
        TypeReference
          Identifier: ' SortedReadonlyArray'
          TypeReference
            Identifier: 'T'
      FunctionDeclaration
        Identifier: ' getDefaultLibFileName'
        Parameter
          Identifier: 'options'
          TypeReference
            Identifier: ' CompilerOptions'
        StringKeyword
      FunctionDeclaration
        Identifier: ' textSpanEnd'
        Parameter
          Identifier: 'span'
          TypeReference
            Identifier: ' TextSpan'
        NumberKeyword
      FunctionDeclaration
        Identifier: ' textSpanIsEmpty'
        Parameter
          Identifier: 'span'
          TypeReference
            Identifier: ' TextSpan'
        BooleanKeyword
      FunctionDeclaration
        Identifier: ' textSpanContainsPosition'
        Parameter
          Identifier: 'span'
          TypeReference
            Identifier: ' TextSpan'
        Parameter
          Identifier: ' position'
          NumberKeyword
        BooleanKeyword
      FunctionDeclaration
        Identifier: ' textSpanContainsTextSpan'
        Parameter
          Identifier: 'span'
          TypeReference
            Identifier: ' TextSpan'
        Parameter
          Identifier: ' other'
          TypeReference
            Identifier: ' TextSpan'
        BooleanKeyword
      FunctionDeclaration
        Identifier: ' textSpanOverlapsWith'
        Parameter
          Identifier: 'span'
          TypeReference
            Identifier: ' TextSpan'
        Parameter
          Identifier: ' other'
          TypeReference
            Identifier: ' TextSpan'
        BooleanKeyword
      FunctionDeclaration
        Identifier: ' textSpanOverlap'
        Parameter
          Identifier: 'span1'
          TypeReference
            Identifier: ' TextSpan'
        Parameter
          Identifier: ' span2'
          TypeReference
            Identifier: ' TextSpan'
        UnionType
          TypeReference
            Identifier: ' TextSpan'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' textSpanIntersectsWithTextSpan'
        Parameter
          Identifier: 'span'
          TypeReference
            Identifier: ' TextSpan'
        Parameter
          Identifier: ' other'
          TypeReference
            Identifier: ' TextSpan'
        BooleanKeyword
      FunctionDeclaration
        Identifier: ' textSpanIntersectsWith'
        Parameter
          Identifier: 'span'
          TypeReference
            Identifier: ' TextSpan'
        Parameter
          Identifier: ' start'
          NumberKeyword
        Parameter
          Identifier: ' length'
          NumberKeyword
        BooleanKeyword
      FunctionDeclaration
        Identifier: ' decodedTextSpanIntersectsWith'
        Parameter
          Identifier: 'start1'
          NumberKeyword
        Parameter
          Identifier: ' length1'
          NumberKeyword
        Parameter
          Identifier: ' start2'
          NumberKeyword
        Parameter
          Identifier: ' length2'
          NumberKeyword
        BooleanKeyword
      FunctionDeclaration
        Identifier: ' textSpanIntersectsWithPosition'
        Parameter
          Identifier: 'span'
          TypeReference
            Identifier: ' TextSpan'
        Parameter
          Identifier: ' position'
          NumberKeyword
        BooleanKeyword
      FunctionDeclaration
        Identifier: ' textSpanIntersection'
        Parameter
          Identifier: 'span1'
          TypeReference
            Identifier: ' TextSpan'
        Parameter
          Identifier: ' span2'
          TypeReference
            Identifier: ' TextSpan'
        UnionType
          TypeReference
            Identifier: ' TextSpan'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' createTextSpan'
        Parameter
          Identifier: 'start'
          NumberKeyword
        Parameter
          Identifier: ' length'
          NumberKeyword
        TypeReference
          Identifier: ' TextSpan'
      FunctionDeclaration
        Identifier: ' createTextSpanFromBounds'
        Parameter
          Identifier: 'start'
          NumberKeyword
        Parameter
          Identifier: ' end'
          NumberKeyword
        TypeReference
          Identifier: ' TextSpan'
      FunctionDeclaration
        Identifier: ' textChangeRangeNewSpan'
        Parameter
          Identifier: 'range'
          TypeReference
            Identifier: ' TextChangeRange'
        TypeReference
          Identifier: ' TextSpan'
      FunctionDeclaration
        Identifier: ' textChangeRangeIsUnchanged'
        Parameter
          Identifier: 'range'
          TypeReference
            Identifier: ' TextChangeRange'
        BooleanKeyword
      FunctionDeclaration
        Identifier: ' createTextChangeRange'
        Parameter
          Identifier: 'span'
          TypeReference
            Identifier: ' TextSpan'
        Parameter
          Identifier: ' newLength'
          NumberKeyword
        TypeReference
          Identifier: ' TextChangeRange'
      FunctionDeclaration
        Identifier: ' collapseTextChangeRangesAcrossMultipleVersions'
        Parameter
          Identifier: 'changes'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' TextChangeRange'
        TypeReference
          Identifier: ' TextChangeRange'
      FunctionDeclaration
        Identifier: ' getTypeParameterOwner'
        Parameter
          Identifier: 'd'
          TypeReference
            Identifier: ' Declaration'
        UnionType
          TypeReference
            Identifier: ' Declaration'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' isParameterPropertyDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' parent'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ParameterPropertyDeclaration'
      FunctionDeclaration
        Identifier: ' isEmptyBindingPattern'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' BindingName'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' BindingPattern'
      FunctionDeclaration
        Identifier: ' isEmptyBindingElement'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' BindingElement'
            TypeReference
              Identifier: ' ArrayBindingElement'
        BooleanKeyword
      FunctionDeclaration
        Identifier: ' walkUpBindingElementsAndPatterns'
        Parameter
          Identifier: 'binding'
          TypeReference
            Identifier: ' BindingElement'
        UnionType
          TypeReference
            Identifier: ' VariableDeclaration'
          TypeReference
            Identifier: ' ParameterDeclaration'
      FunctionDeclaration
        Identifier: ' getCombinedModifierFlags'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Declaration'
        TypeReference
          Identifier: ' ModifierFlags'
      FunctionDeclaration
        Identifier: ' getCombinedNodeFlags'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypeReference
          Identifier: ' NodeFlags'
      FunctionDeclaration
        Identifier: ' validateLocaleAndSetLanguage'
        Parameter
          Identifier: 'locale'
          StringKeyword
        Parameter
          Identifier: ' sys'
          TypeLiteral
            MethodSignature
              Identifier: '
        getExecutingFilePath'
              StringKeyword
            MethodSignature
              Identifier: '
        resolvePath'
              Parameter
                Identifier: 'path'
                StringKeyword
              StringKeyword
            MethodSignature
              Identifier: '
        fileExists'
              Parameter
                Identifier: 'fileName'
                StringKeyword
              BooleanKeyword
            MethodSignature
              Identifier: '
        readFile'
              Parameter
                Identifier: 'fileName'
                StringKeyword
              UnionType
                StringKeyword
                UndefinedKeyword
        Parameter
          Identifier: ' errors'
          QuestionToken
          ArrayType
            TypeReference
              Identifier: ' Diagnostic'
        VoidKeyword
      FunctionDeclaration
        Identifier: ' getOriginalNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypeReference
          Identifier: ' Node'
      FunctionDeclaration
        Identifier: ' getOriginalNode'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' nodeTest'
          FunctionType
            Parameter
              Identifier: 'node'
              TypeReference
                Identifier: ' Node'
            TypePredicate
              Identifier: ' node'
              TypeReference
                Identifier: ' T'
        TypeReference
          Identifier: ' T'
      FunctionDeclaration
        Identifier: ' getOriginalNode'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' Node'
            UndefinedKeyword
        UnionType
          TypeReference
            Identifier: ' Node'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' getOriginalNode'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' Node'
            UndefinedKeyword
        Parameter
          Identifier: ' nodeTest'
          FunctionType
            Parameter
              Identifier: 'node'
              TypeReference
                Identifier: ' Node'
            TypePredicate
              Identifier: ' node'
              TypeReference
                Identifier: ' T'
        UnionType
          TypeReference
            Identifier: ' T'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' findAncestor'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' Node'
            UndefinedKeyword
        Parameter
          Identifier: ' callback'
          FunctionType
            Parameter
              Identifier: 'element'
              TypeReference
                Identifier: ' Node'
            TypePredicate
              Identifier: ' element'
              TypeReference
                Identifier: ' T'
        UnionType
          TypeReference
            Identifier: ' T'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' findAncestor'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' Node'
            UndefinedKeyword
        Parameter
          Identifier: ' callback'
          FunctionType
            Parameter
              Identifier: 'element'
              TypeReference
                Identifier: ' Node'
            UnionType
              BooleanKeyword
              LiteralType
                StringLiteral
        UnionType
          TypeReference
            Identifier: ' Node'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' isParseTreeNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        BooleanKeyword
      FunctionDeclaration
        Identifier: ' getParseTreeNode'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' Node'
            UndefinedKeyword
        UnionType
          TypeReference
            Identifier: ' Node'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' getParseTreeNode'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' T'
            UndefinedKeyword
        Parameter
          Identifier: ' nodeTest'
          QuestionToken
          FunctionType
            Parameter
              Identifier: 'node'
              TypeReference
                Identifier: ' Node'
            TypePredicate
              Identifier: ' node'
              TypeReference
                Identifier: ' T'
        UnionType
          TypeReference
            Identifier: ' T'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' escapeLeadingUnderscores'
        Parameter
          Identifier: 'identifier'
          StringKeyword
        TypeReference
          Identifier: ' __String'
      FunctionDeclaration
        Identifier: ' unescapeLeadingUnderscores'
        Parameter
          Identifier: 'identifier'
          TypeReference
            Identifier: ' __String'
        StringKeyword
      FunctionDeclaration
        Identifier: ' idText'
        Parameter
          Identifier: 'identifierOrPrivateName'
          UnionType
            TypeReference
              Identifier: ' Identifier'
            TypeReference
              Identifier: ' PrivateIdentifier'
        StringKeyword
      FunctionDeclaration
        Identifier: ' identifierToKeywordKind'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Identifier'
        UnionType
          TypeReference
            Identifier: ' KeywordSyntaxKind'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' symbolName'
        Parameter
          Identifier: 'symbol'
          TypeReference
            Identifier: ' Symbol'
        StringKeyword
      FunctionDeclaration
        Identifier: ' getNameOfJSDocTypedef'
        Parameter
          Identifier: 'declaration'
          TypeReference
            Identifier: ' JSDocTypedefTag'
        UnionType
          TypeReference
            Identifier: ' Identifier'
          TypeReference
            Identifier: ' PrivateIdentifier'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' getNameOfDeclaration'
        Parameter
          Identifier: 'declaration'
          UnionType
            TypeReference
              Identifier: ' Declaration'
            TypeReference
              Identifier: ' Expression'
            UndefinedKeyword
        UnionType
          TypeReference
            Identifier: ' DeclarationName'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' getDecorators'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' HasDecorators'
        UnionType
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Decorator'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' getModifiers'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' HasModifiers'
        UnionType
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Modifier'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' getJSDocParameterTags'
        Parameter
          Identifier: 'param'
          TypeReference
            Identifier: ' ParameterDeclaration'
        TypeOperator
          ArrayType
            TypeReference
              Identifier: ' JSDocParameterTag'
      FunctionDeclaration
        Identifier: ' getJSDocTypeParameterTags'
        Parameter
          Identifier: 'param'
          TypeReference
            Identifier: ' TypeParameterDeclaration'
        TypeOperator
          ArrayType
            TypeReference
              Identifier: ' JSDocTemplateTag'
      FunctionDeclaration
        Identifier: ' hasJSDocParameterTags'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' FunctionLikeDeclaration'
            TypeReference
              Identifier: ' SignatureDeclaration'
        BooleanKeyword
      FunctionDeclaration
        Identifier: ' getJSDocAugmentsTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        UnionType
          TypeReference
            Identifier: ' JSDocAugmentsTag'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' getJSDocImplementsTags'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypeOperator
          ArrayType
            TypeReference
              Identifier: ' JSDocImplementsTag'
      FunctionDeclaration
        Identifier: ' getJSDocClassTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        UnionType
          TypeReference
            Identifier: ' JSDocClassTag'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' getJSDocPublicTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        UnionType
          TypeReference
            Identifier: ' JSDocPublicTag'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' getJSDocPrivateTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        UnionType
          TypeReference
            Identifier: ' JSDocPrivateTag'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' getJSDocProtectedTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        UnionType
          TypeReference
            Identifier: ' JSDocProtectedTag'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' getJSDocReadonlyTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        UnionType
          TypeReference
            Identifier: ' JSDocReadonlyTag'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' getJSDocOverrideTagNoCache'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        UnionType
          TypeReference
            Identifier: ' JSDocOverrideTag'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' getJSDocDeprecatedTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        UnionType
          TypeReference
            Identifier: ' JSDocDeprecatedTag'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' getJSDocEnumTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        UnionType
          TypeReference
            Identifier: ' JSDocEnumTag'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' getJSDocThisTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        UnionType
          TypeReference
            Identifier: ' JSDocThisTag'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' getJSDocReturnTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        UnionType
          TypeReference
            Identifier: ' JSDocReturnTag'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' getJSDocTemplateTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        UnionType
          TypeReference
            Identifier: ' JSDocTemplateTag'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' getJSDocSatisfiesTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        UnionType
          TypeReference
            Identifier: ' JSDocSatisfiesTag'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' getJSDocTypeTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        UnionType
          TypeReference
            Identifier: ' JSDocTypeTag'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' getJSDocType'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        UnionType
          TypeReference
            Identifier: ' TypeNode'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' getJSDocReturnType'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        UnionType
          TypeReference
            Identifier: ' TypeNode'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' getJSDocTags'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypeOperator
          ArrayType
            TypeReference
              Identifier: ' JSDocTag'
      FunctionDeclaration
        Identifier: ' getAllJSDocTags'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' JSDocTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' predicate'
          FunctionType
            Parameter
              Identifier: 'tag'
              TypeReference
                Identifier: ' JSDocTag'
            TypePredicate
              Identifier: ' tag'
              TypeReference
                Identifier: ' T'
        TypeOperator
          ArrayType
            TypeReference
              Identifier: ' T'
      FunctionDeclaration
        Identifier: ' getAllJSDocTagsOfKind'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' kind'
          TypeReference
            Identifier: ' SyntaxKind'
        TypeOperator
          ArrayType
            TypeReference
              Identifier: ' JSDocTag'
      FunctionDeclaration
        Identifier: ' getTextOfJSDocComment'
        Parameter
          Identifier: 'comment'
          QuestionToken
          UnionType
            StringKeyword
            TypeReference
              Identifier: ' NodeArray'
              TypeReference
                Identifier: 'JSDocComment'
        UnionType
          StringKeyword
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' getEffectiveTypeParameterDeclarations'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' DeclarationWithTypeParameters'
        TypeOperator
          ArrayType
            TypeReference
              Identifier: ' TypeParameterDeclaration'
      FunctionDeclaration
        Identifier: ' getEffectiveConstraintOfTypeParameter'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' TypeParameterDeclaration'
        UnionType
          TypeReference
            Identifier: ' TypeNode'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' isMemberName'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' MemberName'
      FunctionDeclaration
        Identifier: ' isPropertyAccessChain'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' PropertyAccessChain'
      FunctionDeclaration
        Identifier: ' isElementAccessChain'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ElementAccessChain'
      FunctionDeclaration
        Identifier: ' isCallChain'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' CallChain'
      FunctionDeclaration
        Identifier: ' isOptionalChain'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          UnionType
            TypeReference
              Identifier: ' PropertyAccessChain'
            TypeReference
              Identifier: ' ElementAccessChain'
            TypeReference
              Identifier: ' CallChain'
            TypeReference
              Identifier: ' NonNullChain'
      FunctionDeclaration
        Identifier: ' isNullishCoalesce'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        BooleanKeyword
      FunctionDeclaration
        Identifier: ' isConstTypeReference'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        BooleanKeyword
      FunctionDeclaration
        Identifier: ' skipPartiallyEmittedExpressions'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Expression'
        TypeReference
          Identifier: ' Expression'
      FunctionDeclaration
        Identifier: ' skipPartiallyEmittedExpressions'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypeReference
          Identifier: ' Node'
      FunctionDeclaration
        Identifier: ' isNonNullChain'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' NonNullChain'
      FunctionDeclaration
        Identifier: ' isBreakOrContinueStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' BreakOrContinueStatement'
      FunctionDeclaration
        Identifier: ' isNamedExportBindings'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' NamedExportBindings'
      FunctionDeclaration
        Identifier: ' isJSDocPropertyLikeTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocPropertyLikeTag'
      FunctionDeclaration
        Identifier: ' isTokenKind'
        Parameter
          Identifier: 'kind'
          TypeReference
            Identifier: ' SyntaxKind'
        BooleanKeyword
      FunctionDeclaration
        Identifier: ' isToken'
        Parameter
          Identifier: 'n'
          TypeReference
            Identifier: ' Node'
        BooleanKeyword
      FunctionDeclaration
        Identifier: ' isLiteralExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' LiteralExpression'
      FunctionDeclaration
        Identifier: ' isTemplateLiteralToken'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' TemplateLiteralToken'
      FunctionDeclaration
        Identifier: ' isTemplateMiddleOrTemplateTail'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          UnionType
            TypeReference
              Identifier: ' TemplateMiddle'
            TypeReference
              Identifier: ' TemplateTail'
      FunctionDeclaration
        Identifier: ' isImportOrExportSpecifier'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          UnionType
            TypeReference
              Identifier: ' ImportSpecifier'
            TypeReference
              Identifier: ' ExportSpecifier'
      FunctionDeclaration
        Identifier: ' isTypeOnlyImportDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' TypeOnlyImportDeclaration'
      FunctionDeclaration
        Identifier: ' isTypeOnlyExportDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' TypeOnlyExportDeclaration'
      FunctionDeclaration
        Identifier: ' isTypeOnlyImportOrExportDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' TypeOnlyAliasDeclaration'
      FunctionDeclaration
        Identifier: ' isStringTextContainingNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          UnionType
            TypeReference
              Identifier: ' StringLiteral'
            TypeReference
              Identifier: ' TemplateLiteralToken'
      FunctionDeclaration
        Identifier: ' isImportAttributeName'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ImportAttributeName'
      FunctionDeclaration
        Identifier: ' isModifier'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' Modifier'
      FunctionDeclaration
        Identifier: ' isEntityName'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' EntityName'
      FunctionDeclaration
        Identifier: ' isPropertyName'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' PropertyName'
      FunctionDeclaration
        Identifier: ' isBindingName'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' BindingName'
      FunctionDeclaration
        Identifier: ' isFunctionLike'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' Node'
            UndefinedKeyword
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' SignatureDeclaration'
      FunctionDeclaration
        Identifier: ' isClassElement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ClassElement'
      FunctionDeclaration
        Identifier: ' isClassLike'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ClassLikeDeclaration'
      FunctionDeclaration
        Identifier: ' isAccessor'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' AccessorDeclaration'
      FunctionDeclaration
        Identifier: ' isAutoAccessorPropertyDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' AutoAccessorPropertyDeclaration'
      FunctionDeclaration
        Identifier: ' isModifierLike'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ModifierLike'
      FunctionDeclaration
        Identifier: ' isTypeElement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' TypeElement'
      FunctionDeclaration
        Identifier: ' isClassOrTypeElement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          UnionType
            TypeReference
              Identifier: ' ClassElement'
            TypeReference
              Identifier: ' TypeElement'
      FunctionDeclaration
        Identifier: ' isObjectLiteralElementLike'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ObjectLiteralElementLike'
      FunctionDeclaration
        Identifier: ' isTypeNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' TypeNode'
      FunctionDeclaration
        Identifier: ' isFunctionOrConstructorTypeNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          UnionType
            TypeReference
              Identifier: ' FunctionTypeNode'
            TypeReference
              Identifier: ' ConstructorTypeNode'
      FunctionDeclaration
        Identifier: ' isArrayBindingElement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ArrayBindingElement'
      FunctionDeclaration
        Identifier: ' isPropertyAccessOrQualifiedName'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          UnionType
            TypeReference
              Identifier: ' PropertyAccessExpression'
            TypeReference
              Identifier: ' QualifiedName'
      FunctionDeclaration
        Identifier: ' isCallLikeExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' CallLikeExpression'
      FunctionDeclaration
        Identifier: ' isCallOrNewExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          UnionType
            TypeReference
              Identifier: ' CallExpression'
            TypeReference
              Identifier: ' NewExpression'
      FunctionDeclaration
        Identifier: ' isTemplateLiteral'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' TemplateLiteral'
      FunctionDeclaration
        Identifier: ' isLeftHandSideExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' LeftHandSideExpression'
      FunctionDeclaration
        Identifier: ' isLiteralTypeLiteral'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          UnionType
            TypeReference
              Identifier: ' NullLiteral'
            TypeReference
              Identifier: ' BooleanLiteral'
            TypeReference
              Identifier: ' LiteralExpression'
            TypeReference
              Identifier: ' PrefixUnaryExpression'
      FunctionDeclaration
        Identifier: ' isExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' Expression'
      FunctionDeclaration
        Identifier: ' isAssertionExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' AssertionExpression'
      FunctionDeclaration
        Identifier: ' isIterationStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' lookInLabeledStatements'
          LiteralType
            FalseKeyword
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' IterationStatement'
      FunctionDeclaration
        Identifier: ' isIterationStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' lookInLabeledStatements'
          BooleanKeyword
        TypePredicate
          Identifier: ' node'
          UnionType
            TypeReference
              Identifier: ' IterationStatement'
            TypeReference
              Identifier: ' LabeledStatement'
      FunctionDeclaration
        Identifier: ' isConciseBody'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ConciseBody'
      FunctionDeclaration
        Identifier: ' isForInitializer'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ForInitializer'
      FunctionDeclaration
        Identifier: ' isModuleBody'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ModuleBody'
      FunctionDeclaration
        Identifier: ' isNamedImportBindings'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' NamedImportBindings'
      FunctionDeclaration
        Identifier: ' isDeclarationStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' DeclarationStatement'
      FunctionDeclaration
        Identifier: ' isStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' Statement'
      FunctionDeclaration
        Identifier: ' isModuleReference'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ModuleReference'
      FunctionDeclaration
        Identifier: ' isJsxTagNameExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JsxTagNameExpression'
      FunctionDeclaration
        Identifier: ' isJsxChild'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JsxChild'
      FunctionDeclaration
        Identifier: ' isJsxAttributeLike'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JsxAttributeLike'
      FunctionDeclaration
        Identifier: ' isStringLiteralOrJsxExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          UnionType
            TypeReference
              Identifier: ' StringLiteral'
            TypeReference
              Identifier: ' JsxExpression'
      FunctionDeclaration
        Identifier: ' isJsxOpeningLikeElement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JsxOpeningLikeElement'
      FunctionDeclaration
        Identifier: ' isCaseOrDefaultClause'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' CaseOrDefaultClause'
      FunctionDeclaration
        Identifier: ' isJSDocCommentContainingNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        BooleanKeyword
      FunctionDeclaration
        Identifier: ' isSetAccessor'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' SetAccessorDeclaration'
      FunctionDeclaration
        Identifier: ' isGetAccessor'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' GetAccessorDeclaration'
      FunctionDeclaration
        Identifier: ' hasOnlyExpressionInitializer'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' HasExpressionInitializer'
      FunctionDeclaration
        Identifier: ' isObjectLiteralElement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ObjectLiteralElement'
      FunctionDeclaration
        Identifier: ' isStringLiteralLike'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' Node'
            TypeReference
              Identifier: ' FileReference'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' StringLiteralLike'
      FunctionDeclaration
        Identifier: ' isJSDocLinkLike'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          UnionType
            TypeReference
              Identifier: ' JSDocLink'
            TypeReference
              Identifier: ' JSDocLinkCode'
            TypeReference
              Identifier: ' JSDocLinkPlain'
      FunctionDeclaration
        Identifier: ' hasRestParameter'
        Parameter
          Identifier: 's'
          UnionType
            TypeReference
              Identifier: ' SignatureDeclaration'
            TypeReference
              Identifier: ' JSDocSignature'
        BooleanKeyword
      FunctionDeclaration
        Identifier: ' isRestParameter'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' ParameterDeclaration'
            TypeReference
              Identifier: ' JSDocParameterTag'
        BooleanKeyword
      FunctionDeclaration
        Identifier: ' isInternalDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' sourceFile'
          QuestionToken
          TypeReference
            Identifier: ' SourceFile'
        BooleanKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' unchangedTextChangeRange'
            TypeReference
              Identifier: ' TextChangeRange'
      TypeAliasDeclaration
        Identifier: ' ParameterPropertyDeclaration'
        IntersectionType
          TypeReference
            Identifier: ' ParameterDeclaration'
          TypeLiteral
            PropertySignature
              Identifier: '
        parent'
              TypeReference
                Identifier: ' ConstructorDeclaration'
            PropertySignature
              Identifier: '
        name'
              TypeReference
                Identifier: ' Identifier'
      FunctionDeclaration
        Identifier: ' isPartOfTypeNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        BooleanKeyword
      FunctionDeclaration
        Identifier: ' getJSDocCommentsAndTags'
        Parameter
          Identifier: 'hostNode'
          TypeReference
            Identifier: ' Node'
        TypeOperator
          ArrayType
            ParenthesizedType
              UnionType
                TypeReference
                  Identifier: 'JSDoc'
                TypeReference
                  Identifier: ' JSDocTag'
      FunctionDeclaration
        Identifier: ' createSourceMapSource'
        Parameter
          Identifier: 'fileName'
          StringKeyword
        Parameter
          Identifier: ' text'
          StringKeyword
        Parameter
          Identifier: ' skipTrivia'
          QuestionToken
          FunctionType
            Parameter
              Identifier: 'pos'
              NumberKeyword
            NumberKeyword
        TypeReference
          Identifier: ' SourceMapSource'
      FunctionDeclaration
        Identifier: ' setOriginalNode'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' T'
        Parameter
          Identifier: ' original'
          UnionType
            TypeReference
              Identifier: ' Node'
            UndefinedKeyword
        TypeReference
          Identifier: ' T'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' factory'
            TypeReference
              Identifier: ' NodeFactory'
      FunctionDeclaration
        Identifier: ' disposeEmitNodes'
        Parameter
          Identifier: 'sourceFile'
          UnionType
            TypeReference
              Identifier: ' SourceFile'
            UndefinedKeyword
        VoidKeyword
      FunctionDeclaration
        Identifier: ' setEmitFlags'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' T'
        Parameter
          Identifier: ' emitFlags'
          TypeReference
            Identifier: ' EmitFlags'
        TypeReference
          Identifier: ' T'
      FunctionDeclaration
        Identifier: ' getSourceMapRange'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypeReference
          Identifier: ' SourceMapRange'
      FunctionDeclaration
        Identifier: ' setSourceMapRange'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' T'
        Parameter
          Identifier: ' range'
          UnionType
            TypeReference
              Identifier: ' SourceMapRange'
            UndefinedKeyword
        TypeReference
          Identifier: ' T'
      FunctionDeclaration
        Identifier: ' getTokenSourceMapRange'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' token'
          TypeReference
            Identifier: ' SyntaxKind'
        UnionType
          TypeReference
            Identifier: ' SourceMapRange'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' setTokenSourceMapRange'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' T'
        Parameter
          Identifier: ' token'
          TypeReference
            Identifier: ' SyntaxKind'
        Parameter
          Identifier: ' range'
          UnionType
            TypeReference
              Identifier: ' SourceMapRange'
            UndefinedKeyword
        TypeReference
          Identifier: ' T'
      FunctionDeclaration
        Identifier: ' getCommentRange'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypeReference
          Identifier: ' TextRange'
      FunctionDeclaration
        Identifier: ' setCommentRange'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' T'
        Parameter
          Identifier: ' range'
          TypeReference
            Identifier: ' TextRange'
        TypeReference
          Identifier: ' T'
      FunctionDeclaration
        Identifier: ' getSyntheticLeadingComments'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        UnionType
          ArrayType
            TypeReference
              Identifier: ' SynthesizedComment'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' setSyntheticLeadingComments'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' T'
        Parameter
          Identifier: ' comments'
          UnionType
            ArrayType
              TypeReference
                Identifier: ' SynthesizedComment'
            UndefinedKeyword
        TypeReference
          Identifier: ' T'
      FunctionDeclaration
        Identifier: ' addSyntheticLeadingComment'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' T'
        Parameter
          Identifier: ' kind'
          UnionType
            TypeReference
              QualifiedName
                Identifier: ' SyntaxKind'
                Identifier: 'SingleLineCommentTrivia'
            TypeReference
              QualifiedName
                Identifier: ' SyntaxKind'
                Identifier: 'MultiLineCommentTrivia'
        Parameter
          Identifier: ' text'
          StringKeyword
        Parameter
          Identifier: ' hasTrailingNewLine'
          QuestionToken
          BooleanKeyword
        TypeReference
          Identifier: ' T'
      FunctionDeclaration
        Identifier: ' getSyntheticTrailingComments'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        UnionType
          ArrayType
            TypeReference
              Identifier: ' SynthesizedComment'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' setSyntheticTrailingComments'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' T'
        Parameter
          Identifier: ' comments'
          UnionType
            ArrayType
              TypeReference
                Identifier: ' SynthesizedComment'
            UndefinedKeyword
        TypeReference
          Identifier: ' T'
      FunctionDeclaration
        Identifier: ' addSyntheticTrailingComment'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' T'
        Parameter
          Identifier: ' kind'
          UnionType
            TypeReference
              QualifiedName
                Identifier: ' SyntaxKind'
                Identifier: 'SingleLineCommentTrivia'
            TypeReference
              QualifiedName
                Identifier: ' SyntaxKind'
                Identifier: 'MultiLineCommentTrivia'
        Parameter
          Identifier: ' text'
          StringKeyword
        Parameter
          Identifier: ' hasTrailingNewLine'
          QuestionToken
          BooleanKeyword
        TypeReference
          Identifier: ' T'
      FunctionDeclaration
        Identifier: ' moveSyntheticComments'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' T'
        Parameter
          Identifier: ' original'
          TypeReference
            Identifier: ' Node'
        TypeReference
          Identifier: ' T'
      FunctionDeclaration
        Identifier: ' getConstantValue'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' AccessExpression'
        UnionType
          StringKeyword
          NumberKeyword
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' setConstantValue'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' AccessExpression'
        Parameter
          Identifier: ' value'
          UnionType
            StringKeyword
            NumberKeyword
        TypeReference
          Identifier: ' AccessExpression'
      FunctionDeclaration
        Identifier: ' addEmitHelper'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' T'
        Parameter
          Identifier: ' helper'
          TypeReference
            Identifier: ' EmitHelper'
        TypeReference
          Identifier: ' T'
      FunctionDeclaration
        Identifier: ' addEmitHelpers'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' T'
        Parameter
          Identifier: ' helpers'
          UnionType
            ArrayType
              TypeReference
                Identifier: ' EmitHelper'
            UndefinedKeyword
        TypeReference
          Identifier: ' T'
      FunctionDeclaration
        Identifier: ' removeEmitHelper'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' helper'
          TypeReference
            Identifier: ' EmitHelper'
        BooleanKeyword
      FunctionDeclaration
        Identifier: ' getEmitHelpers'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        UnionType
          ArrayType
            TypeReference
              Identifier: ' EmitHelper'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' moveEmitHelpers'
        Parameter
          Identifier: 'source'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' target'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' predicate'
          FunctionType
            Parameter
              Identifier: 'helper'
              TypeReference
                Identifier: ' EmitHelper'
            BooleanKeyword
        VoidKeyword
      FunctionDeclaration
        Identifier: ' isNumericLiteral'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' NumericLiteral'
      FunctionDeclaration
        Identifier: ' isBigIntLiteral'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' BigIntLiteral'
      FunctionDeclaration
        Identifier: ' isStringLiteral'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' StringLiteral'
      FunctionDeclaration
        Identifier: ' isJsxText'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JsxText'
      FunctionDeclaration
        Identifier: ' isRegularExpressionLiteral'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' RegularExpressionLiteral'
      FunctionDeclaration
        Identifier: ' isNoSubstitutionTemplateLiteral'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' NoSubstitutionTemplateLiteral'
      FunctionDeclaration
        Identifier: ' isTemplateHead'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' TemplateHead'
      FunctionDeclaration
        Identifier: ' isTemplateMiddle'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' TemplateMiddle'
      FunctionDeclaration
        Identifier: ' isTemplateTail'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' TemplateTail'
      FunctionDeclaration
        Identifier: ' isDotDotDotToken'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' DotDotDotToken'
      FunctionDeclaration
        Identifier: ' isPlusToken'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' PlusToken'
      FunctionDeclaration
        Identifier: ' isMinusToken'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' MinusToken'
      FunctionDeclaration
        Identifier: ' isAsteriskToken'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' AsteriskToken'
      FunctionDeclaration
        Identifier: ' isExclamationToken'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ExclamationToken'
      FunctionDeclaration
        Identifier: ' isQuestionToken'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' QuestionToken'
      FunctionDeclaration
        Identifier: ' isColonToken'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ColonToken'
      FunctionDeclaration
        Identifier: ' isQuestionDotToken'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' QuestionDotToken'
      FunctionDeclaration
        Identifier: ' isEqualsGreaterThanToken'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' EqualsGreaterThanToken'
      FunctionDeclaration
        Identifier: ' isIdentifier'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' Identifier'
      FunctionDeclaration
        Identifier: ' isPrivateIdentifier'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' PrivateIdentifier'
      FunctionDeclaration
        Identifier: ' isAssertsKeyword'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' AssertsKeyword'
      FunctionDeclaration
        Identifier: ' isAwaitKeyword'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' AwaitKeyword'
      FunctionDeclaration
        Identifier: ' isQualifiedName'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' QualifiedName'
      FunctionDeclaration
        Identifier: ' isComputedPropertyName'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ComputedPropertyName'
      FunctionDeclaration
        Identifier: ' isTypeParameterDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' TypeParameterDeclaration'
      FunctionDeclaration
        Identifier: ' isParameter'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ParameterDeclaration'
      FunctionDeclaration
        Identifier: ' isDecorator'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' Decorator'
      FunctionDeclaration
        Identifier: ' isPropertySignature'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' PropertySignature'
      FunctionDeclaration
        Identifier: ' isPropertyDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' PropertyDeclaration'
      FunctionDeclaration
        Identifier: ' isMethodSignature'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' MethodSignature'
      FunctionDeclaration
        Identifier: ' isMethodDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' MethodDeclaration'
      FunctionDeclaration
        Identifier: ' isClassStaticBlockDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ClassStaticBlockDeclaration'
      FunctionDeclaration
        Identifier: ' isConstructorDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ConstructorDeclaration'
      FunctionDeclaration
        Identifier: ' isGetAccessorDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' GetAccessorDeclaration'
      FunctionDeclaration
        Identifier: ' isSetAccessorDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' SetAccessorDeclaration'
      FunctionDeclaration
        Identifier: ' isCallSignatureDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' CallSignatureDeclaration'
      FunctionDeclaration
        Identifier: ' isConstructSignatureDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ConstructSignatureDeclaration'
      FunctionDeclaration
        Identifier: ' isIndexSignatureDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' IndexSignatureDeclaration'
      FunctionDeclaration
        Identifier: ' isTypePredicateNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' TypePredicateNode'
      FunctionDeclaration
        Identifier: ' isTypeReferenceNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' TypeReferenceNode'
      FunctionDeclaration
        Identifier: ' isFunctionTypeNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' FunctionTypeNode'
      FunctionDeclaration
        Identifier: ' isConstructorTypeNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ConstructorTypeNode'
      FunctionDeclaration
        Identifier: ' isTypeQueryNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' TypeQueryNode'
      FunctionDeclaration
        Identifier: ' isTypeLiteralNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' TypeLiteralNode'
      FunctionDeclaration
        Identifier: ' isArrayTypeNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ArrayTypeNode'
      FunctionDeclaration
        Identifier: ' isTupleTypeNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' TupleTypeNode'
      FunctionDeclaration
        Identifier: ' isNamedTupleMember'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' NamedTupleMember'
      FunctionDeclaration
        Identifier: ' isOptionalTypeNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' OptionalTypeNode'
      FunctionDeclaration
        Identifier: ' isRestTypeNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' RestTypeNode'
      FunctionDeclaration
        Identifier: ' isUnionTypeNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' UnionTypeNode'
      FunctionDeclaration
        Identifier: ' isIntersectionTypeNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' IntersectionTypeNode'
      FunctionDeclaration
        Identifier: ' isConditionalTypeNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ConditionalTypeNode'
      FunctionDeclaration
        Identifier: ' isInferTypeNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' InferTypeNode'
      FunctionDeclaration
        Identifier: ' isParenthesizedTypeNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ParenthesizedTypeNode'
      FunctionDeclaration
        Identifier: ' isThisTypeNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ThisTypeNode'
      FunctionDeclaration
        Identifier: ' isTypeOperatorNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' TypeOperatorNode'
      FunctionDeclaration
        Identifier: ' isIndexedAccessTypeNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' IndexedAccessTypeNode'
      FunctionDeclaration
        Identifier: ' isMappedTypeNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' MappedTypeNode'
      FunctionDeclaration
        Identifier: ' isLiteralTypeNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' LiteralTypeNode'
      FunctionDeclaration
        Identifier: ' isImportTypeNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ImportTypeNode'
      FunctionDeclaration
        Identifier: ' isTemplateLiteralTypeSpan'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' TemplateLiteralTypeSpan'
      FunctionDeclaration
        Identifier: ' isTemplateLiteralTypeNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' TemplateLiteralTypeNode'
      FunctionDeclaration
        Identifier: ' isObjectBindingPattern'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ObjectBindingPattern'
      FunctionDeclaration
        Identifier: ' isArrayBindingPattern'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ArrayBindingPattern'
      FunctionDeclaration
        Identifier: ' isBindingElement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' BindingElement'
      FunctionDeclaration
        Identifier: ' isArrayLiteralExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ArrayLiteralExpression'
      FunctionDeclaration
        Identifier: ' isObjectLiteralExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ObjectLiteralExpression'
      FunctionDeclaration
        Identifier: ' isPropertyAccessExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' PropertyAccessExpression'
      FunctionDeclaration
        Identifier: ' isElementAccessExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ElementAccessExpression'
      FunctionDeclaration
        Identifier: ' isCallExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' CallExpression'
      FunctionDeclaration
        Identifier: ' isNewExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' NewExpression'
      FunctionDeclaration
        Identifier: ' isTaggedTemplateExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' TaggedTemplateExpression'
      FunctionDeclaration
        Identifier: ' isTypeAssertionExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' TypeAssertion'
      FunctionDeclaration
        Identifier: ' isParenthesizedExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ParenthesizedExpression'
      FunctionDeclaration
        Identifier: ' isFunctionExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' FunctionExpression'
      FunctionDeclaration
        Identifier: ' isArrowFunction'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ArrowFunction'
      FunctionDeclaration
        Identifier: ' isDeleteExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' DeleteExpression'
      FunctionDeclaration
        Identifier: ' isTypeOfExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' TypeOfExpression'
      FunctionDeclaration
        Identifier: ' isVoidExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' VoidExpression'
      FunctionDeclaration
        Identifier: ' isAwaitExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' AwaitExpression'
      FunctionDeclaration
        Identifier: ' isPrefixUnaryExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' PrefixUnaryExpression'
      FunctionDeclaration
        Identifier: ' isPostfixUnaryExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' PostfixUnaryExpression'
      FunctionDeclaration
        Identifier: ' isBinaryExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' BinaryExpression'
      FunctionDeclaration
        Identifier: ' isConditionalExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ConditionalExpression'
      FunctionDeclaration
        Identifier: ' isTemplateExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' TemplateExpression'
      FunctionDeclaration
        Identifier: ' isYieldExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' YieldExpression'
      FunctionDeclaration
        Identifier: ' isSpreadElement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' SpreadElement'
      FunctionDeclaration
        Identifier: ' isClassExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ClassExpression'
      FunctionDeclaration
        Identifier: ' isOmittedExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' OmittedExpression'
      FunctionDeclaration
        Identifier: ' isExpressionWithTypeArguments'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ExpressionWithTypeArguments'
      FunctionDeclaration
        Identifier: ' isAsExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' AsExpression'
      FunctionDeclaration
        Identifier: ' isSatisfiesExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' SatisfiesExpression'
      FunctionDeclaration
        Identifier: ' isNonNullExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' NonNullExpression'
      FunctionDeclaration
        Identifier: ' isMetaProperty'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' MetaProperty'
      FunctionDeclaration
        Identifier: ' isSyntheticExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' SyntheticExpression'
      FunctionDeclaration
        Identifier: ' isPartiallyEmittedExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' PartiallyEmittedExpression'
      FunctionDeclaration
        Identifier: ' isCommaListExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' CommaListExpression'
      FunctionDeclaration
        Identifier: ' isTemplateSpan'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' TemplateSpan'
      FunctionDeclaration
        Identifier: ' isSemicolonClassElement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' SemicolonClassElement'
      FunctionDeclaration
        Identifier: ' isBlock'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' Block'
      FunctionDeclaration
        Identifier: ' isVariableStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' VariableStatement'
      FunctionDeclaration
        Identifier: ' isEmptyStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' EmptyStatement'
      FunctionDeclaration
        Identifier: ' isExpressionStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ExpressionStatement'
      FunctionDeclaration
        Identifier: ' isIfStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' IfStatement'
      FunctionDeclaration
        Identifier: ' isDoStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' DoStatement'
      FunctionDeclaration
        Identifier: ' isWhileStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' WhileStatement'
      FunctionDeclaration
        Identifier: ' isForStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ForStatement'
      FunctionDeclaration
        Identifier: ' isForInStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ForInStatement'
      FunctionDeclaration
        Identifier: ' isForOfStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ForOfStatement'
      FunctionDeclaration
        Identifier: ' isContinueStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ContinueStatement'
      FunctionDeclaration
        Identifier: ' isBreakStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' BreakStatement'
      FunctionDeclaration
        Identifier: ' isReturnStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ReturnStatement'
      FunctionDeclaration
        Identifier: ' isWithStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' WithStatement'
      FunctionDeclaration
        Identifier: ' isSwitchStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' SwitchStatement'
      FunctionDeclaration
        Identifier: ' isLabeledStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' LabeledStatement'
      FunctionDeclaration
        Identifier: ' isThrowStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ThrowStatement'
      FunctionDeclaration
        Identifier: ' isTryStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' TryStatement'
      FunctionDeclaration
        Identifier: ' isDebuggerStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' DebuggerStatement'
      FunctionDeclaration
        Identifier: ' isVariableDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' VariableDeclaration'
      FunctionDeclaration
        Identifier: ' isVariableDeclarationList'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' VariableDeclarationList'
      FunctionDeclaration
        Identifier: ' isFunctionDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' FunctionDeclaration'
      FunctionDeclaration
        Identifier: ' isClassDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ClassDeclaration'
      FunctionDeclaration
        Identifier: ' isInterfaceDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' InterfaceDeclaration'
      FunctionDeclaration
        Identifier: ' isTypeAliasDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' TypeAliasDeclaration'
      FunctionDeclaration
        Identifier: ' isEnumDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' EnumDeclaration'
      FunctionDeclaration
        Identifier: ' isModuleDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ModuleDeclaration'
      FunctionDeclaration
        Identifier: ' isModuleBlock'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ModuleBlock'
      FunctionDeclaration
        Identifier: ' isCaseBlock'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' CaseBlock'
      FunctionDeclaration
        Identifier: ' isNamespaceExportDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' NamespaceExportDeclaration'
      FunctionDeclaration
        Identifier: ' isImportEqualsDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ImportEqualsDeclaration'
      FunctionDeclaration
        Identifier: ' isImportDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ImportDeclaration'
      FunctionDeclaration
        Identifier: ' isImportClause'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ImportClause'
      FunctionDeclaration
        Identifier: ' isImportTypeAssertionContainer'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ImportTypeAssertionContainer'
      FunctionDeclaration
        Identifier: ' isAssertClause'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' AssertClause'
      FunctionDeclaration
        Identifier: ' isAssertEntry'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' AssertEntry'
      FunctionDeclaration
        Identifier: ' isImportAttributes'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ImportAttributes'
      FunctionDeclaration
        Identifier: ' isImportAttribute'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ImportAttribute'
      FunctionDeclaration
        Identifier: ' isNamespaceImport'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' NamespaceImport'
      FunctionDeclaration
        Identifier: ' isNamespaceExport'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' NamespaceExport'
      FunctionDeclaration
        Identifier: ' isNamedImports'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' NamedImports'
      FunctionDeclaration
        Identifier: ' isImportSpecifier'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ImportSpecifier'
      FunctionDeclaration
        Identifier: ' isExportAssignment'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ExportAssignment'
      FunctionDeclaration
        Identifier: ' isExportDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ExportDeclaration'
      FunctionDeclaration
        Identifier: ' isNamedExports'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' NamedExports'
      FunctionDeclaration
        Identifier: ' isExportSpecifier'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ExportSpecifier'
      FunctionDeclaration
        Identifier: ' isModuleExportName'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ModuleExportName'
      FunctionDeclaration
        Identifier: ' isMissingDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' MissingDeclaration'
      FunctionDeclaration
        Identifier: ' isNotEmittedStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' NotEmittedStatement'
      FunctionDeclaration
        Identifier: ' isExternalModuleReference'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ExternalModuleReference'
      FunctionDeclaration
        Identifier: ' isJsxElement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JsxElement'
      FunctionDeclaration
        Identifier: ' isJsxSelfClosingElement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JsxSelfClosingElement'
      FunctionDeclaration
        Identifier: ' isJsxOpeningElement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JsxOpeningElement'
      FunctionDeclaration
        Identifier: ' isJsxClosingElement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JsxClosingElement'
      FunctionDeclaration
        Identifier: ' isJsxFragment'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JsxFragment'
      FunctionDeclaration
        Identifier: ' isJsxOpeningFragment'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JsxOpeningFragment'
      FunctionDeclaration
        Identifier: ' isJsxClosingFragment'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JsxClosingFragment'
      FunctionDeclaration
        Identifier: ' isJsxAttribute'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JsxAttribute'
      FunctionDeclaration
        Identifier: ' isJsxAttributes'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JsxAttributes'
      FunctionDeclaration
        Identifier: ' isJsxSpreadAttribute'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JsxSpreadAttribute'
      FunctionDeclaration
        Identifier: ' isJsxExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JsxExpression'
      FunctionDeclaration
        Identifier: ' isJsxNamespacedName'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JsxNamespacedName'
      FunctionDeclaration
        Identifier: ' isCaseClause'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' CaseClause'
      FunctionDeclaration
        Identifier: ' isDefaultClause'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' DefaultClause'
      FunctionDeclaration
        Identifier: ' isHeritageClause'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' HeritageClause'
      FunctionDeclaration
        Identifier: ' isCatchClause'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' CatchClause'
      FunctionDeclaration
        Identifier: ' isPropertyAssignment'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' PropertyAssignment'
      FunctionDeclaration
        Identifier: ' isShorthandPropertyAssignment'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ShorthandPropertyAssignment'
      FunctionDeclaration
        Identifier: ' isSpreadAssignment'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' SpreadAssignment'
      FunctionDeclaration
        Identifier: ' isEnumMember'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' EnumMember'
      FunctionDeclaration
        Identifier: ' isSourceFile'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' SourceFile'
      FunctionDeclaration
        Identifier: ' isBundle'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' Bundle'
      FunctionDeclaration
        Identifier: ' isJSDocTypeExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocTypeExpression'
      FunctionDeclaration
        Identifier: ' isJSDocNameReference'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocNameReference'
      FunctionDeclaration
        Identifier: ' isJSDocMemberName'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocMemberName'
      FunctionDeclaration
        Identifier: ' isJSDocLink'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocLink'
      FunctionDeclaration
        Identifier: ' isJSDocLinkCode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocLinkCode'
      FunctionDeclaration
        Identifier: ' isJSDocLinkPlain'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocLinkPlain'
      FunctionDeclaration
        Identifier: ' isJSDocAllType'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocAllType'
      FunctionDeclaration
        Identifier: ' isJSDocUnknownType'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocUnknownType'
      FunctionDeclaration
        Identifier: ' isJSDocNullableType'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocNullableType'
      FunctionDeclaration
        Identifier: ' isJSDocNonNullableType'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocNonNullableType'
      FunctionDeclaration
        Identifier: ' isJSDocOptionalType'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocOptionalType'
      FunctionDeclaration
        Identifier: ' isJSDocFunctionType'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocFunctionType'
      FunctionDeclaration
        Identifier: ' isJSDocVariadicType'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocVariadicType'
      FunctionDeclaration
        Identifier: ' isJSDocNamepathType'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocNamepathType'
      FunctionDeclaration
        Identifier: ' isJSDoc'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDoc'
      FunctionDeclaration
        Identifier: ' isJSDocTypeLiteral'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocTypeLiteral'
      FunctionDeclaration
        Identifier: ' isJSDocSignature'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocSignature'
      FunctionDeclaration
        Identifier: ' isJSDocAugmentsTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocAugmentsTag'
      FunctionDeclaration
        Identifier: ' isJSDocAuthorTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocAuthorTag'
      FunctionDeclaration
        Identifier: ' isJSDocClassTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocClassTag'
      FunctionDeclaration
        Identifier: ' isJSDocCallbackTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocCallbackTag'
      FunctionDeclaration
        Identifier: ' isJSDocPublicTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocPublicTag'
      FunctionDeclaration
        Identifier: ' isJSDocPrivateTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocPrivateTag'
      FunctionDeclaration
        Identifier: ' isJSDocProtectedTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocProtectedTag'
      FunctionDeclaration
        Identifier: ' isJSDocReadonlyTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocReadonlyTag'
      FunctionDeclaration
        Identifier: ' isJSDocOverrideTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocOverrideTag'
      FunctionDeclaration
        Identifier: ' isJSDocOverloadTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocOverloadTag'
      FunctionDeclaration
        Identifier: ' isJSDocDeprecatedTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocDeprecatedTag'
      FunctionDeclaration
        Identifier: ' isJSDocSeeTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocSeeTag'
      FunctionDeclaration
        Identifier: ' isJSDocEnumTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocEnumTag'
      FunctionDeclaration
        Identifier: ' isJSDocParameterTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocParameterTag'
      FunctionDeclaration
        Identifier: ' isJSDocReturnTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocReturnTag'
      FunctionDeclaration
        Identifier: ' isJSDocThisTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocThisTag'
      FunctionDeclaration
        Identifier: ' isJSDocTypeTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocTypeTag'
      FunctionDeclaration
        Identifier: ' isJSDocTemplateTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocTemplateTag'
      FunctionDeclaration
        Identifier: ' isJSDocTypedefTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocTypedefTag'
      FunctionDeclaration
        Identifier: ' isJSDocUnknownTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocUnknownTag'
      FunctionDeclaration
        Identifier: ' isJSDocPropertyTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocPropertyTag'
      FunctionDeclaration
        Identifier: ' isJSDocImplementsTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocImplementsTag'
      FunctionDeclaration
        Identifier: ' isJSDocSatisfiesTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocSatisfiesTag'
      FunctionDeclaration
        Identifier: ' isJSDocThrowsTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocThrowsTag'
      FunctionDeclaration
        Identifier: ' isJSDocImportTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' JSDocImportTag'
      FunctionDeclaration
        Identifier: ' isQuestionOrExclamationToken'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          UnionType
            TypeReference
              Identifier: ' QuestionToken'
            TypeReference
              Identifier: ' ExclamationToken'
      FunctionDeclaration
        Identifier: ' isIdentifierOrThisTypeNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          UnionType
            TypeReference
              Identifier: ' Identifier'
            TypeReference
              Identifier: ' ThisTypeNode'
      FunctionDeclaration
        Identifier: ' isReadonlyKeywordOrPlusOrMinusToken'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          UnionType
            TypeReference
              Identifier: ' ReadonlyKeyword'
            TypeReference
              Identifier: ' PlusToken'
            TypeReference
              Identifier: ' MinusToken'
      FunctionDeclaration
        Identifier: ' isQuestionOrPlusOrMinusToken'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          UnionType
            TypeReference
              Identifier: ' QuestionToken'
            TypeReference
              Identifier: ' PlusToken'
            TypeReference
              Identifier: ' MinusToken'
      FunctionDeclaration
        Identifier: ' isModuleName'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' ModuleName'
      FunctionDeclaration
        Identifier: ' isBinaryOperatorToken'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' BinaryOperatorToken'
      FunctionDeclaration
        Identifier: ' setTextRange'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' TextRange'
        Parameter
          Identifier: 'range'
          TypeReference
            Identifier: ' T'
        Parameter
          Identifier: ' location'
          UnionType
            TypeReference
              Identifier: ' TextRange'
            UndefinedKeyword
        TypeReference
          Identifier: ' T'
      FunctionDeclaration
        Identifier: ' canHaveModifiers'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' HasModifiers'
      FunctionDeclaration
        Identifier: ' canHaveDecorators'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypePredicate
          Identifier: ' node'
          TypeReference
            Identifier: ' HasDecorators'
      FunctionDeclaration
        Identifier: ' forEachChild'
        TypeParameter
          Identifier: 'T'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' cbNode'
          FunctionType
            Parameter
              Identifier: 'node'
              TypeReference
                Identifier: ' Node'
            UnionType
              TypeReference
                Identifier: ' T'
              UndefinedKeyword
        Parameter
          Identifier: ' cbNodes'
          QuestionToken
          FunctionType
            Parameter
              Identifier: 'nodes'
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'Node'
            UnionType
              TypeReference
                Identifier: ' T'
              UndefinedKeyword
        UnionType
          TypeReference
            Identifier: ' T'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' createSourceFile'
        Parameter
          Identifier: 'fileName'
          StringKeyword
        Parameter
          Identifier: ' sourceText'
          StringKeyword
        Parameter
          Identifier: ' languageVersionOrOptions'
          UnionType
            TypeReference
              Identifier: ' ScriptTarget'
            TypeReference
              Identifier: ' CreateSourceFileOptions'
        Parameter
          Identifier: ' setParentNodes'
          QuestionToken
          BooleanKeyword
        Parameter
          Identifier: ' scriptKind'
          QuestionToken
          TypeReference
            Identifier: ' ScriptKind'
        TypeReference
          Identifier: ' SourceFile'
      FunctionDeclaration
        Identifier: ' parseIsolatedEntityName'
        Parameter
          Identifier: 'text'
          StringKeyword
        Parameter
          Identifier: ' languageVersion'
          TypeReference
            Identifier: ' ScriptTarget'
        UnionType
          TypeReference
            Identifier: ' EntityName'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' parseJsonText'
        Parameter
          Identifier: 'fileName'
          StringKeyword
        Parameter
          Identifier: ' sourceText'
          StringKeyword
        TypeReference
          Identifier: ' JsonSourceFile'
      FunctionDeclaration
        Identifier: ' isExternalModule'
        Parameter
          Identifier: 'file'
          TypeReference
            Identifier: ' SourceFile'
        BooleanKeyword
      FunctionDeclaration
        Identifier: ' updateSourceFile'
        Parameter
          Identifier: 'sourceFile'
          TypeReference
            Identifier: ' SourceFile'
        Parameter
          Identifier: ' newText'
          StringKeyword
        Parameter
          Identifier: ' textChangeRange'
          TypeReference
            Identifier: ' TextChangeRange'
        Parameter
          Identifier: ' aggressiveChecks'
          QuestionToken
          BooleanKeyword
        TypeReference
          Identifier: ' SourceFile'
      InterfaceDeclaration
        Identifier: ' CreateSourceFileOptions'
        PropertySignature
          Identifier: '
        languageVersion'
          TypeReference
            Identifier: ' ScriptTarget'
        PropertySignature
          Identifier: '
        /**
         * Controls the format the file is detected as - this can be derived from only the path
         * and files on disk, but needs to be done with a module resolution cache in scope to be performant.
         * This is usually `undefined` for compilations that do not have `moduleResolution` values of `node16` or `nodenext`.
         */
        impliedNodeFormat'
          QuestionToken
          TypeReference
            Identifier: ' ResolutionMode'
        PropertySignature
          Identifier: '
        /**
         * Controls how module-y-ness is set for the given file. Usually the result of calling
         * `getSetExternalModuleIndicator` on a valid `CompilerOptions` object. If not present, the default
         * check specified by `isFileProbablyExternalModule` will be used to set the field.
         */
        setExternalModuleIndicator'
          QuestionToken
          FunctionType
            Parameter
              Identifier: 'file'
              TypeReference
                Identifier: ' SourceFile'
            VoidKeyword
        PropertySignature
          Identifier: '
        jsDocParsingMode'
          QuestionToken
          TypeReference
            Identifier: ' JSDocParsingMode'
      FunctionDeclaration
        Identifier: ' parseCommandLine'
        Parameter
          Identifier: 'commandLine'
          TypeOperator
            ArrayType
              StringKeyword
        Parameter
          Identifier: ' readFile'
          QuestionToken
          FunctionType
            Parameter
              Identifier: 'path'
              StringKeyword
            UnionType
              StringKeyword
              UndefinedKeyword
        TypeReference
          Identifier: ' ParsedCommandLine'
      FunctionDeclaration
        Identifier: ' parseBuildCommand'
        Parameter
          Identifier: 'commandLine'
          TypeOperator
            ArrayType
              StringKeyword
        TypeReference
          Identifier: ' ParsedBuildCommand'
      FunctionDeclaration
        Identifier: ' getParsedCommandLineOfConfigFile'
        Parameter
          Identifier: 'configFileName'
          StringKeyword
        Parameter
          Identifier: ' optionsToExtend'
          UnionType
            TypeReference
              Identifier: ' CompilerOptions'
            UndefinedKeyword
        Parameter
          Identifier: ' host'
          TypeReference
            Identifier: ' ParseConfigFileHost'
        Parameter
          Identifier: ' extendedConfigCache'
          QuestionToken
          TypeReference
            Identifier: ' Map'
            StringKeyword
            TypeReference
              Identifier: ' ExtendedConfigCacheEntry'
        Parameter
          Identifier: ' watchOptionsToExtend'
          QuestionToken
          TypeReference
            Identifier: ' WatchOptions'
        Parameter
          Identifier: ' extraFileExtensions'
          QuestionToken
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' FileExtensionInfo'
        UnionType
          TypeReference
            Identifier: ' ParsedCommandLine'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' readConfigFile'
        Parameter
          Identifier: 'fileName'
          StringKeyword
        Parameter
          Identifier: ' readFile'
          FunctionType
            Parameter
              Identifier: 'path'
              StringKeyword
            UnionType
              StringKeyword
              UndefinedKeyword
        TypeLiteral
          PropertySignature
            Identifier: '
        config'
            QuestionToken
            AnyKeyword
          PropertySignature
            Identifier: '
        error'
            QuestionToken
            TypeReference
              Identifier: ' Diagnostic'
      FunctionDeclaration
        Identifier: ' parseConfigFileTextToJson'
        Parameter
          Identifier: 'fileName'
          StringKeyword
        Parameter
          Identifier: ' jsonText'
          StringKeyword
        TypeLiteral
          PropertySignature
            Identifier: '
        config'
            QuestionToken
            AnyKeyword
          PropertySignature
            Identifier: '
        error'
            QuestionToken
            TypeReference
              Identifier: ' Diagnostic'
      FunctionDeclaration
        Identifier: ' readJsonConfigFile'
        Parameter
          Identifier: 'fileName'
          StringKeyword
        Parameter
          Identifier: ' readFile'
          FunctionType
            Parameter
              Identifier: 'path'
              StringKeyword
            UnionType
              StringKeyword
              UndefinedKeyword
        TypeReference
          Identifier: ' TsConfigSourceFile'
      FunctionDeclaration
        Identifier: ' convertToObject'
        Parameter
          Identifier: 'sourceFile'
          TypeReference
            Identifier: ' JsonSourceFile'
        Parameter
          Identifier: ' errors'
          ArrayType
            TypeReference
              Identifier: ' Diagnostic'
        AnyKeyword
      FunctionDeclaration
        Identifier: ' parseJsonConfigFileContent'
        Parameter
          Identifier: 'json'
          AnyKeyword
        Parameter
          Identifier: ' host'
          TypeReference
            Identifier: ' ParseConfigHost'
        Parameter
          Identifier: ' basePath'
          StringKeyword
        Parameter
          Identifier: ' existingOptions'
          QuestionToken
          TypeReference
            Identifier: ' CompilerOptions'
        Parameter
          Identifier: ' configFileName'
          QuestionToken
          StringKeyword
        Parameter
          Identifier: ' resolutionStack'
          QuestionToken
          ArrayType
            TypeReference
              Identifier: ' Path'
        Parameter
          Identifier: ' extraFileExtensions'
          QuestionToken
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' FileExtensionInfo'
        Parameter
          Identifier: ' extendedConfigCache'
          QuestionToken
          TypeReference
            Identifier: ' Map'
            StringKeyword
            TypeReference
              Identifier: ' ExtendedConfigCacheEntry'
        Parameter
          Identifier: ' existingWatchOptions'
          QuestionToken
          TypeReference
            Identifier: ' WatchOptions'
        TypeReference
          Identifier: ' ParsedCommandLine'
      FunctionDeclaration
        Identifier: ' parseJsonSourceFileConfigFileContent'
        Parameter
          Identifier: 'sourceFile'
          TypeReference
            Identifier: ' TsConfigSourceFile'
        Parameter
          Identifier: ' host'
          TypeReference
            Identifier: ' ParseConfigHost'
        Parameter
          Identifier: ' basePath'
          StringKeyword
        Parameter
          Identifier: ' existingOptions'
          QuestionToken
          TypeReference
            Identifier: ' CompilerOptions'
        Parameter
          Identifier: ' configFileName'
          QuestionToken
          StringKeyword
        Parameter
          Identifier: ' resolutionStack'
          QuestionToken
          ArrayType
            TypeReference
              Identifier: ' Path'
        Parameter
          Identifier: ' extraFileExtensions'
          QuestionToken
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' FileExtensionInfo'
        Parameter
          Identifier: ' extendedConfigCache'
          QuestionToken
          TypeReference
            Identifier: ' Map'
            StringKeyword
            TypeReference
              Identifier: ' ExtendedConfigCacheEntry'
        Parameter
          Identifier: ' existingWatchOptions'
          QuestionToken
          TypeReference
            Identifier: ' WatchOptions'
        TypeReference
          Identifier: ' ParsedCommandLine'
      FunctionDeclaration
        Identifier: ' convertCompilerOptionsFromJson'
        Parameter
          Identifier: 'jsonOptions'
          AnyKeyword
        Parameter
          Identifier: ' basePath'
          StringKeyword
        Parameter
          Identifier: ' configFileName'
          QuestionToken
          StringKeyword
        TypeLiteral
          PropertySignature
            Identifier: '
        options'
            TypeReference
              Identifier: ' CompilerOptions'
          PropertySignature
            Identifier: '
        errors'
            ArrayType
              TypeReference
                Identifier: ' Diagnostic'
      FunctionDeclaration
        Identifier: ' convertTypeAcquisitionFromJson'
        Parameter
          Identifier: 'jsonOptions'
          AnyKeyword
        Parameter
          Identifier: ' basePath'
          StringKeyword
        Parameter
          Identifier: ' configFileName'
          QuestionToken
          StringKeyword
        TypeLiteral
          PropertySignature
            Identifier: '
        options'
            TypeReference
              Identifier: ' TypeAcquisition'
          PropertySignature
            Identifier: '
        errors'
            ArrayType
              TypeReference
                Identifier: ' Diagnostic'
      InterfaceDeclaration
        Identifier: ' ParsedBuildCommand'
        PropertySignature
          Identifier: '
        buildOptions'
          TypeReference
            Identifier: ' BuildOptions'
        PropertySignature
          Identifier: '
        watchOptions'
          UnionType
            TypeReference
              Identifier: ' WatchOptions'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        projects'
          ArrayType
            StringKeyword
        PropertySignature
          Identifier: '
        errors'
          ArrayType
            TypeReference
              Identifier: ' Diagnostic'
      TypeAliasDeclaration
        Identifier: ' DiagnosticReporter'
        FunctionType
          Parameter
            Identifier: 'diagnostic'
            TypeReference
              Identifier: ' Diagnostic'
          VoidKeyword
      InterfaceDeclaration
        Identifier: ' ConfigFileDiagnosticsReporter'
        PropertySignature
          Identifier: '
        /**
         * Reports unrecoverable error when parsing config file
         */
        onUnRecoverableConfigFileDiagnostic'
          TypeReference
            Identifier: ' DiagnosticReporter'
      InterfaceDeclaration
        Identifier: ' ParseConfigFileHost'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ParseConfigHost'
          ExpressionWithTypeArguments
            Identifier: ' ConfigFileDiagnosticsReporter'
        MethodSignature
          Identifier: '
        getCurrentDirectory'
          StringKeyword
      InterfaceDeclaration
        Identifier: ' ParsedTsconfig'
        PropertySignature
          Identifier: '
        raw'
          AnyKeyword
        PropertySignature
          Identifier: '
        options'
          QuestionToken
          TypeReference
            Identifier: ' CompilerOptions'
        PropertySignature
          Identifier: '
        watchOptions'
          QuestionToken
          TypeReference
            Identifier: ' WatchOptions'
        PropertySignature
          Identifier: '
        typeAcquisition'
          QuestionToken
          TypeReference
            Identifier: ' TypeAcquisition'
        PropertySignature
          Identifier: '
        /**
         * Note that the case of the config path has not yet been normalized, as no files have been imported into the project yet
         */
        extendedConfigPath'
          QuestionToken
          UnionType
            StringKeyword
            ArrayType
              StringKeyword
      InterfaceDeclaration
        Identifier: ' ExtendedConfigCacheEntry'
        PropertySignature
          Identifier: '
        extendedResult'
          TypeReference
            Identifier: ' TsConfigSourceFile'
        PropertySignature
          Identifier: '
        extendedConfig'
          UnionType
            TypeReference
              Identifier: ' ParsedTsconfig'
            UndefinedKeyword
      FunctionDeclaration
        Identifier: ' getEffectiveTypeRoots'
        Parameter
          Identifier: 'options'
          TypeReference
            Identifier: ' CompilerOptions'
        Parameter
          Identifier: ' host'
          TypeReference
            Identifier: ' GetEffectiveTypeRootsHost'
        UnionType
          ArrayType
            StringKeyword
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' resolveTypeReferenceDirective'
        Parameter
          Identifier: 'typeReferenceDirectiveName'
          StringKeyword
        Parameter
          Identifier: ' containingFile'
          UnionType
            StringKeyword
            UndefinedKeyword
        Parameter
          Identifier: ' options'
          TypeReference
            Identifier: ' CompilerOptions'
        Parameter
          Identifier: ' host'
          TypeReference
            Identifier: ' ModuleResolutionHost'
        Parameter
          Identifier: ' redirectedReference'
          QuestionToken
          TypeReference
            Identifier: ' ResolvedProjectReference'
        Parameter
          Identifier: ' cache'
          QuestionToken
          TypeReference
            Identifier: ' TypeReferenceDirectiveResolutionCache'
        Parameter
          Identifier: ' resolutionMode'
          QuestionToken
          TypeReference
            Identifier: ' ResolutionMode'
        TypeReference
          Identifier: ' ResolvedTypeReferenceDirectiveWithFailedLookupLocations'
      FunctionDeclaration
        Identifier: ' getAutomaticTypeDirectiveNames'
        Parameter
          Identifier: 'options'
          TypeReference
            Identifier: ' CompilerOptions'
        Parameter
          Identifier: ' host'
          TypeReference
            Identifier: ' ModuleResolutionHost'
        ArrayType
          StringKeyword
      FunctionDeclaration
        Identifier: ' createModuleResolutionCache'
        Parameter
          Identifier: 'currentDirectory'
          StringKeyword
        Parameter
          Identifier: ' getCanonicalFileName'
          FunctionType
            Parameter
              Identifier: 's'
              StringKeyword
            StringKeyword
        Parameter
          Identifier: ' options'
          QuestionToken
          TypeReference
            Identifier: ' CompilerOptions'
        Parameter
          Identifier: ' packageJsonInfoCache'
          QuestionToken
          TypeReference
            Identifier: ' PackageJsonInfoCache'
        TypeReference
          Identifier: ' ModuleResolutionCache'
      FunctionDeclaration
        Identifier: ' createTypeReferenceDirectiveResolutionCache'
        Parameter
          Identifier: 'currentDirectory'
          StringKeyword
        Parameter
          Identifier: ' getCanonicalFileName'
          FunctionType
            Parameter
              Identifier: 's'
              StringKeyword
            StringKeyword
        Parameter
          Identifier: ' options'
          QuestionToken
          TypeReference
            Identifier: ' CompilerOptions'
        Parameter
          Identifier: ' packageJsonInfoCache'
          QuestionToken
          TypeReference
            Identifier: ' PackageJsonInfoCache'
        TypeReference
          Identifier: ' TypeReferenceDirectiveResolutionCache'
      FunctionDeclaration
        Identifier: ' resolveModuleNameFromCache'
        Parameter
          Identifier: 'moduleName'
          StringKeyword
        Parameter
          Identifier: ' containingFile'
          StringKeyword
        Parameter
          Identifier: ' cache'
          TypeReference
            Identifier: ' ModuleResolutionCache'
        Parameter
          Identifier: ' mode'
          QuestionToken
          TypeReference
            Identifier: ' ResolutionMode'
        UnionType
          TypeReference
            Identifier: ' ResolvedModuleWithFailedLookupLocations'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' resolveModuleName'
        Parameter
          Identifier: 'moduleName'
          StringKeyword
        Parameter
          Identifier: ' containingFile'
          StringKeyword
        Parameter
          Identifier: ' compilerOptions'
          TypeReference
            Identifier: ' CompilerOptions'
        Parameter
          Identifier: ' host'
          TypeReference
            Identifier: ' ModuleResolutionHost'
        Parameter
          Identifier: ' cache'
          QuestionToken
          TypeReference
            Identifier: ' ModuleResolutionCache'
        Parameter
          Identifier: ' redirectedReference'
          QuestionToken
          TypeReference
            Identifier: ' ResolvedProjectReference'
        Parameter
          Identifier: ' resolutionMode'
          QuestionToken
          TypeReference
            Identifier: ' ResolutionMode'
        TypeReference
          Identifier: ' ResolvedModuleWithFailedLookupLocations'
      FunctionDeclaration
        Identifier: ' bundlerModuleNameResolver'
        Parameter
          Identifier: 'moduleName'
          StringKeyword
        Parameter
          Identifier: ' containingFile'
          StringKeyword
        Parameter
          Identifier: ' compilerOptions'
          TypeReference
            Identifier: ' CompilerOptions'
        Parameter
          Identifier: ' host'
          TypeReference
            Identifier: ' ModuleResolutionHost'
        Parameter
          Identifier: ' cache'
          QuestionToken
          TypeReference
            Identifier: ' ModuleResolutionCache'
        Parameter
          Identifier: ' redirectedReference'
          QuestionToken
          TypeReference
            Identifier: ' ResolvedProjectReference'
        TypeReference
          Identifier: ' ResolvedModuleWithFailedLookupLocations'
      FunctionDeclaration
        Identifier: ' nodeModuleNameResolver'
        Parameter
          Identifier: 'moduleName'
          StringKeyword
        Parameter
          Identifier: ' containingFile'
          StringKeyword
        Parameter
          Identifier: ' compilerOptions'
          TypeReference
            Identifier: ' CompilerOptions'
        Parameter
          Identifier: ' host'
          TypeReference
            Identifier: ' ModuleResolutionHost'
        Parameter
          Identifier: ' cache'
          QuestionToken
          TypeReference
            Identifier: ' ModuleResolutionCache'
        Parameter
          Identifier: ' redirectedReference'
          QuestionToken
          TypeReference
            Identifier: ' ResolvedProjectReference'
        TypeReference
          Identifier: ' ResolvedModuleWithFailedLookupLocations'
      FunctionDeclaration
        Identifier: ' classicNameResolver'
        Parameter
          Identifier: 'moduleName'
          StringKeyword
        Parameter
          Identifier: ' containingFile'
          StringKeyword
        Parameter
          Identifier: ' compilerOptions'
          TypeReference
            Identifier: ' CompilerOptions'
        Parameter
          Identifier: ' host'
          TypeReference
            Identifier: ' ModuleResolutionHost'
        Parameter
          Identifier: ' cache'
          QuestionToken
          TypeReference
            Identifier: ' NonRelativeModuleNameResolutionCache'
        Parameter
          Identifier: ' redirectedReference'
          QuestionToken
          TypeReference
            Identifier: ' ResolvedProjectReference'
        TypeReference
          Identifier: ' ResolvedModuleWithFailedLookupLocations'
      InterfaceDeclaration
        Identifier: ' TypeReferenceDirectiveResolutionCache'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' PerDirectoryResolutionCache'
            TypeReference
              Identifier: 'ResolvedTypeReferenceDirectiveWithFailedLookupLocations'
          ExpressionWithTypeArguments
            Identifier: ' NonRelativeNameResolutionCache'
            TypeReference
              Identifier: 'ResolvedTypeReferenceDirectiveWithFailedLookupLocations'
          ExpressionWithTypeArguments
            Identifier: ' PackageJsonInfoCache'
      InterfaceDeclaration
        Identifier: ' ModeAwareCache'
        TypeParameter
          Identifier: 'T'
        MethodSignature
          Identifier: '
        get'
          Parameter
            Identifier: 'key'
            StringKeyword
          Parameter
            Identifier: ' mode'
            TypeReference
              Identifier: ' ResolutionMode'
          UnionType
            TypeReference
              Identifier: ' T'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        set'
          Parameter
            Identifier: 'key'
            StringKeyword
          Parameter
            Identifier: ' mode'
            TypeReference
              Identifier: ' ResolutionMode'
          Parameter
            Identifier: ' value'
            TypeReference
              Identifier: ' T'
          ThisType
        MethodSignature
          Identifier: '
        delete'
          Parameter
            Identifier: 'key'
            StringKeyword
          Parameter
            Identifier: ' mode'
            TypeReference
              Identifier: ' ResolutionMode'
          ThisType
        MethodSignature
          Identifier: '
        has'
          Parameter
            Identifier: 'key'
            StringKeyword
          Parameter
            Identifier: ' mode'
            TypeReference
              Identifier: ' ResolutionMode'
          BooleanKeyword
        MethodSignature
          Identifier: '
        forEach'
          Parameter
            Identifier: 'cb'
            FunctionType
              Parameter
                Identifier: 'elem'
                TypeReference
                  Identifier: ' T'
              Parameter
                Identifier: ' key'
                StringKeyword
              Parameter
                Identifier: ' mode'
                TypeReference
                  Identifier: ' ResolutionMode'
              VoidKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        size'
          NumberKeyword
      InterfaceDeclaration
        Identifier: ' PerDirectoryResolutionCache'
        TypeParameter
          Identifier: 'T'
        MethodSignature
          Identifier: '
        getFromDirectoryCache'
          Parameter
            Identifier: 'name'
            StringKeyword
          Parameter
            Identifier: ' mode'
            TypeReference
              Identifier: ' ResolutionMode'
          Parameter
            Identifier: ' directoryName'
            StringKeyword
          Parameter
            Identifier: ' redirectedReference'
            UnionType
              TypeReference
                Identifier: ' ResolvedProjectReference'
              UndefinedKeyword
          UnionType
            TypeReference
              Identifier: ' T'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getOrCreateCacheForDirectory'
          Parameter
            Identifier: 'directoryName'
            StringKeyword
          Parameter
            Identifier: ' redirectedReference'
            QuestionToken
            TypeReference
              Identifier: ' ResolvedProjectReference'
          TypeReference
            Identifier: ' ModeAwareCache'
            TypeReference
              Identifier: 'T'
        MethodSignature
          Identifier: '
        clear'
          VoidKeyword
        MethodSignature
          Identifier: '
        /**
         *  Updates with the current compilerOptions the cache will operate with.
         *  This updates the redirects map as well if needed so module resolutions are cached if they can across the projects
         */
        update'
          Parameter
            Identifier: 'options'
            TypeReference
              Identifier: ' CompilerOptions'
          VoidKeyword
      InterfaceDeclaration
        Identifier: ' NonRelativeNameResolutionCache'
        TypeParameter
          Identifier: 'T'
        MethodSignature
          Identifier: '
        getFromNonRelativeNameCache'
          Parameter
            Identifier: 'nonRelativeName'
            StringKeyword
          Parameter
            Identifier: ' mode'
            TypeReference
              Identifier: ' ResolutionMode'
          Parameter
            Identifier: ' directoryName'
            StringKeyword
          Parameter
            Identifier: ' redirectedReference'
            UnionType
              TypeReference
                Identifier: ' ResolvedProjectReference'
              UndefinedKeyword
          UnionType
            TypeReference
              Identifier: ' T'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getOrCreateCacheForNonRelativeName'
          Parameter
            Identifier: 'nonRelativeName'
            StringKeyword
          Parameter
            Identifier: ' mode'
            TypeReference
              Identifier: ' ResolutionMode'
          Parameter
            Identifier: ' redirectedReference'
            QuestionToken
            TypeReference
              Identifier: ' ResolvedProjectReference'
          TypeReference
            Identifier: ' PerNonRelativeNameCache'
            TypeReference
              Identifier: 'T'
        MethodSignature
          Identifier: '
        clear'
          VoidKeyword
        MethodSignature
          Identifier: '
        /**
         *  Updates with the current compilerOptions the cache will operate with.
         *  This updates the redirects map as well if needed so module resolutions are cached if they can across the projects
         */
        update'
          Parameter
            Identifier: 'options'
            TypeReference
              Identifier: ' CompilerOptions'
          VoidKeyword
      InterfaceDeclaration
        Identifier: ' PerNonRelativeNameCache'
        TypeParameter
          Identifier: 'T'
        MethodSignature
          Identifier: '
        get'
          Parameter
            Identifier: 'directory'
            StringKeyword
          UnionType
            TypeReference
              Identifier: ' T'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        set'
          Parameter
            Identifier: 'directory'
            StringKeyword
          Parameter
            Identifier: ' result'
            TypeReference
              Identifier: ' T'
          VoidKeyword
      InterfaceDeclaration
        Identifier: ' ModuleResolutionCache'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' PerDirectoryResolutionCache'
            TypeReference
              Identifier: 'ResolvedModuleWithFailedLookupLocations'
          ExpressionWithTypeArguments
            Identifier: ' NonRelativeModuleNameResolutionCache'
          ExpressionWithTypeArguments
            Identifier: ' PackageJsonInfoCache'
        MethodSignature
          Identifier: '
        getPackageJsonInfoCache'
          TypeReference
            Identifier: ' PackageJsonInfoCache'
      InterfaceDeclaration
        Identifier: ' NonRelativeModuleNameResolutionCache'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' NonRelativeNameResolutionCache'
            TypeReference
              Identifier: 'ResolvedModuleWithFailedLookupLocations'
          ExpressionWithTypeArguments
            Identifier: ' PackageJsonInfoCache'
        MethodSignature
          Identifier: '
        /** @deprecated Use getOrCreateCacheForNonRelativeName */
        getOrCreateCacheForModuleName'
          Parameter
            Identifier: 'nonRelativeModuleName'
            StringKeyword
          Parameter
            Identifier: ' mode'
            TypeReference
              Identifier: ' ResolutionMode'
          Parameter
            Identifier: ' redirectedReference'
            QuestionToken
            TypeReference
              Identifier: ' ResolvedProjectReference'
          TypeReference
            Identifier: ' PerModuleNameCache'
      InterfaceDeclaration
        Identifier: ' PackageJsonInfoCache'
        MethodSignature
          Identifier: '
        clear'
          VoidKeyword
      TypeAliasDeclaration
        Identifier: ' PerModuleNameCache'
        TypeReference
          Identifier: ' PerNonRelativeNameCache'
          TypeReference
            Identifier: 'ResolvedModuleWithFailedLookupLocations'
      FunctionDeclaration
        Identifier: ' visitNode'
        TypeParameter
          Identifier: 'TIn'
          UnionType
            TypeReference
              Identifier: ' Node'
            UndefinedKeyword
        TypeParameter
          Identifier: ' TVisited'
          UnionType
            TypeReference
              Identifier: ' Node'
            UndefinedKeyword
        TypeParameter
          Identifier: ' TOut'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' TIn'
        Parameter
          Identifier: ' visitor'
          TypeReference
            Identifier: ' Visitor'
            TypeReference
              Identifier: 'NonNullable'
              TypeReference
                Identifier: 'TIn'
            TypeReference
              Identifier: ' TVisited'
        Parameter
          Identifier: ' test'
          FunctionType
            Parameter
              Identifier: 'node'
              TypeReference
                Identifier: ' Node'
            TypePredicate
              Identifier: ' node'
              TypeReference
                Identifier: ' TOut'
        Parameter
          Identifier: ' lift'
          QuestionToken
          FunctionType
            Parameter
              Identifier: 'node'
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' Node'
            TypeReference
              Identifier: ' Node'
        UnionType
          TypeReference
            Identifier: ' TOut'
          ParenthesizedType
            IntersectionType
              TypeReference
                Identifier: 'TIn'
              UndefinedKeyword
          ParenthesizedType
            IntersectionType
              TypeReference
                Identifier: 'TVisited'
              UndefinedKeyword
      FunctionDeclaration
        Identifier: ' visitNode'
        TypeParameter
          Identifier: 'TIn'
          UnionType
            TypeReference
              Identifier: ' Node'
            UndefinedKeyword
        TypeParameter
          Identifier: ' TVisited'
          UnionType
            TypeReference
              Identifier: ' Node'
            UndefinedKeyword
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' TIn'
        Parameter
          Identifier: ' visitor'
          TypeReference
            Identifier: ' Visitor'
            TypeReference
              Identifier: 'NonNullable'
              TypeReference
                Identifier: 'TIn'
            TypeReference
              Identifier: ' TVisited'
        Parameter
          Identifier: ' test'
          QuestionToken
          FunctionType
            Parameter
              Identifier: 'node'
              TypeReference
                Identifier: ' Node'
            BooleanKeyword
        Parameter
          Identifier: ' lift'
          QuestionToken
          FunctionType
            Parameter
              Identifier: 'node'
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' Node'
            TypeReference
              Identifier: ' Node'
        UnionType
          TypeReference
            Identifier: ' Node'
          ParenthesizedType
            IntersectionType
              TypeReference
                Identifier: 'TIn'
              UndefinedKeyword
          ParenthesizedType
            IntersectionType
              TypeReference
                Identifier: 'TVisited'
              UndefinedKeyword
      FunctionDeclaration
        Identifier: ' visitNodes'
        TypeParameter
          Identifier: 'TIn'
          TypeReference
            Identifier: ' Node'
        TypeParameter
          Identifier: ' TInArray'
          UnionType
            TypeReference
              Identifier: ' NodeArray'
              TypeReference
                Identifier: 'TIn'
            UndefinedKeyword
        TypeParameter
          Identifier: ' TOut'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: 'nodes'
          TypeReference
            Identifier: ' TInArray'
        Parameter
          Identifier: ' visitor'
          TypeReference
            Identifier: ' Visitor'
            TypeReference
              Identifier: 'TIn'
            UnionType
              TypeReference
                Identifier: ' Node'
              UndefinedKeyword
        Parameter
          Identifier: ' test'
          FunctionType
            Parameter
              Identifier: 'node'
              TypeReference
                Identifier: ' Node'
            TypePredicate
              Identifier: ' node'
              TypeReference
                Identifier: ' TOut'
        Parameter
          Identifier: ' start'
          QuestionToken
          NumberKeyword
        Parameter
          Identifier: ' count'
          QuestionToken
          NumberKeyword
        UnionType
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'TOut'
          ParenthesizedType
            IntersectionType
              TypeReference
                Identifier: 'TInArray'
              UndefinedKeyword
      FunctionDeclaration
        Identifier: ' visitNodes'
        TypeParameter
          Identifier: 'TIn'
          TypeReference
            Identifier: ' Node'
        TypeParameter
          Identifier: ' TInArray'
          UnionType
            TypeReference
              Identifier: ' NodeArray'
              TypeReference
                Identifier: 'TIn'
            UndefinedKeyword
        Parameter
          Identifier: 'nodes'
          TypeReference
            Identifier: ' TInArray'
        Parameter
          Identifier: ' visitor'
          TypeReference
            Identifier: ' Visitor'
            TypeReference
              Identifier: 'TIn'
            UnionType
              TypeReference
                Identifier: ' Node'
              UndefinedKeyword
        Parameter
          Identifier: ' test'
          QuestionToken
          FunctionType
            Parameter
              Identifier: 'node'
              TypeReference
                Identifier: ' Node'
            BooleanKeyword
        Parameter
          Identifier: ' start'
          QuestionToken
          NumberKeyword
        Parameter
          Identifier: ' count'
          QuestionToken
          NumberKeyword
        UnionType
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'Node'
          ParenthesizedType
            IntersectionType
              TypeReference
                Identifier: 'TInArray'
              UndefinedKeyword
      FunctionDeclaration
        Identifier: ' visitLexicalEnvironment'
        Parameter
          Identifier: 'statements'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'Statement'
        Parameter
          Identifier: ' visitor'
          TypeReference
            Identifier: ' Visitor'
        Parameter
          Identifier: ' context'
          TypeReference
            Identifier: ' TransformationContext'
        Parameter
          Identifier: ' start'
          QuestionToken
          NumberKeyword
        Parameter
          Identifier: ' ensureUseStrict'
          QuestionToken
          BooleanKeyword
        Parameter
          Identifier: ' nodesVisitor'
          QuestionToken
          TypeReference
            Identifier: ' NodesVisitor'
        TypeReference
          Identifier: ' NodeArray'
          TypeReference
            Identifier: 'Statement'
      FunctionDeclaration
        Identifier: ' visitParameterList'
        Parameter
          Identifier: 'nodes'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'ParameterDeclaration'
        Parameter
          Identifier: ' visitor'
          TypeReference
            Identifier: ' Visitor'
        Parameter
          Identifier: ' context'
          TypeReference
            Identifier: ' TransformationContext'
        Parameter
          Identifier: ' nodesVisitor'
          QuestionToken
          TypeReference
            Identifier: ' NodesVisitor'
        TypeReference
          Identifier: ' NodeArray'
          TypeReference
            Identifier: 'ParameterDeclaration'
      FunctionDeclaration
        Identifier: ' visitParameterList'
        Parameter
          Identifier: 'nodes'
          UnionType
            TypeReference
              Identifier: ' NodeArray'
              TypeReference
                Identifier: 'ParameterDeclaration'
            UndefinedKeyword
        Parameter
          Identifier: ' visitor'
          TypeReference
            Identifier: ' Visitor'
        Parameter
          Identifier: ' context'
          TypeReference
            Identifier: ' TransformationContext'
        Parameter
          Identifier: ' nodesVisitor'
          QuestionToken
          TypeReference
            Identifier: ' NodesVisitor'
        UnionType
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'ParameterDeclaration'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' visitFunctionBody'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' FunctionBody'
        Parameter
          Identifier: ' visitor'
          TypeReference
            Identifier: ' Visitor'
        Parameter
          Identifier: ' context'
          TypeReference
            Identifier: ' TransformationContext'
        TypeReference
          Identifier: ' FunctionBody'
      FunctionDeclaration
        Identifier: ' visitFunctionBody'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' FunctionBody'
            UndefinedKeyword
        Parameter
          Identifier: ' visitor'
          TypeReference
            Identifier: ' Visitor'
        Parameter
          Identifier: ' context'
          TypeReference
            Identifier: ' TransformationContext'
        UnionType
          TypeReference
            Identifier: ' FunctionBody'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' visitFunctionBody'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' ConciseBody'
        Parameter
          Identifier: ' visitor'
          TypeReference
            Identifier: ' Visitor'
        Parameter
          Identifier: ' context'
          TypeReference
            Identifier: ' TransformationContext'
        TypeReference
          Identifier: ' ConciseBody'
      FunctionDeclaration
        Identifier: ' visitIterationBody'
        Parameter
          Identifier: 'body'
          TypeReference
            Identifier: ' Statement'
        Parameter
          Identifier: ' visitor'
          TypeReference
            Identifier: ' Visitor'
        Parameter
          Identifier: ' context'
          TypeReference
            Identifier: ' TransformationContext'
        TypeReference
          Identifier: ' Statement'
      FunctionDeclaration
        Identifier: ' visitCommaListElements'
        Parameter
          Identifier: 'elements'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'Expression'
        Parameter
          Identifier: ' visitor'
          TypeReference
            Identifier: ' Visitor'
        Parameter
          Identifier: ' discardVisitor'
          QuestionToken
          TypeReference
            Identifier: ' Visitor'
        TypeReference
          Identifier: ' NodeArray'
          TypeReference
            Identifier: 'Expression'
      FunctionDeclaration
        Identifier: ' visitEachChild'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' T'
        Parameter
          Identifier: ' visitor'
          TypeReference
            Identifier: ' Visitor'
        Parameter
          Identifier: ' context'
          UnionType
            TypeReference
              Identifier: ' TransformationContext'
            UndefinedKeyword
        TypeReference
          Identifier: ' T'
      FunctionDeclaration
        Identifier: ' visitEachChild'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' T'
            UndefinedKeyword
        Parameter
          Identifier: ' visitor'
          TypeReference
            Identifier: ' Visitor'
        Parameter
          Identifier: ' context'
          UnionType
            TypeReference
              Identifier: ' TransformationContext'
            UndefinedKeyword
        Parameter
          Identifier: ' nodesVisitor'
          QuestionToken
          TypeQuery
            Identifier: ' visitNodes'
        Parameter
          Identifier: ' tokenVisitor'
          QuestionToken
          TypeReference
            Identifier: ' Visitor'
        UnionType
          TypeReference
            Identifier: ' T'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' getTsBuildInfoEmitOutputFilePath'
        Parameter
          Identifier: 'options'
          TypeReference
            Identifier: ' CompilerOptions'
        UnionType
          StringKeyword
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' getOutputFileNames'
        Parameter
          Identifier: 'commandLine'
          TypeReference
            Identifier: ' ParsedCommandLine'
        Parameter
          Identifier: ' inputFileName'
          StringKeyword
        Parameter
          Identifier: ' ignoreCase'
          BooleanKeyword
        TypeOperator
          ArrayType
            StringKeyword
      FunctionDeclaration
        Identifier: ' createPrinter'
        Parameter
          Identifier: 'printerOptions'
          QuestionToken
          TypeReference
            Identifier: ' PrinterOptions'
        Parameter
          Identifier: ' handlers'
          QuestionToken
          TypeReference
            Identifier: ' PrintHandlers'
        TypeReference
          Identifier: ' Printer'
      EnumDeclaration
        Identifier: ' ProgramUpdateLevel'
        EnumMember
          Identifier: '
        /** Program is updated with same root file names and options */
        Update'
          NumericLiteral
        EnumMember
          Identifier: '
        /** Loads program after updating root file names from the disk */
        RootNamesAndUpdate'
          NumericLiteral
        EnumMember
          Identifier: '
        /**
         * Loads program completely, including:
         *  - re-reading contents of config file from disk
         *  - calculating root file names for the program
         *  - Updating the program
         */
        Full'
          NumericLiteral
      FunctionDeclaration
        Identifier: ' findConfigFile'
        Parameter
          Identifier: 'searchPath'
          StringKeyword
        Parameter
          Identifier: ' fileExists'
          FunctionType
            Parameter
              Identifier: 'fileName'
              StringKeyword
            BooleanKeyword
        Parameter
          Identifier: ' configName'
          QuestionToken
          StringKeyword
        UnionType
          StringKeyword
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' resolveTripleslashReference'
        Parameter
          Identifier: 'moduleName'
          StringKeyword
        Parameter
          Identifier: ' containingFile'
          StringKeyword
        StringKeyword
      FunctionDeclaration
        Identifier: ' createCompilerHost'
        Parameter
          Identifier: 'options'
          TypeReference
            Identifier: ' CompilerOptions'
        Parameter
          Identifier: ' setParentNodes'
          QuestionToken
          BooleanKeyword
        TypeReference
          Identifier: ' CompilerHost'
      FunctionDeclaration
        Identifier: ' getPreEmitDiagnostics'
        Parameter
          Identifier: 'program'
          TypeReference
            Identifier: ' Program'
        Parameter
          Identifier: ' sourceFile'
          QuestionToken
          TypeReference
            Identifier: ' SourceFile'
        Parameter
          Identifier: ' cancellationToken'
          QuestionToken
          TypeReference
            Identifier: ' CancellationToken'
        TypeOperator
          ArrayType
            TypeReference
              Identifier: ' Diagnostic'
      FunctionDeclaration
        Identifier: ' formatDiagnostics'
        Parameter
          Identifier: 'diagnostics'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Diagnostic'
        Parameter
          Identifier: ' host'
          TypeReference
            Identifier: ' FormatDiagnosticsHost'
        StringKeyword
      FunctionDeclaration
        Identifier: ' formatDiagnostic'
        Parameter
          Identifier: 'diagnostic'
          TypeReference
            Identifier: ' Diagnostic'
        Parameter
          Identifier: ' host'
          TypeReference
            Identifier: ' FormatDiagnosticsHost'
        StringKeyword
      FunctionDeclaration
        Identifier: ' formatDiagnosticsWithColorAndContext'
        Parameter
          Identifier: 'diagnostics'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Diagnostic'
        Parameter
          Identifier: ' host'
          TypeReference
            Identifier: ' FormatDiagnosticsHost'
        StringKeyword
      FunctionDeclaration
        Identifier: ' flattenDiagnosticMessageText'
        Parameter
          Identifier: 'diag'
          UnionType
            StringKeyword
            TypeReference
              Identifier: ' DiagnosticMessageChain'
            UndefinedKeyword
        Parameter
          Identifier: ' newLine'
          StringKeyword
        Parameter
          Identifier: ' indent'
          QuestionToken
          NumberKeyword
        StringKeyword
      FunctionDeclaration
        Identifier: ' getModeForFileReference'
        Parameter
          Identifier: 'ref'
          UnionType
            TypeReference
              Identifier: ' FileReference'
            StringKeyword
        Parameter
          Identifier: ' containingFileMode'
          TypeReference
            Identifier: ' ResolutionMode'
        TypeReference
          Identifier: ' ResolutionMode'
      FunctionDeclaration
        Identifier: ' getModeForResolutionAtIndex'
        Parameter
          Identifier: 'file'
          TypeReference
            Identifier: ' SourceFile'
        Parameter
          Identifier: ' index'
          NumberKeyword
        Parameter
          Identifier: ' compilerOptions'
          TypeReference
            Identifier: ' CompilerOptions'
        TypeReference
          Identifier: ' ResolutionMode'
      FunctionDeclaration
        Identifier: ' getModeForUsageLocation'
        Parameter
          Identifier: 'file'
          TypeReference
            Identifier: ' SourceFile'
        Parameter
          Identifier: ' usage'
          TypeReference
            Identifier: ' StringLiteralLike'
        Parameter
          Identifier: ' compilerOptions'
          TypeReference
            Identifier: ' CompilerOptions'
        TypeReference
          Identifier: ' ResolutionMode'
      FunctionDeclaration
        Identifier: ' getConfigFileParsingDiagnostics'
        Parameter
          Identifier: 'configFileParseResult'
          TypeReference
            Identifier: ' ParsedCommandLine'
        TypeOperator
          ArrayType
            TypeReference
              Identifier: ' Diagnostic'
      FunctionDeclaration
        Identifier: ' getImpliedNodeFormatForFile'
        Parameter
          Identifier: 'fileName'
          StringKeyword
        Parameter
          Identifier: ' packageJsonInfoCache'
          UnionType
            TypeReference
              Identifier: ' PackageJsonInfoCache'
            UndefinedKeyword
        Parameter
          Identifier: ' host'
          TypeReference
            Identifier: ' ModuleResolutionHost'
        Parameter
          Identifier: ' options'
          TypeReference
            Identifier: ' CompilerOptions'
        TypeReference
          Identifier: ' ResolutionMode'
      FunctionDeclaration
        Identifier: ' createProgram'
        Parameter
          Identifier: 'createProgramOptions'
          TypeReference
            Identifier: ' CreateProgramOptions'
        TypeReference
          Identifier: ' Program'
      FunctionDeclaration
        Identifier: ' createProgram'
        Parameter
          Identifier: 'rootNames'
          TypeOperator
            ArrayType
              StringKeyword
        Parameter
          Identifier: ' options'
          TypeReference
            Identifier: ' CompilerOptions'
        Parameter
          Identifier: ' host'
          QuestionToken
          TypeReference
            Identifier: ' CompilerHost'
        Parameter
          Identifier: ' oldProgram'
          QuestionToken
          TypeReference
            Identifier: ' Program'
        Parameter
          Identifier: ' configFileParsingDiagnostics'
          QuestionToken
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Diagnostic'
        TypeReference
          Identifier: ' Program'
      FunctionDeclaration
        Identifier: ' resolveProjectReferencePath'
        Parameter
          Identifier: 'ref'
          TypeReference
            Identifier: ' ProjectReference'
        TypeReference
          Identifier: ' ResolvedConfigFileName'
      InterfaceDeclaration
        Identifier: ' FormatDiagnosticsHost'
        MethodSignature
          Identifier: '
        getCurrentDirectory'
          StringKeyword
        MethodSignature
          Identifier: '
        getCanonicalFileName'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          StringKeyword
        MethodSignature
          Identifier: '
        getNewLine'
          StringKeyword
      InterfaceDeclaration
        Identifier: ' EmitOutput'
        PropertySignature
          Identifier: '
        outputFiles'
          ArrayType
            TypeReference
              Identifier: ' OutputFile'
        PropertySignature
          Identifier: '
        emitSkipped'
          BooleanKeyword
        PropertySignature
          Identifier: '
        diagnostics'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Diagnostic'
      InterfaceDeclaration
        Identifier: ' OutputFile'
        PropertySignature
          Identifier: '
        name'
          StringKeyword
        PropertySignature
          Identifier: '
        writeByteOrderMark'
          BooleanKeyword
        PropertySignature
          Identifier: '
        text'
          StringKeyword
      FunctionDeclaration
        Identifier: ' createSemanticDiagnosticsBuilderProgram'
        Parameter
          Identifier: 'newProgram'
          TypeReference
            Identifier: ' Program'
        Parameter
          Identifier: ' host'
          TypeReference
            Identifier: ' BuilderProgramHost'
        Parameter
          Identifier: ' oldProgram'
          QuestionToken
          TypeReference
            Identifier: ' SemanticDiagnosticsBuilderProgram'
        Parameter
          Identifier: ' configFileParsingDiagnostics'
          QuestionToken
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Diagnostic'
        TypeReference
          Identifier: ' SemanticDiagnosticsBuilderProgram'
      FunctionDeclaration
        Identifier: ' createSemanticDiagnosticsBuilderProgram'
        Parameter
          Identifier: 'rootNames'
          UnionType
            TypeOperator
              ArrayType
                StringKeyword
            UndefinedKeyword
        Parameter
          Identifier: ' options'
          UnionType
            TypeReference
              Identifier: ' CompilerOptions'
            UndefinedKeyword
        Parameter
          Identifier: ' host'
          QuestionToken
          TypeReference
            Identifier: ' CompilerHost'
        Parameter
          Identifier: ' oldProgram'
          QuestionToken
          TypeReference
            Identifier: ' SemanticDiagnosticsBuilderProgram'
        Parameter
          Identifier: ' configFileParsingDiagnostics'
          QuestionToken
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Diagnostic'
        Parameter
          Identifier: ' projectReferences'
          QuestionToken
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' ProjectReference'
        TypeReference
          Identifier: ' SemanticDiagnosticsBuilderProgram'
      FunctionDeclaration
        Identifier: ' createEmitAndSemanticDiagnosticsBuilderProgram'
        Parameter
          Identifier: 'newProgram'
          TypeReference
            Identifier: ' Program'
        Parameter
          Identifier: ' host'
          TypeReference
            Identifier: ' BuilderProgramHost'
        Parameter
          Identifier: ' oldProgram'
          QuestionToken
          TypeReference
            Identifier: ' EmitAndSemanticDiagnosticsBuilderProgram'
        Parameter
          Identifier: ' configFileParsingDiagnostics'
          QuestionToken
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Diagnostic'
        TypeReference
          Identifier: ' EmitAndSemanticDiagnosticsBuilderProgram'
      FunctionDeclaration
        Identifier: ' createEmitAndSemanticDiagnosticsBuilderProgram'
        Parameter
          Identifier: 'rootNames'
          UnionType
            TypeOperator
              ArrayType
                StringKeyword
            UndefinedKeyword
        Parameter
          Identifier: ' options'
          UnionType
            TypeReference
              Identifier: ' CompilerOptions'
            UndefinedKeyword
        Parameter
          Identifier: ' host'
          QuestionToken
          TypeReference
            Identifier: ' CompilerHost'
        Parameter
          Identifier: ' oldProgram'
          QuestionToken
          TypeReference
            Identifier: ' EmitAndSemanticDiagnosticsBuilderProgram'
        Parameter
          Identifier: ' configFileParsingDiagnostics'
          QuestionToken
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Diagnostic'
        Parameter
          Identifier: ' projectReferences'
          QuestionToken
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' ProjectReference'
        TypeReference
          Identifier: ' EmitAndSemanticDiagnosticsBuilderProgram'
      FunctionDeclaration
        Identifier: ' createAbstractBuilder'
        Parameter
          Identifier: 'newProgram'
          TypeReference
            Identifier: ' Program'
        Parameter
          Identifier: ' host'
          TypeReference
            Identifier: ' BuilderProgramHost'
        Parameter
          Identifier: ' oldProgram'
          QuestionToken
          TypeReference
            Identifier: ' BuilderProgram'
        Parameter
          Identifier: ' configFileParsingDiagnostics'
          QuestionToken
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Diagnostic'
        TypeReference
          Identifier: ' BuilderProgram'
      FunctionDeclaration
        Identifier: ' createAbstractBuilder'
        Parameter
          Identifier: 'rootNames'
          UnionType
            TypeOperator
              ArrayType
                StringKeyword
            UndefinedKeyword
        Parameter
          Identifier: ' options'
          UnionType
            TypeReference
              Identifier: ' CompilerOptions'
            UndefinedKeyword
        Parameter
          Identifier: ' host'
          QuestionToken
          TypeReference
            Identifier: ' CompilerHost'
        Parameter
          Identifier: ' oldProgram'
          QuestionToken
          TypeReference
            Identifier: ' BuilderProgram'
        Parameter
          Identifier: ' configFileParsingDiagnostics'
          QuestionToken
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Diagnostic'
        Parameter
          Identifier: ' projectReferences'
          QuestionToken
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' ProjectReference'
        TypeReference
          Identifier: ' BuilderProgram'
      TypeAliasDeclaration
        Identifier: ' AffectedFileResult'
        TypeParameter
          Identifier: 'T'
        UnionType
          TypeLiteral
            PropertySignature
              Identifier: '
        result'
              TypeReference
                Identifier: ' T'
            PropertySignature
              Identifier: '
        affected'
              UnionType
                TypeReference
                  Identifier: ' SourceFile'
                TypeReference
                  Identifier: ' Program'
          UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' BuilderProgramHost'
        PropertySignature
          Identifier: '
        /**
         * If provided this would be used this hash instead of actual file shape text for detecting changes
         */
        createHash'
          QuestionToken
          FunctionType
            Parameter
              Identifier: 'data'
              StringKeyword
            StringKeyword
        PropertySignature
          Identifier: '
        /**
         * When emit or emitNextAffectedFile are called without writeFile,
         * this callback if present would be used to write files
         */
        writeFile'
          QuestionToken
          TypeReference
            Identifier: ' WriteFileCallback'
      InterfaceDeclaration
        Identifier: ' BuilderProgram'
        MethodSignature
          Identifier: '
        /**
         * Returns current program
         */
        getProgram'
          TypeReference
            Identifier: ' Program'
        MethodSignature
          Identifier: '
        /**
         * Get compiler options of the program
         */
        getCompilerOptions'
          TypeReference
            Identifier: ' CompilerOptions'
        MethodSignature
          Identifier: '
        /**
         * Get the source file in the program with file name
         */
        getSourceFile'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          UnionType
            TypeReference
              Identifier: ' SourceFile'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        /**
         * Get a list of files in the program
         */
        getSourceFiles'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' SourceFile'
        MethodSignature
          Identifier: '
        /**
         * Get the diagnostics for compiler options
         */
        getOptionsDiagnostics'
          Parameter
            Identifier: 'cancellationToken'
            QuestionToken
            TypeReference
              Identifier: ' CancellationToken'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Diagnostic'
        MethodSignature
          Identifier: '
        /**
         * Get the diagnostics that dont belong to any file
         */
        getGlobalDiagnostics'
          Parameter
            Identifier: 'cancellationToken'
            QuestionToken
            TypeReference
              Identifier: ' CancellationToken'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Diagnostic'
        MethodSignature
          Identifier: '
        /**
         * Get the diagnostics from config file parsing
         */
        getConfigFileParsingDiagnostics'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Diagnostic'
        MethodSignature
          Identifier: '
        /**
         * Get the syntax diagnostics, for all source files if source file is not supplied
         */
        getSyntacticDiagnostics'
          Parameter
            Identifier: 'sourceFile'
            QuestionToken
            TypeReference
              Identifier: ' SourceFile'
          Parameter
            Identifier: ' cancellationToken'
            QuestionToken
            TypeReference
              Identifier: ' CancellationToken'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Diagnostic'
        MethodSignature
          Identifier: '
        /**
         * Get the declaration diagnostics, for all source files if source file is not supplied
         */
        getDeclarationDiagnostics'
          Parameter
            Identifier: 'sourceFile'
            QuestionToken
            TypeReference
              Identifier: ' SourceFile'
          Parameter
            Identifier: ' cancellationToken'
            QuestionToken
            TypeReference
              Identifier: ' CancellationToken'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' DiagnosticWithLocation'
        MethodSignature
          Identifier: '
        /**
         * Get all the dependencies of the file
         */
        getAllDependencies'
          Parameter
            Identifier: 'sourceFile'
            TypeReference
              Identifier: ' SourceFile'
          TypeOperator
            ArrayType
              StringKeyword
        MethodSignature
          Identifier: '
        /**
         * Gets the semantic diagnostics from the program corresponding to this state of file (if provided) or whole program
         * The semantic diagnostics are cached and managed here
         * Note that it is assumed that when asked about semantic diagnostics through this API,
         * the file has been taken out of affected files so it is safe to use cache or get from program and cache the diagnostics
         * In case of SemanticDiagnosticsBuilderProgram if the source file is not provided,
         * it will iterate through all the affected files, to ensure that cache stays valid and yet provide a way to get all semantic diagnostics
         */
        getSemanticDiagnostics'
          Parameter
            Identifier: 'sourceFile'
            QuestionToken
            TypeReference
              Identifier: ' SourceFile'
          Parameter
            Identifier: ' cancellationToken'
            QuestionToken
            TypeReference
              Identifier: ' CancellationToken'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Diagnostic'
        MethodSignature
          Identifier: '
        /**
         * Emits the JavaScript and declaration files.
         * When targetSource file is specified, emits the files corresponding to that source file,
         * otherwise for the whole program.
         * In case of EmitAndSemanticDiagnosticsBuilderProgram, when targetSourceFile is specified,
         * it is assumed that that file is handled from affected file list. If targetSourceFile is not specified,
         * it will only emit all the affected files instead of whole program
         *
         * The first of writeFile if provided, writeFile of BuilderProgramHost if provided, writeFile of compiler host
         * in that order would be used to write the files
         */
        emit'
          Parameter
            Identifier: 'targetSourceFile'
            QuestionToken
            TypeReference
              Identifier: ' SourceFile'
          Parameter
            Identifier: ' writeFile'
            QuestionToken
            TypeReference
              Identifier: ' WriteFileCallback'
          Parameter
            Identifier: ' cancellationToken'
            QuestionToken
            TypeReference
              Identifier: ' CancellationToken'
          Parameter
            Identifier: ' emitOnlyDtsFiles'
            QuestionToken
            BooleanKeyword
          Parameter
            Identifier: ' customTransformers'
            QuestionToken
            TypeReference
              Identifier: ' CustomTransformers'
          TypeReference
            Identifier: ' EmitResult'
        MethodSignature
          Identifier: '
        /**
         * Get the current directory of the program
         */
        getCurrentDirectory'
          StringKeyword
      InterfaceDeclaration
        Identifier: ' SemanticDiagnosticsBuilderProgram'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' BuilderProgram'
        MethodSignature
          Identifier: '
        /**
         * Gets the semantic diagnostics from the program for the next affected file and caches it
         * Returns undefined if the iteration is complete
         */
        getSemanticDiagnosticsOfNextAffectedFile'
          Parameter
            Identifier: 'cancellationToken'
            QuestionToken
            TypeReference
              Identifier: ' CancellationToken'
          Parameter
            Identifier: ' ignoreSourceFile'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'sourceFile'
                TypeReference
                  Identifier: ' SourceFile'
              BooleanKeyword
          TypeReference
            Identifier: ' AffectedFileResult'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' Diagnostic'
      InterfaceDeclaration
        Identifier: ' EmitAndSemanticDiagnosticsBuilderProgram'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' SemanticDiagnosticsBuilderProgram'
        MethodSignature
          Identifier: '
        /**
         * Emits the next affected file's emit result (EmitResult and sourceFiles emitted) or returns undefined if iteration is complete
         * The first of writeFile if provided, writeFile of BuilderProgramHost if provided, writeFile of compiler host
         * in that order would be used to write the files
         */
        emitNextAffectedFile'
          Parameter
            Identifier: 'writeFile'
            QuestionToken
            TypeReference
              Identifier: ' WriteFileCallback'
          Parameter
            Identifier: ' cancellationToken'
            QuestionToken
            TypeReference
              Identifier: ' CancellationToken'
          Parameter
            Identifier: ' emitOnlyDtsFiles'
            QuestionToken
            BooleanKeyword
          Parameter
            Identifier: ' customTransformers'
            QuestionToken
            TypeReference
              Identifier: ' CustomTransformers'
          TypeReference
            Identifier: ' AffectedFileResult'
            TypeReference
              Identifier: 'EmitResult'
      FunctionDeclaration
        Identifier: ' readBuilderProgram'
        Parameter
          Identifier: 'compilerOptions'
          TypeReference
            Identifier: ' CompilerOptions'
        Parameter
          Identifier: ' host'
          TypeReference
            Identifier: ' ReadBuildProgramHost'
        UnionType
          TypeReference
            Identifier: ' EmitAndSemanticDiagnosticsBuilderProgram'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' createIncrementalCompilerHost'
        Parameter
          Identifier: 'options'
          TypeReference
            Identifier: ' CompilerOptions'
        Parameter
          Identifier: ' system'
          QuestionToken
          TypeReference
            Identifier: ' System'
        TypeReference
          Identifier: ' CompilerHost'
      FunctionDeclaration
        Identifier: ' createIncrementalProgram'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' BuilderProgram'
          TypeReference
            Identifier: ' EmitAndSemanticDiagnosticsBuilderProgram'
        Parameter
          ObjectBindingPattern
            BindingElement
              Identifier: ' rootNames'
            BindingElement
              Identifier: ' options'
            BindingElement
              Identifier: ' configFileParsingDiagnostics'
            BindingElement
              Identifier: ' projectReferences'
            BindingElement
              Identifier: ' host'
            BindingElement
              Identifier: ' createProgram'
          TypeReference
            Identifier: ' IncrementalProgramOptions'
            TypeReference
              Identifier: 'T'
        TypeReference
          Identifier: ' T'
      FunctionDeclaration
        Identifier: ' createWatchCompilerHost'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' BuilderProgram'
        Parameter
          Identifier: 'configFileName'
          StringKeyword
        Parameter
          Identifier: ' optionsToExtend'
          UnionType
            TypeReference
              Identifier: ' CompilerOptions'
            UndefinedKeyword
        Parameter
          Identifier: ' system'
          TypeReference
            Identifier: ' System'
        Parameter
          Identifier: ' createProgram'
          QuestionToken
          TypeReference
            Identifier: ' CreateProgram'
            TypeReference
              Identifier: 'T'
        Parameter
          Identifier: ' reportDiagnostic'
          QuestionToken
          TypeReference
            Identifier: ' DiagnosticReporter'
        Parameter
          Identifier: ' reportWatchStatus'
          QuestionToken
          TypeReference
            Identifier: ' WatchStatusReporter'
        Parameter
          Identifier: ' watchOptionsToExtend'
          QuestionToken
          TypeReference
            Identifier: ' WatchOptions'
        Parameter
          Identifier: ' extraFileExtensions'
          QuestionToken
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' FileExtensionInfo'
        TypeReference
          Identifier: ' WatchCompilerHostOfConfigFile'
          TypeReference
            Identifier: 'T'
      FunctionDeclaration
        Identifier: ' createWatchCompilerHost'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' BuilderProgram'
        Parameter
          Identifier: 'rootFiles'
          ArrayType
            StringKeyword
        Parameter
          Identifier: ' options'
          TypeReference
            Identifier: ' CompilerOptions'
        Parameter
          Identifier: ' system'
          TypeReference
            Identifier: ' System'
        Parameter
          Identifier: ' createProgram'
          QuestionToken
          TypeReference
            Identifier: ' CreateProgram'
            TypeReference
              Identifier: 'T'
        Parameter
          Identifier: ' reportDiagnostic'
          QuestionToken
          TypeReference
            Identifier: ' DiagnosticReporter'
        Parameter
          Identifier: ' reportWatchStatus'
          QuestionToken
          TypeReference
            Identifier: ' WatchStatusReporter'
        Parameter
          Identifier: ' projectReferences'
          QuestionToken
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' ProjectReference'
        Parameter
          Identifier: ' watchOptions'
          QuestionToken
          TypeReference
            Identifier: ' WatchOptions'
        TypeReference
          Identifier: ' WatchCompilerHostOfFilesAndCompilerOptions'
          TypeReference
            Identifier: 'T'
      FunctionDeclaration
        Identifier: ' createWatchProgram'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' BuilderProgram'
        Parameter
          Identifier: 'host'
          TypeReference
            Identifier: ' WatchCompilerHostOfFilesAndCompilerOptions'
            TypeReference
              Identifier: 'T'
        TypeReference
          Identifier: ' WatchOfFilesAndCompilerOptions'
          TypeReference
            Identifier: 'T'
      FunctionDeclaration
        Identifier: ' createWatchProgram'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' BuilderProgram'
        Parameter
          Identifier: 'host'
          TypeReference
            Identifier: ' WatchCompilerHostOfConfigFile'
            TypeReference
              Identifier: 'T'
        TypeReference
          Identifier: ' WatchOfConfigFile'
          TypeReference
            Identifier: 'T'
      InterfaceDeclaration
        Identifier: ' ReadBuildProgramHost'
        MethodSignature
          Identifier: '
        useCaseSensitiveFileNames'
          BooleanKeyword
        MethodSignature
          Identifier: '
        getCurrentDirectory'
          StringKeyword
        MethodSignature
          Identifier: '
        readFile'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          UnionType
            StringKeyword
            UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' IncrementalProgramOptions'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' BuilderProgram'
        PropertySignature
          Identifier: '
        rootNames'
          TypeOperator
            ArrayType
              StringKeyword
        PropertySignature
          Identifier: '
        options'
          TypeReference
            Identifier: ' CompilerOptions'
        PropertySignature
          Identifier: '
        configFileParsingDiagnostics'
          QuestionToken
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Diagnostic'
        PropertySignature
          Identifier: '
        projectReferences'
          QuestionToken
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' ProjectReference'
        PropertySignature
          Identifier: '
        host'
          QuestionToken
          TypeReference
            Identifier: ' CompilerHost'
        PropertySignature
          Identifier: '
        createProgram'
          QuestionToken
          TypeReference
            Identifier: ' CreateProgram'
            TypeReference
              Identifier: 'T'
      TypeAliasDeclaration
        Identifier: ' WatchStatusReporter'
        FunctionType
          Parameter
            Identifier: 'diagnostic'
            TypeReference
              Identifier: ' Diagnostic'
          Parameter
            Identifier: ' newLine'
            StringKeyword
          Parameter
            Identifier: ' options'
            TypeReference
              Identifier: ' CompilerOptions'
          Parameter
            Identifier: ' errorCount'
            QuestionToken
            NumberKeyword
          VoidKeyword
      TypeAliasDeclaration
        Identifier: ' CreateProgram'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' BuilderProgram'
        FunctionType
          Parameter
            Identifier: 'rootNames'
            UnionType
              TypeOperator
                ArrayType
                  StringKeyword
              UndefinedKeyword
          Parameter
            Identifier: ' options'
            UnionType
              TypeReference
                Identifier: ' CompilerOptions'
              UndefinedKeyword
          Parameter
            Identifier: ' host'
            QuestionToken
            TypeReference
              Identifier: ' CompilerHost'
          Parameter
            Identifier: ' oldProgram'
            QuestionToken
            TypeReference
              Identifier: ' T'
          Parameter
            Identifier: ' configFileParsingDiagnostics'
            QuestionToken
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' Diagnostic'
          Parameter
            Identifier: ' projectReferences'
            QuestionToken
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' ProjectReference'
              UndefinedKeyword
          TypeReference
            Identifier: ' T'
      InterfaceDeclaration
        Identifier: ' WatchHost'
        MethodSignature
          Identifier: '
        /** If provided, called with Diagnostic message that informs about change in watch status */
        onWatchStatusChange'
          QuestionToken
          Parameter
            Identifier: 'diagnostic'
            TypeReference
              Identifier: ' Diagnostic'
          Parameter
            Identifier: ' newLine'
            StringKeyword
          Parameter
            Identifier: ' options'
            TypeReference
              Identifier: ' CompilerOptions'
          Parameter
            Identifier: ' errorCount'
            QuestionToken
            NumberKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        /** Used to watch changes in source files, missing files needed to update the program or config file */
        watchFile'
          Parameter
            Identifier: 'path'
            StringKeyword
          Parameter
            Identifier: ' callback'
            TypeReference
              Identifier: ' FileWatcherCallback'
          Parameter
            Identifier: ' pollingInterval'
            QuestionToken
            NumberKeyword
          Parameter
            Identifier: ' options'
            QuestionToken
            TypeReference
              Identifier: ' WatchOptions'
          TypeReference
            Identifier: ' FileWatcher'
        MethodSignature
          Identifier: '
        /** Used to watch resolved module's failed lookup locations, config file specs, type roots where auto type reference directives are added */
        watchDirectory'
          Parameter
            Identifier: 'path'
            StringKeyword
          Parameter
            Identifier: ' callback'
            TypeReference
              Identifier: ' DirectoryWatcherCallback'
          Parameter
            Identifier: ' recursive'
            QuestionToken
            BooleanKeyword
          Parameter
            Identifier: ' options'
            QuestionToken
            TypeReference
              Identifier: ' WatchOptions'
          TypeReference
            Identifier: ' FileWatcher'
        MethodSignature
          Identifier: '
        /** If provided, will be used to set delayed compilation, so that multiple changes in short span are compiled together */
        setTimeout'
          QuestionToken
          Parameter
            Identifier: 'callback'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          Parameter
            Identifier: ' ms'
            NumberKeyword
          Parameter
            DotDotDotToken
            Identifier: 'args'
            ArrayType
              AnyKeyword
          AnyKeyword
        MethodSignature
          Identifier: '
        /** If provided, will be used to reset existing delayed compilation */
        clearTimeout'
          QuestionToken
          Parameter
            Identifier: 'timeoutId'
            AnyKeyword
          VoidKeyword
        PropertySignature
          Identifier: '
        preferNonRecursiveWatch'
          QuestionToken
          BooleanKeyword
      InterfaceDeclaration
        Identifier: ' ProgramHost'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' BuilderProgram'
        PropertySignature
          Identifier: '
        /**
         * Used to create the program when need for program creation or recreation detected
         */
        createProgram'
          TypeReference
            Identifier: ' CreateProgram'
            TypeReference
              Identifier: 'T'
        MethodSignature
          Identifier: '
        useCaseSensitiveFileNames'
          BooleanKeyword
        MethodSignature
          Identifier: '
        getNewLine'
          StringKeyword
        MethodSignature
          Identifier: '
        getCurrentDirectory'
          StringKeyword
        MethodSignature
          Identifier: '
        getDefaultLibFileName'
          Parameter
            Identifier: 'options'
            TypeReference
              Identifier: ' CompilerOptions'
          StringKeyword
        MethodSignature
          Identifier: '
        getDefaultLibLocation'
          QuestionToken
          StringKeyword
        MethodSignature
          Identifier: '
        createHash'
          QuestionToken
          Parameter
            Identifier: 'data'
            StringKeyword
          StringKeyword
        MethodSignature
          Identifier: '
        /**
         * Use to check file presence for source files and
         * if resolveModuleNames is not provided (complier is in charge of module resolution) then module files as well
         */
        fileExists'
          Parameter
            Identifier: 'path'
            StringKeyword
          BooleanKeyword
        MethodSignature
          Identifier: '
        /**
         * Use to read file text for source files and
         * if resolveModuleNames is not provided (complier is in charge of module resolution) then module files as well
         */
        readFile'
          Parameter
            Identifier: 'path'
            StringKeyword
          Parameter
            Identifier: ' encoding'
            QuestionToken
            StringKeyword
          UnionType
            StringKeyword
            UndefinedKeyword
        MethodSignature
          Identifier: '
        /** If provided, used for module resolution as well as to handle directory structure */
        directoryExists'
          QuestionToken
          Parameter
            Identifier: 'path'
            StringKeyword
          BooleanKeyword
        MethodSignature
          Identifier: '
        /** If provided, used in resolutions as well as handling directory structure */
        getDirectories'
          QuestionToken
          Parameter
            Identifier: 'path'
            StringKeyword
          ArrayType
            StringKeyword
        MethodSignature
          Identifier: '
        /** If provided, used to cache and handle directory structure modifications */
        readDirectory'
          QuestionToken
          Parameter
            Identifier: 'path'
            StringKeyword
          Parameter
            Identifier: ' extensions'
            QuestionToken
            TypeOperator
              ArrayType
                StringKeyword
          Parameter
            Identifier: ' exclude'
            QuestionToken
            TypeOperator
              ArrayType
                StringKeyword
          Parameter
            Identifier: ' include'
            QuestionToken
            TypeOperator
              ArrayType
                StringKeyword
          Parameter
            Identifier: ' depth'
            QuestionToken
            NumberKeyword
          ArrayType
            StringKeyword
        MethodSignature
          Identifier: '
        /** Symbol links resolution */
        realpath'
          QuestionToken
          Parameter
            Identifier: 'path'
            StringKeyword
          StringKeyword
        MethodSignature
          Identifier: '
        /** If provided would be used to write log about compilation */
        trace'
          QuestionToken
          Parameter
            Identifier: 's'
            StringKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        /** If provided is used to get the environment variable */
        getEnvironmentVariable'
          QuestionToken
          Parameter
            Identifier: 'name'
            StringKeyword
          UnionType
            StringKeyword
            UndefinedKeyword
        MethodSignature
          Identifier: '
        /**
         * @deprecated supply resolveModuleNameLiterals instead for resolution that can handle newer resolution modes like nodenext
         *
         * If provided, used to resolve the module names, otherwise typescript's default module resolution
         */
        resolveModuleNames'
          QuestionToken
          Parameter
            Identifier: 'moduleNames'
            ArrayType
              StringKeyword
          Parameter
            Identifier: ' containingFile'
            StringKeyword
          Parameter
            Identifier: ' reusedNames'
            UnionType
              ArrayType
                StringKeyword
              UndefinedKeyword
          Parameter
            Identifier: ' redirectedReference'
            UnionType
              TypeReference
                Identifier: ' ResolvedProjectReference'
              UndefinedKeyword
          Parameter
            Identifier: ' options'
            TypeReference
              Identifier: ' CompilerOptions'
          Parameter
            Identifier: ' containingSourceFile'
            QuestionToken
            TypeReference
              Identifier: ' SourceFile'
          ArrayType
            ParenthesizedType
              UnionType
                TypeReference
                  Identifier: 'ResolvedModule'
                UndefinedKeyword
        MethodSignature
          Identifier: '
        /**
         * @deprecated supply resolveTypeReferenceDirectiveReferences instead for resolution that can handle newer resolution modes like nodenext
         *
         * If provided, used to resolve type reference directives, otherwise typescript's default resolution
         */
        resolveTypeReferenceDirectives'
          QuestionToken
          Parameter
            Identifier: 'typeReferenceDirectiveNames'
            UnionType
              ArrayType
                StringKeyword
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' FileReference'
          Parameter
            Identifier: ' containingFile'
            StringKeyword
          Parameter
            Identifier: ' redirectedReference'
            UnionType
              TypeReference
                Identifier: ' ResolvedProjectReference'
              UndefinedKeyword
          Parameter
            Identifier: ' options'
            TypeReference
              Identifier: ' CompilerOptions'
          Parameter
            Identifier: ' containingFileMode'
            QuestionToken
            TypeReference
              Identifier: ' ResolutionMode'
          ArrayType
            ParenthesizedType
              UnionType
                TypeReference
                  Identifier: 'ResolvedTypeReferenceDirective'
                UndefinedKeyword
        MethodSignature
          Identifier: '
        resolveModuleNameLiterals'
          QuestionToken
          Parameter
            Identifier: 'moduleLiterals'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' StringLiteralLike'
          Parameter
            Identifier: ' containingFile'
            StringKeyword
          Parameter
            Identifier: ' redirectedReference'
            UnionType
              TypeReference
                Identifier: ' ResolvedProjectReference'
              UndefinedKeyword
          Parameter
            Identifier: ' options'
            TypeReference
              Identifier: ' CompilerOptions'
          Parameter
            Identifier: ' containingSourceFile'
            TypeReference
              Identifier: ' SourceFile'
          Parameter
            Identifier: ' reusedNames'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' StringLiteralLike'
              UndefinedKeyword
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' ResolvedModuleWithFailedLookupLocations'
        MethodSignature
          Identifier: '
        resolveTypeReferenceDirectiveReferences'
          QuestionToken
          TypeParameter
            Identifier: 'T'
            UnionType
              TypeReference
                Identifier: ' FileReference'
              StringKeyword
          Parameter
            Identifier: 'typeDirectiveReferences'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' T'
          Parameter
            Identifier: ' containingFile'
            StringKeyword
          Parameter
            Identifier: ' redirectedReference'
            UnionType
              TypeReference
                Identifier: ' ResolvedProjectReference'
              UndefinedKeyword
          Parameter
            Identifier: ' options'
            TypeReference
              Identifier: ' CompilerOptions'
          Parameter
            Identifier: ' containingSourceFile'
            UnionType
              TypeReference
                Identifier: ' SourceFile'
              UndefinedKeyword
          Parameter
            Identifier: ' reusedNames'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' T'
              UndefinedKeyword
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' ResolvedTypeReferenceDirectiveWithFailedLookupLocations'
        MethodSignature
          Identifier: '
        /** If provided along with custom resolveModuleNames or resolveTypeReferenceDirectives, used to determine if unchanged file path needs to re-resolve modules/type reference directives */
        hasInvalidatedResolutions'
          QuestionToken
          Parameter
            Identifier: 'filePath'
            TypeReference
              Identifier: ' Path'
          BooleanKeyword
        MethodSignature
          Identifier: '
        /**
         * Returns the module resolution cache used by a provided `resolveModuleNames` implementation so that any non-name module resolution operations (eg, package.json lookup) can reuse it
         */
        getModuleResolutionCache'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' ModuleResolutionCache'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        jsDocParsingMode'
          QuestionToken
          TypeReference
            Identifier: ' JSDocParsingMode'
      InterfaceDeclaration
        Identifier: ' WatchCompilerHost'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' BuilderProgram'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ProgramHost'
            TypeReference
              Identifier: 'T'
          ExpressionWithTypeArguments
            Identifier: ' WatchHost'
        MethodSignature
          Identifier: '
        /** Instead of using output d.ts file from project reference, use its source file */
        useSourceOfProjectReferenceRedirect'
          QuestionToken
          BooleanKeyword
        MethodSignature
          Identifier: '
        /** If provided, use this method to get parsed command lines for referenced projects */
        getParsedCommandLine'
          QuestionToken
          Parameter
            Identifier: 'fileName'
            StringKeyword
          UnionType
            TypeReference
              Identifier: ' ParsedCommandLine'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        /** If provided, callback to invoke after every new program creation */
        afterProgramCreate'
          QuestionToken
          Parameter
            Identifier: 'program'
            TypeReference
              Identifier: ' T'
          VoidKeyword
      InterfaceDeclaration
        Identifier: ' WatchCompilerHostOfFilesAndCompilerOptions'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' BuilderProgram'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' WatchCompilerHost'
            TypeReference
              Identifier: 'T'
        PropertySignature
          Identifier: '
        /** root files to use to generate program */
        rootFiles'
          ArrayType
            StringKeyword
        PropertySignature
          Identifier: '
        /** Compiler options */
        options'
          TypeReference
            Identifier: ' CompilerOptions'
        PropertySignature
          Identifier: '
        watchOptions'
          QuestionToken
          TypeReference
            Identifier: ' WatchOptions'
        PropertySignature
          Identifier: '
        /** Project References */
        projectReferences'
          QuestionToken
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' ProjectReference'
      InterfaceDeclaration
        Identifier: ' WatchCompilerHostOfConfigFile'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' BuilderProgram'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' WatchCompilerHost'
            TypeReference
              Identifier: 'T'
          ExpressionWithTypeArguments
            Identifier: ' ConfigFileDiagnosticsReporter'
        PropertySignature
          Identifier: '
        /** Name of the config file to compile */
        configFileName'
          StringKeyword
        PropertySignature
          Identifier: '
        /** Options to extend */
        optionsToExtend'
          QuestionToken
          TypeReference
            Identifier: ' CompilerOptions'
        PropertySignature
          Identifier: '
        watchOptionsToExtend'
          QuestionToken
          TypeReference
            Identifier: ' WatchOptions'
        PropertySignature
          Identifier: '
        extraFileExtensions'
          QuestionToken
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' FileExtensionInfo'
        MethodSignature
          Identifier: '
        /**
         * Used to generate source file names from the config file and its include, exclude, files rules
         * and also to cache the directory stucture
         */
        readDirectory'
          Parameter
            Identifier: 'path'
            StringKeyword
          Parameter
            Identifier: ' extensions'
            QuestionToken
            TypeOperator
              ArrayType
                StringKeyword
          Parameter
            Identifier: ' exclude'
            QuestionToken
            TypeOperator
              ArrayType
                StringKeyword
          Parameter
            Identifier: ' include'
            QuestionToken
            TypeOperator
              ArrayType
                StringKeyword
          Parameter
            Identifier: ' depth'
            QuestionToken
            NumberKeyword
          ArrayType
            StringKeyword
      InterfaceDeclaration
        Identifier: ' Watch'
        TypeParameter
          Identifier: 'T'
        MethodSignature
          Identifier: '
        /** Synchronize with host and get updated program */
        getProgram'
          TypeReference
            Identifier: ' T'
        MethodSignature
          Identifier: '
        /** Closes the watch */
        close'
          VoidKeyword
      InterfaceDeclaration
        Identifier: ' WatchOfConfigFile'
        TypeParameter
          Identifier: 'T'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Watch'
            TypeReference
              Identifier: 'T'
      InterfaceDeclaration
        Identifier: ' WatchOfFilesAndCompilerOptions'
        TypeParameter
          Identifier: 'T'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Watch'
            TypeReference
              Identifier: 'T'
        MethodSignature
          Identifier: '
        /** Updates the root files in the program, only if this is not config file compilation */
        updateRootFileNames'
          Parameter
            Identifier: 'fileNames'
            ArrayType
              StringKeyword
          VoidKeyword
      FunctionDeclaration
        Identifier: ' createBuilderStatusReporter'
        Parameter
          Identifier: 'system'
          TypeReference
            Identifier: ' System'
        Parameter
          Identifier: ' pretty'
          QuestionToken
          BooleanKeyword
        TypeReference
          Identifier: ' DiagnosticReporter'
      FunctionDeclaration
        Identifier: ' createSolutionBuilderHost'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' BuilderProgram'
          TypeReference
            Identifier: ' EmitAndSemanticDiagnosticsBuilderProgram'
        Parameter
          Identifier: 'system'
          QuestionToken
          TypeReference
            Identifier: ' System'
        Parameter
          Identifier: ' createProgram'
          QuestionToken
          TypeReference
            Identifier: ' CreateProgram'
            TypeReference
              Identifier: 'T'
        Parameter
          Identifier: ' reportDiagnostic'
          QuestionToken
          TypeReference
            Identifier: ' DiagnosticReporter'
        Parameter
          Identifier: ' reportSolutionBuilderStatus'
          QuestionToken
          TypeReference
            Identifier: ' DiagnosticReporter'
        Parameter
          Identifier: ' reportErrorSummary'
          QuestionToken
          TypeReference
            Identifier: ' ReportEmitErrorSummary'
        TypeReference
          Identifier: ' SolutionBuilderHost'
          TypeReference
            Identifier: 'T'
      FunctionDeclaration
        Identifier: ' createSolutionBuilderWithWatchHost'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' BuilderProgram'
          TypeReference
            Identifier: ' EmitAndSemanticDiagnosticsBuilderProgram'
        Parameter
          Identifier: 'system'
          QuestionToken
          TypeReference
            Identifier: ' System'
        Parameter
          Identifier: ' createProgram'
          QuestionToken
          TypeReference
            Identifier: ' CreateProgram'
            TypeReference
              Identifier: 'T'
        Parameter
          Identifier: ' reportDiagnostic'
          QuestionToken
          TypeReference
            Identifier: ' DiagnosticReporter'
        Parameter
          Identifier: ' reportSolutionBuilderStatus'
          QuestionToken
          TypeReference
            Identifier: ' DiagnosticReporter'
        Parameter
          Identifier: ' reportWatchStatus'
          QuestionToken
          TypeReference
            Identifier: ' WatchStatusReporter'
        TypeReference
          Identifier: ' SolutionBuilderWithWatchHost'
          TypeReference
            Identifier: 'T'
      FunctionDeclaration
        Identifier: ' createSolutionBuilder'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' BuilderProgram'
        Parameter
          Identifier: 'host'
          TypeReference
            Identifier: ' SolutionBuilderHost'
            TypeReference
              Identifier: 'T'
        Parameter
          Identifier: ' rootNames'
          TypeOperator
            ArrayType
              StringKeyword
        Parameter
          Identifier: ' defaultOptions'
          TypeReference
            Identifier: ' BuildOptions'
        TypeReference
          Identifier: ' SolutionBuilder'
          TypeReference
            Identifier: 'T'
      FunctionDeclaration
        Identifier: ' createSolutionBuilderWithWatch'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' BuilderProgram'
        Parameter
          Identifier: 'host'
          TypeReference
            Identifier: ' SolutionBuilderWithWatchHost'
            TypeReference
              Identifier: 'T'
        Parameter
          Identifier: ' rootNames'
          TypeOperator
            ArrayType
              StringKeyword
        Parameter
          Identifier: ' defaultOptions'
          TypeReference
            Identifier: ' BuildOptions'
        Parameter
          Identifier: ' baseWatchOptions'
          QuestionToken
          TypeReference
            Identifier: ' WatchOptions'
        TypeReference
          Identifier: ' SolutionBuilder'
          TypeReference
            Identifier: 'T'
      InterfaceDeclaration
        Identifier: ' BuildOptions'
        PropertySignature
          Identifier: '
        dry'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        force'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        verbose'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        stopBuildOnErrors'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        incremental'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        assumeChangesOnlyAffectDirectDependencies'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        declaration'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        declarationMap'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        emitDeclarationOnly'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        sourceMap'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        inlineSourceMap'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        traceResolution'
          QuestionToken
          BooleanKeyword
        IndexSignature
          Parameter
            Identifier: 'option'
            StringKeyword
          UnionType
            TypeReference
              Identifier: ' CompilerOptionsValue'
            UndefinedKeyword
      TypeAliasDeclaration
        Identifier: ' ReportEmitErrorSummary'
        FunctionType
          Parameter
            Identifier: 'errorCount'
            NumberKeyword
          Parameter
            Identifier: ' filesInError'
            ArrayType
              ParenthesizedType
                UnionType
                  TypeReference
                    Identifier: 'ReportFileInError'
                  UndefinedKeyword
          VoidKeyword
      InterfaceDeclaration
        Identifier: ' ReportFileInError'
        PropertySignature
          Identifier: '
        fileName'
          StringKeyword
        PropertySignature
          Identifier: '
        line'
          NumberKeyword
      InterfaceDeclaration
        Identifier: ' SolutionBuilderHostBase'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' BuilderProgram'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ProgramHost'
            TypeReference
              Identifier: 'T'
        MethodSignature
          Identifier: '
        createDirectory'
          QuestionToken
          Parameter
            Identifier: 'path'
            StringKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        /**
         * Should provide create directory and writeFile if done of invalidatedProjects is not invoked with
         * writeFileCallback
         */
        writeFile'
          QuestionToken
          Parameter
            Identifier: 'path'
            StringKeyword
          Parameter
            Identifier: ' data'
            StringKeyword
          Parameter
            Identifier: ' writeByteOrderMark'
            QuestionToken
            BooleanKeyword
          VoidKeyword
        PropertySignature
          Identifier: '
        getCustomTransformers'
          QuestionToken
          FunctionType
            Parameter
              Identifier: 'project'
              StringKeyword
            UnionType
              TypeReference
                Identifier: ' CustomTransformers'
              UndefinedKeyword
        MethodSignature
          Identifier: '
        getModifiedTime'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          UnionType
            TypeReference
              Identifier: ' Date'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        setModifiedTime'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' date'
            TypeReference
              Identifier: ' Date'
          VoidKeyword
        MethodSignature
          Identifier: '
        deleteFile'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        getParsedCommandLine'
          QuestionToken
          Parameter
            Identifier: 'fileName'
            StringKeyword
          UnionType
            TypeReference
              Identifier: ' ParsedCommandLine'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        reportDiagnostic'
          TypeReference
            Identifier: ' DiagnosticReporter'
        PropertySignature
          Identifier: '
        reportSolutionBuilderStatus'
          TypeReference
            Identifier: ' DiagnosticReporter'
        MethodSignature
          Identifier: '
        afterProgramEmitAndDiagnostics'
          QuestionToken
          Parameter
            Identifier: 'program'
            TypeReference
              Identifier: ' T'
          VoidKeyword
      InterfaceDeclaration
        Identifier: ' SolutionBuilderHost'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' BuilderProgram'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' SolutionBuilderHostBase'
            TypeReference
              Identifier: 'T'
        PropertySignature
          Identifier: '
        reportErrorSummary'
          QuestionToken
          TypeReference
            Identifier: ' ReportEmitErrorSummary'
      InterfaceDeclaration
        Identifier: ' SolutionBuilderWithWatchHost'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' BuilderProgram'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' SolutionBuilderHostBase'
            TypeReference
              Identifier: 'T'
          ExpressionWithTypeArguments
            Identifier: ' WatchHost'
      InterfaceDeclaration
        Identifier: ' SolutionBuilder'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' BuilderProgram'
        MethodSignature
          Identifier: '
        build'
          Parameter
            Identifier: 'project'
            QuestionToken
            StringKeyword
          Parameter
            Identifier: ' cancellationToken'
            QuestionToken
            TypeReference
              Identifier: ' CancellationToken'
          Parameter
            Identifier: ' writeFile'
            QuestionToken
            TypeReference
              Identifier: ' WriteFileCallback'
          Parameter
            Identifier: ' getCustomTransformers'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'project'
                StringKeyword
              TypeReference
                Identifier: ' CustomTransformers'
          TypeReference
            Identifier: ' ExitStatus'
        MethodSignature
          Identifier: '
        clean'
          Parameter
            Identifier: 'project'
            QuestionToken
            StringKeyword
          TypeReference
            Identifier: ' ExitStatus'
        MethodSignature
          Identifier: '
        buildReferences'
          Parameter
            Identifier: 'project'
            StringKeyword
          Parameter
            Identifier: ' cancellationToken'
            QuestionToken
            TypeReference
              Identifier: ' CancellationToken'
          Parameter
            Identifier: ' writeFile'
            QuestionToken
            TypeReference
              Identifier: ' WriteFileCallback'
          Parameter
            Identifier: ' getCustomTransformers'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'project'
                StringKeyword
              TypeReference
                Identifier: ' CustomTransformers'
          TypeReference
            Identifier: ' ExitStatus'
        MethodSignature
          Identifier: '
        cleanReferences'
          Parameter
            Identifier: 'project'
            QuestionToken
            StringKeyword
          TypeReference
            Identifier: ' ExitStatus'
        MethodSignature
          Identifier: '
        getNextInvalidatedProject'
          Parameter
            Identifier: 'cancellationToken'
            QuestionToken
            TypeReference
              Identifier: ' CancellationToken'
          UnionType
            TypeReference
              Identifier: ' InvalidatedProject'
              TypeReference
                Identifier: 'T'
            UndefinedKeyword
      EnumDeclaration
        Identifier: ' InvalidatedProjectKind'
        EnumMember
          Identifier: '
        Build'
          NumericLiteral
        EnumMember
          Identifier: '
        UpdateOutputFileStamps'
          NumericLiteral
      InterfaceDeclaration
        Identifier: ' InvalidatedProjectBase'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            Identifier: ' InvalidatedProjectKind'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' project'
          TypeReference
            Identifier: ' ResolvedConfigFileName'
        MethodSignature
          Identifier: '
        /**
         *  To dispose this project and ensure that all the necessary actions are taken and state is updated accordingly
         */
        done'
          Parameter
            Identifier: 'cancellationToken'
            QuestionToken
            TypeReference
              Identifier: ' CancellationToken'
          Parameter
            Identifier: ' writeFile'
            QuestionToken
            TypeReference
              Identifier: ' WriteFileCallback'
          Parameter
            Identifier: ' customTransformers'
            QuestionToken
            TypeReference
              Identifier: ' CustomTransformers'
          TypeReference
            Identifier: ' ExitStatus'
        MethodSignature
          Identifier: '
        getCompilerOptions'
          TypeReference
            Identifier: ' CompilerOptions'
        MethodSignature
          Identifier: '
        getCurrentDirectory'
          StringKeyword
      InterfaceDeclaration
        Identifier: ' UpdateOutputFileStampsProject'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' InvalidatedProjectBase'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' InvalidatedProjectKind'
              Identifier: 'UpdateOutputFileStamps'
        MethodSignature
          Identifier: '
        updateOutputFileStatmps'
          VoidKeyword
      InterfaceDeclaration
        Identifier: ' BuildInvalidedProject'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' BuilderProgram'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' InvalidatedProjectBase'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          TypeReference
            QualifiedName
              Identifier: ' InvalidatedProjectKind'
              Identifier: 'Build'
        MethodSignature
          Identifier: '
        getBuilderProgram'
          UnionType
            TypeReference
              Identifier: ' T'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getProgram'
          UnionType
            TypeReference
              Identifier: ' Program'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getSourceFile'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          UnionType
            TypeReference
              Identifier: ' SourceFile'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getSourceFiles'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' SourceFile'
        MethodSignature
          Identifier: '
        getOptionsDiagnostics'
          Parameter
            Identifier: 'cancellationToken'
            QuestionToken
            TypeReference
              Identifier: ' CancellationToken'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Diagnostic'
        MethodSignature
          Identifier: '
        getGlobalDiagnostics'
          Parameter
            Identifier: 'cancellationToken'
            QuestionToken
            TypeReference
              Identifier: ' CancellationToken'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Diagnostic'
        MethodSignature
          Identifier: '
        getConfigFileParsingDiagnostics'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Diagnostic'
        MethodSignature
          Identifier: '
        getSyntacticDiagnostics'
          Parameter
            Identifier: 'sourceFile'
            QuestionToken
            TypeReference
              Identifier: ' SourceFile'
          Parameter
            Identifier: ' cancellationToken'
            QuestionToken
            TypeReference
              Identifier: ' CancellationToken'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Diagnostic'
        MethodSignature
          Identifier: '
        getAllDependencies'
          Parameter
            Identifier: 'sourceFile'
            TypeReference
              Identifier: ' SourceFile'
          TypeOperator
            ArrayType
              StringKeyword
        MethodSignature
          Identifier: '
        getSemanticDiagnostics'
          Parameter
            Identifier: 'sourceFile'
            QuestionToken
            TypeReference
              Identifier: ' SourceFile'
          Parameter
            Identifier: ' cancellationToken'
            QuestionToken
            TypeReference
              Identifier: ' CancellationToken'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Diagnostic'
        MethodSignature
          Identifier: '
        getSemanticDiagnosticsOfNextAffectedFile'
          Parameter
            Identifier: 'cancellationToken'
            QuestionToken
            TypeReference
              Identifier: ' CancellationToken'
          Parameter
            Identifier: ' ignoreSourceFile'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'sourceFile'
                TypeReference
                  Identifier: ' SourceFile'
              BooleanKeyword
          TypeReference
            Identifier: ' AffectedFileResult'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' Diagnostic'
        MethodSignature
          Identifier: '
        emit'
          Parameter
            Identifier: 'targetSourceFile'
            QuestionToken
            TypeReference
              Identifier: ' SourceFile'
          Parameter
            Identifier: ' writeFile'
            QuestionToken
            TypeReference
              Identifier: ' WriteFileCallback'
          Parameter
            Identifier: ' cancellationToken'
            QuestionToken
            TypeReference
              Identifier: ' CancellationToken'
          Parameter
            Identifier: ' emitOnlyDtsFiles'
            QuestionToken
            BooleanKeyword
          Parameter
            Identifier: ' customTransformers'
            QuestionToken
            TypeReference
              Identifier: ' CustomTransformers'
          UnionType
            TypeReference
              Identifier: ' EmitResult'
            UndefinedKeyword
      TypeAliasDeclaration
        Identifier: ' InvalidatedProject'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' BuilderProgram'
        UnionType
          TypeReference
            Identifier: ' UpdateOutputFileStampsProject'
          TypeReference
            Identifier: ' BuildInvalidedProject'
            TypeReference
              Identifier: 'T'
      FunctionDeclaration
        Identifier: ' isBuildCommand'
        Parameter
          Identifier: 'commandLineArgs'
          TypeOperator
            ArrayType
              StringKeyword
        BooleanKeyword
      FunctionDeclaration
        Identifier: ' getDefaultFormatCodeSettings'
        Parameter
          Identifier: 'newLineCharacter'
          QuestionToken
          StringKeyword
        TypeReference
          Identifier: ' FormatCodeSettings'
      InterfaceDeclaration
        Identifier: ' IScriptSnapshot'
        MethodSignature
          Identifier: '
        /** Gets a portion of the script snapshot specified by [start, end). */
        getText'
          Parameter
            Identifier: 'start'
            NumberKeyword
          Parameter
            Identifier: ' end'
            NumberKeyword
          StringKeyword
        MethodSignature
          Identifier: '
        /** Gets the length of this script snapshot. */
        getLength'
          NumberKeyword
        MethodSignature
          Identifier: '
        /**
         * Gets the TextChangeRange that describe how the text changed between this text and
         * an older version.  This information is used by the incremental parser to determine
         * what sections of the script need to be re-parsed.  'undefined' can be returned if the
         * change range cannot be determined.  However, in that case, incremental parsing will
         * not happen and the entire document will be re - parsed.
         */
        getChangeRange'
          Parameter
            Identifier: 'oldSnapshot'
            TypeReference
              Identifier: ' IScriptSnapshot'
          UnionType
            TypeReference
              Identifier: ' TextChangeRange'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        /** Releases all resources held by this script snapshot */
        dispose'
          QuestionToken
          VoidKeyword
      ModuleDeclaration
        Identifier: ' ScriptSnapshot'
        ModuleBlock
          FunctionDeclaration
            Identifier: ' fromString'
            Parameter
              Identifier: 'text'
              StringKeyword
            TypeReference
              Identifier: ' IScriptSnapshot'
      InterfaceDeclaration
        Identifier: ' PreProcessedFileInfo'
        PropertySignature
          Identifier: '
        referencedFiles'
          ArrayType
            TypeReference
              Identifier: ' FileReference'
        PropertySignature
          Identifier: '
        typeReferenceDirectives'
          ArrayType
            TypeReference
              Identifier: ' FileReference'
        PropertySignature
          Identifier: '
        libReferenceDirectives'
          ArrayType
            TypeReference
              Identifier: ' FileReference'
        PropertySignature
          Identifier: '
        importedFiles'
          ArrayType
            TypeReference
              Identifier: ' FileReference'
        PropertySignature
          Identifier: '
        ambientExternalModules'
          QuestionToken
          ArrayType
            StringKeyword
        PropertySignature
          Identifier: '
        isLibFile'
          BooleanKeyword
      InterfaceDeclaration
        Identifier: ' HostCancellationToken'
        MethodSignature
          Identifier: '
        isCancellationRequested'
          BooleanKeyword
      InterfaceDeclaration
        Identifier: ' InstallPackageOptions'
        PropertySignature
          Identifier: '
        fileName'
          TypeReference
            Identifier: ' Path'
        PropertySignature
          Identifier: '
        packageName'
          StringKeyword
      InterfaceDeclaration
        Identifier: ' PerformanceEvent'
        PropertySignature
          Identifier: '
        kind'
          UnionType
            LiteralType
              StringLiteral
            LiteralType
              StringLiteral
        PropertySignature
          Identifier: '
        durationMs'
          NumberKeyword
      EnumDeclaration
        Identifier: ' LanguageServiceMode'
        EnumMember
          Identifier: '
        Semantic'
          NumericLiteral
        EnumMember
          Identifier: '
        PartialSemantic'
          NumericLiteral
        EnumMember
          Identifier: '
        Syntactic'
          NumericLiteral
      InterfaceDeclaration
        Identifier: ' IncompleteCompletionsCache'
        MethodSignature
          Identifier: '
        get'
          UnionType
            TypeReference
              Identifier: ' CompletionInfo'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        set'
          Parameter
            Identifier: 'response'
            TypeReference
              Identifier: ' CompletionInfo'
          VoidKeyword
        MethodSignature
          Identifier: '
        clear'
          VoidKeyword
      InterfaceDeclaration
        Identifier: ' LanguageServiceHost'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' GetEffectiveTypeRootsHost'
          ExpressionWithTypeArguments
            Identifier: ' MinimalResolutionCacheHost'
        MethodSignature
          Identifier: '
        getCompilationSettings'
          TypeReference
            Identifier: ' CompilerOptions'
        MethodSignature
          Identifier: '
        getNewLine'
          QuestionToken
          StringKeyword
        MethodSignature
          Identifier: '
        getProjectVersion'
          QuestionToken
          StringKeyword
        MethodSignature
          Identifier: '
        getScriptFileNames'
          ArrayType
            StringKeyword
        MethodSignature
          Identifier: '
        getScriptKind'
          QuestionToken
          Parameter
            Identifier: 'fileName'
            StringKeyword
          TypeReference
            Identifier: ' ScriptKind'
        MethodSignature
          Identifier: '
        getScriptVersion'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          StringKeyword
        MethodSignature
          Identifier: '
        getScriptSnapshot'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          UnionType
            TypeReference
              Identifier: ' IScriptSnapshot'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getProjectReferences'
          QuestionToken
          UnionType
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ProjectReference'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getLocalizedDiagnosticMessages'
          QuestionToken
          AnyKeyword
        MethodSignature
          Identifier: '
        getCancellationToken'
          QuestionToken
          TypeReference
            Identifier: ' HostCancellationToken'
        MethodSignature
          Identifier: '
        getCurrentDirectory'
          StringKeyword
        MethodSignature
          Identifier: '
        getDefaultLibFileName'
          Parameter
            Identifier: 'options'
            TypeReference
              Identifier: ' CompilerOptions'
          StringKeyword
        MethodSignature
          Identifier: '
        log'
          QuestionToken
          Parameter
            Identifier: 's'
            StringKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        trace'
          QuestionToken
          Parameter
            Identifier: 's'
            StringKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        error'
          QuestionToken
          Parameter
            Identifier: 's'
            StringKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        useCaseSensitiveFileNames'
          QuestionToken
          BooleanKeyword
        MethodSignature
          Identifier: '
        readDirectory'
          QuestionToken
          Parameter
            Identifier: 'path'
            StringKeyword
          Parameter
            Identifier: ' extensions'
            QuestionToken
            TypeOperator
              ArrayType
                StringKeyword
          Parameter
            Identifier: ' exclude'
            QuestionToken
            TypeOperator
              ArrayType
                StringKeyword
          Parameter
            Identifier: ' include'
            QuestionToken
            TypeOperator
              ArrayType
                StringKeyword
          Parameter
            Identifier: ' depth'
            QuestionToken
            NumberKeyword
          ArrayType
            StringKeyword
        MethodSignature
          Identifier: '
        realpath'
          QuestionToken
          Parameter
            Identifier: 'path'
            StringKeyword
          StringKeyword
        MethodSignature
          Identifier: '
        readFile'
          Parameter
            Identifier: 'path'
            StringKeyword
          Parameter
            Identifier: ' encoding'
            QuestionToken
            StringKeyword
          UnionType
            StringKeyword
            UndefinedKeyword
        MethodSignature
          Identifier: '
        fileExists'
          Parameter
            Identifier: 'path'
            StringKeyword
          BooleanKeyword
        MethodSignature
          Identifier: '
        getTypeRootsVersion'
          QuestionToken
          NumberKeyword
        MethodSignature
          Identifier: '
        /** @deprecated supply resolveModuleNameLiterals instead for resolution that can handle newer resolution modes like nodenext */
        resolveModuleNames'
          QuestionToken
          Parameter
            Identifier: 'moduleNames'
            ArrayType
              StringKeyword
          Parameter
            Identifier: ' containingFile'
            StringKeyword
          Parameter
            Identifier: ' reusedNames'
            UnionType
              ArrayType
                StringKeyword
              UndefinedKeyword
          Parameter
            Identifier: ' redirectedReference'
            UnionType
              TypeReference
                Identifier: ' ResolvedProjectReference'
              UndefinedKeyword
          Parameter
            Identifier: ' options'
            TypeReference
              Identifier: ' CompilerOptions'
          Parameter
            Identifier: ' containingSourceFile'
            QuestionToken
            TypeReference
              Identifier: ' SourceFile'
          ArrayType
            ParenthesizedType
              UnionType
                TypeReference
                  Identifier: 'ResolvedModule'
                UndefinedKeyword
        MethodSignature
          Identifier: '
        getResolvedModuleWithFailedLookupLocationsFromCache'
          QuestionToken
          Parameter
            Identifier: 'modulename'
            StringKeyword
          Parameter
            Identifier: ' containingFile'
            StringKeyword
          Parameter
            Identifier: ' resolutionMode'
            QuestionToken
            TypeReference
              Identifier: ' ResolutionMode'
          UnionType
            TypeReference
              Identifier: ' ResolvedModuleWithFailedLookupLocations'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        /** @deprecated supply resolveTypeReferenceDirectiveReferences instead for resolution that can handle newer resolution modes like nodenext */
        resolveTypeReferenceDirectives'
          QuestionToken
          Parameter
            Identifier: 'typeDirectiveNames'
            UnionType
              ArrayType
                StringKeyword
              ArrayType
                TypeReference
                  Identifier: ' FileReference'
          Parameter
            Identifier: ' containingFile'
            StringKeyword
          Parameter
            Identifier: ' redirectedReference'
            UnionType
              TypeReference
                Identifier: ' ResolvedProjectReference'
              UndefinedKeyword
          Parameter
            Identifier: ' options'
            TypeReference
              Identifier: ' CompilerOptions'
          Parameter
            Identifier: ' containingFileMode'
            QuestionToken
            TypeReference
              Identifier: ' ResolutionMode'
          ArrayType
            ParenthesizedType
              UnionType
                TypeReference
                  Identifier: 'ResolvedTypeReferenceDirective'
                UndefinedKeyword
        MethodSignature
          Identifier: '
        resolveModuleNameLiterals'
          QuestionToken
          Parameter
            Identifier: 'moduleLiterals'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' StringLiteralLike'
          Parameter
            Identifier: ' containingFile'
            StringKeyword
          Parameter
            Identifier: ' redirectedReference'
            UnionType
              TypeReference
                Identifier: ' ResolvedProjectReference'
              UndefinedKeyword
          Parameter
            Identifier: ' options'
            TypeReference
              Identifier: ' CompilerOptions'
          Parameter
            Identifier: ' containingSourceFile'
            TypeReference
              Identifier: ' SourceFile'
          Parameter
            Identifier: ' reusedNames'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' StringLiteralLike'
              UndefinedKeyword
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' ResolvedModuleWithFailedLookupLocations'
        MethodSignature
          Identifier: '
        resolveTypeReferenceDirectiveReferences'
          QuestionToken
          TypeParameter
            Identifier: 'T'
            UnionType
              TypeReference
                Identifier: ' FileReference'
              StringKeyword
          Parameter
            Identifier: 'typeDirectiveReferences'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' T'
          Parameter
            Identifier: ' containingFile'
            StringKeyword
          Parameter
            Identifier: ' redirectedReference'
            UnionType
              TypeReference
                Identifier: ' ResolvedProjectReference'
              UndefinedKeyword
          Parameter
            Identifier: ' options'
            TypeReference
              Identifier: ' CompilerOptions'
          Parameter
            Identifier: ' containingSourceFile'
            UnionType
              TypeReference
                Identifier: ' SourceFile'
              UndefinedKeyword
          Parameter
            Identifier: ' reusedNames'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' T'
              UndefinedKeyword
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' ResolvedTypeReferenceDirectiveWithFailedLookupLocations'
        MethodSignature
          Identifier: '
        getDirectories'
          QuestionToken
          Parameter
            Identifier: 'directoryName'
            StringKeyword
          ArrayType
            StringKeyword
        MethodSignature
          Identifier: '
        /**
         * Gets a set of custom transformers to use during emit.
         */
        getCustomTransformers'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' CustomTransformers'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        isKnownTypesPackageName'
          QuestionToken
          Parameter
            Identifier: 'name'
            StringKeyword
          BooleanKeyword
        MethodSignature
          Identifier: '
        installPackage'
          QuestionToken
          Parameter
            Identifier: 'options'
            TypeReference
              Identifier: ' InstallPackageOptions'
          TypeReference
            Identifier: ' Promise'
            TypeReference
              Identifier: 'ApplyCodeActionCommandResult'
        MethodSignature
          Identifier: '
        writeFile'
          QuestionToken
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' content'
            StringKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        getParsedCommandLine'
          QuestionToken
          Parameter
            Identifier: 'fileName'
            StringKeyword
          UnionType
            TypeReference
              Identifier: ' ParsedCommandLine'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        jsDocParsingMode'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' JSDocParsingMode'
            UndefinedKeyword
      TypeAliasDeclaration
        Identifier: ' WithMetadata'
        TypeParameter
          Identifier: 'T'
        IntersectionType
          TypeReference
            Identifier: ' T'
          TypeLiteral
            PropertySignature
              Identifier: '
        metadata'
              QuestionToken
              UnknownKeyword
      EnumDeclaration
        Identifier: ' SemanticClassificationFormat'
        EnumMember
          Identifier: '
        Original'
          StringLiteral
        EnumMember
          Identifier: '
        TwentyTwenty'
          StringLiteral
      InterfaceDeclaration
        Identifier: ' LanguageService'
        MethodSignature
          Identifier: '
        /** This is used as a part of restarting the language service. */
        cleanupSemanticCache'
          VoidKeyword
        MethodSignature
          Identifier: '
        /**
         * Gets errors indicating invalid syntax in a file.
         *
         * In English, "this cdeo have, erorrs" is syntactically invalid because it has typos,
         * grammatical errors, and misplaced punctuation. Likewise, examples of syntax
         * errors in TypeScript are missing parentheses in an `if` statement, mismatched
         * curly braces, and using a reserved keyword as a variable name.
         *
         * These diagnostics are inexpensive to compute and don't require knowledge of
         * other files. Note that a non-empty result increases the likelihood of false positives
         * from `getSemanticDiagnostics`.
         *
         * While these represent the majority of syntax-related diagnostics, there are some
         * that require the type system, which will be present in `getSemanticDiagnostics`.
         *
         * @param fileName A path to the file you want syntactic diagnostics for
         */
        getSyntacticDiagnostics'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          ArrayType
            TypeReference
              Identifier: ' DiagnosticWithLocation'
        MethodSignature
          Identifier: '
        /**
         * Gets warnings or errors indicating type system issues in a given file.
         * Requesting semantic diagnostics may start up the type system and
         * run deferred work, so the first call may take longer than subsequent calls.
         *
         * Unlike the other get*Diagnostics functions, these diagnostics can potentially not
         * include a reference to a source file. Specifically, the first time this is called,
         * it will return global diagnostics with no associated location.
         *
         * To contrast the differences between semantic and syntactic diagnostics, consider the
         * sentence: "The sun is green." is syntactically correct; those are real English words with
         * correct sentence structure. However, it is semantically invalid, because it is not true.
         *
         * @param fileName A path to the file you want semantic diagnostics for
         */
        getSemanticDiagnostics'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          ArrayType
            TypeReference
              Identifier: ' Diagnostic'
        MethodSignature
          Identifier: '
        /**
         * Gets suggestion diagnostics for a specific file. These diagnostics tend to
         * proactively suggest refactors, as opposed to diagnostics that indicate
         * potentially incorrect runtime behavior.
         *
         * @param fileName A path to the file you want semantic diagnostics for
         */
        getSuggestionDiagnostics'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          ArrayType
            TypeReference
              Identifier: ' DiagnosticWithLocation'
        MethodSignature
          Identifier: '
        /**
         * Gets global diagnostics related to the program configuration and compiler options.
         */
        getCompilerOptionsDiagnostics'
          ArrayType
            TypeReference
              Identifier: ' Diagnostic'
        MethodSignature
          Identifier: '
        /** @deprecated Use getEncodedSyntacticClassifications instead. */
        getSyntacticClassifications'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' span'
            TypeReference
              Identifier: ' TextSpan'
          ArrayType
            TypeReference
              Identifier: ' ClassifiedSpan'
        MethodSignature
          Identifier: '
        getSyntacticClassifications'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' span'
            TypeReference
              Identifier: ' TextSpan'
          Parameter
            Identifier: ' format'
            TypeReference
              Identifier: ' SemanticClassificationFormat'
          UnionType
            ArrayType
              TypeReference
                Identifier: ' ClassifiedSpan'
            ArrayType
              TypeReference
                Identifier: ' ClassifiedSpan2020'
        MethodSignature
          Identifier: '
        /** @deprecated Use getEncodedSemanticClassifications instead. */
        getSemanticClassifications'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' span'
            TypeReference
              Identifier: ' TextSpan'
          ArrayType
            TypeReference
              Identifier: ' ClassifiedSpan'
        MethodSignature
          Identifier: '
        getSemanticClassifications'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' span'
            TypeReference
              Identifier: ' TextSpan'
          Parameter
            Identifier: ' format'
            TypeReference
              Identifier: ' SemanticClassificationFormat'
          UnionType
            ArrayType
              TypeReference
                Identifier: ' ClassifiedSpan'
            ArrayType
              TypeReference
                Identifier: ' ClassifiedSpan2020'
        MethodSignature
          Identifier: '
        /** Encoded as triples of [start, length, ClassificationType]. */
        getEncodedSyntacticClassifications'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' span'
            TypeReference
              Identifier: ' TextSpan'
          TypeReference
            Identifier: ' Classifications'
        MethodSignature
          Identifier: '
        /**
         * Gets semantic highlights information for a particular file. Has two formats, an older
         * version used by VS and a format used by VS Code.
         *
         * @param fileName The path to the file
         * @param position A text span to return results within
         * @param format Which format to use, defaults to "original"
         * @returns a number array encoded as triples of [start, length, ClassificationType, ...].
         */
        getEncodedSemanticClassifications'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' span'
            TypeReference
              Identifier: ' TextSpan'
          Parameter
            Identifier: ' format'
            QuestionToken
            TypeReference
              Identifier: ' SemanticClassificationFormat'
          TypeReference
            Identifier: ' Classifications'
        MethodSignature
          Identifier: '
        /**
         * Gets completion entries at a particular position in a file.
         *
         * @param fileName The path to the file
         * @param position A zero-based index of the character where you want the entries
         * @param options An object describing how the request was triggered and what kinds
         * of code actions can be returned with the completions.
         * @param formattingSettings settings needed for calling formatting functions.
         */
        getCompletionsAtPosition'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' position'
            NumberKeyword
          Parameter
            Identifier: ' options'
            UnionType
              TypeReference
                Identifier: ' GetCompletionsAtPositionOptions'
              UndefinedKeyword
          Parameter
            Identifier: ' formattingSettings'
            QuestionToken
            TypeReference
              Identifier: ' FormatCodeSettings'
          UnionType
            TypeReference
              Identifier: ' WithMetadata'
              TypeReference
                Identifier: 'CompletionInfo'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        /**
         * Gets the extended details for a completion entry retrieved from `getCompletionsAtPosition`.
         *
         * @param fileName The path to the file
         * @param position A zero based index of the character where you want the entries
         * @param entryName The `name` from an existing completion which came from `getCompletionsAtPosition`
         * @param formatOptions How should code samples in the completions be formatted, can be undefined for backwards compatibility
         * @param source `source` property from the completion entry
         * @param preferences User settings, can be undefined for backwards compatibility
         * @param data `data` property from the completion entry
         */
        getCompletionEntryDetails'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' position'
            NumberKeyword
          Parameter
            Identifier: ' entryName'
            StringKeyword
          Parameter
            Identifier: ' formatOptions'
            UnionType
              TypeReference
                Identifier: ' FormatCodeOptions'
              TypeReference
                Identifier: ' FormatCodeSettings'
              UndefinedKeyword
          Parameter
            Identifier: ' source'
            UnionType
              StringKeyword
              UndefinedKeyword
          Parameter
            Identifier: ' preferences'
            UnionType
              TypeReference
                Identifier: ' UserPreferences'
              UndefinedKeyword
          Parameter
            Identifier: ' data'
            UnionType
              TypeReference
                Identifier: ' CompletionEntryData'
              UndefinedKeyword
          UnionType
            TypeReference
              Identifier: ' CompletionEntryDetails'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getCompletionEntrySymbol'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' position'
            NumberKeyword
          Parameter
            Identifier: ' name'
            StringKeyword
          Parameter
            Identifier: ' source'
            UnionType
              StringKeyword
              UndefinedKeyword
          UnionType
            TypeReference
              Identifier: ' Symbol'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        /**
         * Gets semantic information about the identifier at a particular position in a
         * file. Quick info is what you typically see when you hover in an editor.
         *
         * @param fileName The path to the file
         * @param position A zero-based index of the character where you want the quick info
         */
        getQuickInfoAtPosition'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' position'
            NumberKeyword
          UnionType
            TypeReference
              Identifier: ' QuickInfo'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getNameOrDottedNameSpan'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' startPos'
            NumberKeyword
          Parameter
            Identifier: ' endPos'
            NumberKeyword
          UnionType
            TypeReference
              Identifier: ' TextSpan'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getBreakpointStatementAtPosition'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' position'
            NumberKeyword
          UnionType
            TypeReference
              Identifier: ' TextSpan'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getSignatureHelpItems'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' position'
            NumberKeyword
          Parameter
            Identifier: ' options'
            UnionType
              TypeReference
                Identifier: ' SignatureHelpItemsOptions'
              UndefinedKeyword
          UnionType
            TypeReference
              Identifier: ' SignatureHelpItems'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getRenameInfo'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' position'
            NumberKeyword
          Parameter
            Identifier: ' preferences'
            TypeReference
              Identifier: ' UserPreferences'
          TypeReference
            Identifier: ' RenameInfo'
        MethodSignature
          Identifier: '
        /** @deprecated Use the signature with `UserPreferences` instead. */
        getRenameInfo'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' position'
            NumberKeyword
          Parameter
            Identifier: ' options'
            QuestionToken
            TypeReference
              Identifier: ' RenameInfoOptions'
          TypeReference
            Identifier: ' RenameInfo'
        MethodSignature
          Identifier: '
        findRenameLocations'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' position'
            NumberKeyword
          Parameter
            Identifier: ' findInStrings'
            BooleanKeyword
          Parameter
            Identifier: ' findInComments'
            BooleanKeyword
          Parameter
            Identifier: ' preferences'
            TypeReference
              Identifier: ' UserPreferences'
          UnionType
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' RenameLocation'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        /** @deprecated Pass `providePrefixAndSuffixTextForRename` as part of a `UserPreferences` parameter. */
        findRenameLocations'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' position'
            NumberKeyword
          Parameter
            Identifier: ' findInStrings'
            BooleanKeyword
          Parameter
            Identifier: ' findInComments'
            BooleanKeyword
          Parameter
            Identifier: ' providePrefixAndSuffixTextForRename'
            QuestionToken
            BooleanKeyword
          UnionType
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' RenameLocation'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getSmartSelectionRange'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' position'
            NumberKeyword
          TypeReference
            Identifier: ' SelectionRange'
        MethodSignature
          Identifier: '
        getDefinitionAtPosition'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' position'
            NumberKeyword
          UnionType
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' DefinitionInfo'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getDefinitionAndBoundSpan'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' position'
            NumberKeyword
          UnionType
            TypeReference
              Identifier: ' DefinitionInfoAndBoundSpan'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getTypeDefinitionAtPosition'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' position'
            NumberKeyword
          UnionType
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' DefinitionInfo'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getImplementationAtPosition'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' position'
            NumberKeyword
          UnionType
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ImplementationLocation'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getReferencesAtPosition'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' position'
            NumberKeyword
          UnionType
            ArrayType
              TypeReference
                Identifier: ' ReferenceEntry'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        findReferences'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' position'
            NumberKeyword
          UnionType
            ArrayType
              TypeReference
                Identifier: ' ReferencedSymbol'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getDocumentHighlights'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' position'
            NumberKeyword
          Parameter
            Identifier: ' filesToSearch'
            ArrayType
              StringKeyword
          UnionType
            ArrayType
              TypeReference
                Identifier: ' DocumentHighlights'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getFileReferences'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          ArrayType
            TypeReference
              Identifier: ' ReferenceEntry'
        MethodSignature
          Identifier: '
        getNavigateToItems'
          Parameter
            Identifier: 'searchValue'
            StringKeyword
          Parameter
            Identifier: ' maxResultCount'
            QuestionToken
            NumberKeyword
          Parameter
            Identifier: ' fileName'
            QuestionToken
            StringKeyword
          Parameter
            Identifier: ' excludeDtsFiles'
            QuestionToken
            BooleanKeyword
          Parameter
            Identifier: ' excludeLibFiles'
            QuestionToken
            BooleanKeyword
          ArrayType
            TypeReference
              Identifier: ' NavigateToItem'
        MethodSignature
          Identifier: '
        getNavigationBarItems'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          ArrayType
            TypeReference
              Identifier: ' NavigationBarItem'
        MethodSignature
          Identifier: '
        getNavigationTree'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          TypeReference
            Identifier: ' NavigationTree'
        MethodSignature
          Identifier: '
        prepareCallHierarchy'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' position'
            NumberKeyword
          UnionType
            TypeReference
              Identifier: ' CallHierarchyItem'
            ArrayType
              TypeReference
                Identifier: ' CallHierarchyItem'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        provideCallHierarchyIncomingCalls'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' position'
            NumberKeyword
          ArrayType
            TypeReference
              Identifier: ' CallHierarchyIncomingCall'
        MethodSignature
          Identifier: '
        provideCallHierarchyOutgoingCalls'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' position'
            NumberKeyword
          ArrayType
            TypeReference
              Identifier: ' CallHierarchyOutgoingCall'
        MethodSignature
          Identifier: '
        provideInlayHints'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' span'
            TypeReference
              Identifier: ' TextSpan'
          Parameter
            Identifier: ' preferences'
            UnionType
              TypeReference
                Identifier: ' UserPreferences'
              UndefinedKeyword
          ArrayType
            TypeReference
              Identifier: ' InlayHint'
        MethodSignature
          Identifier: '
        getOutliningSpans'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          ArrayType
            TypeReference
              Identifier: ' OutliningSpan'
        MethodSignature
          Identifier: '
        getTodoComments'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' descriptors'
            ArrayType
              TypeReference
                Identifier: ' TodoCommentDescriptor'
          ArrayType
            TypeReference
              Identifier: ' TodoComment'
        MethodSignature
          Identifier: '
        getBraceMatchingAtPosition'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' position'
            NumberKeyword
          ArrayType
            TypeReference
              Identifier: ' TextSpan'
        MethodSignature
          Identifier: '
        getIndentationAtPosition'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' position'
            NumberKeyword
          Parameter
            Identifier: ' options'
            UnionType
              TypeReference
                Identifier: ' EditorOptions'
              TypeReference
                Identifier: ' EditorSettings'
          NumberKeyword
        MethodSignature
          Identifier: '
        getFormattingEditsForRange'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' start'
            NumberKeyword
          Parameter
            Identifier: ' end'
            NumberKeyword
          Parameter
            Identifier: ' options'
            UnionType
              TypeReference
                Identifier: ' FormatCodeOptions'
              TypeReference
                Identifier: ' FormatCodeSettings'
          ArrayType
            TypeReference
              Identifier: ' TextChange'
        MethodSignature
          Identifier: '
        getFormattingEditsForDocument'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' options'
            UnionType
              TypeReference
                Identifier: ' FormatCodeOptions'
              TypeReference
                Identifier: ' FormatCodeSettings'
          ArrayType
            TypeReference
              Identifier: ' TextChange'
        MethodSignature
          Identifier: '
        getFormattingEditsAfterKeystroke'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' position'
            NumberKeyword
          Parameter
            Identifier: ' key'
            StringKeyword
          Parameter
            Identifier: ' options'
            UnionType
              TypeReference
                Identifier: ' FormatCodeOptions'
              TypeReference
                Identifier: ' FormatCodeSettings'
          ArrayType
            TypeReference
              Identifier: ' TextChange'
        MethodSignature
          Identifier: '
        getDocCommentTemplateAtPosition'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' position'
            NumberKeyword
          Parameter
            Identifier: ' options'
            QuestionToken
            TypeReference
              Identifier: ' DocCommentTemplateOptions'
          Parameter
            Identifier: ' formatOptions'
            QuestionToken
            TypeReference
              Identifier: ' FormatCodeSettings'
          UnionType
            TypeReference
              Identifier: ' TextInsertion'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        isValidBraceCompletionAtPosition'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' position'
            NumberKeyword
          Parameter
            Identifier: ' openingBrace'
            NumberKeyword
          BooleanKeyword
        MethodSignature
          Identifier: '
        /**
         * This will return a defined result if the position is after the `>` of the opening tag, or somewhere in the text, of a JSXElement with no closing tag.
         * Editors should call this after `>` is typed.
         */
        getJsxClosingTagAtPosition'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' position'
            NumberKeyword
          UnionType
            TypeReference
              Identifier: ' JsxClosingTagInfo'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getLinkedEditingRangeAtPosition'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' position'
            NumberKeyword
          UnionType
            TypeReference
              Identifier: ' LinkedEditingInfo'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getSpanOfEnclosingComment'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' position'
            NumberKeyword
          Parameter
            Identifier: ' onlyMultiLine'
            BooleanKeyword
          UnionType
            TypeReference
              Identifier: ' TextSpan'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        toLineColumnOffset'
          QuestionToken
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' position'
            NumberKeyword
          TypeReference
            Identifier: ' LineAndCharacter'
        MethodSignature
          Identifier: '
        getCodeFixesAtPosition'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' start'
            NumberKeyword
          Parameter
            Identifier: ' end'
            NumberKeyword
          Parameter
            Identifier: ' errorCodes'
            TypeOperator
              ArrayType
                NumberKeyword
          Parameter
            Identifier: ' formatOptions'
            TypeReference
              Identifier: ' FormatCodeSettings'
          Parameter
            Identifier: ' preferences'
            TypeReference
              Identifier: ' UserPreferences'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' CodeFixAction'
        MethodSignature
          Identifier: '
        getCombinedCodeFix'
          Parameter
            Identifier: 'scope'
            TypeReference
              Identifier: ' CombinedCodeFixScope'
          Parameter
            Identifier: ' fixId'
            TypeLiteral
          Parameter
            Identifier: ' formatOptions'
            TypeReference
              Identifier: ' FormatCodeSettings'
          Parameter
            Identifier: ' preferences'
            TypeReference
              Identifier: ' UserPreferences'
          TypeReference
            Identifier: ' CombinedCodeActions'
        MethodSignature
          Identifier: '
        applyCodeActionCommand'
          Parameter
            Identifier: 'action'
            TypeReference
              Identifier: ' CodeActionCommand'
          Parameter
            Identifier: ' formatSettings'
            QuestionToken
            TypeReference
              Identifier: ' FormatCodeSettings'
          TypeReference
            Identifier: ' Promise'
            TypeReference
              Identifier: 'ApplyCodeActionCommandResult'
        MethodSignature
          Identifier: '
        applyCodeActionCommand'
          Parameter
            Identifier: 'action'
            ArrayType
              TypeReference
                Identifier: ' CodeActionCommand'
          Parameter
            Identifier: ' formatSettings'
            QuestionToken
            TypeReference
              Identifier: ' FormatCodeSettings'
          TypeReference
            Identifier: ' Promise'
            ArrayType
              TypeReference
                Identifier: 'ApplyCodeActionCommandResult'
        MethodSignature
          Identifier: '
        applyCodeActionCommand'
          Parameter
            Identifier: 'action'
            UnionType
              TypeReference
                Identifier: ' CodeActionCommand'
              ArrayType
                TypeReference
                  Identifier: ' CodeActionCommand'
          Parameter
            Identifier: ' formatSettings'
            QuestionToken
            TypeReference
              Identifier: ' FormatCodeSettings'
          TypeReference
            Identifier: ' Promise'
            UnionType
              TypeReference
                Identifier: 'ApplyCodeActionCommandResult'
              ArrayType
                TypeReference
                  Identifier: ' ApplyCodeActionCommandResult'
        MethodSignature
          Identifier: '
        /** @deprecated `fileName` will be ignored */
        applyCodeActionCommand'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' action'
            TypeReference
              Identifier: ' CodeActionCommand'
          TypeReference
            Identifier: ' Promise'
            TypeReference
              Identifier: 'ApplyCodeActionCommandResult'
        MethodSignature
          Identifier: '
        /** @deprecated `fileName` will be ignored */
        applyCodeActionCommand'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' action'
            ArrayType
              TypeReference
                Identifier: ' CodeActionCommand'
          TypeReference
            Identifier: ' Promise'
            ArrayType
              TypeReference
                Identifier: 'ApplyCodeActionCommandResult'
        MethodSignature
          Identifier: '
        /** @deprecated `fileName` will be ignored */
        applyCodeActionCommand'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' action'
            UnionType
              TypeReference
                Identifier: ' CodeActionCommand'
              ArrayType
                TypeReference
                  Identifier: ' CodeActionCommand'
          TypeReference
            Identifier: ' Promise'
            UnionType
              TypeReference
                Identifier: 'ApplyCodeActionCommandResult'
              ArrayType
                TypeReference
                  Identifier: ' ApplyCodeActionCommandResult'
        MethodSignature
          Identifier: '
        /**
         * @param includeInteractiveActions Include refactor actions that require additional arguments to be
         * passed when calling `getEditsForRefactor`. When true, clients should inspect the `isInteractive`
         * property of each returned `RefactorActionInfo` and ensure they are able to collect the appropriate
         * arguments for any interactive action before offering it.
         */
        getApplicableRefactors'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' positionOrRange'
            UnionType
              NumberKeyword
              TypeReference
                Identifier: ' TextRange'
          Parameter
            Identifier: ' preferences'
            UnionType
              TypeReference
                Identifier: ' UserPreferences'
              UndefinedKeyword
          Parameter
            Identifier: ' triggerReason'
            QuestionToken
            TypeReference
              Identifier: ' RefactorTriggerReason'
          Parameter
            Identifier: ' kind'
            QuestionToken
            StringKeyword
          Parameter
            Identifier: ' includeInteractiveActions'
            QuestionToken
            BooleanKeyword
          ArrayType
            TypeReference
              Identifier: ' ApplicableRefactorInfo'
        MethodSignature
          Identifier: '
        getEditsForRefactor'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' formatOptions'
            TypeReference
              Identifier: ' FormatCodeSettings'
          Parameter
            Identifier: ' positionOrRange'
            UnionType
              NumberKeyword
              TypeReference
                Identifier: ' TextRange'
          Parameter
            Identifier: ' refactorName'
            StringKeyword
          Parameter
            Identifier: ' actionName'
            StringKeyword
          Parameter
            Identifier: ' preferences'
            UnionType
              TypeReference
                Identifier: ' UserPreferences'
              UndefinedKeyword
          Parameter
            Identifier: ' interactiveRefactorArguments'
            QuestionToken
            TypeReference
              Identifier: ' InteractiveRefactorArguments'
          UnionType
            TypeReference
              Identifier: ' RefactorEditInfo'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        getMoveToRefactoringFileSuggestions'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' positionOrRange'
            UnionType
              NumberKeyword
              TypeReference
                Identifier: ' TextRange'
          Parameter
            Identifier: ' preferences'
            UnionType
              TypeReference
                Identifier: ' UserPreferences'
              UndefinedKeyword
          Parameter
            Identifier: ' triggerReason'
            QuestionToken
            TypeReference
              Identifier: ' RefactorTriggerReason'
          Parameter
            Identifier: ' kind'
            QuestionToken
            StringKeyword
          TypeLiteral
            PropertySignature
              Identifier: '
            newFileName'
              StringKeyword
            PropertySignature
              Identifier: '
            files'
              ArrayType
                StringKeyword
        MethodSignature
          Identifier: '
        organizeImports'
          Parameter
            Identifier: 'args'
            TypeReference
              Identifier: ' OrganizeImportsArgs'
          Parameter
            Identifier: ' formatOptions'
            TypeReference
              Identifier: ' FormatCodeSettings'
          Parameter
            Identifier: ' preferences'
            UnionType
              TypeReference
                Identifier: ' UserPreferences'
              UndefinedKeyword
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' FileTextChanges'
        MethodSignature
          Identifier: '
        getEditsForFileRename'
          Parameter
            Identifier: 'oldFilePath'
            StringKeyword
          Parameter
            Identifier: ' newFilePath'
            StringKeyword
          Parameter
            Identifier: ' formatOptions'
            TypeReference
              Identifier: ' FormatCodeSettings'
          Parameter
            Identifier: ' preferences'
            UnionType
              TypeReference
                Identifier: ' UserPreferences'
              UndefinedKeyword
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' FileTextChanges'
        MethodSignature
          Identifier: '
        getEmitOutput'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' emitOnlyDtsFiles'
            QuestionToken
            BooleanKeyword
          Parameter
            Identifier: ' forceDtsEmit'
            QuestionToken
            BooleanKeyword
          TypeReference
            Identifier: ' EmitOutput'
        MethodSignature
          Identifier: '
        getProgram'
          UnionType
            TypeReference
              Identifier: ' Program'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        toggleLineComment'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' textRange'
            TypeReference
              Identifier: ' TextRange'
          ArrayType
            TypeReference
              Identifier: ' TextChange'
        MethodSignature
          Identifier: '
        toggleMultilineComment'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' textRange'
            TypeReference
              Identifier: ' TextRange'
          ArrayType
            TypeReference
              Identifier: ' TextChange'
        MethodSignature
          Identifier: '
        commentSelection'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' textRange'
            TypeReference
              Identifier: ' TextRange'
          ArrayType
            TypeReference
              Identifier: ' TextChange'
        MethodSignature
          Identifier: '
        uncommentSelection'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' textRange'
            TypeReference
              Identifier: ' TextRange'
          ArrayType
            TypeReference
              Identifier: ' TextChange'
        MethodSignature
          Identifier: '
        getSupportedCodeFixes'
          Parameter
            Identifier: 'fileName'
            QuestionToken
            StringKeyword
          TypeOperator
            ArrayType
              StringKeyword
        MethodSignature
          Identifier: '
        dispose'
          VoidKeyword
        MethodSignature
          Identifier: '
        preparePasteEditsForFile'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' copiedTextRanges'
            ArrayType
              TypeReference
                Identifier: ' TextRange'
          BooleanKeyword
        MethodSignature
          Identifier: '
        getPasteEdits'
          Parameter
            Identifier: 'args'
            TypeReference
              Identifier: ' PasteEditsArgs'
          Parameter
            Identifier: ' formatOptions'
            TypeReference
              Identifier: ' FormatCodeSettings'
          TypeReference
            Identifier: ' PasteEdits'
      InterfaceDeclaration
        Identifier: ' JsxClosingTagInfo'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' newText'
          StringKeyword
      InterfaceDeclaration
        Identifier: ' LinkedEditingInfo'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' ranges'
          ArrayType
            TypeReference
              Identifier: ' TextSpan'
        PropertySignature
          Identifier: '
        wordPattern'
          QuestionToken
          StringKeyword
      InterfaceDeclaration
        Identifier: ' CombinedCodeFixScope'
        PropertySignature
          Identifier: '
        type'
          LiteralType
            StringLiteral
        PropertySignature
          Identifier: '
        fileName'
          StringKeyword
      EnumDeclaration
        Identifier: ' OrganizeImportsMode'
        EnumMember
          Identifier: '
        All'
          StringLiteral
        EnumMember
          Identifier: '
        SortAndCombine'
          StringLiteral
        EnumMember
          Identifier: '
        RemoveUnused'
          StringLiteral
      InterfaceDeclaration
        Identifier: ' PasteEdits'
        PropertySignature
          Identifier: '
        edits'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' FileTextChanges'
        PropertySignature
          Identifier: '
        fixId'
          QuestionToken
          TypeLiteral
      InterfaceDeclaration
        Identifier: ' PasteEditsArgs'
        PropertySignature
          Identifier: '
        targetFile'
          StringKeyword
        PropertySignature
          Identifier: '
        pastedText'
          ArrayType
            StringKeyword
        PropertySignature
          Identifier: '
        pasteLocations'
          ArrayType
            TypeReference
              Identifier: ' TextRange'
        PropertySignature
          Identifier: '
        copiedFrom'
          UnionType
            TypeLiteral
              PropertySignature
                Identifier: '
            file'
                StringKeyword
              PropertySignature
                Identifier: '
            range'
                ArrayType
                  TypeReference
                    Identifier: ' TextRange'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        preferences'
          TypeReference
            Identifier: ' UserPreferences'
      InterfaceDeclaration
        Identifier: ' OrganizeImportsArgs'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' CombinedCodeFixScope'
        PropertySignature
          Identifier: '
        /** @deprecated Use `mode` instead */
        skipDestructiveCodeActions'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        mode'
          QuestionToken
          TypeReference
            Identifier: ' OrganizeImportsMode'
      TypeAliasDeclaration
        Identifier: ' CompletionsTriggerCharacter'
        UnionType
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
      EnumDeclaration
        Identifier: ' CompletionTriggerKind'
        EnumMember
          Identifier: '
        /** Completion was triggered by typing an identifier, manual invocation (e.g Ctrl+Space) or via API. */
        Invoked'
          NumericLiteral
        EnumMember
          Identifier: '
        /** Completion was triggered by a trigger character. */
        TriggerCharacter'
          NumericLiteral
        EnumMember
          Identifier: '
        /** Completion was re-triggered as the current completion list is incomplete. */
        TriggerForIncompleteCompletions'
          NumericLiteral
      InterfaceDeclaration
        Identifier: ' GetCompletionsAtPositionOptions'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' UserPreferences'
        PropertySignature
          Identifier: '
        /**
         * If the editor is asking for completions because a certain character was typed
         * (as opposed to when the user explicitly requested them) this should be set.
         */
        triggerCharacter'
          QuestionToken
          TypeReference
            Identifier: ' CompletionsTriggerCharacter'
        PropertySignature
          Identifier: '
        triggerKind'
          QuestionToken
          TypeReference
            Identifier: ' CompletionTriggerKind'
        PropertySignature
          Identifier: '
        /**
         * Include a `symbol` property on each completion entry object.
         * Symbols reference cyclic data structures and sometimes an entire TypeChecker instance,
         * so use caution when serializing or retaining completion entries retrieved with this option.
         * @default false
         */
        includeSymbol'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        /** @deprecated Use includeCompletionsForModuleExports */
        includeExternalModuleExports'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        /** @deprecated Use includeCompletionsWithInsertText */
        includeInsertTextCompletions'
          QuestionToken
          BooleanKeyword
      TypeAliasDeclaration
        Identifier: ' SignatureHelpTriggerCharacter'
        UnionType
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
      TypeAliasDeclaration
        Identifier: ' SignatureHelpRetriggerCharacter'
        UnionType
          TypeReference
            Identifier: ' SignatureHelpTriggerCharacter'
          LiteralType
            StringLiteral
      InterfaceDeclaration
        Identifier: ' SignatureHelpItemsOptions'
        PropertySignature
          Identifier: '
        triggerReason'
          QuestionToken
          TypeReference
            Identifier: ' SignatureHelpTriggerReason'
      TypeAliasDeclaration
        Identifier: ' SignatureHelpTriggerReason'
        UnionType
          TypeReference
            Identifier: ' SignatureHelpInvokedReason'
          TypeReference
            Identifier: ' SignatureHelpCharacterTypedReason'
          TypeReference
            Identifier: ' SignatureHelpRetriggeredReason'
      InterfaceDeclaration
        Identifier: ' SignatureHelpInvokedReason'
        PropertySignature
          Identifier: '
        kind'
          LiteralType
            StringLiteral
        PropertySignature
          Identifier: '
        triggerCharacter'
          QuestionToken
          UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' SignatureHelpCharacterTypedReason'
        PropertySignature
          Identifier: '
        kind'
          LiteralType
            StringLiteral
        PropertySignature
          Identifier: '
        /**
         * Character that was responsible for triggering signature help.
         */
        triggerCharacter'
          TypeReference
            Identifier: ' SignatureHelpTriggerCharacter'
      InterfaceDeclaration
        Identifier: ' SignatureHelpRetriggeredReason'
        PropertySignature
          Identifier: '
        kind'
          LiteralType
            StringLiteral
        PropertySignature
          Identifier: '
        /**
         * Character that was responsible for triggering signature help.
         */
        triggerCharacter'
          QuestionToken
          TypeReference
            Identifier: ' SignatureHelpRetriggerCharacter'
      InterfaceDeclaration
        Identifier: ' ApplyCodeActionCommandResult'
        PropertySignature
          Identifier: '
        successMessage'
          StringKeyword
      InterfaceDeclaration
        Identifier: ' Classifications'
        PropertySignature
          Identifier: '
        spans'
          ArrayType
            NumberKeyword
        PropertySignature
          Identifier: '
        endOfLineState'
          TypeReference
            Identifier: ' EndOfLineState'
      InterfaceDeclaration
        Identifier: ' ClassifiedSpan'
        PropertySignature
          Identifier: '
        textSpan'
          TypeReference
            Identifier: ' TextSpan'
        PropertySignature
          Identifier: '
        classificationType'
          TypeReference
            Identifier: ' ClassificationTypeNames'
      InterfaceDeclaration
        Identifier: ' ClassifiedSpan2020'
        PropertySignature
          Identifier: '
        textSpan'
          TypeReference
            Identifier: ' TextSpan'
        PropertySignature
          Identifier: '
        classificationType'
          NumberKeyword
      InterfaceDeclaration
        Identifier: ' NavigationBarItem'
        PropertySignature
          Identifier: '
        text'
          StringKeyword
        PropertySignature
          Identifier: '
        kind'
          TypeReference
            Identifier: ' ScriptElementKind'
        PropertySignature
          Identifier: '
        kindModifiers'
          StringKeyword
        PropertySignature
          Identifier: '
        spans'
          ArrayType
            TypeReference
              Identifier: ' TextSpan'
        PropertySignature
          Identifier: '
        childItems'
          ArrayType
            TypeReference
              Identifier: ' NavigationBarItem'
        PropertySignature
          Identifier: '
        indent'
          NumberKeyword
        PropertySignature
          Identifier: '
        bolded'
          BooleanKeyword
        PropertySignature
          Identifier: '
        grayed'
          BooleanKeyword
      InterfaceDeclaration
        Identifier: ' NavigationTree'
        PropertySignature
          Identifier: '
        /** Name of the declaration, or a short description, e.g. "<class>". */
        text'
          StringKeyword
        PropertySignature
          Identifier: '
        kind'
          TypeReference
            Identifier: ' ScriptElementKind'
        PropertySignature
          Identifier: '
        /** ScriptElementKindModifier separated by commas, e.g. "public,abstract" */
        kindModifiers'
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * Spans of the nodes that generated this declaration.
         * There will be more than one if this is the result of merging.
         */
        spans'
          ArrayType
            TypeReference
              Identifier: ' TextSpan'
        PropertySignature
          Identifier: '
        nameSpan'
          UnionType
            TypeReference
              Identifier: ' TextSpan'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /** Present if non-empty */
        childItems'
          QuestionToken
          ArrayType
            TypeReference
              Identifier: ' NavigationTree'
      InterfaceDeclaration
        Identifier: ' CallHierarchyItem'
        PropertySignature
          Identifier: '
        name'
          StringKeyword
        PropertySignature
          Identifier: '
        kind'
          TypeReference
            Identifier: ' ScriptElementKind'
        PropertySignature
          Identifier: '
        kindModifiers'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        file'
          StringKeyword
        PropertySignature
          Identifier: '
        span'
          TypeReference
            Identifier: ' TextSpan'
        PropertySignature
          Identifier: '
        selectionSpan'
          TypeReference
            Identifier: ' TextSpan'
        PropertySignature
          Identifier: '
        containerName'
          QuestionToken
          StringKeyword
      InterfaceDeclaration
        Identifier: ' CallHierarchyIncomingCall'
        PropertySignature
          Identifier: '
        from'
          TypeReference
            Identifier: ' CallHierarchyItem'
        PropertySignature
          Identifier: '
        fromSpans'
          ArrayType
            TypeReference
              Identifier: ' TextSpan'
      InterfaceDeclaration
        Identifier: ' CallHierarchyOutgoingCall'
        PropertySignature
          Identifier: '
        to'
          TypeReference
            Identifier: ' CallHierarchyItem'
        PropertySignature
          Identifier: '
        fromSpans'
          ArrayType
            TypeReference
              Identifier: ' TextSpan'
      EnumDeclaration
        Identifier: ' InlayHintKind'
        EnumMember
          Identifier: '
        Type'
          StringLiteral
        EnumMember
          Identifier: '
        Parameter'
          StringLiteral
        EnumMember
          Identifier: '
        Enum'
          StringLiteral
      InterfaceDeclaration
        Identifier: ' InlayHint'
        PropertySignature
          Identifier: '
        /** This property will be the empty string when displayParts is set. */
        text'
          StringKeyword
        PropertySignature
          Identifier: '
        position'
          NumberKeyword
        PropertySignature
          Identifier: '
        kind'
          TypeReference
            Identifier: ' InlayHintKind'
        PropertySignature
          Identifier: '
        whitespaceBefore'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        whitespaceAfter'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        displayParts'
          QuestionToken
          ArrayType
            TypeReference
              Identifier: ' InlayHintDisplayPart'
      InterfaceDeclaration
        Identifier: ' InlayHintDisplayPart'
        PropertySignature
          Identifier: '
        text'
          StringKeyword
        PropertySignature
          Identifier: '
        span'
          QuestionToken
          TypeReference
            Identifier: ' TextSpan'
        PropertySignature
          Identifier: '
        file'
          QuestionToken
          StringKeyword
      InterfaceDeclaration
        Identifier: ' TodoCommentDescriptor'
        PropertySignature
          Identifier: '
        text'
          StringKeyword
        PropertySignature
          Identifier: '
        priority'
          NumberKeyword
      InterfaceDeclaration
        Identifier: ' TodoComment'
        PropertySignature
          Identifier: '
        descriptor'
          TypeReference
            Identifier: ' TodoCommentDescriptor'
        PropertySignature
          Identifier: '
        message'
          StringKeyword
        PropertySignature
          Identifier: '
        position'
          NumberKeyword
      InterfaceDeclaration
        Identifier: ' TextChange'
        PropertySignature
          Identifier: '
        span'
          TypeReference
            Identifier: ' TextSpan'
        PropertySignature
          Identifier: '
        newText'
          StringKeyword
      InterfaceDeclaration
        Identifier: ' FileTextChanges'
        PropertySignature
          Identifier: '
        fileName'
          StringKeyword
        PropertySignature
          Identifier: '
        textChanges'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' TextChange'
        PropertySignature
          Identifier: '
        isNewFile'
          QuestionToken
          BooleanKeyword
      InterfaceDeclaration
        Identifier: ' CodeAction'
        PropertySignature
          Identifier: '
        /** Description of the code action to display in the UI of the editor */
        description'
          StringKeyword
        PropertySignature
          Identifier: '
        /** Text changes to apply to each file as part of the code action */
        changes'
          ArrayType
            TypeReference
              Identifier: ' FileTextChanges'
        PropertySignature
          Identifier: '
        /**
         * If the user accepts the code fix, the editor should send the action back in a `applyAction` request.
         * This allows the language service to have side effects (e.g. installing dependencies) upon a code fix.
         */
        commands'
          QuestionToken
          ArrayType
            TypeReference
              Identifier: ' CodeActionCommand'
      InterfaceDeclaration
        Identifier: ' CodeFixAction'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' CodeAction'
        PropertySignature
          Identifier: '
        /** Short name to identify the fix, for use by telemetry. */
        fixName'
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * If present, one may call 'getCombinedCodeFix' with this fixId.
         * This may be omitted to indicate that the code fix can't be applied in a group.
         */
        fixId'
          QuestionToken
          TypeLiteral
        PropertySignature
          Identifier: '
        fixAllDescription'
          QuestionToken
          StringKeyword
      InterfaceDeclaration
        Identifier: ' CombinedCodeActions'
        PropertySignature
          Identifier: '
        changes'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' FileTextChanges'
        PropertySignature
          Identifier: '
        commands'
          QuestionToken
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' CodeActionCommand'
      TypeAliasDeclaration
        Identifier: ' CodeActionCommand'
        TypeReference
          Identifier: ' InstallPackageAction'
      InterfaceDeclaration
        Identifier: ' InstallPackageAction'
      InterfaceDeclaration
        Identifier: ' ApplicableRefactorInfo'
        PropertySignature
          Identifier: '
        /**
         * The programmatic name of the refactoring
         */
        name'
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * A description of this refactoring category to show to the user.
         * If the refactoring gets inlined (see below), this text will not be visible.
         */
        description'
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * Inlineable refactorings can have their actions hoisted out to the top level
         * of a context menu. Non-inlineanable refactorings should always be shown inside
         * their parent grouping.
         *
         * If not specified, this value is assumed to be 'true'
         */
        inlineable'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        actions'
          ArrayType
            TypeReference
              Identifier: ' RefactorActionInfo'
      InterfaceDeclaration
        Identifier: ' RefactorActionInfo'
        PropertySignature
          Identifier: '
        /**
         * The programmatic name of the refactoring action
         */
        name'
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * A description of this refactoring action to show to the user.
         * If the parent refactoring is inlined away, this will be the only text shown,
         * so this description should make sense by itself if the parent is inlineable=true
         */
        description'
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * A message to show to the user if the refactoring cannot be applied in
         * the current context.
         */
        notApplicableReason'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * The hierarchical dotted name of the refactor action.
         */
        kind'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * Indicates that the action requires additional arguments to be passed
         * when calling `getEditsForRefactor`.
         */
        isInteractive'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        /**
         * Range of code the refactoring will be applied to.
         */
        range'
          QuestionToken
          TypeLiteral
            PropertySignature
              Identifier: '
            start'
              TypeLiteral
                PropertySignature
                  Identifier: '
                line'
                  NumberKeyword
                PropertySignature
                  Identifier: '
                offset'
                  NumberKeyword
            PropertySignature
              Identifier: '
            end'
              TypeLiteral
                PropertySignature
                  Identifier: '
                line'
                  NumberKeyword
                PropertySignature
                  Identifier: '
                offset'
                  NumberKeyword
      InterfaceDeclaration
        Identifier: ' RefactorEditInfo'
        PropertySignature
          Identifier: '
        edits'
          ArrayType
            TypeReference
              Identifier: ' FileTextChanges'
        PropertySignature
          Identifier: '
        renameFilename'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        renameLocation'
          QuestionToken
          NumberKeyword
        PropertySignature
          Identifier: '
        commands'
          QuestionToken
          ArrayType
            TypeReference
              Identifier: ' CodeActionCommand'
        PropertySignature
          Identifier: '
        notApplicableReason'
          QuestionToken
          StringKeyword
      TypeAliasDeclaration
        Identifier: ' RefactorTriggerReason'
        UnionType
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
      InterfaceDeclaration
        Identifier: ' TextInsertion'
        PropertySignature
          Identifier: '
        newText'
          StringKeyword
        PropertySignature
          Identifier: '
        /** The position in newText the caret should point to after the insertion. */
        caretOffset'
          NumberKeyword
      InterfaceDeclaration
        Identifier: ' DocumentSpan'
        PropertySignature
          Identifier: '
        textSpan'
          TypeReference
            Identifier: ' TextSpan'
        PropertySignature
          Identifier: '
        fileName'
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * If the span represents a location that was remapped (e.g. via a .d.ts.map file),
         * then the original filename and span will be specified here
         */
        originalTextSpan'
          QuestionToken
          TypeReference
            Identifier: ' TextSpan'
        PropertySignature
          Identifier: '
        originalFileName'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * If DocumentSpan.textSpan is the span for name of the declaration,
         * then this is the span for relevant declaration
         */
        contextSpan'
          QuestionToken
          TypeReference
            Identifier: ' TextSpan'
        PropertySignature
          Identifier: '
        originalContextSpan'
          QuestionToken
          TypeReference
            Identifier: ' TextSpan'
      InterfaceDeclaration
        Identifier: ' RenameLocation'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' DocumentSpan'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' prefixText'
          QuestionToken
          StringKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' suffixText'
          QuestionToken
          StringKeyword
      InterfaceDeclaration
        Identifier: ' ReferenceEntry'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' DocumentSpan'
        PropertySignature
          Identifier: '
        isWriteAccess'
          BooleanKeyword
        PropertySignature
          Identifier: '
        isInString'
          QuestionToken
          LiteralType
            TrueKeyword
      InterfaceDeclaration
        Identifier: ' ImplementationLocation'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' DocumentSpan'
        PropertySignature
          Identifier: '
        kind'
          TypeReference
            Identifier: ' ScriptElementKind'
        PropertySignature
          Identifier: '
        displayParts'
          ArrayType
            TypeReference
              Identifier: ' SymbolDisplayPart'
      EnumDeclaration
        Identifier: ' HighlightSpanKind'
        EnumMember
          Identifier: '
        none'
          StringLiteral
        EnumMember
          Identifier: '
        definition'
          StringLiteral
        EnumMember
          Identifier: '
        reference'
          StringLiteral
        EnumMember
          Identifier: '
        writtenReference'
          StringLiteral
      InterfaceDeclaration
        Identifier: ' HighlightSpan'
        PropertySignature
          Identifier: '
        fileName'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        isInString'
          QuestionToken
          LiteralType
            TrueKeyword
        PropertySignature
          Identifier: '
        textSpan'
          TypeReference
            Identifier: ' TextSpan'
        PropertySignature
          Identifier: '
        contextSpan'
          QuestionToken
          TypeReference
            Identifier: ' TextSpan'
        PropertySignature
          Identifier: '
        kind'
          TypeReference
            Identifier: ' HighlightSpanKind'
      InterfaceDeclaration
        Identifier: ' NavigateToItem'
        PropertySignature
          Identifier: '
        name'
          StringKeyword
        PropertySignature
          Identifier: '
        kind'
          TypeReference
            Identifier: ' ScriptElementKind'
        PropertySignature
          Identifier: '
        kindModifiers'
          StringKeyword
        PropertySignature
          Identifier: '
        matchKind'
          UnionType
            LiteralType
              StringLiteral
            LiteralType
              StringLiteral
            LiteralType
              StringLiteral
            LiteralType
              StringLiteral
        PropertySignature
          Identifier: '
        isCaseSensitive'
          BooleanKeyword
        PropertySignature
          Identifier: '
        fileName'
          StringKeyword
        PropertySignature
          Identifier: '
        textSpan'
          TypeReference
            Identifier: ' TextSpan'
        PropertySignature
          Identifier: '
        containerName'
          StringKeyword
        PropertySignature
          Identifier: '
        containerKind'
          TypeReference
            Identifier: ' ScriptElementKind'
      EnumDeclaration
        Identifier: ' IndentStyle'
        EnumMember
          Identifier: '
        None'
          NumericLiteral
        EnumMember
          Identifier: '
        Block'
          NumericLiteral
        EnumMember
          Identifier: '
        Smart'
          NumericLiteral
      EnumDeclaration
        Identifier: ' SemicolonPreference'
        EnumMember
          Identifier: '
        Ignore'
          StringLiteral
        EnumMember
          Identifier: '
        Insert'
          StringLiteral
        EnumMember
          Identifier: '
        Remove'
          StringLiteral
      InterfaceDeclaration
        Identifier: ' EditorOptions'
        PropertySignature
          Identifier: '
        BaseIndentSize'
          QuestionToken
          NumberKeyword
        PropertySignature
          Identifier: '
        IndentSize'
          NumberKeyword
        PropertySignature
          Identifier: '
        TabSize'
          NumberKeyword
        PropertySignature
          Identifier: '
        NewLineCharacter'
          StringKeyword
        PropertySignature
          Identifier: '
        ConvertTabsToSpaces'
          BooleanKeyword
        PropertySignature
          Identifier: '
        IndentStyle'
          TypeReference
            Identifier: ' IndentStyle'
      InterfaceDeclaration
        Identifier: ' EditorSettings'
        PropertySignature
          Identifier: '
        baseIndentSize'
          QuestionToken
          NumberKeyword
        PropertySignature
          Identifier: '
        indentSize'
          QuestionToken
          NumberKeyword
        PropertySignature
          Identifier: '
        tabSize'
          QuestionToken
          NumberKeyword
        PropertySignature
          Identifier: '
        newLineCharacter'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        convertTabsToSpaces'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        indentStyle'
          QuestionToken
          TypeReference
            Identifier: ' IndentStyle'
        PropertySignature
          Identifier: '
        trimTrailingWhitespace'
          QuestionToken
          BooleanKeyword
      InterfaceDeclaration
        Identifier: ' FormatCodeOptions'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' EditorOptions'
        PropertySignature
          Identifier: '
        InsertSpaceAfterCommaDelimiter'
          BooleanKeyword
        PropertySignature
          Identifier: '
        InsertSpaceAfterSemicolonInForStatements'
          BooleanKeyword
        PropertySignature
          Identifier: '
        InsertSpaceBeforeAndAfterBinaryOperators'
          BooleanKeyword
        PropertySignature
          Identifier: '
        InsertSpaceAfterConstructor'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        InsertSpaceAfterKeywordsInControlFlowStatements'
          BooleanKeyword
        PropertySignature
          Identifier: '
        InsertSpaceAfterFunctionKeywordForAnonymousFunctions'
          BooleanKeyword
        PropertySignature
          Identifier: '
        InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis'
          BooleanKeyword
        PropertySignature
          Identifier: '
        InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets'
          BooleanKeyword
        PropertySignature
          Identifier: '
        InsertSpaceAfterOpeningAndBeforeClosingNonemptyBraces'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces'
          BooleanKeyword
        PropertySignature
          Identifier: '
        InsertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        InsertSpaceAfterTypeAssertion'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        InsertSpaceBeforeFunctionParenthesis'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        PlaceOpenBraceOnNewLineForFunctions'
          BooleanKeyword
        PropertySignature
          Identifier: '
        PlaceOpenBraceOnNewLineForControlBlocks'
          BooleanKeyword
        PropertySignature
          Identifier: '
        insertSpaceBeforeTypeAnnotation'
          QuestionToken
          BooleanKeyword
      InterfaceDeclaration
        Identifier: ' FormatCodeSettings'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' EditorSettings'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' insertSpaceAfterCommaDelimiter'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' insertSpaceAfterSemicolonInForStatements'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' insertSpaceBeforeAndAfterBinaryOperators'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' insertSpaceAfterConstructor'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' insertSpaceAfterKeywordsInControlFlowStatements'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' insertSpaceAfterFunctionKeywordForAnonymousFunctions'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' insertSpaceAfterOpeningAndBeforeClosingEmptyBraces'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' insertSpaceAfterTypeAssertion'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' insertSpaceBeforeFunctionParenthesis'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' placeOpenBraceOnNewLineForFunctions'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' placeOpenBraceOnNewLineForControlBlocks'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' insertSpaceBeforeTypeAnnotation'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' indentMultiLineObjectLiteralBeginningOnBlankLine'
          QuestionToken
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' semicolons'
          QuestionToken
          TypeReference
            Identifier: ' SemicolonPreference'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' indentSwitchCase'
          QuestionToken
          BooleanKeyword
      InterfaceDeclaration
        Identifier: ' DefinitionInfo'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' DocumentSpan'
        PropertySignature
          Identifier: '
        kind'
          TypeReference
            Identifier: ' ScriptElementKind'
        PropertySignature
          Identifier: '
        name'
          StringKeyword
        PropertySignature
          Identifier: '
        containerKind'
          TypeReference
            Identifier: ' ScriptElementKind'
        PropertySignature
          Identifier: '
        containerName'
          StringKeyword
        PropertySignature
          Identifier: '
        unverified'
          QuestionToken
          BooleanKeyword
      InterfaceDeclaration
        Identifier: ' DefinitionInfoAndBoundSpan'
        PropertySignature
          Identifier: '
        definitions'
          QuestionToken
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' DefinitionInfo'
        PropertySignature
          Identifier: '
        textSpan'
          TypeReference
            Identifier: ' TextSpan'
      InterfaceDeclaration
        Identifier: ' ReferencedSymbolDefinitionInfo'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' DefinitionInfo'
        PropertySignature
          Identifier: '
        displayParts'
          ArrayType
            TypeReference
              Identifier: ' SymbolDisplayPart'
      InterfaceDeclaration
        Identifier: ' ReferencedSymbol'
        PropertySignature
          Identifier: '
        definition'
          TypeReference
            Identifier: ' ReferencedSymbolDefinitionInfo'
        PropertySignature
          Identifier: '
        references'
          ArrayType
            TypeReference
              Identifier: ' ReferencedSymbolEntry'
      InterfaceDeclaration
        Identifier: ' ReferencedSymbolEntry'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ReferenceEntry'
        PropertySignature
          Identifier: '
        isDefinition'
          QuestionToken
          BooleanKeyword
      EnumDeclaration
        Identifier: ' SymbolDisplayPartKind'
        EnumMember
          Identifier: '
        aliasName'
          NumericLiteral
        EnumMember
          Identifier: '
        className'
          NumericLiteral
        EnumMember
          Identifier: '
        enumName'
          NumericLiteral
        EnumMember
          Identifier: '
        fieldName'
          NumericLiteral
        EnumMember
          Identifier: '
        interfaceName'
          NumericLiteral
        EnumMember
          Identifier: '
        keyword'
          NumericLiteral
        EnumMember
          Identifier: '
        lineBreak'
          NumericLiteral
        EnumMember
          Identifier: '
        numericLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        stringLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        localName'
          NumericLiteral
        EnumMember
          Identifier: '
        methodName'
          NumericLiteral
        EnumMember
          Identifier: '
        moduleName'
          NumericLiteral
        EnumMember
          Identifier: '
        operator'
          NumericLiteral
        EnumMember
          Identifier: '
        parameterName'
          NumericLiteral
        EnumMember
          Identifier: '
        propertyName'
          NumericLiteral
        EnumMember
          Identifier: '
        punctuation'
          NumericLiteral
        EnumMember
          Identifier: '
        space'
          NumericLiteral
        EnumMember
          Identifier: '
        text'
          NumericLiteral
        EnumMember
          Identifier: '
        typeParameterName'
          NumericLiteral
        EnumMember
          Identifier: '
        enumMemberName'
          NumericLiteral
        EnumMember
          Identifier: '
        functionName'
          NumericLiteral
        EnumMember
          Identifier: '
        regularExpressionLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        link'
          NumericLiteral
        EnumMember
          Identifier: '
        linkName'
          NumericLiteral
        EnumMember
          Identifier: '
        linkText'
          NumericLiteral
      InterfaceDeclaration
        Identifier: ' SymbolDisplayPart'
        PropertySignature
          Identifier: '
        /**
         * Text of an item describing the symbol.
         */
        text'
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * The symbol's kind (such as 'className' or 'parameterName' or plain 'text').
         */
        kind'
          StringKeyword
      InterfaceDeclaration
        Identifier: ' JSDocLinkDisplayPart'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' SymbolDisplayPart'
        PropertySignature
          Identifier: '
        target'
          TypeReference
            Identifier: ' DocumentSpan'
      InterfaceDeclaration
        Identifier: ' JSDocTagInfo'
        PropertySignature
          Identifier: '
        name'
          StringKeyword
        PropertySignature
          Identifier: '
        text'
          QuestionToken
          ArrayType
            TypeReference
              Identifier: ' SymbolDisplayPart'
      InterfaceDeclaration
        Identifier: ' QuickInfo'
        PropertySignature
          Identifier: '
        kind'
          TypeReference
            Identifier: ' ScriptElementKind'
        PropertySignature
          Identifier: '
        kindModifiers'
          StringKeyword
        PropertySignature
          Identifier: '
        textSpan'
          TypeReference
            Identifier: ' TextSpan'
        PropertySignature
          Identifier: '
        displayParts'
          QuestionToken
          ArrayType
            TypeReference
              Identifier: ' SymbolDisplayPart'
        PropertySignature
          Identifier: '
        documentation'
          QuestionToken
          ArrayType
            TypeReference
              Identifier: ' SymbolDisplayPart'
        PropertySignature
          Identifier: '
        tags'
          QuestionToken
          ArrayType
            TypeReference
              Identifier: ' JSDocTagInfo'
      TypeAliasDeclaration
        Identifier: ' RenameInfo'
        UnionType
          TypeReference
            Identifier: ' RenameInfoSuccess'
          TypeReference
            Identifier: ' RenameInfoFailure'
      InterfaceDeclaration
        Identifier: ' RenameInfoSuccess'
        PropertySignature
          Identifier: '
        canRename'
          LiteralType
            TrueKeyword
        PropertySignature
          Identifier: '
        /**
         * File or directory to rename.
         * If set, `getEditsForFileRename` should be called instead of `findRenameLocations`.
         */
        fileToRename'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        displayName'
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * Full display name of item to be renamed.
         * If item to be renamed is a file, then this is the original text of the module specifer
         */
        fullDisplayName'
          StringKeyword
        PropertySignature
          Identifier: '
        kind'
          TypeReference
            Identifier: ' ScriptElementKind'
        PropertySignature
          Identifier: '
        kindModifiers'
          StringKeyword
        PropertySignature
          Identifier: '
        triggerSpan'
          TypeReference
            Identifier: ' TextSpan'
      InterfaceDeclaration
        Identifier: ' RenameInfoFailure'
        PropertySignature
          Identifier: '
        canRename'
          LiteralType
            FalseKeyword
        PropertySignature
          Identifier: '
        localizedErrorMessage'
          StringKeyword
      InterfaceDeclaration
        Identifier: ' RenameInfoOptions'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' allowRenameOfImportPath'
          QuestionToken
          BooleanKeyword
      InterfaceDeclaration
        Identifier: ' DocCommentTemplateOptions'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' generateReturnInDocTemplate'
          QuestionToken
          BooleanKeyword
      InterfaceDeclaration
        Identifier: ' InteractiveRefactorArguments'
        PropertySignature
          Identifier: '
        targetFile'
          StringKeyword
      InterfaceDeclaration
        Identifier: ' SignatureHelpParameter'
        PropertySignature
          Identifier: '
        name'
          StringKeyword
        PropertySignature
          Identifier: '
        documentation'
          ArrayType
            TypeReference
              Identifier: ' SymbolDisplayPart'
        PropertySignature
          Identifier: '
        displayParts'
          ArrayType
            TypeReference
              Identifier: ' SymbolDisplayPart'
        PropertySignature
          Identifier: '
        isOptional'
          BooleanKeyword
        PropertySignature
          Identifier: '
        isRest'
          QuestionToken
          BooleanKeyword
      InterfaceDeclaration
        Identifier: ' SelectionRange'
        PropertySignature
          Identifier: '
        textSpan'
          TypeReference
            Identifier: ' TextSpan'
        PropertySignature
          Identifier: '
        parent'
          QuestionToken
          TypeReference
            Identifier: ' SelectionRange'
      InterfaceDeclaration
        Identifier: ' SignatureHelpItem'
        PropertySignature
          Identifier: '
        isVariadic'
          BooleanKeyword
        PropertySignature
          Identifier: '
        prefixDisplayParts'
          ArrayType
            TypeReference
              Identifier: ' SymbolDisplayPart'
        PropertySignature
          Identifier: '
        suffixDisplayParts'
          ArrayType
            TypeReference
              Identifier: ' SymbolDisplayPart'
        PropertySignature
          Identifier: '
        separatorDisplayParts'
          ArrayType
            TypeReference
              Identifier: ' SymbolDisplayPart'
        PropertySignature
          Identifier: '
        parameters'
          ArrayType
            TypeReference
              Identifier: ' SignatureHelpParameter'
        PropertySignature
          Identifier: '
        documentation'
          ArrayType
            TypeReference
              Identifier: ' SymbolDisplayPart'
        PropertySignature
          Identifier: '
        tags'
          ArrayType
            TypeReference
              Identifier: ' JSDocTagInfo'
      InterfaceDeclaration
        Identifier: ' SignatureHelpItems'
        PropertySignature
          Identifier: '
        items'
          ArrayType
            TypeReference
              Identifier: ' SignatureHelpItem'
        PropertySignature
          Identifier: '
        applicableSpan'
          TypeReference
            Identifier: ' TextSpan'
        PropertySignature
          Identifier: '
        selectedItemIndex'
          NumberKeyword
        PropertySignature
          Identifier: '
        argumentIndex'
          NumberKeyword
        PropertySignature
          Identifier: '
        argumentCount'
          NumberKeyword
      EnumDeclaration
        Identifier: ' CompletionInfoFlags'
        EnumMember
          Identifier: '
        None'
          NumericLiteral
        EnumMember
          Identifier: '
        MayIncludeAutoImports'
          NumericLiteral
        EnumMember
          Identifier: '
        IsImportStatementCompletion'
          NumericLiteral
        EnumMember
          Identifier: '
        IsContinuation'
          NumericLiteral
        EnumMember
          Identifier: '
        ResolvedModuleSpecifiers'
          NumericLiteral
        EnumMember
          Identifier: '
        ResolvedModuleSpecifiersBeyondLimit'
          NumericLiteral
        EnumMember
          Identifier: '
        MayIncludeMethodSnippets'
          NumericLiteral
      InterfaceDeclaration
        Identifier: ' CompletionInfo'
        PropertySignature
          Identifier: '
        /** For performance telemetry. */
        flags'
          QuestionToken
          TypeReference
            Identifier: ' CompletionInfoFlags'
        PropertySignature
          Identifier: '
        /** Not true for all global completions. This will be true if the enclosing scope matches a few syntax kinds. See `isSnippetScope`. */
        isGlobalCompletion'
          BooleanKeyword
        PropertySignature
          Identifier: '
        isMemberCompletion'
          BooleanKeyword
        PropertySignature
          Identifier: '
        /**
         * In the absence of `CompletionEntry["replacementSpan"]`, the editor may choose whether to use
         * this span or its default one. If `CompletionEntry["replacementSpan"]` is defined, that span
         * must be used to commit that completion entry.
         */
        optionalReplacementSpan'
          QuestionToken
          TypeReference
            Identifier: ' TextSpan'
        PropertySignature
          Identifier: '
        /**
         * true when the current location also allows for a new identifier
         */
        isNewIdentifierLocation'
          BooleanKeyword
        PropertySignature
          Identifier: '
        /**
         * Indicates to client to continue requesting completions on subsequent keystrokes.
         */
        isIncomplete'
          QuestionToken
          LiteralType
            TrueKeyword
        PropertySignature
          Identifier: '
        entries'
          ArrayType
            TypeReference
              Identifier: ' CompletionEntry'
        PropertySignature
          Identifier: '
        /**
         * Default commit characters for the completion entries.
         */
        defaultCommitCharacters'
          QuestionToken
          ArrayType
            StringKeyword
      InterfaceDeclaration
        Identifier: ' CompletionEntryDataAutoImport'
        PropertySignature
          Identifier: '
        /**
         * The name of the property or export in the module's symbol table. Differs from the completion name
         * in the case of InternalSymbolName.ExportEquals and InternalSymbolName.Default.
         */
        exportName'
          StringKeyword
        PropertySignature
          Identifier: '
        exportMapKey'
          QuestionToken
          TypeReference
            Identifier: ' ExportMapInfoKey'
        PropertySignature
          Identifier: '
        moduleSpecifier'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        /** The file name declaring the export's module symbol, if it was an external module */
        fileName'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        /** The module name (with quotes stripped) of the export's module symbol, if it was an ambient module */
        ambientModuleName'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        /** True if the export was found in the package.json AutoImportProvider */
        isPackageJsonImport'
          QuestionToken
          LiteralType
            TrueKeyword
      InterfaceDeclaration
        Identifier: ' CompletionEntryDataUnresolved'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' CompletionEntryDataAutoImport'
        PropertySignature
          Identifier: '
        exportMapKey'
          TypeReference
            Identifier: ' ExportMapInfoKey'
      InterfaceDeclaration
        Identifier: ' CompletionEntryDataResolved'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' CompletionEntryDataAutoImport'
        PropertySignature
          Identifier: '
        moduleSpecifier'
          StringKeyword
      TypeAliasDeclaration
        Identifier: ' CompletionEntryData'
        UnionType
          TypeReference
            Identifier: ' CompletionEntryDataUnresolved'
          TypeReference
            Identifier: ' CompletionEntryDataResolved'
      InterfaceDeclaration
        Identifier: ' CompletionEntry'
        PropertySignature
          Identifier: '
        name'
          StringKeyword
        PropertySignature
          Identifier: '
        kind'
          TypeReference
            Identifier: ' ScriptElementKind'
        PropertySignature
          Identifier: '
        kindModifiers'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * A string that is used for comparing completion items so that they can be ordered. This
         * is often the same as the name but may be different in certain circumstances.
         */
        sortText'
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * Text to insert instead of `name`.
         * This is used to support bracketed completions; If `name` might be "a-b" but `insertText` would be `["a-b"]`,
         * coupled with `replacementSpan` to replace a dotted access with a bracket access.
         */
        insertText'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * A string that should be used when filtering a set of
         * completion items.
         */
        filterText'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * `insertText` should be interpreted as a snippet if true.
         */
        isSnippet'
          QuestionToken
          LiteralType
            TrueKeyword
        PropertySignature
          Identifier: '
        /**
         * An optional span that indicates the text to be replaced by this completion item.
         * If present, this span should be used instead of the default one.
         * It will be set if the required span differs from the one generated by the default replacement behavior.
         */
        replacementSpan'
          QuestionToken
          TypeReference
            Identifier: ' TextSpan'
        PropertySignature
          Identifier: '
        /**
         * Indicates whether commiting this completion entry will require additional code actions to be
         * made to avoid errors. The CompletionEntryDetails will have these actions.
         */
        hasAction'
          QuestionToken
          LiteralType
            TrueKeyword
        PropertySignature
          Identifier: '
        /**
         * Identifier (not necessarily human-readable) identifying where this completion came from.
         */
        source'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * Human-readable description of the `source`.
         */
        sourceDisplay'
          QuestionToken
          ArrayType
            TypeReference
              Identifier: ' SymbolDisplayPart'
        PropertySignature
          Identifier: '
        /**
         * Additional details for the label.
         */
        labelDetails'
          QuestionToken
          TypeReference
            Identifier: ' CompletionEntryLabelDetails'
        PropertySignature
          Identifier: '
        /**
         * If true, this completion should be highlighted as recommended. There will only be one of these.
         * This will be set when we know the user should write an expression with a certain type and that type is an enum or constructable class.
         * Then either that enum/class or a namespace containing it will be the recommended symbol.
         */
        isRecommended'
          QuestionToken
          LiteralType
            TrueKeyword
        PropertySignature
          Identifier: '
        /**
         * If true, this completion was generated from traversing the name table of an unchecked JS file,
         * and therefore may not be accurate.
         */
        isFromUncheckedFile'
          QuestionToken
          LiteralType
            TrueKeyword
        PropertySignature
          Identifier: '
        /**
         * If true, this completion was for an auto-import of a module not yet in the program, but listed
         * in the project package.json. Used for telemetry reporting.
         */
        isPackageJsonImport'
          QuestionToken
          LiteralType
            TrueKeyword
        PropertySignature
          Identifier: '
        /**
         * If true, this completion was an auto-import-style completion of an import statement (i.e., the
         * module specifier was inserted along with the imported identifier). Used for telemetry reporting.
         */
        isImportStatementCompletion'
          QuestionToken
          LiteralType
            TrueKeyword
        PropertySignature
          Identifier: '
        /**
         * For API purposes.
         * Included for non-string completions only when `includeSymbol: true` option is passed to `getCompletionsAtPosition`.
         * @example Get declaration of completion: `symbol.valueDeclaration`
         */
        symbol'
          QuestionToken
          TypeReference
            Identifier: ' Symbol'
        PropertySignature
          Identifier: '
        /**
         * A property to be sent back to TS Server in the CompletionDetailsRequest, along with `name`,
         * that allows TS Server to look up the symbol represented by the completion item, disambiguating
         * items with the same name. Currently only defined for auto-import completions, but the type is
         * `unknown` in the protocol, so it can be changed as needed to support other kinds of completions.
         * The presence of this property should generally not be used to assume that this completion entry
         * is an auto-import.
         */
        data'
          QuestionToken
          TypeReference
            Identifier: ' CompletionEntryData'
        PropertySignature
          Identifier: '
        /**
         * If this completion entry is selected, typing a commit character will cause the entry to be accepted.
         */
        commitCharacters'
          QuestionToken
          ArrayType
            StringKeyword
      InterfaceDeclaration
        Identifier: ' CompletionEntryLabelDetails'
        PropertySignature
          Identifier: '
        /**
         * An optional string which is rendered less prominently directly after
         * {@link CompletionEntry.name name}, without any spacing. Should be
         * used for function signatures or type annotations.
         */
        detail'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * An optional string which is rendered less prominently after
         * {@link CompletionEntryLabelDetails.detail}. Should be used for fully qualified
         * names or file path.
         */
        description'
          QuestionToken
          StringKeyword
      InterfaceDeclaration
        Identifier: ' CompletionEntryDetails'
        PropertySignature
          Identifier: '
        name'
          StringKeyword
        PropertySignature
          Identifier: '
        kind'
          TypeReference
            Identifier: ' ScriptElementKind'
        PropertySignature
          Identifier: '
        kindModifiers'
          StringKeyword
        PropertySignature
          Identifier: '
        displayParts'
          ArrayType
            TypeReference
              Identifier: ' SymbolDisplayPart'
        PropertySignature
          Identifier: '
        documentation'
          QuestionToken
          ArrayType
            TypeReference
              Identifier: ' SymbolDisplayPart'
        PropertySignature
          Identifier: '
        tags'
          QuestionToken
          ArrayType
            TypeReference
              Identifier: ' JSDocTagInfo'
        PropertySignature
          Identifier: '
        codeActions'
          QuestionToken
          ArrayType
            TypeReference
              Identifier: ' CodeAction'
        PropertySignature
          Identifier: '
        /** @deprecated Use `sourceDisplay` instead. */
        source'
          QuestionToken
          ArrayType
            TypeReference
              Identifier: ' SymbolDisplayPart'
        PropertySignature
          Identifier: '
        sourceDisplay'
          QuestionToken
          ArrayType
            TypeReference
              Identifier: ' SymbolDisplayPart'
      InterfaceDeclaration
        Identifier: ' OutliningSpan'
        PropertySignature
          Identifier: '
        /** The span of the document to actually collapse. */
        textSpan'
          TypeReference
            Identifier: ' TextSpan'
        PropertySignature
          Identifier: '
        /** The span of the document to display when the user hovers over the collapsed span. */
        hintSpan'
          TypeReference
            Identifier: ' TextSpan'
        PropertySignature
          Identifier: '
        /** The text to display in the editor for the collapsed region. */
        bannerText'
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * Whether or not this region should be automatically collapsed when
         * the 'Collapse to Definitions' command is invoked.
         */
        autoCollapse'
          BooleanKeyword
        PropertySignature
          Identifier: '
        /**
         * Classification of the contents of the span
         */
        kind'
          TypeReference
            Identifier: ' OutliningSpanKind'
      EnumDeclaration
        Identifier: ' OutliningSpanKind'
        EnumMember
          Identifier: '
        /** Single or multi-line comments */
        Comment'
          StringLiteral
        EnumMember
          Identifier: '
        /** Sections marked by '// #region' and '// #endregion' comments */
        Region'
          StringLiteral
        EnumMember
          Identifier: '
        /** Declarations and expressions */
        Code'
          StringLiteral
        EnumMember
          Identifier: '
        /** Contiguous blocks of import declarations */
        Imports'
          StringLiteral
      EnumDeclaration
        Identifier: ' OutputFileType'
        EnumMember
          Identifier: '
        JavaScript'
          NumericLiteral
        EnumMember
          Identifier: '
        SourceMap'
          NumericLiteral
        EnumMember
          Identifier: '
        Declaration'
          NumericLiteral
      EnumDeclaration
        Identifier: ' EndOfLineState'
        EnumMember
          Identifier: '
        None'
          NumericLiteral
        EnumMember
          Identifier: '
        InMultiLineCommentTrivia'
          NumericLiteral
        EnumMember
          Identifier: '
        InSingleQuoteStringLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        InDoubleQuoteStringLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        InTemplateHeadOrNoSubstitutionTemplate'
          NumericLiteral
        EnumMember
          Identifier: '
        InTemplateMiddleOrTail'
          NumericLiteral
        EnumMember
          Identifier: '
        InTemplateSubstitutionPosition'
          NumericLiteral
      EnumDeclaration
        Identifier: ' TokenClass'
        EnumMember
          Identifier: '
        Punctuation'
          NumericLiteral
        EnumMember
          Identifier: '
        Keyword'
          NumericLiteral
        EnumMember
          Identifier: '
        Operator'
          NumericLiteral
        EnumMember
          Identifier: '
        Comment'
          NumericLiteral
        EnumMember
          Identifier: '
        Whitespace'
          NumericLiteral
        EnumMember
          Identifier: '
        Identifier'
          NumericLiteral
        EnumMember
          Identifier: '
        NumberLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        BigIntLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        StringLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        RegExpLiteral'
          NumericLiteral
      InterfaceDeclaration
        Identifier: ' ClassificationResult'
        PropertySignature
          Identifier: '
        finalLexState'
          TypeReference
            Identifier: ' EndOfLineState'
        PropertySignature
          Identifier: '
        entries'
          ArrayType
            TypeReference
              Identifier: ' ClassificationInfo'
      InterfaceDeclaration
        Identifier: ' ClassificationInfo'
        PropertySignature
          Identifier: '
        length'
          NumberKeyword
        PropertySignature
          Identifier: '
        classification'
          TypeReference
            Identifier: ' TokenClass'
      InterfaceDeclaration
        Identifier: ' Classifier'
        MethodSignature
          Identifier: '
        /**
         * Gives lexical classifications of tokens on a line without any syntactic context.
         * For instance, a token consisting of the text 'string' can be either an identifier
         * named 'string' or the keyword 'string', however, because this classifier is not aware,
         * it relies on certain heuristics to give acceptable results. For classifications where
         * speed trumps accuracy, this function is preferable; however, for true accuracy, the
         * syntactic classifier is ideal. In fact, in certain editing scenarios, combining the
         * lexical, syntactic, and semantic classifiers may issue the best user experience.
         *
         * @param text                      The text of a line to classify.
         * @param lexState                  The state of the lexical classifier at the end of the previous line.
         * @param syntacticClassifierAbsent Whether the client is *not* using a syntactic classifier.
         *                                  If there is no syntactic classifier (syntacticClassifierAbsent=true),
         *                                  certain heuristics may be used in its place; however, if there is a
         *                                  syntactic classifier (syntacticClassifierAbsent=false), certain
         *                                  classifications which may be incorrectly categorized will be given
         *                                  back as Identifiers in order to allow the syntactic classifier to
         *                                  subsume the classification.
         * @deprecated Use getLexicalClassifications instead.
         */
        getClassificationsForLine'
          Parameter
            Identifier: 'text'
            StringKeyword
          Parameter
            Identifier: ' lexState'
            TypeReference
              Identifier: ' EndOfLineState'
          Parameter
            Identifier: ' syntacticClassifierAbsent'
            BooleanKeyword
          TypeReference
            Identifier: ' ClassificationResult'
        MethodSignature
          Identifier: '
        getEncodedLexicalClassifications'
          Parameter
            Identifier: 'text'
            StringKeyword
          Parameter
            Identifier: ' endOfLineState'
            TypeReference
              Identifier: ' EndOfLineState'
          Parameter
            Identifier: ' syntacticClassifierAbsent'
            BooleanKeyword
          TypeReference
            Identifier: ' Classifications'
      EnumDeclaration
        Identifier: ' ScriptElementKind'
        EnumMember
          Identifier: '
        unknown'
          StringLiteral
        EnumMember
          Identifier: '
        warning'
          StringLiteral
        EnumMember
          Identifier: '
        /** predefined type (void) or keyword (class) */
        keyword'
          StringLiteral
        EnumMember
          Identifier: '
        /** top level script node */
        scriptElement'
          StringLiteral
        EnumMember
          Identifier: '
        /** module foo {} */
        moduleElement'
          StringLiteral
        EnumMember
          Identifier: '
        /** class X {} */
        classElement'
          StringLiteral
        EnumMember
          Identifier: '
        /** var x = class X {} */
        localClassElement'
          StringLiteral
        EnumMember
          Identifier: '
        /** interface Y {} */
        interfaceElement'
          StringLiteral
        EnumMember
          Identifier: '
        /** type T = ... */
        typeElement'
          StringLiteral
        EnumMember
          Identifier: '
        /** enum E */
        enumElement'
          StringLiteral
        EnumMember
          Identifier: '
        enumMemberElement'
          StringLiteral
        EnumMember
          Identifier: '
        /**
         * Inside module and script only
         * const v = ..
         */
        variableElement'
          StringLiteral
        EnumMember
          Identifier: '
        /** Inside function */
        localVariableElement'
          StringLiteral
        EnumMember
          Identifier: '
        /** using foo = ... */
        variableUsingElement'
          StringLiteral
        EnumMember
          Identifier: '
        /** await using foo = ... */
        variableAwaitUsingElement'
          StringLiteral
        EnumMember
          Identifier: '
        /**
         * Inside module and script only
         * function f() { }
         */
        functionElement'
          StringLiteral
        EnumMember
          Identifier: '
        /** Inside function */
        localFunctionElement'
          StringLiteral
        EnumMember
          Identifier: '
        /** class X { [public|private]* foo() {} } */
        memberFunctionElement'
          StringLiteral
        EnumMember
          Identifier: '
        /** class X { [public|private]* [get|set] foo:number; } */
        memberGetAccessorElement'
          StringLiteral
        EnumMember
          Identifier: '
        memberSetAccessorElement'
          StringLiteral
        EnumMember
          Identifier: '
        /**
         * class X { [public|private]* foo:number; }
         * interface Y { foo:number; }
         */
        memberVariableElement'
          StringLiteral
        EnumMember
          Identifier: '
        /** class X { [public|private]* accessor foo: number; } */
        memberAccessorVariableElement'
          StringLiteral
        EnumMember
          Identifier: '
        /**
         * class X { constructor() { } }
         * class X { static { } }
         */
        constructorImplementationElement'
          StringLiteral
        EnumMember
          Identifier: '
        /** interface Y { ():number; } */
        callSignatureElement'
          StringLiteral
        EnumMember
          Identifier: '
        /** interface Y { []:number; } */
        indexSignatureElement'
          StringLiteral
        EnumMember
          Identifier: '
        /** interface Y { new():Y; } */
        constructSignatureElement'
          StringLiteral
        EnumMember
          Identifier: '
        /** function foo(*Y*: string) */
        parameterElement'
          StringLiteral
        EnumMember
          Identifier: '
        typeParameterElement'
          StringLiteral
        EnumMember
          Identifier: '
        primitiveType'
          StringLiteral
        EnumMember
          Identifier: '
        label'
          StringLiteral
        EnumMember
          Identifier: '
        alias'
          StringLiteral
        EnumMember
          Identifier: '
        constElement'
          StringLiteral
        EnumMember
          Identifier: '
        letElement'
          StringLiteral
        EnumMember
          Identifier: '
        directory'
          StringLiteral
        EnumMember
          Identifier: '
        externalModuleName'
          StringLiteral
        EnumMember
          Identifier: '
        /**
         * <JsxTagName attribute1 attribute2={0} />
         * @deprecated
         */
        jsxAttribute'
          StringLiteral
        EnumMember
          Identifier: '
        /** String literal */
        string'
          StringLiteral
        EnumMember
          Identifier: '
        /** Jsdoc @link: in `{@link C link text}`, the before and after text "{@link " and "}" */
        link'
          StringLiteral
        EnumMember
          Identifier: '
        /** Jsdoc @link: in `{@link C link text}`, the entity name "C" */
        linkName'
          StringLiteral
        EnumMember
          Identifier: '
        /** Jsdoc @link: in `{@link C link text}`, the link text "link text" */
        linkText'
          StringLiteral
      EnumDeclaration
        Identifier: ' ScriptElementKindModifier'
        EnumMember
          Identifier: '
        none'
          StringLiteral
        EnumMember
          Identifier: '
        publicMemberModifier'
          StringLiteral
        EnumMember
          Identifier: '
        privateMemberModifier'
          StringLiteral
        EnumMember
          Identifier: '
        protectedMemberModifier'
          StringLiteral
        EnumMember
          Identifier: '
        exportedModifier'
          StringLiteral
        EnumMember
          Identifier: '
        ambientModifier'
          StringLiteral
        EnumMember
          Identifier: '
        staticModifier'
          StringLiteral
        EnumMember
          Identifier: '
        abstractModifier'
          StringLiteral
        EnumMember
          Identifier: '
        optionalModifier'
          StringLiteral
        EnumMember
          Identifier: '
        deprecatedModifier'
          StringLiteral
        EnumMember
          Identifier: '
        dtsModifier'
          StringLiteral
        EnumMember
          Identifier: '
        tsModifier'
          StringLiteral
        EnumMember
          Identifier: '
        tsxModifier'
          StringLiteral
        EnumMember
          Identifier: '
        jsModifier'
          StringLiteral
        EnumMember
          Identifier: '
        jsxModifier'
          StringLiteral
        EnumMember
          Identifier: '
        jsonModifier'
          StringLiteral
        EnumMember
          Identifier: '
        dmtsModifier'
          StringLiteral
        EnumMember
          Identifier: '
        mtsModifier'
          StringLiteral
        EnumMember
          Identifier: '
        mjsModifier'
          StringLiteral
        EnumMember
          Identifier: '
        dctsModifier'
          StringLiteral
        EnumMember
          Identifier: '
        ctsModifier'
          StringLiteral
        EnumMember
          Identifier: '
        cjsModifier'
          StringLiteral
      EnumDeclaration
        Identifier: ' ClassificationTypeNames'
        EnumMember
          Identifier: '
        comment'
          StringLiteral
        EnumMember
          Identifier: '
        identifier'
          StringLiteral
        EnumMember
          Identifier: '
        keyword'
          StringLiteral
        EnumMember
          Identifier: '
        numericLiteral'
          StringLiteral
        EnumMember
          Identifier: '
        bigintLiteral'
          StringLiteral
        EnumMember
          Identifier: '
        operator'
          StringLiteral
        EnumMember
          Identifier: '
        stringLiteral'
          StringLiteral
        EnumMember
          Identifier: '
        whiteSpace'
          StringLiteral
        EnumMember
          Identifier: '
        text'
          StringLiteral
        EnumMember
          Identifier: '
        punctuation'
          StringLiteral
        EnumMember
          Identifier: '
        className'
          StringLiteral
        EnumMember
          Identifier: '
        enumName'
          StringLiteral
        EnumMember
          Identifier: '
        interfaceName'
          StringLiteral
        EnumMember
          Identifier: '
        moduleName'
          StringLiteral
        EnumMember
          Identifier: '
        typeParameterName'
          StringLiteral
        EnumMember
          Identifier: '
        typeAliasName'
          StringLiteral
        EnumMember
          Identifier: '
        parameterName'
          StringLiteral
        EnumMember
          Identifier: '
        docCommentTagName'
          StringLiteral
        EnumMember
          Identifier: '
        jsxOpenTagName'
          StringLiteral
        EnumMember
          Identifier: '
        jsxCloseTagName'
          StringLiteral
        EnumMember
          Identifier: '
        jsxSelfClosingTagName'
          StringLiteral
        EnumMember
          Identifier: '
        jsxAttribute'
          StringLiteral
        EnumMember
          Identifier: '
        jsxText'
          StringLiteral
        EnumMember
          Identifier: '
        jsxAttributeStringLiteralValue'
          StringLiteral
      EnumDeclaration
        Identifier: ' ClassificationType'
        EnumMember
          Identifier: '
        comment'
          NumericLiteral
        EnumMember
          Identifier: '
        identifier'
          NumericLiteral
        EnumMember
          Identifier: '
        keyword'
          NumericLiteral
        EnumMember
          Identifier: '
        numericLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        operator'
          NumericLiteral
        EnumMember
          Identifier: '
        stringLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        regularExpressionLiteral'
          NumericLiteral
        EnumMember
          Identifier: '
        whiteSpace'
          NumericLiteral
        EnumMember
          Identifier: '
        text'
          NumericLiteral
        EnumMember
          Identifier: '
        punctuation'
          NumericLiteral
        EnumMember
          Identifier: '
        className'
          NumericLiteral
        EnumMember
          Identifier: '
        enumName'
          NumericLiteral
        EnumMember
          Identifier: '
        interfaceName'
          NumericLiteral
        EnumMember
          Identifier: '
        moduleName'
          NumericLiteral
        EnumMember
          Identifier: '
        typeParameterName'
          NumericLiteral
        EnumMember
          Identifier: '
        typeAliasName'
          NumericLiteral
        EnumMember
          Identifier: '
        parameterName'
          NumericLiteral
        EnumMember
          Identifier: '
        docCommentTagName'
          NumericLiteral
        EnumMember
          Identifier: '
        jsxOpenTagName'
          NumericLiteral
        EnumMember
          Identifier: '
        jsxCloseTagName'
          NumericLiteral
        EnumMember
          Identifier: '
        jsxSelfClosingTagName'
          NumericLiteral
        EnumMember
          Identifier: '
        jsxAttribute'
          NumericLiteral
        EnumMember
          Identifier: '
        jsxText'
          NumericLiteral
        EnumMember
          Identifier: '
        jsxAttributeStringLiteralValue'
          NumericLiteral
        EnumMember
          Identifier: '
        bigintLiteral'
          NumericLiteral
      InterfaceDeclaration
        Identifier: ' InlayHintsContext'
        PropertySignature
          Identifier: '
        file'
          TypeReference
            Identifier: ' SourceFile'
        PropertySignature
          Identifier: '
        program'
          TypeReference
            Identifier: ' Program'
        PropertySignature
          Identifier: '
        cancellationToken'
          TypeReference
            Identifier: ' CancellationToken'
        PropertySignature
          Identifier: '
        host'
          TypeReference
            Identifier: ' LanguageServiceHost'
        PropertySignature
          Identifier: '
        span'
          TypeReference
            Identifier: ' TextSpan'
        PropertySignature
          Identifier: '
        preferences'
          TypeReference
            Identifier: ' UserPreferences'
      TypeAliasDeclaration
        Identifier: ' ExportMapInfoKey'
        IntersectionType
          StringKeyword
          TypeLiteral
            PropertySignature
              Identifier: '
        __exportInfoKey'
              VoidKeyword
      FunctionDeclaration
        Identifier: ' createClassifier'
        TypeReference
          Identifier: ' Classifier'
      InterfaceDeclaration
        Identifier: ' DocumentHighlights'
        PropertySignature
          Identifier: '
        fileName'
          StringKeyword
        PropertySignature
          Identifier: '
        highlightSpans'
          ArrayType
            TypeReference
              Identifier: ' HighlightSpan'
      FunctionDeclaration
        Identifier: ' createDocumentRegistry'
        Parameter
          Identifier: 'useCaseSensitiveFileNames'
          QuestionToken
          BooleanKeyword
        Parameter
          Identifier: ' currentDirectory'
          QuestionToken
          StringKeyword
        Parameter
          Identifier: ' jsDocParsingMode'
          QuestionToken
          TypeReference
            Identifier: ' JSDocParsingMode'
        TypeReference
          Identifier: ' DocumentRegistry'
      InterfaceDeclaration
        Identifier: ' DocumentRegistry'
        MethodSignature
          Identifier: '
        /**
         * Request a stored SourceFile with a given fileName and compilationSettings.
         * The first call to acquire will call createLanguageServiceSourceFile to generate
         * the SourceFile if was not found in the registry.
         *
         * @param fileName The name of the file requested
         * @param compilationSettingsOrHost Some compilation settings like target affects the
         * shape of a the resulting SourceFile. This allows the DocumentRegistry to store
         * multiple copies of the same file for different compilation settings. A minimal
         * resolution cache is needed to fully define a source file's shape when
         * the compilation settings include `module: node16`+, so providing a cache host
         * object should be preferred. A common host is a language service `ConfiguredProject`.
         * @param scriptSnapshot Text of the file. Only used if the file was not found
         * in the registry and a new one was created.
         * @param version Current version of the file. Only used if the file was not found
         * in the registry and a new one was created.
         */
        acquireDocument'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' compilationSettingsOrHost'
            UnionType
              TypeReference
                Identifier: ' CompilerOptions'
              TypeReference
                Identifier: ' MinimalResolutionCacheHost'
          Parameter
            Identifier: ' scriptSnapshot'
            TypeReference
              Identifier: ' IScriptSnapshot'
          Parameter
            Identifier: ' version'
            StringKeyword
          Parameter
            Identifier: ' scriptKind'
            QuestionToken
            TypeReference
              Identifier: ' ScriptKind'
          Parameter
            Identifier: ' sourceFileOptions'
            QuestionToken
            UnionType
              TypeReference
                Identifier: ' CreateSourceFileOptions'
              TypeReference
                Identifier: ' ScriptTarget'
          TypeReference
            Identifier: ' SourceFile'
        MethodSignature
          Identifier: '
        acquireDocumentWithKey'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' path'
            TypeReference
              Identifier: ' Path'
          Parameter
            Identifier: ' compilationSettingsOrHost'
            UnionType
              TypeReference
                Identifier: ' CompilerOptions'
              TypeReference
                Identifier: ' MinimalResolutionCacheHost'
          Parameter
            Identifier: ' key'
            TypeReference
              Identifier: ' DocumentRegistryBucketKey'
          Parameter
            Identifier: ' scriptSnapshot'
            TypeReference
              Identifier: ' IScriptSnapshot'
          Parameter
            Identifier: ' version'
            StringKeyword
          Parameter
            Identifier: ' scriptKind'
            QuestionToken
            TypeReference
              Identifier: ' ScriptKind'
          Parameter
            Identifier: ' sourceFileOptions'
            QuestionToken
            UnionType
              TypeReference
                Identifier: ' CreateSourceFileOptions'
              TypeReference
                Identifier: ' ScriptTarget'
          TypeReference
            Identifier: ' SourceFile'
        MethodSignature
          Identifier: '
        /**
         * Request an updated version of an already existing SourceFile with a given fileName
         * and compilationSettings. The update will in-turn call updateLanguageServiceSourceFile
         * to get an updated SourceFile.
         *
         * @param fileName The name of the file requested
         * @param compilationSettingsOrHost Some compilation settings like target affects the
         * shape of a the resulting SourceFile. This allows the DocumentRegistry to store
         * multiple copies of the same file for different compilation settings. A minimal
         * resolution cache is needed to fully define a source file's shape when
         * the compilation settings include `module: node16`+, so providing a cache host
         * object should be preferred. A common host is a language service `ConfiguredProject`.
         * @param scriptSnapshot Text of the file.
         * @param version Current version of the file.
         */
        updateDocument'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' compilationSettingsOrHost'
            UnionType
              TypeReference
                Identifier: ' CompilerOptions'
              TypeReference
                Identifier: ' MinimalResolutionCacheHost'
          Parameter
            Identifier: ' scriptSnapshot'
            TypeReference
              Identifier: ' IScriptSnapshot'
          Parameter
            Identifier: ' version'
            StringKeyword
          Parameter
            Identifier: ' scriptKind'
            QuestionToken
            TypeReference
              Identifier: ' ScriptKind'
          Parameter
            Identifier: ' sourceFileOptions'
            QuestionToken
            UnionType
              TypeReference
                Identifier: ' CreateSourceFileOptions'
              TypeReference
                Identifier: ' ScriptTarget'
          TypeReference
            Identifier: ' SourceFile'
        MethodSignature
          Identifier: '
        updateDocumentWithKey'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' path'
            TypeReference
              Identifier: ' Path'
          Parameter
            Identifier: ' compilationSettingsOrHost'
            UnionType
              TypeReference
                Identifier: ' CompilerOptions'
              TypeReference
                Identifier: ' MinimalResolutionCacheHost'
          Parameter
            Identifier: ' key'
            TypeReference
              Identifier: ' DocumentRegistryBucketKey'
          Parameter
            Identifier: ' scriptSnapshot'
            TypeReference
              Identifier: ' IScriptSnapshot'
          Parameter
            Identifier: ' version'
            StringKeyword
          Parameter
            Identifier: ' scriptKind'
            QuestionToken
            TypeReference
              Identifier: ' ScriptKind'
          Parameter
            Identifier: ' sourceFileOptions'
            QuestionToken
            UnionType
              TypeReference
                Identifier: ' CreateSourceFileOptions'
              TypeReference
                Identifier: ' ScriptTarget'
          TypeReference
            Identifier: ' SourceFile'
        MethodSignature
          Identifier: '
        getKeyForCompilationSettings'
          Parameter
            Identifier: 'settings'
            TypeReference
              Identifier: ' CompilerOptions'
          TypeReference
            Identifier: ' DocumentRegistryBucketKey'
        MethodSignature
          Identifier: '
        /**
         * Informs the DocumentRegistry that a file is not needed any longer.
         *
         * Note: It is not allowed to call release on a SourceFile that was not acquired from
         * this registry originally.
         *
         * @param fileName The name of the file to be released
         * @param compilationSettings The compilation settings used to acquire the file
         * @param scriptKind The script kind of the file to be released
         *
         * @deprecated pass scriptKind and impliedNodeFormat for correctness
         */
        releaseDocument'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' compilationSettings'
            TypeReference
              Identifier: ' CompilerOptions'
          Parameter
            Identifier: ' scriptKind'
            QuestionToken
            TypeReference
              Identifier: ' ScriptKind'
          VoidKeyword
        MethodSignature
          Identifier: '
        /**
         * Informs the DocumentRegistry that a file is not needed any longer.
         *
         * Note: It is not allowed to call release on a SourceFile that was not acquired from
         * this registry originally.
         *
         * @param fileName The name of the file to be released
         * @param compilationSettings The compilation settings used to acquire the file
         * @param scriptKind The script kind of the file to be released
         * @param impliedNodeFormat The implied source file format of the file to be released
         */
        releaseDocument'
          Parameter
            Identifier: 'fileName'
            StringKeyword
          Parameter
            Identifier: ' compilationSettings'
            TypeReference
              Identifier: ' CompilerOptions'
          Parameter
            Identifier: ' scriptKind'
            TypeReference
              Identifier: ' ScriptKind'
          Parameter
            Identifier: ' impliedNodeFormat'
            TypeReference
              Identifier: ' ResolutionMode'
          VoidKeyword
        MethodSignature
          Identifier: '
        /**
         * @deprecated pass scriptKind for and impliedNodeFormat correctness */
        releaseDocumentWithKey'
          Parameter
            Identifier: 'path'
            TypeReference
              Identifier: ' Path'
          Parameter
            Identifier: ' key'
            TypeReference
              Identifier: ' DocumentRegistryBucketKey'
          Parameter
            Identifier: ' scriptKind'
            QuestionToken
            TypeReference
              Identifier: ' ScriptKind'
          VoidKeyword
        MethodSignature
          Identifier: '
        releaseDocumentWithKey'
          Parameter
            Identifier: 'path'
            TypeReference
              Identifier: ' Path'
          Parameter
            Identifier: ' key'
            TypeReference
              Identifier: ' DocumentRegistryBucketKey'
          Parameter
            Identifier: ' scriptKind'
            TypeReference
              Identifier: ' ScriptKind'
          Parameter
            Identifier: ' impliedNodeFormat'
            TypeReference
              Identifier: ' ResolutionMode'
          VoidKeyword
        MethodSignature
          Identifier: '
        reportStats'
          StringKeyword
      TypeAliasDeclaration
        Identifier: ' DocumentRegistryBucketKey'
        IntersectionType
          StringKeyword
          TypeLiteral
            PropertySignature
              Identifier: '
        __bucketKey'
              AnyKeyword
      FunctionDeclaration
        Identifier: ' preProcessFile'
        Parameter
          Identifier: 'sourceText'
          StringKeyword
        Parameter
          Identifier: ' readImportFiles'
          QuestionToken
          BooleanKeyword
        Parameter
          Identifier: ' detectJavaScriptImports'
          QuestionToken
          BooleanKeyword
        TypeReference
          Identifier: ' PreProcessedFileInfo'
      FunctionDeclaration
        Identifier: ' transpileModule'
        Parameter
          Identifier: 'input'
          StringKeyword
        Parameter
          Identifier: ' transpileOptions'
          TypeReference
            Identifier: ' TranspileOptions'
        TypeReference
          Identifier: ' TranspileOutput'
      FunctionDeclaration
        Identifier: ' transpileDeclaration'
        Parameter
          Identifier: 'input'
          StringKeyword
        Parameter
          Identifier: ' transpileOptions'
          TypeReference
            Identifier: ' TranspileOptions'
        TypeReference
          Identifier: ' TranspileOutput'
      FunctionDeclaration
        Identifier: ' transpile'
        Parameter
          Identifier: 'input'
          StringKeyword
        Parameter
          Identifier: ' compilerOptions'
          QuestionToken
          TypeReference
            Identifier: ' CompilerOptions'
        Parameter
          Identifier: ' fileName'
          QuestionToken
          StringKeyword
        Parameter
          Identifier: ' diagnostics'
          QuestionToken
          ArrayType
            TypeReference
              Identifier: ' Diagnostic'
        Parameter
          Identifier: ' moduleName'
          QuestionToken
          StringKeyword
        StringKeyword
      InterfaceDeclaration
        Identifier: ' TranspileOptions'
        PropertySignature
          Identifier: '
        compilerOptions'
          QuestionToken
          TypeReference
            Identifier: ' CompilerOptions'
        PropertySignature
          Identifier: '
        fileName'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        reportDiagnostics'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        moduleName'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        renamedDependencies'
          QuestionToken
          TypeReference
            Identifier: ' MapLike'
            StringKeyword
        PropertySignature
          Identifier: '
        transformers'
          QuestionToken
          TypeReference
            Identifier: ' CustomTransformers'
        PropertySignature
          Identifier: '
        jsDocParsingMode'
          QuestionToken
          TypeReference
            Identifier: ' JSDocParsingMode'
      InterfaceDeclaration
        Identifier: ' TranspileOutput'
        PropertySignature
          Identifier: '
        outputText'
          StringKeyword
        PropertySignature
          Identifier: '
        diagnostics'
          QuestionToken
          ArrayType
            TypeReference
              Identifier: ' Diagnostic'
        PropertySignature
          Identifier: '
        sourceMapText'
          QuestionToken
          StringKeyword
      FunctionDeclaration
        Identifier: ' toEditorSettings'
        Parameter
          Identifier: 'options'
          UnionType
            TypeReference
              Identifier: ' EditorOptions'
            TypeReference
              Identifier: ' EditorSettings'
        TypeReference
          Identifier: ' EditorSettings'
      FunctionDeclaration
        Identifier: ' displayPartsToString'
        Parameter
          Identifier: 'displayParts'
          UnionType
            ArrayType
              TypeReference
                Identifier: ' SymbolDisplayPart'
            UndefinedKeyword
        StringKeyword
      FunctionDeclaration
        Identifier: ' getDefaultCompilerOptions'
        TypeReference
          Identifier: ' CompilerOptions'
      FunctionDeclaration
        Identifier: ' getSupportedCodeFixes'
        TypeOperator
          ArrayType
            StringKeyword
      FunctionDeclaration
        Identifier: ' createLanguageServiceSourceFile'
        Parameter
          Identifier: 'fileName'
          StringKeyword
        Parameter
          Identifier: ' scriptSnapshot'
          TypeReference
            Identifier: ' IScriptSnapshot'
        Parameter
          Identifier: ' scriptTargetOrOptions'
          UnionType
            TypeReference
              Identifier: ' ScriptTarget'
            TypeReference
              Identifier: ' CreateSourceFileOptions'
        Parameter
          Identifier: ' version'
          StringKeyword
        Parameter
          Identifier: ' setNodeParents'
          BooleanKeyword
        Parameter
          Identifier: ' scriptKind'
          QuestionToken
          TypeReference
            Identifier: ' ScriptKind'
        TypeReference
          Identifier: ' SourceFile'
      FunctionDeclaration
        Identifier: ' updateLanguageServiceSourceFile'
        Parameter
          Identifier: 'sourceFile'
          TypeReference
            Identifier: ' SourceFile'
        Parameter
          Identifier: ' scriptSnapshot'
          TypeReference
            Identifier: ' IScriptSnapshot'
        Parameter
          Identifier: ' version'
          StringKeyword
        Parameter
          Identifier: ' textChangeRange'
          UnionType
            TypeReference
              Identifier: ' TextChangeRange'
            UndefinedKeyword
        Parameter
          Identifier: ' aggressiveChecks'
          QuestionToken
          BooleanKeyword
        TypeReference
          Identifier: ' SourceFile'
      FunctionDeclaration
        Identifier: ' createLanguageService'
        Parameter
          Identifier: 'host'
          TypeReference
            Identifier: ' LanguageServiceHost'
        Parameter
          Identifier: ' documentRegistry'
          QuestionToken
          TypeReference
            Identifier: ' DocumentRegistry'
        Parameter
          Identifier: ' syntaxOnlyOrLanguageServiceMode'
          QuestionToken
          UnionType
            BooleanKeyword
            TypeReference
              Identifier: ' LanguageServiceMode'
        TypeReference
          Identifier: ' LanguageService'
      FunctionDeclaration
        Identifier: ' getDefaultLibFilePath'
        Parameter
          Identifier: 'options'
          TypeReference
            Identifier: ' CompilerOptions'
        StringKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' servicesVersion'
            StringLiteral
      FunctionDeclaration
        Identifier: ' transform'
        TypeParameter
          Identifier: 'T'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: 'source'
          UnionType
            TypeReference
              Identifier: ' T'
            ArrayType
              TypeReference
                Identifier: ' T'
        Parameter
          Identifier: ' transformers'
          ArrayType
            TypeReference
              Identifier: ' TransformerFactory'
              TypeReference
                Identifier: 'T'
        Parameter
          Identifier: ' compilerOptions'
          QuestionToken
          TypeReference
            Identifier: ' CompilerOptions'
        TypeReference
          Identifier: ' TransformationResult'
          TypeReference
            Identifier: 'T'
  ExportAssignment
    Identifier: ' ts'
