SourceFile
  ModuleDeclaration
    DeclareKeyword
    StringLiteral
    ModuleBlock
      ImportDeclaration
        ImportClause
          NamedImports
            ImportSpecifier
              Identifier: ' X509Certificate'
        StringLiteral
      ImportDeclaration
        ImportClause
          NamespaceImport
            Identifier: ' net'
        StringLiteral
      ImportDeclaration
        ImportClause
          NamespaceImport
            Identifier: ' stream'
        StringLiteral
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' CLIENT_RENEG_LIMIT'
            NumberKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' CLIENT_RENEG_WINDOW'
            NumberKeyword
      InterfaceDeclaration
        Identifier: ' Certificate'
        PropertySignature
          Identifier: '
        /**
         * Country code.
         */
        C'
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * Street.
         */
        ST'
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * Locality.
         */
        L'
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * Organization.
         */
        O'
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * Organizational unit.
         */
        OU'
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * Common name.
         */
        CN'
          StringKeyword
      InterfaceDeclaration
        Identifier: ' PeerCertificate'
        PropertySignature
          Identifier: '
        /**
         * `true` if a Certificate Authority (CA), `false` otherwise.
         * @since v18.13.0
         */
        ca'
          BooleanKeyword
        PropertySignature
          Identifier: '
        /**
         * The DER encoded X.509 certificate data.
         */
        raw'
          TypeReference
            Identifier: ' Buffer'
        PropertySignature
          Identifier: '
        /**
         * The certificate subject.
         */
        subject'
          TypeReference
            Identifier: ' Certificate'
        PropertySignature
          Identifier: '
        /**
         * The certificate issuer, described in the same terms as the `subject`.
         */
        issuer'
          TypeReference
            Identifier: ' Certificate'
        PropertySignature
          Identifier: '
        /**
         * The date-time the certificate is valid from.
         */
        valid_from'
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * The date-time the certificate is valid to.
         */
        valid_to'
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * The certificate serial number, as a hex string.
         */
        serialNumber'
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * The SHA-1 digest of the DER encoded certificate.
         * It is returned as a `:` separated hexadecimal string.
         */
        fingerprint'
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * The SHA-256 digest of the DER encoded certificate.
         * It is returned as a `:` separated hexadecimal string.
         */
        fingerprint256'
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * The SHA-512 digest of the DER encoded certificate.
         * It is returned as a `:` separated hexadecimal string.
         */
        fingerprint512'
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * The extended key usage, a set of OIDs.
         */
        ext_key_usage'
          QuestionToken
          ArrayType
            StringKeyword
        PropertySignature
          Identifier: '
        /**
         * A string containing concatenated names for the subject,
         * an alternative to the `subject` names.
         */
        subjectaltname'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * An array describing the AuthorityInfoAccess, used with OCSP.
         */
        infoAccess'
          QuestionToken
          TypeReference
            QualifiedName
              Identifier: ' NodeJS'
              Identifier: 'Dict'
            ArrayType
              StringKeyword
        PropertySignature
          Identifier: '
        /**
         * For RSA keys: The RSA bit size.
         *
         * For EC keys: The key size in bits.
         */
        bits'
          QuestionToken
          NumberKeyword
        PropertySignature
          Identifier: '
        /**
         * The RSA exponent, as a string in hexadecimal number notation.
         */
        exponent'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * The RSA modulus, as a hexadecimal string.
         */
        modulus'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * The public key.
         */
        pubkey'
          QuestionToken
          TypeReference
            Identifier: ' Buffer'
        PropertySignature
          Identifier: '
        /**
         * The ASN.1 name of the OID of the elliptic curve.
         * Well-known curves are identified by an OID.
         * While it is unusual, it is possible that the curve
         * is identified by its mathematical properties,
         * in which case it will not have an OID.
         */
        asn1Curve'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * The NIST name for the elliptic curve, if it has one
         * (not all well-known curves have been assigned names by NIST).
         */
        nistCurve'
          QuestionToken
          StringKeyword
      InterfaceDeclaration
        Identifier: ' DetailedPeerCertificate'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' PeerCertificate'
        PropertySignature
          Identifier: '
        /**
         * The issuer certificate object.
         * For self-signed certificates, this may be a circular reference.
         */
        issuerCertificate'
          TypeReference
            Identifier: ' DetailedPeerCertificate'
      InterfaceDeclaration
        Identifier: ' CipherNameAndProtocol'
        PropertySignature
          Identifier: '
        /**
         * The cipher name.
         */
        name'
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * SSL/TLS protocol version.
         */
        version'
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * IETF name for the cipher suite.
         */
        standardName'
          StringKeyword
      InterfaceDeclaration
        Identifier: ' EphemeralKeyInfo'
        PropertySignature
          Identifier: '
        /**
         * The supported types are 'DH' and 'ECDH'.
         */
        type'
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * The name property is available only when type is 'ECDH'.
         */
        name'
          QuestionToken
          UnionType
            StringKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * The size of parameter of an ephemeral key exchange.
         */
        size'
          NumberKeyword
      InterfaceDeclaration
        Identifier: ' KeyObject'
        PropertySignature
          Identifier: '
        /**
         * Private keys in PEM format.
         */
        pem'
          UnionType
            StringKeyword
            TypeReference
              Identifier: ' Buffer'
        PropertySignature
          Identifier: '
        /**
         * Optional passphrase.
         */
        passphrase'
          QuestionToken
          UnionType
            StringKeyword
            UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' PxfObject'
        PropertySignature
          Identifier: '
        /**
         * PFX or PKCS12 encoded private key and certificate chain.
         */
        buf'
          UnionType
            StringKeyword
            TypeReference
              Identifier: ' Buffer'
        PropertySignature
          Identifier: '
        /**
         * Optional passphrase.
         */
        passphrase'
          QuestionToken
          UnionType
            StringKeyword
            UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' TLSSocketOptions'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' SecureContextOptions'
          ExpressionWithTypeArguments
            Identifier: ' CommonConnectionOptions'
        PropertySignature
          Identifier: '
        /**
         * If true the TLS socket will be instantiated in server-mode.
         * Defaults to false.
         */
        isServer'
          QuestionToken
          UnionType
            BooleanKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * An optional net.Server instance.
         */
        server'
          QuestionToken
          UnionType
            TypeReference
              QualifiedName
                Identifier: ' net'
                Identifier: 'Server'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * An optional Buffer instance containing a TLS session.
         */
        session'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' Buffer'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * If true, specifies that the OCSP status request extension will be
         * added to the client hello and an 'OCSPResponse' event will be
         * emitted on the socket before establishing a secure communication
         */
        requestOCSP'
          QuestionToken
          UnionType
            BooleanKeyword
            UndefinedKeyword
      ClassDeclaration
        Identifier: ' TLSSocket'
        HeritageClause
          ExpressionWithTypeArguments
            PropertyAccessExpression
              Identifier: ' net'
              Identifier: 'Socket'
        Constructor
          Parameter
            Identifier: 'socket'
            UnionType
              TypeReference
                QualifiedName
                  Identifier: ' net'
                  Identifier: 'Socket'
              TypeReference
                QualifiedName
                  Identifier: ' stream'
                  Identifier: 'Duplex'
          Parameter
            Identifier: ' options'
            QuestionToken
            TypeReference
              Identifier: ' TLSSocketOptions'
        PropertyDeclaration
          Identifier: '
        /**
         * This property is `true` if the peer certificate was signed by one of the CAs
         * specified when creating the `tls.TLSSocket` instance, otherwise `false`.
         * @since v0.11.4
         */
        authorized'
          BooleanKeyword
        PropertyDeclaration
          Identifier: '
        /**
         * Returns the reason why the peer's certificate was not been verified. This
         * property is set only when `tlsSocket.authorized === false`.
         * @since v0.11.4
         */
        authorizationError'
          TypeReference
            Identifier: ' Error'
        PropertyDeclaration
          Identifier: '
        /**
         * Always returns `true`. This may be used to distinguish TLS sockets from regular`net.Socket` instances.
         * @since v0.11.4
         */
        encrypted'
          LiteralType
            TrueKeyword
        PropertyDeclaration
          Identifier: '
        /**
         * String containing the selected ALPN protocol.
         * Before a handshake has completed, this value is always null.
         * When a handshake is completed but not ALPN protocol was selected, tlsSocket.alpnProtocol equals false.
         */
        alpnProtocol'
          UnionType
            StringKeyword
            LiteralType
              FalseKeyword
            LiteralType
              NullKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Returns an object representing the local certificate. The returned object has
         * some properties corresponding to the fields of the certificate.
         *
         * See {@link TLSSocket.getPeerCertificate} for an example of the certificate
         * structure.
         *
         * If there is no local certificate, an empty object will be returned. If the
         * socket has been destroyed, `null` will be returned.
         * @since v11.2.0
         */
        getCertificate'
          UnionType
            TypeReference
              Identifier: ' PeerCertificate'
            ObjectKeyword
            LiteralType
              NullKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Returns an object containing information on the negotiated cipher suite.
         *
         * For example, a TLSv1.2 protocol with AES256-SHA cipher:
         *
         * ```json
         * {
         *     "name": "AES256-SHA",
         *     "standardName": "TLS_RSA_WITH_AES_256_CBC_SHA",
         *     "version": "SSLv3"
         * }
         * ```
         *
         * See [SSL\_CIPHER\_get\_name](https://www.openssl.org/docs/man1.1.1/man3/SSL_CIPHER_get_name.html) for more information.
         * @since v0.11.4
         */
        getCipher'
          TypeReference
            Identifier: ' CipherNameAndProtocol'
        MethodDeclaration
          Identifier: '
        /**
         * Returns an object representing the type, name, and size of parameter of
         * an ephemeral key exchange in `perfect forward secrecy` on a client
         * connection. It returns an empty object when the key exchange is not
         * ephemeral. As this is only supported on a client socket; `null` is returned
         * if called on a server socket. The supported types are `'DH'` and `'ECDH'`. The `name` property is available only when type is `'ECDH'`.
         *
         * For example: `{ type: 'ECDH', name: 'prime256v1', size: 256 }`.
         * @since v5.0.0
         */
        getEphemeralKeyInfo'
          UnionType
            TypeReference
              Identifier: ' EphemeralKeyInfo'
            ObjectKeyword
            LiteralType
              NullKeyword
        MethodDeclaration
          Identifier: '
        /**
         * As the `Finished` messages are message digests of the complete handshake
         * (with a total of 192 bits for TLS 1.0 and more for SSL 3.0), they can
         * be used for external authentication procedures when the authentication
         * provided by SSL/TLS is not desired or is not enough.
         *
         * Corresponds to the `SSL_get_finished` routine in OpenSSL and may be used
         * to implement the `tls-unique` channel binding from [RFC 5929](https://tools.ietf.org/html/rfc5929).
         * @since v9.9.0
         * @return The latest `Finished` message that has been sent to the socket as part of a SSL/TLS handshake, or `undefined` if no `Finished` message has been sent yet.
         */
        getFinished'
          UnionType
            TypeReference
              Identifier: ' Buffer'
            UndefinedKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Returns an object representing the peer's certificate. If the peer does not
         * provide a certificate, an empty object will be returned. If the socket has been
         * destroyed, `null` will be returned.
         *
         * If the full certificate chain was requested, each certificate will include an`issuerCertificate` property containing an object representing its issuer's
         * certificate.
         * @since v0.11.4
         * @param detailed Include the full certificate chain if `true`, otherwise include just the peer's certificate.
         * @return A certificate object.
         */
        getPeerCertificate'
          Parameter
            Identifier: 'detailed'
            LiteralType
              TrueKeyword
          TypeReference
            Identifier: ' DetailedPeerCertificate'
        MethodDeclaration
          Identifier: '
        getPeerCertificate'
          Parameter
            Identifier: 'detailed'
            QuestionToken
            LiteralType
              FalseKeyword
          TypeReference
            Identifier: ' PeerCertificate'
        MethodDeclaration
          Identifier: '
        getPeerCertificate'
          Parameter
            Identifier: 'detailed'
            QuestionToken
            BooleanKeyword
          UnionType
            TypeReference
              Identifier: ' PeerCertificate'
            TypeReference
              Identifier: ' DetailedPeerCertificate'
        MethodDeclaration
          Identifier: '
        /**
         * As the `Finished` messages are message digests of the complete handshake
         * (with a total of 192 bits for TLS 1.0 and more for SSL 3.0), they can
         * be used for external authentication procedures when the authentication
         * provided by SSL/TLS is not desired or is not enough.
         *
         * Corresponds to the `SSL_get_peer_finished` routine in OpenSSL and may be used
         * to implement the `tls-unique` channel binding from [RFC 5929](https://tools.ietf.org/html/rfc5929).
         * @since v9.9.0
         * @return The latest `Finished` message that is expected or has actually been received from the socket as part of a SSL/TLS handshake, or `undefined` if there is no `Finished` message so
         * far.
         */
        getPeerFinished'
          UnionType
            TypeReference
              Identifier: ' Buffer'
            UndefinedKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Returns a string containing the negotiated SSL/TLS protocol version of the
         * current connection. The value `'unknown'` will be returned for connected
         * sockets that have not completed the handshaking process. The value `null` will
         * be returned for server sockets or disconnected client sockets.
         *
         * Protocol versions are:
         *
         * * `'SSLv3'`
         * * `'TLSv1'`
         * * `'TLSv1.1'`
         * * `'TLSv1.2'`
         * * `'TLSv1.3'`
         *
         * See the OpenSSL [`SSL_get_version`](https://www.openssl.org/docs/man1.1.1/man3/SSL_get_version.html) documentation for more information.
         * @since v5.7.0
         */
        getProtocol'
          UnionType
            StringKeyword
            LiteralType
              NullKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Returns the TLS session data or `undefined` if no session was
         * negotiated. On the client, the data can be provided to the `session` option of {@link connect} to resume the connection. On the server, it may be useful
         * for debugging.
         *
         * See `Session Resumption` for more information.
         *
         * Note: `getSession()` works only for TLSv1.2 and below. For TLSv1.3, applications
         * must use the `'session'` event (it also works for TLSv1.2 and below).
         * @since v0.11.4
         */
        getSession'
          UnionType
            TypeReference
              Identifier: ' Buffer'
            UndefinedKeyword
        MethodDeclaration
          Identifier: '
        /**
         * See [SSL\_get\_shared\_sigalgs](https://www.openssl.org/docs/man1.1.1/man3/SSL_get_shared_sigalgs.html) for more information.
         * @since v12.11.0
         * @return List of signature algorithms shared between the server and the client in the order of decreasing preference.
         */
        getSharedSigalgs'
          ArrayType
            StringKeyword
        MethodDeclaration
          Identifier: '
        /**
         * For a client, returns the TLS session ticket if one is available, or`undefined`. For a server, always returns `undefined`.
         *
         * It may be useful for debugging.
         *
         * See `Session Resumption` for more information.
         * @since v0.11.4
         */
        getTLSTicket'
          UnionType
            TypeReference
              Identifier: ' Buffer'
            UndefinedKeyword
        MethodDeclaration
          Identifier: '
        /**
         * See `Session Resumption` for more information.
         * @since v0.5.6
         * @return `true` if the session was reused, `false` otherwise.
         */
        isSessionReused'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        /**
         * The `tlsSocket.renegotiate()` method initiates a TLS renegotiation process.
         * Upon completion, the `callback` function will be passed a single argument
         * that is either an `Error` (if the request failed) or `null`.
         *
         * This method can be used to request a peer's certificate after the secure
         * connection has been established.
         *
         * When running as the server, the socket will be destroyed with an error after `handshakeTimeout` timeout.
         *
         * For TLSv1.3, renegotiation cannot be initiated, it is not supported by the
         * protocol.
         * @since v0.11.8
         * @param callback If `renegotiate()` returned `true`, callback is attached once to the `'secure'` event. If `renegotiate()` returned `false`, `callback` will be called in the next tick with
         * an error, unless the `tlsSocket` has been destroyed, in which case `callback` will not be called at all.
         * @return `true` if renegotiation was initiated, `false` otherwise.
         */
        renegotiate'
          Parameter
            Identifier: '
            options'
            TypeLiteral
              PropertySignature
                Identifier: '
                rejectUnauthorized'
                QuestionToken
                UnionType
                  BooleanKeyword
                  UndefinedKeyword
              PropertySignature
                Identifier: '
                requestCert'
                QuestionToken
                UnionType
                  BooleanKeyword
                  UndefinedKeyword
          Parameter
            Identifier: '
            callback'
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          UnionType
            UndefinedKeyword
            BooleanKeyword
        MethodDeclaration
          Identifier: '
        /**
         * The `tlsSocket.setMaxSendFragment()` method sets the maximum TLS fragment size.
         * Returns `true` if setting the limit succeeded; `false` otherwise.
         *
         * Smaller fragment sizes decrease the buffering latency on the client: larger
         * fragments are buffered by the TLS layer until the entire fragment is received
         * and its integrity is verified; large fragments can span multiple roundtrips
         * and their processing can be delayed due to packet loss or reordering. However,
         * smaller fragments add extra TLS framing bytes and CPU overhead, which may
         * decrease overall server throughput.
         * @since v0.11.11
         * @param [size=16384] The maximum TLS fragment size. The maximum value is `16384`.
         */
        setMaxSendFragment'
          Parameter
            Identifier: 'size'
            NumberKeyword
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Disables TLS renegotiation for this `TLSSocket` instance. Once called, attempts
         * to renegotiate will trigger an `'error'` event on the `TLSSocket`.
         * @since v8.4.0
         */
        disableRenegotiation'
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * When enabled, TLS packet trace information is written to `stderr`. This can be
         * used to debug TLS connection problems.
         *
         * The format of the output is identical to the output of`openssl s_client -trace` or `openssl s_server -trace`. While it is produced by
         * OpenSSL's `SSL_trace()` function, the format is undocumented, can change
         * without notice, and should not be relied on.
         * @since v12.2.0
         */
        enableTrace'
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Returns the peer certificate as an `X509Certificate` object.
         *
         * If there is no peer certificate, or the socket has been destroyed,`undefined` will be returned.
         * @since v15.9.0
         */
        getPeerX509Certificate'
          UnionType
            TypeReference
              Identifier: ' X509Certificate'
            UndefinedKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Returns the local certificate as an `X509Certificate` object.
         *
         * If there is no local certificate, or the socket has been destroyed,`undefined` will be returned.
         * @since v15.9.0
         */
        getX509Certificate'
          UnionType
            TypeReference
              Identifier: ' X509Certificate'
            UndefinedKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Keying material is used for validations to prevent different kind of attacks in
         * network protocols, for example in the specifications of IEEE 802.1X.
         *
         * Example
         *
         * ```js
         * const keyingMaterial = tlsSocket.exportKeyingMaterial(
         *   128,
         *   'client finished');
         *
         * /*
         *  Example return value of keyingMaterial:
         *  <Buffer 76 26 af 99 c5 56 8e 42 09 91 ef 9f 93 cb ad 6c 7b 65 f8 53 f1 d8 d9
         *     12 5a 33 b8 b5 25 df 7b 37 9f e0 e2 4f b8 67 83 a3 2f cd 5d 41 42 4c 91
         *     74 ef 2c ... 78 more bytes>
         *
         * ```
         *
         * See the OpenSSL [`SSL_export_keying_material`](https://www.openssl.org/docs/man1.1.1/man3/SSL_export_keying_material.html) documentation for more
         * information.
         * @since v13.10.0, v12.17.0
         * @param length number of bytes to retrieve from keying material
         * @param label an application specific label, typically this will be a value from the [IANA Exporter Label
         * Registry](https://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml#exporter-labels).
         * @param context Optionally provide a context.
         * @return requested bytes of the keying material
         */
        exportKeyingMaterial'
          Parameter
            Identifier: 'length'
            NumberKeyword
          Parameter
            Identifier: ' label'
            StringKeyword
          Parameter
            Identifier: ' context'
            TypeReference
              Identifier: ' Buffer'
          TypeReference
            Identifier: ' Buffer'
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'response'
                TypeReference
                  Identifier: ' Buffer'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'session'
                TypeReference
                  Identifier: ' Buffer'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'line'
                TypeReference
                  Identifier: ' Buffer'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            UnionType
              StringKeyword
              SymbolKeyword
          Parameter
            DotDotDotToken
            Identifier: 'args'
            ArrayType
              AnyKeyword
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' response'
            TypeReference
              Identifier: ' Buffer'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' session'
            TypeReference
              Identifier: ' Buffer'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' line'
            TypeReference
              Identifier: ' Buffer'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'response'
                TypeReference
                  Identifier: ' Buffer'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'session'
                TypeReference
                  Identifier: ' Buffer'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'line'
                TypeReference
                  Identifier: ' Buffer'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'response'
                TypeReference
                  Identifier: ' Buffer'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'session'
                TypeReference
                  Identifier: ' Buffer'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'line'
                TypeReference
                  Identifier: ' Buffer'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'response'
                TypeReference
                  Identifier: ' Buffer'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'session'
                TypeReference
                  Identifier: ' Buffer'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'line'
                TypeReference
                  Identifier: ' Buffer'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'response'
                TypeReference
                  Identifier: ' Buffer'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'session'
                TypeReference
                  Identifier: ' Buffer'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'line'
                TypeReference
                  Identifier: ' Buffer'
              VoidKeyword
          ThisType
      InterfaceDeclaration
        Identifier: ' CommonConnectionOptions'
        PropertySignature
          Identifier: '
        /**
         * An optional TLS context object from tls.createSecureContext()
         */
        secureContext'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' SecureContext'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * When enabled, TLS packet trace information is written to `stderr`. This can be
         * used to debug TLS connection problems.
         * @default false
         */
        enableTrace'
          QuestionToken
          UnionType
            BooleanKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * If true the server will request a certificate from clients that
         * connect and attempt to verify that certificate. Defaults to
         * false.
         */
        requestCert'
          QuestionToken
          UnionType
            BooleanKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * An array of strings or a Buffer naming possible ALPN protocols.
         * (Protocols should be ordered by their priority.)
         */
        ALPNProtocols'
          QuestionToken
          UnionType
            ArrayType
              StringKeyword
            ArrayType
              TypeReference
                Identifier: ' Uint8Array'
            TypeReference
              Identifier: ' Uint8Array'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * SNICallback(servername, cb) <Function> A function that will be
         * called if the client supports SNI TLS extension. Two arguments
         * will be passed when called: servername and cb. SNICallback should
         * invoke cb(null, ctx), where ctx is a SecureContext instance.
         * (tls.createSecureContext(...) can be used to get a proper
         * SecureContext.) If SNICallback wasn't provided the default callback
         * with high-level API will be used (see below).
         */
        SNICallback'
          QuestionToken
          UnionType
            ParenthesizedType
              FunctionType
                Parameter
                  Identifier: 'servername'
                  StringKeyword
                Parameter
                  Identifier: ' cb'
                  FunctionType
                    Parameter
                      Identifier: 'err'
                      UnionType
                        TypeReference
                          Identifier: ' Error'
                        LiteralType
                          NullKeyword
                    Parameter
                      Identifier: ' ctx'
                      QuestionToken
                      TypeReference
                        Identifier: ' SecureContext'
                    VoidKeyword
                VoidKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * If true the server will reject any connection which is not
         * authorized with the list of supplied CAs. This option only has an
         * effect if requestCert is true.
         * @default true
         */
        rejectUnauthorized'
          QuestionToken
          UnionType
            BooleanKeyword
            UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' TlsOptions'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' SecureContextOptions'
          ExpressionWithTypeArguments
            Identifier: ' CommonConnectionOptions'
          ExpressionWithTypeArguments
            PropertyAccessExpression
              Identifier: ' net'
              Identifier: 'ServerOpts'
        PropertySignature
          Identifier: '
        /**
         * Abort the connection if the SSL/TLS handshake does not finish in the
         * specified number of milliseconds. A 'tlsClientError' is emitted on
         * the tls.Server object whenever a handshake times out. Default:
         * 120000 (120 seconds).
         */
        handshakeTimeout'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * The number of seconds after which a TLS session created by the
         * server will no longer be resumable. See Session Resumption for more
         * information. Default: 300.
         */
        sessionTimeout'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * 48-bytes of cryptographically strong pseudo-random data.
         */
        ticketKeys'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' Buffer'
            UndefinedKeyword
        MethodSignature
          Identifier: '
        /**
         * @param socket
         * @param identity identity parameter sent from the client.
         * @return pre-shared key that must either be
         * a buffer or `null` to stop the negotiation process. Returned PSK must be
         * compatible with the selected cipher's digest.
         *
         * When negotiating TLS-PSK (pre-shared keys), this function is called
         * with the identity provided by the client.
         * If the return value is `null` the negotiation process will stop and an
         * "unknown_psk_identity" alert message will be sent to the other party.
         * If the server wishes to hide the fact that the PSK identity was not known,
         * the callback must provide some random data as `psk` to make the connection
         * fail with "decrypt_error" before negotiation is finished.
         * PSK ciphers are disabled by default, and using TLS-PSK thus
         * requires explicitly specifying a cipher suite with the `ciphers` option.
         * More information can be found in the RFC 4279.
         */
        pskCallback'
          QuestionToken
          Parameter
            Identifier: 'socket'
            TypeReference
              Identifier: ' TLSSocket'
          Parameter
            Identifier: ' identity'
            StringKeyword
          UnionType
            TypeReference
              Identifier: ' DataView'
            TypeReference
              QualifiedName
                Identifier: ' NodeJS'
                Identifier: 'TypedArray'
            LiteralType
              NullKeyword
        PropertySignature
          Identifier: '
        /**
         * hint to send to a client to help
         * with selecting the identity during TLS-PSK negotiation. Will be ignored
         * in TLS 1.3. Upon failing to set pskIdentityHint `tlsClientError` will be
         * emitted with `ERR_TLS_PSK_SET_IDENTIY_HINT_FAILED` code.
         */
        pskIdentityHint'
          QuestionToken
          UnionType
            StringKeyword
            UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' PSKCallbackNegotation'
        PropertySignature
          Identifier: '
        psk'
          UnionType
            TypeReference
              Identifier: ' DataView'
            TypeReference
              QualifiedName
                Identifier: ' NodeJS'
                Identifier: 'TypedArray'
        PropertySignature
          Identifier: '
        identity'
          StringKeyword
      InterfaceDeclaration
        Identifier: ' ConnectionOptions'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' SecureContextOptions'
          ExpressionWithTypeArguments
            Identifier: ' CommonConnectionOptions'
        PropertySignature
          Identifier: '
        host'
          QuestionToken
          UnionType
            StringKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        port'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        path'
          QuestionToken
          UnionType
            StringKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: ' // Creates unix socket connection to path. If this option is specified, `host` and `port` are ignored.
        socket'
          QuestionToken
          UnionType
            TypeReference
              QualifiedName
                Identifier: ' stream'
                Identifier: 'Duplex'
            UndefinedKeyword
        PropertySignature
          Identifier: ' // Establish secure connection on a given socket rather than creating a new socket
        checkServerIdentity'
          QuestionToken
          UnionType
            TypeQuery
              Identifier: ' checkServerIdentity'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        servername'
          QuestionToken
          UnionType
            StringKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: ' // SNI TLS Extension
        session'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' Buffer'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        minDHSize'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        lookup'
          QuestionToken
          UnionType
            TypeReference
              QualifiedName
                Identifier: ' net'
                Identifier: 'LookupFunction'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        timeout'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
        MethodSignature
          Identifier: '
        /**
         * When negotiating TLS-PSK (pre-shared keys), this function is called
         * with optional identity `hint` provided by the server or `null`
         * in case of TLS 1.3 where `hint` was removed.
         * It will be necessary to provide a custom `tls.checkServerIdentity()`
         * for the connection as the default one will try to check hostname/IP
         * of the server against the certificate but that's not applicable for PSK
         * because there won't be a certificate present.
         * More information can be found in the RFC 4279.
         *
         * @param hint message sent from the server to help client
         * decide which identity to use during negotiation.
         * Always `null` if TLS 1.3 is used.
         * @returns Return `null` to stop the negotiation process. `psk` must be
         * compatible with the selected cipher's digest.
         * `identity` must use UTF-8 encoding.
         */
        pskCallback'
          QuestionToken
          Parameter
            Identifier: 'hint'
            UnionType
              StringKeyword
              LiteralType
                NullKeyword
          UnionType
            TypeReference
              Identifier: ' PSKCallbackNegotation'
            LiteralType
              NullKeyword
      ClassDeclaration
        Identifier: ' Server'
        HeritageClause
          ExpressionWithTypeArguments
            PropertyAccessExpression
              Identifier: ' net'
              Identifier: 'Server'
        Constructor
          Parameter
            Identifier: 'secureConnectionListener'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'socket'
                TypeReference
                  Identifier: ' TLSSocket'
              VoidKeyword
        Constructor
          Parameter
            Identifier: 'options'
            TypeReference
              Identifier: ' TlsOptions'
          Parameter
            Identifier: ' secureConnectionListener'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'socket'
                TypeReference
                  Identifier: ' TLSSocket'
              VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * The `server.addContext()` method adds a secure context that will be used if
         * the client request's SNI name matches the supplied `hostname` (or wildcard).
         *
         * When there are multiple matching contexts, the most recently added one is
         * used.
         * @since v0.5.3
         * @param hostname A SNI host name or wildcard (e.g. `'*'`)
         * @param context An object containing any of the possible properties from the {@link createSecureContext} `options` arguments (e.g. `key`, `cert`, `ca`, etc), or a TLS context object created
         * with {@link createSecureContext} itself.
         */
        addContext'
          Parameter
            Identifier: 'hostname'
            StringKeyword
          Parameter
            Identifier: ' context'
            TypeReference
              Identifier: ' SecureContextOptions'
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Returns the session ticket keys.
         *
         * See `Session Resumption` for more information.
         * @since v3.0.0
         * @return A 48-byte buffer containing the session ticket keys.
         */
        getTicketKeys'
          TypeReference
            Identifier: ' Buffer'
        MethodDeclaration
          Identifier: '
        /**
         * The `server.setSecureContext()` method replaces the secure context of an
         * existing server. Existing connections to the server are not interrupted.
         * @since v11.0.0
         * @param options An object containing any of the possible properties from the {@link createSecureContext} `options` arguments (e.g. `key`, `cert`, `ca`, etc).
         */
        setSecureContext'
          Parameter
            Identifier: 'options'
            TypeReference
              Identifier: ' SecureContextOptions'
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Sets the session ticket keys.
         *
         * Changes to the ticket keys are effective only for future server connections.
         * Existing or currently pending server connections will use the previous keys.
         *
         * See `Session Resumption` for more information.
         * @since v3.0.0
         * @param keys A 48-byte buffer containing the session ticket keys.
         */
        setTicketKeys'
          Parameter
            Identifier: 'keys'
            TypeReference
              Identifier: ' Buffer'
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * events.EventEmitter
         * 1. tlsClientError
         * 2. newSession
         * 3. OCSPRequest
         * 4. resumeSession
         * 5. secureConnection
         * 6. keylog
         */
        addListener'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'err'
                TypeReference
                  Identifier: ' Error'
              Parameter
                Identifier: ' tlsSocket'
                TypeReference
                  Identifier: ' TLSSocket'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: '
            event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            listener'
            FunctionType
              Parameter
                Identifier: 'sessionId'
                TypeReference
                  Identifier: ' Buffer'
              Parameter
                Identifier: ' sessionData'
                TypeReference
                  Identifier: ' Buffer'
              Parameter
                Identifier: ' callback'
                FunctionType
                  VoidKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: '
            event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            listener'
            FunctionType
              Parameter
                Identifier: '
                certificate'
                TypeReference
                  Identifier: ' Buffer'
              Parameter
                Identifier: '
                issuer'
                TypeReference
                  Identifier: ' Buffer'
              Parameter
                Identifier: '
                callback'
                FunctionType
                  Parameter
                    Identifier: 'err'
                    UnionType
                      TypeReference
                        Identifier: ' Error'
                      LiteralType
                        NullKeyword
                  Parameter
                    Identifier: ' resp'
                    TypeReference
                      Identifier: ' Buffer'
                  VoidKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: '
            event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            listener'
            FunctionType
              Parameter
                Identifier: 'sessionId'
                TypeReference
                  Identifier: ' Buffer'
              Parameter
                Identifier: ' callback'
                FunctionType
                  Parameter
                    Identifier: 'err'
                    UnionType
                      TypeReference
                        Identifier: ' Error'
                      LiteralType
                        NullKeyword
                  Parameter
                    Identifier: ' sessionData'
                    UnionType
                      TypeReference
                        Identifier: ' Buffer'
                      LiteralType
                        NullKeyword
                  VoidKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'tlsSocket'
                TypeReference
                  Identifier: ' TLSSocket'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'line'
                TypeReference
                  Identifier: ' Buffer'
              Parameter
                Identifier: ' tlsSocket'
                TypeReference
                  Identifier: ' TLSSocket'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            UnionType
              StringKeyword
              SymbolKeyword
          Parameter
            DotDotDotToken
            Identifier: 'args'
            ArrayType
              AnyKeyword
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' err'
            TypeReference
              Identifier: ' Error'
          Parameter
            Identifier: ' tlsSocket'
            TypeReference
              Identifier: ' TLSSocket'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' sessionId'
            TypeReference
              Identifier: ' Buffer'
          Parameter
            Identifier: ' sessionData'
            TypeReference
              Identifier: ' Buffer'
          Parameter
            Identifier: ' callback'
            FunctionType
              VoidKeyword
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: '
            event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            certificate'
            TypeReference
              Identifier: ' Buffer'
          Parameter
            Identifier: '
            issuer'
            TypeReference
              Identifier: ' Buffer'
          Parameter
            Identifier: '
            callback'
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' resp'
                TypeReference
                  Identifier: ' Buffer'
              VoidKeyword
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: '
            event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            sessionId'
            TypeReference
              Identifier: ' Buffer'
          Parameter
            Identifier: '
            callback'
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' sessionData'
                UnionType
                  TypeReference
                    Identifier: ' Buffer'
                  LiteralType
                    NullKeyword
              VoidKeyword
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' tlsSocket'
            TypeReference
              Identifier: ' TLSSocket'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' line'
            TypeReference
              Identifier: ' Buffer'
          Parameter
            Identifier: ' tlsSocket'
            TypeReference
              Identifier: ' TLSSocket'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'err'
                TypeReference
                  Identifier: ' Error'
              Parameter
                Identifier: ' tlsSocket'
                TypeReference
                  Identifier: ' TLSSocket'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'sessionId'
                TypeReference
                  Identifier: ' Buffer'
              Parameter
                Identifier: ' sessionData'
                TypeReference
                  Identifier: ' Buffer'
              Parameter
                Identifier: ' callback'
                FunctionType
                  VoidKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: '
            event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            listener'
            FunctionType
              Parameter
                Identifier: '
                certificate'
                TypeReference
                  Identifier: ' Buffer'
              Parameter
                Identifier: '
                issuer'
                TypeReference
                  Identifier: ' Buffer'
              Parameter
                Identifier: '
                callback'
                FunctionType
                  Parameter
                    Identifier: 'err'
                    UnionType
                      TypeReference
                        Identifier: ' Error'
                      LiteralType
                        NullKeyword
                  Parameter
                    Identifier: ' resp'
                    TypeReference
                      Identifier: ' Buffer'
                  VoidKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: '
            event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            listener'
            FunctionType
              Parameter
                Identifier: 'sessionId'
                TypeReference
                  Identifier: ' Buffer'
              Parameter
                Identifier: ' callback'
                FunctionType
                  Parameter
                    Identifier: 'err'
                    UnionType
                      TypeReference
                        Identifier: ' Error'
                      LiteralType
                        NullKeyword
                  Parameter
                    Identifier: ' sessionData'
                    UnionType
                      TypeReference
                        Identifier: ' Buffer'
                      LiteralType
                        NullKeyword
                  VoidKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'tlsSocket'
                TypeReference
                  Identifier: ' TLSSocket'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'line'
                TypeReference
                  Identifier: ' Buffer'
              Parameter
                Identifier: ' tlsSocket'
                TypeReference
                  Identifier: ' TLSSocket'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'err'
                TypeReference
                  Identifier: ' Error'
              Parameter
                Identifier: ' tlsSocket'
                TypeReference
                  Identifier: ' TLSSocket'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: '
            event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            listener'
            FunctionType
              Parameter
                Identifier: 'sessionId'
                TypeReference
                  Identifier: ' Buffer'
              Parameter
                Identifier: ' sessionData'
                TypeReference
                  Identifier: ' Buffer'
              Parameter
                Identifier: ' callback'
                FunctionType
                  VoidKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: '
            event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            listener'
            FunctionType
              Parameter
                Identifier: '
                certificate'
                TypeReference
                  Identifier: ' Buffer'
              Parameter
                Identifier: '
                issuer'
                TypeReference
                  Identifier: ' Buffer'
              Parameter
                Identifier: '
                callback'
                FunctionType
                  Parameter
                    Identifier: 'err'
                    UnionType
                      TypeReference
                        Identifier: ' Error'
                      LiteralType
                        NullKeyword
                  Parameter
                    Identifier: ' resp'
                    TypeReference
                      Identifier: ' Buffer'
                  VoidKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: '
            event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            listener'
            FunctionType
              Parameter
                Identifier: 'sessionId'
                TypeReference
                  Identifier: ' Buffer'
              Parameter
                Identifier: ' callback'
                FunctionType
                  Parameter
                    Identifier: 'err'
                    UnionType
                      TypeReference
                        Identifier: ' Error'
                      LiteralType
                        NullKeyword
                  Parameter
                    Identifier: ' sessionData'
                    UnionType
                      TypeReference
                        Identifier: ' Buffer'
                      LiteralType
                        NullKeyword
                  VoidKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'tlsSocket'
                TypeReference
                  Identifier: ' TLSSocket'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'line'
                TypeReference
                  Identifier: ' Buffer'
              Parameter
                Identifier: ' tlsSocket'
                TypeReference
                  Identifier: ' TLSSocket'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'err'
                TypeReference
                  Identifier: ' Error'
              Parameter
                Identifier: ' tlsSocket'
                TypeReference
                  Identifier: ' TLSSocket'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: '
            event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            listener'
            FunctionType
              Parameter
                Identifier: 'sessionId'
                TypeReference
                  Identifier: ' Buffer'
              Parameter
                Identifier: ' sessionData'
                TypeReference
                  Identifier: ' Buffer'
              Parameter
                Identifier: ' callback'
                FunctionType
                  VoidKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: '
            event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            listener'
            FunctionType
              Parameter
                Identifier: '
                certificate'
                TypeReference
                  Identifier: ' Buffer'
              Parameter
                Identifier: '
                issuer'
                TypeReference
                  Identifier: ' Buffer'
              Parameter
                Identifier: '
                callback'
                FunctionType
                  Parameter
                    Identifier: 'err'
                    UnionType
                      TypeReference
                        Identifier: ' Error'
                      LiteralType
                        NullKeyword
                  Parameter
                    Identifier: ' resp'
                    TypeReference
                      Identifier: ' Buffer'
                  VoidKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: '
            event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            listener'
            FunctionType
              Parameter
                Identifier: 'sessionId'
                TypeReference
                  Identifier: ' Buffer'
              Parameter
                Identifier: ' callback'
                FunctionType
                  Parameter
                    Identifier: 'err'
                    UnionType
                      TypeReference
                        Identifier: ' Error'
                      LiteralType
                        NullKeyword
                  Parameter
                    Identifier: ' sessionData'
                    UnionType
                      TypeReference
                        Identifier: ' Buffer'
                      LiteralType
                        NullKeyword
                  VoidKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'tlsSocket'
                TypeReference
                  Identifier: ' TLSSocket'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'line'
                TypeReference
                  Identifier: ' Buffer'
              Parameter
                Identifier: ' tlsSocket'
                TypeReference
                  Identifier: ' TLSSocket'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'err'
                TypeReference
                  Identifier: ' Error'
              Parameter
                Identifier: ' tlsSocket'
                TypeReference
                  Identifier: ' TLSSocket'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: '
            event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            listener'
            FunctionType
              Parameter
                Identifier: 'sessionId'
                TypeReference
                  Identifier: ' Buffer'
              Parameter
                Identifier: ' sessionData'
                TypeReference
                  Identifier: ' Buffer'
              Parameter
                Identifier: ' callback'
                FunctionType
                  VoidKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: '
            event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            listener'
            FunctionType
              Parameter
                Identifier: '
                certificate'
                TypeReference
                  Identifier: ' Buffer'
              Parameter
                Identifier: '
                issuer'
                TypeReference
                  Identifier: ' Buffer'
              Parameter
                Identifier: '
                callback'
                FunctionType
                  Parameter
                    Identifier: 'err'
                    UnionType
                      TypeReference
                        Identifier: ' Error'
                      LiteralType
                        NullKeyword
                  Parameter
                    Identifier: ' resp'
                    TypeReference
                      Identifier: ' Buffer'
                  VoidKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: '
            event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            listener'
            FunctionType
              Parameter
                Identifier: 'sessionId'
                TypeReference
                  Identifier: ' Buffer'
              Parameter
                Identifier: ' callback'
                FunctionType
                  Parameter
                    Identifier: 'err'
                    UnionType
                      TypeReference
                        Identifier: ' Error'
                      LiteralType
                        NullKeyword
                  Parameter
                    Identifier: ' sessionData'
                    UnionType
                      TypeReference
                        Identifier: ' Buffer'
                      LiteralType
                        NullKeyword
                  VoidKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'tlsSocket'
                TypeReference
                  Identifier: ' TLSSocket'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'line'
                TypeReference
                  Identifier: ' Buffer'
              Parameter
                Identifier: ' tlsSocket'
                TypeReference
                  Identifier: ' TLSSocket'
              VoidKeyword
          ThisType
      InterfaceDeclaration
        Identifier: ' SecurePair'
        PropertySignature
          Identifier: '
        encrypted'
          TypeReference
            Identifier: ' TLSSocket'
        PropertySignature
          Identifier: '
        cleartext'
          TypeReference
            Identifier: ' TLSSocket'
      TypeAliasDeclaration
        Identifier: ' SecureVersion'
        UnionType
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
      InterfaceDeclaration
        Identifier: ' SecureContextOptions'
        PropertySignature
          Identifier: '
        /**
         * If set, this will be called when a client opens a connection using the ALPN extension.
         * One argument will be passed to the callback: an object containing `servername` and `protocols` fields,
         * respectively containing the server name from the SNI extension (if any) and an array of
         * ALPN protocol name strings. The callback must return either one of the strings listed in `protocols`,
         * which will be returned to the client as the selected ALPN protocol, or `undefined`,
         * to reject the connection with a fatal alert. If a string is returned that does not match one of
         * the client's ALPN protocols, an error will be thrown.
         * This option cannot be used with the `ALPNProtocols` option, and setting both options will throw an error.
         */
        ALPNCallback'
          QuestionToken
          UnionType
            ParenthesizedType
              FunctionType
                Parameter
                  Identifier: 'arg'
                  TypeLiteral
                    PropertySignature
                      Identifier: ' servername'
                      StringKeyword
                    PropertySignature
                      Identifier: ' protocols'
                      ArrayType
                        StringKeyword
                UnionType
                  StringKeyword
                  UndefinedKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * Optionally override the trusted CA certificates. Default is to trust
         * the well-known CAs curated by Mozilla. Mozilla's CAs are completely
         * replaced when CAs are explicitly specified using this option.
         */
        ca'
          QuestionToken
          UnionType
            StringKeyword
            TypeReference
              Identifier: ' Buffer'
            TypeReference
              Identifier: ' Array'
              UnionType
                StringKeyword
                TypeReference
                  Identifier: ' Buffer'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         *  Cert chains in PEM format. One cert chain should be provided per
         *  private key. Each cert chain should consist of the PEM formatted
         *  certificate for a provided private key, followed by the PEM
         *  formatted intermediate certificates (if any), in order, and not
         *  including the root CA (the root CA must be pre-known to the peer,
         *  see ca). When providing multiple cert chains, they do not have to
         *  be in the same order as their private keys in key. If the
         *  intermediate certificates are not provided, the peer will not be
         *  able to validate the certificate, and the handshake will fail.
         */
        cert'
          QuestionToken
          UnionType
            StringKeyword
            TypeReference
              Identifier: ' Buffer'
            TypeReference
              Identifier: ' Array'
              UnionType
                StringKeyword
                TypeReference
                  Identifier: ' Buffer'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         *  Colon-separated list of supported signature algorithms. The list
         *  can contain digest algorithms (SHA256, MD5 etc.), public key
         *  algorithms (RSA-PSS, ECDSA etc.), combination of both (e.g
         *  'RSA+SHA384') or TLS v1.3 scheme names (e.g. rsa_pss_pss_sha512).
         */
        sigalgs'
          QuestionToken
          UnionType
            StringKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * Cipher suite specification, replacing the default. For more
         * information, see modifying the default cipher suite. Permitted
         * ciphers can be obtained via tls.getCiphers(). Cipher names must be
         * uppercased in order for OpenSSL to accept them.
         */
        ciphers'
          QuestionToken
          UnionType
            StringKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * Name of an OpenSSL engine which can provide the client certificate.
         * @deprecated
         */
        clientCertEngine'
          QuestionToken
          UnionType
            StringKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * PEM formatted CRLs (Certificate Revocation Lists).
         */
        crl'
          QuestionToken
          UnionType
            StringKeyword
            TypeReference
              Identifier: ' Buffer'
            TypeReference
              Identifier: ' Array'
              UnionType
                StringKeyword
                TypeReference
                  Identifier: ' Buffer'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * `'auto'` or custom Diffie-Hellman parameters, required for non-ECDHE perfect forward secrecy.
         * If omitted or invalid, the parameters are silently discarded and DHE ciphers will not be available.
         * ECDHE-based perfect forward secrecy will still be available.
         */
        dhparam'
          QuestionToken
          UnionType
            StringKeyword
            TypeReference
              Identifier: ' Buffer'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * A string describing a named curve or a colon separated list of curve
         * NIDs or names, for example P-521:P-384:P-256, to use for ECDH key
         * agreement. Set to auto to select the curve automatically. Use
         * crypto.getCurves() to obtain a list of available curve names. On
         * recent releases, openssl ecparam -list_curves will also display the
         * name and description of each available elliptic curve. Default:
         * tls.DEFAULT_ECDH_CURVE.
         */
        ecdhCurve'
          QuestionToken
          UnionType
            StringKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * Attempt to use the server's cipher suite preferences instead of the
         * client's. When true, causes SSL_OP_CIPHER_SERVER_PREFERENCE to be
         * set in secureOptions
         */
        honorCipherOrder'
          QuestionToken
          UnionType
            BooleanKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * Private keys in PEM format. PEM allows the option of private keys
         * being encrypted. Encrypted keys will be decrypted with
         * options.passphrase. Multiple keys using different algorithms can be
         * provided either as an array of unencrypted key strings or buffers,
         * or an array of objects in the form {pem: <string|buffer>[,
         * passphrase: <string>]}. The object form can only occur in an array.
         * object.passphrase is optional. Encrypted keys will be decrypted with
         * object.passphrase if provided, or options.passphrase if it is not.
         */
        key'
          QuestionToken
          UnionType
            StringKeyword
            TypeReference
              Identifier: ' Buffer'
            TypeReference
              Identifier: ' Array'
              UnionType
                StringKeyword
                TypeReference
                  Identifier: ' Buffer'
                TypeReference
                  Identifier: ' KeyObject'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * Name of an OpenSSL engine to get private key from. Should be used
         * together with privateKeyIdentifier.
         * @deprecated
         */
        privateKeyEngine'
          QuestionToken
          UnionType
            StringKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * Identifier of a private key managed by an OpenSSL engine. Should be
         * used together with privateKeyEngine. Should not be set together with
         * key, because both options define a private key in different ways.
         * @deprecated
         */
        privateKeyIdentifier'
          QuestionToken
          UnionType
            StringKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * Optionally set the maximum TLS version to allow. One
         * of `'TLSv1.3'`, `'TLSv1.2'`, `'TLSv1.1'`, or `'TLSv1'`. Cannot be specified along with the
         * `secureProtocol` option, use one or the other.
         * **Default:** `'TLSv1.3'`, unless changed using CLI options. Using
         * `--tls-max-v1.2` sets the default to `'TLSv1.2'`. Using `--tls-max-v1.3` sets the default to
         * `'TLSv1.3'`. If multiple of the options are provided, the highest maximum is used.
         */
        maxVersion'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' SecureVersion'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * Optionally set the minimum TLS version to allow. One
         * of `'TLSv1.3'`, `'TLSv1.2'`, `'TLSv1.1'`, or `'TLSv1'`. Cannot be specified along with the
         * `secureProtocol` option, use one or the other.  It is not recommended to use
         * less than TLSv1.2, but it may be required for interoperability.
         * **Default:** `'TLSv1.2'`, unless changed using CLI options. Using
         * `--tls-v1.0` sets the default to `'TLSv1'`. Using `--tls-v1.1` sets the default to
         * `'TLSv1.1'`. Using `--tls-min-v1.3` sets the default to
         * 'TLSv1.3'. If multiple of the options are provided, the lowest minimum is used.
         */
        minVersion'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' SecureVersion'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * Shared passphrase used for a single private key and/or a PFX.
         */
        passphrase'
          QuestionToken
          UnionType
            StringKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * PFX or PKCS12 encoded private key and certificate chain. pfx is an
         * alternative to providing key and cert individually. PFX is usually
         * encrypted, if it is, passphrase will be used to decrypt it. Multiple
         * PFX can be provided either as an array of unencrypted PFX buffers,
         * or an array of objects in the form {buf: <string|buffer>[,
         * passphrase: <string>]}. The object form can only occur in an array.
         * object.passphrase is optional. Encrypted PFX will be decrypted with
         * object.passphrase if provided, or options.passphrase if it is not.
         */
        pfx'
          QuestionToken
          UnionType
            StringKeyword
            TypeReference
              Identifier: ' Buffer'
            TypeReference
              Identifier: ' Array'
              UnionType
                StringKeyword
                TypeReference
                  Identifier: ' Buffer'
                TypeReference
                  Identifier: ' PxfObject'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * Optionally affect the OpenSSL protocol behavior, which is not
         * usually necessary. This should be used carefully if at all! Value is
         * a numeric bitmask of the SSL_OP_* options from OpenSSL Options
         */
        secureOptions'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: ' // Value is a numeric bitmask of the `SSL_OP_*` options
        /**
         * Legacy mechanism to select the TLS protocol version to use, it does
         * not support independent control of the minimum and maximum version,
         * and does not support limiting the protocol to TLSv1.3. Use
         * minVersion and maxVersion instead. The possible values are listed as
         * SSL_METHODS, use the function names as strings. For example, use
         * 'TLSv1_1_method' to force TLS version 1.1, or 'TLS_method' to allow
         * any TLS protocol version up to TLSv1.3. It is not recommended to use
         * TLS versions less than 1.2, but it may be required for
         * interoperability. Default: none, see minVersion.
         */
        secureProtocol'
          QuestionToken
          UnionType
            StringKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * Opaque identifier used by servers to ensure session state is not
         * shared between applications. Unused by clients.
         */
        sessionIdContext'
          QuestionToken
          UnionType
            StringKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * 48-bytes of cryptographically strong pseudo-random data.
         * See Session Resumption for more information.
         */
        ticketKeys'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' Buffer'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * The number of seconds after which a TLS session created by the
         * server will no longer be resumable. See Session Resumption for more
         * information. Default: 300.
         */
        sessionTimeout'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' SecureContext'
        PropertySignature
          Identifier: '
        context'
          AnyKeyword
      FunctionDeclaration
        Identifier: ' checkServerIdentity'
        Parameter
          Identifier: 'hostname'
          StringKeyword
        Parameter
          Identifier: ' cert'
          TypeReference
            Identifier: ' PeerCertificate'
        UnionType
          TypeReference
            Identifier: ' Error'
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' createServer'
        Parameter
          Identifier: 'secureConnectionListener'
          QuestionToken
          FunctionType
            Parameter
              Identifier: 'socket'
              TypeReference
                Identifier: ' TLSSocket'
            VoidKeyword
        TypeReference
          Identifier: ' Server'
      FunctionDeclaration
        Identifier: ' createServer'
        Parameter
          Identifier: 'options'
          TypeReference
            Identifier: ' TlsOptions'
        Parameter
          Identifier: ' secureConnectionListener'
          QuestionToken
          FunctionType
            Parameter
              Identifier: 'socket'
              TypeReference
                Identifier: ' TLSSocket'
            VoidKeyword
        TypeReference
          Identifier: ' Server'
      FunctionDeclaration
        Identifier: ' connect'
        Parameter
          Identifier: 'options'
          TypeReference
            Identifier: ' ConnectionOptions'
        Parameter
          Identifier: ' secureConnectListener'
          QuestionToken
          FunctionType
            VoidKeyword
        TypeReference
          Identifier: ' TLSSocket'
      FunctionDeclaration
        Identifier: ' connect'
        Parameter
          Identifier: '
        port'
          NumberKeyword
        Parameter
          Identifier: '
        host'
          QuestionToken
          StringKeyword
        Parameter
          Identifier: '
        options'
          QuestionToken
          TypeReference
            Identifier: ' ConnectionOptions'
        Parameter
          Identifier: '
        secureConnectListener'
          QuestionToken
          FunctionType
            VoidKeyword
        TypeReference
          Identifier: ' TLSSocket'
      FunctionDeclaration
        Identifier: ' connect'
        Parameter
          Identifier: 'port'
          NumberKeyword
        Parameter
          Identifier: ' options'
          QuestionToken
          TypeReference
            Identifier: ' ConnectionOptions'
        Parameter
          Identifier: ' secureConnectListener'
          QuestionToken
          FunctionType
            VoidKeyword
        TypeReference
          Identifier: ' TLSSocket'
      FunctionDeclaration
        Identifier: ' createSecurePair'
        Parameter
          Identifier: '
        context'
          QuestionToken
          TypeReference
            Identifier: ' SecureContext'
        Parameter
          Identifier: '
        isServer'
          QuestionToken
          BooleanKeyword
        Parameter
          Identifier: '
        requestCert'
          QuestionToken
          BooleanKeyword
        Parameter
          Identifier: '
        rejectUnauthorized'
          QuestionToken
          BooleanKeyword
        TypeReference
          Identifier: ' SecurePair'
      FunctionDeclaration
        Identifier: ' createSecureContext'
        Parameter
          Identifier: 'options'
          QuestionToken
          TypeReference
            Identifier: ' SecureContextOptions'
        TypeReference
          Identifier: ' SecureContext'
      FunctionDeclaration
        Identifier: ' getCiphers'
        ArrayType
          StringKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' DEFAULT_ECDH_CURVE'
            StringKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' DEFAULT_MAX_VERSION'
            TypeReference
              Identifier: ' SecureVersion'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' DEFAULT_MIN_VERSION'
            TypeReference
              Identifier: ' SecureVersion'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' DEFAULT_CIPHERS'
            StringKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' rootCertificates'
            TypeOperator
              ArrayType
                StringKeyword
  ModuleDeclaration
    DeclareKeyword
    StringLiteral
    ModuleBlock
      ExportDeclaration
        StringLiteral
