SourceFile
  TypeAliasDeclaration
    Identifier: ' Pathname'
    StringKeyword
  InterfaceDeclaration
    Identifier: ' TestResult'
    PropertySignature
      Identifier: '
  ignored'
      BooleanKeyword
    PropertySignature
      Identifier: '
  unignored'
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Ignore'
    MethodSignature
      Identifier: '
  /**
   * Adds one or several rules to the current manager.
   * @param  {string[]} patterns
   * @returns IgnoreBase
   */
  add'
      Parameter
        Identifier: 'patterns'
        UnionType
          StringKeyword
          TypeReference
            Identifier: ' Ignore'
          TypeOperator
            ArrayType
              ParenthesizedType
                UnionType
                  StringKeyword
                  TypeReference
                    Identifier: ' Ignore'
      ThisType
    MethodSignature
      Identifier: '

  /**
   * Filters the given array of pathnames, and returns the filtered array.
   * NOTICE that each path here should be a relative path to the root of your repository.
   * @param paths the array of paths to be filtered.
   * @returns The filtered array of paths
   */
  filter'
      Parameter
        Identifier: 'pathnames'
        TypeOperator
          ArrayType
            TypeReference
              Identifier: ' Pathname'
      ArrayType
        TypeReference
          Identifier: ' Pathname'
    MethodSignature
      Identifier: '

  /**
   * Creates a filter function which could filter
   * an array of paths with Array.prototype.filter.
   */
  createFilter'
      FunctionType
        Parameter
          Identifier: 'pathname'
          TypeReference
            Identifier: ' Pathname'
        BooleanKeyword
    MethodSignature
      Identifier: '

  /**
   * Returns Boolean whether pathname should be ignored.
   * @param  {string} pathname a path to check
   * @returns boolean
   */
  ignores'
      Parameter
        Identifier: 'pathname'
        TypeReference
          Identifier: ' Pathname'
      BooleanKeyword
    MethodSignature
      Identifier: '

  /**
   * Returns whether pathname should be ignored or unignored
   * @param  {string} pathname a path to check
   * @returns TestResult
   */
  test'
      Parameter
        Identifier: 'pathname'
        TypeReference
          Identifier: ' Pathname'
      TypeReference
        Identifier: ' TestResult'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Options'
    PropertySignature
      Identifier: '
  ignorecase'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
  // For compatibility
  ignoreCase'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
  allowRelativePaths'
      QuestionToken
      BooleanKeyword
  FunctionDeclaration
    DeclareKeyword
    Identifier: ' ignore'
    Parameter
      Identifier: 'options'
      QuestionToken
      TypeReference
        Identifier: ' Options'
    TypeReference
      Identifier: ' Ignore'
  ModuleDeclaration
    DeclareKeyword
    Identifier: ' ignore'
    ModuleBlock
      FunctionDeclaration
        ExportKeyword
        Identifier: ' isPathValid'
        Parameter
          Identifier: 'pathname'
          StringKeyword
        BooleanKeyword
  ExportAssignment
    Identifier: ' ignore'
