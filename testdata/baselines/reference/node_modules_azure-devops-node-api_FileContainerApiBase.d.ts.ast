SourceFile
  ImportEqualsDeclaration
    Identifier: ' basem'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' VsoBaseInterfaces'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' FileContainerInterfaces'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' VSSInterfaces'
    ExternalModuleReference
      StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' IFileContainerApiBase'
    HeritageClause
      ExpressionWithTypeArguments
        PropertyAccessExpression
          Identifier: ' basem'
          Identifier: 'ClientApiBase'
    MethodSignature
      Identifier: '
    createItems'
      Parameter
        Identifier: 'items'
        TypeReference
          QualifiedName
            Identifier: ' VSSInterfaces'
            Identifier: 'VssJsonCollectionWrapperV'
          ArrayType
            TypeReference
              QualifiedName
                Identifier: 'FileContainerInterfaces'
                Identifier: 'FileContainerItem'
      Parameter
        Identifier: ' containerId'
        NumberKeyword
      Parameter
        Identifier: ' scope'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'FileContainerInterfaces'
              Identifier: 'FileContainerItem'
    MethodSignature
      Identifier: '
    deleteItem'
      Parameter
        Identifier: 'containerId'
        NumberKeyword
      Parameter
        Identifier: ' itemPath'
        StringKeyword
      Parameter
        Identifier: ' scope'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getContainers'
      Parameter
        Identifier: 'scope'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' artifactUris'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'FileContainerInterfaces'
              Identifier: 'FileContainer'
    MethodSignature
      Identifier: '
    getItems'
      Parameter
        Identifier: 'containerId'
        NumberKeyword
      Parameter
        Identifier: ' scope'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' itemPath'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' metadata'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' format'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' downloadFileName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' includeDownloadTickets'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' isShallow'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' ignoreRequestedMediaType'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' includeBlobMetadata'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' saveAbsolutePath'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' preferRedirect'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'FileContainerInterfaces'
              Identifier: 'FileContainerItem'
  ClassDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' FileContainerApiBase'
    HeritageClause
      ExpressionWithTypeArguments
        PropertyAccessExpression
          Identifier: ' basem'
          Identifier: 'ClientApiBase'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' IFileContainerApiBase'
    Constructor
      Parameter
        Identifier: 'baseUrl'
        StringKeyword
      Parameter
        Identifier: ' handlers'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' VsoBaseInterfaces'
              Identifier: 'IRequestHandler'
      Parameter
        Identifier: ' options'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' VsoBaseInterfaces'
            Identifier: 'IRequestOptions'
    MethodDeclaration
      Identifier: '
    /**
     * Creates the specified items in the referenced container.
     *
     * @param {VSSInterfaces.VssJsonCollectionWrapperV<FileContainerInterfaces.FileContainerItem[]>} items
     * @param {number} containerId
     * @param {string} scope - A guid representing the scope of the container. This is often the project id.
     */
    createItems'
      Parameter
        Identifier: 'items'
        TypeReference
          QualifiedName
            Identifier: ' VSSInterfaces'
            Identifier: 'VssJsonCollectionWrapperV'
          ArrayType
            TypeReference
              QualifiedName
                Identifier: 'FileContainerInterfaces'
                Identifier: 'FileContainerItem'
      Parameter
        Identifier: ' containerId'
        NumberKeyword
      Parameter
        Identifier: ' scope'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'FileContainerInterfaces'
              Identifier: 'FileContainerItem'
    MethodDeclaration
      Identifier: '
    /**
     * Deletes the specified items in a container.
     *
     * @param {number} containerId - Container Id.
     * @param {string} itemPath - Path to delete.
     * @param {string} scope - A guid representing the scope of the container. This is often the project id.
     */
    deleteItem'
      Parameter
        Identifier: 'containerId'
        NumberKeyword
      Parameter
        Identifier: ' itemPath'
        StringKeyword
      Parameter
        Identifier: ' scope'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Gets containers filtered by a comma separated list of artifact uris within the same scope, if not specified returns all containers
     *
     * @param {string} scope - A guid representing the scope of the container. This is often the project id.
     * @param {string} artifactUris
     */
    getContainers'
      Parameter
        Identifier: 'scope'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' artifactUris'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'FileContainerInterfaces'
              Identifier: 'FileContainer'
    MethodDeclaration
      Identifier: '
    /**
     * Gets the specified file container object in a format dependent upon the given parameters or HTTP Accept request header
     *
     * @param {number} containerId - The requested container Id
     * @param {string} scope - A guid representing the scope of the container. This is often the project id.
     * @param {string} itemPath - The path to the item of interest
     * @param {boolean} metadata - If true, this overrides any specified format parameter or HTTP Accept request header to provide non-recursive information for the given itemPath
     * @param {string} format - If specified, this overrides the HTTP Accept request header to return either 'json' or 'zip'.  If $format is specified, then api-version should also be specified as a query parameter.
     * @param {string} downloadFileName - If specified and returning other than JSON format, then this download name will be used (else defaults to itemPath)
     * @param {boolean} includeDownloadTickets
     * @param {boolean} isShallow - If true, returns only immediate children(files & folders) for the given itemPath. False will return all items recursively within itemPath.
     * @param {boolean} ignoreRequestedMediaType - Set to true to ignore the HTTP Accept request header. Default is false.
     * @param {boolean} includeBlobMetadata
     * @param {boolean} saveAbsolutePath - Set to false to not save the absolute path to the specified directory of the artifact in the returned archive. Works only for artifact directories. Default is true.
     * @param {boolean} preferRedirect - Set to true to get the redirect response which leads to the stream with content. Default is false.
     */
    getItems'
      Parameter
        Identifier: 'containerId'
        NumberKeyword
      Parameter
        Identifier: ' scope'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' itemPath'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' metadata'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' format'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' downloadFileName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' includeDownloadTickets'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' isShallow'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' ignoreRequestedMediaType'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' includeBlobMetadata'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' saveAbsolutePath'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' preferRedirect'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'FileContainerInterfaces'
              Identifier: 'FileContainerItem'
