SourceFile
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' example1'
        ObjectLiteralExpression
          PropertyAssignment
            Identifier: '
  /**
   * @overload Example1(value)
   *   Creates Example1
   *   @param value [String]
   */
  constructor'
            FunctionExpression
              Identifier: ' Example1'
              Parameter
                Identifier: 'value'
              Parameter
                Identifier: ' options'
              Block
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' example2'
        ObjectLiteralExpression
          PropertyAssignment
            Identifier: '
  /**
   * Example 2
   *
   * @overload Example2(value)
   *   Creates Example2
   *   @param value [String]
   *   @param secretAccessKey [String]
   *   @param sessionToken [String]
   *   @example Creates with string value
   *     const example = new Example('');
   * @overload Example2(options)
   *   Creates Example2
   *   @option options value [String]
   *   @example Creates with options object
   *     const example = new Example2({
   *       value: '',
   *     });
   */
  constructor'
            FunctionExpression
              Identifier: ' Example2'
              Block
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' example3'
        ObjectLiteralExpression
          PropertyAssignment
            Identifier: '
  /**
   * @overload evaluate(options = {}, [callback])
   *   Evaluate something
   *   @note Something interesting
   *   @param options [map]
   *   @return [string] returns evaluation result
   *   @return [null] returns nothing if callback provided
   *   @callback callback function (error, result)
   *     If callback is provided it will be called with evaluation result
   *     @param error [Error]
   *     @param result [String]
   *   @see callback
   */
  evaluate'
            FunctionExpression
              Identifier: ' evaluate'
              Parameter
                Identifier: 'options'
              Parameter
                Identifier: ' callback'
              Block
