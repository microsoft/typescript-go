SourceFile
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: '
    __String'
        ImportSpecifier
          Identifier: '
    allKeysStartWithDot'
        ImportSpecifier
          Identifier: '
    AmbientModuleDeclaration'
        ImportSpecifier
          Identifier: '
    append'
        ImportSpecifier
          Identifier: '
    arrayFrom'
        ImportSpecifier
          Identifier: '
    changeFullExtension'
        ImportSpecifier
          Identifier: '
    CharacterCodes'
        ImportSpecifier
          Identifier: '
    combinePaths'
        ImportSpecifier
          Identifier: '
    compareBooleans'
        ImportSpecifier
          Identifier: '
    compareNumberOfDirectorySeparators'
        ImportSpecifier
          Identifier: '
    comparePaths'
        ImportSpecifier
          Identifier: '
    Comparison'
        ImportSpecifier
          Identifier: '
    CompilerOptions'
        ImportSpecifier
          Identifier: '
    concatenate'
        ImportSpecifier
          Identifier: '
    containsIgnoredPath'
        ImportSpecifier
          Identifier: '
    containsPath'
        ImportSpecifier
          Identifier: '
    createGetCanonicalFileName'
        ImportSpecifier
          Identifier: '
    Debug'
        ImportSpecifier
          Identifier: '
    directorySeparator'
        ImportSpecifier
          Identifier: '
    emptyArray'
        ImportSpecifier
          Identifier: '
    endsWith'
        ImportSpecifier
          Identifier: '
    ensurePathIsNonModuleName'
        ImportSpecifier
          Identifier: '
    ensureTrailingDirectorySeparator'
        ImportSpecifier
          Identifier: '
    every'
        ImportSpecifier
          Identifier: '
    ExportAssignment'
        ImportSpecifier
          Identifier: '
    Extension'
        ImportSpecifier
          Identifier: '
    extensionFromPath'
        ImportSpecifier
          Identifier: '
    extensionsNotSupportingExtensionlessResolution'
        ImportSpecifier
          Identifier: '
    fileExtensionIsOneOf'
        ImportSpecifier
          Identifier: '
    FileIncludeKind'
        ImportSpecifier
          Identifier: '
    firstDefined'
        ImportSpecifier
          Identifier: '
    flatMap'
        ImportSpecifier
          Identifier: '
    flatten'
        ImportSpecifier
          Identifier: '
    forEach'
        ImportSpecifier
          Identifier: '
    forEachAncestorDirectoryStoppingAtGlobalCache'
        ImportSpecifier
          Identifier: '
    FutureSourceFile'
        ImportSpecifier
          Identifier: '
    getBaseFileName'
        ImportSpecifier
          Identifier: '
    GetCanonicalFileName'
        ImportSpecifier
          Identifier: '
    getConditions'
        ImportSpecifier
          Identifier: '
    getDefaultResolutionModeForFileWorker'
        ImportSpecifier
          Identifier: '
    getDirectoryPath'
        ImportSpecifier
          Identifier: '
    getEmitModuleResolutionKind'
        ImportSpecifier
          Identifier: '
    getModuleNameStringLiteralAt'
        ImportSpecifier
          Identifier: '
    getModuleSpecifierEndingPreference'
        ImportSpecifier
          Identifier: '
    getNodeModulePathParts'
        ImportSpecifier
          Identifier: '
    getNormalizedAbsolutePath'
        ImportSpecifier
          Identifier: '
    getOutputDeclarationFileNameWorker'
        ImportSpecifier
          Identifier: '
    getOutputJSFileNameWorker'
        ImportSpecifier
          Identifier: '
    getOwnKeys'
        ImportSpecifier
          Identifier: '
    getPackageJsonTypesVersionsPaths'
        ImportSpecifier
          Identifier: '
    getPackageNameFromTypesPackageName'
        ImportSpecifier
          Identifier: '
    getPackageScopeForPath'
        ImportSpecifier
          Identifier: '
    getPathsBasePath'
        ImportSpecifier
          Identifier: '
    getRelativePathFromDirectory'
        ImportSpecifier
          Identifier: '
    getRelativePathToDirectoryOrUrl'
        ImportSpecifier
          Identifier: '
    getResolvePackageJsonExports'
        ImportSpecifier
          Identifier: '
    getResolvePackageJsonImports'
        ImportSpecifier
          Identifier: '
    getSourceFileOfModule'
        ImportSpecifier
          Identifier: '
    getSupportedExtensions'
        ImportSpecifier
          Identifier: '
    getTemporaryModuleResolutionState'
        ImportSpecifier
          Identifier: '
    getTextOfIdentifierOrLiteral'
        ImportSpecifier
          Identifier: '
    hasImplementationTSFileExtension'
        ImportSpecifier
          Identifier: '
    hasJSFileExtension'
        ImportSpecifier
          Identifier: '
    hasTSFileExtension'
        ImportSpecifier
          Identifier: '
    hostGetCanonicalFileName'
        ImportSpecifier
          Identifier: '
    hostUsesCaseSensitiveFileNames'
        ImportSpecifier
          Identifier: '
    Identifier'
        ImportSpecifier
          Identifier: '
    isAmbientModule'
        ImportSpecifier
          Identifier: '
    isApplicableVersionedTypesKey'
        ImportSpecifier
          Identifier: '
    isDeclarationFileName'
        ImportSpecifier
          Identifier: '
    isExternalModuleAugmentation'
        ImportSpecifier
          Identifier: '
    isExternalModuleNameRelative'
        ImportSpecifier
          Identifier: '
    isFullSourceFile'
        ImportSpecifier
          Identifier: '
    isMissingPackageJsonInfo'
        ImportSpecifier
          Identifier: '
    isModuleBlock'
        ImportSpecifier
          Identifier: '
    isModuleDeclaration'
        ImportSpecifier
          Identifier: '
    isNonGlobalAmbientModule'
        ImportSpecifier
          Identifier: '
    isPackageJsonInfo'
        ImportSpecifier
          Identifier: '
    isRootedDiskPath'
        ImportSpecifier
          Identifier: '
    isSourceFile'
        ImportSpecifier
          Identifier: '
    isString'
        ImportSpecifier
          Identifier: '
    JsxEmit'
        ImportSpecifier
          Identifier: '
    map'
        ImportSpecifier
          Identifier: '
    mapDefined'
        ImportSpecifier
          Identifier: '
    MapLike'
        ImportSpecifier
          Identifier: '
    matchPatternOrExact'
        ImportSpecifier
          Identifier: '
    memoizeOne'
        ImportSpecifier
          Identifier: '
    min'
        ImportSpecifier
          Identifier: '
    ModuleDeclaration'
        ImportSpecifier
          Identifier: '
    ModuleKind'
        ImportSpecifier
          Identifier: '
    ModulePath'
        ImportSpecifier
          Identifier: '
    ModuleResolutionHost'
        ImportSpecifier
          Identifier: '
    ModuleResolutionKind'
        ImportSpecifier
          Identifier: '
    ModuleSpecifierCache'
        ImportSpecifier
          Identifier: '
    ModuleSpecifierEnding'
        ImportSpecifier
          Identifier: '
    ModuleSpecifierOptions'
        ImportSpecifier
          Identifier: '
    ModuleSpecifierResolutionHost'
        ImportSpecifier
          Identifier: '
    NodeFlags'
        ImportSpecifier
          Identifier: '
    NodeModulePathParts'
        ImportSpecifier
          Identifier: '
    normalizePath'
        ImportSpecifier
          Identifier: '
    PackageJsonPathFields'
        ImportSpecifier
          Identifier: '
    pathContainsNodeModules'
        ImportSpecifier
          Identifier: '
    pathIsBareSpecifier'
        ImportSpecifier
          Identifier: '
    pathIsRelative'
        ImportSpecifier
          Identifier: '
    PropertyAccessExpression'
        ImportSpecifier
          Identifier: '
    removeExtension'
        ImportSpecifier
          Identifier: '
    removeFileExtension'
        ImportSpecifier
          Identifier: '
    removeSuffix'
        ImportSpecifier
          Identifier: '
    removeTrailingDirectorySeparator'
        ImportSpecifier
          Identifier: '
    replaceFirstStar'
        ImportSpecifier
          Identifier: '
    ResolutionMode'
        ImportSpecifier
          Identifier: '
    ResolvedModuleSpecifierInfo'
        ImportSpecifier
          Identifier: '
    resolveModuleName'
        ImportSpecifier
          Identifier: '
    resolvePath'
        ImportSpecifier
          Identifier: '
    ScriptKind'
        ImportSpecifier
          Identifier: '
    shouldAllowImportingTsExtension'
        ImportSpecifier
          Identifier: '
    some'
        ImportSpecifier
          Identifier: '
    SourceFile'
        ImportSpecifier
          Identifier: '
    startsWith'
        ImportSpecifier
          Identifier: '
    startsWithDirectory'
        ImportSpecifier
          Identifier: '
    StringLiteral'
        ImportSpecifier
          Identifier: '
    Symbol'
        ImportSpecifier
          Identifier: '
    SymbolFlags'
        ImportSpecifier
          Identifier: '
    toPath'
        ImportSpecifier
          Identifier: '
    tryGetExtensionFromPath'
        ImportSpecifier
          Identifier: '
    tryParseJson'
        ImportSpecifier
          Identifier: '
    tryParsePatterns'
        ImportSpecifier
          Identifier: '
    TypeChecker'
        ImportSpecifier
          Identifier: '
    UserPreferences'
    StringLiteral
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' stringToRegex'
        CallExpression
          Identifier: ' memoizeOne'
          ArrowFunction
            Parameter
              Identifier: 'pattern'
              StringKeyword
            EqualsGreaterThanToken
            Block
              TryStatement
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' slash'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' pattern'
                            Identifier: 'indexOf'
                          StringLiteral
                  IfStatement
                    BinaryExpression
                      Identifier: 'slash'
                      ExclamationEqualsEqualsToken
                      NumericLiteral
                    Block
                      ReturnStatement
                        NewExpression
                          Identifier: ' RegExp'
                          Identifier: 'pattern'
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' lastSlash'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' pattern'
                            Identifier: 'lastIndexOf'
                          StringLiteral
                  IfStatement
                    BinaryExpression
                      Identifier: 'slash'
                      EqualsEqualsEqualsToken
                      Identifier: ' lastSlash'
                    Block
                      ReturnStatement
                        NewExpression
                          Identifier: ' RegExp'
                          Identifier: 'pattern'
                  WhileStatement
                    BinaryExpression
                      ParenthesizedExpression
                        BinaryExpression
                          Identifier: 'slash'
                          EqualsToken
                          CallExpression
                            PropertyAccessExpression
                              Identifier: ' pattern'
                              Identifier: 'indexOf'
                            StringLiteral
                            BinaryExpression
                              Identifier: ' slash'
                              PlusToken
                              NumericLiteral
                      ExclamationEqualsEqualsToken
                      Identifier: ' lastSlash'
                    Block
                      IfStatement
                        BinaryExpression
                          ElementAccessExpression
                            Identifier: 'pattern'
                            BinaryExpression
                              Identifier: 'slash'
                              MinusToken
                              NumericLiteral
                          ExclamationEqualsEqualsToken
                          StringLiteral
                        Block
                          ReturnStatement
                            NewExpression
                              Identifier: ' RegExp'
                              Identifier: 'pattern'
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' flags'
                        CallExpression
                          PropertyAccessExpression
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' pattern'
                                Identifier: 'substring'
                              BinaryExpression
                                Identifier: 'lastSlash'
                                PlusToken
                                NumericLiteral
                            Identifier: 'replace'
                          RegularExpressionLiteral
                          StringLiteral
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
        pattern'
                      EqualsToken
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' pattern'
                          Identifier: 'substring'
                        NumericLiteral
                        Identifier: ' lastSlash'
                  ReturnStatement
                    NewExpression
                      Identifier: ' RegExp'
                      Identifier: 'pattern'
                      Identifier: ' flags'
                CatchClause
                  Block
                    ReturnStatement
                      Identifier: ' undefined'
  EnumDeclaration
    ExportKeyword
    ConstKeyword
    Identifier: ' RelativePreference'
    EnumMember
      Identifier: '
    Relative'
    EnumMember
      Identifier: '
    NonRelative'
    EnumMember
      Identifier: '
    Shortest'
    EnumMember
      Identifier: '
    ExternalNonRelative'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ModuleSpecifierPreferences'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' relativePreference'
      TypeReference
        Identifier: ' RelativePreference'
    MethodSignature
      Identifier: '
    /**
     * @param syntaxImpliedNodeFormat Used when the import syntax implies ESM or CJS irrespective of the mode of the file.
     */
    getAllowedEndingsInPreferredOrder'
      Parameter
        Identifier: 'syntaxImpliedNodeFormat'
        QuestionToken
        TypeReference
          Identifier: ' ResolutionMode'
      ArrayType
        TypeReference
          Identifier: ' ModuleSpecifierEnding'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' excludeRegexes'
      QuestionToken
      TypeOperator
        ArrayType
          StringKeyword
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getModuleSpecifierPreferences'
    Parameter
      ObjectBindingPattern
        BindingElement
          Identifier: ' importModuleSpecifierPreference'
        BindingElement
          Identifier: ' importModuleSpecifierEnding'
        BindingElement
          Identifier: ' autoImportSpecifierExcludeRegexes'
      TypeReference
        Identifier: ' UserPreferences'
    Parameter
      Identifier: '
    host'
      TypeReference
        Identifier: ' Pick'
        TypeReference
          Identifier: 'ModuleSpecifierResolutionHost'
        LiteralType
          StringLiteral
    Parameter
      Identifier: '
    compilerOptions'
      TypeReference
        Identifier: ' CompilerOptions'
    Parameter
      Identifier: '
    importingSourceFile'
      TypeReference
        Identifier: ' Pick'
        TypeReference
          Identifier: 'SourceFile'
        UnionType
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
    Parameter
      Identifier: '
    oldImportSpecifier'
      QuestionToken
      StringKeyword
    TypeReference
      Identifier: ' ModuleSpecifierPreferences'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' filePreferredEnding'
            CallExpression
              Identifier: ' getPreferredEnding'
      ReturnStatement
        ObjectLiteralExpression
          PropertyAssignment
            Identifier: '
        excludeRegexes'
            Identifier: ' autoImportSpecifierExcludeRegexes'
          PropertyAssignment
            Identifier: '
        relativePreference'
            ConditionalExpression
              BinaryExpression
                Identifier: ' oldImportSpecifier'
                ExclamationEqualsEqualsToken
                Identifier: ' undefined'
              QuestionToken
              ParenthesizedExpression
                ConditionalExpression
                  CallExpression
                    Identifier: 'isExternalModuleNameRelative'
                    Identifier: 'oldImportSpecifier'
                  QuestionToken
                  PropertyAccessExpression
                    Identifier: '
            RelativePreference'
                    Identifier: 'Relative'
                  ColonToken
                  PropertyAccessExpression
                    Identifier: '
            RelativePreference'
                    Identifier: 'NonRelative'
              ColonToken
              ConditionalExpression
                BinaryExpression
                  Identifier: '
            importModuleSpecifierPreference'
                  EqualsEqualsEqualsToken
                  StringLiteral
                QuestionToken
                PropertyAccessExpression
                  Identifier: ' RelativePreference'
                  Identifier: 'Relative'
                ColonToken
                ConditionalExpression
                  BinaryExpression
                    Identifier: '
            importModuleSpecifierPreference'
                    EqualsEqualsEqualsToken
                    StringLiteral
                  QuestionToken
                  PropertyAccessExpression
                    Identifier: ' RelativePreference'
                    Identifier: 'NonRelative'
                  ColonToken
                  ConditionalExpression
                    BinaryExpression
                      Identifier: '
            importModuleSpecifierPreference'
                      EqualsEqualsEqualsToken
                      StringLiteral
                    QuestionToken
                    PropertyAccessExpression
                      Identifier: ' RelativePreference'
                      Identifier: 'ExternalNonRelative'
                    ColonToken
                    PropertyAccessExpression
                      Identifier: '
            RelativePreference'
                      Identifier: 'Shortest'
          PropertyAssignment
            Identifier: '
        getAllowedEndingsInPreferredOrder'
            ArrowFunction
              Parameter
                Identifier: ' syntaxImpliedNodeFormat'
              EqualsGreaterThanToken
              Block
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' impliedNodeFormat'
                      CallExpression
                        Identifier: ' getDefaultResolutionModeForFile'
                        Identifier: 'importingSourceFile'
                        Identifier: ' host'
                        Identifier: ' compilerOptions'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' preferredEnding'
                      ConditionalExpression
                        BinaryExpression
                          Identifier: ' syntaxImpliedNodeFormat'
                          ExclamationEqualsEqualsToken
                          Identifier: ' impliedNodeFormat'
                        QuestionToken
                        CallExpression
                          Identifier: ' getPreferredEnding'
                          Identifier: 'syntaxImpliedNodeFormat'
                        ColonToken
                        Identifier: ' filePreferredEnding'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' moduleResolution'
                      CallExpression
                        Identifier: ' getEmitModuleResolutionKind'
                        Identifier: 'compilerOptions'
                IfStatement
                  BinaryExpression
                    BinaryExpression
                      BinaryExpression
                        ParenthesizedExpression
                          BinaryExpression
                            Identifier: 'syntaxImpliedNodeFormat'
                            QuestionQuestionToken
                            Identifier: ' impliedNodeFormat'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' ModuleKind'
                          Identifier: 'ESNext'
                      AmpersandAmpersandToken
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: ' ModuleResolutionKind'
                          Identifier: 'Node16'
                        LessThanEqualsToken
                        Identifier: ' moduleResolution'
                    AmpersandAmpersandToken
                    BinaryExpression
                      Identifier: ' moduleResolution'
                      LessThanEqualsToken
                      PropertyAccessExpression
                        Identifier: ' ModuleResolutionKind'
                        Identifier: 'NodeNext'
                  Block
                    IfStatement
                      CallExpression
                        Identifier: 'shouldAllowImportingTsExtension'
                        Identifier: 'compilerOptions'
                        PropertyAccessExpression
                          Identifier: ' importingSourceFile'
                          Identifier: 'fileName'
                      Block
                        ReturnStatement
                          ArrayLiteralExpression
                            PropertyAccessExpression
                              Identifier: 'ModuleSpecifierEnding'
                              Identifier: 'TsExtension'
                            PropertyAccessExpression
                              Identifier: ' ModuleSpecifierEnding'
                              Identifier: 'JsExtension'
                    ReturnStatement
                      ArrayLiteralExpression
                        PropertyAccessExpression
                          Identifier: 'ModuleSpecifierEnding'
                          Identifier: 'JsExtension'
                IfStatement
                  BinaryExpression
                    CallExpression
                      Identifier: 'getEmitModuleResolutionKind'
                      Identifier: 'compilerOptions'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' ModuleResolutionKind'
                      Identifier: 'Classic'
                  Block
                    ReturnStatement
                      ConditionalExpression
                        BinaryExpression
                          Identifier: ' preferredEnding'
                          EqualsEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' ModuleSpecifierEnding'
                            Identifier: 'JsExtension'
                        QuestionToken
                        ArrayLiteralExpression
                          PropertyAccessExpression
                            Identifier: 'ModuleSpecifierEnding'
                            Identifier: 'JsExtension'
                          PropertyAccessExpression
                            Identifier: ' ModuleSpecifierEnding'
                            Identifier: 'Index'
                        ColonToken
                        ArrayLiteralExpression
                          PropertyAccessExpression
                            Identifier: 'ModuleSpecifierEnding'
                            Identifier: 'Index'
                          PropertyAccessExpression
                            Identifier: ' ModuleSpecifierEnding'
                            Identifier: 'JsExtension'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' allowImportingTsExtension'
                      CallExpression
                        Identifier: ' shouldAllowImportingTsExtension'
                        Identifier: 'compilerOptions'
                        PropertyAccessExpression
                          Identifier: ' importingSourceFile'
                          Identifier: 'fileName'
                SwitchStatement
                  Identifier: 'preferredEnding'
                  CaseBlock
                    CaseClause
                      PropertyAccessExpression
                        Identifier: ' ModuleSpecifierEnding'
                        Identifier: 'JsExtension'
                      ReturnStatement
                        ConditionalExpression
                          Identifier: ' allowImportingTsExtension'
                          QuestionToken
                          ArrayLiteralExpression
                            PropertyAccessExpression
                              Identifier: 'ModuleSpecifierEnding'
                              Identifier: 'JsExtension'
                            PropertyAccessExpression
                              Identifier: ' ModuleSpecifierEnding'
                              Identifier: 'TsExtension'
                            PropertyAccessExpression
                              Identifier: ' ModuleSpecifierEnding'
                              Identifier: 'Minimal'
                            PropertyAccessExpression
                              Identifier: ' ModuleSpecifierEnding'
                              Identifier: 'Index'
                          ColonToken
                          ArrayLiteralExpression
                            PropertyAccessExpression
                              Identifier: 'ModuleSpecifierEnding'
                              Identifier: 'JsExtension'
                            PropertyAccessExpression
                              Identifier: ' ModuleSpecifierEnding'
                              Identifier: 'Minimal'
                            PropertyAccessExpression
                              Identifier: ' ModuleSpecifierEnding'
                              Identifier: 'Index'
                    CaseClause
                      PropertyAccessExpression
                        Identifier: ' ModuleSpecifierEnding'
                        Identifier: 'TsExtension'
                      ReturnStatement
                        ArrayLiteralExpression
                          PropertyAccessExpression
                            Identifier: 'ModuleSpecifierEnding'
                            Identifier: 'TsExtension'
                          PropertyAccessExpression
                            Identifier: ' ModuleSpecifierEnding'
                            Identifier: 'Minimal'
                          PropertyAccessExpression
                            Identifier: ' ModuleSpecifierEnding'
                            Identifier: 'JsExtension'
                          PropertyAccessExpression
                            Identifier: ' ModuleSpecifierEnding'
                            Identifier: 'Index'
                    CaseClause
                      PropertyAccessExpression
                        Identifier: ' ModuleSpecifierEnding'
                        Identifier: 'Index'
                      ReturnStatement
                        ConditionalExpression
                          Identifier: ' allowImportingTsExtension'
                          QuestionToken
                          ArrayLiteralExpression
                            PropertyAccessExpression
                              Identifier: 'ModuleSpecifierEnding'
                              Identifier: 'Index'
                            PropertyAccessExpression
                              Identifier: ' ModuleSpecifierEnding'
                              Identifier: 'Minimal'
                            PropertyAccessExpression
                              Identifier: ' ModuleSpecifierEnding'
                              Identifier: 'TsExtension'
                            PropertyAccessExpression
                              Identifier: ' ModuleSpecifierEnding'
                              Identifier: 'JsExtension'
                          ColonToken
                          ArrayLiteralExpression
                            PropertyAccessExpression
                              Identifier: 'ModuleSpecifierEnding'
                              Identifier: 'Index'
                            PropertyAccessExpression
                              Identifier: ' ModuleSpecifierEnding'
                              Identifier: 'Minimal'
                            PropertyAccessExpression
                              Identifier: ' ModuleSpecifierEnding'
                              Identifier: 'JsExtension'
                    CaseClause
                      PropertyAccessExpression
                        Identifier: ' ModuleSpecifierEnding'
                        Identifier: 'Minimal'
                      ReturnStatement
                        ConditionalExpression
                          Identifier: ' allowImportingTsExtension'
                          QuestionToken
                          ArrayLiteralExpression
                            PropertyAccessExpression
                              Identifier: 'ModuleSpecifierEnding'
                              Identifier: 'Minimal'
                            PropertyAccessExpression
                              Identifier: ' ModuleSpecifierEnding'
                              Identifier: 'Index'
                            PropertyAccessExpression
                              Identifier: ' ModuleSpecifierEnding'
                              Identifier: 'TsExtension'
                            PropertyAccessExpression
                              Identifier: ' ModuleSpecifierEnding'
                              Identifier: 'JsExtension'
                          ColonToken
                          ArrayLiteralExpression
                            PropertyAccessExpression
                              Identifier: 'ModuleSpecifierEnding'
                              Identifier: 'Minimal'
                            PropertyAccessExpression
                              Identifier: ' ModuleSpecifierEnding'
                              Identifier: 'Index'
                            PropertyAccessExpression
                              Identifier: ' ModuleSpecifierEnding'
                              Identifier: 'JsExtension'
                    DefaultClause
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                    Debug'
                            Identifier: 'assertNever'
                          Identifier: 'preferredEnding'
      FunctionDeclaration
        Identifier: ' getPreferredEnding'
        Parameter
          Identifier: 'resolutionMode'
          QuestionToken
          TypeReference
            Identifier: ' ResolutionMode'
        TypeReference
          Identifier: ' ModuleSpecifierEnding'
        Block
          IfStatement
            BinaryExpression
              Identifier: 'oldImportSpecifier'
              ExclamationEqualsEqualsToken
              Identifier: ' undefined'
            Block
              IfStatement
                CallExpression
                  Identifier: 'hasJSFileExtension'
                  Identifier: 'oldImportSpecifier'
                ReturnStatement
                  PropertyAccessExpression
                    Identifier: ' ModuleSpecifierEnding'
                    Identifier: 'JsExtension'
              IfStatement
                CallExpression
                  Identifier: 'endsWith'
                  Identifier: 'oldImportSpecifier'
                  StringLiteral
                ReturnStatement
                  PropertyAccessExpression
                    Identifier: ' ModuleSpecifierEnding'
                    Identifier: 'Index'
          ReturnStatement
            CallExpression
              Identifier: ' getModuleSpecifierEndingPreference'
              Identifier: '
            importModuleSpecifierEnding'
              BinaryExpression
                Identifier: '
            resolutionMode'
                QuestionQuestionToken
                CallExpression
                  Identifier: ' getDefaultResolutionModeForFile'
                  Identifier: 'importingSourceFile'
                  Identifier: ' host'
                  Identifier: ' compilerOptions'
              Identifier: '
            compilerOptions'
              ConditionalExpression
                CallExpression
                  Identifier: '
            isFullSourceFile'
                  Identifier: 'importingSourceFile'
                QuestionToken
                Identifier: ' importingSourceFile'
                ColonToken
                Identifier: ' undefined'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' updateModuleSpecifier'
    Parameter
      Identifier: '
    compilerOptions'
      TypeReference
        Identifier: ' CompilerOptions'
    Parameter
      Identifier: '
    importingSourceFile'
      TypeReference
        Identifier: ' SourceFile'
    Parameter
      Identifier: '
    importingSourceFileName'
      StringKeyword
    Parameter
      Identifier: '
    toFileName'
      StringKeyword
    Parameter
      Identifier: '
    host'
      TypeReference
        Identifier: ' ModuleSpecifierResolutionHost'
    Parameter
      Identifier: '
    oldImportSpecifier'
      StringKeyword
    Parameter
      Identifier: '
    options'
      TypeReference
        Identifier: ' ModuleSpecifierOptions'
      ObjectLiteralExpression
    UnionType
      StringKeyword
      UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' res'
            CallExpression
              Identifier: ' getModuleSpecifierWorker'
              Identifier: 'compilerOptions'
              Identifier: ' importingSourceFile'
              Identifier: ' importingSourceFileName'
              Identifier: ' toFileName'
              Identifier: ' host'
              CallExpression
                Identifier: ' getModuleSpecifierPreferences'
                ObjectLiteralExpression
                Identifier: ' host'
                Identifier: ' compilerOptions'
                Identifier: ' importingSourceFile'
                Identifier: ' oldImportSpecifier'
              ObjectLiteralExpression
              Identifier: ' options'
      IfStatement
        BinaryExpression
          Identifier: 'res'
          EqualsEqualsEqualsToken
          Identifier: ' oldImportSpecifier'
        ReturnStatement
          Identifier: ' undefined'
      ReturnStatement
        Identifier: ' res'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getModuleSpecifier'
    Parameter
      Identifier: '
    compilerOptions'
      TypeReference
        Identifier: ' CompilerOptions'
    Parameter
      Identifier: '
    importingSourceFile'
      UnionType
        TypeReference
          Identifier: ' SourceFile'
        TypeReference
          Identifier: ' FutureSourceFile'
    Parameter
      Identifier: '
    importingSourceFileName'
      StringKeyword
    Parameter
      Identifier: '
    toFileName'
      StringKeyword
    Parameter
      Identifier: '
    host'
      TypeReference
        Identifier: ' ModuleSpecifierResolutionHost'
    Parameter
      Identifier: '
    options'
      TypeReference
        Identifier: ' ModuleSpecifierOptions'
      ObjectLiteralExpression
    StringKeyword
    Block
      ReturnStatement
        CallExpression
          Identifier: ' getModuleSpecifierWorker'
          Identifier: 'compilerOptions'
          Identifier: ' importingSourceFile'
          Identifier: ' importingSourceFileName'
          Identifier: ' toFileName'
          Identifier: ' host'
          CallExpression
            Identifier: ' getModuleSpecifierPreferences'
            ObjectLiteralExpression
            Identifier: ' host'
            Identifier: ' compilerOptions'
            Identifier: ' importingSourceFile'
          ObjectLiteralExpression
          Identifier: ' options'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getNodeModulesPackageName'
    Parameter
      Identifier: '
    compilerOptions'
      TypeReference
        Identifier: ' CompilerOptions'
    Parameter
      Identifier: '
    importingSourceFile'
      UnionType
        TypeReference
          Identifier: ' SourceFile'
        TypeReference
          Identifier: ' FutureSourceFile'
    Parameter
      Identifier: '
    nodeModulesFileName'
      StringKeyword
    Parameter
      Identifier: '
    host'
      TypeReference
        Identifier: ' ModuleSpecifierResolutionHost'
    Parameter
      Identifier: '
    preferences'
      TypeReference
        Identifier: ' UserPreferences'
    Parameter
      Identifier: '
    options'
      TypeReference
        Identifier: ' ModuleSpecifierOptions'
      ObjectLiteralExpression
    UnionType
      StringKeyword
      UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' info'
            CallExpression
              Identifier: ' getInfo'
              PropertyAccessExpression
                Identifier: 'importingSourceFile'
                Identifier: 'fileName'
              Identifier: ' host'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' modulePaths'
            CallExpression
              Identifier: ' getAllModulePaths'
              Identifier: 'info'
              Identifier: ' nodeModulesFileName'
              Identifier: ' host'
              Identifier: ' preferences'
              Identifier: ' compilerOptions'
              Identifier: ' options'
      ReturnStatement
        CallExpression
          Identifier: ' firstDefined'
          Identifier: 'modulePaths'
          ArrowFunction
            Parameter
              Identifier: ' modulePath'
            EqualsGreaterThanToken
            CallExpression
              Identifier: ' tryGetModuleNameAsNodeModule'
              Identifier: 'modulePath'
              Identifier: ' info'
              Identifier: ' importingSourceFile'
              Identifier: ' host'
              Identifier: ' compilerOptions'
              Identifier: ' preferences'
              TrueKeyword
              PropertyAccessExpression
                Identifier: ' options'
                Identifier: 'overrideImportMode'
  FunctionDeclaration
    Identifier: ' getModuleSpecifierWorker'
    Parameter
      Identifier: '
    compilerOptions'
      TypeReference
        Identifier: ' CompilerOptions'
    Parameter
      Identifier: '
    importingSourceFile'
      UnionType
        TypeReference
          Identifier: ' SourceFile'
        TypeReference
          Identifier: ' FutureSourceFile'
    Parameter
      Identifier: '
    importingSourceFileName'
      StringKeyword
    Parameter
      Identifier: '
    toFileName'
      StringKeyword
    Parameter
      Identifier: '
    host'
      TypeReference
        Identifier: ' ModuleSpecifierResolutionHost'
    Parameter
      Identifier: '
    preferences'
      TypeReference
        Identifier: ' ModuleSpecifierPreferences'
    Parameter
      Identifier: '
    userPreferences'
      TypeReference
        Identifier: ' UserPreferences'
    Parameter
      Identifier: '
    options'
      TypeReference
        Identifier: ' ModuleSpecifierOptions'
      ObjectLiteralExpression
    StringKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' info'
            CallExpression
              Identifier: ' getInfo'
              Identifier: 'importingSourceFileName'
              Identifier: ' host'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' modulePaths'
            CallExpression
              Identifier: ' getAllModulePaths'
              Identifier: 'info'
              Identifier: ' toFileName'
              Identifier: ' host'
              Identifier: ' userPreferences'
              Identifier: ' compilerOptions'
              Identifier: ' options'
      ReturnStatement
        BinaryExpression
          CallExpression
            Identifier: ' firstDefined'
            Identifier: 'modulePaths'
            ArrowFunction
              Parameter
                Identifier: ' modulePath'
              EqualsGreaterThanToken
              CallExpression
                Identifier: ' tryGetModuleNameAsNodeModule'
                Identifier: 'modulePath'
                Identifier: ' info'
                Identifier: ' importingSourceFile'
                Identifier: ' host'
                Identifier: ' compilerOptions'
                Identifier: ' userPreferences'
                Identifier: ' /*packageNameOnly*/ undefined'
                PropertyAccessExpression
                  Identifier: ' options'
                  Identifier: 'overrideImportMode'
          BarBarToken
          CallExpression
            Identifier: '
        getLocalModuleSpecifier'
            Identifier: 'toFileName'
            Identifier: ' info'
            Identifier: ' compilerOptions'
            Identifier: ' host'
            BinaryExpression
              PropertyAccessExpression
                Identifier: ' options'
                Identifier: 'overrideImportMode'
              BarBarToken
              CallExpression
                Identifier: ' getDefaultResolutionModeForFile'
                Identifier: 'importingSourceFile'
                Identifier: ' host'
                Identifier: ' compilerOptions'
            Identifier: ' preferences'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' tryGetModuleSpecifiersFromCache'
    Parameter
      Identifier: '
    moduleSymbol'
      TypeReference
        Identifier: ' Symbol'
    Parameter
      Identifier: '
    importingSourceFile'
      UnionType
        TypeReference
          Identifier: ' SourceFile'
        TypeReference
          Identifier: ' FutureSourceFile'
    Parameter
      Identifier: '
    host'
      TypeReference
        Identifier: ' ModuleSpecifierResolutionHost'
    Parameter
      Identifier: '
    userPreferences'
      TypeReference
        Identifier: ' UserPreferences'
    Parameter
      Identifier: '
    options'
      TypeReference
        Identifier: ' ModuleSpecifierOptions'
      ObjectLiteralExpression
    UnionType
      TypeReference
        Identifier: ' ModuleSpecifierResult'
      UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' result'
            CallExpression
              Identifier: ' tryGetModuleSpecifiersFromCacheWorker'
              Identifier: '
        moduleSymbol'
              Identifier: '
        importingSourceFile'
              Identifier: '
        host'
              Identifier: '
        userPreferences'
              Identifier: '
        options'
      ReturnStatement
        BinaryExpression
          ElementAccessExpression
            Identifier: ' result'
            NumericLiteral
          AmpersandAmpersandToken
          ObjectLiteralExpression
            PropertyAssignment
              Identifier: ' kind'
              ElementAccessExpression
                Identifier: ' result'
                NumericLiteral
            PropertyAssignment
              Identifier: ' moduleSpecifiers'
              ElementAccessExpression
                Identifier: ' result'
                NumericLiteral
            PropertyAssignment
              Identifier: ' computedWithoutCache'
              FalseKeyword
  FunctionDeclaration
    Identifier: ' tryGetModuleSpecifiersFromCacheWorker'
    Parameter
      Identifier: '
    moduleSymbol'
      TypeReference
        Identifier: ' Symbol'
    Parameter
      Identifier: '
    importingSourceFile'
      UnionType
        TypeReference
          Identifier: ' SourceFile'
        TypeReference
          Identifier: ' FutureSourceFile'
    Parameter
      Identifier: '
    host'
      TypeReference
        Identifier: ' ModuleSpecifierResolutionHost'
    Parameter
      Identifier: '
    userPreferences'
      TypeReference
        Identifier: ' UserPreferences'
    Parameter
      Identifier: '
    options'
      TypeReference
        Identifier: ' ModuleSpecifierOptions'
      ObjectLiteralExpression
    TypeOperator
      TupleType
        NamedTupleMember
          Identifier: 'kind'
          QuestionToken
          IndexedAccessType
            TypeReference
              Identifier: ' ModuleSpecifierResult'
            LiteralType
              StringLiteral
        NamedTupleMember
          Identifier: ' specifiers'
          QuestionToken
          TypeOperator
            ArrayType
              StringKeyword
        NamedTupleMember
          Identifier: ' moduleFile'
          QuestionToken
          TypeReference
            Identifier: ' SourceFile'
        NamedTupleMember
          Identifier: ' modulePaths'
          QuestionToken
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' ModulePath'
        NamedTupleMember
          Identifier: ' cache'
          QuestionToken
          TypeReference
            Identifier: ' ModuleSpecifierCache'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' moduleSourceFile'
            CallExpression
              Identifier: ' getSourceFileOfModule'
              Identifier: 'moduleSymbol'
      IfStatement
        PrefixUnaryExpression
          Identifier: 'moduleSourceFile'
        Block
          ReturnStatement
            AsExpression
              Identifier: ' emptyArray'
              TupleType
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' cache'
            CallExpression
              PropertyAccessExpression
                Identifier: ' host'
                Identifier: 'getModuleSpecifierCache'
              QuestionDotToken
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' cached'
            CallExpression
              PropertyAccessExpression
                Identifier: ' cache'
                QuestionDotToken
                Identifier: 'get'
              PropertyAccessExpression
                Identifier: 'importingSourceFile'
                Identifier: 'path'
              PropertyAccessExpression
                Identifier: ' moduleSourceFile'
                Identifier: 'path'
              Identifier: ' userPreferences'
              Identifier: ' options'
      ReturnStatement
        ArrayLiteralExpression
          PropertyAccessExpression
            Identifier: 'cached'
            QuestionDotToken
            Identifier: 'kind'
          PropertyAccessExpression
            Identifier: ' cached'
            QuestionDotToken
            Identifier: 'moduleSpecifiers'
          Identifier: ' moduleSourceFile'
          PropertyAccessExpression
            Identifier: ' cached'
            QuestionDotToken
            Identifier: 'modulePaths'
          Identifier: ' cache'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getModuleSpecifiers'
    Parameter
      Identifier: '
    moduleSymbol'
      TypeReference
        Identifier: ' Symbol'
    Parameter
      Identifier: '
    checker'
      TypeReference
        Identifier: ' TypeChecker'
    Parameter
      Identifier: '
    compilerOptions'
      TypeReference
        Identifier: ' CompilerOptions'
    Parameter
      Identifier: '
    importingSourceFile'
      TypeReference
        Identifier: ' SourceFile'
    Parameter
      Identifier: '
    host'
      TypeReference
        Identifier: ' ModuleSpecifierResolutionHost'
    Parameter
      Identifier: '
    userPreferences'
      TypeReference
        Identifier: ' UserPreferences'
    Parameter
      Identifier: '
    options'
      TypeReference
        Identifier: ' ModuleSpecifierOptions'
      ObjectLiteralExpression
    TypeOperator
      ArrayType
        StringKeyword
    Block
      ReturnStatement
        PropertyAccessExpression
          CallExpression
            Identifier: ' getModuleSpecifiersWithCacheInfo'
            Identifier: '
        moduleSymbol'
            Identifier: '
        checker'
            Identifier: '
        compilerOptions'
            Identifier: '
        importingSourceFile'
            Identifier: '
        host'
            Identifier: '
        userPreferences'
            Identifier: '
        options'
            FalseKeyword
          Identifier: 'moduleSpecifiers'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ModuleSpecifierResult'
    PropertySignature
      Identifier: '
    kind'
      IndexedAccessType
        TypeReference
          Identifier: ' ResolvedModuleSpecifierInfo'
        LiteralType
          StringLiteral
    PropertySignature
      Identifier: '
    moduleSpecifiers'
      TypeOperator
        ArrayType
          StringKeyword
    PropertySignature
      Identifier: '
    computedWithoutCache'
      BooleanKeyword
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getModuleSpecifiersWithCacheInfo'
    Parameter
      Identifier: '
    moduleSymbol'
      TypeReference
        Identifier: ' Symbol'
    Parameter
      Identifier: '
    checker'
      TypeReference
        Identifier: ' TypeChecker'
    Parameter
      Identifier: '
    compilerOptions'
      TypeReference
        Identifier: ' CompilerOptions'
    Parameter
      Identifier: '
    importingSourceFile'
      UnionType
        TypeReference
          Identifier: ' SourceFile'
        TypeReference
          Identifier: ' FutureSourceFile'
    Parameter
      Identifier: '
    host'
      TypeReference
        Identifier: ' ModuleSpecifierResolutionHost'
    Parameter
      Identifier: '
    userPreferences'
      TypeReference
        Identifier: ' UserPreferences'
    Parameter
      Identifier: '
    options'
      UnionType
        TypeReference
          Identifier: ' ModuleSpecifierOptions'
        UndefinedKeyword
      ObjectLiteralExpression
    Parameter
      Identifier: '
    forAutoImport'
      BooleanKeyword
    TypeReference
      Identifier: ' ModuleSpecifierResult'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' computedWithoutCache'
            FalseKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' ambient'
            CallExpression
              Identifier: ' tryGetModuleNameFromAmbientModule'
              Identifier: 'moduleSymbol'
              Identifier: ' checker'
      IfStatement
        Identifier: 'ambient'
        Block
          ReturnStatement
            ObjectLiteralExpression
              PropertyAssignment
                Identifier: '
            kind'
                StringLiteral
              PropertyAssignment
                Identifier: '
            moduleSpecifiers'
                ConditionalExpression
                  PrefixUnaryExpression
                    ParenthesizedExpression
                      BinaryExpression
                        Identifier: 'forAutoImport'
                        AmpersandAmpersandToken
                        CallExpression
                          Identifier: ' isExcludedByRegex'
                          Identifier: 'ambient'
                          PropertyAccessExpression
                            Identifier: ' userPreferences'
                            Identifier: 'autoImportSpecifierExcludeRegexes'
                  QuestionToken
                  ArrayLiteralExpression
                    Identifier: 'ambient'
                  ColonToken
                  Identifier: ' emptyArray'
              ShorthandPropertyAssignment
                Identifier: '
            computedWithoutCache'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            ArrayBindingPattern
              BindingElement
                Identifier: 'kind'
              BindingElement
                Identifier: ' specifiers'
              BindingElement
                Identifier: ' moduleSourceFile'
              BindingElement
                Identifier: ' modulePaths'
              BindingElement
                Identifier: ' cache'
            CallExpression
              Identifier: ' tryGetModuleSpecifiersFromCacheWorker'
              Identifier: '
        moduleSymbol'
              Identifier: '
        importingSourceFile'
              Identifier: '
        host'
              Identifier: '
        userPreferences'
              Identifier: '
        options'
      IfStatement
        Identifier: 'specifiers'
        ReturnStatement
          ObjectLiteralExpression
            ShorthandPropertyAssignment
              Identifier: ' kind'
            PropertyAssignment
              Identifier: ' moduleSpecifiers'
              Identifier: ' specifiers'
            ShorthandPropertyAssignment
              Identifier: ' computedWithoutCache'
      IfStatement
        PrefixUnaryExpression
          Identifier: 'moduleSourceFile'
        ReturnStatement
          ObjectLiteralExpression
            PropertyAssignment
              Identifier: ' kind'
              Identifier: ' undefined'
            PropertyAssignment
              Identifier: ' moduleSpecifiers'
              Identifier: ' emptyArray'
            ShorthandPropertyAssignment
              Identifier: ' computedWithoutCache'
      ExpressionStatement
        BinaryExpression
          Identifier: '

    computedWithoutCache'
          EqualsToken
          TrueKeyword
      ExpressionStatement
        BinaryExpression
          Identifier: '
    modulePaths'
          BarBarEqualsToken
          CallExpression
            Identifier: ' getAllModulePathsWorker'
            CallExpression
              Identifier: 'getInfo'
              PropertyAccessExpression
                Identifier: 'importingSourceFile'
                Identifier: 'fileName'
              Identifier: ' host'
            PropertyAccessExpression
              Identifier: ' moduleSourceFile'
              Identifier: 'originalFileName'
            Identifier: ' host'
            Identifier: ' compilerOptions'
            Identifier: ' options'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' result'
            CallExpression
              Identifier: ' computeModuleSpecifiers'
              Identifier: '
        modulePaths'
              Identifier: '
        compilerOptions'
              Identifier: '
        importingSourceFile'
              Identifier: '
        host'
              Identifier: '
        userPreferences'
              Identifier: '
        options'
              Identifier: '
        forAutoImport'
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            Identifier: '
    cache'
            QuestionDotToken
            Identifier: 'set'
          PropertyAccessExpression
            Identifier: 'importingSourceFile'
            Identifier: 'path'
          PropertyAccessExpression
            Identifier: ' moduleSourceFile'
            Identifier: 'path'
          Identifier: ' userPreferences'
          Identifier: ' options'
          PropertyAccessExpression
            Identifier: ' result'
            Identifier: 'kind'
          Identifier: ' modulePaths'
          PropertyAccessExpression
            Identifier: ' result'
            Identifier: 'moduleSpecifiers'
      ReturnStatement
        Identifier: ' result'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getLocalModuleSpecifierBetweenFileNames'
    Parameter
      Identifier: '
    importingFile'
      TypeReference
        Identifier: ' Pick'
        TypeReference
          Identifier: 'SourceFile'
        UnionType
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
    Parameter
      Identifier: '
    targetFileName'
      StringKeyword
    Parameter
      Identifier: '
    compilerOptions'
      TypeReference
        Identifier: ' CompilerOptions'
    Parameter
      Identifier: '
    host'
      TypeReference
        Identifier: ' ModuleSpecifierResolutionHost'
    Parameter
      Identifier: '
    preferences'
      TypeReference
        Identifier: ' UserPreferences'
    Parameter
      Identifier: '
    options'
      TypeReference
        Identifier: ' ModuleSpecifierOptions'
      ObjectLiteralExpression
    StringKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' info'
            CallExpression
              Identifier: ' getInfo'
              PropertyAccessExpression
                Identifier: 'importingFile'
                Identifier: 'fileName'
              Identifier: ' host'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' importMode'
            BinaryExpression
              PropertyAccessExpression
                Identifier: ' options'
                Identifier: 'overrideImportMode'
              QuestionQuestionToken
              PropertyAccessExpression
                Identifier: ' importingFile'
                Identifier: 'impliedNodeFormat'
      ReturnStatement
        CallExpression
          Identifier: ' getLocalModuleSpecifier'
          Identifier: '
        targetFileName'
          Identifier: '
        info'
          Identifier: '
        compilerOptions'
          Identifier: '
        host'
          Identifier: '
        importMode'
          CallExpression
            Identifier: '
        getModuleSpecifierPreferences'
            Identifier: 'preferences'
            Identifier: ' host'
            Identifier: ' compilerOptions'
            Identifier: ' importingFile'
  FunctionDeclaration
    Identifier: ' computeModuleSpecifiers'
    Parameter
      Identifier: '
    modulePaths'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' ModulePath'
    Parameter
      Identifier: '
    compilerOptions'
      TypeReference
        Identifier: ' CompilerOptions'
    Parameter
      Identifier: '
    importingSourceFile'
      UnionType
        TypeReference
          Identifier: ' SourceFile'
        TypeReference
          Identifier: ' FutureSourceFile'
    Parameter
      Identifier: '
    host'
      TypeReference
        Identifier: ' ModuleSpecifierResolutionHost'
    Parameter
      Identifier: '
    userPreferences'
      TypeReference
        Identifier: ' UserPreferences'
    Parameter
      Identifier: '
    options'
      TypeReference
        Identifier: ' ModuleSpecifierOptions'
      ObjectLiteralExpression
    Parameter
      Identifier: '
    forAutoImport'
      BooleanKeyword
    TypeReference
      Identifier: ' ModuleSpecifierResult'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' info'
            CallExpression
              Identifier: ' getInfo'
              PropertyAccessExpression
                Identifier: 'importingSourceFile'
                Identifier: 'fileName'
              Identifier: ' host'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' preferences'
            CallExpression
              Identifier: ' getModuleSpecifierPreferences'
              Identifier: 'userPreferences'
              Identifier: ' host'
              Identifier: ' compilerOptions'
              Identifier: ' importingSourceFile'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' existingSpecifier'
            BinaryExpression
              CallExpression
                Identifier: ' isFullSourceFile'
                Identifier: 'importingSourceFile'
              AmpersandAmpersandToken
              CallExpression
                Identifier: ' forEach'
                Identifier: 'modulePaths'
                ArrowFunction
                  Parameter
                    Identifier: ' modulePath'
                  EqualsGreaterThanToken
                  CallExpression
                    Identifier: '
        forEach'
                    CallExpression
                      PropertyAccessExpression
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
            host'
                            Identifier: 'getFileIncludeReasons'
                        Identifier: 'get'
                      CallExpression
                        Identifier: 'toPath'
                        PropertyAccessExpression
                          Identifier: 'modulePath'
                          Identifier: 'path'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' host'
                            Identifier: 'getCurrentDirectory'
                        PropertyAccessExpression
                          Identifier: ' info'
                          Identifier: 'getCanonicalFileName'
                    ArrowFunction
                      Parameter
                        Identifier: '
            reason'
                      EqualsGreaterThanToken
                      Block
                        IfStatement
                          BinaryExpression
                            BinaryExpression
                              PropertyAccessExpression
                                Identifier: 'reason'
                                Identifier: 'kind'
                              ExclamationEqualsEqualsToken
                              PropertyAccessExpression
                                Identifier: ' FileIncludeKind'
                                Identifier: 'Import'
                            BarBarToken
                            BinaryExpression
                              PropertyAccessExpression
                                Identifier: ' reason'
                                Identifier: 'file'
                              ExclamationEqualsEqualsToken
                              PropertyAccessExpression
                                Identifier: ' importingSourceFile'
                                Identifier: 'path'
                          ReturnStatement
                            Identifier: ' undefined'
                        VariableStatement
                          VariableDeclarationList
                            VariableDeclaration
                              Identifier: ' existingMode'
                              CallExpression
                                PropertyAccessExpression
                                  Identifier: ' host'
                                  Identifier: 'getModeForResolutionAtIndex'
                                Identifier: 'importingSourceFile'
                                PropertyAccessExpression
                                  Identifier: ' reason'
                                  Identifier: 'index'
                        VariableStatement
                          VariableDeclarationList
                            VariableDeclaration
                              Identifier: ' targetMode'
                              BinaryExpression
                                PropertyAccessExpression
                                  Identifier: ' options'
                                  Identifier: 'overrideImportMode'
                                QuestionQuestionToken
                                CallExpression
                                  PropertyAccessExpression
                                    Identifier: ' host'
                                    Identifier: 'getDefaultResolutionModeForFile'
                                  Identifier: 'importingSourceFile'
                        IfStatement
                          BinaryExpression
                            BinaryExpression
                              BinaryExpression
                                Identifier: 'existingMode'
                                ExclamationEqualsEqualsToken
                                Identifier: ' targetMode'
                              AmpersandAmpersandToken
                              BinaryExpression
                                Identifier: ' existingMode'
                                ExclamationEqualsEqualsToken
                                Identifier: ' undefined'
                            AmpersandAmpersandToken
                            BinaryExpression
                              Identifier: ' targetMode'
                              ExclamationEqualsEqualsToken
                              Identifier: ' undefined'
                          Block
                            ReturnStatement
                              Identifier: ' undefined'
                        VariableStatement
                          VariableDeclarationList
                            VariableDeclaration
                              Identifier: ' specifier'
                              PropertyAccessExpression
                                CallExpression
                                  Identifier: ' getModuleNameStringLiteralAt'
                                  Identifier: 'importingSourceFile'
                                  PropertyAccessExpression
                                    Identifier: ' reason'
                                    Identifier: 'index'
                                Identifier: 'text'
                        ReturnStatement
                          ConditionalExpression
                            BinaryExpression
                              BinaryExpression
                                PropertyAccessExpression
                                  Identifier: ' preferences'
                                  Identifier: 'relativePreference'
                                ExclamationEqualsEqualsToken
                                PropertyAccessExpression
                                  Identifier: ' RelativePreference'
                                  Identifier: 'NonRelative'
                              BarBarToken
                              PrefixUnaryExpression
                                CallExpression
                                  Identifier: 'pathIsRelative'
                                  Identifier: 'specifier'
                            QuestionToken
                            Identifier: '
                    specifier'
                            ColonToken
                            Identifier: '
                    undefined'
      IfStatement
        Identifier: 'existingSpecifier'
        Block
          ReturnStatement
            ObjectLiteralExpression
              PropertyAssignment
                Identifier: ' kind'
                Identifier: ' undefined'
              PropertyAssignment
                Identifier: ' moduleSpecifiers'
                ArrayLiteralExpression
                  Identifier: 'existingSpecifier'
              PropertyAssignment
                Identifier: ' computedWithoutCache'
                TrueKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' importedFileIsInNodeModules'
            CallExpression
              Identifier: ' some'
              Identifier: 'modulePaths'
              ArrowFunction
                Parameter
                  Identifier: ' p'
                EqualsGreaterThanToken
                PropertyAccessExpression
                  Identifier: ' p'
                  Identifier: 'isInNodeModules'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' nodeModulesSpecifiers'
            UnionType
              ArrayType
                StringKeyword
              UndefinedKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' pathsSpecifiers'
            UnionType
              ArrayType
                StringKeyword
              UndefinedKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' redirectPathsSpecifiers'
            UnionType
              ArrayType
                StringKeyword
              UndefinedKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' relativeSpecifiers'
            UnionType
              ArrayType
                StringKeyword
              UndefinedKeyword
      ForOfStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' modulePath'
        Identifier: ' modulePaths'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' specifier'
                ConditionalExpression
                  PropertyAccessExpression
                    Identifier: ' modulePath'
                    Identifier: 'isInNodeModules'
                  QuestionToken
                  CallExpression
                    Identifier: ' tryGetModuleNameAsNodeModule'
                    Identifier: 'modulePath'
                    Identifier: ' info'
                    Identifier: ' importingSourceFile'
                    Identifier: ' host'
                    Identifier: ' compilerOptions'
                    Identifier: ' userPreferences'
                    Identifier: ' /*packageNameOnly*/ undefined'
                    PropertyAccessExpression
                      Identifier: ' options'
                      Identifier: 'overrideImportMode'
                  ColonToken
                  Identifier: ' undefined'
          IfStatement
            BinaryExpression
              Identifier: 'specifier'
              AmpersandAmpersandToken
              PrefixUnaryExpression
                ParenthesizedExpression
                  BinaryExpression
                    Identifier: 'forAutoImport'
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: ' isExcludedByRegex'
                      Identifier: 'specifier'
                      PropertyAccessExpression
                        Identifier: ' preferences'
                        Identifier: 'excludeRegexes'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            nodeModulesSpecifiers'
                  EqualsToken
                  CallExpression
                    Identifier: ' append'
                    Identifier: 'nodeModulesSpecifiers'
                    Identifier: ' specifier'
              IfStatement
                PropertyAccessExpression
                  Identifier: 'modulePath'
                  Identifier: 'isRedirect'
                Block
                  ReturnStatement
                    ObjectLiteralExpression
                      PropertyAssignment
                        Identifier: ' kind'
                        StringLiteral
                      PropertyAssignment
                        Identifier: ' moduleSpecifiers'
                        Identifier: ' nodeModulesSpecifiers'
                      PropertyAssignment
                        Identifier: ' computedWithoutCache'
                        TrueKeyword
          IfStatement
            PrefixUnaryExpression
              Identifier: 'specifier'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' local'
                    CallExpression
                      Identifier: ' getLocalModuleSpecifier'
                      PropertyAccessExpression
                        Identifier: '
                modulePath'
                        Identifier: 'path'
                      Identifier: '
                info'
                      Identifier: '
                compilerOptions'
                      Identifier: '
                host'
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: '
                options'
                          Identifier: 'overrideImportMode'
                        BarBarToken
                        PropertyAccessExpression
                          Identifier: ' importingSourceFile'
                          Identifier: 'impliedNodeFormat'
                      Identifier: '
                preferences'
                      PropertyAccessExpression
                        Identifier: '
                /*pathsOnly*/ modulePath'
                        Identifier: 'isRedirect'
              IfStatement
                BinaryExpression
                  PrefixUnaryExpression
                    Identifier: 'local'
                  BarBarToken
                  BinaryExpression
                    Identifier: ' forAutoImport'
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: ' isExcludedByRegex'
                      Identifier: 'local'
                      PropertyAccessExpression
                        Identifier: ' preferences'
                        Identifier: 'excludeRegexes'
                Block
                  ContinueStatement
              IfStatement
                PropertyAccessExpression
                  Identifier: 'modulePath'
                  Identifier: 'isRedirect'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                redirectPathsSpecifiers'
                      EqualsToken
                      CallExpression
                        Identifier: ' append'
                        Identifier: 'redirectPathsSpecifiers'
                        Identifier: ' local'
                IfStatement
                  CallExpression
                    Identifier: 'pathIsBareSpecifier'
                    Identifier: 'local'
                  Block
                    IfStatement
                      CallExpression
                        Identifier: 'pathContainsNodeModules'
                        Identifier: 'local'
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                    // We could be in this branch due to inappropriate use of `baseUrl`, not intentional `paths`
                    // usage. It's impossible to reason about where to prioritize baseUrl-generated module
                    // specifiers, but if they contain `/node_modules/`, they're going to trigger a portability
                    // error, so *at least* don't prioritize those.
                    relativeSpecifiers'
                            EqualsToken
                            CallExpression
                              Identifier: ' append'
                              Identifier: 'relativeSpecifiers'
                              Identifier: ' local'
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                    pathsSpecifiers'
                            EqualsToken
                            CallExpression
                              Identifier: ' append'
                              Identifier: 'pathsSpecifiers'
                              Identifier: ' local'
                  IfStatement
                    BinaryExpression
                      BinaryExpression
                        Identifier: 'forAutoImport'
                        BarBarToken
                        PrefixUnaryExpression
                          Identifier: 'importedFileIsInNodeModules'
                      BarBarToken
                      PropertyAccessExpression
                        Identifier: ' modulePath'
                        Identifier: 'isInNodeModules'
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                // Why this extra conditional, not just an `else`? If some path to the file contained
                // 'node_modules', but we can't create a non-relative specifier (e.g. "@foo/bar/path/to/file"),
                // that means we had to go through a *sibling's* node_modules, not one we can access directly.
                // If some path to the file was in node_modules but another was not, this likely indicates that
                // we have a monorepo structure with symlinks. In this case, the non-node_modules path is
                // probably the realpath, e.g. "../bar/path/to/file", but a relative path to another package
                // in a monorepo is probably not portable. So, the module specifier we actually go with will be
                // the relative path through node_modules, so that the declaration emitter can produce a
                // portability error. (See declarationEmitReexportedSymlinkReference3)
                relativeSpecifiers'
                          EqualsToken
                          CallExpression
                            Identifier: ' append'
                            Identifier: 'relativeSpecifiers'
                            Identifier: ' local'
      ReturnStatement
        ConditionalExpression
          PropertyAccessExpression
            Identifier: ' pathsSpecifiers'
            QuestionDotToken
            Identifier: 'length'
          QuestionToken
          ObjectLiteralExpression
            PropertyAssignment
              Identifier: ' kind'
              StringLiteral
            PropertyAssignment
              Identifier: ' moduleSpecifiers'
              Identifier: ' pathsSpecifiers'
            PropertyAssignment
              Identifier: ' computedWithoutCache'
              TrueKeyword
          ColonToken
          ConditionalExpression
            PropertyAccessExpression
              Identifier: '
        redirectPathsSpecifiers'
              QuestionDotToken
              Identifier: 'length'
            QuestionToken
            ObjectLiteralExpression
              PropertyAssignment
                Identifier: ' kind'
                StringLiteral
              PropertyAssignment
                Identifier: ' moduleSpecifiers'
                Identifier: ' redirectPathsSpecifiers'
              PropertyAssignment
                Identifier: ' computedWithoutCache'
                TrueKeyword
            ColonToken
            ConditionalExpression
              PropertyAccessExpression
                Identifier: '
        nodeModulesSpecifiers'
                QuestionDotToken
                Identifier: 'length'
              QuestionToken
              ObjectLiteralExpression
                PropertyAssignment
                  Identifier: ' kind'
                  StringLiteral
                PropertyAssignment
                  Identifier: ' moduleSpecifiers'
                  Identifier: ' nodeModulesSpecifiers'
                PropertyAssignment
                  Identifier: ' computedWithoutCache'
                  TrueKeyword
              ColonToken
              ObjectLiteralExpression
                PropertyAssignment
                  Identifier: ' kind'
                  StringLiteral
                PropertyAssignment
                  Identifier: ' moduleSpecifiers'
                  BinaryExpression
                    Identifier: ' relativeSpecifiers'
                    QuestionQuestionToken
                    Identifier: ' emptyArray'
                PropertyAssignment
                  Identifier: ' computedWithoutCache'
                  TrueKeyword
  FunctionDeclaration
    Identifier: ' isExcludedByRegex'
    Parameter
      Identifier: 'moduleSpecifier'
      StringKeyword
    Parameter
      Identifier: ' excludeRegexes'
      UnionType
        TypeOperator
          ArrayType
            StringKeyword
        UndefinedKeyword
    BooleanKeyword
    Block
      ReturnStatement
        CallExpression
          Identifier: ' some'
          Identifier: 'excludeRegexes'
          ArrowFunction
            Parameter
              Identifier: ' pattern'
            EqualsGreaterThanToken
            PrefixUnaryExpression
              PrefixUnaryExpression
                CallExpression
                  PropertyAccessExpression
                    CallExpression
                      Identifier: 'stringToRegex'
                      Identifier: 'pattern'
                    QuestionDotToken
                    Identifier: 'test'
                  Identifier: 'moduleSpecifier'
  InterfaceDeclaration
    Identifier: ' Info'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' getCanonicalFileName'
      TypeReference
        Identifier: ' GetCanonicalFileName'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' importingSourceFileName'
      StringKeyword
    PropertySignature
      ReadonlyKeyword
      Identifier: ' sourceDirectory'
      StringKeyword
    PropertySignature
      ReadonlyKeyword
      Identifier: ' canonicalSourceDirectory'
      StringKeyword
  FunctionDeclaration
    Identifier: ' getInfo'
    Parameter
      Identifier: 'importingSourceFileName'
      StringKeyword
    Parameter
      Identifier: ' host'
      TypeReference
        Identifier: ' ModuleSpecifierResolutionHost'
    TypeReference
      Identifier: ' Info'
    Block
      ExpressionStatement
        BinaryExpression
          Identifier: '
    importingSourceFileName'
          EqualsToken
          CallExpression
            Identifier: ' getNormalizedAbsolutePath'
            Identifier: 'importingSourceFileName'
            CallExpression
              PropertyAccessExpression
                Identifier: ' host'
                Identifier: 'getCurrentDirectory'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' getCanonicalFileName'
            CallExpression
              Identifier: ' createGetCanonicalFileName'
              ConditionalExpression
                PropertyAccessExpression
                  Identifier: 'host'
                  Identifier: 'useCaseSensitiveFileNames'
                QuestionToken
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' host'
                    Identifier: 'useCaseSensitiveFileNames'
                ColonToken
                TrueKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' sourceDirectory'
            CallExpression
              Identifier: ' getDirectoryPath'
              Identifier: 'importingSourceFileName'
      ReturnStatement
        ObjectLiteralExpression
          ShorthandPropertyAssignment
            Identifier: '
        getCanonicalFileName'
          ShorthandPropertyAssignment
            Identifier: '
        importingSourceFileName'
          ShorthandPropertyAssignment
            Identifier: '
        sourceDirectory'
          PropertyAssignment
            Identifier: '
        canonicalSourceDirectory'
            CallExpression
              Identifier: ' getCanonicalFileName'
              Identifier: 'sourceDirectory'
  FunctionDeclaration
    Identifier: ' getLocalModuleSpecifier'
    Parameter
      Identifier: 'moduleFileName'
      StringKeyword
    Parameter
      Identifier: ' info'
      TypeReference
        Identifier: ' Info'
    Parameter
      Identifier: ' compilerOptions'
      TypeReference
        Identifier: ' CompilerOptions'
    Parameter
      Identifier: ' host'
      TypeReference
        Identifier: ' ModuleSpecifierResolutionHost'
    Parameter
      Identifier: ' importMode'
      TypeReference
        Identifier: ' ResolutionMode'
    Parameter
      Identifier: ' preferences'
      TypeReference
        Identifier: ' ModuleSpecifierPreferences'
    StringKeyword
  FunctionDeclaration
    Identifier: ' getLocalModuleSpecifier'
    Parameter
      Identifier: 'moduleFileName'
      StringKeyword
    Parameter
      Identifier: ' info'
      TypeReference
        Identifier: ' Info'
    Parameter
      Identifier: ' compilerOptions'
      TypeReference
        Identifier: ' CompilerOptions'
    Parameter
      Identifier: ' host'
      TypeReference
        Identifier: ' ModuleSpecifierResolutionHost'
    Parameter
      Identifier: ' importMode'
      TypeReference
        Identifier: ' ResolutionMode'
    Parameter
      Identifier: ' preferences'
      TypeReference
        Identifier: ' ModuleSpecifierPreferences'
    Parameter
      Identifier: ' pathsOnly'
      QuestionToken
      BooleanKeyword
    UnionType
      StringKeyword
      UndefinedKeyword
  FunctionDeclaration
    Identifier: ' getLocalModuleSpecifier'
    Parameter
      Identifier: 'moduleFileName'
      StringKeyword
    Parameter
      Identifier: ' info'
      TypeReference
        Identifier: ' Info'
    Parameter
      Identifier: ' compilerOptions'
      TypeReference
        Identifier: ' CompilerOptions'
    Parameter
      Identifier: ' host'
      TypeReference
        Identifier: ' ModuleSpecifierResolutionHost'
    Parameter
      Identifier: ' importMode'
      TypeReference
        Identifier: ' ResolutionMode'
    Parameter
      ObjectBindingPattern
        BindingElement
          Identifier: ' getAllowedEndingsInPreferredOrder'
          Identifier: ' getAllowedEndingsInPrefererredOrder'
        BindingElement
          Identifier: ' relativePreference'
        BindingElement
          Identifier: ' excludeRegexes'
      TypeReference
        Identifier: ' ModuleSpecifierPreferences'
    Parameter
      Identifier: ' pathsOnly'
      QuestionToken
      BooleanKeyword
    UnionType
      StringKeyword
      UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            ObjectBindingPattern
              BindingElement
                Identifier: ' baseUrl'
              BindingElement
                Identifier: ' paths'
              BindingElement
                Identifier: ' rootDirs'
            Identifier: ' compilerOptions'
      IfStatement
        BinaryExpression
          Identifier: 'pathsOnly'
          AmpersandAmpersandToken
          PrefixUnaryExpression
            Identifier: 'paths'
        Block
          ReturnStatement
            Identifier: ' undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            ObjectBindingPattern
              BindingElement
                Identifier: ' sourceDirectory'
              BindingElement
                Identifier: ' canonicalSourceDirectory'
              BindingElement
                Identifier: ' getCanonicalFileName'
            Identifier: ' info'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' allowedEndings'
            CallExpression
              Identifier: ' getAllowedEndingsInPrefererredOrder'
              Identifier: 'importMode'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' relativePath'
            BinaryExpression
              BinaryExpression
                Identifier: ' rootDirs'
                AmpersandAmpersandToken
                CallExpression
                  Identifier: ' tryGetModuleNameFromRootDirs'
                  Identifier: 'rootDirs'
                  Identifier: ' moduleFileName'
                  Identifier: ' sourceDirectory'
                  Identifier: ' getCanonicalFileName'
                  Identifier: ' allowedEndings'
                  Identifier: ' compilerOptions'
              BarBarToken
              CallExpression
                Identifier: '
        processEnding'
                CallExpression
                  Identifier: 'ensurePathIsNonModuleName'
                  CallExpression
                    Identifier: 'getRelativePathFromDirectory'
                    Identifier: 'sourceDirectory'
                    Identifier: ' moduleFileName'
                    Identifier: ' getCanonicalFileName'
                Identifier: ' allowedEndings'
                Identifier: ' compilerOptions'
      IfStatement
        BinaryExpression
          BinaryExpression
            BinaryExpression
              PrefixUnaryExpression
                Identifier: 'baseUrl'
              AmpersandAmpersandToken
              PrefixUnaryExpression
                Identifier: 'paths'
            AmpersandAmpersandToken
            PrefixUnaryExpression
              CallExpression
                Identifier: 'getResolvePackageJsonImports'
                Identifier: 'compilerOptions'
          BarBarToken
          BinaryExpression
            Identifier: ' relativePreference'
            EqualsEqualsEqualsToken
            PropertyAccessExpression
              Identifier: ' RelativePreference'
              Identifier: 'Relative'
        Block
          ReturnStatement
            ConditionalExpression
              Identifier: ' pathsOnly'
              QuestionToken
              Identifier: ' undefined'
              ColonToken
              Identifier: ' relativePath'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' baseDirectory'
            CallExpression
              Identifier: ' getNormalizedAbsolutePath'
              BinaryExpression
                CallExpression
                  Identifier: 'getPathsBasePath'
                  Identifier: 'compilerOptions'
                  Identifier: ' host'
                BarBarToken
                NonNullExpression
                  Identifier: ' baseUrl'
              CallExpression
                PropertyAccessExpression
                  Identifier: ' host'
                  Identifier: 'getCurrentDirectory'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' relativeToBaseUrl'
            CallExpression
              Identifier: ' getRelativePathIfInSameVolume'
              Identifier: 'moduleFileName'
              Identifier: ' baseDirectory'
              Identifier: ' getCanonicalFileName'
      IfStatement
        PrefixUnaryExpression
          Identifier: 'relativeToBaseUrl'
        Block
          ReturnStatement
            ConditionalExpression
              Identifier: ' pathsOnly'
              QuestionToken
              Identifier: ' undefined'
              ColonToken
              Identifier: ' relativePath'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' fromPackageJsonImports'
            ConditionalExpression
              Identifier: ' pathsOnly'
              QuestionToken
              Identifier: ' undefined'
              ColonToken
              CallExpression
                Identifier: ' tryGetModuleNameFromPackageJsonImports'
                Identifier: '
            moduleFileName'
                Identifier: '
            sourceDirectory'
                Identifier: '
            compilerOptions'
                Identifier: '
            host'
                Identifier: '
            importMode'
                CallExpression
                  Identifier: '
            prefersTsExtension'
                  Identifier: 'allowedEndings'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' fromPaths'
            ConditionalExpression
              BinaryExpression
                Identifier: ' pathsOnly'
                BarBarToken
                BinaryExpression
                  Identifier: ' fromPackageJsonImports'
                  EqualsEqualsEqualsToken
                  Identifier: ' undefined'
              QuestionToken
              BinaryExpression
                Identifier: ' paths'
                AmpersandAmpersandToken
                CallExpression
                  Identifier: ' tryGetModuleNameFromPaths'
                  Identifier: 'relativeToBaseUrl'
                  Identifier: ' paths'
                  Identifier: ' allowedEndings'
                  Identifier: ' host'
                  Identifier: ' compilerOptions'
              ColonToken
              Identifier: ' undefined'
      IfStatement
        Identifier: 'pathsOnly'
        Block
          ReturnStatement
            Identifier: ' fromPaths'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' maybeNonRelative'
            BinaryExpression
              Identifier: ' fromPackageJsonImports'
              QuestionQuestionToken
              ParenthesizedExpression
                ConditionalExpression
                  BinaryExpression
                    BinaryExpression
                      Identifier: 'fromPaths'
                      EqualsEqualsEqualsToken
                      Identifier: ' undefined'
                    AmpersandAmpersandToken
                    BinaryExpression
                      Identifier: ' baseUrl'
                      ExclamationEqualsEqualsToken
                      Identifier: ' undefined'
                  QuestionToken
                  CallExpression
                    Identifier: ' processEnding'
                    Identifier: 'relativeToBaseUrl'
                    Identifier: ' allowedEndings'
                    Identifier: ' compilerOptions'
                  ColonToken
                  Identifier: ' fromPaths'
      IfStatement
        PrefixUnaryExpression
          Identifier: 'maybeNonRelative'
        Block
          ReturnStatement
            Identifier: ' relativePath'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' relativeIsExcluded'
            CallExpression
              Identifier: ' isExcludedByRegex'
              Identifier: 'relativePath'
              Identifier: ' excludeRegexes'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' nonRelativeIsExcluded'
            CallExpression
              Identifier: ' isExcludedByRegex'
              Identifier: 'maybeNonRelative'
              Identifier: ' excludeRegexes'
      IfStatement
        BinaryExpression
          PrefixUnaryExpression
            Identifier: 'relativeIsExcluded'
          AmpersandAmpersandToken
          Identifier: ' nonRelativeIsExcluded'
        Block
          ReturnStatement
            Identifier: ' relativePath'
      IfStatement
        BinaryExpression
          Identifier: 'relativeIsExcluded'
          AmpersandAmpersandToken
          PrefixUnaryExpression
            Identifier: 'nonRelativeIsExcluded'
        Block
          ReturnStatement
            Identifier: ' maybeNonRelative'
      IfStatement
        BinaryExpression
          BinaryExpression
            Identifier: 'relativePreference'
            EqualsEqualsEqualsToken
            PropertyAccessExpression
              Identifier: ' RelativePreference'
              Identifier: 'NonRelative'
          AmpersandAmpersandToken
          PrefixUnaryExpression
            CallExpression
              Identifier: 'pathIsRelative'
              Identifier: 'maybeNonRelative'
        Block
          ReturnStatement
            Identifier: ' maybeNonRelative'
      IfStatement
        BinaryExpression
          BinaryExpression
            Identifier: 'relativePreference'
            EqualsEqualsEqualsToken
            PropertyAccessExpression
              Identifier: ' RelativePreference'
              Identifier: 'ExternalNonRelative'
          AmpersandAmpersandToken
          PrefixUnaryExpression
            CallExpression
              Identifier: 'pathIsRelative'
              Identifier: 'maybeNonRelative'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' projectDirectory'
                ConditionalExpression
                  PropertyAccessExpression
                    Identifier: ' compilerOptions'
                    Identifier: 'configFilePath'
                  QuestionToken
                  CallExpression
                    Identifier: '
            toPath'
                    CallExpression
                      Identifier: 'getDirectoryPath'
                      PropertyAccessExpression
                        Identifier: 'compilerOptions'
                        Identifier: 'configFilePath'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' host'
                        Identifier: 'getCurrentDirectory'
                    PropertyAccessExpression
                      Identifier: ' info'
                      Identifier: 'getCanonicalFileName'
                  ColonToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
            info'
                      Identifier: 'getCanonicalFileName'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: 'host'
                        Identifier: 'getCurrentDirectory'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' modulePath'
                CallExpression
                  Identifier: ' toPath'
                  Identifier: 'moduleFileName'
                  Identifier: ' projectDirectory'
                  Identifier: ' getCanonicalFileName'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' sourceIsInternal'
                CallExpression
                  Identifier: ' startsWith'
                  Identifier: 'canonicalSourceDirectory'
                  Identifier: ' projectDirectory'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' targetIsInternal'
                CallExpression
                  Identifier: ' startsWith'
                  Identifier: 'modulePath'
                  Identifier: ' projectDirectory'
          IfStatement
            BinaryExpression
              BinaryExpression
                Identifier: 'sourceIsInternal'
                AmpersandAmpersandToken
                PrefixUnaryExpression
                  Identifier: 'targetIsInternal'
              BarBarToken
              BinaryExpression
                PrefixUnaryExpression
                  Identifier: 'sourceIsInternal'
                AmpersandAmpersandToken
                Identifier: ' targetIsInternal'
            Block
              ReturnStatement
                Identifier: ' maybeNonRelative'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' nearestTargetPackageJson'
                CallExpression
                  Identifier: ' getNearestAncestorDirectoryWithPackageJson'
                  Identifier: 'host'
                  CallExpression
                    Identifier: ' getDirectoryPath'
                    Identifier: 'modulePath'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' nearestSourcePackageJson'
                CallExpression
                  Identifier: ' getNearestAncestorDirectoryWithPackageJson'
                  Identifier: 'host'
                  Identifier: ' sourceDirectory'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' ignoreCase'
                PrefixUnaryExpression
                  CallExpression
                    Identifier: 'hostUsesCaseSensitiveFileNames'
                    Identifier: 'host'
          IfStatement
            PrefixUnaryExpression
              CallExpression
                Identifier: 'packageJsonPathsAreEqual'
                Identifier: 'nearestTargetPackageJson'
                Identifier: ' nearestSourcePackageJson'
                Identifier: ' ignoreCase'
            Block
              ReturnStatement
                Identifier: ' maybeNonRelative'
          ReturnStatement
            Identifier: ' relativePath'
      ReturnStatement
        ConditionalExpression
          BinaryExpression
            CallExpression
              Identifier: ' isPathRelativeToParent'
              Identifier: 'maybeNonRelative'
            BarBarToken
            BinaryExpression
              CallExpression
                Identifier: ' countPathComponents'
                Identifier: 'relativePath'
              LessThanToken
              CallExpression
                Identifier: ' countPathComponents'
                Identifier: 'maybeNonRelative'
          QuestionToken
          Identifier: ' relativePath'
          ColonToken
          Identifier: ' maybeNonRelative'
  FunctionDeclaration
    Identifier: ' packageJsonPathsAreEqual'
    Parameter
      Identifier: 'a'
      UnionType
        StringKeyword
        UndefinedKeyword
    Parameter
      Identifier: ' b'
      UnionType
        StringKeyword
        UndefinedKeyword
    Parameter
      Identifier: ' ignoreCase'
      QuestionToken
      BooleanKeyword
    Block
      IfStatement
        BinaryExpression
          Identifier: 'a'
          EqualsEqualsEqualsToken
          Identifier: ' b'
        ReturnStatement
          TrueKeyword
      IfStatement
        BinaryExpression
          BinaryExpression
            Identifier: 'a'
            EqualsEqualsEqualsToken
            Identifier: ' undefined'
          BarBarToken
          BinaryExpression
            Identifier: ' b'
            EqualsEqualsEqualsToken
            Identifier: ' undefined'
        ReturnStatement
          FalseKeyword
      ReturnStatement
        BinaryExpression
          CallExpression
            Identifier: ' comparePaths'
            Identifier: 'a'
            Identifier: ' b'
            Identifier: ' ignoreCase'
          EqualsEqualsEqualsToken
          PropertyAccessExpression
            Identifier: ' Comparison'
            Identifier: 'EqualTo'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' countPathComponents'
    Parameter
      Identifier: 'path'
      StringKeyword
    NumberKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' count'
            NumericLiteral
      ForStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' i'
            ConditionalExpression
              CallExpression
                Identifier: ' startsWith'
                Identifier: 'path'
                StringLiteral
              QuestionToken
              NumericLiteral
              ColonToken
              NumericLiteral
        BinaryExpression
          Identifier: ' i'
          LessThanToken
          PropertyAccessExpression
            Identifier: ' path'
            Identifier: 'length'
        PostfixUnaryExpression
          Identifier: ' i'
        Block
          IfStatement
            BinaryExpression
              CallExpression
                PropertyAccessExpression
                  Identifier: 'path'
                  Identifier: 'charCodeAt'
                Identifier: 'i'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' CharacterCodes'
                Identifier: 'slash'
            ExpressionStatement
              PostfixUnaryExpression
                Identifier: ' count'
      ReturnStatement
        Identifier: ' count'
  FunctionDeclaration
    Identifier: ' comparePathsByRedirectAndNumberOfDirectorySeparators'
    Parameter
      Identifier: 'a'
      TypeReference
        Identifier: ' ModulePath'
    Parameter
      Identifier: ' b'
      TypeReference
        Identifier: ' ModulePath'
    Block
      ReturnStatement
        BinaryExpression
          CallExpression
            Identifier: ' compareBooleans'
            PropertyAccessExpression
              Identifier: 'b'
              Identifier: 'isRedirect'
            PropertyAccessExpression
              Identifier: ' a'
              Identifier: 'isRedirect'
          BarBarToken
          CallExpression
            Identifier: ' compareNumberOfDirectorySeparators'
            PropertyAccessExpression
              Identifier: 'a'
              Identifier: 'path'
            PropertyAccessExpression
              Identifier: ' b'
              Identifier: 'path'
  FunctionDeclaration
    Identifier: ' getNearestAncestorDirectoryWithPackageJson'
    Parameter
      Identifier: 'host'
      TypeReference
        Identifier: ' ModuleSpecifierResolutionHost'
    Parameter
      Identifier: ' fileName'
      StringKeyword
    Block
      IfStatement
        PropertyAccessExpression
          Identifier: 'host'
          Identifier: 'getNearestAncestorDirectoryWithPackageJson'
        Block
          ReturnStatement
            CallExpression
              PropertyAccessExpression
                Identifier: ' host'
                Identifier: 'getNearestAncestorDirectoryWithPackageJson'
              Identifier: 'fileName'
      ReturnStatement
        CallExpression
          Identifier: ' forEachAncestorDirectoryStoppingAtGlobalCache'
          Identifier: '
        host'
          Identifier: '
        fileName'
          ArrowFunction
            Parameter
              Identifier: '
        directory'
            EqualsGreaterThanToken
            ConditionalExpression
              CallExpression
                PropertyAccessExpression
                  Identifier: '
            host'
                  Identifier: 'fileExists'
                CallExpression
                  Identifier: 'combinePaths'
                  Identifier: 'directory'
                  StringLiteral
              QuestionToken
              Identifier: '
                directory'
              ColonToken
              Identifier: '
                undefined'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' forEachFileNameOfModule'
    TypeParameter
      Identifier: 'T'
    Parameter
      Identifier: '
    importingFileName'
      StringKeyword
    Parameter
      Identifier: '
    importedFileName'
      StringKeyword
    Parameter
      Identifier: '
    host'
      TypeReference
        Identifier: ' ModuleSpecifierResolutionHost'
    Parameter
      Identifier: '
    preferSymlinks'
      BooleanKeyword
    Parameter
      Identifier: '
    cb'
      FunctionType
        Parameter
          Identifier: 'fileName'
          StringKeyword
        Parameter
          Identifier: ' isRedirect'
          BooleanKeyword
        UnionType
          TypeReference
            Identifier: ' T'
          UndefinedKeyword
    UnionType
      TypeReference
        Identifier: ' T'
      UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' getCanonicalFileName'
            CallExpression
              Identifier: ' hostGetCanonicalFileName'
              Identifier: 'host'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' cwd'
            CallExpression
              PropertyAccessExpression
                Identifier: ' host'
                Identifier: 'getCurrentDirectory'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' referenceRedirect'
            ConditionalExpression
              CallExpression
                PropertyAccessExpression
                  Identifier: ' host'
                  Identifier: 'isSourceOfProjectReferenceRedirect'
                Identifier: 'importedFileName'
              QuestionToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' host'
                  Identifier: 'getProjectReferenceRedirect'
                Identifier: 'importedFileName'
              ColonToken
              Identifier: ' undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' importedPath'
            CallExpression
              Identifier: ' toPath'
              Identifier: 'importedFileName'
              Identifier: ' cwd'
              Identifier: ' getCanonicalFileName'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' redirects'
            BinaryExpression
              CallExpression
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: ' host'
                    Identifier: 'redirectTargetsMap'
                  Identifier: 'get'
                Identifier: 'importedPath'
              BarBarToken
              Identifier: ' emptyArray'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' importedFileNames'
            ArrayLiteralExpression
              SpreadElement
                ParenthesizedExpression
                  ConditionalExpression
                    Identifier: 'referenceRedirect'
                    QuestionToken
                    ArrayLiteralExpression
                      Identifier: 'referenceRedirect'
                    ColonToken
                    Identifier: ' emptyArray'
              Identifier: ' importedFileName'
              SpreadElement
                Identifier: 'redirects'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' targets'
            CallExpression
              PropertyAccessExpression
                Identifier: ' importedFileNames'
                Identifier: 'map'
              ArrowFunction
                Parameter
                  Identifier: 'f'
                EqualsGreaterThanToken
                CallExpression
                  Identifier: ' getNormalizedAbsolutePath'
                  Identifier: 'f'
                  Identifier: ' cwd'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' shouldFilterIgnoredPaths'
            PrefixUnaryExpression
              CallExpression
                Identifier: 'every'
                Identifier: 'targets'
                Identifier: ' containsIgnoredPath'
      IfStatement
        PrefixUnaryExpression
          Identifier: 'preferSymlinks'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' result'
                CallExpression
                  Identifier: ' forEach'
                  Identifier: 'targets'
                  ArrowFunction
                    Parameter
                      Identifier: ' p'
                    EqualsGreaterThanToken
                    BinaryExpression
                      PrefixUnaryExpression
                        ParenthesizedExpression
                          BinaryExpression
                            Identifier: 'shouldFilterIgnoredPaths'
                            AmpersandAmpersandToken
                            CallExpression
                              Identifier: ' containsIgnoredPath'
                              Identifier: 'p'
                      AmpersandAmpersandToken
                      CallExpression
                        Identifier: ' cb'
                        Identifier: 'p'
                        BinaryExpression
                          Identifier: ' referenceRedirect'
                          EqualsEqualsEqualsToken
                          Identifier: ' p'
          IfStatement
            Identifier: 'result'
            ReturnStatement
              Identifier: ' result'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' symlinkedDirectories'
            CallExpression
              PropertyAccessExpression
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' host'
                    Identifier: 'getSymlinkCache'
                  QuestionDotToken
                Identifier: 'getSymlinkedDirectoriesByRealpath'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' fullImportedFileName'
            CallExpression
              Identifier: ' getNormalizedAbsolutePath'
              Identifier: 'importedFileName'
              Identifier: ' cwd'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' result'
            BinaryExpression
              Identifier: ' symlinkedDirectories'
              AmpersandAmpersandToken
              CallExpression
                Identifier: ' forEachAncestorDirectoryStoppingAtGlobalCache'
                Identifier: '
        host'
                CallExpression
                  Identifier: '
        getDirectoryPath'
                  Identifier: 'fullImportedFileName'
                ArrowFunction
                  Parameter
                    Identifier: '
        realPathDirectory'
                  EqualsGreaterThanToken
                  Block
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' symlinkDirectories'
                          CallExpression
                            PropertyAccessExpression
                              Identifier: ' symlinkedDirectories'
                              Identifier: 'get'
                            CallExpression
                              Identifier: 'ensureTrailingDirectorySeparator'
                              CallExpression
                                Identifier: 'toPath'
                                Identifier: 'realPathDirectory'
                                Identifier: ' cwd'
                                Identifier: ' getCanonicalFileName'
                    IfStatement
                      PrefixUnaryExpression
                        Identifier: 'symlinkDirectories'
                      ReturnStatement
                        Identifier: ' undefined'
                    IfStatement
                      CallExpression
                        Identifier: 'startsWithDirectory'
                        Identifier: 'importingFileName'
                        Identifier: ' realPathDirectory'
                        Identifier: ' getCanonicalFileName'
                      Block
                        ReturnStatement
                          FalseKeyword
                    ReturnStatement
                      CallExpression
                        Identifier: ' forEach'
                        Identifier: 'targets'
                        ArrowFunction
                          Parameter
                            Identifier: ' target'
                          EqualsGreaterThanToken
                          Block
                            IfStatement
                              PrefixUnaryExpression
                                CallExpression
                                  Identifier: 'startsWithDirectory'
                                  Identifier: 'target'
                                  Identifier: ' realPathDirectory'
                                  Identifier: ' getCanonicalFileName'
                              Block
                                ReturnStatement
                            VariableStatement
                              VariableDeclarationList
                                VariableDeclaration
                                  Identifier: ' relative'
                                  CallExpression
                                    Identifier: ' getRelativePathFromDirectory'
                                    Identifier: 'realPathDirectory'
                                    Identifier: ' target'
                                    Identifier: ' getCanonicalFileName'
                            ForOfStatement
                              VariableDeclarationList
                                VariableDeclaration
                                  Identifier: ' symlinkDirectory'
                              Identifier: ' symlinkDirectories'
                              Block
                                VariableStatement
                                  VariableDeclarationList
                                    VariableDeclaration
                                      Identifier: ' option'
                                      CallExpression
                                        Identifier: ' resolvePath'
                                        Identifier: 'symlinkDirectory'
                                        Identifier: ' relative'
                                VariableStatement
                                  VariableDeclarationList
                                    VariableDeclaration
                                      Identifier: ' result'
                                      CallExpression
                                        Identifier: ' cb'
                                        Identifier: 'option'
                                        BinaryExpression
                                          Identifier: ' target'
                                          EqualsEqualsEqualsToken
                                          Identifier: ' referenceRedirect'
                                ExpressionStatement
                                  BinaryExpression
                                    Identifier: '
                    shouldFilterIgnoredPaths'
                                    EqualsToken
                                    TrueKeyword
                                IfStatement
                                  Identifier: 'result'
                                  ReturnStatement
                                    Identifier: ' result'
      ReturnStatement
        BinaryExpression
          Identifier: ' result'
          BarBarToken
          ParenthesizedExpression
            ConditionalExpression
              Identifier: 'preferSymlinks'
              QuestionToken
              CallExpression
                Identifier: ' forEach'
                Identifier: 'targets'
                ArrowFunction
                  Parameter
                    Identifier: ' p'
                  EqualsGreaterThanToken
                  ConditionalExpression
                    BinaryExpression
                      Identifier: ' shouldFilterIgnoredPaths'
                      AmpersandAmpersandToken
                      CallExpression
                        Identifier: ' containsIgnoredPath'
                        Identifier: 'p'
                    QuestionToken
                    Identifier: ' undefined'
                    ColonToken
                    CallExpression
                      Identifier: ' cb'
                      Identifier: 'p'
                      BinaryExpression
                        Identifier: ' p'
                        EqualsEqualsEqualsToken
                        Identifier: ' referenceRedirect'
              ColonToken
              Identifier: ' undefined'
  FunctionDeclaration
    Identifier: ' getAllModulePaths'
    Parameter
      Identifier: '
    info'
      TypeReference
        Identifier: ' Info'
    Parameter
      Identifier: '
    importedFileName'
      StringKeyword
    Parameter
      Identifier: '
    host'
      TypeReference
        Identifier: ' ModuleSpecifierResolutionHost'
    Parameter
      Identifier: '
    preferences'
      TypeReference
        Identifier: ' UserPreferences'
    Parameter
      Identifier: '
    compilerOptions'
      TypeReference
        Identifier: ' CompilerOptions'
    Parameter
      Identifier: '
    options'
      TypeReference
        Identifier: ' ModuleSpecifierOptions'
      ObjectLiteralExpression
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' importingFilePath'
            CallExpression
              Identifier: ' toPath'
              PropertyAccessExpression
                Identifier: 'info'
                Identifier: 'importingSourceFileName'
              CallExpression
                PropertyAccessExpression
                  Identifier: ' host'
                  Identifier: 'getCurrentDirectory'
              CallExpression
                Identifier: ' hostGetCanonicalFileName'
                Identifier: 'host'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' importedFilePath'
            CallExpression
              Identifier: ' toPath'
              Identifier: 'importedFileName'
              CallExpression
                PropertyAccessExpression
                  Identifier: ' host'
                  Identifier: 'getCurrentDirectory'
              CallExpression
                Identifier: ' hostGetCanonicalFileName'
                Identifier: 'host'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' cache'
            CallExpression
              PropertyAccessExpression
                Identifier: ' host'
                Identifier: 'getModuleSpecifierCache'
              QuestionDotToken
      IfStatement
        Identifier: 'cache'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' cached'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' cache'
                    Identifier: 'get'
                  Identifier: 'importingFilePath'
                  Identifier: ' importedFilePath'
                  Identifier: ' preferences'
                  Identifier: ' options'
          IfStatement
            PropertyAccessExpression
              Identifier: 'cached'
              QuestionDotToken
              Identifier: 'modulePaths'
            ReturnStatement
              PropertyAccessExpression
                Identifier: ' cached'
                Identifier: 'modulePaths'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' modulePaths'
            CallExpression
              Identifier: ' getAllModulePathsWorker'
              Identifier: 'info'
              Identifier: ' importedFileName'
              Identifier: ' host'
              Identifier: ' compilerOptions'
              Identifier: ' options'
      IfStatement
        Identifier: 'cache'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        cache'
                Identifier: 'setModulePaths'
              Identifier: 'importingFilePath'
              Identifier: ' importedFilePath'
              Identifier: ' preferences'
              Identifier: ' options'
              Identifier: ' modulePaths'
      ReturnStatement
        Identifier: ' modulePaths'
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' runtimeDependencyFields'
        AsExpression
          ArrayLiteralExpression
            StringLiteral
            StringLiteral
            StringLiteral
          TypeReference
            Identifier: ' const'
  FunctionDeclaration
    Identifier: ' getAllRuntimeDependencies'
    Parameter
      Identifier: 'packageJson'
      TypeReference
        Identifier: ' PackageJsonPathFields'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' result'
      ForOfStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' field'
        Identifier: ' runtimeDependencyFields'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' deps'
                ElementAccessExpression
                  Identifier: ' packageJson'
                  Identifier: 'field'
          IfStatement
            BinaryExpression
              Identifier: 'deps'
              AmpersandAmpersandToken
              BinaryExpression
                TypeOfExpression
                  Identifier: ' deps'
                EqualsEqualsEqualsToken
                StringLiteral
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            result'
                  EqualsToken
                  CallExpression
                    Identifier: ' concatenate'
                    Identifier: 'result'
                    CallExpression
                      Identifier: ' getOwnKeys'
                      Identifier: 'deps'
      ReturnStatement
        Identifier: ' result'
  FunctionDeclaration
    Identifier: ' getAllModulePathsWorker'
    Parameter
      Identifier: 'info'
      TypeReference
        Identifier: ' Info'
    Parameter
      Identifier: ' importedFileName'
      StringKeyword
    Parameter
      Identifier: ' host'
      TypeReference
        Identifier: ' ModuleSpecifierResolutionHost'
    Parameter
      Identifier: ' compilerOptions'
      TypeReference
        Identifier: ' CompilerOptions'
    Parameter
      Identifier: ' options'
      TypeReference
        Identifier: ' ModuleSpecifierOptions'
    TypeOperator
      ArrayType
        TypeReference
          Identifier: ' ModulePath'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' cache'
            CallExpression
              PropertyAccessExpression
                Identifier: ' host'
                Identifier: 'getModuleResolutionCache'
              QuestionDotToken
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' links'
            CallExpression
              PropertyAccessExpression
                Identifier: ' host'
                Identifier: 'getSymlinkCache'
              QuestionDotToken
      IfStatement
        BinaryExpression
          BinaryExpression
            BinaryExpression
              Identifier: 'cache'
              AmpersandAmpersandToken
              Identifier: ' links'
            AmpersandAmpersandToken
            PropertyAccessExpression
              Identifier: ' host'
              Identifier: 'readFile'
          AmpersandAmpersandToken
          PrefixUnaryExpression
            CallExpression
              Identifier: 'pathContainsNodeModules'
              PropertyAccessExpression
                Identifier: 'info'
                Identifier: 'importingSourceFileName'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        Debug'
                Identifier: 'type'
              TypeReference
                Identifier: 'ModuleResolutionHost'
              Identifier: 'host'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' state'
                CallExpression
                  Identifier: ' getTemporaryModuleResolutionState'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: 'cache'
                      Identifier: 'getPackageJsonInfoCache'
                  Identifier: ' host'
                  ObjectLiteralExpression
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' packageJson'
                CallExpression
                  Identifier: ' getPackageScopeForPath'
                  CallExpression
                    Identifier: 'getDirectoryPath'
                    PropertyAccessExpression
                      Identifier: 'info'
                      Identifier: 'importingSourceFileName'
                  Identifier: ' state'
          IfStatement
            Identifier: 'packageJson'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' toResolve'
                    CallExpression
                      Identifier: ' getAllRuntimeDependencies'
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: 'packageJson'
                          Identifier: 'contents'
                        Identifier: 'packageJsonContent'
              ForOfStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' depName'
                ParenthesizedExpression
                  BinaryExpression
                    Identifier: 'toResolve'
                    BarBarToken
                    Identifier: ' emptyArray'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' resolved'
                        CallExpression
                          Identifier: ' resolveModuleName'
                          Identifier: 'depName'
                          CallExpression
                            Identifier: ' combinePaths'
                            PropertyAccessExpression
                              Identifier: 'packageJson'
                              Identifier: 'packageDirectory'
                            StringLiteral
                          Identifier: ' compilerOptions'
                          Identifier: ' host'
                          Identifier: ' cache'
                          Identifier: ' /*redirectedReference*/ undefined'
                          PropertyAccessExpression
                            Identifier: ' options'
                            Identifier: 'overrideImportMode'
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                links'
                        Identifier: 'setSymlinksFromResolution'
                      PropertyAccessExpression
                        Identifier: 'resolved'
                        Identifier: 'resolvedModule'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' allFileNames'
            NewExpression
              Identifier: ' Map'
              StringKeyword
              TypeLiteral
                PropertySignature
                  Identifier: ' path'
                  StringKeyword
                PropertySignature
                  Identifier: ' isRedirect'
                  BooleanKeyword
                PropertySignature
                  Identifier: ' isInNodeModules'
                  BooleanKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' importedFileFromNodeModules'
            FalseKeyword
      ExpressionStatement
        CallExpression
          Identifier: '
    forEachFileNameOfModule'
          PropertyAccessExpression
            Identifier: '
        info'
            Identifier: 'importingSourceFileName'
          Identifier: '
        importedFileName'
          Identifier: '
        host'
          TrueKeyword
          ArrowFunction
            Parameter
              Identifier: 'path'
            Parameter
              Identifier: ' isRedirect'
            EqualsGreaterThanToken
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' isInNodeModules'
                    CallExpression
                      Identifier: ' pathContainsNodeModules'
                      Identifier: 'path'
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            allFileNames'
                    Identifier: 'set'
                  Identifier: 'path'
                  ObjectLiteralExpression
                    PropertyAssignment
                      Identifier: ' path'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' info'
                          Identifier: 'getCanonicalFileName'
                        Identifier: 'path'
                    ShorthandPropertyAssignment
                      Identifier: ' isRedirect'
                    ShorthandPropertyAssignment
                      Identifier: ' isInNodeModules'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            importedFileFromNodeModules'
                  EqualsToken
                  BinaryExpression
                    Identifier: ' importedFileFromNodeModules'
                    BarBarToken
                    Identifier: ' isInNodeModules'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' sortedPaths'
            ArrayType
              TypeReference
                Identifier: ' ModulePath'
            ArrayLiteralExpression
      ForStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' directory'
            PropertyAccessExpression
              Identifier: ' info'
              Identifier: 'canonicalSourceDirectory'
        BinaryExpression
          PropertyAccessExpression
            Identifier: '
        allFileNames'
            Identifier: 'size'
          ExclamationEqualsEqualsToken
          NumericLiteral
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' directoryStart'
                CallExpression
                  Identifier: ' ensureTrailingDirectorySeparator'
                  Identifier: 'directory'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' pathsInDirectory'
                UnionType
                  ArrayType
                    TypeReference
                      Identifier: ' ModulePath'
                  UndefinedKeyword
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        allFileNames'
                Identifier: 'forEach'
              ArrowFunction
                Parameter
                  ObjectBindingPattern
                    BindingElement
                      Identifier: ' path'
                    BindingElement
                      Identifier: ' isRedirect'
                    BindingElement
                      Identifier: ' isInNodeModules'
                Parameter
                  Identifier: ' fileName'
                EqualsGreaterThanToken
                Block
                  IfStatement
                    CallExpression
                      Identifier: 'startsWith'
                      Identifier: 'path'
                      Identifier: ' directoryStart'
                    Block
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            ParenthesizedExpression
                              BinaryExpression
                                Identifier: 'pathsInDirectory'
                                BarBarEqualsToken
                                ArrayLiteralExpression
                            Identifier: 'push'
                          ObjectLiteralExpression
                            PropertyAssignment
                              Identifier: ' path'
                              Identifier: ' fileName'
                            ShorthandPropertyAssignment
                              Identifier: ' isRedirect'
                            ShorthandPropertyAssignment
                              Identifier: ' isInNodeModules'
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                allFileNames'
                            Identifier: 'delete'
                          Identifier: 'fileName'
          IfStatement
            Identifier: 'pathsInDirectory'
            Block
              IfStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: 'pathsInDirectory'
                    Identifier: 'length'
                  GreaterThanToken
                  NumericLiteral
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                pathsInDirectory'
                        Identifier: 'sort'
                      Identifier: 'comparePathsByRedirectAndNumberOfDirectorySeparators'
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            sortedPaths'
                    Identifier: 'push'
                  SpreadElement
                    Identifier: 'pathsInDirectory'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' newDirectory'
                CallExpression
                  Identifier: ' getDirectoryPath'
                  Identifier: 'directory'
          IfStatement
            BinaryExpression
              Identifier: 'newDirectory'
              EqualsEqualsEqualsToken
              Identifier: ' directory'
            BreakStatement
          ExpressionStatement
            BinaryExpression
              Identifier: '
        directory'
              EqualsToken
              Identifier: ' newDirectory'
      IfStatement
        PropertyAccessExpression
          Identifier: 'allFileNames'
          Identifier: 'size'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' remainingPaths'
                CallExpression
                  Identifier: ' arrayFrom'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
            allFileNames'
                      Identifier: 'entries'
                  ArrowFunction
                    Parameter
                      ArrayBindingPattern
                        BindingElement
                          Identifier: 'fileName'
                        BindingElement
                          ObjectBindingPattern
                            BindingElement
                              Identifier: ' isRedirect'
                            BindingElement
                              Identifier: ' isInNodeModules'
                    TypeReference
                      Identifier: ' ModulePath'
                    EqualsGreaterThanToken
                    ParenthesizedExpression
                      ObjectLiteralExpression
                        PropertyAssignment
                          Identifier: ' path'
                          Identifier: ' fileName'
                        ShorthandPropertyAssignment
                          Identifier: ' isRedirect'
                        ShorthandPropertyAssignment
                          Identifier: ' isInNodeModules'
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'remainingPaths'
                Identifier: 'length'
              GreaterThanToken
              NumericLiteral
            ExpressionStatement
              CallExpression
                PropertyAccessExpression
                  Identifier: ' remainingPaths'
                  Identifier: 'sort'
                Identifier: 'comparePathsByRedirectAndNumberOfDirectorySeparators'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        sortedPaths'
                Identifier: 'push'
              SpreadElement
                Identifier: 'remainingPaths'
      ReturnStatement
        Identifier: ' sortedPaths'
  FunctionDeclaration
    Identifier: ' tryGetModuleNameFromAmbientModule'
    Parameter
      Identifier: 'moduleSymbol'
      TypeReference
        Identifier: ' Symbol'
    Parameter
      Identifier: ' checker'
      TypeReference
        Identifier: ' TypeChecker'
    UnionType
      StringKeyword
      UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' decl'
            AsExpression
              CallExpression
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: ' moduleSymbol'
                    Identifier: 'declarations'
                  QuestionDotToken
                  Identifier: 'find'
                ArrowFunction
                  Parameter
                    Identifier: '
        d'
                  EqualsGreaterThanToken
                  BinaryExpression
                    CallExpression
                      Identifier: ' isNonGlobalAmbientModule'
                      Identifier: 'd'
                    AmpersandAmpersandToken
                    ParenthesizedExpression
                      BinaryExpression
                        PrefixUnaryExpression
                          CallExpression
                            Identifier: 'isExternalModuleAugmentation'
                            Identifier: 'd'
                        BarBarToken
                        PrefixUnaryExpression
                          CallExpression
                            Identifier: 'isExternalModuleNameRelative'
                            CallExpression
                              Identifier: 'getTextOfIdentifierOrLiteral'
                              PropertyAccessExpression
                                Identifier: 'd'
                                Identifier: 'name'
              UnionType
                ParenthesizedType
                  IntersectionType
                    TypeReference
                      Identifier: 'ModuleDeclaration'
                    TypeLiteral
                      PropertySignature
                        Identifier: ' name'
                        TypeReference
                          Identifier: ' StringLiteral'
                UndefinedKeyword
      IfStatement
        Identifier: 'decl'
        Block
          ReturnStatement
            PropertyAccessExpression
              PropertyAccessExpression
                Identifier: ' decl'
                Identifier: 'name'
              Identifier: 'text'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' ambientModuleDeclareCandidates'
            CallExpression
              Identifier: ' mapDefined'
              PropertyAccessExpression
                Identifier: 'moduleSymbol'
                Identifier: 'declarations'
              ArrowFunction
                Parameter
                  Identifier: ' d'
                EqualsGreaterThanToken
                Block
                  IfStatement
                    PrefixUnaryExpression
                      CallExpression
                        Identifier: 'isModuleDeclaration'
                        Identifier: 'd'
                    ReturnStatement
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' topNamespace'
                        CallExpression
                          Identifier: ' getTopNamespace'
                          Identifier: 'd'
                  IfStatement
                    PrefixUnaryExpression
                      ParenthesizedExpression
                        BinaryExpression
                          BinaryExpression
                            BinaryExpression
                              PropertyAccessExpression
                                PropertyAccessExpression
                                  Identifier: 'topNamespace'
                                  QuestionDotToken
                                  Identifier: 'parent'
                                QuestionDotToken
                                Identifier: 'parent'
                              AmpersandAmpersandToken
                              CallExpression
                                Identifier: ' isModuleBlock'
                                PropertyAccessExpression
                                  Identifier: 'topNamespace'
                                  Identifier: 'parent'
                            AmpersandAmpersandToken
                            CallExpression
                              Identifier: ' isAmbientModule'
                              PropertyAccessExpression
                                PropertyAccessExpression
                                  Identifier: 'topNamespace'
                                  Identifier: 'parent'
                                Identifier: 'parent'
                          AmpersandAmpersandToken
                          CallExpression
                            Identifier: ' isSourceFile'
                            PropertyAccessExpression
                              PropertyAccessExpression
                                PropertyAccessExpression
                                  Identifier: 'topNamespace'
                                  Identifier: 'parent'
                                Identifier: 'parent'
                              Identifier: 'parent'
                    ReturnStatement
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' exportAssignment'
                        AsExpression
                          PropertyAccessExpression
                            ParenthesizedExpression
                              AsExpression
                                PropertyAccessExpression
                                  CallExpression
                                    PropertyAccessExpression
                                      PropertyAccessExpression
                                        PropertyAccessExpression
                                          PropertyAccessExpression
                                            PropertyAccessExpression
                                              Identifier: 'topNamespace'
                                              Identifier: 'parent'
                                            Identifier: 'parent'
                                          Identifier: 'symbol'
                                        Identifier: 'exports'
                                      QuestionDotToken
                                      Identifier: 'get'
                                    AsExpression
                                      StringLiteral
                                      TypeReference
                                        Identifier: ' __String'
                                  QuestionDotToken
                                  Identifier: 'valueDeclaration'
                                TypeReference
                                  Identifier: ' ExportAssignment'
                            QuestionDotToken
                            Identifier: 'expression'
                          UnionType
                            TypeReference
                              Identifier: ' PropertyAccessExpression'
                            TypeReference
                              Identifier: ' Identifier'
                  IfStatement
                    PrefixUnaryExpression
                      Identifier: 'exportAssignment'
                    ReturnStatement
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' exportSymbol'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' checker'
                            Identifier: 'getSymbolAtLocation'
                          Identifier: 'exportAssignment'
                  IfStatement
                    PrefixUnaryExpression
                      Identifier: 'exportSymbol'
                    ReturnStatement
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' originalExportSymbol'
                        ConditionalExpression
                          BinaryExpression
                            PropertyAccessExpression
                              Identifier: ' exportSymbol'
                              QuestionDotToken
                              Identifier: 'flags'
                            AmpersandToken
                            PropertyAccessExpression
                              Identifier: ' SymbolFlags'
                              Identifier: 'Alias'
                          QuestionToken
                          CallExpression
                            PropertyAccessExpression
                              Identifier: ' checker'
                              Identifier: 'getAliasedSymbol'
                            Identifier: 'exportSymbol'
                          ColonToken
                          Identifier: ' exportSymbol'
                  IfStatement
                    BinaryExpression
                      Identifier: 'originalExportSymbol'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' d'
                        Identifier: 'symbol'
                    ReturnStatement
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: ' topNamespace'
                          Identifier: 'parent'
                        Identifier: 'parent'
                  FunctionDeclaration
                    Identifier: ' getTopNamespace'
                    Parameter
                      Identifier: 'namespaceDeclaration'
                      TypeReference
                        Identifier: ' ModuleDeclaration'
                    Block
                      WhileStatement
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: 'namespaceDeclaration'
                            Identifier: 'flags'
                          AmpersandToken
                          PropertyAccessExpression
                            Identifier: ' NodeFlags'
                            Identifier: 'NestedNamespace'
                        Block
                          ExpressionStatement
                            BinaryExpression
                              Identifier: '
                namespaceDeclaration'
                              EqualsToken
                              AsExpression
                                PropertyAccessExpression
                                  Identifier: ' namespaceDeclaration'
                                  Identifier: 'parent'
                                TypeReference
                                  Identifier: ' ModuleDeclaration'
                      ReturnStatement
                        Identifier: ' namespaceDeclaration'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' ambientModuleDeclare'
            AsExpression
              ElementAccessExpression
                Identifier: ' ambientModuleDeclareCandidates'
                NumericLiteral
              UnionType
                ParenthesizedType
                  IntersectionType
                    TypeReference
                      Identifier: 'AmbientModuleDeclaration'
                    TypeLiteral
                      PropertySignature
                        Identifier: ' name'
                        TypeReference
                          Identifier: ' StringLiteral'
                UndefinedKeyword
      IfStatement
        Identifier: 'ambientModuleDeclare'
        Block
          ReturnStatement
            PropertyAccessExpression
              PropertyAccessExpression
                Identifier: ' ambientModuleDeclare'
                Identifier: 'name'
              Identifier: 'text'
  FunctionDeclaration
    Identifier: ' tryGetModuleNameFromPaths'
    Parameter
      Identifier: 'relativeToBaseUrl'
      StringKeyword
    Parameter
      Identifier: ' paths'
      TypeReference
        Identifier: ' MapLike'
        TypeOperator
          ArrayType
            StringKeyword
    Parameter
      Identifier: ' allowedEndings'
      ArrayType
        TypeReference
          Identifier: ' ModuleSpecifierEnding'
    Parameter
      Identifier: ' host'
      TypeReference
        Identifier: ' ModuleSpecifierResolutionHost'
    Parameter
      Identifier: ' compilerOptions'
      TypeReference
        Identifier: ' CompilerOptions'
    UnionType
      StringKeyword
      UndefinedKeyword
    Block
      ForInStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' key'
        Identifier: ' paths'
        Block
          ForOfStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' patternText'
            ElementAccessExpression
              Identifier: ' paths'
              Identifier: 'key'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' pattern'
                    CallExpression
                      Identifier: ' normalizePath'
                      Identifier: 'patternText'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' indexOfStar'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' pattern'
                        Identifier: 'indexOf'
                      StringLiteral
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' candidates'
                    ArrayType
                      TypeLiteral
                        PropertySignature
                          Identifier: ' ending'
                          UnionType
                            TypeReference
                              Identifier: ' ModuleSpecifierEnding'
                            UndefinedKeyword
                        PropertySignature
                          Identifier: ' value'
                          StringKeyword
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' allowedEndings'
                        Identifier: 'map'
                      ArrowFunction
                        Parameter
                          Identifier: 'ending'
                        EqualsGreaterThanToken
                        ParenthesizedExpression
                          ObjectLiteralExpression
                            ShorthandPropertyAssignment
                              Identifier: '
                ending'
                            PropertyAssignment
                              Identifier: '
                value'
                              CallExpression
                                Identifier: ' processEnding'
                                Identifier: 'relativeToBaseUrl'
                                ArrayLiteralExpression
                                  Identifier: 'ending'
                                Identifier: ' compilerOptions'
              IfStatement
                CallExpression
                  Identifier: 'tryGetExtensionFromPath'
                  Identifier: 'pattern'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                candidates'
                        Identifier: 'push'
                      ObjectLiteralExpression
                        PropertyAssignment
                          Identifier: ' ending'
                          Identifier: ' undefined'
                        PropertyAssignment
                          Identifier: ' value'
                          Identifier: ' relativeToBaseUrl'
              IfStatement
                BinaryExpression
                  Identifier: 'indexOfStar'
                  ExclamationEqualsEqualsToken
                  PrefixUnaryExpression
                    NumericLiteral
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' prefix'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' pattern'
                            Identifier: 'substring'
                          NumericLiteral
                          Identifier: ' indexOfStar'
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' suffix'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' pattern'
                            Identifier: 'substring'
                          BinaryExpression
                            Identifier: 'indexOfStar'
                            PlusToken
                            NumericLiteral
                  ForOfStatement
                    VariableDeclarationList
                      VariableDeclaration
                        ObjectBindingPattern
                          BindingElement
                            Identifier: ' ending'
                          BindingElement
                            Identifier: ' value'
                    Identifier: ' candidates'
                    Block
                      IfStatement
                        BinaryExpression
                          BinaryExpression
                            BinaryExpression
                              BinaryExpression
                                PropertyAccessExpression
                                  Identifier: '
                        value'
                                  Identifier: 'length'
                                GreaterThanEqualsToken
                                BinaryExpression
                                  PropertyAccessExpression
                                    Identifier: ' prefix'
                                    Identifier: 'length'
                                  PlusToken
                                  PropertyAccessExpression
                                    Identifier: ' suffix'
                                    Identifier: 'length'
                              AmpersandAmpersandToken
                              CallExpression
                                Identifier: '
                        startsWith'
                                Identifier: 'value'
                                Identifier: ' prefix'
                            AmpersandAmpersandToken
                            CallExpression
                              Identifier: '
                        endsWith'
                              Identifier: 'value'
                              Identifier: ' suffix'
                          AmpersandAmpersandToken
                          CallExpression
                            Identifier: '
                        validateEnding'
                            ObjectLiteralExpression
                              ShorthandPropertyAssignment
                                Identifier: ' ending'
                              ShorthandPropertyAssignment
                                Identifier: ' value'
                        Block
                          VariableStatement
                            VariableDeclarationList
                              VariableDeclaration
                                Identifier: ' matchedStar'
                                CallExpression
                                  PropertyAccessExpression
                                    Identifier: ' value'
                                    Identifier: 'substring'
                                  PropertyAccessExpression
                                    Identifier: 'prefix'
                                    Identifier: 'length'
                                  BinaryExpression
                                    PropertyAccessExpression
                                      Identifier: ' value'
                                      Identifier: 'length'
                                    MinusToken
                                    PropertyAccessExpression
                                      Identifier: ' suffix'
                                      Identifier: 'length'
                          IfStatement
                            PrefixUnaryExpression
                              CallExpression
                                Identifier: 'pathIsRelative'
                                Identifier: 'matchedStar'
                            Block
                              ReturnStatement
                                CallExpression
                                  Identifier: ' replaceFirstStar'
                                  Identifier: 'key'
                                  Identifier: ' matchedStar'
                IfStatement
                  BinaryExpression
                    CallExpression
                      Identifier: '
                some'
                      Identifier: 'candidates'
                      ArrowFunction
                        Parameter
                          Identifier: ' c'
                        EqualsGreaterThanToken
                        BinaryExpression
                          BinaryExpression
                            PropertyAccessExpression
                              Identifier: ' c'
                              Identifier: 'ending'
                            ExclamationEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' ModuleSpecifierEnding'
                              Identifier: 'Minimal'
                          AmpersandAmpersandToken
                          BinaryExpression
                            Identifier: ' pattern'
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' c'
                              Identifier: 'value'
                    BarBarToken
                    CallExpression
                      Identifier: '
                some'
                      Identifier: 'candidates'
                      ArrowFunction
                        Parameter
                          Identifier: ' c'
                        EqualsGreaterThanToken
                        BinaryExpression
                          BinaryExpression
                            BinaryExpression
                              PropertyAccessExpression
                                Identifier: ' c'
                                Identifier: 'ending'
                              EqualsEqualsEqualsToken
                              PropertyAccessExpression
                                Identifier: ' ModuleSpecifierEnding'
                                Identifier: 'Minimal'
                            AmpersandAmpersandToken
                            BinaryExpression
                              Identifier: ' pattern'
                              EqualsEqualsEqualsToken
                              PropertyAccessExpression
                                Identifier: ' c'
                                Identifier: 'value'
                          AmpersandAmpersandToken
                          CallExpression
                            Identifier: ' validateEnding'
                            Identifier: 'c'
                  Block
                    ReturnStatement
                      Identifier: ' key'
      FunctionDeclaration
        Identifier: ' validateEnding'
        Parameter
          ObjectBindingPattern
            BindingElement
              Identifier: ' ending'
            BindingElement
              Identifier: ' value'
          TypeLiteral
            PropertySignature
              Identifier: ' ending'
              UnionType
                TypeReference
                  Identifier: ' ModuleSpecifierEnding'
                UndefinedKeyword
            PropertySignature
              Identifier: ' value'
              StringKeyword
        Block
          ReturnStatement
            BinaryExpression
              BinaryExpression
                Identifier: ' ending'
                ExclamationEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' ModuleSpecifierEnding'
                  Identifier: 'Minimal'
              BarBarToken
              BinaryExpression
                Identifier: ' value'
                EqualsEqualsEqualsToken
                CallExpression
                  Identifier: ' processEnding'
                  Identifier: 'relativeToBaseUrl'
                  ArrayLiteralExpression
                    Identifier: 'ending'
                  Identifier: ' compilerOptions'
                  Identifier: ' host'
  EnumDeclaration
    ConstKeyword
    Identifier: ' MatchingMode'
    EnumMember
      Identifier: '
    Exact'
    EnumMember
      Identifier: '
    Directory'
    EnumMember
      Identifier: '
    Pattern'
  FunctionDeclaration
    Identifier: ' tryGetModuleNameFromExportsOrImports'
    Parameter
      Identifier: '
    options'
      TypeReference
        Identifier: ' CompilerOptions'
    Parameter
      Identifier: '
    host'
      TypeReference
        Identifier: ' ModuleSpecifierResolutionHost'
    Parameter
      Identifier: '
    targetFilePath'
      StringKeyword
    Parameter
      Identifier: '
    packageDirectory'
      StringKeyword
    Parameter
      Identifier: '
    packageName'
      StringKeyword
    Parameter
      Identifier: '
    exports'
      UnknownKeyword
    Parameter
      Identifier: '
    conditions'
      ArrayType
        StringKeyword
    Parameter
      Identifier: '
    mode'
      TypeReference
        Identifier: ' MatchingMode'
    Parameter
      Identifier: '
    isImports'
      BooleanKeyword
    Parameter
      Identifier: '
    preferTsExtension'
      BooleanKeyword
    UnionType
      TypeLiteral
        PropertySignature
          Identifier: ' moduleFileToTry'
          StringKeyword
      UndefinedKeyword
    Block
      IfStatement
        BinaryExpression
          TypeOfExpression
            Identifier: ' exports'
          EqualsEqualsEqualsToken
          StringLiteral
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' ignoreCase'
                PrefixUnaryExpression
                  CallExpression
                    Identifier: 'hostUsesCaseSensitiveFileNames'
                    Identifier: 'host'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' getCommonSourceDirectory'
                ArrowFunction
                  EqualsGreaterThanToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' host'
                      Identifier: 'getCommonSourceDirectory'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' outputFile'
                BinaryExpression
                  Identifier: ' isImports'
                  AmpersandAmpersandToken
                  CallExpression
                    Identifier: ' getOutputJSFileNameWorker'
                    Identifier: 'targetFilePath'
                    Identifier: ' options'
                    Identifier: ' ignoreCase'
                    Identifier: ' getCommonSourceDirectory'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' declarationFile'
                BinaryExpression
                  Identifier: ' isImports'
                  AmpersandAmpersandToken
                  CallExpression
                    Identifier: ' getOutputDeclarationFileNameWorker'
                    Identifier: 'targetFilePath'
                    Identifier: ' options'
                    Identifier: ' ignoreCase'
                    Identifier: ' getCommonSourceDirectory'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' pathOrPattern'
                CallExpression
                  Identifier: ' getNormalizedAbsolutePath'
                  CallExpression
                    Identifier: 'combinePaths'
                    Identifier: 'packageDirectory'
                    Identifier: ' exports'
                  Identifier: ' /*currentDirectory*/ undefined'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' extensionSwappedTarget'
                ConditionalExpression
                  CallExpression
                    Identifier: ' hasTSFileExtension'
                    Identifier: 'targetFilePath'
                  QuestionToken
                  BinaryExpression
                    CallExpression
                      Identifier: ' removeFileExtension'
                      Identifier: 'targetFilePath'
                    PlusToken
                    CallExpression
                      Identifier: ' tryGetJSExtensionForFile'
                      Identifier: 'targetFilePath'
                      Identifier: ' options'
                  ColonToken
                  Identifier: ' undefined'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' canTryTsExtension'
                BinaryExpression
                  Identifier: ' preferTsExtension'
                  AmpersandAmpersandToken
                  CallExpression
                    Identifier: ' hasImplementationTSFileExtension'
                    Identifier: 'targetFilePath'
          SwitchStatement
            Identifier: 'mode'
            CaseBlock
              CaseClause
                PropertyAccessExpression
                  Identifier: ' MatchingMode'
                  Identifier: 'Exact'
                IfStatement
                  BinaryExpression
                    BinaryExpression
                      BinaryExpression
                        BinaryExpression
                          Identifier: '
                    extensionSwappedTarget'
                          AmpersandAmpersandToken
                          BinaryExpression
                            CallExpression
                              Identifier: ' comparePaths'
                              Identifier: 'extensionSwappedTarget'
                              Identifier: ' pathOrPattern'
                              Identifier: ' ignoreCase'
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' Comparison'
                              Identifier: 'EqualTo'
                        BarBarToken
                        BinaryExpression
                          CallExpression
                            Identifier: '
                    comparePaths'
                            Identifier: 'targetFilePath'
                            Identifier: ' pathOrPattern'
                            Identifier: ' ignoreCase'
                          EqualsEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' Comparison'
                            Identifier: 'EqualTo'
                      BarBarToken
                      BinaryExpression
                        Identifier: '
                    outputFile'
                        AmpersandAmpersandToken
                        BinaryExpression
                          CallExpression
                            Identifier: ' comparePaths'
                            Identifier: 'outputFile'
                            Identifier: ' pathOrPattern'
                            Identifier: ' ignoreCase'
                          EqualsEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' Comparison'
                            Identifier: 'EqualTo'
                    BarBarToken
                    BinaryExpression
                      Identifier: '
                    declarationFile'
                      AmpersandAmpersandToken
                      BinaryExpression
                        CallExpression
                          Identifier: ' comparePaths'
                          Identifier: 'declarationFile'
                          Identifier: ' pathOrPattern'
                          Identifier: ' ignoreCase'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' Comparison'
                          Identifier: 'EqualTo'
                  Block
                    ReturnStatement
                      ObjectLiteralExpression
                        PropertyAssignment
                          Identifier: ' moduleFileToTry'
                          Identifier: ' packageName'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' MatchingMode'
                  Identifier: 'Directory'
                IfStatement
                  BinaryExpression
                    Identifier: 'canTryTsExtension'
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: ' containsPath'
                      Identifier: 'targetFilePath'
                      Identifier: ' pathOrPattern'
                      Identifier: ' ignoreCase'
                  Block
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' fragment'
                          CallExpression
                            Identifier: ' getRelativePathFromDirectory'
                            Identifier: 'pathOrPattern'
                            Identifier: ' targetFilePath'
                            FalseKeyword
                    ReturnStatement
                      ObjectLiteralExpression
                        PropertyAssignment
                          Identifier: ' moduleFileToTry'
                          CallExpression
                            Identifier: ' getNormalizedAbsolutePath'
                            CallExpression
                              Identifier: 'combinePaths'
                              CallExpression
                                Identifier: 'combinePaths'
                                Identifier: 'packageName'
                                Identifier: ' exports'
                              Identifier: ' fragment'
                            Identifier: ' /*currentDirectory*/ undefined'
                IfStatement
                  BinaryExpression
                    Identifier: 'extensionSwappedTarget'
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: ' containsPath'
                      Identifier: 'pathOrPattern'
                      Identifier: ' extensionSwappedTarget'
                      Identifier: ' ignoreCase'
                  Block
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' fragment'
                          CallExpression
                            Identifier: ' getRelativePathFromDirectory'
                            Identifier: 'pathOrPattern'
                            Identifier: ' extensionSwappedTarget'
                            FalseKeyword
                    ReturnStatement
                      ObjectLiteralExpression
                        PropertyAssignment
                          Identifier: ' moduleFileToTry'
                          CallExpression
                            Identifier: ' getNormalizedAbsolutePath'
                            CallExpression
                              Identifier: 'combinePaths'
                              CallExpression
                                Identifier: 'combinePaths'
                                Identifier: 'packageName'
                                Identifier: ' exports'
                              Identifier: ' fragment'
                            Identifier: ' /*currentDirectory*/ undefined'
                IfStatement
                  BinaryExpression
                    PrefixUnaryExpression
                      Identifier: 'canTryTsExtension'
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: ' containsPath'
                      Identifier: 'pathOrPattern'
                      Identifier: ' targetFilePath'
                      Identifier: ' ignoreCase'
                  Block
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' fragment'
                          CallExpression
                            Identifier: ' getRelativePathFromDirectory'
                            Identifier: 'pathOrPattern'
                            Identifier: ' targetFilePath'
                            FalseKeyword
                    ReturnStatement
                      ObjectLiteralExpression
                        PropertyAssignment
                          Identifier: ' moduleFileToTry'
                          CallExpression
                            Identifier: ' getNormalizedAbsolutePath'
                            CallExpression
                              Identifier: 'combinePaths'
                              CallExpression
                                Identifier: 'combinePaths'
                                Identifier: 'packageName'
                                Identifier: ' exports'
                              Identifier: ' fragment'
                            Identifier: ' /*currentDirectory*/ undefined'
                IfStatement
                  BinaryExpression
                    Identifier: 'outputFile'
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: ' containsPath'
                      Identifier: 'pathOrPattern'
                      Identifier: ' outputFile'
                      Identifier: ' ignoreCase'
                  Block
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' fragment'
                          CallExpression
                            Identifier: ' getRelativePathFromDirectory'
                            Identifier: 'pathOrPattern'
                            Identifier: ' outputFile'
                            FalseKeyword
                    ReturnStatement
                      ObjectLiteralExpression
                        PropertyAssignment
                          Identifier: ' moduleFileToTry'
                          CallExpression
                            Identifier: ' combinePaths'
                            Identifier: 'packageName'
                            Identifier: ' fragment'
                IfStatement
                  BinaryExpression
                    Identifier: 'declarationFile'
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: ' containsPath'
                      Identifier: 'pathOrPattern'
                      Identifier: ' declarationFile'
                      Identifier: ' ignoreCase'
                  Block
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' fragment'
                          CallExpression
                            Identifier: ' changeFullExtension'
                            CallExpression
                              Identifier: 'getRelativePathFromDirectory'
                              Identifier: 'pathOrPattern'
                              Identifier: ' declarationFile'
                              FalseKeyword
                            CallExpression
                              Identifier: ' getJSExtensionForFile'
                              Identifier: 'declarationFile'
                              Identifier: ' options'
                    ReturnStatement
                      ObjectLiteralExpression
                        PropertyAssignment
                          Identifier: ' moduleFileToTry'
                          CallExpression
                            Identifier: ' combinePaths'
                            Identifier: 'packageName'
                            Identifier: ' fragment'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' MatchingMode'
                  Identifier: 'Pattern'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' starPos'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' pathOrPattern'
                          Identifier: 'indexOf'
                        StringLiteral
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' leadingSlice'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' pathOrPattern'
                          Identifier: 'slice'
                        NumericLiteral
                        Identifier: ' starPos'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' trailingSlice'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' pathOrPattern'
                          Identifier: 'slice'
                        BinaryExpression
                          Identifier: 'starPos'
                          PlusToken
                          NumericLiteral
                IfStatement
                  BinaryExpression
                    BinaryExpression
                      Identifier: 'canTryTsExtension'
                      AmpersandAmpersandToken
                      CallExpression
                        Identifier: ' startsWith'
                        Identifier: 'targetFilePath'
                        Identifier: ' leadingSlice'
                        Identifier: ' ignoreCase'
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: ' endsWith'
                      Identifier: 'targetFilePath'
                      Identifier: ' trailingSlice'
                      Identifier: ' ignoreCase'
                  Block
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' starReplacement'
                          CallExpression
                            PropertyAccessExpression
                              Identifier: ' targetFilePath'
                              Identifier: 'slice'
                            PropertyAccessExpression
                              Identifier: 'leadingSlice'
                              Identifier: 'length'
                            BinaryExpression
                              PropertyAccessExpression
                                Identifier: ' targetFilePath'
                                Identifier: 'length'
                              MinusToken
                              PropertyAccessExpression
                                Identifier: ' trailingSlice'
                                Identifier: 'length'
                    ReturnStatement
                      ObjectLiteralExpression
                        PropertyAssignment
                          Identifier: ' moduleFileToTry'
                          CallExpression
                            Identifier: ' replaceFirstStar'
                            Identifier: 'packageName'
                            Identifier: ' starReplacement'
                IfStatement
                  BinaryExpression
                    BinaryExpression
                      Identifier: 'extensionSwappedTarget'
                      AmpersandAmpersandToken
                      CallExpression
                        Identifier: ' startsWith'
                        Identifier: 'extensionSwappedTarget'
                        Identifier: ' leadingSlice'
                        Identifier: ' ignoreCase'
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: ' endsWith'
                      Identifier: 'extensionSwappedTarget'
                      Identifier: ' trailingSlice'
                      Identifier: ' ignoreCase'
                  Block
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' starReplacement'
                          CallExpression
                            PropertyAccessExpression
                              Identifier: ' extensionSwappedTarget'
                              Identifier: 'slice'
                            PropertyAccessExpression
                              Identifier: 'leadingSlice'
                              Identifier: 'length'
                            BinaryExpression
                              PropertyAccessExpression
                                Identifier: ' extensionSwappedTarget'
                                Identifier: 'length'
                              MinusToken
                              PropertyAccessExpression
                                Identifier: ' trailingSlice'
                                Identifier: 'length'
                    ReturnStatement
                      ObjectLiteralExpression
                        PropertyAssignment
                          Identifier: ' moduleFileToTry'
                          CallExpression
                            Identifier: ' replaceFirstStar'
                            Identifier: 'packageName'
                            Identifier: ' starReplacement'
                IfStatement
                  BinaryExpression
                    BinaryExpression
                      PrefixUnaryExpression
                        Identifier: 'canTryTsExtension'
                      AmpersandAmpersandToken
                      CallExpression
                        Identifier: ' startsWith'
                        Identifier: 'targetFilePath'
                        Identifier: ' leadingSlice'
                        Identifier: ' ignoreCase'
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: ' endsWith'
                      Identifier: 'targetFilePath'
                      Identifier: ' trailingSlice'
                      Identifier: ' ignoreCase'
                  Block
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' starReplacement'
                          CallExpression
                            PropertyAccessExpression
                              Identifier: ' targetFilePath'
                              Identifier: 'slice'
                            PropertyAccessExpression
                              Identifier: 'leadingSlice'
                              Identifier: 'length'
                            BinaryExpression
                              PropertyAccessExpression
                                Identifier: ' targetFilePath'
                                Identifier: 'length'
                              MinusToken
                              PropertyAccessExpression
                                Identifier: ' trailingSlice'
                                Identifier: 'length'
                    ReturnStatement
                      ObjectLiteralExpression
                        PropertyAssignment
                          Identifier: ' moduleFileToTry'
                          CallExpression
                            Identifier: ' replaceFirstStar'
                            Identifier: 'packageName'
                            Identifier: ' starReplacement'
                IfStatement
                  BinaryExpression
                    BinaryExpression
                      Identifier: 'outputFile'
                      AmpersandAmpersandToken
                      CallExpression
                        Identifier: ' startsWith'
                        Identifier: 'outputFile'
                        Identifier: ' leadingSlice'
                        Identifier: ' ignoreCase'
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: ' endsWith'
                      Identifier: 'outputFile'
                      Identifier: ' trailingSlice'
                      Identifier: ' ignoreCase'
                  Block
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' starReplacement'
                          CallExpression
                            PropertyAccessExpression
                              Identifier: ' outputFile'
                              Identifier: 'slice'
                            PropertyAccessExpression
                              Identifier: 'leadingSlice'
                              Identifier: 'length'
                            BinaryExpression
                              PropertyAccessExpression
                                Identifier: ' outputFile'
                                Identifier: 'length'
                              MinusToken
                              PropertyAccessExpression
                                Identifier: ' trailingSlice'
                                Identifier: 'length'
                    ReturnStatement
                      ObjectLiteralExpression
                        PropertyAssignment
                          Identifier: ' moduleFileToTry'
                          CallExpression
                            Identifier: ' replaceFirstStar'
                            Identifier: 'packageName'
                            Identifier: ' starReplacement'
                IfStatement
                  BinaryExpression
                    BinaryExpression
                      Identifier: 'declarationFile'
                      AmpersandAmpersandToken
                      CallExpression
                        Identifier: ' startsWith'
                        Identifier: 'declarationFile'
                        Identifier: ' leadingSlice'
                        Identifier: ' ignoreCase'
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: ' endsWith'
                      Identifier: 'declarationFile'
                      Identifier: ' trailingSlice'
                      Identifier: ' ignoreCase'
                  Block
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' starReplacement'
                          CallExpression
                            PropertyAccessExpression
                              Identifier: ' declarationFile'
                              Identifier: 'slice'
                            PropertyAccessExpression
                              Identifier: 'leadingSlice'
                              Identifier: 'length'
                            BinaryExpression
                              PropertyAccessExpression
                                Identifier: ' declarationFile'
                                Identifier: 'length'
                              MinusToken
                              PropertyAccessExpression
                                Identifier: ' trailingSlice'
                                Identifier: 'length'
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' substituted'
                          CallExpression
                            Identifier: ' replaceFirstStar'
                            Identifier: 'packageName'
                            Identifier: ' starReplacement'
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' jsExtension'
                          CallExpression
                            Identifier: ' tryGetJSExtensionForFile'
                            Identifier: 'declarationFile'
                            Identifier: ' options'
                    ReturnStatement
                      ConditionalExpression
                        Identifier: ' jsExtension'
                        QuestionToken
                        ObjectLiteralExpression
                          PropertyAssignment
                            Identifier: ' moduleFileToTry'
                            CallExpression
                              Identifier: ' changeFullExtension'
                              Identifier: 'substituted'
                              Identifier: ' jsExtension'
                        ColonToken
                        Identifier: ' undefined'
                BreakStatement
        IfStatement
          CallExpression
            PropertyAccessExpression
              Identifier: 'Array'
              Identifier: 'isArray'
            Identifier: 'exports'
          Block
            ReturnStatement
              CallExpression
                Identifier: ' forEach'
                Identifier: 'exports'
                ArrowFunction
                  Parameter
                    Identifier: ' e'
                  EqualsGreaterThanToken
                  CallExpression
                    Identifier: ' tryGetModuleNameFromExportsOrImports'
                    Identifier: 'options'
                    Identifier: ' host'
                    Identifier: ' targetFilePath'
                    Identifier: ' packageDirectory'
                    Identifier: ' packageName'
                    Identifier: ' e'
                    Identifier: ' conditions'
                    Identifier: ' mode'
                    Identifier: ' isImports'
                    Identifier: ' preferTsExtension'
          IfStatement
            BinaryExpression
              BinaryExpression
                TypeOfExpression
                  Identifier: ' exports'
                EqualsEqualsEqualsToken
                StringLiteral
              AmpersandAmpersandToken
              BinaryExpression
                Identifier: ' exports'
                ExclamationEqualsEqualsToken
                NullKeyword
            Block
              ForOfStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' key'
                CallExpression
                  Identifier: ' getOwnKeys'
                  AsExpression
                    Identifier: 'exports'
                    TypeReference
                      Identifier: ' MapLike'
                      UnknownKeyword
                Block
                  IfStatement
                    BinaryExpression
                      BinaryExpression
                        BinaryExpression
                          Identifier: 'key'
                          EqualsEqualsEqualsToken
                          StringLiteral
                        BarBarToken
                        BinaryExpression
                          CallExpression
                            PropertyAccessExpression
                              Identifier: ' conditions'
                              Identifier: 'indexOf'
                            Identifier: 'key'
                          GreaterThanEqualsToken
                          NumericLiteral
                      BarBarToken
                      CallExpression
                        Identifier: ' isApplicableVersionedTypesKey'
                        Identifier: 'conditions'
                        Identifier: ' key'
                    Block
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' subTarget'
                            ElementAccessExpression
                              ParenthesizedExpression
                                AsExpression
                                  Identifier: 'exports'
                                  TypeReference
                                    Identifier: ' MapLike'
                                    UnknownKeyword
                              Identifier: 'key'
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' result'
                            CallExpression
                              Identifier: ' tryGetModuleNameFromExportsOrImports'
                              Identifier: 'options'
                              Identifier: ' host'
                              Identifier: ' targetFilePath'
                              Identifier: ' packageDirectory'
                              Identifier: ' packageName'
                              Identifier: ' subTarget'
                              Identifier: ' conditions'
                              Identifier: ' mode'
                              Identifier: ' isImports'
                              Identifier: ' preferTsExtension'
                      IfStatement
                        Identifier: 'result'
                        Block
                          ReturnStatement
                            Identifier: ' result'
      ReturnStatement
        Identifier: ' undefined'
  FunctionDeclaration
    Identifier: ' tryGetModuleNameFromExports'
    Parameter
      Identifier: 'options'
      TypeReference
        Identifier: ' CompilerOptions'
    Parameter
      Identifier: ' host'
      TypeReference
        Identifier: ' ModuleSpecifierResolutionHost'
    Parameter
      Identifier: ' targetFilePath'
      StringKeyword
    Parameter
      Identifier: ' packageDirectory'
      StringKeyword
    Parameter
      Identifier: ' packageName'
      StringKeyword
    Parameter
      Identifier: ' exports'
      UnknownKeyword
    Parameter
      Identifier: ' conditions'
      ArrayType
        StringKeyword
    UnionType
      TypeLiteral
        PropertySignature
          Identifier: ' moduleFileToTry'
          StringKeyword
      UndefinedKeyword
    Block
      IfStatement
        BinaryExpression
          BinaryExpression
            BinaryExpression
              BinaryExpression
                TypeOfExpression
                  Identifier: ' exports'
                EqualsEqualsEqualsToken
                StringLiteral
              AmpersandAmpersandToken
              BinaryExpression
                Identifier: ' exports'
                ExclamationEqualsEqualsToken
                NullKeyword
            AmpersandAmpersandToken
            PrefixUnaryExpression
              CallExpression
                PropertyAccessExpression
                  Identifier: 'Array'
                  Identifier: 'isArray'
                Identifier: 'exports'
          AmpersandAmpersandToken
          CallExpression
            Identifier: ' allKeysStartWithDot'
            AsExpression
              Identifier: 'exports'
              TypeReference
                Identifier: ' MapLike'
                UnknownKeyword
        Block
          ReturnStatement
            CallExpression
              Identifier: ' forEach'
              CallExpression
                Identifier: 'getOwnKeys'
                AsExpression
                  Identifier: 'exports'
                  TypeReference
                    Identifier: ' MapLike'
                    UnknownKeyword
              ArrowFunction
                Parameter
                  Identifier: ' k'
                EqualsGreaterThanToken
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' subPackageName'
                        CallExpression
                          Identifier: ' getNormalizedAbsolutePath'
                          CallExpression
                            Identifier: 'combinePaths'
                            Identifier: 'packageName'
                            Identifier: ' k'
                          Identifier: ' /*currentDirectory*/ undefined'
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' mode'
                        ConditionalExpression
                          CallExpression
                            Identifier: ' endsWith'
                            Identifier: 'k'
                            StringLiteral
                          QuestionToken
                          PropertyAccessExpression
                            Identifier: ' MatchingMode'
                            Identifier: 'Directory'
                          ColonToken
                          ConditionalExpression
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' k'
                                Identifier: 'includes'
                              StringLiteral
                            QuestionToken
                            PropertyAccessExpression
                              Identifier: ' MatchingMode'
                              Identifier: 'Pattern'
                            ColonToken
                            PropertyAccessExpression
                              Identifier: ' MatchingMode'
                              Identifier: 'Exact'
                  ReturnStatement
                    CallExpression
                      Identifier: ' tryGetModuleNameFromExportsOrImports'
                      Identifier: 'options'
                      Identifier: ' host'
                      Identifier: ' targetFilePath'
                      Identifier: ' packageDirectory'
                      Identifier: ' subPackageName'
                      ElementAccessExpression
                        ParenthesizedExpression
                          AsExpression
                            Identifier: 'exports'
                            TypeReference
                              Identifier: ' MapLike'
                              UnknownKeyword
                        Identifier: 'k'
                      Identifier: ' conditions'
                      Identifier: ' mode'
                      FalseKeyword
                      FalseKeyword
      ReturnStatement
        CallExpression
          Identifier: ' tryGetModuleNameFromExportsOrImports'
          Identifier: 'options'
          Identifier: ' host'
          Identifier: ' targetFilePath'
          Identifier: ' packageDirectory'
          Identifier: ' packageName'
          Identifier: ' exports'
          Identifier: ' conditions'
          PropertyAccessExpression
            Identifier: ' MatchingMode'
            Identifier: 'Exact'
          FalseKeyword
          FalseKeyword
  FunctionDeclaration
    Identifier: ' tryGetModuleNameFromPackageJsonImports'
    Parameter
      Identifier: 'moduleFileName'
      StringKeyword
    Parameter
      Identifier: ' sourceDirectory'
      StringKeyword
    Parameter
      Identifier: ' options'
      TypeReference
        Identifier: ' CompilerOptions'
    Parameter
      Identifier: ' host'
      TypeReference
        Identifier: ' ModuleSpecifierResolutionHost'
    Parameter
      Identifier: ' importMode'
      TypeReference
        Identifier: ' ResolutionMode'
    Parameter
      Identifier: ' preferTsExtension'
      BooleanKeyword
    Block
      IfStatement
        BinaryExpression
          PrefixUnaryExpression
            PropertyAccessExpression
              Identifier: 'host'
              Identifier: 'readFile'
          BarBarToken
          PrefixUnaryExpression
            CallExpression
              Identifier: 'getResolvePackageJsonImports'
              Identifier: 'options'
        Block
          ReturnStatement
            Identifier: ' undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' ancestorDirectoryWithPackageJson'
            CallExpression
              Identifier: ' getNearestAncestorDirectoryWithPackageJson'
              Identifier: 'host'
              Identifier: ' sourceDirectory'
      IfStatement
        PrefixUnaryExpression
          Identifier: 'ancestorDirectoryWithPackageJson'
        Block
          ReturnStatement
            Identifier: ' undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' packageJsonPath'
            CallExpression
              Identifier: ' combinePaths'
              Identifier: 'ancestorDirectoryWithPackageJson'
              StringLiteral
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' cachedPackageJson'
            CallExpression
              PropertyAccessExpression
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' host'
                    Identifier: 'getPackageJsonInfoCache'
                  QuestionDotToken
                QuestionDotToken
                Identifier: 'getPackageJsonInfo'
              Identifier: 'packageJsonPath'
      IfStatement
        BinaryExpression
          CallExpression
            Identifier: 'isMissingPackageJsonInfo'
            Identifier: 'cachedPackageJson'
          BarBarToken
          PrefixUnaryExpression
            CallExpression
              PropertyAccessExpression
                Identifier: 'host'
                Identifier: 'fileExists'
              Identifier: 'packageJsonPath'
        Block
          ReturnStatement
            Identifier: ' undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' packageJsonContent'
            BinaryExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: ' cachedPackageJson'
                  QuestionDotToken
                  Identifier: 'contents'
                Identifier: 'packageJsonContent'
              BarBarToken
              CallExpression
                Identifier: ' tryParseJson'
                NonNullExpression
                  CallExpression
                    PropertyAccessExpression
                      Identifier: 'host'
                      Identifier: 'readFile'
                    Identifier: 'packageJsonPath'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' imports'
            PropertyAccessExpression
              Identifier: ' packageJsonContent'
              QuestionDotToken
              Identifier: 'imports'
      IfStatement
        PrefixUnaryExpression
          Identifier: 'imports'
        Block
          ReturnStatement
            Identifier: ' undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' conditions'
            CallExpression
              Identifier: ' getConditions'
              Identifier: 'options'
              Identifier: ' importMode'
      ReturnStatement
        PropertyAccessExpression
          CallExpression
            Identifier: ' forEach'
            CallExpression
              Identifier: 'getOwnKeys'
              AsExpression
                Identifier: 'imports'
                TypeReference
                  Identifier: ' MapLike'
                  UnknownKeyword
            ArrowFunction
              Parameter
                Identifier: ' k'
              EqualsGreaterThanToken
              Block
                IfStatement
                  BinaryExpression
                    BinaryExpression
                      PrefixUnaryExpression
                        CallExpression
                          Identifier: 'startsWith'
                          Identifier: 'k'
                          StringLiteral
                      BarBarToken
                      BinaryExpression
                        Identifier: ' k'
                        EqualsEqualsEqualsToken
                        StringLiteral
                    BarBarToken
                    CallExpression
                      Identifier: ' startsWith'
                      Identifier: 'k'
                      StringLiteral
                  ReturnStatement
                    Identifier: ' undefined'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' mode'
                      ConditionalExpression
                        CallExpression
                          Identifier: ' endsWith'
                          Identifier: 'k'
                          StringLiteral
                        QuestionToken
                        PropertyAccessExpression
                          Identifier: ' MatchingMode'
                          Identifier: 'Directory'
                        ColonToken
                        ConditionalExpression
                          CallExpression
                            PropertyAccessExpression
                              Identifier: ' k'
                              Identifier: 'includes'
                            StringLiteral
                          QuestionToken
                          PropertyAccessExpression
                            Identifier: ' MatchingMode'
                            Identifier: 'Pattern'
                          ColonToken
                          PropertyAccessExpression
                            Identifier: ' MatchingMode'
                            Identifier: 'Exact'
                ReturnStatement
                  CallExpression
                    Identifier: ' tryGetModuleNameFromExportsOrImports'
                    Identifier: 'options'
                    Identifier: ' host'
                    Identifier: ' moduleFileName'
                    Identifier: ' ancestorDirectoryWithPackageJson'
                    Identifier: ' k'
                    ElementAccessExpression
                      ParenthesizedExpression
                        AsExpression
                          Identifier: 'imports'
                          TypeReference
                            Identifier: ' MapLike'
                            UnknownKeyword
                      Identifier: 'k'
                    Identifier: ' conditions'
                    Identifier: ' mode'
                    TrueKeyword
                    Identifier: ' preferTsExtension'
          QuestionDotToken
          Identifier: 'moduleFileToTry'
  FunctionDeclaration
    Identifier: ' tryGetModuleNameFromRootDirs'
    Parameter
      Identifier: 'rootDirs'
      TypeOperator
        ArrayType
          StringKeyword
    Parameter
      Identifier: ' moduleFileName'
      StringKeyword
    Parameter
      Identifier: ' sourceDirectory'
      StringKeyword
    Parameter
      Identifier: ' getCanonicalFileName'
      FunctionType
        Parameter
          Identifier: 'file'
          StringKeyword
        StringKeyword
    Parameter
      Identifier: ' allowedEndings'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' ModuleSpecifierEnding'
    Parameter
      Identifier: ' compilerOptions'
      TypeReference
        Identifier: ' CompilerOptions'
    UnionType
      StringKeyword
      UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' normalizedTargetPaths'
            CallExpression
              Identifier: ' getPathsRelativeToRootDirs'
              Identifier: 'moduleFileName'
              Identifier: ' rootDirs'
              Identifier: ' getCanonicalFileName'
      IfStatement
        BinaryExpression
          Identifier: 'normalizedTargetPaths'
          EqualsEqualsEqualsToken
          Identifier: ' undefined'
        Block
          ReturnStatement
            Identifier: ' undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' normalizedSourcePaths'
            CallExpression
              Identifier: ' getPathsRelativeToRootDirs'
              Identifier: 'sourceDirectory'
              Identifier: ' rootDirs'
              Identifier: ' getCanonicalFileName'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' relativePaths'
            CallExpression
              Identifier: ' flatMap'
              Identifier: 'normalizedSourcePaths'
              ArrowFunction
                Parameter
                  Identifier: ' sourcePath'
                EqualsGreaterThanToken
                Block
                  ReturnStatement
                    CallExpression
                      Identifier: ' map'
                      Identifier: 'normalizedTargetPaths'
                      ArrowFunction
                        Parameter
                          Identifier: ' targetPath'
                        EqualsGreaterThanToken
                        CallExpression
                          Identifier: ' ensurePathIsNonModuleName'
                          CallExpression
                            Identifier: 'getRelativePathFromDirectory'
                            Identifier: 'sourcePath'
                            Identifier: ' targetPath'
                            Identifier: ' getCanonicalFileName'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' shortest'
            CallExpression
              Identifier: ' min'
              Identifier: 'relativePaths'
              Identifier: ' compareNumberOfDirectorySeparators'
      IfStatement
        PrefixUnaryExpression
          Identifier: 'shortest'
        Block
          ReturnStatement
            Identifier: ' undefined'
      ReturnStatement
        CallExpression
          Identifier: ' processEnding'
          Identifier: 'shortest'
          Identifier: ' allowedEndings'
          Identifier: ' compilerOptions'
  FunctionDeclaration
    Identifier: ' tryGetModuleNameAsNodeModule'
    Parameter
      ObjectBindingPattern
        BindingElement
          Identifier: ' path'
        BindingElement
          Identifier: ' isRedirect'
      TypeReference
        Identifier: ' ModulePath'
    Parameter
      ObjectBindingPattern
        BindingElement
          Identifier: ' getCanonicalFileName'
        BindingElement
          Identifier: ' canonicalSourceDirectory'
      TypeReference
        Identifier: ' Info'
    Parameter
      Identifier: ' importingSourceFile'
      UnionType
        TypeReference
          Identifier: ' SourceFile'
        TypeReference
          Identifier: ' FutureSourceFile'
    Parameter
      Identifier: ' host'
      TypeReference
        Identifier: ' ModuleSpecifierResolutionHost'
    Parameter
      Identifier: ' options'
      TypeReference
        Identifier: ' CompilerOptions'
    Parameter
      Identifier: ' userPreferences'
      TypeReference
        Identifier: ' UserPreferences'
    Parameter
      Identifier: ' packageNameOnly'
      QuestionToken
      BooleanKeyword
    Parameter
      Identifier: ' overrideMode'
      QuestionToken
      TypeReference
        Identifier: ' ResolutionMode'
    UnionType
      StringKeyword
      UndefinedKeyword
    Block
      IfStatement
        BinaryExpression
          PrefixUnaryExpression
            PropertyAccessExpression
              Identifier: 'host'
              Identifier: 'fileExists'
          BarBarToken
          PrefixUnaryExpression
            PropertyAccessExpression
              Identifier: 'host'
              Identifier: 'readFile'
        Block
          ReturnStatement
            Identifier: ' undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' parts'
            TypeReference
              Identifier: ' NodeModulePathParts'
            NonNullExpression
              CallExpression
                Identifier: ' getNodeModulePathParts'
                Identifier: 'path'
      IfStatement
        PrefixUnaryExpression
          Identifier: 'parts'
        Block
          ReturnStatement
            Identifier: ' undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' preferences'
            CallExpression
              Identifier: ' getModuleSpecifierPreferences'
              Identifier: 'userPreferences'
              Identifier: ' host'
              Identifier: ' options'
              Identifier: ' importingSourceFile'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' allowedEndings'
            CallExpression
              PropertyAccessExpression
                Identifier: ' preferences'
                Identifier: 'getAllowedEndingsInPreferredOrder'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' moduleSpecifier'
            Identifier: ' path'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' isPackageRootPath'
            FalseKeyword
      IfStatement
        PrefixUnaryExpression
          Identifier: 'packageNameOnly'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' packageRootIndex'
                PropertyAccessExpression
                  Identifier: ' parts'
                  Identifier: 'packageRootIndex'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' moduleFileName'
                UnionType
                  StringKeyword
                  UndefinedKeyword
          WhileStatement
            TrueKeyword
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    ObjectBindingPattern
                      BindingElement
                        Identifier: ' moduleFileToTry'
                      BindingElement
                        Identifier: ' packageRootPath'
                      BindingElement
                        Identifier: ' blockedByExports'
                      BindingElement
                        Identifier: ' verbatimFromExports'
                    CallExpression
                      Identifier: ' tryDirectoryWithPackageJson'
                      Identifier: 'packageRootIndex'
              IfStatement
                BinaryExpression
                  CallExpression
                    Identifier: 'getEmitModuleResolutionKind'
                    Identifier: 'options'
                  ExclamationEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' ModuleResolutionKind'
                    Identifier: 'Classic'
                Block
                  IfStatement
                    Identifier: 'blockedByExports'
                    Block
                      ReturnStatement
                        Identifier: ' undefined'
                  IfStatement
                    Identifier: 'verbatimFromExports'
                    Block
                      ReturnStatement
                        Identifier: ' moduleFileToTry'
              IfStatement
                Identifier: 'packageRootPath'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                moduleSpecifier'
                      EqualsToken
                      Identifier: ' packageRootPath'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                isPackageRootPath'
                      EqualsToken
                      TrueKeyword
                  BreakStatement
              IfStatement
                PrefixUnaryExpression
                  Identifier: 'moduleFileName'
                ExpressionStatement
                  BinaryExpression
                    Identifier: ' moduleFileName'
                    EqualsToken
                    Identifier: ' moduleFileToTry'
              ExpressionStatement
                BinaryExpression
                  Identifier: '

            // try with next level of directory
            packageRootIndex'
                  EqualsToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' path'
                      Identifier: 'indexOf'
                    Identifier: 'directorySeparator'
                    BinaryExpression
                      Identifier: ' packageRootIndex'
                      PlusToken
                      NumericLiteral
              IfStatement
                BinaryExpression
                  Identifier: 'packageRootIndex'
                  EqualsEqualsEqualsToken
                  PrefixUnaryExpression
                    NumericLiteral
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                moduleSpecifier'
                      EqualsToken
                      CallExpression
                        Identifier: ' processEnding'
                        Identifier: 'moduleFileName'
                        Identifier: ' allowedEndings'
                        Identifier: ' options'
                        Identifier: ' host'
                  BreakStatement
      IfStatement
        BinaryExpression
          Identifier: 'isRedirect'
          AmpersandAmpersandToken
          PrefixUnaryExpression
            Identifier: 'isPackageRootPath'
        Block
          ReturnStatement
            Identifier: ' undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' globalTypingsCacheLocation'
            BinaryExpression
              PropertyAccessExpression
                Identifier: ' host'
                Identifier: 'getGlobalTypingsCacheLocation'
              AmpersandAmpersandToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' host'
                  Identifier: 'getGlobalTypingsCacheLocation'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' pathToTopLevelNodeModules'
            CallExpression
              Identifier: ' getCanonicalFileName'
              CallExpression
                PropertyAccessExpression
                  Identifier: 'moduleSpecifier'
                  Identifier: 'substring'
                NumericLiteral
                PropertyAccessExpression
                  Identifier: ' parts'
                  Identifier: 'topLevelNodeModulesIndex'
      IfStatement
        PrefixUnaryExpression
          ParenthesizedExpression
            BinaryExpression
              CallExpression
                Identifier: 'startsWith'
                Identifier: 'canonicalSourceDirectory'
                Identifier: ' pathToTopLevelNodeModules'
              BarBarToken
              BinaryExpression
                Identifier: ' globalTypingsCacheLocation'
                AmpersandAmpersandToken
                CallExpression
                  Identifier: ' startsWith'
                  CallExpression
                    Identifier: 'getCanonicalFileName'
                    Identifier: 'globalTypingsCacheLocation'
                  Identifier: ' pathToTopLevelNodeModules'
        Block
          ReturnStatement
            Identifier: ' undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' nodeModulesDirectoryName'
            CallExpression
              PropertyAccessExpression
                Identifier: ' moduleSpecifier'
                Identifier: 'substring'
              BinaryExpression
                PropertyAccessExpression
                  Identifier: 'parts'
                  Identifier: 'topLevelPackageNameIndex'
                PlusToken
                NumericLiteral
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' packageName'
            CallExpression
              Identifier: ' getPackageNameFromTypesPackageName'
              Identifier: 'nodeModulesDirectoryName'
      ReturnStatement
        ConditionalExpression
          BinaryExpression
            BinaryExpression
              CallExpression
                Identifier: ' getEmitModuleResolutionKind'
                Identifier: 'options'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' ModuleResolutionKind'
                Identifier: 'Classic'
            AmpersandAmpersandToken
            BinaryExpression
              Identifier: ' packageName'
              EqualsEqualsEqualsToken
              Identifier: ' nodeModulesDirectoryName'
          QuestionToken
          Identifier: ' undefined'
          ColonToken
          Identifier: ' packageName'
      FunctionDeclaration
        Identifier: ' tryDirectoryWithPackageJson'
        Parameter
          Identifier: 'packageRootIndex'
          NumberKeyword
        TypeLiteral
          PropertySignature
            Identifier: ' moduleFileToTry'
            StringKeyword
          PropertySignature
            Identifier: ' packageRootPath'
            QuestionToken
            StringKeyword
          PropertySignature
            Identifier: ' blockedByExports'
            QuestionToken
            LiteralType
              TrueKeyword
          PropertySignature
            Identifier: ' verbatimFromExports'
            QuestionToken
            LiteralType
              TrueKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' packageRootPath'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' path'
                    Identifier: 'substring'
                  NumericLiteral
                  Identifier: ' packageRootIndex'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' packageJsonPath'
                CallExpression
                  Identifier: ' combinePaths'
                  Identifier: 'packageRootPath'
                  StringLiteral
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' moduleFileToTry'
                Identifier: ' path'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' maybeBlockedByTypesVersions'
                FalseKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' cachedPackageJson'
                CallExpression
                  PropertyAccessExpression
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' host'
                        Identifier: 'getPackageJsonInfoCache'
                      QuestionDotToken
                    QuestionDotToken
                    Identifier: 'getPackageJsonInfo'
                  Identifier: 'packageJsonPath'
          IfStatement
            BinaryExpression
              CallExpression
                Identifier: 'isPackageJsonInfo'
                Identifier: 'cachedPackageJson'
              BarBarToken
              BinaryExpression
                BinaryExpression
                  Identifier: ' cachedPackageJson'
                  EqualsEqualsEqualsToken
                  Identifier: ' undefined'
                AmpersandAmpersandToken
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' host'
                    Identifier: 'fileExists'
                  Identifier: 'packageJsonPath'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' packageJsonContent'
                    UnionType
                      TypeReference
                        Identifier: ' Record'
                        StringKeyword
                        AnyKeyword
                      UndefinedKeyword
                    BinaryExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: ' cachedPackageJson'
                          QuestionDotToken
                          Identifier: 'contents'
                        Identifier: 'packageJsonContent'
                      BarBarToken
                      CallExpression
                        Identifier: ' tryParseJson'
                        NonNullExpression
                          CallExpression
                            NonNullExpression
                              PropertyAccessExpression
                                Identifier: 'host'
                                Identifier: 'readFile'
                            Identifier: 'packageJsonPath'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' importMode'
                    BinaryExpression
                      Identifier: ' overrideMode'
                      BarBarToken
                      CallExpression
                        Identifier: ' getDefaultResolutionModeForFile'
                        Identifier: 'importingSourceFile'
                        Identifier: ' host'
                        Identifier: ' options'
              IfStatement
                CallExpression
                  Identifier: 'getResolvePackageJsonExports'
                  Identifier: 'options'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' nodeModulesDirectoryName'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' packageRootPath'
                            Identifier: 'substring'
                          BinaryExpression
                            PropertyAccessExpression
                              Identifier: 'parts'
                              Identifier: 'topLevelPackageNameIndex'
                            PlusToken
                            NumericLiteral
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' packageName'
                        CallExpression
                          Identifier: ' getPackageNameFromTypesPackageName'
                          Identifier: 'nodeModulesDirectoryName'
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' conditions'
                        CallExpression
                          Identifier: ' getConditions'
                          Identifier: 'options'
                          Identifier: ' importMode'
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' fromExports'
                        ConditionalExpression
                          PropertyAccessExpression
                            Identifier: ' packageJsonContent'
                            QuestionDotToken
                            Identifier: 'exports'
                          QuestionToken
                          CallExpression
                            Identifier: ' tryGetModuleNameFromExports'
                            Identifier: '
                        options'
                            Identifier: '
                        host'
                            Identifier: '
                        path'
                            Identifier: '
                        packageRootPath'
                            Identifier: '
                        packageName'
                            PropertyAccessExpression
                              Identifier: '
                        packageJsonContent'
                              Identifier: 'exports'
                            Identifier: '
                        conditions'
                          ColonToken
                          Identifier: ' undefined'
                  IfStatement
                    Identifier: 'fromExports'
                    Block
                      ReturnStatement
                        ObjectLiteralExpression
                          SpreadAssignment
                            Identifier: 'fromExports'
                          PropertyAssignment
                            Identifier: ' verbatimFromExports'
                            TrueKeyword
                  IfStatement
                    PropertyAccessExpression
                      Identifier: 'packageJsonContent'
                      QuestionDotToken
                      Identifier: 'exports'
                    Block
                      ReturnStatement
                        ObjectLiteralExpression
                          PropertyAssignment
                            Identifier: ' moduleFileToTry'
                            Identifier: ' path'
                          PropertyAssignment
                            Identifier: ' blockedByExports'
                            TrueKeyword
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' versionPaths'
                    ConditionalExpression
                      PropertyAccessExpression
                        Identifier: ' packageJsonContent'
                        QuestionDotToken
                        Identifier: 'typesVersions'
                      QuestionToken
                      CallExpression
                        Identifier: ' getPackageJsonTypesVersionsPaths'
                        PropertyAccessExpression
                          Identifier: 'packageJsonContent'
                          Identifier: 'typesVersions'
                      ColonToken
                      Identifier: ' undefined'
              IfStatement
                Identifier: 'versionPaths'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' subModuleName'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' path'
                            Identifier: 'slice'
                          BinaryExpression
                            PropertyAccessExpression
                              Identifier: 'packageRootPath'
                              Identifier: 'length'
                            PlusToken
                            NumericLiteral
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' fromPaths'
                        CallExpression
                          Identifier: ' tryGetModuleNameFromPaths'
                          Identifier: '
                    subModuleName'
                          PropertyAccessExpression
                            Identifier: '
                    versionPaths'
                            Identifier: 'paths'
                          Identifier: '
                    allowedEndings'
                          Identifier: '
                    host'
                          Identifier: '
                    options'
                  IfStatement
                    BinaryExpression
                      Identifier: 'fromPaths'
                      EqualsEqualsEqualsToken
                      Identifier: ' undefined'
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    maybeBlockedByTypesVersions'
                          EqualsToken
                          TrueKeyword
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    moduleFileToTry'
                          EqualsToken
                          CallExpression
                            Identifier: ' combinePaths'
                            Identifier: 'packageRootPath'
                            Identifier: ' fromPaths'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' mainFileRelative'
                    BinaryExpression
                      BinaryExpression
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: ' packageJsonContent'
                            QuestionDotToken
                            Identifier: 'typings'
                          BarBarToken
                          PropertyAccessExpression
                            Identifier: ' packageJsonContent'
                            QuestionDotToken
                            Identifier: 'types'
                        BarBarToken
                        PropertyAccessExpression
                          Identifier: ' packageJsonContent'
                          QuestionDotToken
                          Identifier: 'main'
                      BarBarToken
                      StringLiteral
              IfStatement
                BinaryExpression
                  CallExpression
                    Identifier: 'isString'
                    Identifier: 'mainFileRelative'
                  AmpersandAmpersandToken
                  PrefixUnaryExpression
                    ParenthesizedExpression
                      BinaryExpression
                        Identifier: 'maybeBlockedByTypesVersions'
                        AmpersandAmpersandToken
                        CallExpression
                          Identifier: ' matchPatternOrExact'
                          CallExpression
                            Identifier: 'tryParsePatterns'
                            PropertyAccessExpression
                              NonNullExpression
                                Identifier: 'versionPaths'
                              Identifier: 'paths'
                          Identifier: ' mainFileRelative'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' mainExportFile'
                        CallExpression
                          Identifier: ' toPath'
                          Identifier: 'mainFileRelative'
                          Identifier: ' packageRootPath'
                          Identifier: ' getCanonicalFileName'
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' canonicalModuleFileToTry'
                        CallExpression
                          Identifier: ' getCanonicalFileName'
                          Identifier: 'moduleFileToTry'
                  IfStatement
                    BinaryExpression
                      CallExpression
                        Identifier: 'removeFileExtension'
                        Identifier: 'mainExportFile'
                      EqualsEqualsEqualsToken
                      CallExpression
                        Identifier: ' removeFileExtension'
                        Identifier: 'canonicalModuleFileToTry'
                    Block
                      ReturnStatement
                        ObjectLiteralExpression
                          ShorthandPropertyAssignment
                            Identifier: ' packageRootPath'
                          ShorthandPropertyAssignment
                            Identifier: ' moduleFileToTry'
                    IfStatement
                      BinaryExpression
                        BinaryExpression
                          BinaryExpression
                            BinaryExpression
                              BinaryExpression
                                PropertyAccessExpression
                                  Identifier: '
                    packageJsonContent'
                                  QuestionDotToken
                                  Identifier: 'type'
                                ExclamationEqualsEqualsToken
                                StringLiteral
                              AmpersandAmpersandToken
                              PrefixUnaryExpression
                                CallExpression
                                  Identifier: 'fileExtensionIsOneOf'
                                  Identifier: 'canonicalModuleFileToTry'
                                  Identifier: ' extensionsNotSupportingExtensionlessResolution'
                            AmpersandAmpersandToken
                            CallExpression
                              Identifier: '
                    startsWith'
                              Identifier: 'canonicalModuleFileToTry'
                              Identifier: ' mainExportFile'
                          AmpersandAmpersandToken
                          BinaryExpression
                            CallExpression
                              Identifier: '
                    getDirectoryPath'
                              Identifier: 'canonicalModuleFileToTry'
                            EqualsEqualsEqualsToken
                            CallExpression
                              Identifier: ' removeTrailingDirectorySeparator'
                              Identifier: 'mainExportFile'
                        AmpersandAmpersandToken
                        BinaryExpression
                          CallExpression
                            Identifier: '
                    removeFileExtension'
                            CallExpression
                              Identifier: 'getBaseFileName'
                              Identifier: 'canonicalModuleFileToTry'
                          EqualsEqualsEqualsToken
                          StringLiteral
                      Block
                        ReturnStatement
                          ObjectLiteralExpression
                            ShorthandPropertyAssignment
                              Identifier: ' packageRootPath'
                            ShorthandPropertyAssignment
                              Identifier: ' moduleFileToTry'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' fileName'
                    CallExpression
                      Identifier: ' getCanonicalFileName'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: 'moduleFileToTry'
                          Identifier: 'substring'
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: 'parts'
                            Identifier: 'packageRootIndex'
                          PlusToken
                          NumericLiteral
              IfStatement
                BinaryExpression
                  BinaryExpression
                    BinaryExpression
                      BinaryExpression
                        Identifier: 'fileName'
                        EqualsEqualsEqualsToken
                        StringLiteral
                      BarBarToken
                      BinaryExpression
                        Identifier: ' fileName'
                        EqualsEqualsEqualsToken
                        StringLiteral
                    BarBarToken
                    BinaryExpression
                      Identifier: ' fileName'
                      EqualsEqualsEqualsToken
                      StringLiteral
                  BarBarToken
                  BinaryExpression
                    Identifier: ' fileName'
                    EqualsEqualsEqualsToken
                    StringLiteral
                Block
                  ReturnStatement
                    ObjectLiteralExpression
                      ShorthandPropertyAssignment
                        Identifier: ' moduleFileToTry'
                      ShorthandPropertyAssignment
                        Identifier: ' packageRootPath'
          ReturnStatement
            ObjectLiteralExpression
              ShorthandPropertyAssignment
                Identifier: ' moduleFileToTry'
  FunctionDeclaration
    Identifier: ' tryGetAnyFileFromPath'
    Parameter
      Identifier: 'host'
      TypeReference
        Identifier: ' ModuleSpecifierResolutionHost'
    Parameter
      Identifier: ' path'
      StringKeyword
    Block
      IfStatement
        PrefixUnaryExpression
          PropertyAccessExpression
            Identifier: 'host'
            Identifier: 'fileExists'
        ReturnStatement
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' extensions'
            CallExpression
              Identifier: ' flatten'
              CallExpression
                Identifier: 'getSupportedExtensions'
                ObjectLiteralExpression
                  PropertyAssignment
                    Identifier: ' allowJs'
                    TrueKeyword
                ArrayLiteralExpression
                  ObjectLiteralExpression
                    PropertyAssignment
                      Identifier: ' extension'
                      StringLiteral
                    PropertyAssignment
                      Identifier: ' isMixedContent'
                      FalseKeyword
                  ObjectLiteralExpression
                    PropertyAssignment
                      Identifier: ' extension'
                      StringLiteral
                    PropertyAssignment
                      Identifier: ' isMixedContent'
                      FalseKeyword
                    PropertyAssignment
                      Identifier: ' scriptKind'
                      PropertyAccessExpression
                        Identifier: ' ScriptKind'
                        Identifier: 'JSON'
      ForOfStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' e'
        Identifier: ' extensions'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' fullPath'
                BinaryExpression
                  Identifier: ' path'
                  PlusToken
                  Identifier: ' e'
          IfStatement
            CallExpression
              PropertyAccessExpression
                Identifier: 'host'
                Identifier: 'fileExists'
              Identifier: 'fullPath'
            Block
              ReturnStatement
                Identifier: ' fullPath'
  FunctionDeclaration
    Identifier: ' getPathsRelativeToRootDirs'
    Parameter
      Identifier: 'path'
      StringKeyword
    Parameter
      Identifier: ' rootDirs'
      TypeOperator
        ArrayType
          StringKeyword
    Parameter
      Identifier: ' getCanonicalFileName'
      TypeReference
        Identifier: ' GetCanonicalFileName'
    UnionType
      ArrayType
        StringKeyword
      UndefinedKeyword
    Block
      ReturnStatement
        CallExpression
          Identifier: ' mapDefined'
          Identifier: 'rootDirs'
          ArrowFunction
            Parameter
              Identifier: ' rootDir'
            EqualsGreaterThanToken
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' relativePath'
                    CallExpression
                      Identifier: ' getRelativePathIfInSameVolume'
                      Identifier: 'path'
                      Identifier: ' rootDir'
                      Identifier: ' getCanonicalFileName'
              ReturnStatement
                ConditionalExpression
                  BinaryExpression
                    BinaryExpression
                      Identifier: ' relativePath'
                      ExclamationEqualsEqualsToken
                      Identifier: ' undefined'
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: ' isPathRelativeToParent'
                      Identifier: 'relativePath'
                  QuestionToken
                  Identifier: ' undefined'
                  ColonToken
                  Identifier: ' relativePath'
  FunctionDeclaration
    Identifier: ' processEnding'
    Parameter
      Identifier: 'fileName'
      StringKeyword
    Parameter
      Identifier: ' allowedEndings'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' ModuleSpecifierEnding'
    Parameter
      Identifier: ' options'
      TypeReference
        Identifier: ' CompilerOptions'
    Parameter
      Identifier: ' host'
      QuestionToken
      TypeReference
        Identifier: ' ModuleSpecifierResolutionHost'
    StringKeyword
    Block
      IfStatement
        CallExpression
          Identifier: 'fileExtensionIsOneOf'
          Identifier: 'fileName'
          ArrayLiteralExpression
            PropertyAccessExpression
              Identifier: 'Extension'
              Identifier: 'Json'
            PropertyAccessExpression
              Identifier: ' Extension'
              Identifier: 'Mjs'
            PropertyAccessExpression
              Identifier: ' Extension'
              Identifier: 'Cjs'
        Block
          ReturnStatement
            Identifier: ' fileName'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' noExtension'
            CallExpression
              Identifier: ' removeFileExtension'
              Identifier: 'fileName'
      IfStatement
        BinaryExpression
          Identifier: 'fileName'
          EqualsEqualsEqualsToken
          Identifier: ' noExtension'
        Block
          ReturnStatement
            Identifier: ' fileName'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' jsPriority'
            CallExpression
              PropertyAccessExpression
                Identifier: ' allowedEndings'
                Identifier: 'indexOf'
              PropertyAccessExpression
                Identifier: 'ModuleSpecifierEnding'
                Identifier: 'JsExtension'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' tsPriority'
            CallExpression
              PropertyAccessExpression
                Identifier: ' allowedEndings'
                Identifier: 'indexOf'
              PropertyAccessExpression
                Identifier: 'ModuleSpecifierEnding'
                Identifier: 'TsExtension'
      IfStatement
        BinaryExpression
          BinaryExpression
            CallExpression
              Identifier: 'fileExtensionIsOneOf'
              Identifier: 'fileName'
              ArrayLiteralExpression
                PropertyAccessExpression
                  Identifier: 'Extension'
                  Identifier: 'Mts'
                PropertyAccessExpression
                  Identifier: ' Extension'
                  Identifier: 'Cts'
            AmpersandAmpersandToken
            BinaryExpression
              Identifier: ' tsPriority'
              ExclamationEqualsEqualsToken
              PrefixUnaryExpression
                NumericLiteral
          AmpersandAmpersandToken
          BinaryExpression
            Identifier: ' tsPriority'
            LessThanToken
            Identifier: ' jsPriority'
        Block
          ReturnStatement
            Identifier: ' fileName'
        IfStatement
          CallExpression
            Identifier: 'fileExtensionIsOneOf'
            Identifier: 'fileName'
            ArrayLiteralExpression
              PropertyAccessExpression
                Identifier: 'Extension'
                Identifier: 'Dmts'
              PropertyAccessExpression
                Identifier: ' Extension'
                Identifier: 'Mts'
              PropertyAccessExpression
                Identifier: ' Extension'
                Identifier: 'Dcts'
              PropertyAccessExpression
                Identifier: ' Extension'
                Identifier: 'Cts'
          Block
            ReturnStatement
              BinaryExpression
                Identifier: ' noExtension'
                PlusToken
                CallExpression
                  Identifier: ' getJSExtensionForFile'
                  Identifier: 'fileName'
                  Identifier: ' options'
          IfStatement
            BinaryExpression
              BinaryExpression
                PrefixUnaryExpression
                  CallExpression
                    Identifier: 'fileExtensionIsOneOf'
                    Identifier: 'fileName'
                    ArrayLiteralExpression
                      PropertyAccessExpression
                        Identifier: 'Extension'
                        Identifier: 'Dts'
                AmpersandAmpersandToken
                CallExpression
                  Identifier: ' fileExtensionIsOneOf'
                  Identifier: 'fileName'
                  ArrayLiteralExpression
                    PropertyAccessExpression
                      Identifier: 'Extension'
                      Identifier: 'Ts'
              AmpersandAmpersandToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' fileName'
                  Identifier: 'includes'
                StringLiteral
            Block
              ReturnStatement
                NonNullExpression
                  CallExpression
                    Identifier: ' tryGetRealFileNameForNonJsDeclarationFileName'
                    Identifier: 'fileName'
      SwitchStatement
        ElementAccessExpression
          Identifier: 'allowedEndings'
          NumericLiteral
        CaseBlock
          CaseClause
            PropertyAccessExpression
              Identifier: ' ModuleSpecifierEnding'
              Identifier: 'Minimal'
            VariableStatement
              VariableDeclarationList
                VariableDeclaration
                  Identifier: ' withoutIndex'
                  CallExpression
                    Identifier: ' removeSuffix'
                    Identifier: 'noExtension'
                    StringLiteral
            IfStatement
              BinaryExpression
                BinaryExpression
                  Identifier: 'host'
                  AmpersandAmpersandToken
                  BinaryExpression
                    Identifier: ' withoutIndex'
                    ExclamationEqualsEqualsToken
                    Identifier: ' noExtension'
                AmpersandAmpersandToken
                CallExpression
                  Identifier: ' tryGetAnyFileFromPath'
                  Identifier: 'host'
                  Identifier: ' withoutIndex'
              Block
                ReturnStatement
                  Identifier: ' noExtension'
            ReturnStatement
              Identifier: ' withoutIndex'
          CaseClause
            PropertyAccessExpression
              Identifier: ' ModuleSpecifierEnding'
              Identifier: 'Index'
            ReturnStatement
              Identifier: ' noExtension'
          CaseClause
            PropertyAccessExpression
              Identifier: ' ModuleSpecifierEnding'
              Identifier: 'JsExtension'
            ReturnStatement
              BinaryExpression
                Identifier: ' noExtension'
                PlusToken
                CallExpression
                  Identifier: ' getJSExtensionForFile'
                  Identifier: 'fileName'
                  Identifier: ' options'
          CaseClause
            PropertyAccessExpression
              Identifier: ' ModuleSpecifierEnding'
              Identifier: 'TsExtension'
            IfStatement
              CallExpression
                Identifier: 'isDeclarationFileName'
                Identifier: 'fileName'
              Block
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' extensionlessPriority'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' allowedEndings'
                          Identifier: 'findIndex'
                        ArrowFunction
                          Parameter
                            Identifier: 'e'
                          EqualsGreaterThanToken
                          BinaryExpression
                            BinaryExpression
                              Identifier: ' e'
                              EqualsEqualsEqualsToken
                              PropertyAccessExpression
                                Identifier: ' ModuleSpecifierEnding'
                                Identifier: 'Minimal'
                            BarBarToken
                            BinaryExpression
                              Identifier: ' e'
                              EqualsEqualsEqualsToken
                              PropertyAccessExpression
                                Identifier: ' ModuleSpecifierEnding'
                                Identifier: 'Index'
                ReturnStatement
                  ConditionalExpression
                    BinaryExpression
                      BinaryExpression
                        Identifier: ' extensionlessPriority'
                        ExclamationEqualsEqualsToken
                        PrefixUnaryExpression
                          NumericLiteral
                      AmpersandAmpersandToken
                      BinaryExpression
                        Identifier: ' extensionlessPriority'
                        LessThanToken
                        Identifier: ' jsPriority'
                    QuestionToken
                    Identifier: ' noExtension'
                    ColonToken
                    BinaryExpression
                      Identifier: ' noExtension'
                      PlusToken
                      CallExpression
                        Identifier: ' getJSExtensionForFile'
                        Identifier: 'fileName'
                        Identifier: ' options'
            ReturnStatement
              Identifier: ' fileName'
          DefaultClause
            ReturnStatement
              CallExpression
                PropertyAccessExpression
                  Identifier: ' Debug'
                  Identifier: 'assertNever'
                ElementAccessExpression
                  Identifier: 'allowedEndings'
                  NumericLiteral
  FunctionDeclaration
    ExportKeyword
    Identifier: ' tryGetRealFileNameForNonJsDeclarationFileName'
    Parameter
      Identifier: 'fileName'
      StringKeyword
    UnionType
      StringKeyword
      UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' baseName'
            CallExpression
              Identifier: ' getBaseFileName'
              Identifier: 'fileName'
      IfStatement
        BinaryExpression
          BinaryExpression
            PrefixUnaryExpression
              CallExpression
                Identifier: 'endsWith'
                Identifier: 'fileName'
                PropertyAccessExpression
                  Identifier: ' Extension'
                  Identifier: 'Ts'
            BarBarToken
            PrefixUnaryExpression
              CallExpression
                PropertyAccessExpression
                  Identifier: 'baseName'
                  Identifier: 'includes'
                StringLiteral
          BarBarToken
          CallExpression
            Identifier: ' fileExtensionIsOneOf'
            Identifier: 'baseName'
            ArrayLiteralExpression
              PropertyAccessExpression
                Identifier: 'Extension'
                Identifier: 'Dts'
        ReturnStatement
          Identifier: ' undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' noExtension'
            CallExpression
              Identifier: ' removeExtension'
              Identifier: 'fileName'
              PropertyAccessExpression
                Identifier: ' Extension'
                Identifier: 'Ts'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' ext'
            CallExpression
              PropertyAccessExpression
                Identifier: ' noExtension'
                Identifier: 'substring'
              CallExpression
                PropertyAccessExpression
                  Identifier: 'noExtension'
                  Identifier: 'lastIndexOf'
                StringLiteral
      ReturnStatement
        BinaryExpression
          CallExpression
            PropertyAccessExpression
              Identifier: ' noExtension'
              Identifier: 'substring'
            NumericLiteral
            CallExpression
              PropertyAccessExpression
                Identifier: ' noExtension'
                Identifier: 'indexOf'
              StringLiteral
          PlusToken
          Identifier: ' ext'
  FunctionDeclaration
    Identifier: ' getJSExtensionForFile'
    Parameter
      Identifier: 'fileName'
      StringKeyword
    Parameter
      Identifier: ' options'
      TypeReference
        Identifier: ' CompilerOptions'
    TypeReference
      Identifier: ' Extension'
    Block
      ReturnStatement
        BinaryExpression
          CallExpression
            Identifier: ' tryGetJSExtensionForFile'
            Identifier: 'fileName'
            Identifier: ' options'
          QuestionQuestionToken
          CallExpression
            PropertyAccessExpression
              Identifier: ' Debug'
              Identifier: 'fail'
            TemplateExpression
              TemplateHead
              TemplateSpan
                CallExpression
                  Identifier: 'extensionFromPath'
                  Identifier: 'fileName'
                TemplateMiddle
              TemplateSpan
                Identifier: 'fileName'
                TemplateTail
  FunctionDeclaration
    ExportKeyword
    Identifier: ' tryGetJSExtensionForFile'
    Parameter
      Identifier: 'fileName'
      StringKeyword
    Parameter
      Identifier: ' options'
      TypeReference
        Identifier: ' CompilerOptions'
    UnionType
      TypeReference
        Identifier: ' Extension'
      UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' ext'
            CallExpression
              Identifier: ' tryGetExtensionFromPath'
              Identifier: 'fileName'
      SwitchStatement
        Identifier: 'ext'
        CaseBlock
          CaseClause
            PropertyAccessExpression
              Identifier: ' Extension'
              Identifier: 'Ts'
          CaseClause
            PropertyAccessExpression
              Identifier: ' Extension'
              Identifier: 'Dts'
            ReturnStatement
              PropertyAccessExpression
                Identifier: ' Extension'
                Identifier: 'Js'
          CaseClause
            PropertyAccessExpression
              Identifier: ' Extension'
              Identifier: 'Tsx'
            ReturnStatement
              ConditionalExpression
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: ' options'
                    Identifier: 'jsx'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' JsxEmit'
                    Identifier: 'Preserve'
                QuestionToken
                PropertyAccessExpression
                  Identifier: ' Extension'
                  Identifier: 'Jsx'
                ColonToken
                PropertyAccessExpression
                  Identifier: ' Extension'
                  Identifier: 'Js'
          CaseClause
            PropertyAccessExpression
              Identifier: ' Extension'
              Identifier: 'Js'
          CaseClause
            PropertyAccessExpression
              Identifier: ' Extension'
              Identifier: 'Jsx'
          CaseClause
            PropertyAccessExpression
              Identifier: ' Extension'
              Identifier: 'Json'
            ReturnStatement
              Identifier: ' ext'
          CaseClause
            PropertyAccessExpression
              Identifier: ' Extension'
              Identifier: 'Dmts'
          CaseClause
            PropertyAccessExpression
              Identifier: ' Extension'
              Identifier: 'Mts'
          CaseClause
            PropertyAccessExpression
              Identifier: ' Extension'
              Identifier: 'Mjs'
            ReturnStatement
              PropertyAccessExpression
                Identifier: ' Extension'
                Identifier: 'Mjs'
          CaseClause
            PropertyAccessExpression
              Identifier: ' Extension'
              Identifier: 'Dcts'
          CaseClause
            PropertyAccessExpression
              Identifier: ' Extension'
              Identifier: 'Cts'
          CaseClause
            PropertyAccessExpression
              Identifier: ' Extension'
              Identifier: 'Cjs'
            ReturnStatement
              PropertyAccessExpression
                Identifier: ' Extension'
                Identifier: 'Cjs'
          DefaultClause
            ReturnStatement
              Identifier: ' undefined'
  FunctionDeclaration
    Identifier: ' getRelativePathIfInSameVolume'
    Parameter
      Identifier: 'path'
      StringKeyword
    Parameter
      Identifier: ' directoryPath'
      StringKeyword
    Parameter
      Identifier: ' getCanonicalFileName'
      TypeReference
        Identifier: ' GetCanonicalFileName'
    UnionType
      StringKeyword
      UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' relativePath'
            CallExpression
              Identifier: ' getRelativePathToDirectoryOrUrl'
              Identifier: 'directoryPath'
              Identifier: ' path'
              Identifier: ' directoryPath'
              Identifier: ' getCanonicalFileName'
              FalseKeyword
      ReturnStatement
        ConditionalExpression
          CallExpression
            Identifier: ' isRootedDiskPath'
            Identifier: 'relativePath'
          QuestionToken
          Identifier: ' undefined'
          ColonToken
          Identifier: ' relativePath'
  FunctionDeclaration
    Identifier: ' isPathRelativeToParent'
    Parameter
      Identifier: 'path'
      StringKeyword
    BooleanKeyword
    Block
      ReturnStatement
        CallExpression
          Identifier: ' startsWith'
          Identifier: 'path'
          StringLiteral
  FunctionDeclaration
    Identifier: ' getDefaultResolutionModeForFile'
    Parameter
      Identifier: 'file'
      TypeReference
        Identifier: ' Pick'
        TypeReference
          Identifier: 'SourceFile'
        UnionType
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
    Parameter
      Identifier: ' host'
      TypeReference
        Identifier: ' Pick'
        TypeReference
          Identifier: 'ModuleSpecifierResolutionHost'
        LiteralType
          StringLiteral
    Parameter
      Identifier: ' compilerOptions'
      TypeReference
        Identifier: ' CompilerOptions'
    Block
      ReturnStatement
        ConditionalExpression
          CallExpression
            Identifier: ' isFullSourceFile'
            Identifier: 'file'
          QuestionToken
          CallExpression
            PropertyAccessExpression
              Identifier: ' host'
              Identifier: 'getDefaultResolutionModeForFile'
            Identifier: 'file'
          ColonToken
          CallExpression
            Identifier: ' getDefaultResolutionModeForFileWorker'
            Identifier: 'file'
            Identifier: ' compilerOptions'
  FunctionDeclaration
    Identifier: ' prefersTsExtension'
    Parameter
      Identifier: 'allowedEndings'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' ModuleSpecifierEnding'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' tsPriority'
            CallExpression
              PropertyAccessExpression
                Identifier: ' allowedEndings'
                Identifier: 'indexOf'
              PropertyAccessExpression
                Identifier: 'ModuleSpecifierEnding'
                Identifier: 'TsExtension'
      ReturnStatement
        BinaryExpression
          BinaryExpression
            Identifier: ' tsPriority'
            GreaterThanToken
            PrefixUnaryExpression
              NumericLiteral
          AmpersandAmpersandToken
          BinaryExpression
            Identifier: ' tsPriority'
            LessThanToken
            CallExpression
              PropertyAccessExpression
                Identifier: ' allowedEndings'
                Identifier: 'indexOf'
              PropertyAccessExpression
                Identifier: 'ModuleSpecifierEnding'
                Identifier: 'JsExtension'
