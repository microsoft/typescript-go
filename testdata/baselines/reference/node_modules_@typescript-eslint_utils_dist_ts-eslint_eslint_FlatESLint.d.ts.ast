SourceFile
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' FlatConfig'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamespaceImport
        Identifier: ' Shared'
    StringLiteral
  ClassDeclaration
    DeclareKeyword
    Identifier: ' FlatESLintBase'
    HeritageClause
      ExpressionWithTypeArguments
        PropertyAccessExpression
          Identifier: ' Shared'
          Identifier: 'ESLintBase'
        TypeReference
          QualifiedName
            Identifier: 'FlatConfig'
            Identifier: 'ConfigArray'
        TypeReference
          QualifiedName
            Identifier: ' FlatESLint'
            Identifier: 'ESLintOptions'
    PropertyDeclaration
      StaticKeyword
      ReadonlyKeyword
      Identifier: ' configType'
      LiteralType
        StringLiteral
    MethodDeclaration
      Identifier: '
    /**
     * Returns a configuration object for the given file based on the CLI options.
     * This is the same logic used by the ESLint CLI executable to determine
     * configuration for each file it processes.
     * @param filePath The path of the file to retrieve a config object for.
     * @returns A configuration object for the file or `undefined` if there is no configuration data for the object.
     */
    calculateConfigForFile'
      Parameter
        Identifier: 'filePath'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'FlatConfig'
            Identifier: 'ConfigArray'
    MethodDeclaration
      Identifier: '
    /**
     * Finds the config file being used by this instance based on the options
     * passed to the constructor.
     * @returns The path to the config file being used or `undefined` if no config file is being used.
     */
    findConfigFile'
      TypeReference
        Identifier: ' Promise'
        UnionType
          StringKeyword
          UndefinedKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' FlatESLint_base'
        TypeQuery
          Identifier: ' FlatESLintBase'
  ClassDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' FlatESLint'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FlatESLint_base'
  ModuleDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' FlatESLint'
    ModuleBlock
      InterfaceDeclaration
        Identifier: ' ESLintOptions'
        HeritageClause
          ExpressionWithTypeArguments
            PropertyAccessExpression
              Identifier: ' Shared'
              Identifier: 'ESLintOptions'
            TypeReference
              QualifiedName
                Identifier: 'FlatConfig'
                Identifier: 'ConfigArray'
        PropertySignature
          Identifier: '
        /**
         * If false is present, the eslint.lintFiles() method doesn't respect `ignorePatterns` ignorePatterns in your configuration.
         * @default true
         */
        ignore'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        /**
         * Ignore file patterns to use in addition to config ignores. These patterns are relative to cwd.
         * @default null
         */
        ignorePatterns'
          QuestionToken
          UnionType
            ArrayType
              StringKeyword
            LiteralType
              NullKeyword
        PropertySignature
          Identifier: '
        /**
         * The path to a configuration file, overrides all configurations used with this instance.
         * The options.overrideConfig option is applied after this option is applied.
         * Searches for default config file when falsy; doesn't do any config file lookup when `true`; considered to be a config filename when a string.
         * @default false
         */
        overrideConfigFile'
          QuestionToken
          UnionType
            BooleanKeyword
            StringKeyword
        PropertySignature
          Identifier: '
        /**
         * A predicate function that filters rules to be run.
         * This function is called with an object containing `ruleId` and `severity`, and returns `true` if the rule should be run.
         * @default () => true
         */
        ruleFilter'
          QuestionToken
          TypeReference
            Identifier: ' RuleFilter'
        PropertySignature
          Identifier: '
        /**
         * When set to true, additional statistics are added to the lint results.
         * @see {@link https://eslint.org/docs/latest/extend/stats}
         * @default false
         */
        stats'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        /**
         * Show warnings when the file list includes ignored files.
         * @default true
         */
        warnIgnored'
          QuestionToken
          BooleanKeyword
      TypeAliasDeclaration
        Identifier: ' DeprecatedRuleInfo'
        TypeReference
          QualifiedName
            Identifier: ' Shared'
            Identifier: 'DeprecatedRuleInfo'
      TypeAliasDeclaration
        Identifier: ' EditInfo'
        TypeReference
          QualifiedName
            Identifier: ' Shared'
            Identifier: 'EditInfo'
      TypeAliasDeclaration
        Identifier: ' Formatter'
        TypeReference
          QualifiedName
            Identifier: ' Shared'
            Identifier: 'Formatter'
      TypeAliasDeclaration
        Identifier: ' LintMessage'
        TypeReference
          QualifiedName
            Identifier: ' Shared'
            Identifier: 'LintMessage'
      TypeAliasDeclaration
        Identifier: ' LintResult'
        TypeReference
          QualifiedName
            Identifier: ' Shared'
            Identifier: 'LintResult'
      TypeAliasDeclaration
        Identifier: ' LintStats'
        TypeReference
          QualifiedName
            Identifier: ' Shared'
            Identifier: 'LintStats'
      TypeAliasDeclaration
        Identifier: ' LintStatsFixTime'
        TypeReference
          QualifiedName
            Identifier: ' Shared'
            Identifier: 'LintStatsFixTime'
      TypeAliasDeclaration
        Identifier: ' LintStatsParseTime'
        TypeReference
          QualifiedName
            Identifier: ' Shared'
            Identifier: 'LintStatsParseTime'
      TypeAliasDeclaration
        Identifier: ' LintStatsRuleTime'
        TypeReference
          QualifiedName
            Identifier: ' Shared'
            Identifier: 'LintStatsRuleTime'
      TypeAliasDeclaration
        Identifier: ' LintStatsTimePass'
        TypeReference
          QualifiedName
            Identifier: ' Shared'
            Identifier: 'LintStatsTimePass'
      TypeAliasDeclaration
        Identifier: ' LintTextOptions'
        TypeReference
          QualifiedName
            Identifier: ' Shared'
            Identifier: 'LintTextOptions'
      TypeAliasDeclaration
        Identifier: ' SuppressedLintMessage'
        TypeReference
          QualifiedName
            Identifier: ' Shared'
            Identifier: 'SuppressedLintMessage'
      TypeAliasDeclaration
        Identifier: ' RuleFilter'
        FunctionType
          Parameter
            Identifier: 'rule'
            TypeLiteral
              PropertySignature
                Identifier: '
        ruleId'
                StringKeyword
              PropertySignature
                Identifier: '
        severity'
                NumberKeyword
          BooleanKeyword
  ExportDeclaration
    NamedExports
