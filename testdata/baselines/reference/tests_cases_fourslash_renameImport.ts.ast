SourceFile
  ExpressionStatement
    CallExpression
      PropertyAccessExpression
        Identifier: '/// <reference path='fourslash.ts' />

// @allowJs: true

// @Filename: /node_modules/global/index.d.ts
////export const x: number;

// @Filename: /a.ts
////export const x = 0;

// @Filename: /dir/index.ts
////export const x = 0;

// @Filename: /b.ts
////import * as a from "./[|a|]";
////import a2 = require("./[|a|]");
////import * as dir from "./[|{| "target": "dir" |}dir|]";
////import * as dir2 from "./dir/[|{| "target": "dir/index" |}index|]";

// @Filename: /c.js
////const a = require("./[|a|]");
////const global = require("/*global*/global");

verify'
        Identifier: 'noErrors'
  ExpressionStatement
    CallExpression
      PropertyAccessExpression
        Identifier: '
goTo'
        Identifier: 'eachRange'
      ArrowFunction
        Parameter
          Identifier: 'range'
        EqualsGreaterThanToken
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' target'
                BinaryExpression
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: ' range'
                      Identifier: 'marker'
                    AmpersandAmpersandToken
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: ' range'
                        Identifier: 'marker'
                      Identifier: 'data'
                  AmpersandAmpersandToken
                  PropertyAccessExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: ' range'
                        Identifier: 'marker'
                      Identifier: 'data'
                    Identifier: 'target'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' displayName'
                ConditionalExpression
                  BinaryExpression
                    Identifier: ' target'
                    EqualsEqualsEqualsToken
                    StringLiteral
                  QuestionToken
                  StringLiteral
                  ColonToken
                  ConditionalExpression
                    BinaryExpression
                      Identifier: ' target'
                      EqualsEqualsEqualsToken
                      StringLiteral
                    QuestionToken
                    StringLiteral
                    ColonToken
                    StringLiteral
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' fileName'
                ConditionalExpression
                  BinaryExpression
                    Identifier: ' target'
                    EqualsEqualsEqualsToken
                    StringLiteral
                  QuestionToken
                  StringLiteral
                  ColonToken
                  ConditionalExpression
                    BinaryExpression
                      Identifier: ' target'
                      EqualsEqualsEqualsToken
                      StringLiteral
                    QuestionToken
                    StringLiteral
                    ColonToken
                    StringLiteral
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' kind'
                ConditionalExpression
                  BinaryExpression
                    Identifier: ' target'
                    EqualsEqualsEqualsToken
                    StringLiteral
                  QuestionToken
                  StringLiteral
                  ColonToken
                  StringLiteral
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
    verify'
                Identifier: 'renameInfoSucceeded'
              Identifier: '/*displayName*/ fileName'
              Identifier: ' /*fullDisplayName*/ displayName'
              Identifier: ' /*kind*/ kind'
              StringLiteral
              Identifier: ' /*fileToRename*/ fileName'
              Identifier: ' range'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
    verify'
                Identifier: 'renameInfoFailed'
              StringLiteral
              ObjectLiteralExpression
                PropertyAssignment
                  Identifier: ' allowRenameOfImportPath'
                  FalseKeyword
  ExpressionStatement
    CallExpression
      PropertyAccessExpression
        Identifier: '

goTo'
        Identifier: 'marker'
      StringLiteral
  ExpressionStatement
    CallExpression
      PropertyAccessExpression
        Identifier: '
verify'
        Identifier: 'renameInfoFailed'
      StringLiteral
