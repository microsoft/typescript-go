SourceFile
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' Line'
        ImportSpecifier
          Identifier: ' Spec'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' seedSpec'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' Tokenizer'
    StringLiteral
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' Parser'
    FunctionType
      Parameter
        Identifier: 'source'
        ArrayType
          TypeReference
            Identifier: ' Line'
      TypeReference
        Identifier: ' Spec'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Options'
    PropertySignature
      Identifier: '
  tokenizers'
      ArrayType
        TypeReference
          Identifier: ' Tokenizer'
  FunctionDeclaration
    ExportKeyword
    DefaultKeyword
    Identifier: ' getParser'
    Parameter
      ObjectBindingPattern
        BindingElement
          Identifier: ' tokenizers'
      TypeReference
        Identifier: ' Options'
    TypeReference
      Identifier: ' Parser'
    Block
      ReturnStatement
        FunctionExpression
          Identifier: ' parseSpec'
          Parameter
            Identifier: 'source'
            ArrayType
              TypeReference
                Identifier: ' Line'
          TypeReference
            Identifier: ' Spec'
          Block
            VariableStatement
              VariableDeclarationList
                VariableDeclaration
                  Identifier: ' spec'
                  CallExpression
                    Identifier: ' seedSpec'
                    ObjectLiteralExpression
                      ShorthandPropertyAssignment
                        Identifier: ' source'
            ForOfStatement
              VariableDeclarationList
                VariableDeclaration
                  Identifier: ' tokenize'
              Identifier: ' tokenizers'
              Block
                ExpressionStatement
                  BinaryExpression
                    Identifier: '
      spec'
                    EqualsToken
                    CallExpression
                      Identifier: ' tokenize'
                      Identifier: 'spec'
                IfStatement
                  PropertyAccessExpression
                    ElementAccessExpression
                      PropertyAccessExpression
                        Identifier: 'spec'
                        Identifier: 'problems'
                      BinaryExpression
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: 'spec'
                            Identifier: 'problems'
                          Identifier: 'length'
                        MinusToken
                        NumericLiteral
                    QuestionDotToken
                    Identifier: 'critical'
                  BreakStatement
            ReturnStatement
              Identifier: ' spec'
