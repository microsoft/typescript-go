SourceFile
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' TokenType'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' Parser'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' Precedence'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' IntermediateResult'
    StringLiteral
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' ParsletFunction'
    FunctionType
      Parameter
        Identifier: 'parser'
        TypeReference
          Identifier: ' Parser'
      Parameter
        Identifier: ' precedence'
        TypeReference
          Identifier: ' Precedence'
      Parameter
        Identifier: ' left'
        UnionType
          TypeReference
            Identifier: ' IntermediateResult'
          LiteralType
            NullKeyword
      UnionType
        TypeReference
          Identifier: ' IntermediateResult'
        LiteralType
          NullKeyword
  InterfaceDeclaration
    Identifier: ' BaseComposeParsletOptions'
    PropertySignature
      Identifier: '
  name'
      StringKeyword
    PropertySignature
      Identifier: '
  accept'
      FunctionType
        Parameter
          Identifier: 'type'
          TypeReference
            Identifier: ' TokenType'
        Parameter
          Identifier: ' next'
          TypeReference
            Identifier: ' TokenType'
        BooleanKeyword
  TypeAliasDeclaration
    Identifier: ' ComposePrefixParsletOptions'
    IntersectionType
      TypeReference
        Identifier: ' BaseComposeParsletOptions'
      TypeLiteral
        PropertySignature
          Identifier: '
  parsePrefix'
          FunctionType
            Parameter
              Identifier: 'parser'
              TypeReference
                Identifier: ' Parser'
            TypeReference
              Identifier: ' IntermediateResult'
  TypeAliasDeclaration
    Identifier: ' ComposeInfixParsletOptions'
    IntersectionType
      TypeReference
        Identifier: ' BaseComposeParsletOptions'
      TypeLiteral
        PropertySignature
          Identifier: '
  precedence'
          TypeReference
            Identifier: ' Precedence'
        PropertySignature
          Identifier: '
  parseInfix'
          FunctionType
            Parameter
              Identifier: 'parser'
              TypeReference
                Identifier: ' Parser'
            Parameter
              Identifier: ' left'
              TypeReference
                Identifier: ' IntermediateResult'
            TypeReference
              Identifier: ' IntermediateResult'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' ComposeParsletOptions'
    UnionType
      TypeReference
        Identifier: ' ComposePrefixParsletOptions'
      TypeReference
        Identifier: ' ComposeInfixParsletOptions'
      ParenthesizedType
        IntersectionType
          TypeReference
            Identifier: 'ComposePrefixParsletOptions'
          TypeReference
            Identifier: ' ComposeInfixParsletOptions'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' composeParslet'
    Parameter
      Identifier: 'options'
      TypeReference
        Identifier: ' ComposeParsletOptions'
    TypeReference
      Identifier: ' ParsletFunction'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' parslet'
            TypeReference
              Identifier: ' ParsletFunction'
            ArrowFunction
              Parameter
                Identifier: 'parser'
              Parameter
                Identifier: ' curPrecedence'
              Parameter
                Identifier: ' left'
              EqualsGreaterThanToken
              Block
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' type'
                      PropertyAccessExpression
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: ' parser'
                            Identifier: 'lexer'
                          Identifier: 'current'
                        Identifier: 'type'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' next'
                      PropertyAccessExpression
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: ' parser'
                            Identifier: 'lexer'
                          Identifier: 'next'
                        Identifier: 'type'
                IfStatement
                  BinaryExpression
                    Identifier: 'left'
                    EqualsEqualsEqualsToken
                    NullKeyword
                  Block
                    IfStatement
                      BinaryExpression
                        StringLiteral
                        InKeyword
                        Identifier: ' options'
                      Block
                        IfStatement
                          CallExpression
                            PropertyAccessExpression
                              Identifier: 'options'
                              Identifier: 'accept'
                            Identifier: 'type'
                            Identifier: ' next'
                          Block
                            ReturnStatement
                              CallExpression
                                PropertyAccessExpression
                                  Identifier: ' options'
                                  Identifier: 'parsePrefix'
                                Identifier: 'parser'
                  Block
                    IfStatement
                      BinaryExpression
                        StringLiteral
                        InKeyword
                        Identifier: ' options'
                      Block
                        IfStatement
                          BinaryExpression
                            BinaryExpression
                              PropertyAccessExpression
                                Identifier: 'options'
                                Identifier: 'precedence'
                              GreaterThanToken
                              Identifier: ' curPrecedence'
                            AmpersandAmpersandToken
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' options'
                                Identifier: 'accept'
                              Identifier: 'type'
                              Identifier: ' next'
                          Block
                            ReturnStatement
                              CallExpression
                                PropertyAccessExpression
                                  Identifier: ' options'
                                  Identifier: 'parseInfix'
                                Identifier: 'parser'
                                Identifier: ' left'
                ReturnStatement
                  NullKeyword
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            Identifier: '

  // for debugging
  Object'
            Identifier: 'defineProperty'
          Identifier: 'parslet'
          StringLiteral
          ObjectLiteralExpression
            PropertyAssignment
              Identifier: '
    value'
              PropertyAccessExpression
                Identifier: ' options'
                Identifier: 'name'
      ReturnStatement
        Identifier: ' parslet'
