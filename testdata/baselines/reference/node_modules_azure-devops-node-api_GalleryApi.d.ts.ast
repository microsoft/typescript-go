SourceFile
  ImportEqualsDeclaration
    Identifier: ' VsoBaseInterfaces'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' compatBase'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' GalleryInterfaces'
    ExternalModuleReference
      StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' IGalleryApi'
    HeritageClause
      ExpressionWithTypeArguments
        PropertyAccessExpression
          Identifier: ' compatBase'
          Identifier: 'GalleryCompatHttpClientBase'
    MethodSignature
      Identifier: '
    shareExtensionById'
      Parameter
        Identifier: 'extensionId'
        StringKeyword
      Parameter
        Identifier: ' accountName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    unshareExtensionById'
      Parameter
        Identifier: 'extensionId'
        StringKeyword
      Parameter
        Identifier: ' accountName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    shareExtension'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' accountName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    unshareExtension'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' accountName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getAcquisitionOptions'
      Parameter
        Identifier: 'itemId'
        StringKeyword
      Parameter
        Identifier: ' installationTarget'
        StringKeyword
      Parameter
        Identifier: ' testCommerce'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' isFreeOrTrialInstall'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'AcquisitionOptions'
    MethodSignature
      Identifier: '
    requestAcquisition'
      Parameter
        Identifier: 'acquisitionRequest'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'ExtensionAcquisitionRequest'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ExtensionAcquisitionRequest'
    MethodSignature
      Identifier: '
    getAssetByName'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' version'
        StringKeyword
      Parameter
        Identifier: ' assetType'
        StringKeyword
      Parameter
        Identifier: ' accountToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' acceptDefault'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' accountTokenHeader'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    getAsset'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' extensionId'
        StringKeyword
      Parameter
        Identifier: ' version'
        StringKeyword
      Parameter
        Identifier: ' assetType'
        StringKeyword
      Parameter
        Identifier: ' accountToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' acceptDefault'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' accountTokenHeader'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    getAssetAuthenticated'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' version'
        StringKeyword
      Parameter
        Identifier: ' assetType'
        StringKeyword
      Parameter
        Identifier: ' accountToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' accountTokenHeader'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    associateAzurePublisher'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' azurePublisherId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'AzurePublisher'
    MethodSignature
      Identifier: '
    queryAssociatedAzurePublisher'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'AzurePublisher'
    MethodSignature
      Identifier: '
    getCategories'
      Parameter
        Identifier: 'languages'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          StringKeyword
    MethodSignature
      Identifier: '
    getCategoryDetails'
      Parameter
        Identifier: 'categoryName'
        StringKeyword
      Parameter
        Identifier: ' languages'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' product'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'CategoriesResult'
    MethodSignature
      Identifier: '
    getCategoryTree'
      Parameter
        Identifier: 'product'
        StringKeyword
      Parameter
        Identifier: ' categoryId'
        StringKeyword
      Parameter
        Identifier: ' lcid'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' source'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' productVersion'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' skus'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' subSkus'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' productArchitecture'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ProductCategory'
    MethodSignature
      Identifier: '
    getRootCategories'
      Parameter
        Identifier: 'product'
        StringKeyword
      Parameter
        Identifier: ' lcid'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' source'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' productVersion'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' skus'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' subSkus'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ProductCategoriesResult'
    MethodSignature
      Identifier: '
    getCertificate'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' version'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    getContentVerificationLog'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    createSupportRequest'
      Parameter
        Identifier: 'customerSupportRequest'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'CustomerSupportRequest'
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    createDraftForEditExtension'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ExtensionDraft'
    MethodSignature
      Identifier: '
    performEditExtensionDraftOperation'
      Parameter
        Identifier: 'draftPatch'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'ExtensionDraftPatch'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' draftId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ExtensionDraft'
    MethodSignature
      Identifier: '
    updatePayloadInDraftForEditExtension'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' contentStream'
        TypeReference
          QualifiedName
            Identifier: ' NodeJS'
            Identifier: 'ReadableStream'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' draftId'
        StringKeyword
      Parameter
        Identifier: ' fileName'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ExtensionDraft'
    MethodSignature
      Identifier: '
    addAssetForEditExtensionDraft'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' contentStream'
        TypeReference
          QualifiedName
            Identifier: ' NodeJS'
            Identifier: 'ReadableStream'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' draftId'
        StringKeyword
      Parameter
        Identifier: ' assetType'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ExtensionDraftAsset'
    MethodSignature
      Identifier: '
    createDraftForNewExtension'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' contentStream'
        TypeReference
          QualifiedName
            Identifier: ' NodeJS'
            Identifier: 'ReadableStream'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' product'
        TypeReference
          Identifier: ' String'
      Parameter
        Identifier: ' fileName'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ExtensionDraft'
    MethodSignature
      Identifier: '
    performNewExtensionDraftOperation'
      Parameter
        Identifier: 'draftPatch'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'ExtensionDraftPatch'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' draftId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ExtensionDraft'
    MethodSignature
      Identifier: '
    updatePayloadInDraftForNewExtension'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' contentStream'
        TypeReference
          QualifiedName
            Identifier: ' NodeJS'
            Identifier: 'ReadableStream'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' draftId'
        StringKeyword
      Parameter
        Identifier: ' fileName'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ExtensionDraft'
    MethodSignature
      Identifier: '
    addAssetForNewExtensionDraft'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' contentStream'
        TypeReference
          QualifiedName
            Identifier: ' NodeJS'
            Identifier: 'ReadableStream'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' draftId'
        StringKeyword
      Parameter
        Identifier: ' assetType'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ExtensionDraftAsset'
    MethodSignature
      Identifier: '
    getAssetFromEditExtensionDraft'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' draftId'
        StringKeyword
      Parameter
        Identifier: ' assetType'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    getAssetFromNewExtensionDraft'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' draftId'
        StringKeyword
      Parameter
        Identifier: ' assetType'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    getExtensionEvents'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' count'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' afterDate'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' include'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' includeProperty'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ExtensionEvents'
    MethodSignature
      Identifier: '
    publishExtensionEvents'
      Parameter
        Identifier: 'extensionEvents'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' GalleryInterfaces'
              Identifier: 'ExtensionEvents'
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    queryExtensions'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' extensionQuery'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'ExtensionQuery'
      Parameter
        Identifier: ' accountToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' accountTokenHeader'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ExtensionQueryResult'
    MethodSignature
      Identifier: '
    createExtension'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' contentStream'
        TypeReference
          QualifiedName
            Identifier: ' NodeJS'
            Identifier: 'ReadableStream'
      Parameter
        Identifier: ' extensionType'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' reCaptchaToken'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'PublishedExtension'
    MethodSignature
      Identifier: '
    deleteExtensionById'
      Parameter
        Identifier: 'extensionId'
        StringKeyword
      Parameter
        Identifier: ' version'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getExtensionById'
      Parameter
        Identifier: 'extensionId'
        StringKeyword
      Parameter
        Identifier: ' version'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' flags'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'ExtensionQueryFlags'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'PublishedExtension'
    MethodSignature
      Identifier: '
    updateExtensionById'
      Parameter
        Identifier: 'extensionId'
        StringKeyword
      Parameter
        Identifier: ' reCaptchaToken'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'PublishedExtension'
    MethodSignature
      Identifier: '
    createExtensionWithPublisher'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' contentStream'
        TypeReference
          QualifiedName
            Identifier: ' NodeJS'
            Identifier: 'ReadableStream'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionType'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' reCaptchaToken'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'PublishedExtension'
    MethodSignature
      Identifier: '
    deleteExtension'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' version'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getExtension'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' version'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' flags'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'ExtensionQueryFlags'
      Parameter
        Identifier: ' accountToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' accountTokenHeader'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'PublishedExtension'
    MethodSignature
      Identifier: '
    updateExtension'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' contentStream'
        TypeReference
          QualifiedName
            Identifier: ' NodeJS'
            Identifier: 'ReadableStream'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' extensionType'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' reCaptchaToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' bypassScopeCheck'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'PublishedExtension'
    MethodSignature
      Identifier: '
    updateExtensionProperties'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' flags'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'PublishedExtensionFlags'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'PublishedExtension'
    MethodSignature
      Identifier: '
    shareExtensionWithHost'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' hostType'
        StringKeyword
      Parameter
        Identifier: ' hostName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    unshareExtensionWithHost'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' hostType'
        StringKeyword
      Parameter
        Identifier: ' hostName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    extensionValidator'
      Parameter
        Identifier: 'azureRestApiRequestModel'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'AzureRestApiRequestModel'
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    sendNotifications'
      Parameter
        Identifier: 'notificationData'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'NotificationsData'
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getPackage'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' version'
        StringKeyword
      Parameter
        Identifier: ' accountToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' acceptDefault'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' accountTokenHeader'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    getAssetWithToken'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' version'
        StringKeyword
      Parameter
        Identifier: ' assetType'
        StringKeyword
      Parameter
        Identifier: ' assetToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' accountToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' acceptDefault'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' accountTokenHeader'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    deletePublisherAsset'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' assetType'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getPublisherAsset'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' assetType'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    updatePublisherAsset'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' contentStream'
        TypeReference
          QualifiedName
            Identifier: ' NodeJS'
            Identifier: 'ReadableStream'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' assetType'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' fileName'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        TypeLiteral
          IndexSignature
            Parameter
              Identifier: 'key'
              StringKeyword
            StringKeyword
    MethodSignature
      Identifier: '
    fetchDomainToken'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        StringKeyword
    MethodSignature
      Identifier: '
    verifyDomainToken'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    queryPublishers'
      Parameter
        Identifier: 'publisherQuery'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'PublisherQuery'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'PublisherQueryResult'
    MethodSignature
      Identifier: '
    createPublisher'
      Parameter
        Identifier: 'publisher'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'Publisher'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'Publisher'
    MethodSignature
      Identifier: '
    deletePublisher'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getPublisher'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' flags'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'Publisher'
    MethodSignature
      Identifier: '
    updatePublisher'
      Parameter
        Identifier: 'publisher'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'Publisher'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'Publisher'
    MethodSignature
      Identifier: '
    updatePublisherMembers'
      Parameter
        Identifier: 'roleAssignments'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' GalleryInterfaces'
              Identifier: 'PublisherUserRoleAssignmentRef'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' limitToCallerIdentityDomain'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'GalleryInterfaces'
              Identifier: 'PublisherRoleAssignment'
    MethodSignature
      Identifier: '
    publishExtensionWithPublisherSignature'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' contentStream'
        TypeReference
          QualifiedName
            Identifier: ' NodeJS'
            Identifier: 'ReadableStream'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' extensionType'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' reCaptchaToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' bypassScopeCheck'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'PublishedExtension'
    MethodSignature
      Identifier: '
    getPublisherWithoutToken'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'Publisher'
    MethodSignature
      Identifier: '
    getQuestions'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' count'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' page'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' afterDate'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'QuestionsResult'
    MethodSignature
      Identifier: '
    reportQuestion'
      Parameter
        Identifier: 'concern'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'Concern'
      Parameter
        Identifier: ' pubName'
        StringKeyword
      Parameter
        Identifier: ' extName'
        StringKeyword
      Parameter
        Identifier: ' questionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'Concern'
    MethodSignature
      Identifier: '
    createQuestion'
      Parameter
        Identifier: 'question'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'Question'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'Question'
    MethodSignature
      Identifier: '
    deleteQuestion'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' questionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    updateQuestion'
      Parameter
        Identifier: 'question'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'Question'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' questionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'Question'
    MethodSignature
      Identifier: '
    createResponse'
      Parameter
        Identifier: 'response'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'Response'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' questionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'Response'
    MethodSignature
      Identifier: '
    deleteResponse'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' questionId'
        NumberKeyword
      Parameter
        Identifier: ' responseId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    updateResponse'
      Parameter
        Identifier: 'response'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'Response'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' questionId'
        NumberKeyword
      Parameter
        Identifier: ' responseId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'Response'
    MethodSignature
      Identifier: '
    getExtensionReports'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' days'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' count'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' afterDate'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      TypeReference
        Identifier: ' Promise'
        AnyKeyword
    MethodSignature
      Identifier: '
    getReviews'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' count'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' filterOptions'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'ReviewFilterOptions'
      Parameter
        Identifier: ' beforeDate'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' afterDate'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ReviewsResult'
    MethodSignature
      Identifier: '
    getReviewsSummary'
      Parameter
        Identifier: 'pubName'
        StringKeyword
      Parameter
        Identifier: ' extName'
        StringKeyword
      Parameter
        Identifier: ' beforeDate'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' afterDate'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ReviewSummary'
    MethodSignature
      Identifier: '
    createReview'
      Parameter
        Identifier: 'review'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'Review'
      Parameter
        Identifier: ' pubName'
        StringKeyword
      Parameter
        Identifier: ' extName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'Review'
    MethodSignature
      Identifier: '
    deleteReview'
      Parameter
        Identifier: 'pubName'
        StringKeyword
      Parameter
        Identifier: ' extName'
        StringKeyword
      Parameter
        Identifier: ' reviewId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    updateReview'
      Parameter
        Identifier: 'reviewPatch'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'ReviewPatch'
      Parameter
        Identifier: ' pubName'
        StringKeyword
      Parameter
        Identifier: ' extName'
        StringKeyword
      Parameter
        Identifier: ' reviewId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ReviewPatch'
    MethodSignature
      Identifier: '
    createCategory'
      Parameter
        Identifier: 'category'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'ExtensionCategory'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ExtensionCategory'
    MethodSignature
      Identifier: '
    getGalleryUserSettings'
      Parameter
        Identifier: 'userScope'
        StringKeyword
      Parameter
        Identifier: ' key'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeLiteral
          IndexSignature
            Parameter
              Identifier: 'key'
              StringKeyword
            AnyKeyword
    MethodSignature
      Identifier: '
    setGalleryUserSettings'
      Parameter
        Identifier: 'entries'
        TypeLiteral
          IndexSignature
            Parameter
              Identifier: 'key'
              StringKeyword
            AnyKeyword
      Parameter
        Identifier: ' userScope'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    generateKey'
      Parameter
        Identifier: 'keyType'
        StringKeyword
      Parameter
        Identifier: ' expireCurrentSeconds'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getSigningKey'
      Parameter
        Identifier: 'keyType'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        StringKeyword
    MethodSignature
      Identifier: '
    updateExtensionStatistics'
      Parameter
        Identifier: 'extensionStatisticsUpdate'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'ExtensionStatisticUpdate'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getExtensionDailyStats'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' days'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' aggregate'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'ExtensionStatsAggregateType'
      Parameter
        Identifier: ' afterDate'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ExtensionDailyStats'
    MethodSignature
      Identifier: '
    getExtensionDailyStatsAnonymous'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' version'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ExtensionDailyStats'
    MethodSignature
      Identifier: '
    incrementExtensionDailyStat'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' version'
        StringKeyword
      Parameter
        Identifier: ' statType'
        StringKeyword
      Parameter
        Identifier: ' targetPlatform'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getVerificationLog'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' version'
        StringKeyword
      Parameter
        Identifier: ' targetPlatform'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    updateVSCodeWebExtensionStatistics'
      Parameter
        Identifier: 'itemName'
        StringKeyword
      Parameter
        Identifier: ' version'
        StringKeyword
      Parameter
        Identifier: ' statType'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'VSCodeWebExtensionStatisicsType'
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
  ClassDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' GalleryApi'
    HeritageClause
      ExpressionWithTypeArguments
        PropertyAccessExpression
          Identifier: ' compatBase'
          Identifier: 'GalleryCompatHttpClientBase'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' IGalleryApi'
    Constructor
      Parameter
        Identifier: 'baseUrl'
        StringKeyword
      Parameter
        Identifier: ' handlers'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' VsoBaseInterfaces'
              Identifier: 'IRequestHandler'
      Parameter
        Identifier: ' options'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' VsoBaseInterfaces'
            Identifier: 'IRequestOptions'
    PropertyDeclaration
      StaticKeyword
      ReadonlyKeyword
      Identifier: ' RESOURCE_AREA_ID'
      StringLiteral
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} extensionId
     * @param {string} accountName
     */
    shareExtensionById'
      Parameter
        Identifier: 'extensionId'
        StringKeyword
      Parameter
        Identifier: ' accountName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} extensionId
     * @param {string} accountName
     */
    unshareExtensionById'
      Parameter
        Identifier: 'extensionId'
        StringKeyword
      Parameter
        Identifier: ' accountName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} publisherName
     * @param {string} extensionName
     * @param {string} accountName
     */
    shareExtension'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' accountName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} publisherName
     * @param {string} extensionName
     * @param {string} accountName
     */
    unshareExtension'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' accountName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} itemId
     * @param {string} installationTarget
     * @param {boolean} testCommerce
     * @param {boolean} isFreeOrTrialInstall
     */
    getAcquisitionOptions'
      Parameter
        Identifier: 'itemId'
        StringKeyword
      Parameter
        Identifier: ' installationTarget'
        StringKeyword
      Parameter
        Identifier: ' testCommerce'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' isFreeOrTrialInstall'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'AcquisitionOptions'
    MethodDeclaration
      Identifier: '
    /**
     * @param {GalleryInterfaces.ExtensionAcquisitionRequest} acquisitionRequest
     */
    requestAcquisition'
      Parameter
        Identifier: 'acquisitionRequest'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'ExtensionAcquisitionRequest'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ExtensionAcquisitionRequest'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} publisherName
     * @param {string} extensionName
     * @param {string} version
     * @param {string} assetType
     * @param {string} accountToken
     * @param {boolean} acceptDefault
     * @param {String} accountTokenHeader - Header to pass the account token
     */
    getAssetByName'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' version'
        StringKeyword
      Parameter
        Identifier: ' assetType'
        StringKeyword
      Parameter
        Identifier: ' accountToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' acceptDefault'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' accountTokenHeader'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} extensionId
     * @param {string} version
     * @param {string} assetType
     * @param {string} accountToken
     * @param {boolean} acceptDefault
     * @param {String} accountTokenHeader - Header to pass the account token
     */
    getAsset'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' extensionId'
        StringKeyword
      Parameter
        Identifier: ' version'
        StringKeyword
      Parameter
        Identifier: ' assetType'
        StringKeyword
      Parameter
        Identifier: ' accountToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' acceptDefault'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' accountTokenHeader'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} publisherName
     * @param {string} extensionName
     * @param {string} version
     * @param {string} assetType
     * @param {string} accountToken
     * @param {String} accountTokenHeader - Header to pass the account token
     */
    getAssetAuthenticated'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' version'
        StringKeyword
      Parameter
        Identifier: ' assetType'
        StringKeyword
      Parameter
        Identifier: ' accountToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' accountTokenHeader'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} publisherName
     * @param {string} azurePublisherId
     */
    associateAzurePublisher'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' azurePublisherId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'AzurePublisher'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} publisherName
     */
    queryAssociatedAzurePublisher'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'AzurePublisher'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} languages
     */
    getCategories'
      Parameter
        Identifier: 'languages'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          StringKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} categoryName
     * @param {string} languages
     * @param {string} product
     */
    getCategoryDetails'
      Parameter
        Identifier: 'categoryName'
        StringKeyword
      Parameter
        Identifier: ' languages'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' product'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'CategoriesResult'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} product
     * @param {string} categoryId
     * @param {number} lcid
     * @param {string} source
     * @param {string} productVersion
     * @param {string} skus
     * @param {string} subSkus
     * @param {string} productArchitecture
     */
    getCategoryTree'
      Parameter
        Identifier: 'product'
        StringKeyword
      Parameter
        Identifier: ' categoryId'
        StringKeyword
      Parameter
        Identifier: ' lcid'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' source'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' productVersion'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' skus'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' subSkus'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' productArchitecture'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ProductCategory'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} product
     * @param {number} lcid
     * @param {string} source
     * @param {string} productVersion
     * @param {string} skus
     * @param {string} subSkus
     */
    getRootCategories'
      Parameter
        Identifier: 'product'
        StringKeyword
      Parameter
        Identifier: ' lcid'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' source'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' productVersion'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' skus'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' subSkus'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ProductCategoriesResult'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} publisherName
     * @param {string} extensionName
     * @param {string} version
     */
    getCertificate'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' version'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} publisherName
     * @param {string} extensionName
     */
    getContentVerificationLog'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * @param {GalleryInterfaces.CustomerSupportRequest} customerSupportRequest
     */
    createSupportRequest'
      Parameter
        Identifier: 'customerSupportRequest'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'CustomerSupportRequest'
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} publisherName
     * @param {string} extensionName
     */
    createDraftForEditExtension'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ExtensionDraft'
    MethodDeclaration
      Identifier: '
    /**
     * @param {GalleryInterfaces.ExtensionDraftPatch} draftPatch
     * @param {string} publisherName
     * @param {string} extensionName
     * @param {string} draftId
     */
    performEditExtensionDraftOperation'
      Parameter
        Identifier: 'draftPatch'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'ExtensionDraftPatch'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' draftId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ExtensionDraft'
    MethodDeclaration
      Identifier: '
    /**
     * @param {NodeJS.ReadableStream} contentStream - Content to upload
     * @param {string} publisherName
     * @param {string} extensionName
     * @param {string} draftId
     * @param {String} fileName - Header to pass the filename of the uploaded data
     */
    updatePayloadInDraftForEditExtension'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' contentStream'
        TypeReference
          QualifiedName
            Identifier: ' NodeJS'
            Identifier: 'ReadableStream'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' draftId'
        StringKeyword
      Parameter
        Identifier: ' fileName'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ExtensionDraft'
    MethodDeclaration
      Identifier: '
    /**
     * @param {NodeJS.ReadableStream} contentStream - Content to upload
     * @param {string} publisherName
     * @param {string} extensionName
     * @param {string} draftId
     * @param {string} assetType
     */
    addAssetForEditExtensionDraft'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' contentStream'
        TypeReference
          QualifiedName
            Identifier: ' NodeJS'
            Identifier: 'ReadableStream'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' draftId'
        StringKeyword
      Parameter
        Identifier: ' assetType'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ExtensionDraftAsset'
    MethodDeclaration
      Identifier: '
    /**
     * @param {NodeJS.ReadableStream} contentStream - Content to upload
     * @param {string} publisherName
     * @param {String} product - Header to pass the product type of the payload file
     * @param {String} fileName - Header to pass the filename of the uploaded data
     */
    createDraftForNewExtension'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' contentStream'
        TypeReference
          QualifiedName
            Identifier: ' NodeJS'
            Identifier: 'ReadableStream'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' product'
        TypeReference
          Identifier: ' String'
      Parameter
        Identifier: ' fileName'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ExtensionDraft'
    MethodDeclaration
      Identifier: '
    /**
     * @param {GalleryInterfaces.ExtensionDraftPatch} draftPatch
     * @param {string} publisherName
     * @param {string} draftId
     */
    performNewExtensionDraftOperation'
      Parameter
        Identifier: 'draftPatch'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'ExtensionDraftPatch'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' draftId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ExtensionDraft'
    MethodDeclaration
      Identifier: '
    /**
     * @param {NodeJS.ReadableStream} contentStream - Content to upload
     * @param {string} publisherName
     * @param {string} draftId
     * @param {String} fileName - Header to pass the filename of the uploaded data
     */
    updatePayloadInDraftForNewExtension'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' contentStream'
        TypeReference
          QualifiedName
            Identifier: ' NodeJS'
            Identifier: 'ReadableStream'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' draftId'
        StringKeyword
      Parameter
        Identifier: ' fileName'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ExtensionDraft'
    MethodDeclaration
      Identifier: '
    /**
     * @param {NodeJS.ReadableStream} contentStream - Content to upload
     * @param {string} publisherName
     * @param {string} draftId
     * @param {string} assetType
     */
    addAssetForNewExtensionDraft'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' contentStream'
        TypeReference
          QualifiedName
            Identifier: ' NodeJS'
            Identifier: 'ReadableStream'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' draftId'
        StringKeyword
      Parameter
        Identifier: ' assetType'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ExtensionDraftAsset'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} publisherName
     * @param {string} draftId
     * @param {string} assetType
     * @param {string} extensionName
     */
    getAssetFromEditExtensionDraft'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' draftId'
        StringKeyword
      Parameter
        Identifier: ' assetType'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} publisherName
     * @param {string} draftId
     * @param {string} assetType
     */
    getAssetFromNewExtensionDraft'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' draftId'
        StringKeyword
      Parameter
        Identifier: ' assetType'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * Get install/uninstall events of an extension. If both count and afterDate parameters are specified, count takes precedence.
     *
     * @param {string} publisherName - Name of the publisher
     * @param {string} extensionName - Name of the extension
     * @param {number} count - Count of events to fetch, applies to each event type.
     * @param {Date} afterDate - Fetch events that occurred on or after this date
     * @param {string} include - Filter options. Supported values: install, uninstall, review, acquisition, sales. Default is to fetch all types of events
     * @param {string} includeProperty - Event properties to include. Currently only 'lastContactDetails' is supported for uninstall events
     */
    getExtensionEvents'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' count'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' afterDate'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' include'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' includeProperty'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ExtensionEvents'
    MethodDeclaration
      Identifier: '
    /**
     * API endpoint to publish extension install/uninstall events. This is meant to be invoked by EMS only for sending us data related to install/uninstall of an extension.
     *
     * @param {GalleryInterfaces.ExtensionEvents[]} extensionEvents
     */
    publishExtensionEvents'
      Parameter
        Identifier: 'extensionEvents'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' GalleryInterfaces'
              Identifier: 'ExtensionEvents'
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {GalleryInterfaces.ExtensionQuery} extensionQuery
     * @param {string} accountToken
     * @param {String} accountTokenHeader - Header to pass the account token
     */
    queryExtensions'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' extensionQuery'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'ExtensionQuery'
      Parameter
        Identifier: ' accountToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' accountTokenHeader'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ExtensionQueryResult'
    MethodDeclaration
      Identifier: '
    /**
     * @param {NodeJS.ReadableStream} contentStream - Content to upload
     * @param {string} extensionType
     * @param {string} reCaptchaToken
     */
    createExtension'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' contentStream'
        TypeReference
          QualifiedName
            Identifier: ' NodeJS'
            Identifier: 'ReadableStream'
      Parameter
        Identifier: ' extensionType'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' reCaptchaToken'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'PublishedExtension'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} extensionId
     * @param {string} version
     */
    deleteExtensionById'
      Parameter
        Identifier: 'extensionId'
        StringKeyword
      Parameter
        Identifier: ' version'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} extensionId
     * @param {string} version
     * @param {GalleryInterfaces.ExtensionQueryFlags} flags
     */
    getExtensionById'
      Parameter
        Identifier: 'extensionId'
        StringKeyword
      Parameter
        Identifier: ' version'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' flags'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'ExtensionQueryFlags'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'PublishedExtension'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} extensionId
     * @param {string} reCaptchaToken
     */
    updateExtensionById'
      Parameter
        Identifier: 'extensionId'
        StringKeyword
      Parameter
        Identifier: ' reCaptchaToken'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'PublishedExtension'
    MethodDeclaration
      Identifier: '
    /**
     * @param {NodeJS.ReadableStream} contentStream - Content to upload
     * @param {string} publisherName
     * @param {string} extensionType
     * @param {string} reCaptchaToken
     */
    createExtensionWithPublisher'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' contentStream'
        TypeReference
          QualifiedName
            Identifier: ' NodeJS'
            Identifier: 'ReadableStream'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionType'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' reCaptchaToken'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'PublishedExtension'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} publisherName
     * @param {string} extensionName
     * @param {string} version
     */
    deleteExtension'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' version'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} publisherName
     * @param {string} extensionName
     * @param {string} version
     * @param {GalleryInterfaces.ExtensionQueryFlags} flags
     * @param {string} accountToken
     * @param {String} accountTokenHeader - Header to pass the account token
     */
    getExtension'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' version'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' flags'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'ExtensionQueryFlags'
      Parameter
        Identifier: ' accountToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' accountTokenHeader'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'PublishedExtension'
    MethodDeclaration
      Identifier: '
    /**
     * REST endpoint to update an extension.
     *
     * @param {NodeJS.ReadableStream} contentStream - Content to upload
     * @param {string} publisherName - Name of the publisher
     * @param {string} extensionName - Name of the extension
     * @param {string} extensionType
     * @param {string} reCaptchaToken
     * @param {boolean} bypassScopeCheck - This parameter decides if the scope change check needs to be invoked or not
     */
    updateExtension'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' contentStream'
        TypeReference
          QualifiedName
            Identifier: ' NodeJS'
            Identifier: 'ReadableStream'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' extensionType'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' reCaptchaToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' bypassScopeCheck'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'PublishedExtension'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} publisherName
     * @param {string} extensionName
     * @param {GalleryInterfaces.PublishedExtensionFlags} flags
     */
    updateExtensionProperties'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' flags'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'PublishedExtensionFlags'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'PublishedExtension'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} publisherName
     * @param {string} extensionName
     * @param {string} hostType
     * @param {string} hostName
     */
    shareExtensionWithHost'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' hostType'
        StringKeyword
      Parameter
        Identifier: ' hostName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} publisherName
     * @param {string} extensionName
     * @param {string} hostType
     * @param {string} hostName
     */
    unshareExtensionWithHost'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' hostType'
        StringKeyword
      Parameter
        Identifier: ' hostName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Rest end point to validate if an Azure publisher owns an extension for 3rd party commerce scenario. Azure only supports POST operations and the above signature is not typical of the REST operations. http://sharepoint/sites/AzureUX/_layouts/15/WopiFrame2.aspx?sourcedoc={A793D31E-6DC6-4174-8FA3-DE3F82B51642}&file=Data%20Market%20Partner%20integration%20with%20Marketplace%20service.docx&action=default
     *
     * @param {GalleryInterfaces.AzureRestApiRequestModel} azureRestApiRequestModel - All the parameters are sent in the request body
     */
    extensionValidator'
      Parameter
        Identifier: 'azureRestApiRequestModel'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'AzureRestApiRequestModel'
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Send Notification
     *
     * @param {GalleryInterfaces.NotificationsData} notificationData - Denoting the data needed to send notification
     */
    sendNotifications'
      Parameter
        Identifier: 'notificationData'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'NotificationsData'
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * This endpoint gets hit when you download a VSTS extension from the Web UI
     *
     * @param {string} publisherName
     * @param {string} extensionName
     * @param {string} version
     * @param {string} accountToken
     * @param {boolean} acceptDefault
     * @param {String} accountTokenHeader - Header to pass the account token
     */
    getPackage'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' version'
        StringKeyword
      Parameter
        Identifier: ' accountToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' acceptDefault'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' accountTokenHeader'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} publisherName
     * @param {string} extensionName
     * @param {string} version
     * @param {string} assetType
     * @param {string} assetToken
     * @param {string} accountToken
     * @param {boolean} acceptDefault
     * @param {String} accountTokenHeader - Header to pass the account token
     */
    getAssetWithToken'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' version'
        StringKeyword
      Parameter
        Identifier: ' assetType'
        StringKeyword
      Parameter
        Identifier: ' assetToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' accountToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' acceptDefault'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' accountTokenHeader'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * Delete publisher asset like logo
     *
     * @param {string} publisherName - Internal name of the publisher
     * @param {string} assetType - Type of asset. Default value is 'logo'.
     */
    deletePublisherAsset'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' assetType'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Get publisher asset like logo as a stream
     *
     * @param {string} publisherName - Internal name of the publisher
     * @param {string} assetType - Type of asset. Default value is 'logo'.
     */
    getPublisherAsset'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' assetType'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * Update publisher asset like logo. It accepts asset file as an octet stream and file name is passed in header values.
     *
     * @param {NodeJS.ReadableStream} contentStream - Content to upload
     * @param {string} publisherName - Internal name of the publisher
     * @param {string} assetType - Type of asset. Default value is 'logo'.
     * @param {String} fileName - Header to pass the filename of the uploaded data
     */
    updatePublisherAsset'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' contentStream'
        TypeReference
          QualifiedName
            Identifier: ' NodeJS'
            Identifier: 'ReadableStream'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' assetType'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' fileName'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        TypeLiteral
          IndexSignature
            Parameter
              Identifier: 'key'
              StringKeyword
            StringKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} publisherName
     */
    fetchDomainToken'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        StringKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} publisherName
     */
    verifyDomainToken'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {GalleryInterfaces.PublisherQuery} publisherQuery
     */
    queryPublishers'
      Parameter
        Identifier: 'publisherQuery'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'PublisherQuery'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'PublisherQueryResult'
    MethodDeclaration
      Identifier: '
    /**
     * @param {GalleryInterfaces.Publisher} publisher
     */
    createPublisher'
      Parameter
        Identifier: 'publisher'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'Publisher'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'Publisher'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} publisherName
     */
    deletePublisher'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} publisherName
     * @param {number} flags
     */
    getPublisher'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' flags'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'Publisher'
    MethodDeclaration
      Identifier: '
    /**
     * @param {GalleryInterfaces.Publisher} publisher
     * @param {string} publisherName
     */
    updatePublisher'
      Parameter
        Identifier: 'publisher'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'Publisher'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'Publisher'
    MethodDeclaration
      Identifier: '
    /**
     * Endpoint to add/modify publisher membership. Currently Supports only addition/modification of 1 user at a time Works only for adding members of same tenant.
     *
     * @param {GalleryInterfaces.PublisherUserRoleAssignmentRef[]} roleAssignments - List of user identifiers(email address) and role to be added. Currently only one entry is supported.
     * @param {string} publisherName - The name/id of publisher to which users have to be added
     * @param {boolean} limitToCallerIdentityDomain - Should cross tenant addtions be allowed or not.
     */
    updatePublisherMembers'
      Parameter
        Identifier: 'roleAssignments'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' GalleryInterfaces'
              Identifier: 'PublisherUserRoleAssignmentRef'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' limitToCallerIdentityDomain'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'GalleryInterfaces'
              Identifier: 'PublisherRoleAssignment'
    MethodDeclaration
      Identifier: '
    /**
     * @param {NodeJS.ReadableStream} contentStream - Content to upload
     * @param {string} publisherName
     * @param {string} extensionName
     * @param {string} extensionType
     * @param {string} reCaptchaToken
     * @param {boolean} bypassScopeCheck
     */
    publishExtensionWithPublisherSignature'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' contentStream'
        TypeReference
          QualifiedName
            Identifier: ' NodeJS'
            Identifier: 'ReadableStream'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' extensionType'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' reCaptchaToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' bypassScopeCheck'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'PublishedExtension'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} publisherName
     */
    getPublisherWithoutToken'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'Publisher'
    MethodDeclaration
      Identifier: '
    /**
     * Returns a list of questions with their responses associated with an extension.
     *
     * @param {string} publisherName - Name of the publisher who published the extension.
     * @param {string} extensionName - Name of the extension.
     * @param {number} count - Number of questions to retrieve (defaults to 10).
     * @param {number} page - Page number from which set of questions are to be retrieved.
     * @param {Date} afterDate - If provided, results questions are returned which were posted after this date
     */
    getQuestions'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' count'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' page'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' afterDate'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'QuestionsResult'
    MethodDeclaration
      Identifier: '
    /**
     * Flags a concern with an existing question for an extension.
     *
     * @param {GalleryInterfaces.Concern} concern - User reported concern with a question for the extension.
     * @param {string} pubName - Name of the publisher who published the extension.
     * @param {string} extName - Name of the extension.
     * @param {number} questionId - Identifier of the question to be updated for the extension.
     */
    reportQuestion'
      Parameter
        Identifier: 'concern'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'Concern'
      Parameter
        Identifier: ' pubName'
        StringKeyword
      Parameter
        Identifier: ' extName'
        StringKeyword
      Parameter
        Identifier: ' questionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'Concern'
    MethodDeclaration
      Identifier: '
    /**
     * Creates a new question for an extension.
     *
     * @param {GalleryInterfaces.Question} question - Question to be created for the extension.
     * @param {string} publisherName - Name of the publisher who published the extension.
     * @param {string} extensionName - Name of the extension.
     */
    createQuestion'
      Parameter
        Identifier: 'question'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'Question'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'Question'
    MethodDeclaration
      Identifier: '
    /**
     * Deletes an existing question and all its associated responses for an extension. (soft delete)
     *
     * @param {string} publisherName - Name of the publisher who published the extension.
     * @param {string} extensionName - Name of the extension.
     * @param {number} questionId - Identifier of the question to be deleted for the extension.
     */
    deleteQuestion'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' questionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Updates an existing question for an extension.
     *
     * @param {GalleryInterfaces.Question} question - Updated question to be set for the extension.
     * @param {string} publisherName - Name of the publisher who published the extension.
     * @param {string} extensionName - Name of the extension.
     * @param {number} questionId - Identifier of the question to be updated for the extension.
     */
    updateQuestion'
      Parameter
        Identifier: 'question'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'Question'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' questionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'Question'
    MethodDeclaration
      Identifier: '
    /**
     * Creates a new response for a given question for an extension.
     *
     * @param {GalleryInterfaces.Response} response - Response to be created for the extension.
     * @param {string} publisherName - Name of the publisher who published the extension.
     * @param {string} extensionName - Name of the extension.
     * @param {number} questionId - Identifier of the question for which response is to be created for the extension.
     */
    createResponse'
      Parameter
        Identifier: 'response'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'Response'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' questionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'Response'
    MethodDeclaration
      Identifier: '
    /**
     * Deletes a response for an extension. (soft delete)
     *
     * @param {string} publisherName - Name of the publisher who published the extension.
     * @param {string} extensionName - Name of the extension.
     * @param {number} questionId - Identifies the question whose response is to be deleted.
     * @param {number} responseId - Identifies the response to be deleted.
     */
    deleteResponse'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' questionId'
        NumberKeyword
      Parameter
        Identifier: ' responseId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Updates an existing response for a given question for an extension.
     *
     * @param {GalleryInterfaces.Response} response - Updated response to be set for the extension.
     * @param {string} publisherName - Name of the publisher who published the extension.
     * @param {string} extensionName - Name of the extension.
     * @param {number} questionId - Identifier of the question for which response is to be updated for the extension.
     * @param {number} responseId - Identifier of the response which has to be updated.
     */
    updateResponse'
      Parameter
        Identifier: 'response'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'Response'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' questionId'
        NumberKeyword
      Parameter
        Identifier: ' responseId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'Response'
    MethodDeclaration
      Identifier: '
    /**
     * Returns extension reports
     *
     * @param {string} publisherName - Name of the publisher who published the extension
     * @param {string} extensionName - Name of the extension
     * @param {number} days - Last n days report. If afterDate and days are specified, days will take priority
     * @param {number} count - Number of events to be returned
     * @param {Date} afterDate - Use if you want to fetch events newer than the specified date
     */
    getExtensionReports'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' days'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' count'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' afterDate'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      TypeReference
        Identifier: ' Promise'
        AnyKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Returns a list of reviews associated with an extension
     *
     * @param {string} publisherName - Name of the publisher who published the extension
     * @param {string} extensionName - Name of the extension
     * @param {number} count - Number of reviews to retrieve (defaults to 5)
     * @param {GalleryInterfaces.ReviewFilterOptions} filterOptions - FilterOptions to filter out empty reviews etcetera, defaults to none
     * @param {Date} beforeDate - Use if you want to fetch reviews older than the specified date, defaults to null
     * @param {Date} afterDate - Use if you want to fetch reviews newer than the specified date, defaults to null
     */
    getReviews'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' count'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' filterOptions'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'ReviewFilterOptions'
      Parameter
        Identifier: ' beforeDate'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' afterDate'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ReviewsResult'
    MethodDeclaration
      Identifier: '
    /**
     * Returns a summary of the reviews
     *
     * @param {string} pubName - Name of the publisher who published the extension
     * @param {string} extName - Name of the extension
     * @param {Date} beforeDate - Use if you want to fetch summary of reviews older than the specified date, defaults to null
     * @param {Date} afterDate - Use if you want to fetch summary of reviews newer than the specified date, defaults to null
     */
    getReviewsSummary'
      Parameter
        Identifier: 'pubName'
        StringKeyword
      Parameter
        Identifier: ' extName'
        StringKeyword
      Parameter
        Identifier: ' beforeDate'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' afterDate'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ReviewSummary'
    MethodDeclaration
      Identifier: '
    /**
     * Creates a new review for an extension
     *
     * @param {GalleryInterfaces.Review} review - Review to be created for the extension
     * @param {string} pubName - Name of the publisher who published the extension
     * @param {string} extName - Name of the extension
     */
    createReview'
      Parameter
        Identifier: 'review'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'Review'
      Parameter
        Identifier: ' pubName'
        StringKeyword
      Parameter
        Identifier: ' extName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'Review'
    MethodDeclaration
      Identifier: '
    /**
     * Deletes a review
     *
     * @param {string} pubName - Name of the publisher who published the extension
     * @param {string} extName - Name of the extension
     * @param {number} reviewId - Id of the review which needs to be updated
     */
    deleteReview'
      Parameter
        Identifier: 'pubName'
        StringKeyword
      Parameter
        Identifier: ' extName'
        StringKeyword
      Parameter
        Identifier: ' reviewId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Updates or Flags a review
     *
     * @param {GalleryInterfaces.ReviewPatch} reviewPatch - ReviewPatch object which contains the changes to be applied to the review
     * @param {string} pubName - Name of the publisher who published the extension
     * @param {string} extName - Name of the extension
     * @param {number} reviewId - Id of the review which needs to be updated
     */
    updateReview'
      Parameter
        Identifier: 'reviewPatch'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'ReviewPatch'
      Parameter
        Identifier: ' pubName'
        StringKeyword
      Parameter
        Identifier: ' extName'
        StringKeyword
      Parameter
        Identifier: ' reviewId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ReviewPatch'
    MethodDeclaration
      Identifier: '
    /**
     * @param {GalleryInterfaces.ExtensionCategory} category
     */
    createCategory'
      Parameter
        Identifier: 'category'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'ExtensionCategory'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ExtensionCategory'
    MethodDeclaration
      Identifier: '
    /**
     * Get all setting entries for the given user/all-users scope
     *
     * @param {string} userScope - User-Scope at which to get the value. Should be "me" for the current user or "host" for all users.
     * @param {string} key - Optional key under which to filter all the entries
     */
    getGalleryUserSettings'
      Parameter
        Identifier: 'userScope'
        StringKeyword
      Parameter
        Identifier: ' key'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeLiteral
          IndexSignature
            Parameter
              Identifier: 'key'
              StringKeyword
            AnyKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Set all setting entries for the given user/all-users scope
     *
     * @param {{ [key: string] : any; }} entries - A key-value pair of all settings that need to be set
     * @param {string} userScope - User-Scope at which to get the value. Should be "me" for the current user or "host" for all users.
     */
    setGalleryUserSettings'
      Parameter
        Identifier: 'entries'
        TypeLiteral
          IndexSignature
            Parameter
              Identifier: 'key'
              StringKeyword
            AnyKeyword
      Parameter
        Identifier: ' userScope'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} keyType
     * @param {number} expireCurrentSeconds
     */
    generateKey'
      Parameter
        Identifier: 'keyType'
        StringKeyword
      Parameter
        Identifier: ' expireCurrentSeconds'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} keyType
     */
    getSigningKey'
      Parameter
        Identifier: 'keyType'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        StringKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {GalleryInterfaces.ExtensionStatisticUpdate} extensionStatisticsUpdate
     * @param {string} publisherName
     * @param {string} extensionName
     */
    updateExtensionStatistics'
      Parameter
        Identifier: 'extensionStatisticsUpdate'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'ExtensionStatisticUpdate'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} publisherName
     * @param {string} extensionName
     * @param {number} days
     * @param {GalleryInterfaces.ExtensionStatsAggregateType} aggregate
     * @param {Date} afterDate
     */
    getExtensionDailyStats'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' days'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' aggregate'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'ExtensionStatsAggregateType'
      Parameter
        Identifier: ' afterDate'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ExtensionDailyStats'
    MethodDeclaration
      Identifier: '
    /**
     * This route/location id only supports HTTP POST anonymously, so that the page view daily stat can be incremented from Marketplace client. Trying to call GET on this route should result in an exception. Without this explicit implementation, calling GET on this public route invokes the above GET implementation GetExtensionDailyStats.
     *
     * @param {string} publisherName - Name of the publisher
     * @param {string} extensionName - Name of the extension
     * @param {string} version - Version of the extension
     */
    getExtensionDailyStatsAnonymous'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' version'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'ExtensionDailyStats'
    MethodDeclaration
      Identifier: '
    /**
     * Increments a daily statistic associated with the extension
     *
     * @param {string} publisherName - Name of the publisher
     * @param {string} extensionName - Name of the extension
     * @param {string} version - Version of the extension
     * @param {string} statType - Type of stat to increment
     * @param {string} targetPlatform
     */
    incrementExtensionDailyStat'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' version'
        StringKeyword
      Parameter
        Identifier: ' statType'
        StringKeyword
      Parameter
        Identifier: ' targetPlatform'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} publisherName
     * @param {string} extensionName
     * @param {string} version
     * @param {string} targetPlatform
     */
    getVerificationLog'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' version'
        StringKeyword
      Parameter
        Identifier: ' targetPlatform'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} itemName
     * @param {string} version
     * @param {GalleryInterfaces.VSCodeWebExtensionStatisicsType} statType
     */
    updateVSCodeWebExtensionStatistics'
      Parameter
        Identifier: 'itemName'
        StringKeyword
      Parameter
        Identifier: ' version'
        StringKeyword
      Parameter
        Identifier: ' statType'
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'VSCodeWebExtensionStatisicsType'
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
