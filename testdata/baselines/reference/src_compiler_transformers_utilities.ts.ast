SourceFile
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: '
    __String'
        ImportSpecifier
          Identifier: '
    AccessorDeclaration'
        ImportSpecifier
          Identifier: '
    AllDecorators'
        ImportSpecifier
          Identifier: '
    append'
        ImportSpecifier
          Identifier: '
    BinaryOperator'
        ImportSpecifier
          Identifier: '
    BindingElement'
        ImportSpecifier
          Identifier: '
    Bundle'
        ImportSpecifier
          Identifier: '
    cast'
        ImportSpecifier
          Identifier: '
    ClassDeclaration'
        ImportSpecifier
          Identifier: '
    ClassElement'
        ImportSpecifier
          Identifier: '
    ClassExpression'
        ImportSpecifier
          Identifier: '
    ClassLikeDeclaration'
        ImportSpecifier
          Identifier: '
    ClassStaticBlockDeclaration'
        ImportSpecifier
          Identifier: '
    CompoundAssignmentOperator'
        ImportSpecifier
          Identifier: '
    CoreTransformationContext'
        ImportSpecifier
          Identifier: '
    createExternalHelpersImportDeclarationIfNeeded'
        ImportSpecifier
          Identifier: '
    Decorator'
        ImportSpecifier
          Identifier: '
    every'
        ImportSpecifier
          Identifier: '
    ExportAssignment'
        ImportSpecifier
          Identifier: '
    ExportDeclaration'
        ImportSpecifier
          Identifier: '
    ExportSpecifier'
        ImportSpecifier
          Identifier: '
    Expression'
        ImportSpecifier
          Identifier: '
    filter'
        ImportSpecifier
          Identifier: '
    formatGeneratedName'
        ImportSpecifier
          Identifier: '
    FunctionDeclaration'
        ImportSpecifier
          Identifier: '
    FunctionLikeDeclaration'
        ImportSpecifier
          Identifier: '
    GeneratedIdentifierFlags'
        ImportSpecifier
          Identifier: '
    getAllAccessorDeclarations'
        ImportSpecifier
          Identifier: '
    getDecorators'
        ImportSpecifier
          Identifier: '
    getFirstConstructorWithBody'
        ImportSpecifier
          Identifier: '
    getNamespaceDeclarationNode'
        ImportSpecifier
          Identifier: '
    getNodeForGeneratedName'
        ImportSpecifier
          Identifier: '
    getNodeId'
        ImportSpecifier
          Identifier: '
    getOriginalNode'
        ImportSpecifier
          Identifier: '
    hasDecorators'
        ImportSpecifier
          Identifier: '
    hasStaticModifier'
        ImportSpecifier
          Identifier: '
    hasSyntacticModifier'
        ImportSpecifier
          Identifier: '
    Identifier'
        ImportSpecifier
          Identifier: '
    idText'
        ImportSpecifier
          Identifier: '
    ImportDeclaration'
        ImportSpecifier
          Identifier: '
    ImportEqualsDeclaration'
        ImportSpecifier
          Identifier: '
    ImportSpecifier'
        ImportSpecifier
          Identifier: '
    InitializedPropertyDeclaration'
        ImportSpecifier
          Identifier: '
    isAutoAccessorPropertyDeclaration'
        ImportSpecifier
          Identifier: '
    isBindingPattern'
        ImportSpecifier
          Identifier: '
    isClassStaticBlockDeclaration'
        ImportSpecifier
          Identifier: '
    isDefaultImport'
        ImportSpecifier
          Identifier: '
    isExpressionStatement'
        ImportSpecifier
          Identifier: '
    isFunctionDeclaration'
        ImportSpecifier
          Identifier: '
    isGeneratedIdentifier'
        ImportSpecifier
          Identifier: '
    isGeneratedPrivateIdentifier'
        ImportSpecifier
          Identifier: '
    isIdentifier'
        ImportSpecifier
          Identifier: '
    isKeyword'
        ImportSpecifier
          Identifier: '
    isLocalName'
        ImportSpecifier
          Identifier: '
    isMemberName'
        ImportSpecifier
          Identifier: '
    isMethodOrAccessor'
        ImportSpecifier
          Identifier: '
    isNamedExports'
        ImportSpecifier
          Identifier: '
    isNamedImports'
        ImportSpecifier
          Identifier: '
    isOmittedExpression'
        ImportSpecifier
          Identifier: '
    isPrivateIdentifier'
        ImportSpecifier
          Identifier: '
    isPropertyDeclaration'
        ImportSpecifier
          Identifier: '
    isStatic'
        ImportSpecifier
          Identifier: '
    isStringLiteralLike'
        ImportSpecifier
          Identifier: '
    isSuperCall'
        ImportSpecifier
          Identifier: '
    isTryStatement'
        ImportSpecifier
          Identifier: '
    LogicalOperatorOrHigher'
        ImportSpecifier
          Identifier: '
    map'
        ImportSpecifier
          Identifier: '
    MethodDeclaration'
        ImportSpecifier
          Identifier: '
    ModifierFlags'
        ImportSpecifier
          Identifier: '
    ModuleExportName'
        ImportSpecifier
          Identifier: '
    moduleExportNameIsDefault'
        ImportSpecifier
          Identifier: '
    moduleExportNameTextUnescaped'
        ImportSpecifier
          Identifier: '
    NamedExportBindings'
        ImportSpecifier
          Identifier: '
    NamedImportBindings'
        ImportSpecifier
          Identifier: '
    NamespaceExport'
        ImportSpecifier
          Identifier: '
    Node'
        ImportSpecifier
          Identifier: '
    NodeArray'
        ImportSpecifier
          Identifier: '
    ParameterDeclaration'
        ImportSpecifier
          Identifier: '
    parameterIsThisKeyword'
        ImportSpecifier
          Identifier: '
    PrivateIdentifier'
        ImportSpecifier
          Identifier: '
    PrivateIdentifierAccessorDeclaration'
        ImportSpecifier
          Identifier: '
    PrivateIdentifierAutoAccessorPropertyDeclaration'
        ImportSpecifier
          Identifier: '
    PrivateIdentifierMethodDeclaration'
        ImportSpecifier
          Identifier: '
    PropertyDeclaration'
        ImportSpecifier
          Identifier: '
    skipParentheses'
        ImportSpecifier
          Identifier: '
    some'
        ImportSpecifier
          Identifier: '
    SourceFile'
        ImportSpecifier
          Identifier: '
    Statement'
        ImportSpecifier
          Identifier: '
    SuperCall'
        ImportSpecifier
          Identifier: '
    SyntaxKind'
        ImportSpecifier
          Identifier: '
    TransformationContext'
        ImportSpecifier
          Identifier: '
    unorderedRemoveItem'
        ImportSpecifier
          Identifier: '
    VariableDeclaration'
        ImportSpecifier
          Identifier: '
    VariableStatement'
    StringLiteral
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getOriginalNodeId'
    Parameter
      Identifier: 'node'
      TypeReference
        Identifier: ' Node'
    NumberKeyword
    Block
      ExpressionStatement
        BinaryExpression
          Identifier: '
    node'
          EqualsToken
          CallExpression
            Identifier: ' getOriginalNode'
            Identifier: 'node'
      ReturnStatement
        ConditionalExpression
          Identifier: ' node'
          QuestionToken
          CallExpression
            Identifier: ' getNodeId'
            Identifier: 'node'
          ColonToken
          NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExternalModuleInfo'
    PropertySignature
      Identifier: '
    externalImports'
      ArrayType
        ParenthesizedType
          UnionType
            TypeReference
              Identifier: 'ImportDeclaration'
            TypeReference
              Identifier: ' ImportEqualsDeclaration'
            TypeReference
              Identifier: ' ExportDeclaration'
    PropertySignature
      Identifier: ' // imports of other external modules
    externalHelpersImportDeclaration'
      UnionType
        TypeReference
          Identifier: ' ImportDeclaration'
        TypeReference
          Identifier: ' ImportEqualsDeclaration'
        UndefinedKeyword
    PropertySignature
      Identifier: ' // import of external helpers
    exportSpecifiers'
      TypeReference
        Identifier: ' IdentifierNameMap'
        ArrayType
          TypeReference
            Identifier: 'ExportSpecifier'
    PropertySignature
      Identifier: ' // file-local export specifiers by name (no reexports)
    exportedBindings'
      ArrayType
        ArrayType
          TypeReference
            Identifier: ' Identifier'
    PropertySignature
      Identifier: ' // exported names of local declarations
    exportedNames'
      UnionType
        ArrayType
          TypeReference
            Identifier: ' ModuleExportName'
        UndefinedKeyword
    PropertySignature
      Identifier: ' // all exported names in the module, both local and reexported, excluding the names of locally exported function declarations
    exportedFunctions'
      TypeReference
        Identifier: ' Set'
        TypeReference
          Identifier: 'FunctionDeclaration'
    PropertySignature
      Identifier: ' // all of the top-level exported function declarations
    exportEquals'
      UnionType
        TypeReference
          Identifier: ' ExportAssignment'
        UndefinedKeyword
    PropertySignature
      Identifier: ' // an export= declaration if one was present
    hasExportStarsToExportValues'
      BooleanKeyword
  FunctionDeclaration
    Identifier: ' containsDefaultReference'
    Parameter
      Identifier: 'node'
      UnionType
        TypeReference
          Identifier: ' NamedImportBindings'
        TypeReference
          Identifier: ' NamedExportBindings'
        UndefinedKeyword
    Block
      IfStatement
        PrefixUnaryExpression
          Identifier: 'node'
        ReturnStatement
          FalseKeyword
      IfStatement
        BinaryExpression
          PrefixUnaryExpression
            CallExpression
              Identifier: 'isNamedImports'
              Identifier: 'node'
          AmpersandAmpersandToken
          PrefixUnaryExpression
            CallExpression
              Identifier: 'isNamedExports'
              Identifier: 'node'
        ReturnStatement
          FalseKeyword
      ReturnStatement
        CallExpression
          Identifier: ' some'
          PropertyAccessExpression
            Identifier: 'node'
            Identifier: 'elements'
          Identifier: ' isNamedDefaultReference'
  FunctionDeclaration
    Identifier: ' isNamedDefaultReference'
    Parameter
      Identifier: 'e'
      UnionType
        TypeReference
          Identifier: ' ImportSpecifier'
        TypeReference
          Identifier: ' ExportSpecifier'
    BooleanKeyword
    Block
      ReturnStatement
        CallExpression
          Identifier: ' moduleExportNameIsDefault'
          BinaryExpression
            PropertyAccessExpression
              Identifier: 'e'
              Identifier: 'propertyName'
            BarBarToken
            PropertyAccessExpression
              Identifier: ' e'
              Identifier: 'name'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' chainBundle'
    Parameter
      Identifier: 'context'
      TypeReference
        Identifier: ' CoreTransformationContext'
    Parameter
      Identifier: ' transformSourceFile'
      FunctionType
        Parameter
          Identifier: 'x'
          TypeReference
            Identifier: ' SourceFile'
        TypeReference
          Identifier: ' SourceFile'
    FunctionType
      Parameter
        Identifier: 'x'
        UnionType
          TypeReference
            Identifier: ' SourceFile'
          TypeReference
            Identifier: ' Bundle'
      UnionType
        TypeReference
          Identifier: ' SourceFile'
        TypeReference
          Identifier: ' Bundle'
    Block
      ReturnStatement
        Identifier: ' transformSourceFileOrBundle'
      FunctionDeclaration
        Identifier: ' transformSourceFileOrBundle'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' SourceFile'
            TypeReference
              Identifier: ' Bundle'
        Block
          ReturnStatement
            ConditionalExpression
              BinaryExpression
                PropertyAccessExpression
                  Identifier: ' node'
                  Identifier: 'kind'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'SourceFile'
              QuestionToken
              CallExpression
                Identifier: ' transformSourceFile'
                Identifier: 'node'
              ColonToken
              CallExpression
                Identifier: ' transformBundle'
                Identifier: 'node'
      FunctionDeclaration
        Identifier: ' transformBundle'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Bundle'
        Block
          ReturnStatement
            CallExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: ' context'
                  Identifier: 'factory'
                Identifier: 'createBundle'
              CallExpression
                Identifier: 'map'
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'sourceFiles'
                Identifier: ' transformSourceFile'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getExportNeedsImportStarHelper'
    Parameter
      Identifier: 'node'
      TypeReference
        Identifier: ' ExportDeclaration'
    BooleanKeyword
    Block
      ReturnStatement
        PrefixUnaryExpression
          PrefixUnaryExpression
            CallExpression
              Identifier: 'getNamespaceDeclarationNode'
              Identifier: 'node'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getImportNeedsImportStarHelper'
    Parameter
      Identifier: 'node'
      TypeReference
        Identifier: ' ImportDeclaration'
    BooleanKeyword
    Block
      IfStatement
        PrefixUnaryExpression
          PrefixUnaryExpression
            CallExpression
              Identifier: 'getNamespaceDeclarationNode'
              Identifier: 'node'
        Block
          ReturnStatement
            TrueKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' bindings'
            BinaryExpression
              PropertyAccessExpression
                Identifier: ' node'
                Identifier: 'importClause'
              AmpersandAmpersandToken
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: ' node'
                  Identifier: 'importClause'
                Identifier: 'namedBindings'
      IfStatement
        PrefixUnaryExpression
          Identifier: 'bindings'
        Block
          ReturnStatement
            FalseKeyword
      IfStatement
        PrefixUnaryExpression
          CallExpression
            Identifier: 'isNamedImports'
            Identifier: 'bindings'
        ReturnStatement
          FalseKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' defaultRefCount'
            NumericLiteral
      ForOfStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' binding'
        PropertyAccessExpression
          Identifier: ' bindings'
          Identifier: 'elements'
        Block
          IfStatement
            CallExpression
              Identifier: 'isNamedDefaultReference'
              Identifier: 'binding'
            Block
              ExpressionStatement
                PostfixUnaryExpression
                  Identifier: '
            defaultRefCount'
      ReturnStatement
        BinaryExpression
          ParenthesizedExpression
            BinaryExpression
              BinaryExpression
                Identifier: 'defaultRefCount'
                GreaterThanToken
                NumericLiteral
              AmpersandAmpersandToken
              BinaryExpression
                Identifier: ' defaultRefCount'
                ExclamationEqualsEqualsToken
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: ' bindings'
                    Identifier: 'elements'
                  Identifier: 'length'
          BarBarToken
          ParenthesizedExpression
            BinaryExpression
              PrefixUnaryExpression
                PrefixUnaryExpression
                  ParenthesizedExpression
                    BinaryExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: 'bindings'
                          Identifier: 'elements'
                        Identifier: 'length'
                      MinusToken
                      Identifier: ' defaultRefCount'
              AmpersandAmpersandToken
              CallExpression
                Identifier: ' isDefaultImport'
                Identifier: 'node'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getImportNeedsImportDefaultHelper'
    Parameter
      Identifier: 'node'
      TypeReference
        Identifier: ' ImportDeclaration'
    BooleanKeyword
    Block
      ReturnStatement
        BinaryExpression
          PrefixUnaryExpression
            CallExpression
              Identifier: 'getImportNeedsImportStarHelper'
              Identifier: 'node'
          AmpersandAmpersandToken
          ParenthesizedExpression
            BinaryExpression
              CallExpression
                Identifier: 'isDefaultImport'
                Identifier: 'node'
              BarBarToken
              ParenthesizedExpression
                BinaryExpression
                  BinaryExpression
                    PrefixUnaryExpression
                      PrefixUnaryExpression
                        PropertyAccessExpression
                          Identifier: 'node'
                          Identifier: 'importClause'
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: ' isNamedImports'
                      NonNullExpression
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: 'node'
                            Identifier: 'importClause'
                          Identifier: 'namedBindings'
                  AmpersandAmpersandToken
                  CallExpression
                    Identifier: ' containsDefaultReference'
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'importClause'
                      Identifier: 'namedBindings'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' collectExternalModuleInfo'
    Parameter
      Identifier: 'context'
      TypeReference
        Identifier: ' TransformationContext'
    Parameter
      Identifier: ' sourceFile'
      TypeReference
        Identifier: ' SourceFile'
    TypeReference
      Identifier: ' ExternalModuleInfo'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' resolver'
            CallExpression
              PropertyAccessExpression
                Identifier: ' context'
                Identifier: 'getEmitResolver'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' compilerOptions'
            CallExpression
              PropertyAccessExpression
                Identifier: ' context'
                Identifier: 'getCompilerOptions'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' externalImports'
            ArrayType
              ParenthesizedType
                UnionType
                  TypeReference
                    Identifier: 'ImportDeclaration'
                  TypeReference
                    Identifier: ' ImportEqualsDeclaration'
                  TypeReference
                    Identifier: ' ExportDeclaration'
            ArrayLiteralExpression
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' exportSpecifiers'
            NewExpression
              Identifier: ' IdentifierNameMultiMap'
              TypeReference
                Identifier: 'ExportSpecifier'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' exportedBindings'
            ArrayType
              ArrayType
                TypeReference
                  Identifier: ' Identifier'
            ArrayLiteralExpression
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' uniqueExports'
            NewExpression
              Identifier: ' Map'
              StringKeyword
              BooleanKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' exportedFunctions'
            NewExpression
              Identifier: ' Set'
              TypeReference
                Identifier: 'FunctionDeclaration'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' exportedNames'
            UnionType
              ArrayType
                TypeReference
                  Identifier: ' ModuleExportName'
              UndefinedKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' hasExportDefault'
            FalseKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' exportEquals'
            UnionType
              TypeReference
                Identifier: ' ExportAssignment'
              UndefinedKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' hasExportStarsToExportValues'
            FalseKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' hasImportStar'
            FalseKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' hasImportDefault'
            FalseKeyword
      ForOfStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' node'
        PropertyAccessExpression
          Identifier: ' sourceFile'
          Identifier: 'statements'
        Block
          SwitchStatement
            PropertyAccessExpression
              Identifier: 'node'
              Identifier: 'kind'
            CaseBlock
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ImportDeclaration'
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
                // import "mod"
                // import x from "mod"
                // import * as x from "mod"
                // import { x, y } from "mod"
                externalImports'
                      Identifier: 'push'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' ImportDeclaration'
                IfStatement
                  BinaryExpression
                    PrefixUnaryExpression
                      Identifier: 'hasImportStar'
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: ' getImportNeedsImportStarHelper'
                      AsExpression
                        Identifier: 'node'
                        TypeReference
                          Identifier: ' ImportDeclaration'
                  Block
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    hasImportStar'
                        EqualsToken
                        TrueKeyword
                IfStatement
                  BinaryExpression
                    PrefixUnaryExpression
                      Identifier: 'hasImportDefault'
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: ' getImportNeedsImportDefaultHelper'
                      AsExpression
                        Identifier: 'node'
                        TypeReference
                          Identifier: ' ImportDeclaration'
                  Block
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    hasImportDefault'
                        EqualsToken
                        TrueKeyword
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ImportEqualsDeclaration'
                IfStatement
                  BinaryExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        ParenthesizedExpression
                          AsExpression
                            Identifier: 'node'
                            TypeReference
                              Identifier: ' ImportEqualsDeclaration'
                        Identifier: 'moduleReference'
                      Identifier: 'kind'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'ExternalModuleReference'
                  Block
                    ExpressionStatement
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                    // import x = require("mod")
                    externalImports'
                          Identifier: 'push'
                        AsExpression
                          Identifier: 'node'
                          TypeReference
                            Identifier: ' ImportEqualsDeclaration'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ExportDeclaration'
                IfStatement
                  PropertyAccessExpression
                    ParenthesizedExpression
                      AsExpression
                        Identifier: 'node'
                        TypeReference
                          Identifier: ' ExportDeclaration'
                    Identifier: 'moduleSpecifier'
                  Block
                    IfStatement
                      PrefixUnaryExpression
                        PropertyAccessExpression
                          ParenthesizedExpression
                            AsExpression
                              Identifier: 'node'
                              TypeReference
                                Identifier: ' ExportDeclaration'
                          Identifier: 'exportClause'
                      Block
                        ExpressionStatement
                          CallExpression
                            PropertyAccessExpression
                              Identifier: '
                        // export * from "mod"
                        externalImports'
                              Identifier: 'push'
                            AsExpression
                              Identifier: 'node'
                              TypeReference
                                Identifier: ' ExportDeclaration'
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        hasExportStarsToExportValues'
                            EqualsToken
                            TrueKeyword
                      Block
                        ExpressionStatement
                          CallExpression
                            PropertyAccessExpression
                              Identifier: '
                        // export * as ns from "mod"
                        // export { x, y } from "mod"
                        externalImports'
                              Identifier: 'push'
                            AsExpression
                              Identifier: 'node'
                              TypeReference
                                Identifier: ' ExportDeclaration'
                        IfStatement
                          CallExpression
                            Identifier: 'isNamedExports'
                            NonNullExpression
                              PropertyAccessExpression
                                ParenthesizedExpression
                                  AsExpression
                                    Identifier: 'node'
                                    TypeReference
                                      Identifier: ' ExportDeclaration'
                                Identifier: 'exportClause'
                          Block
                            ExpressionStatement
                              CallExpression
                                Identifier: '
                            addExportedNamesForExportDeclaration'
                                AsExpression
                                  Identifier: 'node'
                                  TypeReference
                                    Identifier: ' ExportDeclaration'
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                            hasImportDefault'
                                BarBarEqualsToken
                                CallExpression
                                  Identifier: ' containsDefaultReference'
                                  PropertyAccessExpression
                                    ParenthesizedExpression
                                      AsExpression
                                        Identifier: 'node'
                                        TypeReference
                                          Identifier: ' ExportDeclaration'
                                    Identifier: 'exportClause'
                          Block
                            VariableStatement
                              VariableDeclarationList
                                VariableDeclaration
                                  Identifier: ' name'
                                  PropertyAccessExpression
                                    ParenthesizedExpression
                                      AsExpression
                                        PropertyAccessExpression
                                          ParenthesizedExpression
                                            AsExpression
                                              Identifier: 'node'
                                              TypeReference
                                                Identifier: ' ExportDeclaration'
                                          Identifier: 'exportClause'
                                        TypeReference
                                          Identifier: ' NamespaceExport'
                                    Identifier: 'name'
                            VariableStatement
                              VariableDeclarationList
                                VariableDeclaration
                                  Identifier: ' nameText'
                                  CallExpression
                                    Identifier: ' moduleExportNameTextUnescaped'
                                    Identifier: 'name'
                            IfStatement
                              PrefixUnaryExpression
                                CallExpression
                                  PropertyAccessExpression
                                    Identifier: 'uniqueExports'
                                    Identifier: 'get'
                                  Identifier: 'nameText'
                              Block
                                ExpressionStatement
                                  CallExpression
                                    Identifier: '
                                multiMapSparseArrayAdd'
                                    Identifier: 'exportedBindings'
                                    CallExpression
                                      Identifier: ' getOriginalNodeId'
                                      Identifier: 'node'
                                    Identifier: ' name'
                                ExpressionStatement
                                  CallExpression
                                    PropertyAccessExpression
                                      Identifier: '
                                uniqueExports'
                                      Identifier: 'set'
                                    Identifier: 'nameText'
                                    TrueKeyword
                                ExpressionStatement
                                  BinaryExpression
                                    Identifier: '
                                exportedNames'
                                    EqualsToken
                                    CallExpression
                                      Identifier: ' append'
                                      Identifier: 'exportedNames'
                                      Identifier: ' name'
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                            // we use the same helpers for `export * as ns` as we do for `import * as ns`
                            hasImportStar'
                                EqualsToken
                                TrueKeyword
                  Block
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                    // export { x, y }
                    addExportedNamesForExportDeclaration'
                        AsExpression
                          Identifier: 'node'
                          TypeReference
                            Identifier: ' ExportDeclaration'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ExportAssignment'
                IfStatement
                  BinaryExpression
                    PropertyAccessExpression
                      ParenthesizedExpression
                        AsExpression
                          Identifier: 'node'
                          TypeReference
                            Identifier: ' ExportAssignment'
                      Identifier: 'isExportEquals'
                    AmpersandAmpersandToken
                    PrefixUnaryExpression
                      Identifier: 'exportEquals'
                  Block
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    // export = x
                    exportEquals'
                        EqualsToken
                        AsExpression
                          Identifier: ' node'
                          TypeReference
                            Identifier: ' ExportAssignment'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'VariableStatement'
                IfStatement
                  CallExpression
                    Identifier: 'hasSyntacticModifier'
                    Identifier: 'node'
                    PropertyAccessExpression
                      Identifier: ' ModifierFlags'
                      Identifier: 'Export'
                  Block
                    ForOfStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' decl'
                      PropertyAccessExpression
                        PropertyAccessExpression
                          ParenthesizedExpression
                            AsExpression
                              Identifier: 'node'
                              TypeReference
                                Identifier: ' VariableStatement'
                          Identifier: 'declarationList'
                        Identifier: 'declarations'
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        exportedNames'
                            EqualsToken
                            CallExpression
                              Identifier: ' collectExportedVariableInfo'
                              Identifier: 'decl'
                              Identifier: ' uniqueExports'
                              Identifier: ' exportedNames'
                              Identifier: ' exportedBindings'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'FunctionDeclaration'
                IfStatement
                  CallExpression
                    Identifier: 'hasSyntacticModifier'
                    Identifier: 'node'
                    PropertyAccessExpression
                      Identifier: ' ModifierFlags'
                      Identifier: 'Export'
                  Block
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                    addExportedFunctionDeclaration'
                        AsExpression
                          Identifier: 'node'
                          TypeReference
                            Identifier: ' FunctionDeclaration'
                        Identifier: ' /*name*/ undefined'
                        CallExpression
                          Identifier: ' hasSyntacticModifier'
                          Identifier: 'node'
                          PropertyAccessExpression
                            Identifier: ' ModifierFlags'
                            Identifier: 'Default'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ClassDeclaration'
                IfStatement
                  CallExpression
                    Identifier: 'hasSyntacticModifier'
                    Identifier: 'node'
                    PropertyAccessExpression
                      Identifier: ' ModifierFlags'
                      Identifier: 'Export'
                  Block
                    IfStatement
                      CallExpression
                        Identifier: 'hasSyntacticModifier'
                        Identifier: 'node'
                        PropertyAccessExpression
                          Identifier: ' ModifierFlags'
                          Identifier: 'Default'
                      Block
                        IfStatement
                          PrefixUnaryExpression
                            Identifier: 'hasExportDefault'
                          Block
                            ExpressionStatement
                              CallExpression
                                Identifier: '
                            multiMapSparseArrayAdd'
                                Identifier: 'exportedBindings'
                                CallExpression
                                  Identifier: ' getOriginalNodeId'
                                  Identifier: 'node'
                                CallExpression
                                  PropertyAccessExpression
                                    PropertyAccessExpression
                                      Identifier: ' context'
                                      Identifier: 'factory'
                                    Identifier: 'getDeclarationName'
                                  AsExpression
                                    Identifier: 'node'
                                    TypeReference
                                      Identifier: ' ClassDeclaration'
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                            hasExportDefault'
                                EqualsToken
                                TrueKeyword
                      Block
                        VariableStatement
                          VariableDeclarationList
                            VariableDeclaration
                              Identifier: ' name'
                              PropertyAccessExpression
                                ParenthesizedExpression
                                  AsExpression
                                    Identifier: 'node'
                                    TypeReference
                                      Identifier: ' ClassDeclaration'
                                Identifier: 'name'
                        IfStatement
                          BinaryExpression
                            Identifier: 'name'
                            AmpersandAmpersandToken
                            PrefixUnaryExpression
                              CallExpression
                                PropertyAccessExpression
                                  Identifier: 'uniqueExports'
                                  Identifier: 'get'
                                CallExpression
                                  Identifier: 'idText'
                                  Identifier: 'name'
                          Block
                            ExpressionStatement
                              CallExpression
                                Identifier: '
                            multiMapSparseArrayAdd'
                                Identifier: 'exportedBindings'
                                CallExpression
                                  Identifier: ' getOriginalNodeId'
                                  Identifier: 'node'
                                Identifier: ' name'
                            ExpressionStatement
                              CallExpression
                                PropertyAccessExpression
                                  Identifier: '
                            uniqueExports'
                                  Identifier: 'set'
                                CallExpression
                                  Identifier: 'idText'
                                  Identifier: 'name'
                                TrueKeyword
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                            exportedNames'
                                EqualsToken
                                CallExpression
                                  Identifier: ' append'
                                  Identifier: 'exportedNames'
                                  Identifier: ' name'
                BreakStatement
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' externalHelpersImportDeclaration'
            CallExpression
              Identifier: ' createExternalHelpersImportDeclarationIfNeeded'
              PropertyAccessExpression
                Identifier: 'context'
                Identifier: 'factory'
              CallExpression
                PropertyAccessExpression
                  Identifier: ' context'
                  Identifier: 'getEmitHelperFactory'
              Identifier: ' sourceFile'
              Identifier: ' compilerOptions'
              Identifier: ' hasExportStarsToExportValues'
              Identifier: ' hasImportStar'
              Identifier: ' hasImportDefault'
      IfStatement
        Identifier: 'externalHelpersImportDeclaration'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        externalImports'
                Identifier: 'unshift'
              Identifier: 'externalHelpersImportDeclaration'
      ReturnStatement
        ObjectLiteralExpression
          ShorthandPropertyAssignment
            Identifier: ' externalImports'
          ShorthandPropertyAssignment
            Identifier: ' exportSpecifiers'
          ShorthandPropertyAssignment
            Identifier: ' exportEquals'
          ShorthandPropertyAssignment
            Identifier: ' hasExportStarsToExportValues'
          ShorthandPropertyAssignment
            Identifier: ' exportedBindings'
          ShorthandPropertyAssignment
            Identifier: ' exportedNames'
          ShorthandPropertyAssignment
            Identifier: ' exportedFunctions'
          ShorthandPropertyAssignment
            Identifier: ' externalHelpersImportDeclaration'
      FunctionDeclaration
        Identifier: ' addExportedNamesForExportDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' ExportDeclaration'
        Block
          ForOfStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' specifier'
            PropertyAccessExpression
              CallExpression
                Identifier: ' cast'
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'exportClause'
                Identifier: ' isNamedExports'
              Identifier: 'elements'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' specifierNameText'
                    CallExpression
                      Identifier: ' moduleExportNameTextUnescaped'
                      PropertyAccessExpression
                        Identifier: 'specifier'
                        Identifier: 'name'
              IfStatement
                PrefixUnaryExpression
                  CallExpression
                    PropertyAccessExpression
                      Identifier: 'uniqueExports'
                      Identifier: 'get'
                    Identifier: 'specifierNameText'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' name'
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: ' specifier'
                            Identifier: 'propertyName'
                          BarBarToken
                          PropertyAccessExpression
                            Identifier: ' specifier'
                            Identifier: 'name'
                  IfStatement
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: 'name'
                        Identifier: 'kind'
                      ExclamationEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'StringLiteral'
                    Block
                      IfStatement
                        PrefixUnaryExpression
                          PropertyAccessExpression
                            Identifier: 'node'
                            Identifier: 'moduleSpecifier'
                        Block
                          ExpressionStatement
                            CallExpression
                              PropertyAccessExpression
                                Identifier: '
                        exportSpecifiers'
                                Identifier: 'add'
                              Identifier: 'name'
                              Identifier: ' specifier'
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' decl'
                            BinaryExpression
                              CallExpression
                                PropertyAccessExpression
                                  Identifier: ' resolver'
                                  Identifier: 'getReferencedImportDeclaration'
                                Identifier: 'name'
                              BarBarToken
                              CallExpression
                                PropertyAccessExpression
                                  Identifier: ' resolver'
                                  Identifier: 'getReferencedValueDeclaration'
                                Identifier: 'name'
                      IfStatement
                        Identifier: 'decl'
                        Block
                          IfStatement
                            BinaryExpression
                              PropertyAccessExpression
                                Identifier: 'decl'
                                Identifier: 'kind'
                              EqualsEqualsEqualsToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'FunctionDeclaration'
                            Block
                              ExpressionStatement
                                CallExpression
                                  Identifier: '
                            addExportedFunctionDeclaration'
                                  AsExpression
                                    Identifier: 'decl'
                                    TypeReference
                                      Identifier: ' FunctionDeclaration'
                                  PropertyAccessExpression
                                    Identifier: ' specifier'
                                    Identifier: 'name'
                                  CallExpression
                                    Identifier: ' moduleExportNameIsDefault'
                                    PropertyAccessExpression
                                      Identifier: 'specifier'
                                      Identifier: 'name'
                              ContinueStatement
                          ExpressionStatement
                            CallExpression
                              Identifier: '

                        multiMapSparseArrayAdd'
                              Identifier: 'exportedBindings'
                              CallExpression
                                Identifier: ' getOriginalNodeId'
                                Identifier: 'decl'
                              PropertyAccessExpression
                                Identifier: ' specifier'
                                Identifier: 'name'
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '

                uniqueExports'
                        Identifier: 'set'
                      Identifier: 'specifierNameText'
                      TrueKeyword
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                exportedNames'
                      EqualsToken
                      CallExpression
                        Identifier: ' append'
                        Identifier: 'exportedNames'
                        PropertyAccessExpression
                          Identifier: ' specifier'
                          Identifier: 'name'
      FunctionDeclaration
        Identifier: ' addExportedFunctionDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' FunctionDeclaration'
        Parameter
          Identifier: ' name'
          UnionType
            TypeReference
              Identifier: ' ModuleExportName'
            UndefinedKeyword
        Parameter
          Identifier: ' isDefault'
          BooleanKeyword
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        exportedFunctions'
                Identifier: 'add'
              CallExpression
                Identifier: 'getOriginalNode'
                Identifier: 'node'
                Identifier: ' isFunctionDeclaration'
          IfStatement
            Identifier: 'isDefault'
            Block
              IfStatement
                PrefixUnaryExpression
                  Identifier: 'hasExportDefault'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                multiMapSparseArrayAdd'
                      Identifier: 'exportedBindings'
                      CallExpression
                        Identifier: ' getOriginalNodeId'
                        Identifier: 'node'
                      BinaryExpression
                        Identifier: ' name'
                        QuestionQuestionToken
                        CallExpression
                          PropertyAccessExpression
                            PropertyAccessExpression
                              Identifier: ' context'
                              Identifier: 'factory'
                            Identifier: 'getDeclarationName'
                          Identifier: 'node'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                hasExportDefault'
                      EqualsToken
                      TrueKeyword
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            // export function x() { }
            // function x() { } + export { x }
            name'
                  QuestionQuestionEqualsToken
                  NonNullExpression
                    PropertyAccessExpression
                      Identifier: ' node'
                      Identifier: 'name'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' nameText'
                    CallExpression
                      Identifier: ' moduleExportNameTextUnescaped'
                      Identifier: 'name'
              IfStatement
                PrefixUnaryExpression
                  CallExpression
                    PropertyAccessExpression
                      Identifier: 'uniqueExports'
                      Identifier: 'get'
                    Identifier: 'nameText'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                multiMapSparseArrayAdd'
                      Identifier: 'exportedBindings'
                      CallExpression
                        Identifier: ' getOriginalNodeId'
                        Identifier: 'node'
                      Identifier: ' name'
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                uniqueExports'
                        Identifier: 'set'
                      Identifier: 'nameText'
                      TrueKeyword
  FunctionDeclaration
    Identifier: ' collectExportedVariableInfo'
    Parameter
      Identifier: 'decl'
      UnionType
        TypeReference
          Identifier: ' VariableDeclaration'
        TypeReference
          Identifier: ' BindingElement'
    Parameter
      Identifier: ' uniqueExports'
      TypeReference
        Identifier: ' Map'
        StringKeyword
        BooleanKeyword
    Parameter
      Identifier: ' exportedNames'
      UnionType
        ArrayType
          TypeReference
            Identifier: ' ModuleExportName'
        UndefinedKeyword
    Parameter
      Identifier: ' exportedBindings'
      ArrayType
        ArrayType
          TypeReference
            Identifier: ' Identifier'
    Block
      IfStatement
        CallExpression
          Identifier: 'isBindingPattern'
          PropertyAccessExpression
            Identifier: 'decl'
            Identifier: 'name'
        Block
          ForOfStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' element'
            PropertyAccessExpression
              PropertyAccessExpression
                Identifier: ' decl'
                Identifier: 'name'
              Identifier: 'elements'
            Block
              IfStatement
                PrefixUnaryExpression
                  CallExpression
                    Identifier: 'isOmittedExpression'
                    Identifier: 'element'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                exportedNames'
                      EqualsToken
                      CallExpression
                        Identifier: ' collectExportedVariableInfo'
                        Identifier: 'element'
                        Identifier: ' uniqueExports'
                        Identifier: ' exportedNames'
                        Identifier: ' exportedBindings'
        IfStatement
          PrefixUnaryExpression
            CallExpression
              Identifier: 'isGeneratedIdentifier'
              PropertyAccessExpression
                Identifier: 'decl'
                Identifier: 'name'
          Block
            VariableStatement
              VariableDeclarationList
                VariableDeclaration
                  Identifier: ' text'
                  CallExpression
                    Identifier: ' idText'
                    PropertyAccessExpression
                      Identifier: 'decl'
                      Identifier: 'name'
            IfStatement
              PrefixUnaryExpression
                CallExpression
                  PropertyAccessExpression
                    Identifier: 'uniqueExports'
                    Identifier: 'get'
                  Identifier: 'text'
              Block
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
            uniqueExports'
                      Identifier: 'set'
                    Identifier: 'text'
                    TrueKeyword
                ExpressionStatement
                  BinaryExpression
                    Identifier: '
            exportedNames'
                    EqualsToken
                    CallExpression
                      Identifier: ' append'
                      Identifier: 'exportedNames'
                      PropertyAccessExpression
                        Identifier: ' decl'
                        Identifier: 'name'
                IfStatement
                  CallExpression
                    Identifier: 'isLocalName'
                    PropertyAccessExpression
                      Identifier: 'decl'
                      Identifier: 'name'
                  Block
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                multiMapSparseArrayAdd'
                        Identifier: 'exportedBindings'
                        CallExpression
                          Identifier: ' getOriginalNodeId'
                          Identifier: 'decl'
                        PropertyAccessExpression
                          Identifier: ' decl'
                          Identifier: 'name'
      ReturnStatement
        Identifier: ' exportedNames'
  FunctionDeclaration
    Identifier: ' multiMapSparseArrayAdd'
    TypeParameter
      Identifier: 'V'
    Parameter
      Identifier: 'map'
      ArrayType
        ArrayType
          TypeReference
            Identifier: ' V'
    Parameter
      Identifier: ' key'
      NumberKeyword
    Parameter
      Identifier: ' value'
      TypeReference
        Identifier: ' V'
    ArrayType
      TypeReference
        Identifier: ' V'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' values'
            ElementAccessExpression
              Identifier: ' map'
              Identifier: 'key'
      IfStatement
        Identifier: 'values'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        values'
                Identifier: 'push'
              Identifier: 'value'
        Block
          ExpressionStatement
            BinaryExpression
              ElementAccessExpression
                Identifier: '
        map'
                Identifier: 'key'
              EqualsToken
              BinaryExpression
                Identifier: ' values'
                EqualsToken
                ArrayLiteralExpression
                  Identifier: 'value'
      ReturnStatement
        Identifier: ' values'
  ClassDeclaration
    ExportKeyword
    Identifier: ' IdentifierNameMap'
    TypeParameter
      Identifier: 'V'
    PropertyDeclaration
      PrivateKeyword
      ReadonlyKeyword
      Identifier: ' _map'
      NewExpression
        Identifier: ' Map'
        StringKeyword
        TypeReference
          Identifier: ' V'
    GetAccessor
      Identifier: ' size'
      NumberKeyword
      Block
        ReturnStatement
          PropertyAccessExpression
            PropertyAccessExpression
              ThisKeyword
              Identifier: '_map'
            Identifier: 'size'
    MethodDeclaration
      Identifier: '

    has'
      Parameter
        Identifier: 'key'
        TypeReference
          Identifier: ' Identifier'
      BooleanKeyword
      Block
        ReturnStatement
          CallExpression
            PropertyAccessExpression
              PropertyAccessExpression
                ThisKeyword
                Identifier: '_map'
              Identifier: 'has'
            CallExpression
              PropertyAccessExpression
                Identifier: 'IdentifierNameMap'
                Identifier: 'toKey'
              Identifier: 'key'
    MethodDeclaration
      Identifier: '

    get'
      Parameter
        Identifier: 'key'
        TypeReference
          Identifier: ' Identifier'
      UnionType
        TypeReference
          Identifier: ' V'
        UndefinedKeyword
      Block
        ReturnStatement
          CallExpression
            PropertyAccessExpression
              PropertyAccessExpression
                ThisKeyword
                Identifier: '_map'
              Identifier: 'get'
            CallExpression
              PropertyAccessExpression
                Identifier: 'IdentifierNameMap'
                Identifier: 'toKey'
              Identifier: 'key'
    MethodDeclaration
      Identifier: '

    set'
      Parameter
        Identifier: 'key'
        TypeReference
          Identifier: ' Identifier'
      Parameter
        Identifier: ' value'
        TypeReference
          Identifier: ' V'
      ThisType
      Block
        ExpressionStatement
          CallExpression
            PropertyAccessExpression
              PropertyAccessExpression
                ThisKeyword
                Identifier: '_map'
              Identifier: 'set'
            CallExpression
              PropertyAccessExpression
                Identifier: 'IdentifierNameMap'
                Identifier: 'toKey'
              Identifier: 'key'
            Identifier: ' value'
        ReturnStatement
          ThisKeyword
    MethodDeclaration
      Identifier: '

    delete'
      Parameter
        Identifier: 'key'
        TypeReference
          Identifier: ' Identifier'
      BooleanKeyword
      Block
        ReturnStatement
          BinaryExpression
            CallExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  ThisKeyword
                  Identifier: '_map'
                QuestionDotToken
                Identifier: 'delete'
              CallExpression
                PropertyAccessExpression
                  Identifier: 'IdentifierNameMap'
                  Identifier: 'toKey'
                Identifier: 'key'
            QuestionQuestionToken
            FalseKeyword
    MethodDeclaration
      Identifier: '

    clear'
      VoidKeyword
      Block
        ExpressionStatement
          CallExpression
            PropertyAccessExpression
              PropertyAccessExpression
                ThisKeyword
                Identifier: '_map'
              Identifier: 'clear'
    MethodDeclaration
      Identifier: '

    values'
      TypeReference
        Identifier: ' MapIterator'
        TypeReference
          Identifier: 'V'
      Block
        ReturnStatement
          CallExpression
            PropertyAccessExpression
              PropertyAccessExpression
                ThisKeyword
                Identifier: '_map'
              Identifier: 'values'
    MethodDeclaration
      PrivateKeyword
      StaticKeyword
      Identifier: ' toKey'
      Parameter
        Identifier: 'name'
        UnionType
          TypeReference
            Identifier: ' Identifier'
          TypeReference
            Identifier: ' PrivateIdentifier'
      StringKeyword
      Block
        IfStatement
          BinaryExpression
            CallExpression
              Identifier: 'isGeneratedPrivateIdentifier'
              Identifier: 'name'
            BarBarToken
            CallExpression
              Identifier: ' isGeneratedIdentifier'
              Identifier: 'name'
          Block
            VariableStatement
              VariableDeclarationList
                VariableDeclaration
                  Identifier: ' autoGenerate'
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: ' name'
                      Identifier: 'emitNode'
                    Identifier: 'autoGenerate'
            IfStatement
              BinaryExpression
                ParenthesizedExpression
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: 'autoGenerate'
                      Identifier: 'flags'
                    AmpersandToken
                    PropertyAccessExpression
                      Identifier: ' GeneratedIdentifierFlags'
                      Identifier: 'KindMask'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' GeneratedIdentifierFlags'
                  Identifier: 'Node'
              Block
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' node'
                      CallExpression
                        Identifier: ' getNodeForGeneratedName'
                        Identifier: 'name'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' baseName'
                      ConditionalExpression
                        BinaryExpression
                          CallExpression
                            Identifier: ' isMemberName'
                            Identifier: 'node'
                          AmpersandAmpersandToken
                          BinaryExpression
                            Identifier: ' node'
                            ExclamationEqualsEqualsToken
                            Identifier: ' name'
                        QuestionToken
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' IdentifierNameMap'
                            Identifier: 'toKey'
                          Identifier: 'node'
                        ColonToken
                        TemplateExpression
                          TemplateHead
                          TemplateSpan
                            CallExpression
                              Identifier: 'getNodeId'
                              Identifier: 'node'
                            TemplateTail
                ReturnStatement
                  CallExpression
                    Identifier: ' formatGeneratedName'
                    FalseKeyword
                    PropertyAccessExpression
                      Identifier: ' autoGenerate'
                      Identifier: 'prefix'
                    Identifier: ' baseName'
                    PropertyAccessExpression
                      Identifier: ' autoGenerate'
                      Identifier: 'suffix'
                    PropertyAccessExpression
                      Identifier: ' IdentifierNameMap'
                      Identifier: 'toKey'
              Block
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' baseName'
                      TemplateExpression
                        TemplateHead
                        TemplateSpan
                          PropertyAccessExpression
                            Identifier: 'autoGenerate'
                            Identifier: 'id'
                          TemplateTail
                ReturnStatement
                  CallExpression
                    Identifier: ' formatGeneratedName'
                    FalseKeyword
                    PropertyAccessExpression
                      Identifier: ' autoGenerate'
                      Identifier: 'prefix'
                    Identifier: ' baseName'
                    PropertyAccessExpression
                      Identifier: ' autoGenerate'
                      Identifier: 'suffix'
                    PropertyAccessExpression
                      Identifier: ' IdentifierNameMap'
                      Identifier: 'toKey'
        IfStatement
          CallExpression
            Identifier: 'isPrivateIdentifier'
            Identifier: 'name'
          Block
            ReturnStatement
              CallExpression
                PropertyAccessExpression
                  CallExpression
                    Identifier: ' idText'
                    Identifier: 'name'
                  Identifier: 'slice'
                NumericLiteral
        ReturnStatement
          CallExpression
            Identifier: ' idText'
            Identifier: 'name'
  ClassDeclaration
    Identifier: ' IdentifierNameMultiMap'
    TypeParameter
      Identifier: 'V'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' IdentifierNameMap'
        ArrayType
          TypeReference
            Identifier: 'V'
    MethodDeclaration
      Identifier: '
    add'
      Parameter
        Identifier: 'key'
        TypeReference
          Identifier: ' Identifier'
      Parameter
        Identifier: ' value'
        TypeReference
          Identifier: ' V'
      ArrayType
        TypeReference
          Identifier: ' V'
      Block
        VariableStatement
          VariableDeclarationList
            VariableDeclaration
              Identifier: ' values'
              CallExpression
                PropertyAccessExpression
                  ThisKeyword
                  Identifier: 'get'
                Identifier: 'key'
        IfStatement
          Identifier: 'values'
          Block
            ExpressionStatement
              CallExpression
                PropertyAccessExpression
                  Identifier: '
            values'
                  Identifier: 'push'
                Identifier: 'value'
          Block
            ExpressionStatement
              CallExpression
                PropertyAccessExpression
                  ThisKeyword
                  Identifier: 'set'
                Identifier: 'key'
                BinaryExpression
                  Identifier: ' values'
                  EqualsToken
                  ArrayLiteralExpression
                    Identifier: 'value'
        ReturnStatement
          Identifier: ' values'
    MethodDeclaration
      Identifier: '

    remove'
      Parameter
        Identifier: 'key'
        TypeReference
          Identifier: ' Identifier'
      Parameter
        Identifier: ' value'
        TypeReference
          Identifier: ' V'
      Block
        VariableStatement
          VariableDeclarationList
            VariableDeclaration
              Identifier: ' values'
              CallExpression
                PropertyAccessExpression
                  ThisKeyword
                  Identifier: 'get'
                Identifier: 'key'
        IfStatement
          Identifier: 'values'
          Block
            ExpressionStatement
              CallExpression
                Identifier: '
            unorderedRemoveItem'
                Identifier: 'values'
                Identifier: ' value'
            IfStatement
              PrefixUnaryExpression
                PropertyAccessExpression
                  Identifier: 'values'
                  Identifier: 'length'
              Block
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      ThisKeyword
                      Identifier: 'delete'
                    Identifier: 'key'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' isSimpleCopiableExpression'
    Parameter
      Identifier: 'expression'
      TypeReference
        Identifier: ' Expression'
    BooleanKeyword
    Block
      ReturnStatement
        BinaryExpression
          BinaryExpression
            BinaryExpression
              CallExpression
                Identifier: ' isStringLiteralLike'
                Identifier: 'expression'
              BarBarToken
              BinaryExpression
                PropertyAccessExpression
                  Identifier: '
        expression'
                  Identifier: 'kind'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'NumericLiteral'
            BarBarToken
            CallExpression
              Identifier: '
        isKeyword'
              PropertyAccessExpression
                Identifier: 'expression'
                Identifier: 'kind'
          BarBarToken
          CallExpression
            Identifier: '
        isIdentifier'
            Identifier: 'expression'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' isSimpleInlineableExpression'
    Parameter
      Identifier: 'expression'
      TypeReference
        Identifier: ' Expression'
    BooleanKeyword
    Block
      ReturnStatement
        BinaryExpression
          PrefixUnaryExpression
            CallExpression
              Identifier: 'isIdentifier'
              Identifier: 'expression'
          AmpersandAmpersandToken
          CallExpression
            Identifier: ' isSimpleCopiableExpression'
            Identifier: 'expression'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' isCompoundAssignment'
    Parameter
      Identifier: 'kind'
      TypeReference
        Identifier: ' BinaryOperator'
    TypePredicate
      Identifier: ' kind'
      TypeReference
        Identifier: ' CompoundAssignmentOperator'
    Block
      ReturnStatement
        BinaryExpression
          BinaryExpression
            Identifier: ' kind'
            GreaterThanEqualsToken
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'FirstCompoundAssignment'
          AmpersandAmpersandToken
          BinaryExpression
            Identifier: ' kind'
            LessThanEqualsToken
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'LastCompoundAssignment'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getNonAssignmentOperatorForCompoundAssignment'
    Parameter
      Identifier: 'kind'
      TypeReference
        Identifier: ' CompoundAssignmentOperator'
    UnionType
      TypeReference
        Identifier: ' LogicalOperatorOrHigher'
      TypeReference
        QualifiedName
          Identifier: ' SyntaxKind'
          Identifier: 'QuestionQuestionToken'
    Block
      SwitchStatement
        Identifier: 'kind'
        CaseBlock
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'PlusEqualsToken'
            ReturnStatement
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'PlusToken'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'MinusEqualsToken'
            ReturnStatement
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'MinusToken'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'AsteriskEqualsToken'
            ReturnStatement
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'AsteriskToken'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'AsteriskAsteriskEqualsToken'
            ReturnStatement
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'AsteriskAsteriskToken'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'SlashEqualsToken'
            ReturnStatement
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'SlashToken'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'PercentEqualsToken'
            ReturnStatement
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'PercentToken'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'LessThanLessThanEqualsToken'
            ReturnStatement
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'LessThanLessThanToken'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'GreaterThanGreaterThanEqualsToken'
            ReturnStatement
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'GreaterThanGreaterThanToken'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'GreaterThanGreaterThanGreaterThanEqualsToken'
            ReturnStatement
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'GreaterThanGreaterThanGreaterThanToken'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'AmpersandEqualsToken'
            ReturnStatement
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'AmpersandToken'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'BarEqualsToken'
            ReturnStatement
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'BarToken'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'CaretEqualsToken'
            ReturnStatement
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'CaretToken'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'BarBarEqualsToken'
            ReturnStatement
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'BarBarToken'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'AmpersandAmpersandEqualsToken'
            ReturnStatement
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'AmpersandAmpersandToken'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'QuestionQuestionEqualsToken'
            ReturnStatement
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'QuestionQuestionToken'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getSuperCallFromStatement'
    Parameter
      Identifier: 'statement'
      TypeReference
        Identifier: ' Statement'
    UnionType
      TypeReference
        Identifier: ' SuperCall'
      UndefinedKeyword
    Block
      IfStatement
        PrefixUnaryExpression
          CallExpression
            Identifier: 'isExpressionStatement'
            Identifier: 'statement'
        Block
          ReturnStatement
            Identifier: ' undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' expression'
            CallExpression
              Identifier: ' skipParentheses'
              PropertyAccessExpression
                Identifier: 'statement'
                Identifier: 'expression'
      ReturnStatement
        ConditionalExpression
          CallExpression
            Identifier: ' isSuperCall'
            Identifier: 'expression'
          QuestionToken
          Identifier: ' expression'
          ColonToken
          Identifier: ' undefined'
  FunctionDeclaration
    Identifier: ' findSuperStatementIndexPathWorker'
    Parameter
      Identifier: 'statements'
      TypeReference
        Identifier: ' NodeArray'
        TypeReference
          Identifier: 'Statement'
    Parameter
      Identifier: ' start'
      NumberKeyword
    Parameter
      Identifier: ' indices'
      ArrayType
        NumberKeyword
    Block
      ForStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' i'
            Identifier: ' start'
        BinaryExpression
          Identifier: ' i'
          LessThanToken
          PropertyAccessExpression
            Identifier: ' statements'
            Identifier: 'length'
        BinaryExpression
          Identifier: ' i'
          PlusEqualsToken
          NumericLiteral
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' statement'
                ElementAccessExpression
                  Identifier: ' statements'
                  Identifier: 'i'
          IfStatement
            CallExpression
              Identifier: 'getSuperCallFromStatement'
              Identifier: 'statement'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            indices'
                    Identifier: 'unshift'
                  Identifier: 'i'
              ReturnStatement
                TrueKeyword
            IfStatement
              BinaryExpression
                CallExpression
                  Identifier: 'isTryStatement'
                  Identifier: 'statement'
                AmpersandAmpersandToken
                CallExpression
                  Identifier: ' findSuperStatementIndexPathWorker'
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: 'statement'
                      Identifier: 'tryBlock'
                    Identifier: 'statements'
                  NumericLiteral
                  Identifier: ' indices'
              Block
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
            indices'
                      Identifier: 'unshift'
                    Identifier: 'i'
                ReturnStatement
                  TrueKeyword
      ReturnStatement
        FalseKeyword
  FunctionDeclaration
    ExportKeyword
    Identifier: ' findSuperStatementIndexPath'
    Parameter
      Identifier: 'statements'
      TypeReference
        Identifier: ' NodeArray'
        TypeReference
          Identifier: 'Statement'
    Parameter
      Identifier: ' start'
      NumberKeyword
    ArrayType
      NumberKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' indices'
            ArrayType
              NumberKeyword
            ArrayLiteralExpression
      ExpressionStatement
        CallExpression
          Identifier: '
    findSuperStatementIndexPathWorker'
          Identifier: 'statements'
          Identifier: ' start'
          Identifier: ' indices'
      ReturnStatement
        Identifier: ' indices'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getProperties'
    Parameter
      Identifier: 'node'
      UnionType
        TypeReference
          Identifier: ' ClassExpression'
        TypeReference
          Identifier: ' ClassDeclaration'
    Parameter
      Identifier: ' requireInitializer'
      LiteralType
        TrueKeyword
    Parameter
      Identifier: ' isStatic'
      BooleanKeyword
    TypeOperator
      ArrayType
        TypeReference
          Identifier: ' InitializedPropertyDeclaration'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getProperties'
    Parameter
      Identifier: 'node'
      UnionType
        TypeReference
          Identifier: ' ClassExpression'
        TypeReference
          Identifier: ' ClassDeclaration'
    Parameter
      Identifier: ' requireInitializer'
      BooleanKeyword
    Parameter
      Identifier: ' isStatic'
      BooleanKeyword
    TypeOperator
      ArrayType
        TypeReference
          Identifier: ' PropertyDeclaration'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getProperties'
    Parameter
      Identifier: 'node'
      UnionType
        TypeReference
          Identifier: ' ClassExpression'
        TypeReference
          Identifier: ' ClassDeclaration'
    Parameter
      Identifier: ' requireInitializer'
      BooleanKeyword
    Parameter
      Identifier: ' isStatic'
      BooleanKeyword
    TypeOperator
      ArrayType
        TypeReference
          Identifier: ' PropertyDeclaration'
    Block
      ReturnStatement
        AsExpression
          CallExpression
            Identifier: ' filter'
            PropertyAccessExpression
              Identifier: 'node'
              Identifier: 'members'
            ArrowFunction
              Parameter
                Identifier: ' m'
              EqualsGreaterThanToken
              CallExpression
                Identifier: ' isInitializedOrStaticProperty'
                Identifier: 'm'
                Identifier: ' requireInitializer'
                Identifier: ' isStatic'
          ArrayType
            TypeReference
              Identifier: ' PropertyDeclaration'
  FunctionDeclaration
    Identifier: ' isStaticPropertyDeclarationOrClassStaticBlockDeclaration'
    Parameter
      Identifier: 'element'
      TypeReference
        Identifier: ' ClassElement'
    TypePredicate
      Identifier: ' element'
      UnionType
        TypeReference
          Identifier: ' PropertyDeclaration'
        TypeReference
          Identifier: ' ClassStaticBlockDeclaration'
    Block
      ReturnStatement
        BinaryExpression
          CallExpression
            Identifier: ' isStaticPropertyDeclaration'
            Identifier: 'element'
          BarBarToken
          CallExpression
            Identifier: ' isClassStaticBlockDeclaration'
            Identifier: 'element'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getStaticPropertiesAndClassStaticBlock'
    Parameter
      Identifier: 'node'
      UnionType
        TypeReference
          Identifier: ' ClassExpression'
        TypeReference
          Identifier: ' ClassDeclaration'
    TypeOperator
      ArrayType
        ParenthesizedType
          UnionType
            TypeReference
              Identifier: 'PropertyDeclaration'
            TypeReference
              Identifier: ' ClassStaticBlockDeclaration'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getStaticPropertiesAndClassStaticBlock'
    Parameter
      Identifier: 'node'
      UnionType
        TypeReference
          Identifier: ' ClassExpression'
        TypeReference
          Identifier: ' ClassDeclaration'
    TypeOperator
      ArrayType
        ParenthesizedType
          UnionType
            TypeReference
              Identifier: 'PropertyDeclaration'
            TypeReference
              Identifier: ' ClassStaticBlockDeclaration'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getStaticPropertiesAndClassStaticBlock'
    Parameter
      Identifier: 'node'
      UnionType
        TypeReference
          Identifier: ' ClassExpression'
        TypeReference
          Identifier: ' ClassDeclaration'
    TypeOperator
      ArrayType
        ParenthesizedType
          UnionType
            TypeReference
              Identifier: 'PropertyDeclaration'
            TypeReference
              Identifier: ' ClassStaticBlockDeclaration'
    Block
      ReturnStatement
        CallExpression
          Identifier: ' filter'
          PropertyAccessExpression
            Identifier: 'node'
            Identifier: 'members'
          Identifier: ' isStaticPropertyDeclarationOrClassStaticBlockDeclaration'
  FunctionDeclaration
    Identifier: ' isInitializedOrStaticProperty'
    Parameter
      Identifier: 'member'
      TypeReference
        Identifier: ' ClassElement'
    Parameter
      Identifier: ' requireInitializer'
      BooleanKeyword
    Parameter
      Identifier: ' isStatic'
      BooleanKeyword
    Block
      ReturnStatement
        BinaryExpression
          BinaryExpression
            CallExpression
              Identifier: ' isPropertyDeclaration'
              Identifier: 'member'
            AmpersandAmpersandToken
            ParenthesizedExpression
              BinaryExpression
                PrefixUnaryExpression
                  PrefixUnaryExpression
                    PropertyAccessExpression
                      Identifier: 'member'
                      Identifier: 'initializer'
                BarBarToken
                PrefixUnaryExpression
                  Identifier: 'requireInitializer'
          AmpersandAmpersandToken
          BinaryExpression
            CallExpression
              Identifier: ' hasStaticModifier'
              Identifier: 'member'
            EqualsEqualsEqualsToken
            Identifier: ' isStatic'
  FunctionDeclaration
    Identifier: ' isStaticPropertyDeclaration'
    Parameter
      Identifier: 'member'
      TypeReference
        Identifier: ' ClassElement'
    Block
      ReturnStatement
        BinaryExpression
          CallExpression
            Identifier: ' isPropertyDeclaration'
            Identifier: 'member'
          AmpersandAmpersandToken
          CallExpression
            Identifier: ' hasStaticModifier'
            Identifier: 'member'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' isInitializedProperty'
    Parameter
      Identifier: 'member'
      TypeReference
        Identifier: ' ClassElement'
    TypePredicate
      Identifier: ' member'
      IntersectionType
        TypeReference
          Identifier: ' PropertyDeclaration'
        TypeLiteral
          PropertySignature
            Identifier: ' initializer'
            TypeReference
              Identifier: ' Expression'
    Block
      ReturnStatement
        BinaryExpression
          BinaryExpression
            PropertyAccessExpression
              Identifier: ' member'
              Identifier: 'kind'
            EqualsEqualsEqualsToken
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'PropertyDeclaration'
          AmpersandAmpersandToken
          BinaryExpression
            PropertyAccessExpression
              ParenthesizedExpression
                AsExpression
                  Identifier: 'member'
                  TypeReference
                    Identifier: ' PropertyDeclaration'
              Identifier: 'initializer'
            ExclamationEqualsEqualsToken
            Identifier: ' undefined'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' isNonStaticMethodOrAccessorWithPrivateName'
    Parameter
      Identifier: 'member'
      TypeReference
        Identifier: ' ClassElement'
    TypePredicate
      Identifier: ' member'
      UnionType
        TypeReference
          Identifier: ' PrivateIdentifierMethodDeclaration'
        TypeReference
          Identifier: ' PrivateIdentifierAccessorDeclaration'
        TypeReference
          Identifier: ' PrivateIdentifierAutoAccessorPropertyDeclaration'
    Block
      ReturnStatement
        BinaryExpression
          BinaryExpression
            PrefixUnaryExpression
              CallExpression
                Identifier: 'isStatic'
                Identifier: 'member'
            AmpersandAmpersandToken
            ParenthesizedExpression
              BinaryExpression
                CallExpression
                  Identifier: 'isMethodOrAccessor'
                  Identifier: 'member'
                BarBarToken
                CallExpression
                  Identifier: ' isAutoAccessorPropertyDeclaration'
                  Identifier: 'member'
          AmpersandAmpersandToken
          CallExpression
            Identifier: ' isPrivateIdentifier'
            PropertyAccessExpression
              Identifier: 'member'
              Identifier: 'name'
  FunctionDeclaration
    Identifier: ' getDecoratorsOfParameters'
    Parameter
      Identifier: 'node'
      UnionType
        TypeReference
          Identifier: ' FunctionLikeDeclaration'
        UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' decorators'
            UnionType
              ArrayType
                ParenthesizedType
                  UnionType
                    TypeOperator
                      ArrayType
                        TypeReference
                          Identifier: ' Decorator'
                    UndefinedKeyword
              UndefinedKeyword
      IfStatement
        Identifier: 'node'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' parameters'
                PropertyAccessExpression
                  Identifier: ' node'
                  Identifier: 'parameters'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' firstParameterIsThis'
                BinaryExpression
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: ' parameters'
                      Identifier: 'length'
                    GreaterThanToken
                    NumericLiteral
                  AmpersandAmpersandToken
                  CallExpression
                    Identifier: ' parameterIsThisKeyword'
                    ElementAccessExpression
                      Identifier: 'parameters'
                      NumericLiteral
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' firstParameterOffset'
                ConditionalExpression
                  Identifier: ' firstParameterIsThis'
                  QuestionToken
                  NumericLiteral
                  ColonToken
                  NumericLiteral
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' numParameters'
                ConditionalExpression
                  Identifier: ' firstParameterIsThis'
                  QuestionToken
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: ' parameters'
                      Identifier: 'length'
                    MinusToken
                    NumericLiteral
                  ColonToken
                  PropertyAccessExpression
                    Identifier: ' parameters'
                    Identifier: 'length'
          ForStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' i'
                NumericLiteral
            BinaryExpression
              Identifier: ' i'
              LessThanToken
              Identifier: ' numParameters'
            PostfixUnaryExpression
              Identifier: ' i'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' parameter'
                    ElementAccessExpression
                      Identifier: ' parameters'
                      BinaryExpression
                        Identifier: 'i'
                        PlusToken
                        Identifier: ' firstParameterOffset'
              IfStatement
                BinaryExpression
                  Identifier: 'decorators'
                  BarBarToken
                  CallExpression
                    Identifier: ' hasDecorators'
                    Identifier: 'parameter'
                Block
                  IfStatement
                    PrefixUnaryExpression
                      Identifier: 'decorators'
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    decorators'
                          EqualsToken
                          NewExpression
                            Identifier: ' Array'
                            Identifier: 'numParameters'
                  ExpressionStatement
                    BinaryExpression
                      ElementAccessExpression
                        Identifier: '

                decorators'
                        Identifier: 'i'
                      EqualsToken
                      CallExpression
                        Identifier: ' getDecorators'
                        Identifier: 'parameter'
      ReturnStatement
        Identifier: ' decorators'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getAllDecoratorsOfClass'
    Parameter
      Identifier: 'node'
      TypeReference
        Identifier: ' ClassLikeDeclaration'
    UnionType
      TypeReference
        Identifier: ' AllDecorators'
      UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' decorators'
            CallExpression
              Identifier: ' getDecorators'
              Identifier: 'node'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' parameters'
            CallExpression
              Identifier: ' getDecoratorsOfParameters'
              CallExpression
                Identifier: 'getFirstConstructorWithBody'
                Identifier: 'node'
      IfStatement
        BinaryExpression
          PrefixUnaryExpression
            CallExpression
              Identifier: 'some'
              Identifier: 'decorators'
          AmpersandAmpersandToken
          PrefixUnaryExpression
            CallExpression
              Identifier: 'some'
              Identifier: 'parameters'
        Block
          ReturnStatement
            Identifier: ' undefined'
      ReturnStatement
        ObjectLiteralExpression
          ShorthandPropertyAssignment
            Identifier: '
        decorators'
          ShorthandPropertyAssignment
            Identifier: '
        parameters'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getAllDecoratorsOfClassElement'
    Parameter
      Identifier: 'member'
      TypeReference
        Identifier: ' ClassElement'
    Parameter
      Identifier: ' parent'
      TypeReference
        Identifier: ' ClassLikeDeclaration'
    Parameter
      Identifier: ' useLegacyDecorators'
      BooleanKeyword
    UnionType
      TypeReference
        Identifier: ' AllDecorators'
      UndefinedKeyword
    Block
      SwitchStatement
        PropertyAccessExpression
          Identifier: 'member'
          Identifier: 'kind'
        CaseBlock
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'GetAccessor'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'SetAccessor'
            IfStatement
              PrefixUnaryExpression
                Identifier: 'useLegacyDecorators'
              Block
                ReturnStatement
                  CallExpression
                    Identifier: ' getAllDecoratorsOfMethod'
                    AsExpression
                      Identifier: 'member'
                      TypeReference
                        Identifier: ' AccessorDeclaration'
            ReturnStatement
              CallExpression
                Identifier: ' getAllDecoratorsOfAccessors'
                AsExpression
                  Identifier: 'member'
                  TypeReference
                    Identifier: ' AccessorDeclaration'
                Identifier: ' parent'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'MethodDeclaration'
            ReturnStatement
              CallExpression
                Identifier: ' getAllDecoratorsOfMethod'
                AsExpression
                  Identifier: 'member'
                  TypeReference
                    Identifier: ' MethodDeclaration'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'PropertyDeclaration'
            ReturnStatement
              CallExpression
                Identifier: ' getAllDecoratorsOfProperty'
                AsExpression
                  Identifier: 'member'
                  TypeReference
                    Identifier: ' PropertyDeclaration'
          DefaultClause
            ReturnStatement
              Identifier: ' undefined'
  FunctionDeclaration
    Identifier: ' getAllDecoratorsOfAccessors'
    Parameter
      Identifier: 'accessor'
      TypeReference
        Identifier: ' AccessorDeclaration'
    Parameter
      Identifier: ' parent'
      UnionType
        TypeReference
          Identifier: ' ClassExpression'
        TypeReference
          Identifier: ' ClassDeclaration'
    UnionType
      TypeReference
        Identifier: ' AllDecorators'
      UndefinedKeyword
    Block
      IfStatement
        PrefixUnaryExpression
          PropertyAccessExpression
            Identifier: 'accessor'
            Identifier: 'body'
        Block
          ReturnStatement
            Identifier: ' undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            ObjectBindingPattern
              BindingElement
                Identifier: ' firstAccessor'
              BindingElement
                Identifier: ' secondAccessor'
              BindingElement
                Identifier: ' getAccessor'
              BindingElement
                Identifier: ' setAccessor'
            CallExpression
              Identifier: ' getAllAccessorDeclarations'
              PropertyAccessExpression
                Identifier: 'parent'
                Identifier: 'members'
              Identifier: ' accessor'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' firstAccessorWithDecorators'
            ConditionalExpression
              CallExpression
                Identifier: ' hasDecorators'
                Identifier: 'firstAccessor'
              QuestionToken
              Identifier: ' firstAccessor'
              ColonToken
              ConditionalExpression
                BinaryExpression
                  Identifier: '
        secondAccessor'
                  AmpersandAmpersandToken
                  CallExpression
                    Identifier: ' hasDecorators'
                    Identifier: 'secondAccessor'
                QuestionToken
                Identifier: ' secondAccessor'
                ColonToken
                Identifier: '
        undefined'
      IfStatement
        BinaryExpression
          PrefixUnaryExpression
            Identifier: 'firstAccessorWithDecorators'
          BarBarToken
          BinaryExpression
            Identifier: ' accessor'
            ExclamationEqualsEqualsToken
            Identifier: ' firstAccessorWithDecorators'
        Block
          ReturnStatement
            Identifier: ' undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' decorators'
            CallExpression
              Identifier: ' getDecorators'
              Identifier: 'firstAccessorWithDecorators'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' parameters'
            CallExpression
              Identifier: ' getDecoratorsOfParameters'
              Identifier: 'setAccessor'
      IfStatement
        BinaryExpression
          PrefixUnaryExpression
            CallExpression
              Identifier: 'some'
              Identifier: 'decorators'
          AmpersandAmpersandToken
          PrefixUnaryExpression
            CallExpression
              Identifier: 'some'
              Identifier: 'parameters'
        Block
          ReturnStatement
            Identifier: ' undefined'
      ReturnStatement
        ObjectLiteralExpression
          ShorthandPropertyAssignment
            Identifier: '
        decorators'
          ShorthandPropertyAssignment
            Identifier: '
        parameters'
          PropertyAssignment
            Identifier: '
        getDecorators'
            BinaryExpression
              Identifier: ' getAccessor'
              AmpersandAmpersandToken
              CallExpression
                Identifier: ' getDecorators'
                Identifier: 'getAccessor'
          PropertyAssignment
            Identifier: '
        setDecorators'
            BinaryExpression
              Identifier: ' setAccessor'
              AmpersandAmpersandToken
              CallExpression
                Identifier: ' getDecorators'
                Identifier: 'setAccessor'
  FunctionDeclaration
    Identifier: ' getAllDecoratorsOfMethod'
    Parameter
      Identifier: 'method'
      UnionType
        TypeReference
          Identifier: ' MethodDeclaration'
        TypeReference
          Identifier: ' AccessorDeclaration'
    UnionType
      TypeReference
        Identifier: ' AllDecorators'
      UndefinedKeyword
    Block
      IfStatement
        PrefixUnaryExpression
          PropertyAccessExpression
            Identifier: 'method'
            Identifier: 'body'
        Block
          ReturnStatement
            Identifier: ' undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' decorators'
            CallExpression
              Identifier: ' getDecorators'
              Identifier: 'method'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' parameters'
            CallExpression
              Identifier: ' getDecoratorsOfParameters'
              Identifier: 'method'
      IfStatement
        BinaryExpression
          PrefixUnaryExpression
            CallExpression
              Identifier: 'some'
              Identifier: 'decorators'
          AmpersandAmpersandToken
          PrefixUnaryExpression
            CallExpression
              Identifier: 'some'
              Identifier: 'parameters'
        Block
          ReturnStatement
            Identifier: ' undefined'
      ReturnStatement
        ObjectLiteralExpression
          ShorthandPropertyAssignment
            Identifier: ' decorators'
          ShorthandPropertyAssignment
            Identifier: ' parameters'
  FunctionDeclaration
    Identifier: ' getAllDecoratorsOfProperty'
    Parameter
      Identifier: 'property'
      TypeReference
        Identifier: ' PropertyDeclaration'
    UnionType
      TypeReference
        Identifier: ' AllDecorators'
      UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' decorators'
            CallExpression
              Identifier: ' getDecorators'
              Identifier: 'property'
      IfStatement
        PrefixUnaryExpression
          CallExpression
            Identifier: 'some'
            Identifier: 'decorators'
        Block
          ReturnStatement
            Identifier: ' undefined'
      ReturnStatement
        ObjectLiteralExpression
          ShorthandPropertyAssignment
            Identifier: ' decorators'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' PrivateEnvironment'
    TypeParameter
      Identifier: 'TData'
    TypeParameter
      Identifier: ' TEntry'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' data'
      TypeReference
        Identifier: ' TData'
    PropertySignature
      Identifier: '

    /**
     * A mapping of private names to information needed for transformation.
     */
    identifiers'
      QuestionToken
      TypeReference
        Identifier: ' Map'
        TypeReference
          Identifier: '__String'
        TypeReference
          Identifier: ' TEntry'
    PropertySignature
      Identifier: '

    /**
     * A mapping of generated private names to information needed for transformation.
     */
    generatedIdentifiers'
      QuestionToken
      TypeReference
        Identifier: ' Map'
        TypeReference
          Identifier: 'Node'
        TypeReference
          Identifier: ' TEntry'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' LexicalEnvironment'
    TypeParameter
      InKeyword
      OutKeyword
      Identifier: ' TEnvData'
    TypeParameter
      Identifier: ' TPrivateEnvData'
    TypeParameter
      Identifier: ' TPrivateEntry'
    PropertySignature
      Identifier: '
    data'
      TypeReference
        Identifier: ' TEnvData'
    PropertySignature
      Identifier: '
    privateEnv'
      QuestionToken
      TypeReference
        Identifier: ' PrivateEnvironment'
        TypeReference
          Identifier: 'TPrivateEnvData'
        TypeReference
          Identifier: ' TPrivateEntry'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' previous'
      UnionType
        TypeReference
          Identifier: ' LexicalEnvironment'
          TypeReference
            Identifier: 'TEnvData'
          TypeReference
            Identifier: ' TPrivateEnvData'
          TypeReference
            Identifier: ' TPrivateEntry'
        UndefinedKeyword
  FunctionDeclaration
    Identifier: ' walkUpLexicalEnvironments'
    TypeParameter
      Identifier: 'TEnvData'
    TypeParameter
      Identifier: ' TPrivateEnvData'
    TypeParameter
      Identifier: ' TPrivateEntry'
    TypeParameter
      Identifier: ' U'
    Parameter
      Identifier: '
    env'
      UnionType
        TypeReference
          Identifier: ' LexicalEnvironment'
          TypeReference
            Identifier: 'TEnvData'
          TypeReference
            Identifier: ' TPrivateEnvData'
          TypeReference
            Identifier: ' TPrivateEntry'
        UndefinedKeyword
    Parameter
      Identifier: '
    cb'
      FunctionType
        Parameter
          Identifier: 'env'
          TypeReference
            Identifier: ' LexicalEnvironment'
            TypeReference
              Identifier: 'TEnvData'
            TypeReference
              Identifier: ' TPrivateEnvData'
            TypeReference
              Identifier: ' TPrivateEntry'
        TypeReference
          Identifier: ' U'
    UnionType
      TypeReference
        Identifier: ' U'
      UndefinedKeyword
    Block
      WhileStatement
        Identifier: 'env'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' result'
                CallExpression
                  Identifier: ' cb'
                  Identifier: 'env'
          IfStatement
            BinaryExpression
              Identifier: 'result'
              ExclamationEqualsEqualsToken
              Identifier: ' undefined'
            ReturnStatement
              Identifier: ' result'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        env'
              EqualsToken
              PropertyAccessExpression
                Identifier: ' env'
                Identifier: 'previous'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' newPrivateEnvironment'
    TypeParameter
      Identifier: 'TData'
    TypeParameter
      Identifier: ' TEntry'
    Parameter
      Identifier: 'data'
      TypeReference
        Identifier: ' TData'
    TypeReference
      Identifier: ' PrivateEnvironment'
      TypeReference
        Identifier: 'TData'
      TypeReference
        Identifier: ' TEntry'
    Block
      ReturnStatement
        ObjectLiteralExpression
          ShorthandPropertyAssignment
            Identifier: ' data'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getPrivateIdentifier'
    TypeParameter
      Identifier: 'TData'
    TypeParameter
      Identifier: ' TEntry'
    Parameter
      Identifier: '
    privateEnv'
      UnionType
        TypeReference
          Identifier: ' PrivateEnvironment'
          TypeReference
            Identifier: 'TData'
          TypeReference
            Identifier: ' TEntry'
        UndefinedKeyword
    Parameter
      Identifier: '
    name'
      TypeReference
        Identifier: ' PrivateIdentifier'
    UnionType
      TypeReference
        Identifier: ' TEntry'
      UndefinedKeyword
    Block
      ReturnStatement
        ConditionalExpression
          CallExpression
            Identifier: ' isGeneratedPrivateIdentifier'
            Identifier: 'name'
          QuestionToken
          CallExpression
            PropertyAccessExpression
              PropertyAccessExpression
                Identifier: '
        privateEnv'
                QuestionDotToken
                Identifier: 'generatedIdentifiers'
              QuestionDotToken
              Identifier: 'get'
            CallExpression
              Identifier: 'getNodeForGeneratedName'
              Identifier: 'name'
          ColonToken
          CallExpression
            PropertyAccessExpression
              PropertyAccessExpression
                Identifier: '
        privateEnv'
                QuestionDotToken
                Identifier: 'identifiers'
              QuestionDotToken
              Identifier: 'get'
            PropertyAccessExpression
              Identifier: 'name'
              Identifier: 'escapedText'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' setPrivateIdentifier'
    TypeParameter
      Identifier: 'TData'
    TypeParameter
      Identifier: ' TEntry'
    Parameter
      Identifier: '
    privateEnv'
      TypeReference
        Identifier: ' PrivateEnvironment'
        TypeReference
          Identifier: 'TData'
        TypeReference
          Identifier: ' TEntry'
    Parameter
      Identifier: '
    name'
      TypeReference
        Identifier: ' PrivateIdentifier'
    Parameter
      Identifier: '
    entry'
      TypeReference
        Identifier: ' TEntry'
    VoidKeyword
    Block
      IfStatement
        CallExpression
          Identifier: 'isGeneratedPrivateIdentifier'
          Identifier: 'name'
        Block
          ExpressionStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: '
        privateEnv'
                Identifier: 'generatedIdentifiers'
              QuestionQuestionEqualsToken
              NewExpression
                Identifier: ' Map'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: '
        privateEnv'
                  Identifier: 'generatedIdentifiers'
                Identifier: 'set'
              CallExpression
                Identifier: 'getNodeForGeneratedName'
                Identifier: 'name'
              Identifier: ' entry'
        Block
          ExpressionStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: '
        privateEnv'
                Identifier: 'identifiers'
              QuestionQuestionEqualsToken
              NewExpression
                Identifier: ' Map'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: '
        privateEnv'
                  Identifier: 'identifiers'
                Identifier: 'set'
              PropertyAccessExpression
                Identifier: 'name'
                Identifier: 'escapedText'
              Identifier: ' entry'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' accessPrivateIdentifier'
    TypeParameter
      Identifier: '
    TEnvData'
    TypeParameter
      Identifier: '
    TPrivateEnvData'
    TypeParameter
      Identifier: '
    TPrivateEntry'
    Parameter
      Identifier: '
    env'
      UnionType
        TypeReference
          Identifier: ' LexicalEnvironment'
          TypeReference
            Identifier: 'TEnvData'
          TypeReference
            Identifier: ' TPrivateEnvData'
          TypeReference
            Identifier: ' TPrivateEntry'
        UndefinedKeyword
    Parameter
      Identifier: '
    name'
      TypeReference
        Identifier: ' PrivateIdentifier'
    UnionType
      TypeReference
        Identifier: ' TPrivateEntry'
      UndefinedKeyword
    Block
      ReturnStatement
        CallExpression
          Identifier: ' walkUpLexicalEnvironments'
          Identifier: 'env'
          ArrowFunction
            Parameter
              Identifier: ' env'
            EqualsGreaterThanToken
            CallExpression
              Identifier: ' getPrivateIdentifier'
              PropertyAccessExpression
                Identifier: 'env'
                Identifier: 'privateEnv'
              Identifier: ' name'
  FunctionDeclaration
    Identifier: ' isSimpleParameter'
    Parameter
      Identifier: 'node'
      TypeReference
        Identifier: ' ParameterDeclaration'
    Block
      ReturnStatement
        BinaryExpression
          PrefixUnaryExpression
            PropertyAccessExpression
              Identifier: 'node'
              Identifier: 'initializer'
          AmpersandAmpersandToken
          CallExpression
            Identifier: ' isIdentifier'
            PropertyAccessExpression
              Identifier: 'node'
              Identifier: 'name'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' isSimpleParameterList'
    Parameter
      Identifier: 'nodes'
      TypeReference
        Identifier: ' NodeArray'
        TypeReference
          Identifier: 'ParameterDeclaration'
    BooleanKeyword
    Block
      ReturnStatement
        CallExpression
          Identifier: ' every'
          Identifier: 'nodes'
          Identifier: ' isSimpleParameter'
