SourceFile
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: 'EventEmitter'
    StringLiteral
  TypeAliasDeclaration
    Identifier: ' WithRequiredProperties'
    TypeParameter
      Identifier: 'T'
    TypeParameter
      Identifier: ' K'
      TypeOperator
        TypeReference
          Identifier: ' T'
    IntersectionType
      TypeReference
        Identifier: ' T'
      TypeReference
        Identifier: ' Required'
        TypeReference
          Identifier: 'Pick'
          TypeReference
            Identifier: 'T'
          TypeReference
            Identifier: ' K'
  ClassDeclaration
    DeclareKeyword
    Identifier: ' Keyv'
    TypeParameter
      Identifier: 'Value'
      AnyKeyword
    TypeParameter
      Identifier: ' Options'
      TypeReference
        Identifier: ' Record'
        StringKeyword
        AnyKeyword
      TypeReference
        Identifier: ' Record'
        StringKeyword
        UnknownKeyword
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' EventEmitter'
    PropertyDeclaration
      Identifier: '
	/**
     * `this.opts` is an object containing at least the properties listed
     * below. However, `Keyv.Options` allows arbitrary properties as well.
     * These properties can be specified as the second type parameter to `Keyv`.
     */
	opts'
      IntersectionType
        TypeReference
          Identifier: ' WithRequiredProperties'
          TypeReference
            QualifiedName
              Identifier: '
	Keyv'
              Identifier: 'Options'
            TypeReference
              Identifier: 'Value'
          UnionType
            LiteralType
              StringLiteral
            LiteralType
              StringLiteral
            LiteralType
              StringLiteral
            LiteralType
              StringLiteral
            LiteralType
              StringLiteral
        TypeReference
          Identifier: '
	Options'
    Constructor
      Parameter
        Identifier: 'options'
        QuestionToken
        IntersectionType
          TypeReference
            QualifiedName
              Identifier: ' Keyv'
              Identifier: 'Options'
            TypeReference
              Identifier: 'Value'
          TypeReference
            Identifier: ' Options'
    Constructor
      Parameter
        Identifier: 'uri'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' options'
        QuestionToken
        IntersectionType
          TypeReference
            QualifiedName
              Identifier: ' Keyv'
              Identifier: 'Options'
            TypeReference
              Identifier: 'Value'
          TypeReference
            Identifier: ' Options'
    MethodDeclaration
      Identifier: '

	/** Returns the value. */
	get'
      Parameter
        Identifier: 'key'
        StringKeyword
      Parameter
        Identifier: ' options'
        QuestionToken
        TypeLiteral
          PropertySignature
            Identifier: 'raw'
            QuestionToken
            LiteralType
              FalseKeyword
      TypeReference
        Identifier: ' Promise'
        UnionType
          TypeReference
            Identifier: 'Value'
          UndefinedKeyword
    MethodDeclaration
      Identifier: '
	/** Returns the raw value. */
	get'
      Parameter
        Identifier: 'key'
        StringKeyword
      Parameter
        Identifier: ' options'
        TypeLiteral
          PropertySignature
            Identifier: 'raw'
            LiteralType
              TrueKeyword
      TypeReference
        Identifier: ' Promise'
        UnionType
          TypeReference
            QualifiedName
              Identifier: 'Keyv'
              Identifier: 'DeserializedData'
            TypeReference
              Identifier: 'Value'
          UndefinedKeyword
    MethodDeclaration
      Identifier: '

	/** Returns an array of values. Uses `store.getMany` if it exists, otherwise uses parallel calls to `store.get`. */
	get'
      Parameter
        Identifier: 'key'
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' options'
        QuestionToken
        TypeLiteral
          PropertySignature
            Identifier: 'raw'
            QuestionToken
            LiteralType
              FalseKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          Identifier: 'Array'
          UnionType
            TypeReference
              Identifier: 'Value'
            UndefinedKeyword
    MethodDeclaration
      Identifier: '
	/** Returns an array of raw values. Uses `store.getMany` if it exists, otherwise uses parallel calls to `store.get`. */
	get'
      Parameter
        Identifier: 'key'
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' options'
        TypeLiteral
          PropertySignature
            Identifier: 'raw'
            LiteralType
              TrueKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          Identifier: 'Array'
          UnionType
            TypeReference
              QualifiedName
                Identifier: 'Keyv'
                Identifier: 'DeserializedData'
              TypeReference
                Identifier: 'Value'
            UndefinedKeyword
    MethodDeclaration
      Identifier: '

	/**
     * Set a value.
     *
     * By default keys are persistent. You can set an expiry TTL in milliseconds.
     */
	set'
      Parameter
        Identifier: 'key'
        StringKeyword
      Parameter
        Identifier: ' value'
        TypeReference
          Identifier: ' Value'
      Parameter
        Identifier: ' ttl'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        LiteralType
          TrueKeyword
    MethodDeclaration
      Identifier: '
	/**
     * Deletes an entry.
     *
     * Returns `true` if the key existed, `false` if not.
     */
	delete'
      Parameter
        Identifier: 'key'
        UnionType
          StringKeyword
          ArrayType
            StringKeyword
      TypeReference
        Identifier: ' Promise'
        BooleanKeyword
    MethodDeclaration
      Identifier: '
	/** Delete all entries in the current namespace. */
	clear'
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
	/** Check if key exists in current namespace. */
	has'
      Parameter
        Identifier: 'key'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        BooleanKeyword
    MethodDeclaration
      Identifier: '
	/** Iterator */
	iterator'
      Parameter
        Identifier: 'namespace'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' AsyncGenerator'
        AnyKeyword
        VoidKeyword
        AnyKeyword
    MethodDeclaration
      Identifier: '
	/**
	 * Closes the connection.
	 *
	 * Returns `undefined` when the connection closes.
	 */
	disconnect'
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
  ModuleDeclaration
    DeclareKeyword
    Identifier: ' Keyv'
    ModuleBlock
      InterfaceDeclaration
        Identifier: ' Options'
        TypeParameter
          Identifier: 'Value'
        IndexSignature
          Parameter
            Identifier: 'key'
            StringKeyword
          AnyKeyword
        PropertySignature
          Identifier: '

		/** Namespace for the current instance. */
		namespace'
          QuestionToken
          UnionType
            StringKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
		/** A custom serialization function. */
		serialize'
          QuestionToken
          UnionType
            ParenthesizedType
              FunctionType
                Parameter
                  Identifier: 'data'
                  TypeReference
                    Identifier: ' DeserializedData'
                    TypeReference
                      Identifier: 'Value'
                StringKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
		/** A custom deserialization function. */
		deserialize'
          QuestionToken
          UnionType
            ParenthesizedType
              FunctionType
                Parameter
                  Identifier: 'data'
                  StringKeyword
                UnionType
                  TypeReference
                    Identifier: ' DeserializedData'
                    TypeReference
                      Identifier: 'Value'
                  UndefinedKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
		/** The connection string URI. */
		uri'
          QuestionToken
          UnionType
            StringKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
		/** The storage adapter instance to be used by Keyv. */
		store'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' Store'
              UnionType
                StringKeyword
                UndefinedKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
		/** Default TTL. Can be overridden by specififying a TTL on `.set()`. */
		ttl'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
		/** Specify an adapter to use. e.g `'redis'` or `'mongodb'`. */
		adapter'
          QuestionToken
          UnionType
            LiteralType
              StringLiteral
            LiteralType
              StringLiteral
            LiteralType
              StringLiteral
            LiteralType
              StringLiteral
            LiteralType
              StringLiteral
            LiteralType
              StringLiteral
            LiteralType
              StringLiteral
            UndefinedKeyword
        PropertySignature
          Identifier: '
		/** Enable compression option **/
		compression'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' CompressionAdapter'
            UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' CompressionAdapter'
        MethodSignature
          Identifier: '
		compress'
          Parameter
            Identifier: 'value'
            AnyKeyword
          Parameter
            Identifier: ' options'
            QuestionToken
            AnyKeyword
          TypeReference
            Identifier: ' Promise'
            AnyKeyword
        MethodSignature
          Identifier: '
		decompress'
          Parameter
            Identifier: 'value'
            AnyKeyword
          Parameter
            Identifier: ' options'
            QuestionToken
            AnyKeyword
          TypeReference
            Identifier: ' Promise'
            AnyKeyword
        MethodSignature
          Identifier: '
		serialize'
          Parameter
            Identifier: 'value'
            AnyKeyword
          TypeReference
            Identifier: ' Promise'
            AnyKeyword
        MethodSignature
          Identifier: '
		deserialize'
          Parameter
            Identifier: 'value'
            AnyKeyword
          TypeReference
            Identifier: ' Promise'
            AnyKeyword
      InterfaceDeclaration
        Identifier: ' DeserializedData'
        TypeParameter
          Identifier: 'Value'
        PropertySignature
          Identifier: '
		value'
          TypeReference
            Identifier: ' Value'
        PropertySignature
          Identifier: ' expires'
          UnionType
            NumberKeyword
            UndefinedKeyword
      TypeAliasDeclaration
        Identifier: ' StoredData'
        TypeParameter
          Identifier: 'Value'
        UnionType
          TypeReference
            Identifier: ' DeserializedData'
            TypeReference
              Identifier: 'Value'
          StringKeyword
          UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' Store'
        TypeParameter
          Identifier: 'Value'
        MethodSignature
          Identifier: '
		get'
          Parameter
            Identifier: 'key'
            StringKeyword
          UnionType
            TypeReference
              Identifier: ' Value'
            TypeReference
              Identifier: ' Promise'
              UnionType
                TypeReference
                  Identifier: 'Value'
                UndefinedKeyword
            UndefinedKeyword
        MethodSignature
          Identifier: '
		set'
          Parameter
            Identifier: 'key'
            StringKeyword
          Parameter
            Identifier: ' value'
            TypeReference
              Identifier: ' Value'
          Parameter
            Identifier: ' ttl'
            QuestionToken
            NumberKeyword
          AnyKeyword
        MethodSignature
          Identifier: '
		delete'
          Parameter
            Identifier: 'key'
            StringKeyword
          UnionType
            BooleanKeyword
            TypeReference
              Identifier: ' Promise'
              BooleanKeyword
        MethodSignature
          Identifier: '
		clear'
          UnionType
            VoidKeyword
            TypeReference
              Identifier: ' Promise'
              VoidKeyword
        MethodSignature
          Identifier: '
		has'
          QuestionToken
          Parameter
            Identifier: 'key'
            StringKeyword
          UnionType
            BooleanKeyword
            TypeReference
              Identifier: ' Promise'
              BooleanKeyword
        MethodSignature
          Identifier: '
		getMany'
          QuestionToken
          Parameter
            Identifier: '
			keys'
            ArrayType
              StringKeyword
          UnionType
            TypeReference
              Identifier: ' Array'
              TypeReference
                Identifier: 'StoredData'
                TypeReference
                  Identifier: 'Value'
            TypeReference
              Identifier: ' Promise'
              TypeReference
                Identifier: 'Array'
                TypeReference
                  Identifier: 'StoredData'
                  TypeReference
                    Identifier: 'Value'
            UndefinedKeyword
  ExportAssignment
    Identifier: ' Keyv'
