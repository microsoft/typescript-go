SourceFile
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' ClassicConfig'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' Linter'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamespaceImport
        Identifier: ' Shared'
    StringLiteral
  ClassDeclaration
    DeclareKeyword
    Identifier: ' LegacyESLintBase'
    HeritageClause
      ExpressionWithTypeArguments
        PropertyAccessExpression
          Identifier: ' Shared'
          Identifier: 'ESLintBase'
        TypeReference
          QualifiedName
            Identifier: 'ClassicConfig'
            Identifier: 'Config'
        TypeReference
          QualifiedName
            Identifier: ' LegacyESLint'
            Identifier: 'ESLintOptions'
    PropertyDeclaration
      StaticKeyword
      ReadonlyKeyword
      Identifier: ' configType'
      LiteralType
        StringLiteral
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' LegacyESLint_base'
        TypeQuery
          Identifier: ' LegacyESLintBase'
  ClassDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' LegacyESLint'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' LegacyESLint_base'
  ModuleDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' LegacyESLint'
    ModuleBlock
      InterfaceDeclaration
        Identifier: ' ESLintOptions'
        HeritageClause
          ExpressionWithTypeArguments
            PropertyAccessExpression
              Identifier: ' Shared'
              Identifier: 'ESLintOptions'
            TypeReference
              QualifiedName
                Identifier: 'ClassicConfig'
                Identifier: 'Config'
        PropertySignature
          Identifier: '
        /**
         * If you pass directory paths to the eslint.lintFiles() method, ESLint checks the files in those directories that
         * have the given extensions. For example, when passing the src/ directory and extensions is [".js", ".ts"], ESLint
         * will lint *.js and *.ts files in src/. If extensions is null, ESLint checks *.js files and files that match
         * overrides[].files patterns in your configuration.
         * Note: This option only applies when you pass directory paths to the eslint.lintFiles() method.
         * If you pass glob patterns, ESLint will lint all files matching the glob pattern regardless of extension.
         */
        extensions'
          QuestionToken
          UnionType
            ArrayType
              StringKeyword
            LiteralType
              NullKeyword
        PropertySignature
          Identifier: '
        /**
         * If false is present, the eslint.lintFiles() method doesn't respect `.eslintignore` files in your configuration.
         * @default true
         */
        ignore'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        /**
         * The path to a file ESLint uses instead of `$CWD/.eslintignore`.
         * If a path is present and the file doesn't exist, this constructor will throw an error.
         */
        ignorePath'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * The path to a configuration file, overrides all configurations used with this instance.
         * The options.overrideConfig option is applied after this option is applied.
         */
        overrideConfigFile'
          QuestionToken
          UnionType
            StringKeyword
            LiteralType
              NullKeyword
        PropertySignature
          Identifier: '
        /**
         * The severity to report unused eslint-disable directives.
         * If this option is a severity, it overrides the reportUnusedDisableDirectives setting in your configurations.
         */
        reportUnusedDisableDirectives'
          QuestionToken
          UnionType
            TypeReference
              QualifiedName
                Identifier: ' Linter'
                Identifier: 'SeverityString'
            LiteralType
              NullKeyword
        PropertySignature
          Identifier: '
        /**
         * The path to a directory where plugins should be resolved from.
         * If null is present, ESLint loads plugins from the location of the configuration file that contains the plugin
         * setting.
         * If a path is present, ESLint loads all plugins from there.
         */
        resolvePluginsRelativeTo'
          QuestionToken
          UnionType
            StringKeyword
            LiteralType
              NullKeyword
        PropertySignature
          Identifier: '
        /**
         * An array of paths to directories to load custom rules from.
         */
        rulePaths'
          QuestionToken
          ArrayType
            StringKeyword
        PropertySignature
          Identifier: '
        /**
         * If false is present, ESLint doesn't load configuration files (.eslintrc.* files).
         * Only the configuration of the constructor options is valid.
         */
        useEslintrc'
          QuestionToken
          BooleanKeyword
      TypeAliasDeclaration
        Identifier: ' DeprecatedRuleInfo'
        TypeReference
          QualifiedName
            Identifier: ' Shared'
            Identifier: 'DeprecatedRuleInfo'
      TypeAliasDeclaration
        Identifier: ' EditInfo'
        TypeReference
          QualifiedName
            Identifier: ' Shared'
            Identifier: 'EditInfo'
      TypeAliasDeclaration
        Identifier: ' Formatter'
        TypeReference
          QualifiedName
            Identifier: ' Shared'
            Identifier: 'Formatter'
      TypeAliasDeclaration
        Identifier: ' LintMessage'
        TypeReference
          QualifiedName
            Identifier: ' Shared'
            Identifier: 'LintMessage'
      TypeAliasDeclaration
        Identifier: ' LintResult'
        TypeReference
          Identifier: ' Omit'
          TypeReference
            QualifiedName
              Identifier: 'Shared'
              Identifier: 'LintResult'
          LiteralType
            StringLiteral
      TypeAliasDeclaration
        Identifier: ' LintTextOptions'
        TypeReference
          QualifiedName
            Identifier: ' Shared'
            Identifier: 'LintTextOptions'
      TypeAliasDeclaration
        Identifier: ' SuppressedLintMessage'
        TypeReference
          QualifiedName
            Identifier: ' Shared'
            Identifier: 'SuppressedLintMessage'
  ExportDeclaration
    NamedExports
