SourceFile
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' EventEmitter'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' StringDecoder'
    StringLiteral
  TypeAliasDeclaration
    Identifier: ' SD'
    IntersectionType
      TypeReference
        Identifier: ' StringDecoder'
      TypeLiteral
        PropertySignature
          Identifier: '
    lastNeed'
          BooleanKeyword
  ExportDeclaration
    NamedExports
      ExportSpecifier
        Identifier: ' SD'
      ExportSpecifier
        Identifier: ' Pipe'
      ExportSpecifier
        Identifier: ' PipeProxyErrors'
  VariableStatement
    ExportKeyword
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' isStream'
        FunctionType
          Parameter
            Identifier: 's'
            AnyKeyword
          TypePredicate
            Identifier: ' s'
            UnionType
              TypeReference
                QualifiedName
                  Identifier: ' NodeJS'
                  Identifier: 'WriteStream'
              TypeReference
                QualifiedName
                  Identifier: ' NodeJS'
                  Identifier: 'ReadStream'
              TypeReference
                Identifier: ' Minipass'
                AnyKeyword
                AnyKeyword
                AnyKeyword
              ParenthesizedType
                IntersectionType
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeJS'
                      Identifier: 'ReadStream'
                  TypeLiteral
                    PropertySignature
                      Identifier: '
    fd'
                      NumberKeyword
              ParenthesizedType
                IntersectionType
                  TypeReference
                    Identifier: 'EventEmitter'
                  TypeLiteral
                    MethodSignature
                      Identifier: '
    pause'
                      AnyKeyword
                    MethodSignature
                      Identifier: '
    resume'
                      AnyKeyword
                    MethodSignature
                      Identifier: '
    pipe'
                      Parameter
                        DotDotDotToken
                        Identifier: 'destArgs'
                        ArrayType
                          AnyKeyword
                      AnyKeyword
              ParenthesizedType
                IntersectionType
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeJS'
                      Identifier: 'WriteStream'
                  TypeLiteral
                    PropertySignature
                      Identifier: '
    fd'
                      NumberKeyword
              ParenthesizedType
                IntersectionType
                  TypeReference
                    Identifier: 'EventEmitter'
                  TypeLiteral
                    MethodSignature
                      Identifier: '
    end'
                      AnyKeyword
                    MethodSignature
                      Identifier: '
    write'
                      Parameter
                        Identifier: 'chunk'
                        AnyKeyword
                      Parameter
                        DotDotDotToken
                        Identifier: 'args'
                        ArrayType
                          AnyKeyword
                      AnyKeyword
  VariableStatement
    ExportKeyword
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' isReadable'
        FunctionType
          Parameter
            Identifier: 's'
            AnyKeyword
          TypePredicate
            Identifier: ' s'
            TypeReference
              QualifiedName
                Identifier: ' Minipass'
                Identifier: 'Readable'
  VariableStatement
    ExportKeyword
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' isWritable'
        FunctionType
          Parameter
            Identifier: 's'
            AnyKeyword
          TypePredicate
            Identifier: ' s'
            TypeReference
              QualifiedName
                Identifier: ' Minipass'
                Identifier: 'Readable'
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' EOF'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' MAYBE_EMIT_END'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' EMITTED_END'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' EMITTING_END'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' EMITTED_ERROR'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' CLOSED'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' READ'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' FLUSH'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' FLUSHCHUNK'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' ENCODING'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' DECODER'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' FLOWING'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' PAUSED'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' RESUME'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' BUFFER'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' PIPES'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' BUFFERLENGTH'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' BUFFERPUSH'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' BUFFERSHIFT'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' OBJECTMODE'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' DESTROYED'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' ERROR'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' EMITDATA'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' EMITEND'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' EMITEND2'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' ASYNC'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' ABORT'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' ABORTED'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' SIGNAL'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' DATALISTENERS'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' DISCARDED'
        TypeOperator
          SymbolKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' PipeOptions'
    PropertySignature
      Identifier: '
    /**
     * end the destination stream when the source stream ends
     */
    end'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * proxy errors from the source stream to the destination stream
     */
    proxyErrors'
      QuestionToken
      BooleanKeyword
  ClassDeclaration
    DeclareKeyword
    Identifier: ' Pipe'
    TypeParameter
      Identifier: 'T'
      UnknownKeyword
    PropertyDeclaration
      Identifier: '
    src'
      TypeReference
        Identifier: ' Minipass'
        TypeReference
          Identifier: 'T'
    PropertyDeclaration
      Identifier: '
    dest'
      TypeReference
        Identifier: ' Minipass'
        AnyKeyword
        TypeReference
          Identifier: ' T'
    PropertyDeclaration
      Identifier: '
    opts'
      TypeReference
        Identifier: ' PipeOptions'
    PropertyDeclaration
      Identifier: '
    ondrain'
      FunctionType
        AnyKeyword
    Constructor
      Parameter
        Identifier: 'src'
        TypeReference
          Identifier: ' Minipass'
          TypeReference
            Identifier: 'T'
      Parameter
        Identifier: ' dest'
        TypeReference
          QualifiedName
            Identifier: ' Minipass'
            Identifier: 'Writable'
      Parameter
        Identifier: ' opts'
        TypeReference
          Identifier: ' PipeOptions'
    MethodDeclaration
      Identifier: '
    unpipe'
      VoidKeyword
    MethodDeclaration
      Identifier: '
    proxyErrors'
      Parameter
        Identifier: '_er'
        AnyKeyword
      VoidKeyword
    MethodDeclaration
      Identifier: '
    end'
      VoidKeyword
  ClassDeclaration
    DeclareKeyword
    Identifier: ' PipeProxyErrors'
    TypeParameter
      Identifier: 'T'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Pipe'
        TypeReference
          Identifier: 'T'
    MethodDeclaration
      Identifier: '
    unpipe'
      VoidKeyword
    Constructor
      Parameter
        Identifier: 'src'
        TypeReference
          Identifier: ' Minipass'
          TypeReference
            Identifier: 'T'
      Parameter
        Identifier: ' dest'
        TypeReference
          QualifiedName
            Identifier: ' Minipass'
            Identifier: 'Writable'
      Parameter
        Identifier: ' opts'
        TypeReference
          Identifier: ' PipeOptions'
  ModuleDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' Minipass'
    ModuleBlock
      TypeAliasDeclaration
        ExportKeyword
        Identifier: ' Encoding'
        UnionType
          TypeReference
            Identifier: ' BufferEncoding'
          LiteralType
            StringLiteral
          LiteralType
            NullKeyword
      TypeAliasDeclaration
        ExportKeyword
        Identifier: ' Writable'
        UnionType
          TypeReference
            Identifier: ' Minipass'
            AnyKeyword
            AnyKeyword
            AnyKeyword
          TypeReference
            QualifiedName
              Identifier: ' NodeJS'
              Identifier: 'WriteStream'
          ParenthesizedType
            IntersectionType
              TypeReference
                QualifiedName
                  Identifier: 'NodeJS'
                  Identifier: 'WriteStream'
              TypeLiteral
                PropertySignature
                  Identifier: '
        fd'
                  NumberKeyword
          ParenthesizedType
            IntersectionType
              TypeReference
                Identifier: 'EventEmitter'
              TypeLiteral
                MethodSignature
                  Identifier: '
        end'
                  AnyKeyword
                MethodSignature
                  Identifier: '
        write'
                  Parameter
                    Identifier: 'chunk'
                    AnyKeyword
                  Parameter
                    DotDotDotToken
                    Identifier: 'args'
                    ArrayType
                      AnyKeyword
                  AnyKeyword
      TypeAliasDeclaration
        ExportKeyword
        Identifier: ' Readable'
        UnionType
          TypeReference
            Identifier: ' Minipass'
            AnyKeyword
            AnyKeyword
            AnyKeyword
          TypeReference
            QualifiedName
              Identifier: ' NodeJS'
              Identifier: 'ReadStream'
          ParenthesizedType
            IntersectionType
              TypeReference
                QualifiedName
                  Identifier: 'NodeJS'
                  Identifier: 'ReadStream'
              TypeLiteral
                PropertySignature
                  Identifier: '
        fd'
                  NumberKeyword
          ParenthesizedType
            IntersectionType
              TypeReference
                Identifier: 'EventEmitter'
              TypeLiteral
                MethodSignature
                  Identifier: '
        pause'
                  AnyKeyword
                MethodSignature
                  Identifier: '
        resume'
                  AnyKeyword
                MethodSignature
                  Identifier: '
        pipe'
                  Parameter
                    DotDotDotToken
                    Identifier: 'destArgs'
                    ArrayType
                      AnyKeyword
                  AnyKeyword
      TypeAliasDeclaration
        ExportKeyword
        Identifier: ' DualIterable'
        TypeParameter
          Identifier: 'T'
        IntersectionType
          TypeReference
            Identifier: ' Iterable'
            TypeReference
              Identifier: 'T'
          TypeReference
            Identifier: ' AsyncIterable'
            TypeReference
              Identifier: 'T'
      TypeAliasDeclaration
        Identifier: ' EventArguments'
        TypeReference
          Identifier: ' Record'
          UnionType
            StringKeyword
            SymbolKeyword
          ArrayType
            UnknownKeyword
      InterfaceDeclaration
        ExportKeyword
        Identifier: ' Events'
        TypeParameter
          Identifier: 'RType'
          AnyKeyword
          TypeReference
            Identifier: ' Buffer'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' EventArguments'
        PropertySignature
          Identifier: '
        readable'
          TupleType
        PropertySignature
          Identifier: '
        data'
          TupleType
            NamedTupleMember
              Identifier: 'chunk'
              TypeReference
                Identifier: ' RType'
        PropertySignature
          Identifier: '
        error'
          TupleType
            NamedTupleMember
              Identifier: 'er'
              UnknownKeyword
        PropertySignature
          Identifier: '
        abort'
          TupleType
            NamedTupleMember
              Identifier: 'reason'
              UnknownKeyword
        PropertySignature
          Identifier: '
        drain'
          TupleType
        PropertySignature
          Identifier: '
        resume'
          TupleType
        PropertySignature
          Identifier: '
        end'
          TupleType
        PropertySignature
          Identifier: '
        finish'
          TupleType
        PropertySignature
          Identifier: '
        prefinish'
          TupleType
        PropertySignature
          Identifier: '
        close'
          TupleType
        PropertySignature
          ComputedPropertyName
            Identifier: 'DESTROYED'
          TupleType
            NamedTupleMember
              Identifier: 'er'
              QuestionToken
              UnknownKeyword
        PropertySignature
          ComputedPropertyName
            Identifier: 'ERROR'
          TupleType
            NamedTupleMember
              Identifier: 'er'
              UnknownKeyword
      TypeAliasDeclaration
        ExportKeyword
        Identifier: ' ContiguousData'
        UnionType
          TypeReference
            Identifier: ' Buffer'
          TypeReference
            Identifier: ' ArrayBufferLike'
          TypeReference
            Identifier: ' ArrayBufferView'
          StringKeyword
      TypeAliasDeclaration
        ExportKeyword
        Identifier: ' BufferOrString'
        UnionType
          TypeReference
            Identifier: ' Buffer'
          StringKeyword
      TypeAliasDeclaration
        ExportKeyword
        Identifier: ' SharedOptions'
        TypeLiteral
          PropertySignature
            Identifier: '
        /**
         * Defer all data emission and other events until the end of the
         * current tick, similar to Node core streams
         */
        async'
            QuestionToken
            BooleanKeyword
          PropertySignature
            Identifier: '
        /**
         * A signal which will abort the stream
         */
        signal'
            QuestionToken
            TypeReference
              Identifier: ' AbortSignal'
          PropertySignature
            Identifier: '
        /**
         * Output string encoding. Set to `null` or `'buffer'` (or omit) to
         * emit Buffer objects rather than strings.
         *
         * Conflicts with `objectMode`
         */
        encoding'
            QuestionToken
            UnionType
              TypeReference
                Identifier: ' BufferEncoding'
              LiteralType
                NullKeyword
              LiteralType
                StringLiteral
          PropertySignature
            Identifier: '
        /**
         * Output data exactly as it was written, supporting non-buffer/string
         * data (such as arbitrary objects, falsey values, etc.)
         *
         * Conflicts with `encoding`
         */
        objectMode'
            QuestionToken
            BooleanKeyword
      TypeAliasDeclaration
        ExportKeyword
        Identifier: ' EncodingOptions'
        IntersectionType
          TypeReference
            Identifier: ' SharedOptions'
          TypeLiteral
            PropertySignature
              Identifier: '
        encoding'
              TypeReference
                Identifier: ' BufferEncoding'
            PropertySignature
              Identifier: '
        objectMode'
              QuestionToken
              LiteralType
                FalseKeyword
      TypeAliasDeclaration
        ExportKeyword
        Identifier: ' BufferOptions'
        IntersectionType
          TypeReference
            Identifier: ' SharedOptions'
          TypeLiteral
            PropertySignature
              Identifier: '
        encoding'
              QuestionToken
              UnionType
                LiteralType
                  NullKeyword
                LiteralType
                  StringLiteral
            PropertySignature
              Identifier: '
        objectMode'
              QuestionToken
              LiteralType
                FalseKeyword
      TypeAliasDeclaration
        ExportKeyword
        Identifier: ' ObjectModeOptions'
        IntersectionType
          TypeReference
            Identifier: ' SharedOptions'
          TypeLiteral
            PropertySignature
              Identifier: '
        objectMode'
              LiteralType
                TrueKeyword
            PropertySignature
              Identifier: '
        encoding'
              QuestionToken
              LiteralType
                NullKeyword
      TypeAliasDeclaration
        ExportKeyword
        Identifier: ' Options'
        TypeParameter
          Identifier: 'T'
        UnionType
          TypeReference
            Identifier: ' ObjectModeOptions'
          ParenthesizedType
            ConditionalType
              TypeReference
                Identifier: 'T'
              StringKeyword
              TypeReference
                Identifier: ' EncodingOptions'
              ConditionalType
                TypeReference
                  Identifier: ' T'
                TypeReference
                  Identifier: ' Buffer'
                TypeReference
                  Identifier: ' BufferOptions'
                TypeReference
                  Identifier: ' SharedOptions'
      ExportDeclaration
        NamedExports
  ClassDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' Minipass'
    TypeParameter
      Identifier: 'RType'
      UnknownKeyword
      TypeReference
        Identifier: ' Buffer'
    TypeParameter
      Identifier: ' WType'
      UnknownKeyword
      ConditionalType
        TypeReference
          Identifier: ' RType'
        TypeReference
          QualifiedName
            Identifier: ' Minipass'
            Identifier: 'BufferOrString'
        TypeReference
          QualifiedName
            Identifier: ' Minipass'
            Identifier: 'ContiguousData'
        TypeReference
          Identifier: ' RType'
    TypeParameter
      Identifier: ' Events'
      TypeReference
        QualifiedName
          Identifier: ' Minipass'
          Identifier: 'Events'
        TypeReference
          Identifier: 'RType'
      TypeReference
        QualifiedName
          Identifier: ' Minipass'
          Identifier: 'Events'
        TypeReference
          Identifier: 'RType'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' EventEmitter'
    HeritageClause
      ExpressionWithTypeArguments
        PropertyAccessExpression
          Identifier: ' Minipass'
          Identifier: 'DualIterable'
        TypeReference
          Identifier: 'RType'
    PropertyDeclaration
      ComputedPropertyName
        Identifier: 'FLOWING'
      BooleanKeyword
    PropertyDeclaration
      ComputedPropertyName
        Identifier: 'PAUSED'
      BooleanKeyword
    PropertyDeclaration
      ComputedPropertyName
        Identifier: 'PIPES'
      ArrayType
        TypeReference
          Identifier: ' Pipe'
          TypeReference
            Identifier: 'RType'
    PropertyDeclaration
      ComputedPropertyName
        Identifier: 'BUFFER'
      ArrayType
        TypeReference
          Identifier: ' RType'
    PropertyDeclaration
      ComputedPropertyName
        Identifier: 'OBJECTMODE'
      BooleanKeyword
    PropertyDeclaration
      ComputedPropertyName
        Identifier: 'ENCODING'
      UnionType
        TypeReference
          Identifier: ' BufferEncoding'
        LiteralType
          NullKeyword
    PropertyDeclaration
      ComputedPropertyName
        Identifier: 'ASYNC'
      BooleanKeyword
    PropertyDeclaration
      ComputedPropertyName
        Identifier: 'DECODER'
      UnionType
        TypeReference
          Identifier: ' SD'
        LiteralType
          NullKeyword
    PropertyDeclaration
      ComputedPropertyName
        Identifier: 'EOF'
      BooleanKeyword
    PropertyDeclaration
      ComputedPropertyName
        Identifier: 'EMITTED_END'
      BooleanKeyword
    PropertyDeclaration
      ComputedPropertyName
        Identifier: 'EMITTING_END'
      BooleanKeyword
    PropertyDeclaration
      ComputedPropertyName
        Identifier: 'CLOSED'
      BooleanKeyword
    PropertyDeclaration
      ComputedPropertyName
        Identifier: 'EMITTED_ERROR'
      UnknownKeyword
    PropertyDeclaration
      ComputedPropertyName
        Identifier: 'BUFFERLENGTH'
      NumberKeyword
    PropertyDeclaration
      ComputedPropertyName
        Identifier: 'DESTROYED'
      BooleanKeyword
    PropertyDeclaration
      ComputedPropertyName
        Identifier: 'SIGNAL'
      QuestionToken
      TypeReference
        Identifier: ' AbortSignal'
    PropertyDeclaration
      ComputedPropertyName
        Identifier: 'ABORTED'
      BooleanKeyword
    PropertyDeclaration
      ComputedPropertyName
        Identifier: 'DATALISTENERS'
      NumberKeyword
    PropertyDeclaration
      ComputedPropertyName
        Identifier: 'DISCARDED'
      BooleanKeyword
    PropertyDeclaration
      Identifier: '
    /**
     * true if the stream can be written
     */
    writable'
      BooleanKeyword
    PropertyDeclaration
      Identifier: '
    /**
     * true if the stream can be read
     */
    readable'
      BooleanKeyword
    Constructor
      Parameter
        DotDotDotToken
        Identifier: 'args'
        UnionType
          TupleType
            TypeReference
              QualifiedName
                Identifier: 'Minipass'
                Identifier: 'ObjectModeOptions'
          ParenthesizedType
            ConditionalType
              TypeReference
                Identifier: 'RType'
              TypeReference
                Identifier: ' Buffer'
              UnionType
                TupleType
                TupleType
                  TypeReference
                    QualifiedName
                      Identifier: 'Minipass'
                      Identifier: 'Options'
                    TypeReference
                      Identifier: 'RType'
              TupleType
                TypeReference
                  QualifiedName
                    Identifier: 'Minipass'
                    Identifier: 'Options'
                  TypeReference
                    Identifier: 'RType'
    GetAccessor
      Identifier: ' bufferLength'
      NumberKeyword
    GetAccessor
      Identifier: ' encoding'
      UnionType
        TypeReference
          Identifier: ' BufferEncoding'
        LiteralType
          NullKeyword
    SetAccessor
      Identifier: ' encoding'
      Parameter
        Identifier: '_enc'
        UnionType
          TypeReference
            Identifier: ' BufferEncoding'
          LiteralType
            NullKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @deprecated - Encoding may only be set at instantiation time
     */
    setEncoding'
      Parameter
        Identifier: '_enc'
        TypeReference
          QualifiedName
            Identifier: ' Minipass'
            Identifier: 'Encoding'
      VoidKeyword
    GetAccessor
      Identifier: ' objectMode'
      BooleanKeyword
    SetAccessor
      Identifier: ' objectMode'
      Parameter
        Identifier: '_om'
        BooleanKeyword
    GetAccessor
      ComputedPropertyName
        StringLiteral
      BooleanKeyword
    SetAccessor
      ComputedPropertyName
        StringLiteral
      Parameter
        Identifier: 'a'
        BooleanKeyword
    MethodDeclaration
      ComputedPropertyName
        Identifier: 'ABORT'
      VoidKeyword
    GetAccessor
      Identifier: ' aborted'
      BooleanKeyword
    SetAccessor
      Identifier: ' aborted'
      Parameter
        Identifier: '_'
        BooleanKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Write data into the stream
     *
     * If the chunk written is a string, and encoding is not specified, then
     * `utf8` will be assumed. If the stream encoding matches the encoding of
     * a written string, and the state of the string decoder allows it, then
     * the string will be passed through to either the output or the internal
     * buffer without any processing. Otherwise, it will be turned into a
     * Buffer object for processing into the desired encoding.
     *
     * If provided, `cb` function is called immediately before return for
     * sync streams, or on next tick for async streams, because for this
     * base class, a chunk is considered "processed" once it is accepted
     * and either emitted or buffered. That is, the callback does not indicate
     * that the chunk has been eventually emitted, though of course child
     * classes can override this function to do whatever processing is required
     * and call `super.write(...)` only once processing is completed.
     */
    write'
      Parameter
        Identifier: 'chunk'
        TypeReference
          Identifier: ' WType'
      Parameter
        Identifier: ' cb'
        QuestionToken
        FunctionType
          VoidKeyword
      BooleanKeyword
    MethodDeclaration
      Identifier: '
    write'
      Parameter
        Identifier: 'chunk'
        TypeReference
          Identifier: ' WType'
      Parameter
        Identifier: ' encoding'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' Minipass'
            Identifier: 'Encoding'
      Parameter
        Identifier: ' cb'
        QuestionToken
        FunctionType
          VoidKeyword
      BooleanKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Low-level explicit read method.
     *
     * In objectMode, the argument is ignored, and one item is returned if
     * available.
     *
     * `n` is the number of bytes (or in the case of encoding streams,
     * characters) to consume. If `n` is not provided, then the entire buffer
     * is returned, or `null` is returned if no data is available.
     *
     * If `n` is greater that the amount of data in the internal buffer,
     * then `null` is returned.
     */
    read'
      Parameter
        Identifier: 'n'
        QuestionToken
        UnionType
          NumberKeyword
          LiteralType
            NullKeyword
      UnionType
        TypeReference
          Identifier: ' RType'
        LiteralType
          NullKeyword
    MethodDeclaration
      ComputedPropertyName
        Identifier: 'READ'
      Parameter
        Identifier: 'n'
        UnionType
          NumberKeyword
          LiteralType
            NullKeyword
      Parameter
        Identifier: ' chunk'
        TypeReference
          Identifier: ' RType'
      TypeReference
        Identifier: ' RType'
    MethodDeclaration
      Identifier: '
    /**
     * End the stream, optionally providing a final write.
     *
     * See {@link Minipass#write} for argument descriptions
     */
    end'
      Parameter
        Identifier: 'cb'
        QuestionToken
        FunctionType
          VoidKeyword
      ThisType
    MethodDeclaration
      Identifier: '
    end'
      Parameter
        Identifier: 'chunk'
        TypeReference
          Identifier: ' WType'
      Parameter
        Identifier: ' cb'
        QuestionToken
        FunctionType
          VoidKeyword
      ThisType
    MethodDeclaration
      Identifier: '
    end'
      Parameter
        Identifier: 'chunk'
        TypeReference
          Identifier: ' WType'
      Parameter
        Identifier: ' encoding'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' Minipass'
            Identifier: 'Encoding'
      Parameter
        Identifier: ' cb'
        QuestionToken
        FunctionType
          VoidKeyword
      ThisType
    MethodDeclaration
      ComputedPropertyName
        Identifier: 'RESUME'
      VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Resume the stream if it is currently in a paused state
     *
     * If called when there are no pipe destinations or `data` event listeners,
     * this will place the stream in a "discarded" state, where all data will
     * be thrown away. The discarded state is removed if a pipe destination or
     * data handler is added, if pause() is called, or if any synchronous or
     * asynchronous iteration is started.
     */
    resume'
      VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Pause the stream
     */
    pause'
      VoidKeyword
    GetAccessor
      Identifier: ' destroyed'
      BooleanKeyword
    GetAccessor
      Identifier: ' flowing'
      BooleanKeyword
    GetAccessor
      Identifier: ' paused'
      BooleanKeyword
    MethodDeclaration
      ComputedPropertyName
        Identifier: 'BUFFERPUSH'
      Parameter
        Identifier: 'chunk'
        TypeReference
          Identifier: ' RType'
      VoidKeyword
    MethodDeclaration
      ComputedPropertyName
        Identifier: 'BUFFERSHIFT'
      TypeReference
        Identifier: ' RType'
    MethodDeclaration
      ComputedPropertyName
        Identifier: 'FLUSH'
      Parameter
        Identifier: 'noDrain'
        QuestionToken
        BooleanKeyword
      VoidKeyword
    MethodDeclaration
      ComputedPropertyName
        Identifier: 'FLUSHCHUNK'
      Parameter
        Identifier: 'chunk'
        TypeReference
          Identifier: ' RType'
      BooleanKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Pipe all data emitted by this stream into the destination provided.
     *
     * Triggers the flow of data.
     */
    pipe'
      TypeParameter
        Identifier: 'W'
        TypeReference
          QualifiedName
            Identifier: ' Minipass'
            Identifier: 'Writable'
      Parameter
        Identifier: 'dest'
        TypeReference
          Identifier: ' W'
      Parameter
        Identifier: ' opts'
        QuestionToken
        TypeReference
          Identifier: ' PipeOptions'
      TypeReference
        Identifier: ' W'
    MethodDeclaration
      Identifier: '
    /**
     * Fully unhook a piped destination stream.
     *
     * If the destination stream was the only consumer of this stream (ie,
     * there are no other piped destinations or `'data'` event listeners)
     * then the flow of data will stop until there is another consumer or
     * {@link Minipass#resume} is explicitly called.
     */
    unpipe'
      TypeParameter
        Identifier: 'W'
        TypeReference
          QualifiedName
            Identifier: ' Minipass'
            Identifier: 'Writable'
      Parameter
        Identifier: 'dest'
        TypeReference
          Identifier: ' W'
      VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Alias for {@link Minipass#on}
     */
    addListener'
      TypeParameter
        Identifier: 'Event'
        TypeOperator
          TypeReference
            Identifier: ' Events'
      Parameter
        Identifier: 'ev'
        TypeReference
          Identifier: ' Event'
      Parameter
        Identifier: ' handler'
        FunctionType
          Parameter
            DotDotDotToken
            Identifier: 'args'
            IndexedAccessType
              TypeReference
                Identifier: ' Events'
              TypeReference
                Identifier: 'Event'
          AnyKeyword
      ThisType
    MethodDeclaration
      Identifier: '
    /**
     * Mostly identical to `EventEmitter.on`, with the following
     * behavior differences to prevent data loss and unnecessary hangs:
     *
     * - Adding a 'data' event handler will trigger the flow of data
     *
     * - Adding a 'readable' event handler when there is data waiting to be read
     *   will cause 'readable' to be emitted immediately.
     *
     * - Adding an 'endish' event handler ('end', 'finish', etc.) which has
     *   already passed will cause the event to be emitted immediately and all
     *   handlers removed.
     *
     * - Adding an 'error' event handler after an error has been emitted will
     *   cause the event to be re-emitted immediately with the error previously
     *   raised.
     */
    on'
      TypeParameter
        Identifier: 'Event'
        TypeOperator
          TypeReference
            Identifier: ' Events'
      Parameter
        Identifier: 'ev'
        TypeReference
          Identifier: ' Event'
      Parameter
        Identifier: ' handler'
        FunctionType
          Parameter
            DotDotDotToken
            Identifier: 'args'
            IndexedAccessType
              TypeReference
                Identifier: ' Events'
              TypeReference
                Identifier: 'Event'
          AnyKeyword
      ThisType
    MethodDeclaration
      Identifier: '
    /**
     * Alias for {@link Minipass#off}
     */
    removeListener'
      TypeParameter
        Identifier: 'Event'
        TypeOperator
          TypeReference
            Identifier: ' Events'
      Parameter
        Identifier: 'ev'
        TypeReference
          Identifier: ' Event'
      Parameter
        Identifier: ' handler'
        FunctionType
          Parameter
            DotDotDotToken
            Identifier: 'args'
            IndexedAccessType
              TypeReference
                Identifier: ' Events'
              TypeReference
                Identifier: 'Event'
          AnyKeyword
      ThisType
    MethodDeclaration
      Identifier: '
    /**
     * Mostly identical to `EventEmitter.off`
     *
     * If a 'data' event handler is removed, and it was the last consumer
     * (ie, there are no pipe destinations or other 'data' event listeners),
     * then the flow of data will stop until there is another consumer or
     * {@link Minipass#resume} is explicitly called.
     */
    off'
      TypeParameter
        Identifier: 'Event'
        TypeOperator
          TypeReference
            Identifier: ' Events'
      Parameter
        Identifier: 'ev'
        TypeReference
          Identifier: ' Event'
      Parameter
        Identifier: ' handler'
        FunctionType
          Parameter
            DotDotDotToken
            Identifier: 'args'
            IndexedAccessType
              TypeReference
                Identifier: ' Events'
              TypeReference
                Identifier: 'Event'
          AnyKeyword
      ThisType
    MethodDeclaration
      Identifier: '
    /**
     * Mostly identical to `EventEmitter.removeAllListeners`
     *
     * If all 'data' event handlers are removed, and they were the last consumer
     * (ie, there are no pipe destinations), then the flow of data will stop
     * until there is another consumer or {@link Minipass#resume} is explicitly
     * called.
     */
    removeAllListeners'
      TypeParameter
        Identifier: 'Event'
        TypeOperator
          TypeReference
            Identifier: ' Events'
      Parameter
        Identifier: 'ev'
        QuestionToken
        TypeReference
          Identifier: ' Event'
      ThisType
    GetAccessor
      Identifier: ' emittedEnd'
      BooleanKeyword
    MethodDeclaration
      ComputedPropertyName
        Identifier: 'MAYBE_EMIT_END'
      VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Mostly identical to `EventEmitter.emit`, with the following
     * behavior differences to prevent data loss and unnecessary hangs:
     *
     * If the stream has been destroyed, and the event is something other
     * than 'close' or 'error', then `false` is returned and no handlers
     * are called.
     *
     * If the event is 'end', and has already been emitted, then the event
     * is ignored. If the stream is in a paused or non-flowing state, then
     * the event will be deferred until data flow resumes. If the stream is
     * async, then handlers will be called on the next tick rather than
     * immediately.
     *
     * If the event is 'close', and 'end' has not yet been emitted, then
     * the event will be deferred until after 'end' is emitted.
     *
     * If the event is 'error', and an AbortSignal was provided for the stream,
     * and there are no listeners, then the event is ignored, matching the
     * behavior of node core streams in the presense of an AbortSignal.
     *
     * If the event is 'finish' or 'prefinish', then all listeners will be
     * removed after emitting the event, to prevent double-firing.
     */
    emit'
      TypeParameter
        Identifier: 'Event'
        TypeOperator
          TypeReference
            Identifier: ' Events'
      Parameter
        Identifier: 'ev'
        TypeReference
          Identifier: ' Event'
      Parameter
        DotDotDotToken
        Identifier: 'args'
        IndexedAccessType
          TypeReference
            Identifier: ' Events'
          TypeReference
            Identifier: 'Event'
      BooleanKeyword
    MethodDeclaration
      ComputedPropertyName
        Identifier: 'EMITDATA'
      Parameter
        Identifier: 'data'
        TypeReference
          Identifier: ' RType'
      BooleanKeyword
    MethodDeclaration
      ComputedPropertyName
        Identifier: 'EMITEND'
      BooleanKeyword
    MethodDeclaration
      ComputedPropertyName
        Identifier: 'EMITEND2'
      BooleanKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Return a Promise that resolves to an array of all emitted data once
     * the stream ends.
     */
    collect'
      TypeReference
        Identifier: ' Promise'
        IntersectionType
          ArrayType
            TypeReference
              Identifier: 'RType'
          TypeLiteral
            PropertySignature
              Identifier: '
        dataLength'
              NumberKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Return a Promise that resolves to the concatenation of all emitted data
     * once the stream ends.
     *
     * Not allowed on objectMode streams.
     */
    concat'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          Identifier: 'RType'
    MethodDeclaration
      Identifier: '
    /**
     * Return a void Promise that resolves once the stream ends.
     */
    promise'
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      ComputedPropertyName
        PropertyAccessExpression
          Identifier: 'Symbol'
          Identifier: 'asyncIterator'
      TypeReference
        Identifier: ' AsyncGenerator'
        TypeReference
          Identifier: 'RType'
        VoidKeyword
        VoidKeyword
    MethodDeclaration
      ComputedPropertyName
        PropertyAccessExpression
          Identifier: 'Symbol'
          Identifier: 'iterator'
      TypeReference
        Identifier: ' Generator'
        TypeReference
          Identifier: 'RType'
        VoidKeyword
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Destroy a stream, preventing it from being used for any further purpose.
     *
     * If the stream has a `close()` method, then it will be called on
     * destruction.
     *
     * After destruction, any attempt to write data, read data, or emit most
     * events will be ignored.
     *
     * If an error argument is provided, then it will be emitted in an
     * 'error' event.
     */
    destroy'
      Parameter
        Identifier: 'er'
        QuestionToken
        UnknownKeyword
      ThisType
    GetAccessor
      StaticKeyword
      Identifier: ' isStream'
      FunctionType
        Parameter
          Identifier: 's'
          AnyKeyword
        TypePredicate
          Identifier: ' s'
          UnionType
            TypeReference
              QualifiedName
                Identifier: ' NodeJS'
                Identifier: 'WriteStream'
            TypeReference
              QualifiedName
                Identifier: ' NodeJS'
                Identifier: 'ReadStream'
            TypeReference
              Identifier: ' Minipass'
              AnyKeyword
              AnyKeyword
              AnyKeyword
            ParenthesizedType
              IntersectionType
                TypeReference
                  QualifiedName
                    Identifier: 'NodeJS'
                    Identifier: 'ReadStream'
                TypeLiteral
                  PropertySignature
                    Identifier: '
        fd'
                    NumberKeyword
            ParenthesizedType
              IntersectionType
                TypeReference
                  Identifier: 'EventEmitter'
                TypeLiteral
                  MethodSignature
                    Identifier: '
        pause'
                    AnyKeyword
                  MethodSignature
                    Identifier: '
        resume'
                    AnyKeyword
                  MethodSignature
                    Identifier: '
        pipe'
                    Parameter
                      DotDotDotToken
                      Identifier: 'destArgs'
                      ArrayType
                        AnyKeyword
                    AnyKeyword
            ParenthesizedType
              IntersectionType
                TypeReference
                  QualifiedName
                    Identifier: 'NodeJS'
                    Identifier: 'WriteStream'
                TypeLiteral
                  PropertySignature
                    Identifier: '
        fd'
                    NumberKeyword
            ParenthesizedType
              IntersectionType
                TypeReference
                  Identifier: 'EventEmitter'
                TypeLiteral
                  MethodSignature
                    Identifier: '
        end'
                    AnyKeyword
                  MethodSignature
                    Identifier: '
        write'
                    Parameter
                      Identifier: 'chunk'
                      AnyKeyword
                    Parameter
                      DotDotDotToken
                      Identifier: 'args'
                      ArrayType
                        AnyKeyword
                    AnyKeyword
