SourceFile
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' Lib'
        ImportSpecifier
          Identifier: ' SourceType'
        ImportSpecifier
          Identifier: ' TSESTree'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' ReferencerOptions'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' ScopeManager'
    StringLiteral
  InterfaceDeclaration
    Identifier: ' AnalyzeOptions'
    PropertySignature
      Identifier: '
    /**
     * Known visitor keys.
     */
    childVisitorKeys'
      QuestionToken
      IndexedAccessType
        TypeReference
          Identifier: ' ReferencerOptions'
        LiteralType
          StringLiteral
    PropertySignature
      Identifier: '
    /**
     * Whether the whole script is executed under node.js environment.
     * When enabled, the scope manager adds a function scope immediately following the global scope.
     * Defaults to `false`.
     */
    globalReturn'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Implied strict mode.
     * Defaults to `false`.
     */
    impliedStrict'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * The identifier that's used for JSX Element creation (after transpilation).
     * This should not be a member expression - just the root identifier (i.e. use "React" instead of "React.createElement").
     * Defaults to `"React"`.
     */
    jsxPragma'
      QuestionToken
      UnionType
        StringKeyword
        LiteralType
          NullKeyword
    PropertySignature
      Identifier: '
    /**
     * The identifier that's used for JSX fragment elements (after transpilation).
     * If `null`, assumes transpilation will always use a member on `jsxFactory` (i.e. React.Fragment).
     * This should not be a member expression - just the root identifier (i.e. use "h" instead of "h.Fragment").
     * Defaults to `null`.
     */
    jsxFragmentName'
      QuestionToken
      UnionType
        StringKeyword
        LiteralType
          NullKeyword
    PropertySignature
      Identifier: '
    /**
     * The lib used by the project.
     * This automatically defines a type variable for any types provided by the configured TS libs.
     * Defaults to ['esnext'].
     *
     * https://www.typescriptlang.org/tsconfig#lib
     */
    lib'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' Lib'
    PropertySignature
      Identifier: '
    /**
     * The source type of the script.
     */
    sourceType'
      QuestionToken
      TypeReference
        Identifier: ' SourceType'
    PropertySignature
      Identifier: '
    /**
     * @deprecated This option never did what it was intended for and will be removed in a future major release.
     */
    emitDecoratorMetadata'
      QuestionToken
      BooleanKeyword
  FunctionDeclaration
    DeclareKeyword
    Identifier: ' analyze'
    Parameter
      Identifier: 'tree'
      TypeReference
        QualifiedName
          Identifier: ' TSESTree'
          Identifier: 'Node'
    Parameter
      Identifier: ' providedOptions'
      QuestionToken
      TypeReference
        Identifier: ' AnalyzeOptions'
    TypeReference
      Identifier: ' ScopeManager'
  ExportDeclaration
    NamedExports
      ExportSpecifier
        Identifier: ' analyze'
      ExportSpecifier
        Identifier: ' AnalyzeOptions'
