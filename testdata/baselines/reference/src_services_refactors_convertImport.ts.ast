SourceFile
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: '
    ApplicableRefactorInfo'
        ImportSpecifier
          Identifier: '
    arrayFrom'
        ImportSpecifier
          Identifier: '
    Debug'
        ImportSpecifier
          Identifier: '
    Diagnostics'
        ImportSpecifier
          Identifier: '
    emptyArray'
        ImportSpecifier
          Identifier: '
    Expression'
        ImportSpecifier
          Identifier: '
    factory'
        ImportSpecifier
          Identifier: '
    FindAllReferences'
        ImportSpecifier
          Identifier: '
    findAncestor'
        ImportSpecifier
          Identifier: '
    findNextToken'
        ImportSpecifier
          Identifier: '
    getAllowSyntheticDefaultImports'
        ImportSpecifier
          Identifier: '
    getLocaleSpecificMessage'
        ImportSpecifier
          Identifier: '
    getOwnValues'
        ImportSpecifier
          Identifier: '
    getParentNodeInSpan'
        ImportSpecifier
          Identifier: '
    getRefactorContextSpan'
        ImportSpecifier
          Identifier: '
    getTokenAtPosition'
        ImportSpecifier
          Identifier: '
    getUniqueName'
        ImportSpecifier
          Identifier: '
    Identifier'
        ImportSpecifier
          Identifier: '
    ImportClause'
        ImportSpecifier
          Identifier: '
    ImportDeclaration'
        ImportSpecifier
          Identifier: '
    ImportKind'
        ImportSpecifier
          Identifier: '
    ImportSpecifier'
        ImportSpecifier
          Identifier: '
    isExportSpecifier'
        ImportSpecifier
          Identifier: '
    isImportDeclaration'
        ImportSpecifier
          Identifier: '
    isJSDocImportTag'
        ImportSpecifier
          Identifier: '
    isPropertyAccessExpression'
        ImportSpecifier
          Identifier: '
    isPropertyAccessOrQualifiedName'
        ImportSpecifier
          Identifier: '
    isShorthandPropertyAssignment'
        ImportSpecifier
          Identifier: '
    isStringLiteral'
        ImportSpecifier
          Identifier: '
    moduleSpecifierToValidIdentifier'
        ImportSpecifier
          Identifier: '
    NamedImports'
        ImportSpecifier
          Identifier: '
    NamespaceImport'
        ImportSpecifier
          Identifier: '
    or'
        ImportSpecifier
          Identifier: '
    Program'
        ImportSpecifier
          Identifier: '
    PropertyAccessExpression'
        ImportSpecifier
          Identifier: '
    QualifiedName'
        ImportSpecifier
          Identifier: '
    RefactorContext'
        ImportSpecifier
          Identifier: '
    RefactorEditInfo'
        ImportSpecifier
          Identifier: '
    ScriptTarget'
        ImportSpecifier
          Identifier: '
    some'
        ImportSpecifier
          Identifier: '
    SourceFile'
        ImportSpecifier
          Identifier: '
    Symbol'
        ImportSpecifier
          Identifier: '
    SymbolFlags'
        ImportSpecifier
          Identifier: '
    SyntaxKind'
        ImportSpecifier
          Identifier: '
    textChanges'
        ImportSpecifier
          Identifier: '
    TypeChecker'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: '
    isRefactorErrorInfo'
        ImportSpecifier
          Identifier: '
    RefactorErrorInfo'
        ImportSpecifier
          Identifier: '
    registerRefactor'
    StringLiteral
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' refactorName'
        StringLiteral
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' actions'
        ObjectLiteralExpression
          PropertyAssignment
            ComputedPropertyName
              PropertyAccessExpression
                Identifier: 'ImportKind'
                Identifier: 'Named'
            ObjectLiteralExpression
              PropertyAssignment
                Identifier: '
        name'
                StringLiteral
              PropertyAssignment
                Identifier: '
        description'
                CallExpression
                  Identifier: ' getLocaleSpecificMessage'
                  PropertyAccessExpression
                    Identifier: 'Diagnostics'
                    Identifier: 'Convert_namespace_import_to_named_imports'
              PropertyAssignment
                Identifier: '
        kind'
                StringLiteral
          PropertyAssignment
            ComputedPropertyName
              PropertyAccessExpression
                Identifier: 'ImportKind'
                Identifier: 'Namespace'
            ObjectLiteralExpression
              PropertyAssignment
                Identifier: '
        name'
                StringLiteral
              PropertyAssignment
                Identifier: '
        description'
                CallExpression
                  Identifier: ' getLocaleSpecificMessage'
                  PropertyAccessExpression
                    Identifier: 'Diagnostics'
                    Identifier: 'Convert_named_imports_to_namespace_import'
              PropertyAssignment
                Identifier: '
        kind'
                StringLiteral
          PropertyAssignment
            ComputedPropertyName
              PropertyAccessExpression
                Identifier: 'ImportKind'
                Identifier: 'Default'
            ObjectLiteralExpression
              PropertyAssignment
                Identifier: '
        name'
                StringLiteral
              PropertyAssignment
                Identifier: '
        description'
                CallExpression
                  Identifier: ' getLocaleSpecificMessage'
                  PropertyAccessExpression
                    Identifier: 'Diagnostics'
                    Identifier: 'Convert_named_imports_to_default_import'
              PropertyAssignment
                Identifier: '
        kind'
                StringLiteral
  ExpressionStatement
    CallExpression
      Identifier: '

registerRefactor'
      Identifier: 'refactorName'
      ObjectLiteralExpression
        PropertyAssignment
          Identifier: '
    kinds'
          CallExpression
            PropertyAccessExpression
              CallExpression
                Identifier: ' getOwnValues'
                Identifier: 'actions'
              Identifier: 'map'
            ArrowFunction
              Parameter
                Identifier: 'a'
              EqualsGreaterThanToken
              PropertyAccessExpression
                Identifier: ' a'
                Identifier: 'kind'
        PropertyAssignment
          Identifier: '
    getAvailableActions'
          FunctionExpression
            Identifier: ' getRefactorActionsToConvertBetweenNamedAndNamespacedImports'
            Parameter
              Identifier: 'context'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ApplicableRefactorInfo'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' info'
                    CallExpression
                      Identifier: ' getImportConversionInfo'
                      Identifier: 'context'
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: ' context'
                          Identifier: 'triggerReason'
                        EqualsEqualsEqualsToken
                        StringLiteral
              IfStatement
                PrefixUnaryExpression
                  Identifier: 'info'
                ReturnStatement
                  Identifier: ' emptyArray'
              IfStatement
                PrefixUnaryExpression
                  CallExpression
                    Identifier: 'isRefactorErrorInfo'
                    Identifier: 'info'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' action'
                        ElementAccessExpression
                          Identifier: ' actions'
                          PropertyAccessExpression
                            Identifier: 'info'
                            Identifier: 'convertTo'
                  ReturnStatement
                    ArrayLiteralExpression
                      ObjectLiteralExpression
                        PropertyAssignment
                          Identifier: ' name'
                          Identifier: ' refactorName'
                        PropertyAssignment
                          Identifier: ' description'
                          PropertyAccessExpression
                            Identifier: ' action'
                            Identifier: 'description'
                        PropertyAssignment
                          Identifier: ' actions'
                          ArrayLiteralExpression
                            Identifier: 'action'
              IfStatement
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: 'context'
                    Identifier: 'preferences'
                  Identifier: 'provideRefactorNotApplicableReason'
                Block
                  ReturnStatement
                    CallExpression
                      PropertyAccessExpression
                        CallExpression
                          Identifier: ' getOwnValues'
                          Identifier: 'actions'
                        Identifier: 'map'
                      ArrowFunction
                        Parameter
                          Identifier: 'action'
                        EqualsGreaterThanToken
                        ParenthesizedExpression
                          ObjectLiteralExpression
                            PropertyAssignment
                              Identifier: '
                name'
                              Identifier: ' refactorName'
                            PropertyAssignment
                              Identifier: '
                description'
                              PropertyAccessExpression
                                Identifier: ' action'
                                Identifier: 'description'
                            PropertyAssignment
                              Identifier: '
                actions'
                              ArrayLiteralExpression
                                ObjectLiteralExpression
                                  SpreadAssignment
                                    Identifier: 'action'
                                  PropertyAssignment
                                    Identifier: ' notApplicableReason'
                                    PropertyAccessExpression
                                      Identifier: ' info'
                                      Identifier: 'error'
              ReturnStatement
                Identifier: ' emptyArray'
        PropertyAssignment
          Identifier: '
    getEditsForAction'
          FunctionExpression
            Identifier: ' getRefactorEditsToConvertBetweenNamedAndNamespacedImports'
            Parameter
              Identifier: 'context'
            Parameter
              Identifier: ' actionName'
            TypeReference
              Identifier: ' RefactorEditInfo'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
        Debug'
                    Identifier: 'assert'
                  CallExpression
                    Identifier: 'some'
                    CallExpression
                      Identifier: 'getOwnValues'
                      Identifier: 'actions'
                    ArrowFunction
                      Parameter
                        Identifier: ' action'
                      EqualsGreaterThanToken
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: ' action'
                          Identifier: 'name'
                        EqualsEqualsEqualsToken
                        Identifier: ' actionName'
                  StringLiteral
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' info'
                    CallExpression
                      Identifier: ' getImportConversionInfo'
                      Identifier: 'context'
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
        Debug'
                    Identifier: 'assert'
                  BinaryExpression
                    Identifier: 'info'
                    AmpersandAmpersandToken
                    PrefixUnaryExpression
                      CallExpression
                        Identifier: 'isRefactorErrorInfo'
                        Identifier: 'info'
                  StringLiteral
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' edits'
                    CallExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: ' textChanges'
                          Identifier: 'ChangeTracker'
                        Identifier: 'with'
                      Identifier: 'context'
                      ArrowFunction
                        Parameter
                          Identifier: ' t'
                        EqualsGreaterThanToken
                        CallExpression
                          Identifier: ' doChange'
                          PropertyAccessExpression
                            Identifier: 'context'
                            Identifier: 'file'
                          PropertyAccessExpression
                            Identifier: ' context'
                            Identifier: 'program'
                          Identifier: ' t'
                          Identifier: ' info'
              ReturnStatement
                ObjectLiteralExpression
                  ShorthandPropertyAssignment
                    Identifier: ' edits'
                  PropertyAssignment
                    Identifier: ' renameFilename'
                    Identifier: ' undefined'
                  PropertyAssignment
                    Identifier: ' renameLocation'
                    Identifier: ' undefined'
  TypeAliasDeclaration
    Identifier: ' ImportConversionInfo'
    UnionType
      TypeLiteral
        PropertySignature
          Identifier: ' convertTo'
          TypeReference
            QualifiedName
              Identifier: ' ImportKind'
              Identifier: 'Default'
        PropertySignature
          Identifier: ' import'
          TypeReference
            Identifier: ' NamedImports'
      TypeLiteral
        PropertySignature
          Identifier: ' convertTo'
          TypeReference
            QualifiedName
              Identifier: ' ImportKind'
              Identifier: 'Namespace'
        PropertySignature
          Identifier: ' import'
          TypeReference
            Identifier: ' NamedImports'
      TypeLiteral
        PropertySignature
          Identifier: ' convertTo'
          TypeReference
            QualifiedName
              Identifier: ' ImportKind'
              Identifier: 'Named'
        PropertySignature
          Identifier: ' import'
          TypeReference
            Identifier: ' NamespaceImport'
  FunctionDeclaration
    Identifier: ' getImportConversionInfo'
    Parameter
      Identifier: 'context'
      TypeReference
        Identifier: ' RefactorContext'
    Parameter
      Identifier: ' considerPartialSpans'
      TrueKeyword
    UnionType
      TypeReference
        Identifier: ' ImportConversionInfo'
      TypeReference
        Identifier: ' RefactorErrorInfo'
      UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            ObjectBindingPattern
              BindingElement
                Identifier: ' file'
            Identifier: ' context'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' span'
            CallExpression
              Identifier: ' getRefactorContextSpan'
              Identifier: 'context'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' token'
            CallExpression
              Identifier: ' getTokenAtPosition'
              Identifier: 'file'
              PropertyAccessExpression
                Identifier: ' span'
                Identifier: 'start'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' importDecl'
            ConditionalExpression
              Identifier: ' considerPartialSpans'
              QuestionToken
              CallExpression
                Identifier: ' findAncestor'
                Identifier: 'token'
                CallExpression
                  Identifier: ' or'
                  Identifier: 'isImportDeclaration'
                  Identifier: ' isJSDocImportTag'
              ColonToken
              CallExpression
                Identifier: ' getParentNodeInSpan'
                Identifier: 'token'
                Identifier: ' file'
                Identifier: ' span'
      IfStatement
        BinaryExpression
          BinaryExpression
            Identifier: 'importDecl'
            EqualsEqualsEqualsToken
            Identifier: ' undefined'
          BarBarToken
          PrefixUnaryExpression
            ParenthesizedExpression
              BinaryExpression
                CallExpression
                  Identifier: 'isImportDeclaration'
                  Identifier: 'importDecl'
                BarBarToken
                CallExpression
                  Identifier: ' isJSDocImportTag'
                  Identifier: 'importDecl'
        ReturnStatement
          ObjectLiteralExpression
            PropertyAssignment
              Identifier: ' error'
              StringLiteral
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' end'
            BinaryExpression
              PropertyAccessExpression
                Identifier: ' span'
                Identifier: 'start'
              PlusToken
              PropertyAccessExpression
                Identifier: ' span'
                Identifier: 'length'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' nextToken'
            CallExpression
              Identifier: ' findNextToken'
              Identifier: 'importDecl'
              PropertyAccessExpression
                Identifier: ' importDecl'
                Identifier: 'parent'
              Identifier: ' file'
      IfStatement
        BinaryExpression
          Identifier: 'nextToken'
          AmpersandAmpersandToken
          BinaryExpression
            Identifier: ' end'
            GreaterThanToken
            CallExpression
              PropertyAccessExpression
                Identifier: ' nextToken'
                Identifier: 'getStart'
        ReturnStatement
          Identifier: ' undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            ObjectBindingPattern
              BindingElement
                Identifier: ' importClause'
            Identifier: ' importDecl'
      IfStatement
        PrefixUnaryExpression
          Identifier: 'importClause'
        Block
          ReturnStatement
            ObjectLiteralExpression
              PropertyAssignment
                Identifier: ' error'
                CallExpression
                  Identifier: ' getLocaleSpecificMessage'
                  PropertyAccessExpression
                    Identifier: 'Diagnostics'
                    Identifier: 'Could_not_find_import_clause'
      IfStatement
        PrefixUnaryExpression
          PropertyAccessExpression
            Identifier: 'importClause'
            Identifier: 'namedBindings'
        Block
          ReturnStatement
            ObjectLiteralExpression
              PropertyAssignment
                Identifier: ' error'
                CallExpression
                  Identifier: ' getLocaleSpecificMessage'
                  PropertyAccessExpression
                    Identifier: 'Diagnostics'
                    Identifier: 'Could_not_find_namespace_import_or_named_imports'
      IfStatement
        BinaryExpression
          PropertyAccessExpression
            PropertyAccessExpression
              Identifier: 'importClause'
              Identifier: 'namedBindings'
            Identifier: 'kind'
          EqualsEqualsEqualsToken
          PropertyAccessExpression
            Identifier: ' SyntaxKind'
            Identifier: 'NamespaceImport'
        Block
          ReturnStatement
            ObjectLiteralExpression
              PropertyAssignment
                Identifier: ' convertTo'
                PropertyAccessExpression
                  Identifier: ' ImportKind'
                  Identifier: 'Named'
              PropertyAssignment
                Identifier: ' import'
                PropertyAccessExpression
                  Identifier: ' importClause'
                  Identifier: 'namedBindings'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' shouldUseDefault'
            CallExpression
              Identifier: ' getShouldUseDefault'
              PropertyAccessExpression
                Identifier: 'context'
                Identifier: 'program'
              Identifier: ' importClause'
      ReturnStatement
        ConditionalExpression
          Identifier: ' shouldUseDefault'
          QuestionToken
          ObjectLiteralExpression
            PropertyAssignment
              Identifier: ' convertTo'
              PropertyAccessExpression
                Identifier: ' ImportKind'
                Identifier: 'Default'
            PropertyAssignment
              Identifier: ' import'
              PropertyAccessExpression
                Identifier: ' importClause'
                Identifier: 'namedBindings'
          ColonToken
          ObjectLiteralExpression
            PropertyAssignment
              Identifier: ' convertTo'
              PropertyAccessExpression
                Identifier: ' ImportKind'
                Identifier: 'Namespace'
            PropertyAssignment
              Identifier: ' import'
              PropertyAccessExpression
                Identifier: ' importClause'
                Identifier: 'namedBindings'
  FunctionDeclaration
    Identifier: ' getShouldUseDefault'
    Parameter
      Identifier: 'program'
      TypeReference
        Identifier: ' Program'
    Parameter
      Identifier: ' importClause'
      TypeReference
        Identifier: ' ImportClause'
    Block
      ReturnStatement
        BinaryExpression
          CallExpression
            Identifier: ' getAllowSyntheticDefaultImports'
            CallExpression
              PropertyAccessExpression
                Identifier: 'program'
                Identifier: 'getCompilerOptions'
          AmpersandAmpersandToken
          CallExpression
            Identifier: ' isExportEqualsModule'
            PropertyAccessExpression
              PropertyAccessExpression
                Identifier: 'importClause'
                Identifier: 'parent'
              Identifier: 'moduleSpecifier'
            CallExpression
              PropertyAccessExpression
                Identifier: ' program'
                Identifier: 'getTypeChecker'
  FunctionDeclaration
    Identifier: ' doChange'
    Parameter
      Identifier: 'sourceFile'
      TypeReference
        Identifier: ' SourceFile'
    Parameter
      Identifier: ' program'
      TypeReference
        Identifier: ' Program'
    Parameter
      Identifier: ' changes'
      TypeReference
        QualifiedName
          Identifier: ' textChanges'
          Identifier: 'ChangeTracker'
    Parameter
      Identifier: ' info'
      TypeReference
        Identifier: ' ImportConversionInfo'
    VoidKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' checker'
            CallExpression
              PropertyAccessExpression
                Identifier: ' program'
                Identifier: 'getTypeChecker'
      IfStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: 'info'
            Identifier: 'convertTo'
          EqualsEqualsEqualsToken
          PropertyAccessExpression
            Identifier: ' ImportKind'
            Identifier: 'Named'
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        doChangeNamespaceToNamed'
              Identifier: 'sourceFile'
              Identifier: ' checker'
              Identifier: ' changes'
              PropertyAccessExpression
                Identifier: ' info'
                Identifier: 'import'
              CallExpression
                Identifier: ' getAllowSyntheticDefaultImports'
                CallExpression
                  PropertyAccessExpression
                    Identifier: 'program'
                    Identifier: 'getCompilerOptions'
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        doChangeNamedToNamespaceOrDefault'
              Identifier: 'sourceFile'
              Identifier: ' program'
              Identifier: ' changes'
              PropertyAccessExpression
                Identifier: ' info'
                Identifier: 'import'
              BinaryExpression
                PropertyAccessExpression
                  Identifier: ' info'
                  Identifier: 'convertTo'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' ImportKind'
                  Identifier: 'Default'
  FunctionDeclaration
    Identifier: ' doChangeNamespaceToNamed'
    Parameter
      Identifier: 'sourceFile'
      TypeReference
        Identifier: ' SourceFile'
    Parameter
      Identifier: ' checker'
      TypeReference
        Identifier: ' TypeChecker'
    Parameter
      Identifier: ' changes'
      TypeReference
        QualifiedName
          Identifier: ' textChanges'
          Identifier: 'ChangeTracker'
    Parameter
      Identifier: ' toConvert'
      TypeReference
        Identifier: ' NamespaceImport'
    Parameter
      Identifier: ' allowSyntheticDefaultImports'
      BooleanKeyword
    VoidKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' usedAsNamespaceOrDefault'
            FalseKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' nodesToReplace'
            ArrayType
              ParenthesizedType
                UnionType
                  TypeReference
                    Identifier: 'PropertyAccessExpression'
                  TypeReference
                    Identifier: ' QualifiedName'
            ArrayLiteralExpression
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' conflictingNames'
            NewExpression
              Identifier: ' Map'
              StringKeyword
              LiteralType
                TrueKeyword
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            PropertyAccessExpression
              Identifier: '

    FindAllReferences'
              Identifier: 'Core'
            Identifier: 'eachSymbolReferenceInFile'
          PropertyAccessExpression
            Identifier: 'toConvert'
            Identifier: 'name'
          Identifier: ' checker'
          Identifier: ' sourceFile'
          ArrowFunction
            Parameter
              Identifier: ' id'
            EqualsGreaterThanToken
            Block
              IfStatement
                PrefixUnaryExpression
                  CallExpression
                    Identifier: 'isPropertyAccessOrQualifiedName'
                    PropertyAccessExpression
                      Identifier: 'id'
                      Identifier: 'parent'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
            usedAsNamespaceOrDefault'
                      EqualsToken
                      TrueKeyword
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' exportName'
                        PropertyAccessExpression
                          CallExpression
                            Identifier: ' getRightOfPropertyAccessOrQualifiedName'
                            PropertyAccessExpression
                              Identifier: 'id'
                              Identifier: 'parent'
                          Identifier: 'text'
                  IfStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: 'checker'
                        Identifier: 'resolveName'
                      Identifier: 'exportName'
                      Identifier: ' id'
                      PropertyAccessExpression
                        Identifier: ' SymbolFlags'
                        Identifier: 'All'
                      TrueKeyword
                    Block
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                conflictingNames'
                            Identifier: 'set'
                          Identifier: 'exportName'
                          TrueKeyword
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
            Debug'
                        Identifier: 'assert'
                      BinaryExpression
                        CallExpression
                          Identifier: 'getLeftOfPropertyAccessOrQualifiedName'
                          PropertyAccessExpression
                            Identifier: 'id'
                            Identifier: 'parent'
                        EqualsEqualsEqualsToken
                        Identifier: ' id'
                      StringLiteral
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
            nodesToReplace'
                        Identifier: 'push'
                      PropertyAccessExpression
                        Identifier: 'id'
                        Identifier: 'parent'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' exportNameToImportName'
            NewExpression
              Identifier: ' Map'
              StringKeyword
              StringKeyword
      ForOfStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' propertyAccessOrQualifiedName'
        Identifier: ' nodesToReplace'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' exportName'
                PropertyAccessExpression
                  CallExpression
                    Identifier: ' getRightOfPropertyAccessOrQualifiedName'
                    Identifier: 'propertyAccessOrQualifiedName'
                  Identifier: 'text'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' importName'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' exportNameToImportName'
                    Identifier: 'get'
                  Identifier: 'exportName'
          IfStatement
            BinaryExpression
              Identifier: 'importName'
              EqualsEqualsEqualsToken
              Identifier: ' undefined'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            exportNameToImportName'
                    Identifier: 'set'
                  Identifier: 'exportName'
                  BinaryExpression
                    Identifier: ' importName'
                    EqualsToken
                    ConditionalExpression
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' conflictingNames'
                          Identifier: 'has'
                        Identifier: 'exportName'
                      QuestionToken
                      CallExpression
                        Identifier: ' getUniqueName'
                        Identifier: 'exportName'
                        Identifier: ' sourceFile'
                      ColonToken
                      Identifier: ' exportName'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        changes'
                Identifier: 'replaceNode'
              Identifier: 'sourceFile'
              Identifier: ' propertyAccessOrQualifiedName'
              CallExpression
                PropertyAccessExpression
                  Identifier: ' factory'
                  Identifier: 'createIdentifier'
                Identifier: 'importName'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' importSpecifiers'
            ArrayType
              TypeReference
                Identifier: ' ImportSpecifier'
            ArrayLiteralExpression
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            Identifier: '
    exportNameToImportName'
            Identifier: 'forEach'
          ArrowFunction
            Parameter
              Identifier: 'name'
            Parameter
              Identifier: ' propertyName'
            EqualsGreaterThanToken
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
        importSpecifiers'
                    Identifier: 'push'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: 'factory'
                      Identifier: 'createImportSpecifier'
                    FalseKeyword
                    ConditionalExpression
                      BinaryExpression
                        Identifier: ' name'
                        EqualsEqualsEqualsToken
                        Identifier: ' propertyName'
                      QuestionToken
                      Identifier: ' undefined'
                      ColonToken
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' factory'
                          Identifier: 'createIdentifier'
                        Identifier: 'propertyName'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' factory'
                        Identifier: 'createIdentifier'
                      Identifier: 'name'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' importDecl'
            PropertyAccessExpression
              PropertyAccessExpression
                Identifier: ' toConvert'
                Identifier: 'parent'
              Identifier: 'parent'
      IfStatement
        BinaryExpression
          BinaryExpression
            Identifier: 'usedAsNamespaceOrDefault'
            AmpersandAmpersandToken
            PrefixUnaryExpression
              Identifier: 'allowSyntheticDefaultImports'
          AmpersandAmpersandToken
          CallExpression
            Identifier: ' isImportDeclaration'
            Identifier: 'importDecl'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        // Need to leave the namespace import alone
        changes'
                Identifier: 'insertNodeAfter'
              Identifier: 'sourceFile'
              Identifier: ' importDecl'
              CallExpression
                Identifier: ' createImport'
                Identifier: 'importDecl'
                Identifier: ' /*defaultImportName*/ undefined'
                Identifier: ' importSpecifiers'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' defaultImportName'
                ConditionalExpression
                  Identifier: ' usedAsNamespaceOrDefault'
                  QuestionToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' factory'
                      Identifier: 'createIdentifier'
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: 'toConvert'
                        Identifier: 'name'
                      Identifier: 'text'
                  ColonToken
                  Identifier: ' undefined'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        changes'
                Identifier: 'replaceNode'
              Identifier: 'sourceFile'
              PropertyAccessExpression
                Identifier: ' toConvert'
                Identifier: 'parent'
              CallExpression
                Identifier: ' createImportClause'
                Identifier: 'defaultImportName'
                Identifier: ' importSpecifiers'
  FunctionDeclaration
    Identifier: ' getRightOfPropertyAccessOrQualifiedName'
    Parameter
      Identifier: 'propertyAccessOrQualifiedName'
      UnionType
        TypeReference
          Identifier: ' PropertyAccessExpression'
        TypeReference
          Identifier: ' QualifiedName'
    Block
      ReturnStatement
        ConditionalExpression
          CallExpression
            Identifier: ' isPropertyAccessExpression'
            Identifier: 'propertyAccessOrQualifiedName'
          QuestionToken
          PropertyAccessExpression
            Identifier: ' propertyAccessOrQualifiedName'
            Identifier: 'name'
          ColonToken
          PropertyAccessExpression
            Identifier: ' propertyAccessOrQualifiedName'
            Identifier: 'right'
  FunctionDeclaration
    Identifier: ' getLeftOfPropertyAccessOrQualifiedName'
    Parameter
      Identifier: 'propertyAccessOrQualifiedName'
      UnionType
        TypeReference
          Identifier: ' PropertyAccessExpression'
        TypeReference
          Identifier: ' QualifiedName'
    Block
      ReturnStatement
        ConditionalExpression
          CallExpression
            Identifier: ' isPropertyAccessExpression'
            Identifier: 'propertyAccessOrQualifiedName'
          QuestionToken
          PropertyAccessExpression
            Identifier: ' propertyAccessOrQualifiedName'
            Identifier: 'expression'
          ColonToken
          PropertyAccessExpression
            Identifier: ' propertyAccessOrQualifiedName'
            Identifier: 'left'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' doChangeNamedToNamespaceOrDefault'
    Parameter
      Identifier: 'sourceFile'
      TypeReference
        Identifier: ' SourceFile'
    Parameter
      Identifier: ' program'
      TypeReference
        Identifier: ' Program'
    Parameter
      Identifier: ' changes'
      TypeReference
        QualifiedName
          Identifier: ' textChanges'
          Identifier: 'ChangeTracker'
    Parameter
      Identifier: ' toConvert'
      TypeReference
        Identifier: ' NamedImports'
    Parameter
      Identifier: ' shouldUseDefault'
      BooleanKeyword
      CallExpression
        Identifier: ' getShouldUseDefault'
        Identifier: 'program'
        PropertyAccessExpression
          Identifier: ' toConvert'
          Identifier: 'parent'
    VoidKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' checker'
            CallExpression
              PropertyAccessExpression
                Identifier: ' program'
                Identifier: 'getTypeChecker'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' importDecl'
            PropertyAccessExpression
              PropertyAccessExpression
                Identifier: ' toConvert'
                Identifier: 'parent'
              Identifier: 'parent'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            ObjectBindingPattern
              BindingElement
                Identifier: ' moduleSpecifier'
            Identifier: ' importDecl'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' toConvertSymbols'
            NewExpression
              Identifier: ' Set'
              TypeReference
                Identifier: 'Symbol'
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            PropertyAccessExpression
              Identifier: '
    toConvert'
              Identifier: 'elements'
            Identifier: 'forEach'
          ArrowFunction
            Parameter
              Identifier: 'namedImport'
            EqualsGreaterThanToken
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' symbol'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' checker'
                        Identifier: 'getSymbolAtLocation'
                      PropertyAccessExpression
                        Identifier: 'namedImport'
                        Identifier: 'name'
              IfStatement
                Identifier: 'symbol'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
            toConvertSymbols'
                        Identifier: 'add'
                      Identifier: 'symbol'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' preferredName'
            ConditionalExpression
              BinaryExpression
                Identifier: ' moduleSpecifier'
                AmpersandAmpersandToken
                CallExpression
                  Identifier: ' isStringLiteral'
                  Identifier: 'moduleSpecifier'
              QuestionToken
              CallExpression
                Identifier: ' moduleSpecifierToValidIdentifier'
                PropertyAccessExpression
                  Identifier: 'moduleSpecifier'
                  Identifier: 'text'
                PropertyAccessExpression
                  Identifier: ' ScriptTarget'
                  Identifier: 'ESNext'
              ColonToken
              StringLiteral
      FunctionDeclaration
        Identifier: ' hasNamespaceNameConflict'
        Parameter
          Identifier: 'namedImport'
          TypeReference
            Identifier: ' ImportSpecifier'
        BooleanKeyword
        Block
          ReturnStatement
            PrefixUnaryExpression
              PrefixUnaryExpression
                CallExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: 'FindAllReferences'
                      Identifier: 'Core'
                    Identifier: 'eachSymbolReferenceInFile'
                  PropertyAccessExpression
                    Identifier: 'namedImport'
                    Identifier: 'name'
                  Identifier: ' checker'
                  Identifier: ' sourceFile'
                  ArrowFunction
                    Parameter
                      Identifier: ' id'
                    EqualsGreaterThanToken
                    Block
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' symbol'
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' checker'
                                Identifier: 'resolveName'
                              Identifier: 'preferredName'
                              Identifier: ' id'
                              PropertyAccessExpression
                                Identifier: ' SymbolFlags'
                                Identifier: 'All'
                              TrueKeyword
                      IfStatement
                        Identifier: 'symbol'
                        Block
                          IfStatement
                            CallExpression
                              PropertyAccessExpression
                                Identifier: 'toConvertSymbols'
                                Identifier: 'has'
                              Identifier: 'symbol'
                            Block
                              ReturnStatement
                                CallExpression
                                  Identifier: ' isExportSpecifier'
                                  PropertyAccessExpression
                                    Identifier: 'id'
                                    Identifier: 'parent'
                          ReturnStatement
                            TrueKeyword
                      ReturnStatement
                        FalseKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' namespaceNameConflicts'
            CallExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: ' toConvert'
                  Identifier: 'elements'
                Identifier: 'some'
              Identifier: 'hasNamespaceNameConflict'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' namespaceImportName'
            ConditionalExpression
              Identifier: ' namespaceNameConflicts'
              QuestionToken
              CallExpression
                Identifier: ' getUniqueName'
                Identifier: 'preferredName'
                Identifier: ' sourceFile'
              ColonToken
              Identifier: ' preferredName'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' neededNamedImports'
            NewExpression
              Identifier: ' Set'
              TypeReference
                Identifier: 'ImportSpecifier'
      ForOfStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' element'
        PropertyAccessExpression
          Identifier: ' toConvert'
          Identifier: 'elements'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' propertyName'
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: ' element'
                    Identifier: 'propertyName'
                  BarBarToken
                  PropertyAccessExpression
                    Identifier: ' element'
                    Identifier: 'name'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: '
        FindAllReferences'
                  Identifier: 'Core'
                Identifier: 'eachSymbolReferenceInFile'
              PropertyAccessExpression
                Identifier: 'element'
                Identifier: 'name'
              Identifier: ' checker'
              Identifier: ' sourceFile'
              ArrowFunction
                Parameter
                  Identifier: ' id'
                EqualsGreaterThanToken
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' access'
                        ConditionalExpression
                          BinaryExpression
                            PropertyAccessExpression
                              Identifier: ' propertyName'
                              Identifier: 'kind'
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' SyntaxKind'
                              Identifier: 'StringLiteral'
                          QuestionToken
                          CallExpression
                            PropertyAccessExpression
                              Identifier: ' factory'
                              Identifier: 'createElementAccessExpression'
                            CallExpression
                              PropertyAccessExpression
                                Identifier: 'factory'
                                Identifier: 'createIdentifier'
                              Identifier: 'namespaceImportName'
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' factory'
                                Identifier: 'cloneNode'
                              Identifier: 'propertyName'
                          ColonToken
                          CallExpression
                            PropertyAccessExpression
                              Identifier: ' factory'
                              Identifier: 'createPropertyAccessExpression'
                            CallExpression
                              PropertyAccessExpression
                                Identifier: 'factory'
                                Identifier: 'createIdentifier'
                              Identifier: 'namespaceImportName'
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' factory'
                                Identifier: 'cloneNode'
                              Identifier: 'propertyName'
                  IfStatement
                    CallExpression
                      Identifier: 'isShorthandPropertyAssignment'
                      PropertyAccessExpression
                        Identifier: 'id'
                        Identifier: 'parent'
                    Block
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                changes'
                            Identifier: 'replaceNode'
                          Identifier: 'sourceFile'
                          PropertyAccessExpression
                            Identifier: ' id'
                            Identifier: 'parent'
                          CallExpression
                            PropertyAccessExpression
                              Identifier: ' factory'
                              Identifier: 'createPropertyAssignment'
                            PropertyAccessExpression
                              Identifier: 'id'
                              Identifier: 'text'
                            Identifier: ' access'
                    IfStatement
                      CallExpression
                        Identifier: 'isExportSpecifier'
                        PropertyAccessExpression
                          Identifier: 'id'
                          Identifier: 'parent'
                      Block
                        ExpressionStatement
                          CallExpression
                            PropertyAccessExpression
                              Identifier: '
                neededNamedImports'
                              Identifier: 'add'
                            Identifier: 'element'
                      Block
                        ExpressionStatement
                          CallExpression
                            PropertyAccessExpression
                              Identifier: '
                changes'
                              Identifier: 'replaceNode'
                            Identifier: 'sourceFile'
                            Identifier: ' id'
                            Identifier: ' access'
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            Identifier: '

    changes'
            Identifier: 'replaceNode'
          Identifier: '
        sourceFile'
          Identifier: '
        toConvert'
          ConditionalExpression
            Identifier: '
        shouldUseDefault'
            QuestionToken
            CallExpression
              PropertyAccessExpression
                Identifier: ' factory'
                Identifier: 'createIdentifier'
              Identifier: 'namespaceImportName'
            ColonToken
            CallExpression
              PropertyAccessExpression
                Identifier: ' factory'
                Identifier: 'createNamespaceImport'
              CallExpression
                PropertyAccessExpression
                  Identifier: 'factory'
                  Identifier: 'createIdentifier'
                Identifier: 'namespaceImportName'
      IfStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: 'neededNamedImports'
            Identifier: 'size'
          AmpersandAmpersandToken
          CallExpression
            Identifier: ' isImportDeclaration'
            Identifier: 'importDecl'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' newNamedImports'
                ArrayType
                  TypeReference
                    Identifier: ' ImportSpecifier'
                CallExpression
                  Identifier: ' arrayFrom'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: 'neededNamedImports'
                      Identifier: 'values'
                  ArrowFunction
                    Parameter
                      Identifier: ' element'
                    EqualsGreaterThanToken
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' factory'
                        Identifier: 'createImportSpecifier'
                      PropertyAccessExpression
                        Identifier: 'element'
                        Identifier: 'isTypeOnly'
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: ' element'
                          Identifier: 'propertyName'
                        AmpersandAmpersandToken
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' factory'
                            Identifier: 'cloneNode'
                          PropertyAccessExpression
                            Identifier: 'element'
                            Identifier: 'propertyName'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' factory'
                          Identifier: 'cloneNode'
                        PropertyAccessExpression
                          Identifier: 'element'
                          Identifier: 'name'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        changes'
                Identifier: 'insertNodeAfter'
              Identifier: 'sourceFile'
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: ' toConvert'
                  Identifier: 'parent'
                Identifier: 'parent'
              CallExpression
                Identifier: ' createImport'
                Identifier: 'importDecl'
                Identifier: ' /*defaultImportName*/ undefined'
                Identifier: ' newNamedImports'
  FunctionDeclaration
    Identifier: ' isExportEqualsModule'
    Parameter
      Identifier: 'moduleSpecifier'
      TypeReference
        Identifier: ' Expression'
    Parameter
      Identifier: ' checker'
      TypeReference
        Identifier: ' TypeChecker'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' externalModule'
            CallExpression
              PropertyAccessExpression
                Identifier: ' checker'
                Identifier: 'resolveExternalModuleName'
              Identifier: 'moduleSpecifier'
      IfStatement
        PrefixUnaryExpression
          Identifier: 'externalModule'
        ReturnStatement
          FalseKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' exportEquals'
            CallExpression
              PropertyAccessExpression
                Identifier: ' checker'
                Identifier: 'resolveExternalModuleSymbol'
              Identifier: 'externalModule'
      ReturnStatement
        BinaryExpression
          Identifier: ' externalModule'
          ExclamationEqualsEqualsToken
          Identifier: ' exportEquals'
  FunctionDeclaration
    Identifier: ' createImport'
    Parameter
      Identifier: 'node'
      TypeReference
        Identifier: ' ImportDeclaration'
    Parameter
      Identifier: ' defaultImportName'
      UnionType
        TypeReference
          Identifier: ' Identifier'
        UndefinedKeyword
    Parameter
      Identifier: ' elements'
      UnionType
        TypeOperator
          ArrayType
            TypeReference
              Identifier: ' ImportSpecifier'
        UndefinedKeyword
    TypeReference
      Identifier: ' ImportDeclaration'
    Block
      ReturnStatement
        CallExpression
          PropertyAccessExpression
            Identifier: ' factory'
            Identifier: 'createImportDeclaration'
          Identifier: '/*modifiers*/ undefined'
          CallExpression
            Identifier: ' createImportClause'
            Identifier: 'defaultImportName'
            Identifier: ' elements'
          PropertyAccessExpression
            Identifier: ' node'
            Identifier: 'moduleSpecifier'
          Identifier: ' /*attributes*/ undefined'
  FunctionDeclaration
    Identifier: ' createImportClause'
    Parameter
      Identifier: 'defaultImportName'
      UnionType
        TypeReference
          Identifier: ' Identifier'
        UndefinedKeyword
    Parameter
      Identifier: ' elements'
      UnionType
        TypeOperator
          ArrayType
            TypeReference
              Identifier: ' ImportSpecifier'
        UndefinedKeyword
    Block
      ReturnStatement
        CallExpression
          PropertyAccessExpression
            Identifier: ' factory'
            Identifier: 'createImportClause'
          FalseKeyword
          Identifier: ' defaultImportName'
          ConditionalExpression
            BinaryExpression
              Identifier: ' elements'
              AmpersandAmpersandToken
              PropertyAccessExpression
                Identifier: ' elements'
                Identifier: 'length'
            QuestionToken
            CallExpression
              PropertyAccessExpression
                Identifier: ' factory'
                Identifier: 'createNamedImports'
              Identifier: 'elements'
            ColonToken
            Identifier: ' undefined'
