SourceFile
  ImportEqualsDeclaration
    Identifier: ' VSSInterfaces'
    ExternalModuleReference
      StringLiteral
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' AcquisitionAssignmentType'
    EnumMember
      Identifier: '
    None'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Just assign for me
     */
    Me'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Assign for all users in the account
     */
    All'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' AcquisitionOperation'
    PropertySignature
      Identifier: '
    /**
     * State of the AcquisitionOperation for the current user
     */
    operationState'
      QuestionToken
      TypeReference
        Identifier: ' AcquisitionOperationState'
    PropertySignature
      Identifier: '
    /**
     * AcquisitionOperationType: install, request, buy, etc...
     */
    operationType'
      QuestionToken
      TypeReference
        Identifier: ' AcquisitionOperationType'
    PropertySignature
      Identifier: '
    /**
     * Optional reason to justify current state. Typically used with Disallow state.
     */
    reason'
      QuestionToken
      StringKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' AcquisitionOperationState'
    EnumMember
      Identifier: '
    /**
     * Not allowed to use this AcquisitionOperation
     */
    Disallow'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Allowed to use this AcquisitionOperation
     */
    Allow'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Operation has already been completed and is no longer available
     */
    Completed'
      NumericLiteral
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' AcquisitionOperationType'
    EnumMember
      Identifier: '
    /**
     * Not yet used
     */
    Get'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Install this extension into the host provided
     */
    Install'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Buy licenses for this extension and install into the host provided
     */
    Buy'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Try this extension
     */
    Try'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Request this extension for installation
     */
    Request'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * No action found
     */
    None'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Request admins for purchasing extension
     */
    PurchaseRequest'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' AcquisitionOptions'
    PropertySignature
      Identifier: '
    /**
     * Default Operation for the ItemId in this target
     */
    defaultOperation'
      QuestionToken
      TypeReference
        Identifier: ' AcquisitionOperation'
    PropertySignature
      Identifier: '
    /**
     * The item id that this options refer to
     */
    itemId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Operations allowed for the ItemId in this target
     */
    operations'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' AcquisitionOperation'
    PropertySignature
      Identifier: '
    /**
     * The target that this options refer to
     */
    target'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Answers'
    PropertySignature
      Identifier: '
    /**
     * Gets or sets the vs marketplace extension name
     */
    vSMarketplaceExtensionName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Gets or sets the vs marketplace publisher name
     */
    vSMarketplacePublisherName'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' AssetDetails'
    PropertySignature
      Identifier: '
    /**
     * Gets or sets the Answers, which contains vs marketplace extension name and publisher name
     */
    answers'
      QuestionToken
      TypeReference
        Identifier: ' Answers'
    PropertySignature
      Identifier: '
    /**
     * Gets or sets the VS publisher Id
     */
    publisherNaturalIdentifier'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' AzurePublisher'
    PropertySignature
      Identifier: '
    azurePublisherId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    publisherName'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' AzureRestApiRequestModel'
    PropertySignature
      Identifier: '
    /**
     * Gets or sets the Asset details
     */
    assetDetails'
      QuestionToken
      TypeReference
        Identifier: ' AssetDetails'
    PropertySignature
      Identifier: '
    /**
     * Gets or sets the asset id
     */
    assetId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Gets or sets the asset version
     */
    assetVersion'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Gets or sets the customer support email
     */
    customerSupportEmail'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Gets or sets the integration contact email
     */
    integrationContactEmail'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Gets or sets the asset version
     */
    operation'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Gets or sets the plan identifier if any.
     */
    planId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Gets or sets the publisher id
     */
    publisherId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Gets or sets the resource type
     */
    type'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' AzureRestApiResponseModel'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' AzureRestApiRequestModel'
    PropertySignature
      Identifier: '
    /**
     * Gets or sets the Asset operation status
     */
    operationStatus'
      QuestionToken
      TypeReference
        Identifier: ' RestApiResponseStatusModel'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CategoriesResult'
    PropertySignature
      Identifier: '
    categories'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' ExtensionCategory'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CategoryLanguageTitle'
    PropertySignature
      Identifier: '
    /**
     * The language for which the title is applicable
     */
    lang'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The language culture id of the lang parameter
     */
    lcid'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Actual title to be shown on the UI
     */
    title'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Concern'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' QnAItem'
    PropertySignature
      Identifier: '
    /**
     * Category of the concern
     */
    category'
      QuestionToken
      TypeReference
        Identifier: ' ConcernCategory'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' ConcernCategory'
    EnumMember
      Identifier: '
    General'
      NumericLiteral
    EnumMember
      Identifier: '
    Abusive'
      NumericLiteral
    EnumMember
      Identifier: '
    Spam'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CustomerLastContact'
    PropertySignature
      Identifier: '
    /**
     * account for which customer was last contacted
     */
    account'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Date on which the customer was last contacted
     */
    lastContactDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CustomerSupportRequest'
    PropertySignature
      Identifier: '
    /**
     * Display name of extension in concern
     */
    displayName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Email of user making the support request
     */
    emailId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Extension name
     */
    extensionName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Link to the extension details page
     */
    extensionURL'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * User-provided support request message.
     */
    message'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Publisher name
     */
    publisherName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Reason for support request
     */
    reason'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * ReCaptcha Token
     */
    reCaptchaToken'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * VSID of the user making the support request
     */
    reporterVSID'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Review under concern
     */
    review'
      QuestionToken
      TypeReference
        Identifier: ' Review'
    PropertySignature
      Identifier: '
    /**
     * The UI source through which the request was made
     */
    sourceLink'
      QuestionToken
      StringKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' DraftPatchOperation'
    EnumMember
      Identifier: '
    Publish'
      NumericLiteral
    EnumMember
      Identifier: '
    Cancel'
      NumericLiteral
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' DraftStateType'
    EnumMember
      Identifier: '
    Unpublished'
      NumericLiteral
    EnumMember
      Identifier: '
    Published'
      NumericLiteral
    EnumMember
      Identifier: '
    Cancelled'
      NumericLiteral
    EnumMember
      Identifier: '
    Error'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' EventCounts'
    PropertySignature
      Identifier: '
    /**
     * Average rating on the day for extension
     */
    averageRating'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Number of times the extension was bought in hosted scenario (applies only to VSTS extensions)
     */
    buyCount'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Number of times the extension was bought in connected scenario (applies only to VSTS extensions)
     */
    connectedBuyCount'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Number of times the extension was installed in connected scenario (applies only to VSTS extensions)
     */
    connectedInstallCount'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Number of times the extension was installed
     */
    installCount'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Number of times the extension was installed as a trial (applies only to VSTS extensions)
     */
    tryCount'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Number of times the extension was uninstalled (applies only to VSTS extensions)
     */
    uninstallCount'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Number of times the extension was downloaded (applies to VSTS extensions and VSCode marketplace click installs)
     */
    webDownloadCount'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Number of detail page views
     */
    webPageViews'
      QuestionToken
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionAcquisitionRequest'
    PropertySignature
      Identifier: '
    /**
     * How the item is being assigned
     */
    assignmentType'
      QuestionToken
      TypeReference
        Identifier: ' AcquisitionAssignmentType'
    PropertySignature
      Identifier: '
    /**
     * The id of the subscription used for purchase
     */
    billingId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The marketplace id (publisherName.extensionName) for the item
     */
    itemId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The type of operation, such as install, request, purchase
     */
    operationType'
      QuestionToken
      TypeReference
        Identifier: ' AcquisitionOperationType'
    PropertySignature
      Identifier: '
    /**
     * Additional properties which can be added to the request.
     */
    properties'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * How many licenses should be purchased
     */
    quantity'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * A list of target guids where the item should be acquired (installed, requested, etc.), such as account id
     */
    targets'
      QuestionToken
      ArrayType
        StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionBadge'
    PropertySignature
      Identifier: '
    description'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    imgUri'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    link'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionCategory'
    PropertySignature
      Identifier: '
    /**
     * The name of the products with which this category is associated to.
     */
    associatedProducts'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    categoryId'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * This is the internal name for a category
     */
    categoryName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * This parameter is obsolete. Refer to LanguageTitles for language specific titles
     */
    language'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The list of all the titles of this category in various languages
     */
    languageTitles'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' CategoryLanguageTitle'
    PropertySignature
      Identifier: '
    /**
     * This is the internal name of the parent if this is associated with a parent
     */
    parentCategoryName'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionDailyStat'
    PropertySignature
      Identifier: '
    /**
     * Stores the event counts
     */
    counts'
      QuestionToken
      TypeReference
        Identifier: ' EventCounts'
    PropertySignature
      Identifier: '
    /**
     * Generic key/value pair to store extended statistics. Used for sending paid extension stats like Upgrade, Downgrade, Cancel trend etc.
     */
    extendedStats'
      QuestionToken
      TypeLiteral
        IndexSignature
          Parameter
            Identifier: 'key'
            StringKeyword
          AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * Timestamp of this data point
     */
    statisticDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * Version of the extension
     */
    version'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionDailyStats'
    PropertySignature
      Identifier: '
    /**
     * List of extension statistics data points
     */
    dailyStats'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' ExtensionDailyStat'
    PropertySignature
      Identifier: '
    /**
     * Id of the extension, this will never be sent back to the client. For internal use only.
     */
    extensionId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Name of the extension
     */
    extensionName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Name of the publisher
     */
    publisherName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Count of stats
     */
    statCount'
      QuestionToken
      NumberKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' ExtensionDeploymentTechnology'
    EnumMember
      Identifier: '
    Exe'
      NumericLiteral
    EnumMember
      Identifier: '
    Msi'
      NumericLiteral
    EnumMember
      Identifier: '
    Vsix'
      NumericLiteral
    EnumMember
      Identifier: '
    ReferralLink'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionDraft'
    PropertySignature
      Identifier: '
    assets'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' ExtensionDraftAsset'
    PropertySignature
      Identifier: '
    createdDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    draftState'
      QuestionToken
      TypeReference
        Identifier: ' DraftStateType'
    PropertySignature
      Identifier: '
    extensionName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    id'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    lastUpdated'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    payload'
      QuestionToken
      TypeReference
        Identifier: ' ExtensionPayload'
    PropertySignature
      Identifier: '
    product'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    publisherName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    validationErrors'
      QuestionToken
      ArrayType
        TypeLiteral
          PropertySignature
            Identifier: '
        key'
            StringKeyword
          PropertySignature
            Identifier: '
        value'
            StringKeyword
    PropertySignature
      Identifier: '
    validationWarnings'
      QuestionToken
      ArrayType
        TypeLiteral
          PropertySignature
            Identifier: '
        key'
            StringKeyword
          PropertySignature
            Identifier: '
        value'
            StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionDraftAsset'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' ExtensionFile'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionDraftPatch'
    PropertySignature
      Identifier: '
    extensionData'
      QuestionToken
      TypeReference
        Identifier: ' UnpackagedExtensionData'
    PropertySignature
      Identifier: '
    operation'
      QuestionToken
      TypeReference
        Identifier: ' DraftPatchOperation'
    PropertySignature
      Identifier: '
    reCaptchaToken'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionEvent'
    PropertySignature
      Identifier: '
    /**
     * Id which identifies each data point uniquely
     */
    id'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Generic properties container which stores the data related to each event. For well known events like uninstall, install etc. We expect the Properties object to be a List<UninstallProperties>, List<InstallProperties>
     */
    properties'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * Timestamp of when the event occurred
     */
    statisticDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * Version of the extension
     */
    version'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionEvents'
    PropertySignature
      Identifier: '
    /**
     * Generic container for events data. The dictionary key denotes the type of event and the list contains properties related to that event
     */
    events'
      QuestionToken
      TypeLiteral
        IndexSignature
          Parameter
            Identifier: 'key'
            StringKeyword
          ArrayType
            TypeReference
              Identifier: ' ExtensionEvent'
    PropertySignature
      Identifier: '
    /**
     * Id of the extension, this will never be sent back to the client. This field will mainly be used when EMS calls into Gallery REST API to update install/uninstall events for various extensions in one go.
     */
    extensionId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Name of the extension
     */
    extensionName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Name of the publisher
     */
    publisherName'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionFile'
    PropertySignature
      Identifier: '
    assetType'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    language'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    source'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionFilterResult'
    PropertySignature
      Identifier: '
    /**
     * This is the set of applications that matched the query filter supplied.
     */
    extensions'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' PublishedExtension'
    PropertySignature
      Identifier: '
    /**
     * The PagingToken is returned from a request when more records exist that match the result than were requested or could be returned. A follow-up query with this paging token can be used to retrieve more results.
     */
    pagingToken'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * This is the additional optional metadata for the given result. E.g. Total count of results which is useful in case of paged results
     */
    resultMetadata'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' ExtensionFilterResultMetadata'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionFilterResultMetadata'
    PropertySignature
      Identifier: '
    /**
     * The metadata items for the category
     */
    metadataItems'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' MetadataItem'
    PropertySignature
      Identifier: '
    /**
     * Defines the category of metadata items
     */
    metadataType'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionIdentifier'
    PropertySignature
      Identifier: '
    /**
     * The ExtensionName component part of the fully qualified ExtensionIdentifier
     */
    extensionName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The PublisherName component part of the fully qualified ExtensionIdentifier
     */
    publisherName'
      QuestionToken
      StringKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' ExtensionLifecycleEventType'
    EnumMember
      Identifier: '
    Uninstall'
      NumericLiteral
    EnumMember
      Identifier: '
    Install'
      NumericLiteral
    EnumMember
      Identifier: '
    Review'
      NumericLiteral
    EnumMember
      Identifier: '
    Acquisition'
      NumericLiteral
    EnumMember
      Identifier: '
    Sales'
      NumericLiteral
    EnumMember
      Identifier: '
    Other'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionPackage'
    PropertySignature
      Identifier: '
    /**
     * Base 64 encoded extension package
     */
    extensionManifest'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionPayload'
    PropertySignature
      Identifier: '
    description'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    displayName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    fileName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    installationTargets'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' InstallationTarget'
    PropertySignature
      Identifier: '
    isPreview'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    isSignedByMicrosoft'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    isValid'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    metadata'
      QuestionToken
      ArrayType
        TypeLiteral
          PropertySignature
            Identifier: '
        key'
            StringKeyword
          PropertySignature
            Identifier: '
        value'
            StringKeyword
    PropertySignature
      Identifier: '
    type'
      QuestionToken
      TypeReference
        Identifier: ' ExtensionDeploymentTechnology'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionPolicy'
    PropertySignature
      Identifier: '
    /**
     * Permissions on 'Install' operation
     */
    install'
      QuestionToken
      TypeReference
        Identifier: ' ExtensionPolicyFlags'
    PropertySignature
      Identifier: '
    /**
     * Permission on 'Request' operation
     */
    request'
      QuestionToken
      TypeReference
        Identifier: ' ExtensionPolicyFlags'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' ExtensionPolicyFlags'
    EnumMember
      Identifier: '
    /**
     * No permission
     */
    None'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Permission on private extensions
     */
    Private'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Permission on public extensions
     */
    Public'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Permission in extensions that are in preview
     */
    Preview'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Permission in released extensions
     */
    Released'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Permission in 1st party extensions
     */
    FirstParty'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Mask that defines all permissions
     */
    All'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionQuery'
    PropertySignature
      Identifier: '
    /**
     * When retrieving extensions with a query; frequently the caller only needs a small subset of the assets. The caller may specify a list of asset types that should be returned if the extension contains it. All other assets will not be returned.
     */
    assetTypes'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Each filter is a unique query and will have matching set of extensions returned from the request. Each result will have the same index in the resulting array that the filter had in the incoming query.
     */
    filters'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' QueryFilter'
    PropertySignature
      Identifier: '
    /**
     * The Flags are used to determine which set of information the caller would like returned for the matched extensions.
     */
    flags'
      QuestionToken
      TypeReference
        Identifier: ' ExtensionQueryFlags'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' ExtensionQueryFilterType'
    EnumMember
      Identifier: '
    /**
     * The values are used as tags. All tags are treated as "OR" conditions with each other. There may be some value put on the number of matched tags from the query.
     */
    Tag'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The Values are an ExtensionName or fragment that is used to match other extension names.
     */
    DisplayName'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The Filter is one or more tokens that define what scope to return private extensions for.
     */
    Private'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Retrieve a set of extensions based on their id's. The values should be the extension id's encoded as strings.
     */
    Id'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The category is unlike other filters. It is AND'd with the other filters instead of being a separate query.
     */
    Category'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Certain contribution types may be indexed to allow for query by type. User defined types can't be indexed at the moment.
     */
    ContributionType'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Retrieve an set extension based on the name based identifier. This differs from the internal id (which is being deprecated).
     */
    Name'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The InstallationTarget for an extension defines the target consumer for the extension. This may be something like VS, VSOnline, or VSCode
     */
    InstallationTarget'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Query for featured extensions, no value is allowed when using the query type.
     */
    Featured'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The SearchText provided by the user to search for extensions
     */
    SearchText'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Query for extensions that are featured in their own category, The filterValue for this is name of category of extensions.
     */
    FeaturedInCategory'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * When retrieving extensions from a query, exclude the extensions which are having the given flags. The value specified for this filter should be a string representing the integer values of the flags to be excluded. In case of multiple flags to be specified, a logical OR of the interger values should be given as value for this filter This should be at most one filter of this type. This only acts as a restrictive filter after. In case of having a particular flag in both IncludeWithFlags and ExcludeWithFlags, excludeFlags will remove the included extensions giving empty result for that flag.
     */
    ExcludeWithFlags'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * When retrieving extensions from a query, include the extensions which are having the given flags. The value specified for this filter should be a string representing the integer values of the flags to be included. In case of multiple flags to be specified, a logical OR of the integer values should be given as value for this filter This should be at most one filter of this type. This only acts as a restrictive filter after. In case of having a particular flag in both IncludeWithFlags and ExcludeWithFlags, excludeFlags will remove the included extensions giving empty result for that flag. In case of multiple flags given in IncludeWithFlags in ORed fashion, extensions having any of the given flags will be included.
     */
    IncludeWithFlags'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Filter the extensions based on the LCID values applicable. Any extensions which are not having any LCID values will also be filtered. This is currently only supported for VS extensions.
     */
    Lcid'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Filter to provide the version of the installation target. This filter will be used along with InstallationTarget filter. The value should be a valid version string. Currently supported only if search text is provided.
     */
    InstallationTargetVersion'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Filter type for specifying a range of installation target version. The filter will be used along with InstallationTarget filter. The value should be a pair of well formed version values separated by hyphen(-). Currently supported only if search text is provided.
     */
    InstallationTargetVersionRange'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Filter type for specifying metadata key and value to be used for filtering.
     */
    VsixMetadata'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Filter to get extensions published by a publisher having supplied internal name
     */
    PublisherName'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Filter to get extensions published by all publishers having supplied display name
     */
    PublisherDisplayName'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * When retrieving extensions from a query, include the extensions which have a publisher having the given flags. The value specified for this filter should be a string representing the integer values of the flags to be included. In case of multiple flags to be specified, a logical OR of the integer values should be given as value for this filter There should be at most one filter of this type. This only acts as a restrictive filter after. In case of multiple flags given in IncludeWithFlags in ORed fashion, extensions having any of the given flags will be included.
     */
    IncludeWithPublisherFlags'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Filter to get extensions shared with particular organization
     */
    OrganizationSharedWith'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Filter to get VS IDE extensions by Product Architecture
     */
    ProductArchitecture'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Filter to get VS Code extensions by target platform.
     */
    TargetPlatform'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Retrieve an extension based on the extensionName.
     */
    ExtensionName'
      NumericLiteral
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' ExtensionQueryFlags'
    EnumMember
      Identifier: '
    /**
     * None is used to retrieve only the basic extension details.
     */
    None'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * IncludeVersions will return version information for extensions returned
     */
    IncludeVersions'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * IncludeFiles will return information about which files were found within the extension that were stored independent of the manifest. When asking for files, versions will be included as well since files are returned as a property of the versions.  These files can be retrieved using the path to the file without requiring the entire manifest be downloaded.
     */
    IncludeFiles'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Include the Categories and Tags that were added to the extension definition.
     */
    IncludeCategoryAndTags'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Include the details about which accounts the extension has been shared with if the extension is a private extension.
     */
    IncludeSharedAccounts'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Include properties associated with versions of the extension
     */
    IncludeVersionProperties'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Excluding non-validated extensions will remove any extension versions that either are in the process of being validated or have failed validation.
     */
    ExcludeNonValidated'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Include the set of installation targets the extension has requested.
     */
    IncludeInstallationTargets'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Include the base uri for assets of this extension
     */
    IncludeAssetUri'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Include the statistics associated with this extension
     */
    IncludeStatistics'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * When retrieving versions from a query, only include the latest version of the extensions that matched. This is useful when the caller doesn't need all the published versions. It will save a significant size in the returned payload.
     */
    IncludeLatestVersionOnly'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * This flag switches the asset uri to use GetAssetByName instead of CDN When this is used, values of base asset uri and base asset uri fallback are switched When this is used, source of asset files are pointed to Gallery service always even if CDN is available
     */
    UseFallbackAssetUri'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * This flag is used to get all the metadata values associated with the extension. This is not applicable to VSTS or VSCode extensions and usage is only internal.
     */
    IncludeMetadata'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * This flag is used to indicate to return very small data for extension required by VS IDE. This flag is only compatible when querying is done by VS IDE
     */
    IncludeMinimalPayloadForVsIde'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * This flag is used to get Lcid values associated with the extension. This is not applicable to VSTS or VSCode extensions and usage is only internal
     */
    IncludeLcids'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Include the details about which organizations the extension has been shared with if the extension is a private extension.
     */
    IncludeSharedOrganizations'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Include the details if an extension is in conflict list or not Currently being used for VSCode extensions.
     */
    IncludeNameConflictInfo'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * AllAttributes is designed to be a mask that defines all sub-elements of the extension should be returned.  NOTE: This is not actually All flags. This is now locked to the set defined since changing this enum would be a breaking change and would change the behavior of anyone using it. Try not to use this value when making calls to the service, instead be explicit about the options required.
     */
    AllAttributes'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionQueryResult'
    PropertySignature
      Identifier: '
    /**
     * For each filter supplied in the query, a filter result will be returned in the query result.
     */
    results'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' ExtensionFilterResult'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionShare'
    PropertySignature
      Identifier: '
    id'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    isOrg'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    type'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionStatistic'
    PropertySignature
      Identifier: '
    statisticName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    value'
      QuestionToken
      NumberKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' ExtensionStatisticOperation'
    EnumMember
      Identifier: '
    None'
      NumericLiteral
    EnumMember
      Identifier: '
    Set'
      NumericLiteral
    EnumMember
      Identifier: '
    Increment'
      NumericLiteral
    EnumMember
      Identifier: '
    Decrement'
      NumericLiteral
    EnumMember
      Identifier: '
    Delete'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionStatisticUpdate'
    PropertySignature
      Identifier: '
    extensionName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    operation'
      QuestionToken
      TypeReference
        Identifier: ' ExtensionStatisticOperation'
    PropertySignature
      Identifier: '
    publisherName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    statistic'
      QuestionToken
      TypeReference
        Identifier: ' ExtensionStatistic'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' ExtensionStatsAggregateType'
    EnumMember
      Identifier: '
    Daily'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionVersion'
    PropertySignature
      Identifier: '
    assetUri'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    badges'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' ExtensionBadge'
    PropertySignature
      Identifier: '
    fallbackAssetUri'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    files'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' ExtensionFile'
    PropertySignature
      Identifier: '
    flags'
      QuestionToken
      TypeReference
        Identifier: ' ExtensionVersionFlags'
    PropertySignature
      Identifier: '
    lastUpdated'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    properties'
      QuestionToken
      ArrayType
        TypeLiteral
          PropertySignature
            Identifier: '
        key'
            StringKeyword
          PropertySignature
            Identifier: '
        value'
            StringKeyword
    PropertySignature
      Identifier: '
    targetPlatform'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    validationResultMessage'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    version'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    versionDescription'
      QuestionToken
      StringKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' ExtensionVersionFlags'
    EnumMember
      Identifier: '
    /**
     * No flags exist for this version.
     */
    None'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The Validated flag for a version means the extension version has passed validation and can be used..
     */
    Validated'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' FilterCriteria'
    PropertySignature
      Identifier: '
    /**
     * The FilterType defines how the filters are to be applied to the extensions. See the documentation on the filter type to understand how the filters are matched.
     */
    filterType'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * The value used in the match based on the filter type.
     */
    value'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' InstallationTarget'
    PropertySignature
      Identifier: '
    extensionVersion'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    productArchitecture'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    target'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    targetPlatform'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    targetVersion'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' MetadataItem'
    PropertySignature
      Identifier: '
    /**
     * The count of the metadata item
     */
    count'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * The name of the metadata item
     */
    name'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' NotificationsData'
    PropertySignature
      Identifier: '
    /**
     * Notification data needed
     */
    data'
      QuestionToken
      TypeLiteral
        IndexSignature
          Parameter
            Identifier: 'key'
            StringKeyword
          AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * List of users who should get the notification
     */
    identities'
      QuestionToken
      TypeLiteral
        IndexSignature
          Parameter
            Identifier: 'key'
            StringKeyword
          AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * Type of Mail Notification.Can be Qna , review or CustomerContact
     */
    type'
      QuestionToken
      TypeReference
        Identifier: ' NotificationTemplateType'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' NotificationTemplateType'
    EnumMember
      Identifier: '
    /**
     * Template type for Review Notification.
     */
    ReviewNotification'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Template type for Qna Notification.
     */
    QnaNotification'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Template type for Customer Contact Notification.
     */
    CustomerContactNotification'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Template type for Publisher Member Notification.
     */
    PublisherMemberUpdateNotification'
      NumericLiteral
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' PagingDirection'
    EnumMember
      Identifier: '
    /**
     * Backward will return results from earlier in the resultset.
     */
    Backward'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Forward will return results from later in the resultset.
     */
    Forward'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ProductCategoriesResult'
    PropertySignature
      Identifier: '
    categories'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' ProductCategory'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ProductCategory'
    PropertySignature
      Identifier: '
    children'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' ProductCategory'
    PropertySignature
      Identifier: '
    /**
     * Indicator whether this is a leaf or there are children under this category
     */
    hasChildren'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Individual Guid of the Category
     */
    id'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Category Title in the requested language
     */
    title'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' PublishedExtension'
    PropertySignature
      Identifier: '
    categories'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    deploymentType'
      QuestionToken
      TypeReference
        Identifier: ' ExtensionDeploymentTechnology'
    PropertySignature
      Identifier: '
    displayName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    extensionId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    extensionName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    flags'
      QuestionToken
      TypeReference
        Identifier: ' PublishedExtensionFlags'
    PropertySignature
      Identifier: '
    installationTargets'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' InstallationTarget'
    PropertySignature
      Identifier: '
    lastUpdated'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    longDescription'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Check if Extension is in conflict list or not. Taking as String and not as boolean because we don't want end customer to see this flag and by making it Boolean it is coming as false for all the cases.
     */
    presentInConflictList'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Date on which the extension was first uploaded.
     */
    publishedDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    publisher'
      QuestionToken
      TypeReference
        Identifier: ' PublisherFacts'
    PropertySignature
      Identifier: '
    /**
     * Date on which the extension first went public.
     */
    releaseDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    sharedWith'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' ExtensionShare'
    PropertySignature
      Identifier: '
    shortDescription'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    statistics'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' ExtensionStatistic'
    PropertySignature
      Identifier: '
    tags'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    versions'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' ExtensionVersion'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' PublishedExtensionFlags'
    EnumMember
      Identifier: '
    /**
     * No flags exist for this extension.
     */
    None'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The Disabled flag for an extension means the extension can't be changed and won't be used by consumers. The disabled flag is managed by the service and can't be supplied by the Extension Developers.
     */
    Disabled'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * BuiltIn Extension are available to all Tenants. An explicit registration is not required. This attribute is reserved and can't be supplied by Extension Developers.  BuiltIn extensions are by definition Public. There is no need to set the public flag for extensions marked BuiltIn.
     */
    BuiltIn'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * This extension has been validated by the service. The extension meets the requirements specified. This attribute is reserved and can't be supplied by the Extension Developers. Validation is a process that ensures that all contributions are well formed. They meet the requirements defined by the contribution type they are extending. Note this attribute will be updated asynchronously as the extension is validated by the developer of the contribution type. There will be restricted access to the extension while this process is performed.
     */
    Validated'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Trusted extensions are ones that are given special capabilities. These tend to come from Microsoft and can't be published by the general public.  Note: BuiltIn extensions are always trusted.
     */
    Trusted'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The Paid flag indicates that the commerce can be enabled for this extension. Publisher needs to setup Offer/Pricing plan in Azure. If Paid flag is set and a corresponding Offer is not available, the extension will automatically be marked as Preview. If the publisher intends to make the extension Paid in the future, it is mandatory to set the Preview flag. This is currently available only for VSTS extensions only.
     */
    Paid'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * This extension registration is public, making its visibility open to the public. This means all tenants have the ability to install this extension. Without this flag the extension will be private and will need to be shared with the tenants that can install it.
     */
    Public'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * This extension has multiple versions active at one time and version discovery should be done using the defined "Version Discovery" protocol to determine the version available to a specific user or tenant.  @TODO: Link to Version Discovery Protocol.
     */
    MultiVersion'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The system flag is reserved, and cant be used by publishers.
     */
    System'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The Preview flag indicates that the extension is still under preview (not yet of "release" quality). These extensions may be decorated differently in the gallery and may have different policies applied to them.
     */
    Preview'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The Unpublished flag indicates that the extension can't be installed/downloaded. Users who have installed such an extension can continue to use the extension.
     */
    Unpublished'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The Trial flag indicates that the extension is in Trial version. The flag is right now being used only with respect to Visual Studio extensions.
     */
    Trial'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The Locked flag indicates that extension has been locked from Marketplace. Further updates/acquisitions are not allowed on the extension until this is present. This should be used along with making the extension private/unpublished.
     */
    Locked'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * This flag is set for extensions we want to hide from Marketplace home and search pages. This will be used to override the exposure of builtIn flags.
     */
    Hidden'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Publisher'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' PublisherBase'
    PropertySignature
      Identifier: '
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    domain'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    isDnsTokenVerified'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    isDomainVerified'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    reCaptchaToken'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' PublisherBase'
    PropertySignature
      Identifier: '
    displayName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    emailAddress'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    extensions'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' PublishedExtension'
    PropertySignature
      Identifier: '
    flags'
      QuestionToken
      TypeReference
        Identifier: ' PublisherFlags'
    PropertySignature
      Identifier: '
    lastUpdated'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    longDescription'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    publisherId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    publisherName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    shortDescription'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    state'
      QuestionToken
      TypeReference
        Identifier: ' PublisherState'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' PublisherFacts'
    PropertySignature
      Identifier: '
    displayName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    domain'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    flags'
      QuestionToken
      TypeReference
        Identifier: ' PublisherFlags'
    PropertySignature
      Identifier: '
    isDomainVerified'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    publisherId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    publisherName'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' PublisherFilterResult'
    PropertySignature
      Identifier: '
    /**
     * This is the set of applications that matched the query filter supplied.
     */
    publishers'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' Publisher'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' PublisherFlags'
    EnumMember
      Identifier: '
    /**
     * This should never be returned, it is used to represent a publisher who's flags haven't changed during update calls.
     */
    UnChanged'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * No flags exist for this publisher.
     */
    None'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The Disabled flag for a publisher means the publisher can't be changed and won't be used by consumers, this extends to extensions owned by the publisher as well. The disabled flag is managed by the service and can't be supplied by the Extension Developers.
     */
    Disabled'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * A verified publisher is one that Microsoft has done some review of and ensured the publisher meets a set of requirements. The requirements to become a verified publisher are not listed here.  They can be found in public documentation (TBD).
     */
    Verified'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * A Certified publisher is one that is Microsoft verified and in addition meets a set of requirements for its published extensions. The requirements to become a certified publisher are not listed here.  They can be found in public documentation (TBD).
     */
    Certified'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * This is the set of flags that can't be supplied by the developer and is managed by the service itself.
     */
    ServiceFlags'
      NumericLiteral
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' PublisherPermissions'
    EnumMember
      Identifier: '
    /**
     * This gives the bearer the rights to read Publishers and Extensions.
     */
    Read'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * This gives the bearer the rights to update, delete, and share Extensions (but not the ability to create them).
     */
    UpdateExtension'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * This gives the bearer the rights to create new Publishers at the root of the namespace.
     */
    CreatePublisher'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * This gives the bearer the rights to create new Extensions within a publisher.
     */
    PublishExtension'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Admin gives the bearer the rights to manage restricted attributes of Publishers and Extensions.
     */
    Admin'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * TrustedPartner gives the bearer the rights to publish a extensions with restricted capabilities.
     */
    TrustedPartner'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * PrivateRead is another form of read designed to allow higher privilege accessors the ability to read private extensions.
     */
    PrivateRead'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * This gives the bearer the rights to delete any extension.
     */
    DeleteExtension'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * This gives the bearer the rights edit the publisher settings.
     */
    EditSettings'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * This gives the bearer the rights to see all permissions on the publisher.
     */
    ViewPermissions'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * This gives the bearer the rights to assign permissions on the publisher.
     */
    ManagePermissions'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * This gives the bearer the rights to delete the publisher.
     */
    DeletePublisher'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' PublisherQuery'
    PropertySignature
      Identifier: '
    /**
     * Each filter is a unique query and will have matching set of publishers returned from the request. Each result will have the same index in the resulting array that the filter had in the incoming query.
     */
    filters'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' QueryFilter'
    PropertySignature
      Identifier: '
    /**
     * The Flags are used to determine which set of information the caller would like returned for the matched publishers.
     */
    flags'
      QuestionToken
      TypeReference
        Identifier: ' PublisherQueryFlags'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' PublisherQueryFlags'
    EnumMember
      Identifier: '
    /**
     * None is used to retrieve only the basic publisher details.
     */
    None'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Is used to include a list of basic extension details for all extensions published by the requested publisher.
     */
    IncludeExtensions'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Is used to include email address of all the users who are marked as owners for the publisher
     */
    IncludeEmailAddress'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' PublisherQueryResult'
    PropertySignature
      Identifier: '
    /**
     * For each filter supplied in the query, a filter result will be returned in the query result.
     */
    results'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' PublisherFilterResult'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' PublisherRoleAccess'
    EnumMember
      Identifier: '
    /**
     * Access has been explicitly set.
     */
    Assigned'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Access has been inherited from a higher scope.
     */
    Inherited'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' PublisherRoleAssignment'
    PropertySignature
      Identifier: '
    /**
     * Designates the role as explicitly assigned or inherited.
     */
    access'
      QuestionToken
      TypeReference
        Identifier: ' PublisherRoleAccess'
    PropertySignature
      Identifier: '
    /**
     * User friendly description of access assignment.
     */
    accessDisplayName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The user to whom the role is assigned.
     */
    identity'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' VSSInterfaces'
          Identifier: 'IdentityRef'
    PropertySignature
      Identifier: '
    /**
     * The role assigned to the user.
     */
    role'
      QuestionToken
      TypeReference
        Identifier: ' PublisherSecurityRole'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' PublisherSecurityRole'
    PropertySignature
      Identifier: '
    /**
     * Permissions the role is allowed.
     */
    allowPermissions'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Permissions the role is denied.
     */
    denyPermissions'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Description of user access defined by the role
     */
    description'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * User friendly name of the role.
     */
    displayName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Globally unique identifier for the role.
     */
    identifier'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Unique name of the role in the scope.
     */
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Returns the id of the ParentScope.
     */
    scope'
      QuestionToken
      StringKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' PublisherState'
    EnumMember
      Identifier: '
    /**
     * No state exists for this publisher.
     */
    None'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * This state indicates that publisher has applied for Marketplace verification (via UI) and still not been certified. This state would be reset once the publisher is verified.
     */
    VerificationPending'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * This state indicates that publisher has applied for Marketplace certification (via UI) and still not been certified. This state would be reset once the publisher is certified.
     */
    CertificationPending'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * This state indicates that publisher had applied for Marketplace certification (via UI) but his/her certification got rejected. This state would be reset if and when the publisher is certified.
     */
    CertificationRejected'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * This state indicates that publisher was certified on the Marketplace, but his/her certification got revoked. This state would never be reset, even after publisher gets re-certified. It would indicate that the publisher certification was revoked at least once.
     */
    CertificationRevoked'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' PublisherUserRoleAssignmentRef'
    PropertySignature
      Identifier: '
    /**
     * The name of the role assigned.
     */
    roleName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Identifier of the user given the role assignment.
     */
    uniqueName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Unique id of the user given the role assignment.
     */
    userId'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' QnAItem'
    PropertySignature
      Identifier: '
    /**
     * Time when the review was first created
     */
    createdDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * Unique identifier of a QnA item
     */
    id'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Get status of item
     */
    status'
      QuestionToken
      TypeReference
        Identifier: ' QnAItemStatus'
    PropertySignature
      Identifier: '
    /**
     * Text description of the QnA item
     */
    text'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Time when the review was edited/updated
     */
    updatedDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * User details for the item.
     */
    user'
      QuestionToken
      TypeReference
        Identifier: ' UserIdentityRef'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' QnAItemStatus'
    EnumMember
      Identifier: '
    None'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The UserEditable flag indicates whether the item is editable by the logged in user.
     */
    UserEditable'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The PublisherCreated flag indicates whether the item has been created by extension publisher.
     */
    PublisherCreated'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' QueryFilter'
    PropertySignature
      Identifier: '
    /**
     * The filter values define the set of values in this query. They are applied based on the QueryFilterType.
     */
    criteria'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' FilterCriteria'
    PropertySignature
      Identifier: '
    /**
     * The PagingDirection is applied to a paging token if one exists. If not the direction is ignored, and Forward from the start of the resultset is used. Direction should be left out of the request unless a paging token is used to help prevent future issues.
     */
    direction'
      QuestionToken
      TypeReference
        Identifier: ' PagingDirection'
    PropertySignature
      Identifier: '
    /**
     * The page number requested by the user. If not provided 1 is assumed by default.
     */
    pageNumber'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * The page size defines the number of results the caller wants for this filter. The count can't exceed the overall query size limits.
     */
    pageSize'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * The paging token is a distinct type of filter and the other filter fields are ignored. The paging token represents the continuation of a previously executed query. The information about where in the result and what fields are being filtered are embedded in the token.
     */
    pagingToken'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Defines the type of sorting to be applied on the results. The page slice is cut of the sorted results only.
     */
    sortBy'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Defines the order of sorting, 1 for Ascending, 2 for Descending, else default ordering based on the SortBy value
     */
    sortOrder'
      QuestionToken
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Question'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' QnAItem'
    PropertySignature
      Identifier: '
    reCaptchaToken'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * List of answers in for the question / thread
     */
    responses'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' Response'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' QuestionsResult'
    PropertySignature
      Identifier: '
    /**
     * Flag indicating if there are more QnA threads to be shown (for paging)
     */
    hasMoreQuestions'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * List of the QnA threads
     */
    questions'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' Question'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' RatingCountPerRating'
    PropertySignature
      Identifier: '
    /**
     * Rating value
     */
    rating'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Count of total ratings
     */
    ratingCount'
      QuestionToken
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Response'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' QnAItem'
    PropertySignature
      Identifier: '
    reCaptchaToken'
      QuestionToken
      StringKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' RestApiResponseStatus'
    EnumMember
      Identifier: '
    /**
     * The operation is completed.
     */
    Completed'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The operation is failed.
     */
    Failed'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The operation is in progress.
     */
    Inprogress'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The operation is in skipped.
     */
    Skipped'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' RestApiResponseStatusModel'
    PropertySignature
      Identifier: '
    /**
     * Gets or sets the operation details
     */
    operationDetails'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * Gets or sets the operation id
     */
    operationId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Gets or sets the completed status percentage
     */
    percentageCompleted'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Gets or sets the status
     */
    status'
      QuestionToken
      TypeReference
        Identifier: ' RestApiResponseStatus'
    PropertySignature
      Identifier: '
    /**
     * Gets or sets the status message
     */
    statusMessage'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Review'
    PropertySignature
      Identifier: '
    /**
     * Admin Reply, if any, for this review
     */
    adminReply'
      QuestionToken
      TypeReference
        Identifier: ' ReviewReply'
    PropertySignature
      Identifier: '
    /**
     * Unique identifier of a review item
     */
    id'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Flag for soft deletion
     */
    isDeleted'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Flag for Ignoring Review from average rating calculation
     */
    isIgnored'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Version of the product for which review was submitted
     */
    productVersion'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Rating provided by the user
     */
    rating'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    reCaptchaToken'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Reply, if any, for this review
     */
    reply'
      QuestionToken
      TypeReference
        Identifier: ' ReviewReply'
    PropertySignature
      Identifier: '
    /**
     * Text description of the review
     */
    text'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Title of the review
     */
    title'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Time when the review was edited/updated
     */
    updatedDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * Name of the user
     */
    userDisplayName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Id of the user who submitted the review
     */
    userId'
      QuestionToken
      StringKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' ReviewEventOperation'
    EnumMember
      Identifier: '
    Create'
      NumericLiteral
    EnumMember
      Identifier: '
    Update'
      NumericLiteral
    EnumMember
      Identifier: '
    Delete'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ReviewEventProperties'
    PropertySignature
      Identifier: '
    /**
     * Operation performed on Event - Create\Update
     */
    eventOperation'
      QuestionToken
      TypeReference
        Identifier: ' ReviewEventOperation'
    PropertySignature
      Identifier: '
    /**
     * Flag to see if reply is admin reply
     */
    isAdminReply'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Flag to record if the review is ignored
     */
    isIgnored'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Rating at the time of event
     */
    rating'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Reply update date
     */
    replyDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * Publisher reply text or admin reply text
     */
    replyText'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * User who responded to the review
     */
    replyUserId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Review Event Type - Review
     */
    resourceType'
      QuestionToken
      TypeReference
        Identifier: ' ReviewResourceType'
    PropertySignature
      Identifier: '
    /**
     * Review update date
     */
    reviewDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * ReviewId of the review  on which the operation is performed
     */
    reviewId'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Text in Review Text
     */
    reviewText'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * User display name at the time of review
     */
    userDisplayName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * User who gave review
     */
    userId'
      QuestionToken
      StringKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' ReviewFilterOptions'
    EnumMember
      Identifier: '
    /**
     * No filtering, all reviews are returned (default option)
     */
    None'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Filter out review items with empty review text
     */
    FilterEmptyReviews'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Filter out review items with empty usernames
     */
    FilterEmptyUserNames'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ReviewPatch'
    PropertySignature
      Identifier: '
    /**
     * Denotes the patch operation type
     */
    operation'
      QuestionToken
      TypeReference
        Identifier: ' ReviewPatchOperation'
    PropertySignature
      Identifier: '
    /**
     * Use when patch operation is FlagReview
     */
    reportedConcern'
      QuestionToken
      TypeReference
        Identifier: ' UserReportedConcern'
    PropertySignature
      Identifier: '
    /**
     * Use when patch operation is EditReview
     */
    reviewItem'
      QuestionToken
      TypeReference
        Identifier: ' Review'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' ReviewPatchOperation'
    EnumMember
      Identifier: '
    /**
     * Flag a review
     */
    FlagReview'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Update an existing review
     */
    UpdateReview'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Submit a reply for a review
     */
    ReplyToReview'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Submit an admin response
     */
    AdminResponseForReview'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Delete an Admin Reply
     */
    DeleteAdminReply'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Delete Publisher Reply
     */
    DeletePublisherReply'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ReviewReply'
    PropertySignature
      Identifier: '
    /**
     * Id of the reply
     */
    id'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Flag for soft deletion
     */
    isDeleted'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Version of the product when the reply was submitted or updated
     */
    productVersion'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Content of the reply
     */
    replyText'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Id of the review, to which this reply belongs
     */
    reviewId'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Title of the reply
     */
    title'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Date the reply was submitted or updated
     */
    updatedDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * Id of the user who left the reply
     */
    userId'
      QuestionToken
      StringKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' ReviewResourceType'
    EnumMember
      Identifier: '
    Review'
      NumericLiteral
    EnumMember
      Identifier: '
    PublisherReply'
      NumericLiteral
    EnumMember
      Identifier: '
    AdminReply'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ReviewsResult'
    PropertySignature
      Identifier: '
    /**
     * Flag indicating if there are more reviews to be shown (for paging)
     */
    hasMoreReviews'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * List of reviews
     */
    reviews'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' Review'
    PropertySignature
      Identifier: '
    /**
     * Count of total review items
     */
    totalReviewCount'
      QuestionToken
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ReviewSummary'
    PropertySignature
      Identifier: '
    /**
     * Average Rating
     */
    averageRating'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Count of total ratings
     */
    ratingCount'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Split of count across rating
     */
    ratingSplit'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' RatingCountPerRating'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' SortByType'
    EnumMember
      Identifier: '
    /**
     * The results will be sorted by relevance in case search query is given, if no search query resutls will be provided as is
     */
    Relevance'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The results will be sorted as per Last Updated date of the extensions with recently updated at the top
     */
    LastUpdatedDate'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Results will be sorted Alphabetically as per the title of the extension
     */
    Title'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Results will be sorted Alphabetically as per Publisher title
     */
    Publisher'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Results will be sorted by Install Count
     */
    InstallCount'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The results will be sorted as per Published date of the extensions
     */
    PublishedDate'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The results will be sorted as per Average ratings of the extensions
     */
    AverageRating'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The results will be sorted as per Trending Daily Score of the extensions
     */
    TrendingDaily'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The results will be sorted as per Trending weekly Score of the extensions
     */
    TrendingWeekly'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The results will be sorted as per Trending monthly Score of the extensions
     */
    TrendingMonthly'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The results will be sorted as per ReleaseDate of the extensions (date on which the extension first went public)
     */
    ReleaseDate'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The results will be sorted as per Author defined in the VSix/Metadata. If not defined, publisher name is used This is specifically needed by VS IDE, other (new and old) clients are not encouraged to use this
     */
    Author'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The results will be sorted as per Weighted Rating of the extension.
     */
    WeightedRating'
      NumericLiteral
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' SortOrderType'
    EnumMember
      Identifier: '
    /**
     * Results will be sorted in the default order as per the sorting type defined. The default varies for each type, e.g. for Relevance, default is Descending, for Title default is Ascending etc.
     */
    Default'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The results will be sorted in Ascending order
     */
    Ascending'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The results will be sorted in Descending order
     */
    Descending'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' UnpackagedExtensionData'
    PropertySignature
      Identifier: '
    categories'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    description'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    displayName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    draftId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    extensionName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    installationTargets'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' InstallationTarget'
    PropertySignature
      Identifier: '
    isConvertedToMarkdown'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    isPreview'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    pricingCategory'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    product'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    publisherName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    qnAEnabled'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    referralUrl'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    repositoryUrl'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    tags'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    version'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    vsixId'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' UserExtensionPolicy'
    PropertySignature
      Identifier: '
    /**
     * User display name that this policy refers to
     */
    displayName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The extension policy applied to the user
     */
    permissions'
      QuestionToken
      TypeReference
        Identifier: ' ExtensionPolicy'
    PropertySignature
      Identifier: '
    /**
     * User id that this policy refers to
     */
    userId'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' UserIdentityRef'
    PropertySignature
      Identifier: '
    /**
     * User display name
     */
    displayName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * User VSID
     */
    id'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' UserReportedConcern'
    PropertySignature
      Identifier: '
    /**
     * Category of the concern
     */
    category'
      QuestionToken
      TypeReference
        Identifier: ' ConcernCategory'
    PropertySignature
      Identifier: '
    /**
     * User comment associated with the report
     */
    concernText'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Id of the review which was reported
     */
    reviewId'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Date the report was submitted
     */
    submittedDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * Id of the user who reported a review
     */
    userId'
      QuestionToken
      StringKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' VSCodeWebExtensionStatisicsType'
    EnumMember
      Identifier: '
    Install'
      NumericLiteral
    EnumMember
      Identifier: '
    Update'
      NumericLiteral
    EnumMember
      Identifier: '
    Uninstall'
      NumericLiteral
  VariableStatement
    ExportKeyword
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' TypeInfo'
        TypeLiteral
          PropertySignature
            Identifier: '
    AcquisitionAssignmentType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            none'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            me'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            all'
                    NumberKeyword
          PropertySignature
            Identifier: '
    AcquisitionOperation'
            AnyKeyword
          PropertySignature
            Identifier: '
    AcquisitionOperationState'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            disallow'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            allow'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            completed'
                    NumberKeyword
          PropertySignature
            Identifier: '
    AcquisitionOperationType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            get'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            install'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            buy'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            try'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            request'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            none'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            purchaseRequest'
                    NumberKeyword
          PropertySignature
            Identifier: '
    AcquisitionOptions'
            AnyKeyword
          PropertySignature
            Identifier: '
    AzureRestApiResponseModel'
            AnyKeyword
          PropertySignature
            Identifier: '
    Concern'
            AnyKeyword
          PropertySignature
            Identifier: '
    ConcernCategory'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            general'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            abusive'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            spam'
                    NumberKeyword
          PropertySignature
            Identifier: '
    CustomerLastContact'
            AnyKeyword
          PropertySignature
            Identifier: '
    CustomerSupportRequest'
            AnyKeyword
          PropertySignature
            Identifier: '
    DraftPatchOperation'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            publish'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            cancel'
                    NumberKeyword
          PropertySignature
            Identifier: '
    DraftStateType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            unpublished'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            published'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            cancelled'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            error'
                    NumberKeyword
          PropertySignature
            Identifier: '
    ExtensionAcquisitionRequest'
            AnyKeyword
          PropertySignature
            Identifier: '
    ExtensionDailyStat'
            AnyKeyword
          PropertySignature
            Identifier: '
    ExtensionDailyStats'
            AnyKeyword
          PropertySignature
            Identifier: '
    ExtensionDeploymentTechnology'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            exe'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            msi'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            vsix'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            referralLink'
                    NumberKeyword
          PropertySignature
            Identifier: '
    ExtensionDraft'
            AnyKeyword
          PropertySignature
            Identifier: '
    ExtensionDraftPatch'
            AnyKeyword
          PropertySignature
            Identifier: '
    ExtensionEvent'
            AnyKeyword
          PropertySignature
            Identifier: '
    ExtensionEvents'
            AnyKeyword
          PropertySignature
            Identifier: '
    ExtensionFilterResult'
            AnyKeyword
          PropertySignature
            Identifier: '
    ExtensionLifecycleEventType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            uninstall'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            install'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            review'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            acquisition'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            sales'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            other'
                    NumberKeyword
          PropertySignature
            Identifier: '
    ExtensionPayload'
            AnyKeyword
          PropertySignature
            Identifier: '
    ExtensionPolicy'
            AnyKeyword
          PropertySignature
            Identifier: '
    ExtensionPolicyFlags'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            none'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            private'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            public'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            preview'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            released'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            firstParty'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            all'
                    NumberKeyword
          PropertySignature
            Identifier: '
    ExtensionQuery'
            AnyKeyword
          PropertySignature
            Identifier: '
    ExtensionQueryFilterType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            tag'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            displayName'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            private'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            id'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            category'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            contributionType'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            name'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            installationTarget'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            featured'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            searchText'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            featuredInCategory'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            excludeWithFlags'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            includeWithFlags'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            lcid'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            installationTargetVersion'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            installationTargetVersionRange'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            vsixMetadata'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            publisherName'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            publisherDisplayName'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            includeWithPublisherFlags'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            organizationSharedWith'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            productArchitecture'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            targetPlatform'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            extensionName'
                    NumberKeyword
          PropertySignature
            Identifier: '
    ExtensionQueryFlags'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            none'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            includeVersions'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            includeFiles'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            includeCategoryAndTags'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            includeSharedAccounts'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            includeVersionProperties'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            excludeNonValidated'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            includeInstallationTargets'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            includeAssetUri'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            includeStatistics'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            includeLatestVersionOnly'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            useFallbackAssetUri'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            includeMetadata'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            includeMinimalPayloadForVsIde'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            includeLcids'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            includeSharedOrganizations'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            includeNameConflictInfo'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            allAttributes'
                    NumberKeyword
          PropertySignature
            Identifier: '
    ExtensionQueryResult'
            AnyKeyword
          PropertySignature
            Identifier: '
    ExtensionStatisticOperation'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            none'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            set'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            increment'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            decrement'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            delete'
                    NumberKeyword
          PropertySignature
            Identifier: '
    ExtensionStatisticUpdate'
            AnyKeyword
          PropertySignature
            Identifier: '
    ExtensionStatsAggregateType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            daily'
                    NumberKeyword
          PropertySignature
            Identifier: '
    ExtensionVersion'
            AnyKeyword
          PropertySignature
            Identifier: '
    ExtensionVersionFlags'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            none'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            validated'
                    NumberKeyword
          PropertySignature
            Identifier: '
    NotificationsData'
            AnyKeyword
          PropertySignature
            Identifier: '
    NotificationTemplateType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            reviewNotification'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            qnaNotification'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            customerContactNotification'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            publisherMemberUpdateNotification'
                    NumberKeyword
          PropertySignature
            Identifier: '
    PagingDirection'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            backward'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            forward'
                    NumberKeyword
          PropertySignature
            Identifier: '
    PublishedExtension'
            AnyKeyword
          PropertySignature
            Identifier: '
    PublishedExtensionFlags'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            none'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            disabled'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            builtIn'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            validated'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            trusted'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            paid'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            public'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            multiVersion'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            system'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            preview'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            unpublished'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            trial'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            locked'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            hidden'
                    NumberKeyword
          PropertySignature
            Identifier: '
    Publisher'
            AnyKeyword
          PropertySignature
            Identifier: '
    PublisherBase'
            AnyKeyword
          PropertySignature
            Identifier: '
    PublisherFacts'
            AnyKeyword
          PropertySignature
            Identifier: '
    PublisherFilterResult'
            AnyKeyword
          PropertySignature
            Identifier: '
    PublisherFlags'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            unChanged'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            none'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            disabled'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            verified'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            certified'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            serviceFlags'
                    NumberKeyword
          PropertySignature
            Identifier: '
    PublisherPermissions'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            read'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            updateExtension'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            createPublisher'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            publishExtension'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            admin'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            trustedPartner'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            privateRead'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            deleteExtension'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            editSettings'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            viewPermissions'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            managePermissions'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            deletePublisher'
                    NumberKeyword
          PropertySignature
            Identifier: '
    PublisherQuery'
            AnyKeyword
          PropertySignature
            Identifier: '
    PublisherQueryFlags'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            none'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            includeExtensions'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            includeEmailAddress'
                    NumberKeyword
          PropertySignature
            Identifier: '
    PublisherQueryResult'
            AnyKeyword
          PropertySignature
            Identifier: '
    PublisherRoleAccess'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            assigned'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            inherited'
                    NumberKeyword
          PropertySignature
            Identifier: '
    PublisherRoleAssignment'
            AnyKeyword
          PropertySignature
            Identifier: '
    PublisherState'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            none'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            verificationPending'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            certificationPending'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            certificationRejected'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            certificationRevoked'
                    NumberKeyword
          PropertySignature
            Identifier: '
    QnAItem'
            AnyKeyword
          PropertySignature
            Identifier: '
    QnAItemStatus'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            none'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            userEditable'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            publisherCreated'
                    NumberKeyword
          PropertySignature
            Identifier: '
    QueryFilter'
            AnyKeyword
          PropertySignature
            Identifier: '
    Question'
            AnyKeyword
          PropertySignature
            Identifier: '
    QuestionsResult'
            AnyKeyword
          PropertySignature
            Identifier: '
    Response'
            AnyKeyword
          PropertySignature
            Identifier: '
    RestApiResponseStatus'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            completed'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            failed'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            inprogress'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            skipped'
                    NumberKeyword
          PropertySignature
            Identifier: '
    RestApiResponseStatusModel'
            AnyKeyword
          PropertySignature
            Identifier: '
    Review'
            AnyKeyword
          PropertySignature
            Identifier: '
    ReviewEventOperation'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            create'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            update'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            delete'
                    NumberKeyword
          PropertySignature
            Identifier: '
    ReviewEventProperties'
            AnyKeyword
          PropertySignature
            Identifier: '
    ReviewFilterOptions'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            none'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            filterEmptyReviews'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            filterEmptyUserNames'
                    NumberKeyword
          PropertySignature
            Identifier: '
    ReviewPatch'
            AnyKeyword
          PropertySignature
            Identifier: '
    ReviewPatchOperation'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            flagReview'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            updateReview'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            replyToReview'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            adminResponseForReview'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            deleteAdminReply'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            deletePublisherReply'
                    NumberKeyword
          PropertySignature
            Identifier: '
    ReviewReply'
            AnyKeyword
          PropertySignature
            Identifier: '
    ReviewResourceType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            review'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            publisherReply'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            adminReply'
                    NumberKeyword
          PropertySignature
            Identifier: '
    ReviewsResult'
            AnyKeyword
          PropertySignature
            Identifier: '
    SortByType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            relevance'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            lastUpdatedDate'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            title'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            publisher'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            installCount'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            publishedDate'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            averageRating'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            trendingDaily'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            trendingWeekly'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            trendingMonthly'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            releaseDate'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            author'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            weightedRating'
                    NumberKeyword
          PropertySignature
            Identifier: '
    SortOrderType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            default'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            ascending'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            descending'
                    NumberKeyword
          PropertySignature
            Identifier: '
    UserExtensionPolicy'
            AnyKeyword
          PropertySignature
            Identifier: '
    UserReportedConcern'
            AnyKeyword
          PropertySignature
            Identifier: '
    VSCodeWebExtensionStatisicsType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            install'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            update'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            uninstall'
                    NumberKeyword
