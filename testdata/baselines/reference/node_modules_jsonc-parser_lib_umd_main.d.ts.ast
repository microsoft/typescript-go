SourceFile
  VariableStatement
    ExportKeyword
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' createScanner'
        FunctionType
          Parameter
            Identifier: 'text'
            StringKeyword
          Parameter
            Identifier: ' ignoreTrivia'
            QuestionToken
            BooleanKeyword
          TypeReference
            Identifier: ' JSONScanner'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    ConstKeyword
    Identifier: ' ScanError'
    EnumMember
      Identifier: '
    None'
      NumericLiteral
    EnumMember
      Identifier: '
    UnexpectedEndOfComment'
      NumericLiteral
    EnumMember
      Identifier: '
    UnexpectedEndOfString'
      NumericLiteral
    EnumMember
      Identifier: '
    UnexpectedEndOfNumber'
      NumericLiteral
    EnumMember
      Identifier: '
    InvalidUnicode'
      NumericLiteral
    EnumMember
      Identifier: '
    InvalidEscapeCharacter'
      NumericLiteral
    EnumMember
      Identifier: '
    InvalidCharacter'
      NumericLiteral
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    ConstKeyword
    Identifier: ' SyntaxKind'
    EnumMember
      Identifier: '
    OpenBraceToken'
      NumericLiteral
    EnumMember
      Identifier: '
    CloseBraceToken'
      NumericLiteral
    EnumMember
      Identifier: '
    OpenBracketToken'
      NumericLiteral
    EnumMember
      Identifier: '
    CloseBracketToken'
      NumericLiteral
    EnumMember
      Identifier: '
    CommaToken'
      NumericLiteral
    EnumMember
      Identifier: '
    ColonToken'
      NumericLiteral
    EnumMember
      Identifier: '
    NullKeyword'
      NumericLiteral
    EnumMember
      Identifier: '
    TrueKeyword'
      NumericLiteral
    EnumMember
      Identifier: '
    FalseKeyword'
      NumericLiteral
    EnumMember
      Identifier: '
    StringLiteral'
      NumericLiteral
    EnumMember
      Identifier: '
    NumericLiteral'
      NumericLiteral
    EnumMember
      Identifier: '
    LineCommentTrivia'
      NumericLiteral
    EnumMember
      Identifier: '
    BlockCommentTrivia'
      NumericLiteral
    EnumMember
      Identifier: '
    LineBreakTrivia'
      NumericLiteral
    EnumMember
      Identifier: '
    Trivia'
      NumericLiteral
    EnumMember
      Identifier: '
    Unknown'
      NumericLiteral
    EnumMember
      Identifier: '
    EOF'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' JSONScanner'
    MethodSignature
      Identifier: '
    /**
     * Sets the scan position to a new offset. A call to 'scan' is needed to get the first token.
     */
    setPosition'
      Parameter
        Identifier: 'pos'
        NumberKeyword
      VoidKeyword
    MethodSignature
      Identifier: '
    /**
     * Read the next token. Returns the token code.
     */
    scan'
      TypeReference
        Identifier: ' SyntaxKind'
    MethodSignature
      Identifier: '
    /**
     * Returns the zero-based current scan position, which is after the last read token.
     */
    getPosition'
      NumberKeyword
    MethodSignature
      Identifier: '
    /**
     * Returns the last read token.
     */
    getToken'
      TypeReference
        Identifier: ' SyntaxKind'
    MethodSignature
      Identifier: '
    /**
     * Returns the last read token value. The value for strings is the decoded string content. For numbers it's of type number, for boolean it's true or false.
     */
    getTokenValue'
      StringKeyword
    MethodSignature
      Identifier: '
    /**
     * The zero-based start offset of the last read token.
     */
    getTokenOffset'
      NumberKeyword
    MethodSignature
      Identifier: '
    /**
     * The length of the last read token.
     */
    getTokenLength'
      NumberKeyword
    MethodSignature
      Identifier: '
    /**
     * The zero-based start line number of the last read token.
     */
    getTokenStartLine'
      NumberKeyword
    MethodSignature
      Identifier: '
    /**
     * The zero-based start character (column) of the last read token.
     */
    getTokenStartCharacter'
      NumberKeyword
    MethodSignature
      Identifier: '
    /**
     * An error code of the last scan.
     */
    getTokenError'
      TypeReference
        Identifier: ' ScanError'
  VariableStatement
    ExportKeyword
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' getLocation'
        FunctionType
          Parameter
            Identifier: 'text'
            StringKeyword
          Parameter
            Identifier: ' position'
            NumberKeyword
          TypeReference
            Identifier: ' Location'
  VariableStatement
    ExportKeyword
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' parse'
        FunctionType
          Parameter
            Identifier: 'text'
            StringKeyword
          Parameter
            Identifier: ' errors'
            QuestionToken
            ArrayType
              TypeReference
                Identifier: ' ParseError'
          Parameter
            Identifier: ' options'
            QuestionToken
            TypeReference
              Identifier: ' ParseOptions'
          AnyKeyword
  VariableStatement
    ExportKeyword
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' parseTree'
        FunctionType
          Parameter
            Identifier: 'text'
            StringKeyword
          Parameter
            Identifier: ' errors'
            QuestionToken
            ArrayType
              TypeReference
                Identifier: ' ParseError'
          Parameter
            Identifier: ' options'
            QuestionToken
            TypeReference
              Identifier: ' ParseOptions'
          UnionType
            TypeReference
              Identifier: ' Node'
            UndefinedKeyword
  VariableStatement
    ExportKeyword
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' findNodeAtLocation'
        FunctionType
          Parameter
            Identifier: 'root'
            TypeReference
              Identifier: ' Node'
          Parameter
            Identifier: ' path'
            TypeReference
              Identifier: ' JSONPath'
          UnionType
            TypeReference
              Identifier: ' Node'
            UndefinedKeyword
  VariableStatement
    ExportKeyword
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' findNodeAtOffset'
        FunctionType
          Parameter
            Identifier: 'root'
            TypeReference
              Identifier: ' Node'
          Parameter
            Identifier: ' offset'
            NumberKeyword
          Parameter
            Identifier: ' includeRightBound'
            QuestionToken
            BooleanKeyword
          UnionType
            TypeReference
              Identifier: ' Node'
            UndefinedKeyword
  VariableStatement
    ExportKeyword
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' getNodePath'
        FunctionType
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' Node'
          TypeReference
            Identifier: ' JSONPath'
  VariableStatement
    ExportKeyword
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' getNodeValue'
        FunctionType
          Parameter
            Identifier: 'node'
            TypeReference
              Identifier: ' Node'
          AnyKeyword
  VariableStatement
    ExportKeyword
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' visit'
        FunctionType
          Parameter
            Identifier: 'text'
            StringKeyword
          Parameter
            Identifier: ' visitor'
            TypeReference
              Identifier: ' JSONVisitor'
          Parameter
            Identifier: ' options'
            QuestionToken
            TypeReference
              Identifier: ' ParseOptions'
          AnyKeyword
  VariableStatement
    ExportKeyword
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' stripComments'
        FunctionType
          Parameter
            Identifier: 'text'
            StringKeyword
          Parameter
            Identifier: ' replaceCh'
            QuestionToken
            StringKeyword
          StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ParseError'
    PropertySignature
      Identifier: '
    error'
      TypeReference
        Identifier: ' ParseErrorCode'
    PropertySignature
      Identifier: '
    offset'
      NumberKeyword
    PropertySignature
      Identifier: '
    length'
      NumberKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    ConstKeyword
    Identifier: ' ParseErrorCode'
    EnumMember
      Identifier: '
    InvalidSymbol'
      NumericLiteral
    EnumMember
      Identifier: '
    InvalidNumberFormat'
      NumericLiteral
    EnumMember
      Identifier: '
    PropertyNameExpected'
      NumericLiteral
    EnumMember
      Identifier: '
    ValueExpected'
      NumericLiteral
    EnumMember
      Identifier: '
    ColonExpected'
      NumericLiteral
    EnumMember
      Identifier: '
    CommaExpected'
      NumericLiteral
    EnumMember
      Identifier: '
    CloseBraceExpected'
      NumericLiteral
    EnumMember
      Identifier: '
    CloseBracketExpected'
      NumericLiteral
    EnumMember
      Identifier: '
    EndOfFileExpected'
      NumericLiteral
    EnumMember
      Identifier: '
    InvalidCommentToken'
      NumericLiteral
    EnumMember
      Identifier: '
    UnexpectedEndOfComment'
      NumericLiteral
    EnumMember
      Identifier: '
    UnexpectedEndOfString'
      NumericLiteral
    EnumMember
      Identifier: '
    UnexpectedEndOfNumber'
      NumericLiteral
    EnumMember
      Identifier: '
    InvalidUnicode'
      NumericLiteral
    EnumMember
      Identifier: '
    InvalidEscapeCharacter'
      NumericLiteral
    EnumMember
      Identifier: '
    InvalidCharacter'
      NumericLiteral
  FunctionDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' printParseErrorCode'
    Parameter
      Identifier: 'code'
      TypeReference
        Identifier: ' ParseErrorCode'
    UnionType
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' NodeType'
    UnionType
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Node'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' type'
      TypeReference
        Identifier: ' NodeType'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' value'
      QuestionToken
      AnyKeyword
    PropertySignature
      ReadonlyKeyword
      Identifier: ' offset'
      NumberKeyword
    PropertySignature
      ReadonlyKeyword
      Identifier: ' length'
      NumberKeyword
    PropertySignature
      ReadonlyKeyword
      Identifier: ' colonOffset'
      QuestionToken
      NumberKeyword
    PropertySignature
      ReadonlyKeyword
      Identifier: ' parent'
      QuestionToken
      TypeReference
        Identifier: ' Node'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' children'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' Node'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' Segment'
    UnionType
      StringKeyword
      NumberKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' JSONPath'
    ArrayType
      TypeReference
        Identifier: ' Segment'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Location'
    PropertySignature
      Identifier: '
    /**
     * The previous property key or literal value (string, number, boolean or null) or undefined.
     */
    previousNode'
      QuestionToken
      TypeReference
        Identifier: ' Node'
    PropertySignature
      Identifier: '
    /**
     * The path describing the location in the JSON document. The path consists of a sequence of strings
     * representing an object property or numbers for array indices.
     */
    path'
      TypeReference
        Identifier: ' JSONPath'
    PropertySignature
      Identifier: '
    /**
     * Matches the locations path against a pattern consisting of strings (for properties) and numbers (for array indices).
     * '*' will match a single segment of any property name or index.
     * '**' will match a sequence of segments of any property name or index, or no segment.
     */
    matches'
      FunctionType
        Parameter
          Identifier: 'patterns'
          TypeReference
            Identifier: ' JSONPath'
        BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * If set, the location's offset is at a property key.
     */
    isAtPropertyKey'
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ParseOptions'
    PropertySignature
      Identifier: '
    disallowComments'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    allowTrailingComma'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    allowEmptyContent'
      QuestionToken
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' JSONVisitor'
    PropertySignature
      Identifier: '
    /**
     * Invoked when an open brace is encountered and an object is started. The offset and length represent the location of the open brace.
     * When `false` is returned, the object properties will not be visited.
     */
    onObjectBegin'
      QuestionToken
      FunctionType
        Parameter
          Identifier: 'offset'
          NumberKeyword
        Parameter
          Identifier: ' length'
          NumberKeyword
        Parameter
          Identifier: ' startLine'
          NumberKeyword
        Parameter
          Identifier: ' startCharacter'
          NumberKeyword
        Parameter
          Identifier: ' pathSupplier'
          FunctionType
            TypeReference
              Identifier: ' JSONPath'
        UnionType
          BooleanKeyword
          VoidKeyword
    PropertySignature
      Identifier: '
    /**
     * Invoked when a property is encountered. The offset and length represent the location of the property name.
     * The `JSONPath` created by the `pathSupplier` refers to the enclosing JSON object, it does not include the
     * property name yet.
     */
    onObjectProperty'
      QuestionToken
      FunctionType
        Parameter
          Identifier: 'property'
          StringKeyword
        Parameter
          Identifier: ' offset'
          NumberKeyword
        Parameter
          Identifier: ' length'
          NumberKeyword
        Parameter
          Identifier: ' startLine'
          NumberKeyword
        Parameter
          Identifier: ' startCharacter'
          NumberKeyword
        Parameter
          Identifier: ' pathSupplier'
          FunctionType
            TypeReference
              Identifier: ' JSONPath'
        VoidKeyword
    PropertySignature
      Identifier: '
    /**
     * Invoked when a closing brace is encountered and an object is completed. The offset and length represent the location of the closing brace.
     */
    onObjectEnd'
      QuestionToken
      FunctionType
        Parameter
          Identifier: 'offset'
          NumberKeyword
        Parameter
          Identifier: ' length'
          NumberKeyword
        Parameter
          Identifier: ' startLine'
          NumberKeyword
        Parameter
          Identifier: ' startCharacter'
          NumberKeyword
        VoidKeyword
    PropertySignature
      Identifier: '
    /**
     * Invoked when an open bracket is encountered. The offset and length represent the location of the open bracket.
     * When `false` is returned, the array items will not be visited.
     */
    onArrayBegin'
      QuestionToken
      FunctionType
        Parameter
          Identifier: 'offset'
          NumberKeyword
        Parameter
          Identifier: ' length'
          NumberKeyword
        Parameter
          Identifier: ' startLine'
          NumberKeyword
        Parameter
          Identifier: ' startCharacter'
          NumberKeyword
        Parameter
          Identifier: ' pathSupplier'
          FunctionType
            TypeReference
              Identifier: ' JSONPath'
        UnionType
          BooleanKeyword
          VoidKeyword
    PropertySignature
      Identifier: '
    /**
     * Invoked when a closing bracket is encountered. The offset and length represent the location of the closing bracket.
     */
    onArrayEnd'
      QuestionToken
      FunctionType
        Parameter
          Identifier: 'offset'
          NumberKeyword
        Parameter
          Identifier: ' length'
          NumberKeyword
        Parameter
          Identifier: ' startLine'
          NumberKeyword
        Parameter
          Identifier: ' startCharacter'
          NumberKeyword
        VoidKeyword
    PropertySignature
      Identifier: '
    /**
     * Invoked when a literal value is encountered. The offset and length represent the location of the literal value.
     */
    onLiteralValue'
      QuestionToken
      FunctionType
        Parameter
          Identifier: 'value'
          AnyKeyword
        Parameter
          Identifier: ' offset'
          NumberKeyword
        Parameter
          Identifier: ' length'
          NumberKeyword
        Parameter
          Identifier: ' startLine'
          NumberKeyword
        Parameter
          Identifier: ' startCharacter'
          NumberKeyword
        Parameter
          Identifier: ' pathSupplier'
          FunctionType
            TypeReference
              Identifier: ' JSONPath'
        VoidKeyword
    PropertySignature
      Identifier: '
    /**
     * Invoked when a comma or colon separator is encountered. The offset and length represent the location of the separator.
     */
    onSeparator'
      QuestionToken
      FunctionType
        Parameter
          Identifier: 'character'
          StringKeyword
        Parameter
          Identifier: ' offset'
          NumberKeyword
        Parameter
          Identifier: ' length'
          NumberKeyword
        Parameter
          Identifier: ' startLine'
          NumberKeyword
        Parameter
          Identifier: ' startCharacter'
          NumberKeyword
        VoidKeyword
    PropertySignature
      Identifier: '
    /**
     * When comments are allowed, invoked when a line or block comment is encountered. The offset and length represent the location of the comment.
     */
    onComment'
      QuestionToken
      FunctionType
        Parameter
          Identifier: 'offset'
          NumberKeyword
        Parameter
          Identifier: ' length'
          NumberKeyword
        Parameter
          Identifier: ' startLine'
          NumberKeyword
        Parameter
          Identifier: ' startCharacter'
          NumberKeyword
        VoidKeyword
    PropertySignature
      Identifier: '
    /**
     * Invoked on an error.
     */
    onError'
      QuestionToken
      FunctionType
        Parameter
          Identifier: 'error'
          TypeReference
            Identifier: ' ParseErrorCode'
        Parameter
          Identifier: ' offset'
          NumberKeyword
        Parameter
          Identifier: ' length'
          NumberKeyword
        Parameter
          Identifier: ' startLine'
          NumberKeyword
        Parameter
          Identifier: ' startCharacter'
          NumberKeyword
        VoidKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' EditResult'
    ArrayType
      TypeReference
        Identifier: ' Edit'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Edit'
    PropertySignature
      Identifier: '
    /**
     * The start offset of the modification.
     */
    offset'
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * The length of the modification. Must not be negative. Empty length represents an *insert*.
     */
    length'
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * The new content. Empty content represents a *remove*.
     */
    content'
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Range'
    PropertySignature
      Identifier: '
    /**
     * The start offset of the range.
     */
    offset'
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * The length of the range. Must not be negative.
     */
    length'
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' FormattingOptions'
    PropertySignature
      Identifier: '
    /**
     * If indentation is based on spaces (`insertSpaces` = true), the number of spaces that make an indent.
     */
    tabSize'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Is indentation based on spaces?
     */
    insertSpaces'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * The default 'end of line' character. If not set, '\n' is used as default.
     */
    eol'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * If set, will add a new line at the end of the document.
     */
    insertFinalNewline'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * If true, will keep line positions as is in the formatting
     */
    keepLines'
      QuestionToken
      BooleanKeyword
  FunctionDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' format'
    Parameter
      Identifier: 'documentText'
      StringKeyword
    Parameter
      Identifier: ' range'
      UnionType
        TypeReference
          Identifier: ' Range'
        UndefinedKeyword
    Parameter
      Identifier: ' options'
      TypeReference
        Identifier: ' FormattingOptions'
    TypeReference
      Identifier: ' EditResult'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ModificationOptions'
    PropertySignature
      Identifier: '
    /**
     * Formatting options. If undefined, the newly inserted code will be inserted unformatted.
    */
    formattingOptions'
      QuestionToken
      TypeReference
        Identifier: ' FormattingOptions'
    PropertySignature
      Identifier: '
    /**
     * Default false. If `JSONPath` refers to an index of an array and `isArrayInsertion` is `true`, then
     * {@linkcode modify} will insert a new item at that location instead of overwriting its contents.
     */
    isArrayInsertion'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Optional function to define the insertion index given an existing list of properties.
     */
    getInsertionIndex'
      QuestionToken
      FunctionType
        Parameter
          Identifier: 'properties'
          ArrayType
            StringKeyword
        NumberKeyword
  FunctionDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' modify'
    Parameter
      Identifier: 'text'
      StringKeyword
    Parameter
      Identifier: ' path'
      TypeReference
        Identifier: ' JSONPath'
    Parameter
      Identifier: ' value'
      AnyKeyword
    Parameter
      Identifier: ' options'
      TypeReference
        Identifier: ' ModificationOptions'
    TypeReference
      Identifier: ' EditResult'
  FunctionDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' applyEdits'
    Parameter
      Identifier: 'text'
      StringKeyword
    Parameter
      Identifier: ' edits'
      TypeReference
        Identifier: ' EditResult'
    StringKeyword
