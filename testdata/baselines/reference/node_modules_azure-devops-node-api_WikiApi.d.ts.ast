SourceFile
  ImportEqualsDeclaration
    Identifier: ' basem'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' VsoBaseInterfaces'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' Comments_Contracts'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' GitInterfaces'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' VSSInterfaces'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' WikiInterfaces'
    ExternalModuleReference
      StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' IWikiApi'
    HeritageClause
      ExpressionWithTypeArguments
        PropertyAccessExpression
          Identifier: ' basem'
          Identifier: 'ClientApiBase'
    MethodSignature
      Identifier: '
    createCommentAttachment'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' contentStream'
        TypeReference
          QualifiedName
            Identifier: ' NodeJS'
            Identifier: 'ReadableStream'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' pageId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Comments_Contracts'
            Identifier: 'CommentAttachment'
    MethodSignature
      Identifier: '
    getAttachmentContent'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' pageId'
        NumberKeyword
      Parameter
        Identifier: ' attachmentId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    addCommentReaction'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' pageId'
        NumberKeyword
      Parameter
        Identifier: ' commentId'
        NumberKeyword
      Parameter
        Identifier: ' type'
        TypeReference
          QualifiedName
            Identifier: ' Comments_Contracts'
            Identifier: 'CommentReactionType'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Comments_Contracts'
            Identifier: 'CommentReaction'
    MethodSignature
      Identifier: '
    deleteCommentReaction'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' pageId'
        NumberKeyword
      Parameter
        Identifier: ' commentId'
        NumberKeyword
      Parameter
        Identifier: ' type'
        TypeReference
          QualifiedName
            Identifier: ' Comments_Contracts'
            Identifier: 'CommentReactionType'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Comments_Contracts'
            Identifier: 'CommentReaction'
    MethodSignature
      Identifier: '
    getEngagedUsers'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' pageId'
        NumberKeyword
      Parameter
        Identifier: ' commentId'
        NumberKeyword
      Parameter
        Identifier: ' type'
        TypeReference
          QualifiedName
            Identifier: ' Comments_Contracts'
            Identifier: 'CommentReactionType'
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' skip'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'VSSInterfaces'
              Identifier: 'IdentityRef'
    MethodSignature
      Identifier: '
    addComment'
      Parameter
        Identifier: 'request'
        TypeReference
          QualifiedName
            Identifier: ' Comments_Contracts'
            Identifier: 'CommentCreateParameters'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' pageId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Comments_Contracts'
            Identifier: 'Comment'
    MethodSignature
      Identifier: '
    deleteComment'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' pageId'
        NumberKeyword
      Parameter
        Identifier: ' id'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getComment'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' pageId'
        NumberKeyword
      Parameter
        Identifier: ' id'
        NumberKeyword
      Parameter
        Identifier: ' excludeDeleted'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' Comments_Contracts'
            Identifier: 'CommentExpandOptions'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Comments_Contracts'
            Identifier: 'Comment'
    MethodSignature
      Identifier: '
    listComments'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' pageId'
        NumberKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' excludeDeleted'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' Comments_Contracts'
            Identifier: 'CommentExpandOptions'
      Parameter
        Identifier: ' order'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' Comments_Contracts'
            Identifier: 'CommentSortOrder'
      Parameter
        Identifier: ' parentId'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Comments_Contracts'
            Identifier: 'CommentList'
    MethodSignature
      Identifier: '
    updateComment'
      Parameter
        Identifier: 'comment'
        TypeReference
          QualifiedName
            Identifier: ' Comments_Contracts'
            Identifier: 'CommentUpdateParameters'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' pageId'
        NumberKeyword
      Parameter
        Identifier: ' id'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Comments_Contracts'
            Identifier: 'Comment'
    MethodSignature
      Identifier: '
    getPageText'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' path'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' recursionLevel'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' GitInterfaces'
            Identifier: 'VersionControlRecursionType'
      Parameter
        Identifier: ' versionDescriptor'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' GitInterfaces'
            Identifier: 'GitVersionDescriptor'
      Parameter
        Identifier: ' includeContent'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    getPageZip'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' path'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' recursionLevel'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' GitInterfaces'
            Identifier: 'VersionControlRecursionType'
      Parameter
        Identifier: ' versionDescriptor'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' GitInterfaces'
            Identifier: 'GitVersionDescriptor'
      Parameter
        Identifier: ' includeContent'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    getPageByIdText'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' id'
        NumberKeyword
      Parameter
        Identifier: ' recursionLevel'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' GitInterfaces'
            Identifier: 'VersionControlRecursionType'
      Parameter
        Identifier: ' includeContent'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    getPageByIdZip'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' id'
        NumberKeyword
      Parameter
        Identifier: ' recursionLevel'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' GitInterfaces'
            Identifier: 'VersionControlRecursionType'
      Parameter
        Identifier: ' includeContent'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    getPagesBatch'
      Parameter
        Identifier: 'pagesBatchRequest'
        TypeReference
          QualifiedName
            Identifier: ' WikiInterfaces'
            Identifier: 'WikiPagesBatchRequest'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' versionDescriptor'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' GitInterfaces'
            Identifier: 'GitVersionDescriptor'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'WikiInterfaces'
              Identifier: 'WikiPageDetail'
    MethodSignature
      Identifier: '
    getPageData'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' pageId'
        NumberKeyword
      Parameter
        Identifier: ' pageViewsForDays'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WikiInterfaces'
            Identifier: 'WikiPageDetail'
    MethodSignature
      Identifier: '
    createOrUpdatePageViewStats'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' wikiVersion'
        TypeReference
          QualifiedName
            Identifier: ' GitInterfaces'
            Identifier: 'GitVersionDescriptor'
      Parameter
        Identifier: ' path'
        StringKeyword
      Parameter
        Identifier: ' oldPath'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WikiInterfaces'
            Identifier: 'WikiPageViewStats'
    MethodSignature
      Identifier: '
    createWiki'
      Parameter
        Identifier: 'wikiCreateParams'
        TypeReference
          QualifiedName
            Identifier: ' WikiInterfaces'
            Identifier: 'WikiCreateParametersV2'
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WikiInterfaces'
            Identifier: 'WikiV2'
    MethodSignature
      Identifier: '
    deleteWiki'
      Parameter
        Identifier: 'wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WikiInterfaces'
            Identifier: 'WikiV2'
    MethodSignature
      Identifier: '
    getAllWikis'
      Parameter
        Identifier: 'project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WikiInterfaces'
              Identifier: 'WikiV2'
    MethodSignature
      Identifier: '
    getWiki'
      Parameter
        Identifier: 'wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WikiInterfaces'
            Identifier: 'WikiV2'
    MethodSignature
      Identifier: '
    updateWiki'
      Parameter
        Identifier: 'updateParameters'
        TypeReference
          QualifiedName
            Identifier: ' WikiInterfaces'
            Identifier: 'WikiUpdateParameters'
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WikiInterfaces'
            Identifier: 'WikiV2'
  ClassDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' WikiApi'
    HeritageClause
      ExpressionWithTypeArguments
        PropertyAccessExpression
          Identifier: ' basem'
          Identifier: 'ClientApiBase'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' IWikiApi'
    Constructor
      Parameter
        Identifier: 'baseUrl'
        StringKeyword
      Parameter
        Identifier: ' handlers'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' VsoBaseInterfaces'
              Identifier: 'IRequestHandler'
      Parameter
        Identifier: ' options'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' VsoBaseInterfaces'
            Identifier: 'IRequestOptions'
    PropertyDeclaration
      StaticKeyword
      ReadonlyKeyword
      Identifier: ' RESOURCE_AREA_ID'
      StringLiteral
    MethodDeclaration
      Identifier: '
    /**
     * Uploads an attachment on a comment on a wiki page.
     *
     * @param {NodeJS.ReadableStream} contentStream - Content to upload
     * @param {string} project - Project ID or project name
     * @param {string} wikiIdentifier - Wiki ID or wiki name.
     * @param {number} pageId - Wiki page ID.
     */
    createCommentAttachment'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' contentStream'
        TypeReference
          QualifiedName
            Identifier: ' NodeJS'
            Identifier: 'ReadableStream'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' pageId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Comments_Contracts'
            Identifier: 'CommentAttachment'
    MethodDeclaration
      Identifier: '
    /**
     * Downloads an attachment on a comment on a wiki page.
     *
     * @param {string} project - Project ID or project name
     * @param {string} wikiIdentifier - Wiki ID or wiki name.
     * @param {number} pageId - Wiki page ID.
     * @param {string} attachmentId - Attachment ID.
     */
    getAttachmentContent'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' pageId'
        NumberKeyword
      Parameter
        Identifier: ' attachmentId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * Add a reaction on a wiki page comment.
     *
     * @param {string} project - Project ID or project name
     * @param {string} wikiIdentifier - Wiki ID or wiki name
     * @param {number} pageId - Wiki page ID
     * @param {number} commentId - ID of the associated comment
     * @param {Comments_Contracts.CommentReactionType} type - Type of the reaction being added
     */
    addCommentReaction'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' pageId'
        NumberKeyword
      Parameter
        Identifier: ' commentId'
        NumberKeyword
      Parameter
        Identifier: ' type'
        TypeReference
          QualifiedName
            Identifier: ' Comments_Contracts'
            Identifier: 'CommentReactionType'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Comments_Contracts'
            Identifier: 'CommentReaction'
    MethodDeclaration
      Identifier: '
    /**
     * Delete a reaction on a wiki page comment.
     *
     * @param {string} project - Project ID or project name
     * @param {string} wikiIdentifier - Wiki ID or name
     * @param {number} pageId - Wiki page ID
     * @param {number} commentId - ID of the associated comment
     * @param {Comments_Contracts.CommentReactionType} type - Type of the reaction being deleted
     */
    deleteCommentReaction'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' pageId'
        NumberKeyword
      Parameter
        Identifier: ' commentId'
        NumberKeyword
      Parameter
        Identifier: ' type'
        TypeReference
          QualifiedName
            Identifier: ' Comments_Contracts'
            Identifier: 'CommentReactionType'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Comments_Contracts'
            Identifier: 'CommentReaction'
    MethodDeclaration
      Identifier: '
    /**
     * Gets a list of users who have reacted for the given wiki comment with a given reaction type. Supports paging, with a default page size of 100 users at a time.
     *
     * @param {string} project - Project ID or project name
     * @param {string} wikiIdentifier - Wiki ID or wiki name.
     * @param {number} pageId - Wiki page ID.
     * @param {number} commentId - ID of the associated comment
     * @param {Comments_Contracts.CommentReactionType} type - Type of the reaction for which the engaged users are being requested
     * @param {number} top - Number of enagaged users to be returned in a given page. Optional, defaults to 100
     * @param {number} skip - Number of engaged users to be skipped to page the next set of engaged users, defaults to 0
     */
    getEngagedUsers'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' pageId'
        NumberKeyword
      Parameter
        Identifier: ' commentId'
        NumberKeyword
      Parameter
        Identifier: ' type'
        TypeReference
          QualifiedName
            Identifier: ' Comments_Contracts'
            Identifier: 'CommentReactionType'
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' skip'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'VSSInterfaces'
              Identifier: 'IdentityRef'
    MethodDeclaration
      Identifier: '
    /**
     * Add a comment on a wiki page.
     *
     * @param {Comments_Contracts.CommentCreateParameters} request - Comment create request.
     * @param {string} project - Project ID or project name
     * @param {string} wikiIdentifier - Wiki ID or wiki name.
     * @param {number} pageId - Wiki page ID.
     */
    addComment'
      Parameter
        Identifier: 'request'
        TypeReference
          QualifiedName
            Identifier: ' Comments_Contracts'
            Identifier: 'CommentCreateParameters'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' pageId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Comments_Contracts'
            Identifier: 'Comment'
    MethodDeclaration
      Identifier: '
    /**
     * Delete a comment on a wiki page.
     *
     * @param {string} project - Project ID or project name
     * @param {string} wikiIdentifier - Wiki ID or name.
     * @param {number} pageId - Wiki page ID.
     * @param {number} id - Comment ID.
     */
    deleteComment'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' pageId'
        NumberKeyword
      Parameter
        Identifier: ' id'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Returns a comment associated with the Wiki Page.
     *
     * @param {string} project - Project ID or project name
     * @param {string} wikiIdentifier - Wiki ID or wiki name.
     * @param {number} pageId - Wiki page ID.
     * @param {number} id - ID of the comment to return.
     * @param {boolean} excludeDeleted - Specify if the deleted comment should be skipped.
     * @param {Comments_Contracts.CommentExpandOptions} expand - Specifies the additional data retrieval options for comments.
     */
    getComment'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' pageId'
        NumberKeyword
      Parameter
        Identifier: ' id'
        NumberKeyword
      Parameter
        Identifier: ' excludeDeleted'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' Comments_Contracts'
            Identifier: 'CommentExpandOptions'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Comments_Contracts'
            Identifier: 'Comment'
    MethodDeclaration
      Identifier: '
    /**
     * Returns a pageable list of comments.
     *
     * @param {string} project - Project ID or project name
     * @param {string} wikiIdentifier - Wiki ID or wiki name.
     * @param {number} pageId - Wiki page ID.
     * @param {number} top - Max number of comments to return.
     * @param {string} continuationToken - Used to query for the next page of comments.
     * @param {boolean} excludeDeleted - Specify if the deleted comments should be skipped.
     * @param {Comments_Contracts.CommentExpandOptions} expand - Specifies the additional data retrieval options for comments.
     * @param {Comments_Contracts.CommentSortOrder} order - Order in which the comments should be returned.
     * @param {number} parentId - CommentId of the parent comment.
     */
    listComments'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' pageId'
        NumberKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' excludeDeleted'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' Comments_Contracts'
            Identifier: 'CommentExpandOptions'
      Parameter
        Identifier: ' order'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' Comments_Contracts'
            Identifier: 'CommentSortOrder'
      Parameter
        Identifier: ' parentId'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Comments_Contracts'
            Identifier: 'CommentList'
    MethodDeclaration
      Identifier: '
    /**
     * Update a comment on a wiki page.
     *
     * @param {Comments_Contracts.CommentUpdateParameters} comment - Comment update request.
     * @param {string} project - Project ID or project name
     * @param {string} wikiIdentifier - Wiki ID or wiki name.
     * @param {number} pageId - Wiki page ID.
     * @param {number} id - Comment ID.
     */
    updateComment'
      Parameter
        Identifier: 'comment'
        TypeReference
          QualifiedName
            Identifier: ' Comments_Contracts'
            Identifier: 'CommentUpdateParameters'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' pageId'
        NumberKeyword
      Parameter
        Identifier: ' id'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Comments_Contracts'
            Identifier: 'Comment'
    MethodDeclaration
      Identifier: '
    /**
     * Gets metadata or content of the wiki page for the provided path. Content negotiation is done based on the `Accept` header sent in the request.
     *
     * @param {string} project - Project ID or project name
     * @param {string} wikiIdentifier - Wiki ID or wiki name.
     * @param {string} path - Wiki page path.
     * @param {GitInterfaces.VersionControlRecursionType} recursionLevel - Recursion level for subpages retrieval. Defaults to `None` (Optional).
     * @param {GitInterfaces.GitVersionDescriptor} versionDescriptor - GitVersionDescriptor for the page. Defaults to the default branch (Optional).
     * @param {boolean} includeContent - True to include the content of the page in the response for Json content type. Defaults to false (Optional)
     */
    getPageText'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' path'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' recursionLevel'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' GitInterfaces'
            Identifier: 'VersionControlRecursionType'
      Parameter
        Identifier: ' versionDescriptor'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' GitInterfaces'
            Identifier: 'GitVersionDescriptor'
      Parameter
        Identifier: ' includeContent'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * Gets metadata or content of the wiki page for the provided path. Content negotiation is done based on the `Accept` header sent in the request.
     *
     * @param {string} project - Project ID or project name
     * @param {string} wikiIdentifier - Wiki ID or wiki name.
     * @param {string} path - Wiki page path.
     * @param {GitInterfaces.VersionControlRecursionType} recursionLevel - Recursion level for subpages retrieval. Defaults to `None` (Optional).
     * @param {GitInterfaces.GitVersionDescriptor} versionDescriptor - GitVersionDescriptor for the page. Defaults to the default branch (Optional).
     * @param {boolean} includeContent - True to include the content of the page in the response for Json content type. Defaults to false (Optional)
     */
    getPageZip'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' path'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' recursionLevel'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' GitInterfaces'
            Identifier: 'VersionControlRecursionType'
      Parameter
        Identifier: ' versionDescriptor'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' GitInterfaces'
            Identifier: 'GitVersionDescriptor'
      Parameter
        Identifier: ' includeContent'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * Gets metadata or content of the wiki page for the provided page id. Content negotiation is done based on the `Accept` header sent in the request.
     *
     * @param {string} project - Project ID or project name
     * @param {string} wikiIdentifier - Wiki ID or wiki name..
     * @param {number} id - Wiki page ID.
     * @param {GitInterfaces.VersionControlRecursionType} recursionLevel - Recursion level for subpages retrieval. Defaults to `None` (Optional).
     * @param {boolean} includeContent - True to include the content of the page in the response for Json content type. Defaults to false (Optional)
     */
    getPageByIdText'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' id'
        NumberKeyword
      Parameter
        Identifier: ' recursionLevel'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' GitInterfaces'
            Identifier: 'VersionControlRecursionType'
      Parameter
        Identifier: ' includeContent'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * Gets metadata or content of the wiki page for the provided page id. Content negotiation is done based on the `Accept` header sent in the request.
     *
     * @param {string} project - Project ID or project name
     * @param {string} wikiIdentifier - Wiki ID or wiki name..
     * @param {number} id - Wiki page ID.
     * @param {GitInterfaces.VersionControlRecursionType} recursionLevel - Recursion level for subpages retrieval. Defaults to `None` (Optional).
     * @param {boolean} includeContent - True to include the content of the page in the response for Json content type. Defaults to false (Optional)
     */
    getPageByIdZip'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' id'
        NumberKeyword
      Parameter
        Identifier: ' recursionLevel'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' GitInterfaces'
            Identifier: 'VersionControlRecursionType'
      Parameter
        Identifier: ' includeContent'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * Returns pageable list of Wiki Pages
     *
     * @param {WikiInterfaces.WikiPagesBatchRequest} pagesBatchRequest - Wiki batch page request.
     * @param {string} project - Project ID or project name
     * @param {string} wikiIdentifier - Wiki ID or wiki name.
     * @param {GitInterfaces.GitVersionDescriptor} versionDescriptor - GitVersionDescriptor for the page. (Optional in case of ProjectWiki).
     */
    getPagesBatch'
      Parameter
        Identifier: 'pagesBatchRequest'
        TypeReference
          QualifiedName
            Identifier: ' WikiInterfaces'
            Identifier: 'WikiPagesBatchRequest'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' versionDescriptor'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' GitInterfaces'
            Identifier: 'GitVersionDescriptor'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'WikiInterfaces'
              Identifier: 'WikiPageDetail'
    MethodDeclaration
      Identifier: '
    /**
     * Returns page detail corresponding to Page ID.
     *
     * @param {string} project - Project ID or project name
     * @param {string} wikiIdentifier - Wiki ID or wiki name.
     * @param {number} pageId - Wiki page ID.
     * @param {number} pageViewsForDays - last N days from the current day for which page views is to be returned. It's inclusive of current day.
     */
    getPageData'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' pageId'
        NumberKeyword
      Parameter
        Identifier: ' pageViewsForDays'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WikiInterfaces'
            Identifier: 'WikiPageDetail'
    MethodDeclaration
      Identifier: '
    /**
     * Creates a new page view stats resource or updates an existing page view stats resource.
     *
     * @param {string} project - Project ID or project name
     * @param {string} wikiIdentifier - Wiki ID or wiki name.
     * @param {GitInterfaces.GitVersionDescriptor} wikiVersion - Wiki version.
     * @param {string} path - Wiki page path.
     * @param {string} oldPath - Old page path. This is optional and required to rename path in existing page view stats.
     */
    createOrUpdatePageViewStats'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' wikiVersion'
        TypeReference
          QualifiedName
            Identifier: ' GitInterfaces'
            Identifier: 'GitVersionDescriptor'
      Parameter
        Identifier: ' path'
        StringKeyword
      Parameter
        Identifier: ' oldPath'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WikiInterfaces'
            Identifier: 'WikiPageViewStats'
    MethodDeclaration
      Identifier: '
    /**
     * Creates the wiki resource.
     *
     * @param {WikiInterfaces.WikiCreateParametersV2} wikiCreateParams - Parameters for the wiki creation.
     * @param {string} project - Project ID or project name
     */
    createWiki'
      Parameter
        Identifier: 'wikiCreateParams'
        TypeReference
          QualifiedName
            Identifier: ' WikiInterfaces'
            Identifier: 'WikiCreateParametersV2'
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WikiInterfaces'
            Identifier: 'WikiV2'
    MethodDeclaration
      Identifier: '
    /**
     * Deletes the wiki corresponding to the wiki ID or wiki name provided.
     *
     * @param {string} wikiIdentifier - Wiki ID or wiki name.
     * @param {string} project - Project ID or project name
     */
    deleteWiki'
      Parameter
        Identifier: 'wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WikiInterfaces'
            Identifier: 'WikiV2'
    MethodDeclaration
      Identifier: '
    /**
     * Gets all wikis in a project or collection.
     *
     * @param {string} project - Project ID or project name
     */
    getAllWikis'
      Parameter
        Identifier: 'project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WikiInterfaces'
              Identifier: 'WikiV2'
    MethodDeclaration
      Identifier: '
    /**
     * Gets the wiki corresponding to the wiki ID or wiki name provided.
     *
     * @param {string} wikiIdentifier - Wiki ID or wiki name.
     * @param {string} project - Project ID or project name
     */
    getWiki'
      Parameter
        Identifier: 'wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WikiInterfaces'
            Identifier: 'WikiV2'
    MethodDeclaration
      Identifier: '
    /**
     * Updates the wiki corresponding to the wiki ID or wiki name provided using the update parameters.
     *
     * @param {WikiInterfaces.WikiUpdateParameters} updateParameters - Update parameters.
     * @param {string} wikiIdentifier - Wiki ID or wiki name.
     * @param {string} project - Project ID or project name
     */
    updateWiki'
      Parameter
        Identifier: 'updateParameters'
        TypeReference
          QualifiedName
            Identifier: ' WikiInterfaces'
            Identifier: 'WikiUpdateParameters'
      Parameter
        Identifier: ' wikiIdentifier'
        StringKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WikiInterfaces'
            Identifier: 'WikiV2'
