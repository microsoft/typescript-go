SourceFile
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' Parser'
          Identifier: ' ParserType'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamespaceImport
        Identifier: ' ParserOptionsTypes'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' Processor'
          Identifier: ' ProcessorType'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' LooseRuleDefinition'
        ImportSpecifier
          Identifier: ' SharedConfigurationSettings'
    StringLiteral
  ModuleDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' SharedConfig'
    ModuleBlock
      TypeAliasDeclaration
        Identifier: ' Severity'
        UnionType
          LiteralType
            NumericLiteral
          LiteralType
            NumericLiteral
          LiteralType
            NumericLiteral
      TypeAliasDeclaration
        Identifier: ' SeverityString'
        UnionType
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
      TypeAliasDeclaration
        Identifier: ' RuleLevel'
        UnionType
          TypeReference
            Identifier: ' Severity'
          TypeReference
            Identifier: ' SeverityString'
      TypeAliasDeclaration
        Identifier: ' RuleLevelAndOptions'
        TupleType
          TypeReference
            Identifier: 'RuleLevel'
          RestType
            ArrayType
              UnknownKeyword
      TypeAliasDeclaration
        Identifier: ' RuleEntry'
        UnionType
          TypeReference
            Identifier: ' RuleLevel'
          TypeReference
            Identifier: ' RuleLevelAndOptions'
      TypeAliasDeclaration
        Identifier: ' RulesRecord'
        TypeReference
          Identifier: ' Partial'
          TypeReference
            Identifier: 'Record'
            StringKeyword
            TypeReference
              Identifier: ' RuleEntry'
      TypeAliasDeclaration
        Identifier: ' GlobalVariableOptionBase'
        UnionType
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
      TypeAliasDeclaration
        Identifier: ' GlobalVariableOptionBoolean'
        UnionType
          LiteralType
            FalseKeyword
          LiteralType
            TrueKeyword
      TypeAliasDeclaration
        Identifier: ' GlobalVariableOption'
        UnionType
          TypeReference
            Identifier: ' GlobalVariableOptionBase'
          TypeReference
            Identifier: ' GlobalVariableOptionBoolean'
      InterfaceDeclaration
        Identifier: ' GlobalsConfig'
        IndexSignature
          Parameter
            Identifier: 'name'
            StringKeyword
          TypeReference
            Identifier: ' GlobalVariableOption'
      InterfaceDeclaration
        Identifier: ' EnvironmentConfig'
        IndexSignature
          Parameter
            Identifier: 'name'
            StringKeyword
          BooleanKeyword
      TypeAliasDeclaration
        Identifier: ' ParserOptions'
        TypeReference
          QualifiedName
            Identifier: ' ParserOptionsTypes'
            Identifier: 'ParserOptions'
      InterfaceDeclaration
        Identifier: ' PluginMeta'
        PropertySignature
          Identifier: '
        /**
         * The meta.name property should match the npm package name for your plugin.
         */
        name'
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * The meta.version property should match the npm package version for your plugin.
         */
        version'
          StringKeyword
  ModuleDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' ClassicConfig'
    ModuleBlock
      TypeAliasDeclaration
        ExportKeyword
        Identifier: ' EnvironmentConfig'
        TypeReference
          QualifiedName
            Identifier: ' SharedConfig'
            Identifier: 'EnvironmentConfig'
      TypeAliasDeclaration
        ExportKeyword
        Identifier: ' GlobalsConfig'
        TypeReference
          QualifiedName
            Identifier: ' SharedConfig'
            Identifier: 'GlobalsConfig'
      TypeAliasDeclaration
        ExportKeyword
        Identifier: ' GlobalVariableOption'
        TypeReference
          QualifiedName
            Identifier: ' SharedConfig'
            Identifier: 'GlobalVariableOption'
      TypeAliasDeclaration
        ExportKeyword
        Identifier: ' GlobalVariableOptionBase'
        TypeReference
          QualifiedName
            Identifier: ' SharedConfig'
            Identifier: 'GlobalVariableOptionBase'
      TypeAliasDeclaration
        ExportKeyword
        Identifier: ' ParserOptions'
        TypeReference
          QualifiedName
            Identifier: ' SharedConfig'
            Identifier: 'ParserOptions'
      TypeAliasDeclaration
        ExportKeyword
        Identifier: ' RuleEntry'
        TypeReference
          QualifiedName
            Identifier: ' SharedConfig'
            Identifier: 'RuleEntry'
      TypeAliasDeclaration
        ExportKeyword
        Identifier: ' RuleLevel'
        TypeReference
          QualifiedName
            Identifier: ' SharedConfig'
            Identifier: 'RuleLevel'
      TypeAliasDeclaration
        ExportKeyword
        Identifier: ' RuleLevelAndOptions'
        TypeReference
          QualifiedName
            Identifier: ' SharedConfig'
            Identifier: 'RuleLevelAndOptions'
      TypeAliasDeclaration
        ExportKeyword
        Identifier: ' RulesRecord'
        TypeReference
          QualifiedName
            Identifier: ' SharedConfig'
            Identifier: 'RulesRecord'
      TypeAliasDeclaration
        ExportKeyword
        Identifier: ' Severity'
        TypeReference
          QualifiedName
            Identifier: ' SharedConfig'
            Identifier: 'Severity'
      TypeAliasDeclaration
        ExportKeyword
        Identifier: ' SeverityString'
        TypeReference
          QualifiedName
            Identifier: ' SharedConfig'
            Identifier: 'SeverityString'
      InterfaceDeclaration
        Identifier: ' BaseConfig'
        PropertySignature
          Identifier: '
        $schema'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * The environment settings.
         */
        env'
          QuestionToken
          TypeReference
            Identifier: ' EnvironmentConfig'
        PropertySignature
          Identifier: '
        /**
         * The path to other config files or the package name of shareable configs.
         */
        extends'
          QuestionToken
          UnionType
            ArrayType
              StringKeyword
            StringKeyword
        PropertySignature
          Identifier: '
        /**
         * The global variable settings.
         */
        globals'
          QuestionToken
          TypeReference
            Identifier: ' GlobalsConfig'
        PropertySignature
          Identifier: '
        /**
         * The flag that disables directive comments.
         */
        noInlineConfig'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        /**
         * The override settings per kind of files.
         */
        overrides'
          QuestionToken
          ArrayType
            TypeReference
              Identifier: ' ConfigOverride'
        PropertySignature
          Identifier: '
        /**
         * The path to a parser or the package name of a parser.
         */
        parser'
          QuestionToken
          UnionType
            StringKeyword
            LiteralType
              NullKeyword
        PropertySignature
          Identifier: '
        /**
         * The parser options.
         */
        parserOptions'
          QuestionToken
          TypeReference
            Identifier: ' ParserOptions'
        PropertySignature
          Identifier: '
        /**
         * The plugin specifiers.
         */
        plugins'
          QuestionToken
          ArrayType
            StringKeyword
        PropertySignature
          Identifier: '
        /**
         * The processor specifier.
         */
        processor'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * The flag to report unused `eslint-disable` comments.
         */
        reportUnusedDisableDirectives'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        /**
         * The rule settings.
         */
        rules'
          QuestionToken
          TypeReference
            Identifier: ' RulesRecord'
        PropertySignature
          Identifier: '
        /**
         * The shared settings.
         */
        settings'
          QuestionToken
          TypeReference
            Identifier: ' SharedConfigurationSettings'
      InterfaceDeclaration
        ExportKeyword
        Identifier: ' ConfigOverride'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' BaseConfig'
        PropertySignature
          Identifier: '
        excludedFiles'
          QuestionToken
          UnionType
            ArrayType
              StringKeyword
            StringKeyword
        PropertySignature
          Identifier: '
        files'
          UnionType
            ArrayType
              StringKeyword
            StringKeyword
      InterfaceDeclaration
        ExportKeyword
        Identifier: ' Config'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' BaseConfig'
        PropertySignature
          Identifier: '
        /**
         * The glob patterns that ignore to lint.
         */
        ignorePatterns'
          QuestionToken
          UnionType
            ArrayType
              StringKeyword
            StringKeyword
        PropertySignature
          Identifier: '
        /**
         * The root flag.
         */
        root'
          QuestionToken
          BooleanKeyword
      ExportDeclaration
        NamedExports
  ModuleDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' FlatConfig'
    ModuleBlock
      TypeAliasDeclaration
        Identifier: ' EcmaVersion'
        TypeReference
          QualifiedName
            Identifier: ' ParserOptionsTypes'
            Identifier: 'EcmaVersion'
      TypeAliasDeclaration
        Identifier: ' GlobalsConfig'
        TypeReference
          QualifiedName
            Identifier: ' SharedConfig'
            Identifier: 'GlobalsConfig'
      TypeAliasDeclaration
        Identifier: ' Parser'
        TypeReference
          QualifiedName
            Identifier: ' ParserType'
            Identifier: 'LooseParserModule'
      TypeAliasDeclaration
        Identifier: ' ParserOptions'
        TypeReference
          QualifiedName
            Identifier: ' SharedConfig'
            Identifier: 'ParserOptions'
      TypeAliasDeclaration
        Identifier: ' PluginMeta'
        TypeReference
          QualifiedName
            Identifier: ' SharedConfig'
            Identifier: 'PluginMeta'
      TypeAliasDeclaration
        Identifier: ' Processor'
        TypeReference
          QualifiedName
            Identifier: ' ProcessorType'
            Identifier: 'LooseProcessorModule'
      TypeAliasDeclaration
        Identifier: ' RuleEntry'
        TypeReference
          QualifiedName
            Identifier: ' SharedConfig'
            Identifier: 'RuleEntry'
      TypeAliasDeclaration
        Identifier: ' RuleLevel'
        TypeReference
          QualifiedName
            Identifier: ' SharedConfig'
            Identifier: 'RuleLevel'
      TypeAliasDeclaration
        Identifier: ' RuleLevelAndOptions'
        TypeReference
          QualifiedName
            Identifier: ' SharedConfig'
            Identifier: 'RuleLevelAndOptions'
      TypeAliasDeclaration
        Identifier: ' Rules'
        TypeReference
          QualifiedName
            Identifier: ' SharedConfig'
            Identifier: 'RulesRecord'
      TypeAliasDeclaration
        Identifier: ' Settings'
        TypeReference
          Identifier: ' SharedConfigurationSettings'
      TypeAliasDeclaration
        Identifier: ' Severity'
        TypeReference
          QualifiedName
            Identifier: ' SharedConfig'
            Identifier: 'Severity'
      TypeAliasDeclaration
        Identifier: ' SeverityString'
        TypeReference
          QualifiedName
            Identifier: ' SharedConfig'
            Identifier: 'SeverityString'
      TypeAliasDeclaration
        Identifier: ' SourceType'
        UnionType
          LiteralType
            StringLiteral
          TypeReference
            QualifiedName
              Identifier: ' ParserOptionsTypes'
              Identifier: 'SourceType'
      InterfaceDeclaration
        Identifier: ' SharedConfigs'
        IndexSignature
          Parameter
            Identifier: 'key'
            StringKeyword
          TypeReference
            Identifier: ' Config'
      InterfaceDeclaration
        Identifier: ' Plugin'
        PropertySignature
          Identifier: '
        /**
         * Shared configurations bundled with the plugin.
         * Users will reference these directly in their config (i.e. `plugin.configs.recommended`).
         */
        configs'
          QuestionToken
          TypeReference
            Identifier: ' SharedConfigs'
        PropertySignature
          Identifier: '
        /**
         * Metadata about your plugin for easier debugging and more effective caching of plugins.
         */
        meta'
          QuestionToken
          MappedType
            TypeParameter
              Identifier: 'K'
              TypeOperator
                TypeReference
                  Identifier: ' PluginMeta'
            QuestionToken
            UnionType
              IndexedAccessType
                TypeReference
                  Identifier: ' PluginMeta'
                TypeReference
                  Identifier: 'K'
              UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * The definition of plugin processors.
         * Users can stringly reference the processor using the key in their config (i.e., `"pluginName/processorName"`).
         */
        processors'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' Partial'
              TypeReference
                Identifier: 'Record'
                StringKeyword
                TypeReference
                  Identifier: ' Processor'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * The definition of plugin rules.
         * The key must be the name of the rule that users will use
         * Users can stringly reference the rule using the key they registered the plugin under combined with the rule name.
         * i.e. for the user config `plugins: { foo: pluginReference }` - the reference would be `"foo/ruleName"`.
         */
        rules'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' Record'
              StringKeyword
              TypeReference
                Identifier: ' LooseRuleDefinition'
            UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' Plugins'
        IndexSignature
          Parameter
            Identifier: 'pluginAlias'
            StringKeyword
          TypeReference
            Identifier: ' Omit'
            TypeReference
              Identifier: 'Plugin'
            LiteralType
              StringLiteral
      InterfaceDeclaration
        Identifier: ' LinterOptions'
        PropertySignature
          Identifier: '
        /**
         * A Boolean value indicating if inline configuration is allowed.
         */
        noInlineConfig'
          QuestionToken
          BooleanKeyword
        PropertySignature
          Identifier: '
        /**
         * A severity string indicating if and how unused disable and enable
         * directives should be tracked and reported. For legacy compatibility, `true`
         * is equivalent to `"warn"` and `false` is equivalent to `"off"`.
         * @default "off"
         */
        reportUnusedDisableDirectives'
          QuestionToken
          UnionType
            TypeReference
              QualifiedName
                Identifier: ' SharedConfig'
                Identifier: 'Severity'
            TypeReference
              QualifiedName
                Identifier: ' SharedConfig'
                Identifier: 'SeverityString'
            BooleanKeyword
      InterfaceDeclaration
        Identifier: ' LanguageOptions'
        PropertySignature
          Identifier: '
        /**
         * The version of ECMAScript to support.
         * May be any year (i.e., `2022`) or version (i.e., `5`).
         * Set to `"latest"` for the most recent supported version.
         * @default "latest"
         */
        ecmaVersion'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' EcmaVersion'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * An object specifying additional objects that should be added to the global scope during linting.
         */
        globals'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' GlobalsConfig'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * An object containing a `parse()` method or a `parseForESLint()` method.
         * @default
         * ```
         * // https://github.com/eslint/espree
         * require('espree')
         * ```
         */
        parser'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' Parser'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * An object specifying additional options that are passed directly to the parser.
         * The available options are parser-dependent.
         */
        parserOptions'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' ParserOptions'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * The type of JavaScript source code.
         * Possible values are `"script"` for traditional script files, `"module"` for ECMAScript modules (ESM), and `"commonjs"` for CommonJS files.
         * @default
         * ```
         * // for `.js` and `.mjs` files
         * "module"
         * // for `.cjs` files
         * "commonjs"
         * ```
         */
        sourceType'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' SourceType'
            UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' Config'
        PropertySignature
          Identifier: '
        /**
         * An array of glob patterns indicating the files that the configuration object should apply to.
         * If not specified, the configuration object applies to all files matched by any other configuration object.
         */
        files'
          QuestionToken
          ArrayType
            ParenthesizedType
              UnionType
                ArrayType
                  StringKeyword
                StringKeyword
        PropertySignature
          Identifier: '
        /**
         * An array of glob patterns indicating the files that the configuration object should not apply to.
         * If not specified, the configuration object applies to all files matched by files.
         */
        ignores'
          QuestionToken
          ArrayType
            StringKeyword
        PropertySignature
          Identifier: '
        /**
         * An object containing settings related to how JavaScript is configured for linting.
         */
        languageOptions'
          QuestionToken
          TypeReference
            Identifier: ' LanguageOptions'
        PropertySignature
          Identifier: '
        /**
         * An object containing settings related to the linting process.
         */
        linterOptions'
          QuestionToken
          TypeReference
            Identifier: ' LinterOptions'
        PropertySignature
          Identifier: '
        /**
         * An string to identify the configuration object. Used in error messages and inspection tools.
         */
        name'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * An object containing a name-value mapping of plugin names to plugin objects.
         * When `files` is specified, these plugins are only available to the matching files.
         */
        plugins'
          QuestionToken
          TypeReference
            Identifier: ' Plugins'
        PropertySignature
          Identifier: '
        /**
         * Either an object containing `preprocess()` and `postprocess()` methods or
         * a string indicating the name of a processor inside of a plugin
         * (i.e., `"pluginName/processorName"`).
         */
        processor'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' Processor'
            StringKeyword
        PropertySignature
          Identifier: '
        /**
         * An object containing the configured rules.
         * When `files` or `ignores` are specified, these rule configurations are only available to the matching files.
         */
        rules'
          QuestionToken
          TypeReference
            Identifier: ' Rules'
        PropertySignature
          Identifier: '
        /**
         * An object containing name-value pairs of information that should be available to all rules.
         */
        settings'
          QuestionToken
          TypeReference
            Identifier: ' Settings'
      TypeAliasDeclaration
        Identifier: ' ConfigArray'
        ArrayType
          TypeReference
            Identifier: ' Config'
      TypeAliasDeclaration
        Identifier: ' ConfigPromise'
        TypeReference
          Identifier: ' Promise'
          TypeReference
            Identifier: 'ConfigArray'
      TypeAliasDeclaration
        Identifier: ' ConfigFile'
        UnionType
          TypeReference
            Identifier: ' ConfigArray'
          TypeReference
            Identifier: ' ConfigPromise'
