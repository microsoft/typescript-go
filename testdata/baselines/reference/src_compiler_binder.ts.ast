SourceFile
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: '
    __String'
        ImportSpecifier
          Identifier: '
    AccessExpression'
        ImportSpecifier
          Identifier: '
    addRelatedInfo'
        ImportSpecifier
          Identifier: '
    append'
        ImportSpecifier
          Identifier: '
    appendIfUnique'
        ImportSpecifier
          Identifier: '
    ArrayBindingElement'
        ImportSpecifier
          Identifier: '
    ArrayLiteralExpression'
        ImportSpecifier
          Identifier: '
    ArrowFunction'
        ImportSpecifier
          Identifier: '
    AssignmentDeclarationKind'
        ImportSpecifier
          Identifier: '
    BinaryExpression'
        ImportSpecifier
          Identifier: '
    BinaryOperatorToken'
        ImportSpecifier
          Identifier: '
    BindableAccessExpression'
        ImportSpecifier
          Identifier: '
    BindableObjectDefinePropertyCall'
        ImportSpecifier
          Identifier: '
    BindablePropertyAssignmentExpression'
        ImportSpecifier
          Identifier: '
    BindableStaticAccessExpression'
        ImportSpecifier
          Identifier: '
    BindableStaticNameExpression'
        ImportSpecifier
          Identifier: '
    BindableStaticPropertyAssignmentExpression'
        ImportSpecifier
          Identifier: '
    BindingElement'
        ImportSpecifier
          Identifier: '
    Block'
        ImportSpecifier
          Identifier: '
    BreakOrContinueStatement'
        ImportSpecifier
          Identifier: '
    CallChain'
        ImportSpecifier
          Identifier: '
    CallExpression'
        ImportSpecifier
          Identifier: '
    canHaveLocals'
        ImportSpecifier
          Identifier: '
    canHaveSymbol'
        ImportSpecifier
          Identifier: '
    CaseBlock'
        ImportSpecifier
          Identifier: '
    CaseClause'
        ImportSpecifier
          Identifier: '
    cast'
        ImportSpecifier
          Identifier: '
    CatchClause'
        ImportSpecifier
          Identifier: '
    ClassLikeDeclaration'
        ImportSpecifier
          Identifier: '
    ClassStaticBlockDeclaration'
        ImportSpecifier
          Identifier: '
    CompilerOptions'
        ImportSpecifier
          Identifier: '
    concatenate'
        ImportSpecifier
          Identifier: '
    ConditionalExpression'
        ImportSpecifier
          Identifier: '
    ConditionalTypeNode'
        ImportSpecifier
          Identifier: '
    contains'
        ImportSpecifier
          Identifier: '
    createBinaryExpressionTrampoline'
        ImportSpecifier
          Identifier: '
    createDiagnosticForNodeInSourceFile'
        ImportSpecifier
          Identifier: '
    createFileDiagnostic'
        ImportSpecifier
          Identifier: '
    createQueue'
        ImportSpecifier
          Identifier: '
    createSymbolTable'
        ImportSpecifier
          Identifier: '
    Debug'
        ImportSpecifier
          Identifier: '
    Declaration'
        ImportSpecifier
          Identifier: '
    declarationNameToString'
        ImportSpecifier
          Identifier: '
    DeleteExpression'
        ImportSpecifier
          Identifier: '
    DestructuringAssignment'
        ImportSpecifier
          Identifier: '
    DiagnosticArguments'
        ImportSpecifier
          Identifier: '
    DiagnosticCategory'
        ImportSpecifier
          Identifier: '
    DiagnosticMessage'
        ImportSpecifier
          Identifier: '
    DiagnosticRelatedInformation'
        ImportSpecifier
          Identifier: '
    Diagnostics'
        ImportSpecifier
          Identifier: '
    DiagnosticWithLocation'
        ImportSpecifier
          Identifier: '
    DoStatement'
        ImportSpecifier
          Identifier: '
    DynamicNamedDeclaration'
        ImportSpecifier
          Identifier: '
    ElementAccessChain'
        ImportSpecifier
          Identifier: '
    ElementAccessExpression'
        ImportSpecifier
          Identifier: '
    EntityNameExpression'
        ImportSpecifier
          Identifier: '
    EnumDeclaration'
        ImportSpecifier
          Identifier: '
    escapeLeadingUnderscores'
        ImportSpecifier
          Identifier: '
    every'
        ImportSpecifier
          Identifier: '
    ExportAssignment'
        ImportSpecifier
          Identifier: '
    exportAssignmentIsAlias'
        ImportSpecifier
          Identifier: '
    ExportDeclaration'
        ImportSpecifier
          Identifier: '
    ExportSpecifier'
        ImportSpecifier
          Identifier: '
    Expression'
        ImportSpecifier
          Identifier: '
    ExpressionStatement'
        ImportSpecifier
          Identifier: '
    findAncestor'
        ImportSpecifier
          Identifier: '
    FlowArrayMutation'
        ImportSpecifier
          Identifier: '
    FlowAssignment'
        ImportSpecifier
          Identifier: '
    FlowCall'
        ImportSpecifier
          Identifier: '
    FlowCondition'
        ImportSpecifier
          Identifier: '
    FlowFlags'
        ImportSpecifier
          Identifier: '
    FlowLabel'
        ImportSpecifier
          Identifier: '
    FlowNode'
        ImportSpecifier
          Identifier: '
    FlowReduceLabel'
        ImportSpecifier
          Identifier: '
    FlowSwitchClause'
        ImportSpecifier
          Identifier: '
    forEach'
        ImportSpecifier
          Identifier: '
    forEachChild'
        ImportSpecifier
          Identifier: '
    ForInOrOfStatement'
        ImportSpecifier
          Identifier: '
    ForStatement'
        ImportSpecifier
          Identifier: '
    FunctionDeclaration'
        ImportSpecifier
          Identifier: '
    FunctionExpression'
        ImportSpecifier
          Identifier: '
    FunctionLikeDeclaration'
        ImportSpecifier
          Identifier: '
    GetAccessorDeclaration'
        ImportSpecifier
          Identifier: '
    getAssignedExpandoInitializer'
        ImportSpecifier
          Identifier: '
    getAssignmentDeclarationKind'
        ImportSpecifier
          Identifier: '
    getAssignmentDeclarationPropertyAccessKind'
        ImportSpecifier
          Identifier: '
    getCombinedModifierFlags'
        ImportSpecifier
          Identifier: '
    getCombinedNodeFlags'
        ImportSpecifier
          Identifier: '
    getContainingClass'
        ImportSpecifier
          Identifier: '
    getEffectiveContainerForJSDocTemplateTag'
        ImportSpecifier
          Identifier: '
    getElementOrPropertyAccessName'
        ImportSpecifier
          Identifier: '
    getEmitScriptTarget'
        ImportSpecifier
          Identifier: '
    getEnclosingBlockScopeContainer'
        ImportSpecifier
          Identifier: '
    getEnclosingContainer'
        ImportSpecifier
          Identifier: '
    getErrorSpanForNode'
        ImportSpecifier
          Identifier: '
    getEscapedTextOfIdentifierOrLiteral'
        ImportSpecifier
          Identifier: '
    getEscapedTextOfJsxNamespacedName'
        ImportSpecifier
          Identifier: '
    getExpandoInitializer'
        ImportSpecifier
          Identifier: '
    getHostSignatureFromJSDoc'
        ImportSpecifier
          Identifier: '
    getImmediatelyInvokedFunctionExpression'
        ImportSpecifier
          Identifier: '
    getJSDocHost'
        ImportSpecifier
          Identifier: '
    getJSDocTypeTag'
        ImportSpecifier
          Identifier: '
    getLeftmostAccessExpression'
        ImportSpecifier
          Identifier: '
    getNameOfDeclaration'
        ImportSpecifier
          Identifier: '
    getNameOrArgument'
        ImportSpecifier
          Identifier: '
    getNodeId'
        ImportSpecifier
          Identifier: '
    getRangesWhere'
        ImportSpecifier
          Identifier: '
    getRightMostAssignedExpression'
        ImportSpecifier
          Identifier: '
    getSourceFileOfNode'
        ImportSpecifier
          Identifier: '
    getSourceTextOfNodeFromSourceFile'
        ImportSpecifier
          Identifier: '
    getSpanOfTokenAtPosition'
        ImportSpecifier
          Identifier: '
    getStrictOptionValue'
        ImportSpecifier
          Identifier: '
    getSymbolNameForPrivateIdentifier'
        ImportSpecifier
          Identifier: '
    getTextOfIdentifierOrLiteral'
        ImportSpecifier
          Identifier: '
    getThisContainer'
        ImportSpecifier
          Identifier: '
    getTokenPosOfNode'
        ImportSpecifier
          Identifier: '
    HasContainerFlags'
        ImportSpecifier
          Identifier: '
    hasDynamicName'
        ImportSpecifier
          Identifier: '
    HasFlowNode'
        ImportSpecifier
          Identifier: '
    hasJSDocNodes'
        ImportSpecifier
          Identifier: '
    HasLocals'
        ImportSpecifier
          Identifier: '
    hasSyntacticModifier'
        ImportSpecifier
          Identifier: '
    Identifier'
        ImportSpecifier
          Identifier: '
    identifierToKeywordKind'
        ImportSpecifier
          Identifier: '
    idText'
        ImportSpecifier
          Identifier: '
    IfStatement'
        ImportSpecifier
          Identifier: '
    ImportClause'
        ImportSpecifier
          Identifier: '
    InternalSymbolName'
        ImportSpecifier
          Identifier: '
    isAliasableExpression'
        ImportSpecifier
          Identifier: '
    isAmbientModule'
        ImportSpecifier
          Identifier: '
    isAssignmentExpression'
        ImportSpecifier
          Identifier: '
    isAssignmentOperator'
        ImportSpecifier
          Identifier: '
    isAssignmentTarget'
        ImportSpecifier
          Identifier: '
    isAsyncFunction'
        ImportSpecifier
          Identifier: '
    isAutoAccessorPropertyDeclaration'
        ImportSpecifier
          Identifier: '
    isBinaryExpression'
        ImportSpecifier
          Identifier: '
    isBindableObjectDefinePropertyCall'
        ImportSpecifier
          Identifier: '
    isBindableStaticAccessExpression'
        ImportSpecifier
          Identifier: '
    isBindableStaticNameExpression'
        ImportSpecifier
          Identifier: '
    isBindingPattern'
        ImportSpecifier
          Identifier: '
    isBlock'
        ImportSpecifier
          Identifier: '
    isBlockOrCatchScoped'
        ImportSpecifier
          Identifier: '
    IsBlockScopedContainer'
        ImportSpecifier
          Identifier: '
    isBooleanLiteral'
        ImportSpecifier
          Identifier: '
    isCallExpression'
        ImportSpecifier
          Identifier: '
    isClassStaticBlockDeclaration'
        ImportSpecifier
          Identifier: '
    isConditionalTypeNode'
        ImportSpecifier
          Identifier: '
    IsContainer'
        ImportSpecifier
          Identifier: '
    isDeclaration'
        ImportSpecifier
          Identifier: '
    isDeclarationStatement'
        ImportSpecifier
          Identifier: '
    isDestructuringAssignment'
        ImportSpecifier
          Identifier: '
    isDottedName'
        ImportSpecifier
          Identifier: '
    isEmptyObjectLiteral'
        ImportSpecifier
          Identifier: '
    isEntityNameExpression'
        ImportSpecifier
          Identifier: '
    isEnumConst'
        ImportSpecifier
          Identifier: '
    isExportAssignment'
        ImportSpecifier
          Identifier: '
    isExportDeclaration'
        ImportSpecifier
          Identifier: '
    isExportsIdentifier'
        ImportSpecifier
          Identifier: '
    isExportSpecifier'
        ImportSpecifier
          Identifier: '
    isExpression'
        ImportSpecifier
          Identifier: '
    isExpressionOfOptionalChainRoot'
        ImportSpecifier
          Identifier: '
    isExternalModule'
        ImportSpecifier
          Identifier: '
    isExternalOrCommonJsModule'
        ImportSpecifier
          Identifier: '
    isForInOrOfStatement'
        ImportSpecifier
          Identifier: '
    isFunctionDeclaration'
        ImportSpecifier
          Identifier: '
    isFunctionLike'
        ImportSpecifier
          Identifier: '
    isFunctionLikeDeclaration'
        ImportSpecifier
          Identifier: '
    isFunctionLikeOrClassStaticBlockDeclaration'
        ImportSpecifier
          Identifier: '
    isFunctionSymbol'
        ImportSpecifier
          Identifier: '
    isGlobalScopeAugmentation'
        ImportSpecifier
          Identifier: '
    isIdentifier'
        ImportSpecifier
          Identifier: '
    isIdentifierName'
        ImportSpecifier
          Identifier: '
    isInJSFile'
        ImportSpecifier
          Identifier: '
    isInTopLevelContext'
        ImportSpecifier
          Identifier: '
    isJSDocConstructSignature'
        ImportSpecifier
          Identifier: '
    isJSDocEnumTag'
        ImportSpecifier
          Identifier: '
    isJSDocTemplateTag'
        ImportSpecifier
          Identifier: '
    isJSDocTypeAlias'
        ImportSpecifier
          Identifier: '
    isJSDocTypeAssertion'
        ImportSpecifier
          Identifier: '
    isJsonSourceFile'
        ImportSpecifier
          Identifier: '
    isJsxNamespacedName'
        ImportSpecifier
          Identifier: '
    isLeftHandSideExpression'
        ImportSpecifier
          Identifier: '
    isLogicalOrCoalescingAssignmentExpression'
        ImportSpecifier
          Identifier: '
    isLogicalOrCoalescingAssignmentOperator'
        ImportSpecifier
          Identifier: '
    isLogicalOrCoalescingBinaryExpression'
        ImportSpecifier
          Identifier: '
    isLogicalOrCoalescingBinaryOperator'
        ImportSpecifier
          Identifier: '
    isModuleAugmentationExternal'
        ImportSpecifier
          Identifier: '
    isModuleBlock'
        ImportSpecifier
          Identifier: '
    isModuleDeclaration'
        ImportSpecifier
          Identifier: '
    isModuleExportsAccessExpression'
        ImportSpecifier
          Identifier: '
    isNamedDeclaration'
        ImportSpecifier
          Identifier: '
    isNamespaceExport'
        ImportSpecifier
          Identifier: '
    isNullishCoalesce'
        ImportSpecifier
          Identifier: '
    isObjectLiteralExpression'
        ImportSpecifier
          Identifier: '
    isObjectLiteralMethod'
        ImportSpecifier
          Identifier: '
    isObjectLiteralOrClassExpressionMethodOrAccessor'
        ImportSpecifier
          Identifier: '
    isOmittedExpression'
        ImportSpecifier
          Identifier: '
    isOptionalChain'
        ImportSpecifier
          Identifier: '
    isOptionalChainRoot'
        ImportSpecifier
          Identifier: '
    isOutermostOptionalChain'
        ImportSpecifier
          Identifier: '
    isParameterPropertyDeclaration'
        ImportSpecifier
          Identifier: '
    isParenthesizedExpression'
        ImportSpecifier
          Identifier: '
    isPartOfParameterDeclaration'
        ImportSpecifier
          Identifier: '
    isPartOfTypeQuery'
        ImportSpecifier
          Identifier: '
    isPrefixUnaryExpression'
        ImportSpecifier
          Identifier: '
    isPrivateIdentifier'
        ImportSpecifier
          Identifier: '
    isPrologueDirective'
        ImportSpecifier
          Identifier: '
    isPropertyAccessEntityNameExpression'
        ImportSpecifier
          Identifier: '
    isPropertyAccessExpression'
        ImportSpecifier
          Identifier: '
    isPropertyNameLiteral'
        ImportSpecifier
          Identifier: '
    isPrototypeAccess'
        ImportSpecifier
          Identifier: '
    isPushOrUnshiftIdentifier'
        ImportSpecifier
          Identifier: '
    isRequireCall'
        ImportSpecifier
          Identifier: '
    isShorthandPropertyAssignment'
        ImportSpecifier
          Identifier: '
    isSignedNumericLiteral'
        ImportSpecifier
          Identifier: '
    isSourceFile'
        ImportSpecifier
          Identifier: '
    isSpecialPropertyDeclaration'
        ImportSpecifier
          Identifier: '
    isStatement'
        ImportSpecifier
          Identifier: '
    isStatementButNotDeclaration'
        ImportSpecifier
          Identifier: '
    isStatic'
        ImportSpecifier
          Identifier: '
    isString'
        ImportSpecifier
          Identifier: '
    isStringLiteralLike'
        ImportSpecifier
          Identifier: '
    isStringOrNumericLiteralLike'
        ImportSpecifier
          Identifier: '
    isThisInitializedDeclaration'
        ImportSpecifier
          Identifier: '
    isTypeAliasDeclaration'
        ImportSpecifier
          Identifier: '
    isTypeOfExpression'
        ImportSpecifier
          Identifier: '
    isVariableDeclaration'
        ImportSpecifier
          Identifier: '
    isVariableDeclarationInitializedToBareOrAccessedRequire'
        ImportSpecifier
          Identifier: '
    isVariableStatement'
        ImportSpecifier
          Identifier: '
    JSDocCallbackTag'
        ImportSpecifier
          Identifier: '
    JSDocClassTag'
        ImportSpecifier
          Identifier: '
    JSDocEnumTag'
        ImportSpecifier
          Identifier: '
    JSDocFunctionType'
        ImportSpecifier
          Identifier: '
    JSDocImportTag'
        ImportSpecifier
          Identifier: '
    JSDocOverloadTag'
        ImportSpecifier
          Identifier: '
    JSDocParameterTag'
        ImportSpecifier
          Identifier: '
    JSDocPropertyLikeTag'
        ImportSpecifier
          Identifier: '
    JSDocSignature'
        ImportSpecifier
          Identifier: '
    JSDocTypedefTag'
        ImportSpecifier
          Identifier: '
    JSDocTypeLiteral'
        ImportSpecifier
          Identifier: '
    JsxAttribute'
        ImportSpecifier
          Identifier: '
    JsxAttributes'
        ImportSpecifier
          Identifier: '
    LabeledStatement'
        ImportSpecifier
          Identifier: '
    length'
        ImportSpecifier
          Identifier: '
    LiteralLikeElementAccessExpression'
        ImportSpecifier
          Identifier: '
    MappedTypeNode'
        ImportSpecifier
          Identifier: '
    MetaProperty'
        ImportSpecifier
          Identifier: '
    MethodDeclaration'
        ImportSpecifier
          Identifier: '
    ModifierFlags'
        ImportSpecifier
          Identifier: '
    ModuleBlock'
        ImportSpecifier
          Identifier: '
    ModuleDeclaration'
        ImportSpecifier
          Identifier: '
    moduleExportNameIsDefault'
        ImportSpecifier
          Identifier: '
    Mutable'
        ImportSpecifier
          Identifier: '
    NamespaceExportDeclaration'
        ImportSpecifier
          Identifier: '
    Node'
        ImportSpecifier
          Identifier: '
    NodeArray'
        ImportSpecifier
          Identifier: '
    NodeFlags'
        ImportSpecifier
          Identifier: '
    nodeHasName'
        ImportSpecifier
          Identifier: '
    nodeIsMissing'
        ImportSpecifier
          Identifier: '
    nodeIsPresent'
        ImportSpecifier
          Identifier: '
    NonNullChain'
        ImportSpecifier
          Identifier: '
    NonNullExpression'
        ImportSpecifier
          Identifier: '
    objectAllocator'
        ImportSpecifier
          Identifier: '
    ObjectLiteralExpression'
        ImportSpecifier
          Identifier: '
    OptionalChain'
        ImportSpecifier
          Identifier: '
    ParameterDeclaration'
        ImportSpecifier
          Identifier: '
    ParenthesizedExpression'
        ImportSpecifier
          Identifier: '
    Pattern'
        ImportSpecifier
          Identifier: '
    PatternAmbientModule'
        ImportSpecifier
          Identifier: '
    PostfixUnaryExpression'
        ImportSpecifier
          Identifier: '
    PrefixUnaryExpression'
        ImportSpecifier
          Identifier: '
    PrivateIdentifier'
        ImportSpecifier
          Identifier: '
    PropertyAccessChain'
        ImportSpecifier
          Identifier: '
    PropertyAccessEntityNameExpression'
        ImportSpecifier
          Identifier: '
    PropertyAccessExpression'
        ImportSpecifier
          Identifier: '
    PropertyDeclaration'
        ImportSpecifier
          Identifier: '
    PropertySignature'
        ImportSpecifier
          Identifier: '
    QualifiedName'
        ImportSpecifier
          Identifier: '
    removeFileExtension'
        ImportSpecifier
          Identifier: '
    ReturnStatement'
        ImportSpecifier
          Identifier: '
    ScriptTarget'
        ImportSpecifier
          Identifier: '
    SetAccessorDeclaration'
        ImportSpecifier
          Identifier: '
    setParent'
        ImportSpecifier
          Identifier: '
    setParentRecursive'
        ImportSpecifier
          Identifier: '
    setValueDeclaration'
        ImportSpecifier
          Identifier: '
    ShorthandPropertyAssignment'
        ImportSpecifier
          Identifier: '
    shouldPreserveConstEnums'
        ImportSpecifier
          Identifier: '
    SignatureDeclaration'
        ImportSpecifier
          Identifier: '
    skipParentheses'
        ImportSpecifier
          Identifier: '
    sliceAfter'
        ImportSpecifier
          Identifier: '
    some'
        ImportSpecifier
          Identifier: '
    SourceFile'
        ImportSpecifier
          Identifier: '
    SpreadElement'
        ImportSpecifier
          Identifier: '
    Statement'
        ImportSpecifier
          Identifier: '
    StringLiteral'
        ImportSpecifier
          Identifier: '
    SuperExpression'
        ImportSpecifier
          Identifier: '
    SwitchStatement'
        ImportSpecifier
          Identifier: '
    Symbol'
        ImportSpecifier
          Identifier: '
    SymbolFlags'
        ImportSpecifier
          Identifier: '
    symbolName'
        ImportSpecifier
          Identifier: '
    SymbolTable'
        ImportSpecifier
          Identifier: '
    SyntaxKind'
        ImportSpecifier
          Identifier: '
    TextRange'
        ImportSpecifier
          Identifier: '
    ThisExpression'
        ImportSpecifier
          Identifier: '
    ThrowStatement'
        ImportSpecifier
          Identifier: '
    tokenToString'
        ImportSpecifier
          Identifier: '
    tracing'
        ImportSpecifier
          Identifier: '
    TracingNode'
        ImportSpecifier
          Identifier: '
    tryCast'
        ImportSpecifier
          Identifier: '
    tryParsePattern'
        ImportSpecifier
          Identifier: '
    TryStatement'
        ImportSpecifier
          Identifier: '
    TypeLiteralNode'
        ImportSpecifier
          Identifier: '
    TypeOfExpression'
        ImportSpecifier
          Identifier: '
    TypeParameterDeclaration'
        ImportSpecifier
          Identifier: '
    unescapeLeadingUnderscores'
        ImportSpecifier
          Identifier: '
    unreachableCodeIsError'
        ImportSpecifier
          Identifier: '
    unusedLabelIsError'
        ImportSpecifier
          Identifier: '
    VariableDeclaration'
        ImportSpecifier
          Identifier: '
    WhileStatement'
        ImportSpecifier
          Identifier: '
    WithStatement'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamespaceImport
        Identifier: ' performance'
    StringLiteral
  EnumDeclaration
    ExportKeyword
    ConstKeyword
    Identifier: ' ModuleInstanceState'
    EnumMember
      Identifier: '
    NonInstantiated'
      NumericLiteral
    EnumMember
      Identifier: '
    Instantiated'
      NumericLiteral
    EnumMember
      Identifier: '
    ConstEnumOnly'
      NumericLiteral
  InterfaceDeclaration
    Identifier: ' ActiveLabel'
    PropertySignature
      Identifier: '
    next'
      UnionType
        TypeReference
          Identifier: ' ActiveLabel'
        UndefinedKeyword
    PropertySignature
      Identifier: '
    name'
      TypeReference
        Identifier: ' __String'
    PropertySignature
      Identifier: '
    breakTarget'
      TypeReference
        Identifier: ' FlowLabel'
    PropertySignature
      Identifier: '
    continueTarget'
      UnionType
        TypeReference
          Identifier: ' FlowLabel'
        UndefinedKeyword
    PropertySignature
      Identifier: '
    referenced'
      BooleanKeyword
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getModuleInstanceState'
    Parameter
      Identifier: 'node'
      TypeReference
        Identifier: ' ModuleDeclaration'
    Parameter
      Identifier: ' visited'
      QuestionToken
      TypeReference
        Identifier: ' Map'
        NumberKeyword
        UnionType
          TypeReference
            Identifier: ' ModuleInstanceState'
          UndefinedKeyword
    TypeReference
      Identifier: ' ModuleInstanceState'
    Block
      IfStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: 'node'
            Identifier: 'body'
          AmpersandAmpersandToken
          PrefixUnaryExpression
            PropertyAccessExpression
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'body'
              Identifier: 'parent'
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        // getModuleInstanceStateForAliasTarget needs to walk up the parent chain, so parent pointers must be set on this tree already
        setParent'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'body'
              Identifier: ' node'
          ExpressionStatement
            CallExpression
              Identifier: '
        setParentRecursive'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'body'
              FalseKeyword
      ReturnStatement
        ConditionalExpression
          PropertyAccessExpression
            Identifier: ' node'
            Identifier: 'body'
          QuestionToken
          CallExpression
            Identifier: ' getModuleInstanceStateCached'
            PropertyAccessExpression
              Identifier: 'node'
              Identifier: 'body'
            Identifier: ' visited'
          ColonToken
          PropertyAccessExpression
            Identifier: ' ModuleInstanceState'
            Identifier: 'Instantiated'
  FunctionDeclaration
    Identifier: ' getModuleInstanceStateCached'
    Parameter
      Identifier: 'node'
      TypeReference
        Identifier: ' Node'
    Parameter
      Identifier: ' visited'
      NewExpression
        Identifier: ' Map'
        NumberKeyword
        UnionType
          TypeReference
            Identifier: ' ModuleInstanceState'
          UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' nodeId'
            CallExpression
              Identifier: ' getNodeId'
              Identifier: 'node'
      IfStatement
        CallExpression
          PropertyAccessExpression
            Identifier: 'visited'
            Identifier: 'has'
          Identifier: 'nodeId'
        Block
          ReturnStatement
            BinaryExpression
              CallExpression
                PropertyAccessExpression
                  Identifier: ' visited'
                  Identifier: 'get'
                Identifier: 'nodeId'
              BarBarToken
              PropertyAccessExpression
                Identifier: ' ModuleInstanceState'
                Identifier: 'NonInstantiated'
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            Identifier: '
    visited'
            Identifier: 'set'
          Identifier: 'nodeId'
          Identifier: ' undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' result'
            CallExpression
              Identifier: ' getModuleInstanceStateWorker'
              Identifier: 'node'
              Identifier: ' visited'
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            Identifier: '
    visited'
            Identifier: 'set'
          Identifier: 'nodeId'
          Identifier: ' result'
      ReturnStatement
        Identifier: ' result'
  FunctionDeclaration
    Identifier: ' getModuleInstanceStateWorker'
    Parameter
      Identifier: 'node'
      TypeReference
        Identifier: ' Node'
    Parameter
      Identifier: ' visited'
      TypeReference
        Identifier: ' Map'
        NumberKeyword
        UnionType
          TypeReference
            Identifier: ' ModuleInstanceState'
          UndefinedKeyword
    TypeReference
      Identifier: ' ModuleInstanceState'
    Block
      SwitchStatement
        PropertyAccessExpression
          Identifier: 'node'
          Identifier: 'kind'
        CaseBlock
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'InterfaceDeclaration'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'TypeAliasDeclaration'
            ReturnStatement
              PropertyAccessExpression
                Identifier: ' ModuleInstanceState'
                Identifier: 'NonInstantiated'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'EnumDeclaration'
            IfStatement
              CallExpression
                Identifier: 'isEnumConst'
                AsExpression
                  Identifier: 'node'
                  TypeReference
                    Identifier: ' EnumDeclaration'
              Block
                ReturnStatement
                  PropertyAccessExpression
                    Identifier: ' ModuleInstanceState'
                    Identifier: 'ConstEnumOnly'
            BreakStatement
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ImportDeclaration'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ImportEqualsDeclaration'
            IfStatement
              PrefixUnaryExpression
                ParenthesizedExpression
                  CallExpression
                    Identifier: 'hasSyntacticModifier'
                    Identifier: 'node'
                    PropertyAccessExpression
                      Identifier: ' ModifierFlags'
                      Identifier: 'Export'
              Block
                ReturnStatement
                  PropertyAccessExpression
                    Identifier: ' ModuleInstanceState'
                    Identifier: 'NonInstantiated'
            BreakStatement
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ExportDeclaration'
            VariableStatement
              VariableDeclarationList
                VariableDeclaration
                  Identifier: ' exportDeclaration'
                  AsExpression
                    Identifier: ' node'
                    TypeReference
                      Identifier: ' ExportDeclaration'
            IfStatement
              BinaryExpression
                BinaryExpression
                  PrefixUnaryExpression
                    PropertyAccessExpression
                      Identifier: 'exportDeclaration'
                      Identifier: 'moduleSpecifier'
                  AmpersandAmpersandToken
                  PropertyAccessExpression
                    Identifier: ' exportDeclaration'
                    Identifier: 'exportClause'
                AmpersandAmpersandToken
                BinaryExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: ' exportDeclaration'
                      Identifier: 'exportClause'
                    Identifier: 'kind'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'NamedExports'
              Block
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' state'
                      PropertyAccessExpression
                        Identifier: ' ModuleInstanceState'
                        Identifier: 'NonInstantiated'
                ForOfStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' specifier'
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: ' exportDeclaration'
                      Identifier: 'exportClause'
                    Identifier: 'elements'
                  Block
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' specifierState'
                          CallExpression
                            Identifier: ' getModuleInstanceStateForAliasTarget'
                            Identifier: 'specifier'
                            Identifier: ' visited'
                    IfStatement
                      BinaryExpression
                        Identifier: 'specifierState'
                        GreaterThanToken
                        Identifier: ' state'
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        state'
                            EqualsToken
                            Identifier: ' specifierState'
                    IfStatement
                      BinaryExpression
                        Identifier: 'state'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' ModuleInstanceState'
                          Identifier: 'Instantiated'
                      Block
                        ReturnStatement
                          Identifier: ' state'
                ReturnStatement
                  Identifier: ' state'
            BreakStatement
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ModuleBlock'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' state'
                    PropertyAccessExpression
                      Identifier: ' ModuleInstanceState'
                      Identifier: 'NonInstantiated'
              ExpressionStatement
                CallExpression
                  Identifier: '
            forEachChild'
                  Identifier: 'node'
                  ArrowFunction
                    Parameter
                      Identifier: ' n'
                    EqualsGreaterThanToken
                    Block
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' childState'
                            CallExpression
                              Identifier: ' getModuleInstanceStateCached'
                              Identifier: 'n'
                              Identifier: ' visited'
                      SwitchStatement
                        Identifier: 'childState'
                        CaseBlock
                          CaseClause
                            PropertyAccessExpression
                              Identifier: ' ModuleInstanceState'
                              Identifier: 'NonInstantiated'
                            ReturnStatement
                          CaseClause
                            PropertyAccessExpression
                              Identifier: ' ModuleInstanceState'
                              Identifier: 'ConstEnumOnly'
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                        // child is const enum only - record state and continue searching
                        state'
                                EqualsToken
                                PropertyAccessExpression
                                  Identifier: ' ModuleInstanceState'
                                  Identifier: 'ConstEnumOnly'
                            ReturnStatement
                          CaseClause
                            PropertyAccessExpression
                              Identifier: ' ModuleInstanceState'
                              Identifier: 'Instantiated'
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                        // child is instantiated - record state and stop
                        state'
                                EqualsToken
                                PropertyAccessExpression
                                  Identifier: ' ModuleInstanceState'
                                  Identifier: 'Instantiated'
                            ReturnStatement
                              TrueKeyword
                          DefaultClause
                            ExpressionStatement
                              CallExpression
                                PropertyAccessExpression
                                  Identifier: '
                        Debug'
                                  Identifier: 'assertNever'
                                Identifier: 'childState'
              ReturnStatement
                Identifier: ' state'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ModuleDeclaration'
            ReturnStatement
              CallExpression
                Identifier: ' getModuleInstanceState'
                AsExpression
                  Identifier: 'node'
                  TypeReference
                    Identifier: ' ModuleDeclaration'
                Identifier: ' visited'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'Identifier'
            IfStatement
              BinaryExpression
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'flags'
                AmpersandToken
                PropertyAccessExpression
                  Identifier: ' NodeFlags'
                  Identifier: 'IdentifierIsInJSDocNamespace'
              Block
                ReturnStatement
                  PropertyAccessExpression
                    Identifier: ' ModuleInstanceState'
                    Identifier: 'NonInstantiated'
      ReturnStatement
        PropertyAccessExpression
          Identifier: ' ModuleInstanceState'
          Identifier: 'Instantiated'
  FunctionDeclaration
    Identifier: ' getModuleInstanceStateForAliasTarget'
    Parameter
      Identifier: 'specifier'
      TypeReference
        Identifier: ' ExportSpecifier'
    Parameter
      Identifier: ' visited'
      TypeReference
        Identifier: ' Map'
        NumberKeyword
        UnionType
          TypeReference
            Identifier: ' ModuleInstanceState'
          UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' name'
            BinaryExpression
              PropertyAccessExpression
                Identifier: ' specifier'
                Identifier: 'propertyName'
              BarBarToken
              PropertyAccessExpression
                Identifier: ' specifier'
                Identifier: 'name'
      IfStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: 'name'
            Identifier: 'kind'
          ExclamationEqualsEqualsToken
          PropertyAccessExpression
            Identifier: ' SyntaxKind'
            Identifier: 'Identifier'
        Block
          ReturnStatement
            PropertyAccessExpression
              Identifier: ' ModuleInstanceState'
              Identifier: 'Instantiated'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' p'
            UnionType
              TypeReference
                Identifier: ' Node'
              UndefinedKeyword
            PropertyAccessExpression
              Identifier: ' specifier'
              Identifier: 'parent'
      WhileStatement
        Identifier: 'p'
        Block
          IfStatement
            BinaryExpression
              BinaryExpression
                CallExpression
                  Identifier: 'isBlock'
                  Identifier: 'p'
                BarBarToken
                CallExpression
                  Identifier: ' isModuleBlock'
                  Identifier: 'p'
              BarBarToken
              CallExpression
                Identifier: ' isSourceFile'
                Identifier: 'p'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' statements'
                    PropertyAccessExpression
                      Identifier: ' p'
                      Identifier: 'statements'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' found'
                    UnionType
                      TypeReference
                        Identifier: ' ModuleInstanceState'
                      UndefinedKeyword
              ForOfStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' statement'
                Identifier: ' statements'
                Block
                  IfStatement
                    CallExpression
                      Identifier: 'nodeHasName'
                      Identifier: 'statement'
                      Identifier: ' name'
                    Block
                      IfStatement
                        PrefixUnaryExpression
                          PropertyAccessExpression
                            Identifier: 'statement'
                            Identifier: 'parent'
                        Block
                          ExpressionStatement
                            CallExpression
                              Identifier: '
                        setParent'
                              Identifier: 'statement'
                              Identifier: ' p'
                          ExpressionStatement
                            CallExpression
                              Identifier: '
                        setParentRecursive'
                              Identifier: 'statement'
                              FalseKeyword
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' state'
                            CallExpression
                              Identifier: ' getModuleInstanceStateCached'
                              Identifier: 'statement'
                              Identifier: ' visited'
                      IfStatement
                        BinaryExpression
                          BinaryExpression
                            Identifier: 'found'
                            EqualsEqualsEqualsToken
                            Identifier: ' undefined'
                          BarBarToken
                          BinaryExpression
                            Identifier: ' state'
                            GreaterThanToken
                            Identifier: ' found'
                        Block
                          ExpressionStatement
                            BinaryExpression
                              Identifier: '
                        found'
                              EqualsToken
                              Identifier: ' state'
                      IfStatement
                        BinaryExpression
                          Identifier: 'found'
                          EqualsEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' ModuleInstanceState'
                            Identifier: 'Instantiated'
                        Block
                          ReturnStatement
                            Identifier: ' found'
                      IfStatement
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: 'statement'
                            Identifier: 'kind'
                          EqualsEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' SyntaxKind'
                            Identifier: 'ImportEqualsDeclaration'
                        Block
                          ExpressionStatement
                            BinaryExpression
                              Identifier: '
                        // Treat re-exports of import aliases as instantiated,
                        // since they're ambiguous. This is consistent with
                        // `export import x = mod.x` being treated as instantiated:
                        //   import x = mod.x;
                        //   export { x };
                        found'
                              EqualsToken
                              PropertyAccessExpression
                                Identifier: ' ModuleInstanceState'
                                Identifier: 'Instantiated'
              IfStatement
                BinaryExpression
                  Identifier: 'found'
                  ExclamationEqualsEqualsToken
                  Identifier: ' undefined'
                Block
                  ReturnStatement
                    Identifier: ' found'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        p'
              EqualsToken
              PropertyAccessExpression
                Identifier: ' p'
                Identifier: 'parent'
      ReturnStatement
        PropertyAccessExpression
          Identifier: ' ModuleInstanceState'
          Identifier: 'Instantiated'
  EnumDeclaration
    ExportKeyword
    ConstKeyword
    Identifier: ' ContainerFlags'
    EnumMember
      Identifier: '
    // The current node is not a container, and no container manipulation should happen before
    // recursing into it.
    None'
      NumericLiteral
    EnumMember
      Identifier: '

    // The current node is a container.  It should be set as the current container (and block-
    // container) before recursing into it.  The current node does not have locals.  Examples:
    //
    //      Classes, ObjectLiterals, TypeLiterals, Interfaces...
    IsContainer'
      BinaryExpression
        NumericLiteral
        LessThanLessThanToken
        NumericLiteral
    EnumMember
      Identifier: '

    // The current node is a block-scoped-container.  It should be set as the current block-
    // container before recursing into it.  Examples:
    //
    //      Blocks (when not parented by functions), Catch clauses, For/For-in/For-of statements...
    IsBlockScopedContainer'
      BinaryExpression
        NumericLiteral
        LessThanLessThanToken
        NumericLiteral
    EnumMember
      Identifier: '

    // The current node is the container of a control flow path. The current control flow should
    // be saved and restored, and a new control flow initialized within the container.
    IsControlFlowContainer'
      BinaryExpression
        NumericLiteral
        LessThanLessThanToken
        NumericLiteral
    EnumMember
      Identifier: '

    IsFunctionLike'
      BinaryExpression
        NumericLiteral
        LessThanLessThanToken
        NumericLiteral
    EnumMember
      Identifier: '
    IsFunctionExpression'
      BinaryExpression
        NumericLiteral
        LessThanLessThanToken
        NumericLiteral
    EnumMember
      Identifier: '
    HasLocals'
      BinaryExpression
        NumericLiteral
        LessThanLessThanToken
        NumericLiteral
    EnumMember
      Identifier: '
    IsInterface'
      BinaryExpression
        NumericLiteral
        LessThanLessThanToken
        NumericLiteral
    EnumMember
      Identifier: '
    IsObjectLiteralOrClassExpressionMethodOrAccessor'
      BinaryExpression
        NumericLiteral
        LessThanLessThanToken
        NumericLiteral
  FunctionDeclaration
    ExportKeyword
    Identifier: ' createFlowNode'
    Parameter
      Identifier: 'flags'
      TypeReference
        Identifier: ' FlowFlags'
    Parameter
      Identifier: ' node'
      UnknownKeyword
    Parameter
      Identifier: ' antecedent'
      UnionType
        TypeReference
          Identifier: ' FlowNode'
        ArrayType
          TypeReference
            Identifier: ' FlowNode'
        UndefinedKeyword
    TypeReference
      Identifier: ' FlowNode'
    Block
      ReturnStatement
        CallExpression
          PropertyAccessExpression
            Identifier: ' Debug'
            Identifier: 'attachFlowNodeDebugInfo'
          AsExpression
            ObjectLiteralExpression
              ShorthandPropertyAssignment
                Identifier: ' flags'
              PropertyAssignment
                Identifier: ' id'
                NumericLiteral
              ShorthandPropertyAssignment
                Identifier: ' node'
              ShorthandPropertyAssignment
                Identifier: ' antecedent'
            TypeReference
              Identifier: ' FlowNode'
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' binder'
        CallExpression
          Identifier: ' /* @__PURE__ */ createBinder'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' bindSourceFile'
    Parameter
      Identifier: 'file'
      TypeReference
        Identifier: ' SourceFile'
    Parameter
      Identifier: ' options'
      TypeReference
        Identifier: ' CompilerOptions'
    VoidKeyword
    Block
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            Identifier: '
    performance'
            Identifier: 'mark'
          StringLiteral
      ExpressionStatement
        CallExpression
          Identifier: '
    binder'
          Identifier: 'file'
          Identifier: ' options'
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            Identifier: '
    performance'
            Identifier: 'mark'
          StringLiteral
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            Identifier: '
    performance'
            Identifier: 'measure'
          StringLiteral
          StringLiteral
          StringLiteral
  FunctionDeclaration
    Identifier: ' createBinder'
    FunctionType
      Parameter
        Identifier: 'file'
        TypeReference
          Identifier: ' SourceFile'
      Parameter
        Identifier: ' options'
        TypeReference
          Identifier: ' CompilerOptions'
      VoidKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' file'
            TypeReference
              Identifier: ' SourceFile'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' options'
            TypeReference
              Identifier: ' CompilerOptions'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' languageVersion'
            TypeReference
              Identifier: ' ScriptTarget'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' parent'
            TypeReference
              Identifier: ' Node'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' container'
            UnionType
              TypeReference
                Identifier: ' IsContainer'
              TypeReference
                Identifier: ' EntityNameExpression'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' thisParentContainer'
            UnionType
              TypeReference
                Identifier: ' IsContainer'
              TypeReference
                Identifier: ' EntityNameExpression'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' blockScopeContainer'
            TypeReference
              Identifier: ' IsBlockScopedContainer'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' lastContainer'
            TypeReference
              Identifier: ' HasLocals'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' delayedTypeAliases'
            ArrayType
              ParenthesizedType
                UnionType
                  TypeReference
                    Identifier: 'JSDocTypedefTag'
                  TypeReference
                    Identifier: ' JSDocCallbackTag'
                  TypeReference
                    Identifier: ' JSDocEnumTag'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' seenThisKeyword'
            BooleanKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' jsDocImports'
            ArrayType
              TypeReference
                Identifier: ' JSDocImportTag'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' currentFlow'
            TypeReference
              Identifier: ' FlowNode'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' currentBreakTarget'
            UnionType
              TypeReference
                Identifier: ' FlowLabel'
              UndefinedKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' currentContinueTarget'
            UnionType
              TypeReference
                Identifier: ' FlowLabel'
              UndefinedKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' currentReturnTarget'
            UnionType
              TypeReference
                Identifier: ' FlowLabel'
              UndefinedKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' currentTrueTarget'
            UnionType
              TypeReference
                Identifier: ' FlowLabel'
              UndefinedKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' currentFalseTarget'
            UnionType
              TypeReference
                Identifier: ' FlowLabel'
              UndefinedKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' currentExceptionTarget'
            UnionType
              TypeReference
                Identifier: ' FlowLabel'
              UndefinedKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' preSwitchCaseFlow'
            UnionType
              TypeReference
                Identifier: ' FlowNode'
              UndefinedKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' activeLabelList'
            UnionType
              TypeReference
                Identifier: ' ActiveLabel'
              UndefinedKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' hasExplicitReturn'
            BooleanKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' hasFlowEffects'
            BooleanKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' emitFlags'
            TypeReference
              Identifier: ' NodeFlags'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' inStrictMode'
            BooleanKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' inAssignmentPattern'
            FalseKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' symbolCount'
            NumericLiteral
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' Symbol'
            ConstructorType
              Parameter
                Identifier: 'flags'
                TypeReference
                  Identifier: ' SymbolFlags'
              Parameter
                Identifier: ' name'
                TypeReference
                  Identifier: ' __String'
              TypeReference
                Identifier: ' Symbol'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' classifiableNames'
            TypeReference
              Identifier: ' Set'
              TypeReference
                Identifier: '__String'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' unreachableFlow'
            CallExpression
              Identifier: ' createFlowNode'
              PropertyAccessExpression
                Identifier: 'FlowFlags'
                Identifier: 'Unreachable'
              Identifier: ' /*node*/ undefined'
              Identifier: ' /*antecedent*/ undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' reportedUnreachableFlow'
            CallExpression
              Identifier: ' createFlowNode'
              PropertyAccessExpression
                Identifier: 'FlowFlags'
                Identifier: 'Unreachable'
              Identifier: ' /*node*/ undefined'
              Identifier: ' /*antecedent*/ undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' bindBinaryExpressionFlow'
            CallExpression
              Identifier: ' createBindBinaryExpressionFlow'
      ReturnStatement
        Identifier: ' bindSourceFile'
      FunctionDeclaration
        Identifier: ' createDiagnosticForNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' message'
          TypeReference
            Identifier: ' DiagnosticMessage'
        Parameter
          DotDotDotToken
          Identifier: 'args'
          TypeReference
            Identifier: ' DiagnosticArguments'
        TypeReference
          Identifier: ' DiagnosticWithLocation'
        Block
          ReturnStatement
            CallExpression
              Identifier: ' createDiagnosticForNodeInSourceFile'
              BinaryExpression
                CallExpression
                  Identifier: 'getSourceFileOfNode'
                  Identifier: 'node'
                BarBarToken
                Identifier: ' file'
              Identifier: ' node'
              Identifier: ' message'
              SpreadElement
                Identifier: 'args'
      FunctionDeclaration
        Identifier: ' bindSourceFile'
        Parameter
          Identifier: 'f'
          TypeReference
            Identifier: ' SourceFile'
        Parameter
          Identifier: ' opts'
          TypeReference
            Identifier: ' CompilerOptions'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        file'
              EqualsToken
              Identifier: ' f'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        options'
              EqualsToken
              Identifier: ' opts'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        languageVersion'
              EqualsToken
              CallExpression
                Identifier: ' getEmitScriptTarget'
                Identifier: 'options'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        inStrictMode'
              EqualsToken
              CallExpression
                Identifier: ' bindInStrictMode'
                Identifier: 'file'
                Identifier: ' opts'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        classifiableNames'
              EqualsToken
              NewExpression
                Identifier: ' Set'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        symbolCount'
              EqualsToken
              NumericLiteral
          ExpressionStatement
            BinaryExpression
              Identifier: '

        Symbol'
              EqualsToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' objectAllocator'
                  Identifier: 'getSymbolConstructor'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '

        // Attach debugging information if necessary
        Debug'
                Identifier: 'attachFlowNodeDebugInfo'
              Identifier: 'unreachableFlow'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        Debug'
                Identifier: 'attachFlowNodeDebugInfo'
              Identifier: 'reportedUnreachableFlow'
          IfStatement
            PrefixUnaryExpression
              PropertyAccessExpression
                Identifier: 'file'
                Identifier: 'locals'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            tracing'
                    QuestionDotToken
                    Identifier: 'push'
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: 'tracing'
                      Identifier: 'Phase'
                    Identifier: 'Bind'
                  StringLiteral
                  ObjectLiteralExpression
                    PropertyAssignment
                      Identifier: ' path'
                      PropertyAccessExpression
                        Identifier: ' file'
                        Identifier: 'path'
                  TrueKeyword
              ExpressionStatement
                CallExpression
                  Identifier: '
            bind'
                  Identifier: 'file'
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            tracing'
                    QuestionDotToken
                    Identifier: 'pop'
              ExpressionStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: '
            file'
                    Identifier: 'symbolCount'
                  EqualsToken
                  Identifier: ' symbolCount'
              ExpressionStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: '
            file'
                    Identifier: 'classifiableNames'
                  EqualsToken
                  Identifier: ' classifiableNames'
              ExpressionStatement
                CallExpression
                  Identifier: '
            delayedBindJSDocTypedefTag'
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindJSDocImports'
          ExpressionStatement
            BinaryExpression
              Identifier: '

        file'
              EqualsToken
              NonNullExpression
                Identifier: ' undefined'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        options'
              EqualsToken
              NonNullExpression
                Identifier: ' undefined'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        languageVersion'
              EqualsToken
              NonNullExpression
                Identifier: ' undefined'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        parent'
              EqualsToken
              NonNullExpression
                Identifier: ' undefined'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        container'
              EqualsToken
              NonNullExpression
                Identifier: ' undefined'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        thisParentContainer'
              EqualsToken
              NonNullExpression
                Identifier: ' undefined'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        blockScopeContainer'
              EqualsToken
              NonNullExpression
                Identifier: ' undefined'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        lastContainer'
              EqualsToken
              NonNullExpression
                Identifier: ' undefined'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        delayedTypeAliases'
              EqualsToken
              NonNullExpression
                Identifier: ' undefined'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        jsDocImports'
              EqualsToken
              NonNullExpression
                Identifier: ' undefined'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        seenThisKeyword'
              EqualsToken
              FalseKeyword
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentFlow'
              EqualsToken
              NonNullExpression
                Identifier: ' undefined'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentBreakTarget'
              EqualsToken
              Identifier: ' undefined'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentContinueTarget'
              EqualsToken
              Identifier: ' undefined'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentReturnTarget'
              EqualsToken
              Identifier: ' undefined'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentTrueTarget'
              EqualsToken
              Identifier: ' undefined'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentFalseTarget'
              EqualsToken
              Identifier: ' undefined'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentExceptionTarget'
              EqualsToken
              Identifier: ' undefined'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        activeLabelList'
              EqualsToken
              Identifier: ' undefined'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        hasExplicitReturn'
              EqualsToken
              FalseKeyword
          ExpressionStatement
            BinaryExpression
              Identifier: '
        hasFlowEffects'
              EqualsToken
              FalseKeyword
          ExpressionStatement
            BinaryExpression
              Identifier: '
        inAssignmentPattern'
              EqualsToken
              FalseKeyword
          ExpressionStatement
            BinaryExpression
              Identifier: '
        emitFlags'
              EqualsToken
              PropertyAccessExpression
                Identifier: ' NodeFlags'
                Identifier: 'None'
      FunctionDeclaration
        Identifier: ' bindInStrictMode'
        Parameter
          Identifier: 'file'
          TypeReference
            Identifier: ' SourceFile'
        Parameter
          Identifier: ' opts'
          TypeReference
            Identifier: ' CompilerOptions'
        BooleanKeyword
        Block
          IfStatement
            BinaryExpression
              CallExpression
                Identifier: 'getStrictOptionValue'
                Identifier: 'opts'
                StringLiteral
              AmpersandAmpersandToken
              PrefixUnaryExpression
                PropertyAccessExpression
                  Identifier: 'file'
                  Identifier: 'isDeclarationFile'
            Block
              ReturnStatement
                TrueKeyword
            Block
              ReturnStatement
                PrefixUnaryExpression
                  PrefixUnaryExpression
                    PropertyAccessExpression
                      Identifier: 'file'
                      Identifier: 'externalModuleIndicator'
      FunctionDeclaration
        Identifier: ' createSymbol'
        Parameter
          Identifier: 'flags'
          TypeReference
            Identifier: ' SymbolFlags'
        Parameter
          Identifier: ' name'
          TypeReference
            Identifier: ' __String'
        TypeReference
          Identifier: ' Symbol'
        Block
          ExpressionStatement
            PostfixUnaryExpression
              Identifier: '
        symbolCount'
          ReturnStatement
            NewExpression
              Identifier: ' Symbol'
              Identifier: 'flags'
              Identifier: ' name'
      FunctionDeclaration
        Identifier: ' addDeclarationToSymbol'
        Parameter
          Identifier: 'symbol'
          TypeReference
            Identifier: ' Symbol'
        Parameter
          Identifier: ' node'
          TypeReference
            Identifier: ' Declaration'
        Parameter
          Identifier: ' symbolFlags'
          TypeReference
            Identifier: ' SymbolFlags'
        Block
          ExpressionStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: '
        symbol'
                Identifier: 'flags'
              BarEqualsToken
              Identifier: ' symbolFlags'
          ExpressionStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: '

        node'
                Identifier: 'symbol'
              EqualsToken
              Identifier: ' symbol'
          ExpressionStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: '
        symbol'
                Identifier: 'declarations'
              EqualsToken
              CallExpression
                Identifier: ' appendIfUnique'
                PropertyAccessExpression
                  Identifier: 'symbol'
                  Identifier: 'declarations'
                Identifier: ' node'
          IfStatement
            BinaryExpression
              BinaryExpression
                Identifier: 'symbolFlags'
                AmpersandToken
                ParenthesizedExpression
                  BinaryExpression
                    BinaryExpression
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: 'SymbolFlags'
                          Identifier: 'Class'
                        BarToken
                        PropertyAccessExpression
                          Identifier: ' SymbolFlags'
                          Identifier: 'Enum'
                      BarToken
                      PropertyAccessExpression
                        Identifier: ' SymbolFlags'
                        Identifier: 'Module'
                    BarToken
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'Variable'
              AmpersandAmpersandToken
              PrefixUnaryExpression
                PropertyAccessExpression
                  Identifier: 'symbol'
                  Identifier: 'exports'
            Block
              ExpressionStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: '
            symbol'
                    Identifier: 'exports'
                  EqualsToken
                  CallExpression
                    Identifier: ' createSymbolTable'
          IfStatement
            BinaryExpression
              BinaryExpression
                Identifier: 'symbolFlags'
                AmpersandToken
                ParenthesizedExpression
                  BinaryExpression
                    BinaryExpression
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: 'SymbolFlags'
                          Identifier: 'Class'
                        BarToken
                        PropertyAccessExpression
                          Identifier: ' SymbolFlags'
                          Identifier: 'Interface'
                      BarToken
                      PropertyAccessExpression
                        Identifier: ' SymbolFlags'
                        Identifier: 'TypeLiteral'
                    BarToken
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'ObjectLiteral'
              AmpersandAmpersandToken
              PrefixUnaryExpression
                PropertyAccessExpression
                  Identifier: 'symbol'
                  Identifier: 'members'
            Block
              ExpressionStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: '
            symbol'
                    Identifier: 'members'
                  EqualsToken
                  CallExpression
                    Identifier: ' createSymbolTable'
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'symbol'
                Identifier: 'constEnumOnlyModule'
              AmpersandAmpersandToken
              ParenthesizedExpression
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: 'symbol'
                    Identifier: 'flags'
                  AmpersandToken
                  ParenthesizedExpression
                    BinaryExpression
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: 'SymbolFlags'
                          Identifier: 'Function'
                        BarToken
                        PropertyAccessExpression
                          Identifier: ' SymbolFlags'
                          Identifier: 'Class'
                      BarToken
                      PropertyAccessExpression
                        Identifier: ' SymbolFlags'
                        Identifier: 'RegularEnum'
            Block
              ExpressionStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: '
            symbol'
                    Identifier: 'constEnumOnlyModule'
                  EqualsToken
                  FalseKeyword
          IfStatement
            BinaryExpression
              Identifier: 'symbolFlags'
              AmpersandToken
              PropertyAccessExpression
                Identifier: ' SymbolFlags'
                Identifier: 'Value'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            setValueDeclaration'
                  Identifier: 'symbol'
                  Identifier: ' node'
      FunctionDeclaration
        Identifier: ' getDeclarationName'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Declaration'
        UnionType
          TypeReference
            Identifier: ' __String'
          UndefinedKeyword
        Block
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'kind'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'ExportAssignment'
            Block
              ReturnStatement
                ConditionalExpression
                  PropertyAccessExpression
                    ParenthesizedExpression
                      AsExpression
                        Identifier: 'node'
                        TypeReference
                          Identifier: ' ExportAssignment'
                    Identifier: 'isExportEquals'
                  QuestionToken
                  PropertyAccessExpression
                    Identifier: ' InternalSymbolName'
                    Identifier: 'ExportEquals'
                  ColonToken
                  PropertyAccessExpression
                    Identifier: ' InternalSymbolName'
                    Identifier: 'Default'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' name'
                CallExpression
                  Identifier: ' getNameOfDeclaration'
                  Identifier: 'node'
          IfStatement
            Identifier: 'name'
            Block
              IfStatement
                CallExpression
                  Identifier: 'isAmbientModule'
                  Identifier: 'node'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' moduleName'
                        CallExpression
                          Identifier: ' getTextOfIdentifierOrLiteral'
                          AsExpression
                            Identifier: 'name'
                            UnionType
                              TypeReference
                                Identifier: ' Identifier'
                              TypeReference
                                Identifier: ' StringLiteral'
                  ReturnStatement
                    AsExpression
                      ParenthesizedExpression
                        ConditionalExpression
                          CallExpression
                            Identifier: 'isGlobalScopeAugmentation'
                            AsExpression
                              Identifier: 'node'
                              TypeReference
                                Identifier: ' ModuleDeclaration'
                          QuestionToken
                          StringLiteral
                          ColonToken
                          TemplateExpression
                            TemplateHead
                            TemplateSpan
                              Identifier: 'moduleName'
                              TemplateTail
                      TypeReference
                        Identifier: ' __String'
              IfStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: 'name'
                    Identifier: 'kind'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'ComputedPropertyName'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' nameExpression'
                        PropertyAccessExpression
                          Identifier: ' name'
                          Identifier: 'expression'
                  IfStatement
                    CallExpression
                      Identifier: 'isStringOrNumericLiteralLike'
                      Identifier: 'nameExpression'
                    Block
                      ReturnStatement
                        CallExpression
                          Identifier: ' escapeLeadingUnderscores'
                          PropertyAccessExpression
                            Identifier: 'nameExpression'
                            Identifier: 'text'
                  IfStatement
                    CallExpression
                      Identifier: 'isSignedNumericLiteral'
                      Identifier: 'nameExpression'
                    Block
                      ReturnStatement
                        AsExpression
                          BinaryExpression
                            CallExpression
                              Identifier: ' tokenToString'
                              PropertyAccessExpression
                                Identifier: 'nameExpression'
                                Identifier: 'operator'
                            PlusToken
                            PropertyAccessExpression
                              PropertyAccessExpression
                                Identifier: ' nameExpression'
                                Identifier: 'operand'
                              Identifier: 'text'
                          TypeReference
                            Identifier: ' __String'
                    Block
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                    Debug'
                            Identifier: 'fail'
                          StringLiteral
              IfStatement
                CallExpression
                  Identifier: 'isPrivateIdentifier'
                  Identifier: 'name'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' containingClass'
                        CallExpression
                          Identifier: ' getContainingClass'
                          Identifier: 'node'
                  IfStatement
                    PrefixUnaryExpression
                      Identifier: 'containingClass'
                    Block
                      ReturnStatement
                        Identifier: ' undefined'
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' containingClassSymbol'
                        PropertyAccessExpression
                          Identifier: ' containingClass'
                          Identifier: 'symbol'
                  ReturnStatement
                    CallExpression
                      Identifier: ' getSymbolNameForPrivateIdentifier'
                      Identifier: 'containingClassSymbol'
                      PropertyAccessExpression
                        Identifier: ' name'
                        Identifier: 'escapedText'
              IfStatement
                CallExpression
                  Identifier: 'isJsxNamespacedName'
                  Identifier: 'name'
                Block
                  ReturnStatement
                    CallExpression
                      Identifier: ' getEscapedTextOfJsxNamespacedName'
                      Identifier: 'name'
              ReturnStatement
                ConditionalExpression
                  CallExpression
                    Identifier: ' isPropertyNameLiteral'
                    Identifier: 'name'
                  QuestionToken
                  CallExpression
                    Identifier: ' getEscapedTextOfIdentifierOrLiteral'
                    Identifier: 'name'
                  ColonToken
                  Identifier: ' undefined'
          SwitchStatement
            PropertyAccessExpression
              Identifier: 'node'
              Identifier: 'kind'
            CaseBlock
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'Constructor'
                ReturnStatement
                  PropertyAccessExpression
                    Identifier: ' InternalSymbolName'
                    Identifier: 'Constructor'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'FunctionType'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'CallSignature'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'JSDocSignature'
                ReturnStatement
                  PropertyAccessExpression
                    Identifier: ' InternalSymbolName'
                    Identifier: 'Call'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ConstructorType'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ConstructSignature'
                ReturnStatement
                  PropertyAccessExpression
                    Identifier: ' InternalSymbolName'
                    Identifier: 'New'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'IndexSignature'
                ReturnStatement
                  PropertyAccessExpression
                    Identifier: ' InternalSymbolName'
                    Identifier: 'Index'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ExportDeclaration'
                ReturnStatement
                  PropertyAccessExpression
                    Identifier: ' InternalSymbolName'
                    Identifier: 'ExportStar'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'SourceFile'
                ReturnStatement
                  PropertyAccessExpression
                    Identifier: ' InternalSymbolName'
                    Identifier: 'ExportEquals'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'BinaryExpression'
                IfStatement
                  BinaryExpression
                    CallExpression
                      Identifier: 'getAssignmentDeclarationKind'
                      AsExpression
                        Identifier: 'node'
                        TypeReference
                          Identifier: ' BinaryExpression'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' AssignmentDeclarationKind'
                      Identifier: 'ModuleExports'
                  Block
                    ReturnStatement
                      PropertyAccessExpression
                        Identifier: ' InternalSymbolName'
                        Identifier: 'ExportEquals'
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
                Debug'
                      Identifier: 'fail'
                    StringLiteral
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'JSDocFunctionType'
                ReturnStatement
                  ParenthesizedExpression
                    ConditionalExpression
                      CallExpression
                        Identifier: 'isJSDocConstructSignature'
                        Identifier: 'node'
                      QuestionToken
                      PropertyAccessExpression
                        Identifier: ' InternalSymbolName'
                        Identifier: 'New'
                      ColonToken
                      PropertyAccessExpression
                        Identifier: ' InternalSymbolName'
                        Identifier: 'Call'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'Parameter'
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
                // Parameters with names are handled at the top of this function.  Parameters
                // without names can only come from JSDocFunctionTypes.
                Debug'
                      Identifier: 'assert'
                    BinaryExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: 'node'
                          Identifier: 'parent'
                        Identifier: 'kind'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'JSDocFunctionType'
                    StringLiteral
                    ArrowFunction
                      EqualsGreaterThanToken
                      TemplateExpression
                        TemplateHead
                        TemplateSpan
                          CallExpression
                            PropertyAccessExpression
                              Identifier: 'Debug'
                              Identifier: 'formatSyntaxKind'
                            PropertyAccessExpression
                              PropertyAccessExpression
                                Identifier: 'node'
                                Identifier: 'parent'
                              Identifier: 'kind'
                          TemplateTail
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' functionType'
                      AsExpression
                        PropertyAccessExpression
                          Identifier: ' node'
                          Identifier: 'parent'
                        TypeReference
                          Identifier: ' JSDocFunctionType'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' index'
                      CallExpression
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: ' functionType'
                            Identifier: 'parameters'
                          Identifier: 'indexOf'
                        AsExpression
                          Identifier: 'node'
                          TypeReference
                            Identifier: ' ParameterDeclaration'
                ReturnStatement
                  AsExpression
                    BinaryExpression
                      StringLiteral
                      PlusToken
                      Identifier: ' index'
                    TypeReference
                      Identifier: ' __String'
      FunctionDeclaration
        Identifier: ' getDisplayName'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Declaration'
        StringKeyword
        Block
          ReturnStatement
            ConditionalExpression
              CallExpression
                Identifier: ' isNamedDeclaration'
                Identifier: 'node'
              QuestionToken
              CallExpression
                Identifier: ' declarationNameToString'
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'name'
              ColonToken
              CallExpression
                Identifier: ' unescapeLeadingUnderscores'
                CallExpression
                  PropertyAccessExpression
                    Identifier: 'Debug'
                    Identifier: 'checkDefined'
                  CallExpression
                    Identifier: 'getDeclarationName'
                    Identifier: 'node'
      FunctionDeclaration
        Identifier: ' declareSymbol'
        Parameter
          Identifier: 'symbolTable'
          TypeReference
            Identifier: ' SymbolTable'
        Parameter
          Identifier: ' parent'
          UnionType
            TypeReference
              Identifier: ' Symbol'
            UndefinedKeyword
        Parameter
          Identifier: ' node'
          TypeReference
            Identifier: ' Declaration'
        Parameter
          Identifier: ' includes'
          TypeReference
            Identifier: ' SymbolFlags'
        Parameter
          Identifier: ' excludes'
          TypeReference
            Identifier: ' SymbolFlags'
        Parameter
          Identifier: ' isReplaceableByMethod'
          QuestionToken
          BooleanKeyword
        Parameter
          Identifier: ' isComputedName'
          QuestionToken
          BooleanKeyword
        TypeReference
          Identifier: ' Symbol'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        Debug'
                Identifier: 'assert'
              BinaryExpression
                Identifier: 'isComputedName'
                BarBarToken
                PrefixUnaryExpression
                  CallExpression
                    Identifier: 'hasDynamicName'
                    Identifier: 'node'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' isDefaultExport'
                BinaryExpression
                  CallExpression
                    Identifier: ' hasSyntacticModifier'
                    Identifier: 'node'
                    PropertyAccessExpression
                      Identifier: ' ModifierFlags'
                      Identifier: 'Default'
                  BarBarToken
                  BinaryExpression
                    CallExpression
                      Identifier: ' isExportSpecifier'
                      Identifier: 'node'
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: ' moduleExportNameIsDefault'
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'name'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' name'
                ConditionalExpression
                  Identifier: ' isComputedName'
                  QuestionToken
                  PropertyAccessExpression
                    Identifier: ' InternalSymbolName'
                    Identifier: 'Computed'
                  ColonToken
                  ConditionalExpression
                    BinaryExpression
                      Identifier: ' isDefaultExport'
                      AmpersandAmpersandToken
                      Identifier: ' parent'
                    QuestionToken
                    PropertyAccessExpression
                      Identifier: ' InternalSymbolName'
                      Identifier: 'Default'
                    ColonToken
                    CallExpression
                      Identifier: ' getDeclarationName'
                      Identifier: 'node'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' symbol'
                UnionType
                  TypeReference
                    Identifier: ' Symbol'
                  UndefinedKeyword
          IfStatement
            BinaryExpression
              Identifier: 'name'
              EqualsEqualsEqualsToken
              Identifier: ' undefined'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            symbol'
                  EqualsToken
                  CallExpression
                    Identifier: ' createSymbol'
                    PropertyAccessExpression
                      Identifier: 'SymbolFlags'
                      Identifier: 'None'
                    PropertyAccessExpression
                      Identifier: ' InternalSymbolName'
                      Identifier: 'Missing'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            // Check and see if the symbol table already has a symbol with this name.  If not,
            // create a new symbol with this name and add it to the table.  Note that we don't
            // give the new symbol any flags *yet*.  This ensures that it will not conflict
            // with the 'excludes' flags we pass in.
            //
            // If we do get an existing symbol, see if it conflicts with the new symbol we're
            // creating.  For example, a 'var' symbol and a 'class' symbol will conflict within
            // the same symbol table.  If we have a conflict, report the issue on each
            // declaration we have for this symbol, and then create a new symbol for this
            // declaration.
            //
            // Note that when properties declared in Javascript constructors
            // (marked by isReplaceableByMethod) conflict with another symbol, the property loses.
            // Always. This allows the common Javascript pattern of overwriting a prototype method
            // with an bound instance method of the same type: `this.method = this.method.bind(this)`
            //
            // If we created a new symbol, either because we didn't have a symbol with this name
            // in the symbol table, or we conflicted with an existing symbol, then just add this
            // node as the sole declaration of the new symbol.
            //
            // Otherwise, we'll be merging into a compatible existing symbol (for example when
            // you have multiple 'vars' with the same name in the same container).  In this case
            // just add this node into the declarations list of the symbol.
            symbol'
                  EqualsToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' symbolTable'
                      Identifier: 'get'
                    Identifier: 'name'
              IfStatement
                BinaryExpression
                  Identifier: 'includes'
                  AmpersandToken
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'Classifiable'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                classifiableNames'
                        Identifier: 'add'
                      Identifier: 'name'
              IfStatement
                PrefixUnaryExpression
                  Identifier: 'symbol'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                symbolTable'
                        Identifier: 'set'
                      Identifier: 'name'
                      BinaryExpression
                        Identifier: ' symbol'
                        EqualsToken
                        CallExpression
                          Identifier: ' createSymbol'
                          PropertyAccessExpression
                            Identifier: 'SymbolFlags'
                            Identifier: 'None'
                          Identifier: ' name'
                  IfStatement
                    Identifier: 'isReplaceableByMethod'
                    ExpressionStatement
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: ' symbol'
                          Identifier: 'isReplaceableByMethod'
                        EqualsToken
                        TrueKeyword
                IfStatement
                  BinaryExpression
                    Identifier: 'isReplaceableByMethod'
                    AmpersandAmpersandToken
                    PrefixUnaryExpression
                      PropertyAccessExpression
                        Identifier: 'symbol'
                        Identifier: 'isReplaceableByMethod'
                  Block
                    ReturnStatement
                      Identifier: ' symbol'
                  IfStatement
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: 'symbol'
                        Identifier: 'flags'
                      AmpersandToken
                      Identifier: ' excludes'
                    Block
                      IfStatement
                        PropertyAccessExpression
                          Identifier: 'symbol'
                          Identifier: 'isReplaceableByMethod'
                        Block
                          ExpressionStatement
                            CallExpression
                              PropertyAccessExpression
                                Identifier: '
                    // Javascript constructor-declared symbols can be discarded in favor of
                    // prototype symbols like methods.
                    symbolTable'
                                Identifier: 'set'
                              Identifier: 'name'
                              BinaryExpression
                                Identifier: ' symbol'
                                EqualsToken
                                CallExpression
                                  Identifier: ' createSymbol'
                                  PropertyAccessExpression
                                    Identifier: 'SymbolFlags'
                                    Identifier: 'None'
                                  Identifier: ' name'
                        IfStatement
                          PrefixUnaryExpression
                            ParenthesizedExpression
                              BinaryExpression
                                BinaryExpression
                                  Identifier: 'includes'
                                  AmpersandToken
                                  PropertyAccessExpression
                                    Identifier: ' SymbolFlags'
                                    Identifier: 'Variable'
                                AmpersandAmpersandToken
                                BinaryExpression
                                  PropertyAccessExpression
                                    Identifier: ' symbol'
                                    Identifier: 'flags'
                                  AmpersandToken
                                  PropertyAccessExpression
                                    Identifier: ' SymbolFlags'
                                    Identifier: 'Assignment'
                          Block
                            IfStatement
                              CallExpression
                                Identifier: 'isNamedDeclaration'
                                Identifier: 'node'
                              Block
                                ExpressionStatement
                                  CallExpression
                                    Identifier: '
                        setParent'
                                    PropertyAccessExpression
                                      Identifier: 'node'
                                      Identifier: 'name'
                                    Identifier: ' node'
                            VariableStatement
                              VariableDeclarationList
                                VariableDeclaration
                                  Identifier: ' message'
                                  ConditionalExpression
                                    BinaryExpression
                                      PropertyAccessExpression
                                        Identifier: ' symbol'
                                        Identifier: 'flags'
                                      AmpersandToken
                                      PropertyAccessExpression
                                        Identifier: ' SymbolFlags'
                                        Identifier: 'BlockScopedVariable'
                                    QuestionToken
                                    PropertyAccessExpression
                                      Identifier: ' Diagnostics'
                                      Identifier: 'Cannot_redeclare_block_scoped_variable_0'
                                    ColonToken
                                    PropertyAccessExpression
                                      Identifier: ' Diagnostics'
                                      Identifier: 'Duplicate_identifier_0'
                            VariableStatement
                              VariableDeclarationList
                                VariableDeclaration
                                  Identifier: ' messageNeedsName'
                                  TrueKeyword
                            IfStatement
                              BinaryExpression
                                BinaryExpression
                                  PropertyAccessExpression
                                    Identifier: 'symbol'
                                    Identifier: 'flags'
                                  AmpersandToken
                                  PropertyAccessExpression
                                    Identifier: ' SymbolFlags'
                                    Identifier: 'Enum'
                                BarBarToken
                                BinaryExpression
                                  Identifier: ' includes'
                                  AmpersandToken
                                  PropertyAccessExpression
                                    Identifier: ' SymbolFlags'
                                    Identifier: 'Enum'
                              Block
                                ExpressionStatement
                                  BinaryExpression
                                    Identifier: '
                        message'
                                    EqualsToken
                                    PropertyAccessExpression
                                      Identifier: ' Diagnostics'
                                      Identifier: 'Enum_declarations_can_only_merge_with_namespace_or_other_enum_declarations'
                                ExpressionStatement
                                  BinaryExpression
                                    Identifier: '
                        messageNeedsName'
                                    EqualsToken
                                    FalseKeyword
                            VariableStatement
                              VariableDeclarationList
                                VariableDeclaration
                                  Identifier: ' multipleDefaultExports'
                                  FalseKeyword
                            IfStatement
                              CallExpression
                                Identifier: 'length'
                                PropertyAccessExpression
                                  Identifier: 'symbol'
                                  Identifier: 'declarations'
                              Block
                                IfStatement
                                  Identifier: 'isDefaultExport'
                                  Block
                                    ExpressionStatement
                                      BinaryExpression
                                        Identifier: '
                            message'
                                        EqualsToken
                                        PropertyAccessExpression
                                          Identifier: ' Diagnostics'
                                          Identifier: 'A_module_cannot_have_multiple_default_exports'
                                    ExpressionStatement
                                      BinaryExpression
                                        Identifier: '
                            messageNeedsName'
                                        EqualsToken
                                        FalseKeyword
                                    ExpressionStatement
                                      BinaryExpression
                                        Identifier: '
                            multipleDefaultExports'
                                        EqualsToken
                                        TrueKeyword
                                  Block
                                    IfStatement
                                      BinaryExpression
                                        BinaryExpression
                                          PropertyAccessExpression
                                            Identifier: '
                                symbol'
                                            Identifier: 'declarations'
                                          AmpersandAmpersandToken
                                          PropertyAccessExpression
                                            PropertyAccessExpression
                                              Identifier: ' symbol'
                                              Identifier: 'declarations'
                                            Identifier: 'length'
                                        AmpersandAmpersandToken
                                        ParenthesizedExpression
                                          BinaryExpression
                                            BinaryExpression
                                              PropertyAccessExpression
                                                Identifier: 'node'
                                                Identifier: 'kind'
                                              EqualsEqualsEqualsToken
                                              PropertyAccessExpression
                                                Identifier: ' SyntaxKind'
                                                Identifier: 'ExportAssignment'
                                            AmpersandAmpersandToken
                                            PrefixUnaryExpression
                                              PropertyAccessExpression
                                                ParenthesizedExpression
                                                  AsExpression
                                                    Identifier: 'node'
                                                    TypeReference
                                                      Identifier: ' ExportAssignment'
                                                Identifier: 'isExportEquals'
                                      Block
                                        ExpressionStatement
                                          BinaryExpression
                                            Identifier: '
                                message'
                                            EqualsToken
                                            PropertyAccessExpression
                                              Identifier: ' Diagnostics'
                                              Identifier: 'A_module_cannot_have_multiple_default_exports'
                                        ExpressionStatement
                                          BinaryExpression
                                            Identifier: '
                                messageNeedsName'
                                            EqualsToken
                                            FalseKeyword
                                        ExpressionStatement
                                          BinaryExpression
                                            Identifier: '
                                multipleDefaultExports'
                                            EqualsToken
                                            TrueKeyword
                            VariableStatement
                              VariableDeclarationList
                                VariableDeclaration
                                  Identifier: ' relatedInformation'
                                  ArrayType
                                    TypeReference
                                      Identifier: ' DiagnosticRelatedInformation'
                                  ArrayLiteralExpression
                            IfStatement
                              BinaryExpression
                                BinaryExpression
                                  BinaryExpression
                                    CallExpression
                                      Identifier: 'isTypeAliasDeclaration'
                                      Identifier: 'node'
                                    AmpersandAmpersandToken
                                    CallExpression
                                      Identifier: ' nodeIsMissing'
                                      PropertyAccessExpression
                                        Identifier: 'node'
                                        Identifier: 'type'
                                  AmpersandAmpersandToken
                                  CallExpression
                                    Identifier: ' hasSyntacticModifier'
                                    Identifier: 'node'
                                    PropertyAccessExpression
                                      Identifier: ' ModifierFlags'
                                      Identifier: 'Export'
                                AmpersandAmpersandToken
                                BinaryExpression
                                  PropertyAccessExpression
                                    Identifier: ' symbol'
                                    Identifier: 'flags'
                                  AmpersandToken
                                  ParenthesizedExpression
                                    BinaryExpression
                                      BinaryExpression
                                        PropertyAccessExpression
                                          Identifier: 'SymbolFlags'
                                          Identifier: 'Alias'
                                        BarToken
                                        PropertyAccessExpression
                                          Identifier: ' SymbolFlags'
                                          Identifier: 'Type'
                                      BarToken
                                      PropertyAccessExpression
                                        Identifier: ' SymbolFlags'
                                        Identifier: 'Namespace'
                              Block
                                ExpressionStatement
                                  CallExpression
                                    PropertyAccessExpression
                                      Identifier: '
                        // export type T; - may have meant export type { T }?
                        relatedInformation'
                                      Identifier: 'push'
                                    CallExpression
                                      Identifier: 'createDiagnosticForNode'
                                      Identifier: 'node'
                                      PropertyAccessExpression
                                        Identifier: ' Diagnostics'
                                        Identifier: 'Did_you_mean_0'
                                      TemplateExpression
                                        TemplateHead
                                        TemplateSpan
                                          CallExpression
                                            Identifier: 'unescapeLeadingUnderscores'
                                            PropertyAccessExpression
                                              PropertyAccessExpression
                                                Identifier: 'node'
                                                Identifier: 'name'
                                              Identifier: 'escapedText'
                                          TemplateTail
                            VariableStatement
                              VariableDeclarationList
                                VariableDeclaration
                                  Identifier: ' declarationName'
                                  BinaryExpression
                                    CallExpression
                                      Identifier: ' getNameOfDeclaration'
                                      Identifier: 'node'
                                    BarBarToken
                                    Identifier: ' node'
                            ExpressionStatement
                              CallExpression
                                Identifier: '
                    forEach'
                                PropertyAccessExpression
                                  Identifier: 'symbol'
                                  Identifier: 'declarations'
                                ArrowFunction
                                  Parameter
                                    Identifier: 'declaration'
                                  Parameter
                                    Identifier: ' index'
                                  EqualsGreaterThanToken
                                  Block
                                    VariableStatement
                                      VariableDeclarationList
                                        VariableDeclaration
                                          Identifier: ' decl'
                                          BinaryExpression
                                            CallExpression
                                              Identifier: ' getNameOfDeclaration'
                                              Identifier: 'declaration'
                                            BarBarToken
                                            Identifier: ' declaration'
                                    VariableStatement
                                      VariableDeclarationList
                                        VariableDeclaration
                                          Identifier: ' diag'
                                          ConditionalExpression
                                            Identifier: ' messageNeedsName'
                                            QuestionToken
                                            CallExpression
                                              Identifier: ' createDiagnosticForNode'
                                              Identifier: 'decl'
                                              Identifier: ' message'
                                              CallExpression
                                                Identifier: ' getDisplayName'
                                                Identifier: 'declaration'
                                            ColonToken
                                            CallExpression
                                              Identifier: ' createDiagnosticForNode'
                                              Identifier: 'decl'
                                              Identifier: ' message'
                                    ExpressionStatement
                                      CallExpression
                                        PropertyAccessExpression
                                          PropertyAccessExpression
                                            Identifier: '
                        file'
                                            Identifier: 'bindDiagnostics'
                                          Identifier: 'push'
                                        ConditionalExpression
                                          Identifier: '
                            multipleDefaultExports'
                                          QuestionToken
                                          CallExpression
                                            Identifier: ' addRelatedInfo'
                                            Identifier: 'diag'
                                            CallExpression
                                              Identifier: ' createDiagnosticForNode'
                                              Identifier: 'declarationName'
                                              ConditionalExpression
                                                BinaryExpression
                                                  Identifier: ' index'
                                                  EqualsEqualsEqualsToken
                                                  NumericLiteral
                                                QuestionToken
                                                PropertyAccessExpression
                                                  Identifier: ' Diagnostics'
                                                  Identifier: 'Another_export_default_is_here'
                                                ColonToken
                                                PropertyAccessExpression
                                                  Identifier: ' Diagnostics'
                                                  Identifier: 'and_here'
                                          ColonToken
                                          Identifier: ' diag'
                                    IfStatement
                                      Identifier: 'multipleDefaultExports'
                                      Block
                                        ExpressionStatement
                                          CallExpression
                                            PropertyAccessExpression
                                              Identifier: '
                            relatedInformation'
                                              Identifier: 'push'
                                            CallExpression
                                              Identifier: 'createDiagnosticForNode'
                                              Identifier: 'decl'
                                              PropertyAccessExpression
                                                Identifier: ' Diagnostics'
                                                Identifier: 'The_first_export_default_is_here'
                            VariableStatement
                              VariableDeclarationList
                                VariableDeclaration
                                  Identifier: ' diag'
                                  ConditionalExpression
                                    Identifier: ' messageNeedsName'
                                    QuestionToken
                                    CallExpression
                                      Identifier: ' createDiagnosticForNode'
                                      Identifier: 'declarationName'
                                      Identifier: ' message'
                                      CallExpression
                                        Identifier: ' getDisplayName'
                                        Identifier: 'node'
                                    ColonToken
                                    CallExpression
                                      Identifier: ' createDiagnosticForNode'
                                      Identifier: 'declarationName'
                                      Identifier: ' message'
                            ExpressionStatement
                              CallExpression
                                PropertyAccessExpression
                                  PropertyAccessExpression
                                    Identifier: '
                    file'
                                    Identifier: 'bindDiagnostics'
                                  Identifier: 'push'
                                CallExpression
                                  Identifier: 'addRelatedInfo'
                                  Identifier: 'diag'
                                  SpreadElement
                                    Identifier: 'relatedInformation'
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '

                    symbol'
                                EqualsToken
                                CallExpression
                                  Identifier: ' createSymbol'
                                  PropertyAccessExpression
                                    Identifier: 'SymbolFlags'
                                    Identifier: 'None'
                                  Identifier: ' name'
          ExpressionStatement
            CallExpression
              Identifier: '

        addDeclarationToSymbol'
              Identifier: 'symbol'
              Identifier: ' node'
              Identifier: ' includes'
          IfStatement
            PropertyAccessExpression
              Identifier: 'symbol'
              Identifier: 'parent'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            Debug'
                    Identifier: 'assert'
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: 'symbol'
                      Identifier: 'parent'
                    EqualsEqualsEqualsToken
                    Identifier: ' parent'
                  StringLiteral
            Block
              ExpressionStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: '
            symbol'
                    Identifier: 'parent'
                  EqualsToken
                  Identifier: ' parent'
          ReturnStatement
            Identifier: ' symbol'
      FunctionDeclaration
        Identifier: ' declareModuleMember'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Declaration'
        Parameter
          Identifier: ' symbolFlags'
          TypeReference
            Identifier: ' SymbolFlags'
        Parameter
          Identifier: ' symbolExcludes'
          TypeReference
            Identifier: ' SymbolFlags'
        TypeReference
          Identifier: ' Symbol'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' hasExportModifier'
                BinaryExpression
                  PrefixUnaryExpression
                    PrefixUnaryExpression
                      ParenthesizedExpression
                        BinaryExpression
                          CallExpression
                            Identifier: 'getCombinedModifierFlags'
                            Identifier: 'node'
                          AmpersandToken
                          PropertyAccessExpression
                            Identifier: ' ModifierFlags'
                            Identifier: 'Export'
                  BarBarToken
                  CallExpression
                    Identifier: ' jsdocTreatAsExported'
                    Identifier: 'node'
          IfStatement
            BinaryExpression
              Identifier: 'symbolFlags'
              AmpersandToken
              PropertyAccessExpression
                Identifier: ' SymbolFlags'
                Identifier: 'Alias'
            Block
              IfStatement
                BinaryExpression
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'kind'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'ExportSpecifier'
                  BarBarToken
                  ParenthesizedExpression
                    BinaryExpression
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: 'node'
                          Identifier: 'kind'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'ImportEqualsDeclaration'
                      AmpersandAmpersandToken
                      Identifier: ' hasExportModifier'
                Block
                  ReturnStatement
                    CallExpression
                      Identifier: ' declareSymbol'
                      NonNullExpression
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: 'container'
                            Identifier: 'symbol'
                          Identifier: 'exports'
                      PropertyAccessExpression
                        Identifier: ' container'
                        Identifier: 'symbol'
                      Identifier: ' node'
                      Identifier: ' symbolFlags'
                      Identifier: ' symbolExcludes'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                Debug'
                        Identifier: 'assertNode'
                      Identifier: 'container'
                      Identifier: ' canHaveLocals'
                  ReturnStatement
                    CallExpression
                      Identifier: ' declareSymbol'
                      NonNullExpression
                        PropertyAccessExpression
                          Identifier: 'container'
                          Identifier: 'locals'
                      Identifier: ' /*parent*/ undefined'
                      Identifier: ' node'
                      Identifier: ' symbolFlags'
                      Identifier: ' symbolExcludes'
            Block
              IfStatement
                CallExpression
                  Identifier: 'isJSDocTypeAlias'
                  Identifier: 'node'
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' Debug'
                      Identifier: 'assert'
                    CallExpression
                      Identifier: 'isInJSFile'
                      Identifier: 'node'
              IfStatement
                BinaryExpression
                  PrefixUnaryExpression
                    CallExpression
                      Identifier: 'isAmbientModule'
                      Identifier: 'node'
                  AmpersandAmpersandToken
                  ParenthesizedExpression
                    BinaryExpression
                      Identifier: 'hasExportModifier'
                      BarBarToken
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: ' container'
                          Identifier: 'flags'
                        AmpersandToken
                        PropertyAccessExpression
                          Identifier: ' NodeFlags'
                          Identifier: 'ExportContext'
                Block
                  IfStatement
                    BinaryExpression
                      BinaryExpression
                        PrefixUnaryExpression
                          CallExpression
                            Identifier: 'canHaveLocals'
                            Identifier: 'container'
                        BarBarToken
                        PrefixUnaryExpression
                          PropertyAccessExpression
                            Identifier: 'container'
                            Identifier: 'locals'
                      BarBarToken
                      ParenthesizedExpression
                        BinaryExpression
                          CallExpression
                            Identifier: 'hasSyntacticModifier'
                            Identifier: 'node'
                            PropertyAccessExpression
                              Identifier: ' ModifierFlags'
                              Identifier: 'Default'
                          AmpersandAmpersandToken
                          PrefixUnaryExpression
                            CallExpression
                              Identifier: 'getDeclarationName'
                              Identifier: 'node'
                    Block
                      ReturnStatement
                        CallExpression
                          Identifier: ' declareSymbol'
                          NonNullExpression
                            PropertyAccessExpression
                              PropertyAccessExpression
                                Identifier: 'container'
                                Identifier: 'symbol'
                              Identifier: 'exports'
                          PropertyAccessExpression
                            Identifier: ' container'
                            Identifier: 'symbol'
                          Identifier: ' node'
                          Identifier: ' symbolFlags'
                          Identifier: ' symbolExcludes'
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' exportKind'
                        ConditionalExpression
                          BinaryExpression
                            Identifier: ' symbolFlags'
                            AmpersandToken
                            PropertyAccessExpression
                              Identifier: ' SymbolFlags'
                              Identifier: 'Value'
                          QuestionToken
                          PropertyAccessExpression
                            Identifier: ' SymbolFlags'
                            Identifier: 'ExportValue'
                          ColonToken
                          NumericLiteral
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' local'
                        CallExpression
                          Identifier: ' declareSymbol'
                          PropertyAccessExpression
                            Identifier: 'container'
                            Identifier: 'locals'
                          Identifier: ' /*parent*/ undefined'
                          Identifier: ' node'
                          Identifier: ' exportKind'
                          Identifier: ' symbolExcludes'
                  ExpressionStatement
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: '
                local'
                        Identifier: 'exportSymbol'
                      EqualsToken
                      CallExpression
                        Identifier: ' declareSymbol'
                        NonNullExpression
                          PropertyAccessExpression
                            PropertyAccessExpression
                              Identifier: 'container'
                              Identifier: 'symbol'
                            Identifier: 'exports'
                        PropertyAccessExpression
                          Identifier: ' container'
                          Identifier: 'symbol'
                        Identifier: ' node'
                        Identifier: ' symbolFlags'
                        Identifier: ' symbolExcludes'
                  ExpressionStatement
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: '
                node'
                        Identifier: 'localSymbol'
                      EqualsToken
                      Identifier: ' local'
                  ReturnStatement
                    Identifier: ' local'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                Debug'
                        Identifier: 'assertNode'
                      Identifier: 'container'
                      Identifier: ' canHaveLocals'
                  ReturnStatement
                    CallExpression
                      Identifier: ' declareSymbol'
                      NonNullExpression
                        PropertyAccessExpression
                          Identifier: 'container'
                          Identifier: 'locals'
                      Identifier: ' /*parent*/ undefined'
                      Identifier: ' node'
                      Identifier: ' symbolFlags'
                      Identifier: ' symbolExcludes'
      FunctionDeclaration
        Identifier: ' jsdocTreatAsExported'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        Block
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'parent'
              AmpersandAmpersandToken
              CallExpression
                Identifier: ' isModuleDeclaration'
                Identifier: 'node'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            node'
                  EqualsToken
                  PropertyAccessExpression
                    Identifier: ' node'
                    Identifier: 'parent'
          IfStatement
            PrefixUnaryExpression
              CallExpression
                Identifier: 'isJSDocTypeAlias'
                Identifier: 'node'
            ReturnStatement
              FalseKeyword
          IfStatement
            BinaryExpression
              PrefixUnaryExpression
                CallExpression
                  Identifier: 'isJSDocEnumTag'
                  Identifier: 'node'
              AmpersandAmpersandToken
              PrefixUnaryExpression
                PrefixUnaryExpression
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'fullName'
            ReturnStatement
              TrueKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' declName'
                CallExpression
                  Identifier: ' getNameOfDeclaration'
                  Identifier: 'node'
          IfStatement
            PrefixUnaryExpression
              Identifier: 'declName'
            ReturnStatement
              FalseKeyword
          IfStatement
            BinaryExpression
              CallExpression
                Identifier: 'isPropertyAccessEntityNameExpression'
                PropertyAccessExpression
                  Identifier: 'declName'
                  Identifier: 'parent'
              AmpersandAmpersandToken
              CallExpression
                Identifier: ' isTopLevelNamespaceAssignment'
                PropertyAccessExpression
                  Identifier: 'declName'
                  Identifier: 'parent'
            ReturnStatement
              TrueKeyword
          IfStatement
            BinaryExpression
              CallExpression
                Identifier: 'isDeclaration'
                PropertyAccessExpression
                  Identifier: 'declName'
                  Identifier: 'parent'
              AmpersandAmpersandToken
              BinaryExpression
                CallExpression
                  Identifier: ' getCombinedModifierFlags'
                  PropertyAccessExpression
                    Identifier: 'declName'
                    Identifier: 'parent'
                AmpersandToken
                PropertyAccessExpression
                  Identifier: ' ModifierFlags'
                  Identifier: 'Export'
            ReturnStatement
              TrueKeyword
          ReturnStatement
            FalseKeyword
      FunctionDeclaration
        Identifier: ' bindContainer'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Mutable'
            TypeReference
              Identifier: 'HasContainerFlags'
        Parameter
          Identifier: ' containerFlags'
          TypeReference
            Identifier: ' ContainerFlags'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveContainer'
                Identifier: ' container'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveThisParentContainer'
                Identifier: ' thisParentContainer'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' savedBlockScopeContainer'
                Identifier: ' blockScopeContainer'
          IfStatement
            BinaryExpression
              Identifier: 'containerFlags'
              AmpersandToken
              PropertyAccessExpression
                Identifier: ' ContainerFlags'
                Identifier: 'IsContainer'
            Block
              IfStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'kind'
                  ExclamationEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'ArrowFunction'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                thisParentContainer'
                      EqualsToken
                      Identifier: ' container'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            container'
                  EqualsToken
                  BinaryExpression
                    Identifier: ' blockScopeContainer'
                    EqualsToken
                    AsExpression
                      Identifier: ' node'
                      TypeReference
                        Identifier: ' IsContainer'
              IfStatement
                BinaryExpression
                  Identifier: 'containerFlags'
                  AmpersandToken
                  PropertyAccessExpression
                    Identifier: ' ContainerFlags'
                    Identifier: 'HasLocals'
                Block
                  ExpressionStatement
                    BinaryExpression
                      PropertyAccessExpression
                        ParenthesizedExpression
                          AsExpression
                            Identifier: 'container'
                            TypeReference
                              Identifier: ' HasLocals'
                        Identifier: 'locals'
                      EqualsToken
                      CallExpression
                        Identifier: ' createSymbolTable'
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                addToContainerChain'
                      AsExpression
                        Identifier: 'container'
                        TypeReference
                          Identifier: ' HasLocals'
            IfStatement
              BinaryExpression
                Identifier: 'containerFlags'
                AmpersandToken
                PropertyAccessExpression
                  Identifier: ' ContainerFlags'
                  Identifier: 'IsBlockScopedContainer'
              Block
                ExpressionStatement
                  BinaryExpression
                    Identifier: '
            blockScopeContainer'
                    EqualsToken
                    AsExpression
                      Identifier: ' node'
                      TypeReference
                        Identifier: ' IsBlockScopedContainer'
                IfStatement
                  BinaryExpression
                    Identifier: 'containerFlags'
                    AmpersandToken
                    PropertyAccessExpression
                      Identifier: ' ContainerFlags'
                      Identifier: 'HasLocals'
                  Block
                    ExpressionStatement
                      BinaryExpression
                        PropertyAccessExpression
                          ParenthesizedExpression
                            AsExpression
                              Identifier: 'blockScopeContainer'
                              TypeReference
                                Identifier: ' HasLocals'
                          Identifier: 'locals'
                        EqualsToken
                        Identifier: ' undefined'
          IfStatement
            BinaryExpression
              Identifier: 'containerFlags'
              AmpersandToken
              PropertyAccessExpression
                Identifier: ' ContainerFlags'
                Identifier: 'IsControlFlowContainer'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' saveCurrentFlow'
                    Identifier: ' currentFlow'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' saveBreakTarget'
                    Identifier: ' currentBreakTarget'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' saveContinueTarget'
                    Identifier: ' currentContinueTarget'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' saveReturnTarget'
                    Identifier: ' currentReturnTarget'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' saveExceptionTarget'
                    Identifier: ' currentExceptionTarget'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' saveActiveLabelList'
                    Identifier: ' activeLabelList'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' saveHasExplicitReturn'
                    Identifier: ' hasExplicitReturn'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' isImmediatelyInvoked'
                    BinaryExpression
                      ParenthesizedExpression
                        BinaryExpression
                          BinaryExpression
                            BinaryExpression
                              BinaryExpression
                                Identifier: '
                containerFlags'
                                AmpersandToken
                                PropertyAccessExpression
                                  Identifier: ' ContainerFlags'
                                  Identifier: 'IsFunctionExpression'
                              AmpersandAmpersandToken
                              PrefixUnaryExpression
                                CallExpression
                                  Identifier: 'hasSyntacticModifier'
                                  Identifier: 'node'
                                  PropertyAccessExpression
                                    Identifier: ' ModifierFlags'
                                    Identifier: 'Async'
                            AmpersandAmpersandToken
                            PrefixUnaryExpression
                              PropertyAccessExpression
                                ParenthesizedExpression
                                  AsExpression
                                    Identifier: 'node'
                                    TypeReference
                                      Identifier: ' FunctionLikeDeclaration'
                                Identifier: 'asteriskToken'
                          AmpersandAmpersandToken
                          PrefixUnaryExpression
                            PrefixUnaryExpression
                              CallExpression
                                Identifier: 'getImmediatelyInvokedFunctionExpression'
                                Identifier: 'node'
                      BarBarToken
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: ' node'
                          Identifier: 'kind'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'ClassStaticBlockDeclaration'
              IfStatement
                PrefixUnaryExpression
                  Identifier: 'isImmediatelyInvoked'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                currentFlow'
                      EqualsToken
                      CallExpression
                        Identifier: ' createFlowNode'
                        PropertyAccessExpression
                          Identifier: 'FlowFlags'
                          Identifier: 'Start'
                        Identifier: ' /*node*/ undefined'
                        Identifier: ' /*antecedent*/ undefined'
                  IfStatement
                    BinaryExpression
                      Identifier: 'containerFlags'
                      AmpersandToken
                      ParenthesizedExpression
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: 'ContainerFlags'
                            Identifier: 'IsFunctionExpression'
                          BarToken
                          PropertyAccessExpression
                            Identifier: ' ContainerFlags'
                            Identifier: 'IsObjectLiteralOrClassExpressionMethodOrAccessor'
                    Block
                      ExpressionStatement
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: '
                    currentFlow'
                            Identifier: 'node'
                          EqualsToken
                          AsExpression
                            Identifier: ' node'
                            UnionType
                              TypeReference
                                Identifier: ' FunctionExpression'
                              TypeReference
                                Identifier: ' ArrowFunction'
                              TypeReference
                                Identifier: ' MethodDeclaration'
                              TypeReference
                                Identifier: ' GetAccessorDeclaration'
                              TypeReference
                                Identifier: ' SetAccessorDeclaration'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            // We create a return control flow graph for IIFEs and constructors. For constructors
            // we use the return control flow graph in strict property initialization checks.
            currentReturnTarget'
                  EqualsToken
                  ConditionalExpression
                    BinaryExpression
                      BinaryExpression
                        Identifier: ' isImmediatelyInvoked'
                        BarBarToken
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: ' node'
                            Identifier: 'kind'
                          EqualsEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' SyntaxKind'
                            Identifier: 'Constructor'
                      BarBarToken
                      ParenthesizedExpression
                        BinaryExpression
                          CallExpression
                            Identifier: 'isInJSFile'
                            Identifier: 'node'
                          AmpersandAmpersandToken
                          ParenthesizedExpression
                            BinaryExpression
                              BinaryExpression
                                PropertyAccessExpression
                                  Identifier: 'node'
                                  Identifier: 'kind'
                                EqualsEqualsEqualsToken
                                PropertyAccessExpression
                                  Identifier: ' SyntaxKind'
                                  Identifier: 'FunctionDeclaration'
                              BarBarToken
                              BinaryExpression
                                PropertyAccessExpression
                                  Identifier: ' node'
                                  Identifier: 'kind'
                                EqualsEqualsEqualsToken
                                PropertyAccessExpression
                                  Identifier: ' SyntaxKind'
                                  Identifier: 'FunctionExpression'
                    QuestionToken
                    CallExpression
                      Identifier: ' createBranchLabel'
                    ColonToken
                    Identifier: ' undefined'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            currentExceptionTarget'
                  EqualsToken
                  Identifier: ' undefined'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            currentBreakTarget'
                  EqualsToken
                  Identifier: ' undefined'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            currentContinueTarget'
                  EqualsToken
                  Identifier: ' undefined'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            activeLabelList'
                  EqualsToken
                  Identifier: ' undefined'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            hasExplicitReturn'
                  EqualsToken
                  FalseKeyword
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindChildren'
                  Identifier: 'node'
              ExpressionStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: '
            // Reset all reachability check related flags on node (for incremental scenarios)
            node'
                    Identifier: 'flags'
                  AmpersandEqualsToken
                  PrefixUnaryExpression
                    PropertyAccessExpression
                      Identifier: 'NodeFlags'
                      Identifier: 'ReachabilityAndEmitFlags'
              IfStatement
                BinaryExpression
                  BinaryExpression
                    PrefixUnaryExpression
                      ParenthesizedExpression
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: 'currentFlow'
                            Identifier: 'flags'
                          AmpersandToken
                          PropertyAccessExpression
                            Identifier: ' FlowFlags'
                            Identifier: 'Unreachable'
                    AmpersandAmpersandToken
                    BinaryExpression
                      Identifier: ' containerFlags'
                      AmpersandToken
                      PropertyAccessExpression
                        Identifier: ' ContainerFlags'
                        Identifier: 'IsFunctionLike'
                  AmpersandAmpersandToken
                  CallExpression
                    Identifier: ' nodeIsPresent'
                    PropertyAccessExpression
                      ParenthesizedExpression
                        AsExpression
                          Identifier: 'node'
                          UnionType
                            TypeReference
                              Identifier: ' FunctionLikeDeclaration'
                            TypeReference
                              Identifier: ' ClassStaticBlockDeclaration'
                      Identifier: 'body'
                Block
                  ExpressionStatement
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: '
                node'
                        Identifier: 'flags'
                      BarEqualsToken
                      PropertyAccessExpression
                        Identifier: ' NodeFlags'
                        Identifier: 'HasImplicitReturn'
                  IfStatement
                    Identifier: 'hasExplicitReturn'
                    ExpressionStatement
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: ' node'
                          Identifier: 'flags'
                        BarEqualsToken
                        PropertyAccessExpression
                          Identifier: ' NodeFlags'
                          Identifier: 'HasExplicitReturn'
                  ExpressionStatement
                    BinaryExpression
                      PropertyAccessExpression
                        ParenthesizedExpression
                          AsExpression
                            Identifier: 'node'
                            UnionType
                              TypeReference
                                Identifier: ' FunctionLikeDeclaration'
                              TypeReference
                                Identifier: ' ClassStaticBlockDeclaration'
                        Identifier: 'endFlowNode'
                      EqualsToken
                      Identifier: ' currentFlow'
              IfStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'kind'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'SourceFile'
                Block
                  ExpressionStatement
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: '
                node'
                        Identifier: 'flags'
                      BarEqualsToken
                      Identifier: ' emitFlags'
                  ExpressionStatement
                    BinaryExpression
                      PropertyAccessExpression
                        ParenthesizedExpression
                          AsExpression
                            Identifier: 'node'
                            TypeReference
                              Identifier: ' SourceFile'
                        Identifier: 'endFlowNode'
                      EqualsToken
                      Identifier: ' currentFlow'
              IfStatement
                Identifier: 'currentReturnTarget'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                addAntecedent'
                      Identifier: 'currentReturnTarget'
                      Identifier: ' currentFlow'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                currentFlow'
                      EqualsToken
                      CallExpression
                        Identifier: ' finishFlowLabel'
                        Identifier: 'currentReturnTarget'
                  IfStatement
                    BinaryExpression
                      BinaryExpression
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: 'node'
                            Identifier: 'kind'
                          EqualsEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' SyntaxKind'
                            Identifier: 'Constructor'
                        BarBarToken
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: ' node'
                            Identifier: 'kind'
                          EqualsEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' SyntaxKind'
                            Identifier: 'ClassStaticBlockDeclaration'
                      BarBarToken
                      ParenthesizedExpression
                        BinaryExpression
                          CallExpression
                            Identifier: 'isInJSFile'
                            Identifier: 'node'
                          AmpersandAmpersandToken
                          ParenthesizedExpression
                            BinaryExpression
                              BinaryExpression
                                PropertyAccessExpression
                                  Identifier: 'node'
                                  Identifier: 'kind'
                                EqualsEqualsEqualsToken
                                PropertyAccessExpression
                                  Identifier: ' SyntaxKind'
                                  Identifier: 'FunctionDeclaration'
                              BarBarToken
                              BinaryExpression
                                PropertyAccessExpression
                                  Identifier: ' node'
                                  Identifier: 'kind'
                                EqualsEqualsEqualsToken
                                PropertyAccessExpression
                                  Identifier: ' SyntaxKind'
                                  Identifier: 'FunctionExpression'
                    Block
                      ExpressionStatement
                        BinaryExpression
                          PropertyAccessExpression
                            ParenthesizedExpression
                              AsExpression
                                Identifier: 'node'
                                UnionType
                                  TypeReference
                                    Identifier: ' FunctionLikeDeclaration'
                                  TypeReference
                                    Identifier: ' ClassStaticBlockDeclaration'
                            Identifier: 'returnFlowNode'
                          EqualsToken
                          Identifier: ' currentFlow'
              IfStatement
                PrefixUnaryExpression
                  Identifier: 'isImmediatelyInvoked'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                currentFlow'
                      EqualsToken
                      Identifier: ' saveCurrentFlow'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            currentBreakTarget'
                  EqualsToken
                  Identifier: ' saveBreakTarget'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            currentContinueTarget'
                  EqualsToken
                  Identifier: ' saveContinueTarget'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            currentReturnTarget'
                  EqualsToken
                  Identifier: ' saveReturnTarget'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            currentExceptionTarget'
                  EqualsToken
                  Identifier: ' saveExceptionTarget'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            activeLabelList'
                  EqualsToken
                  Identifier: ' saveActiveLabelList'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            hasExplicitReturn'
                  EqualsToken
                  Identifier: ' saveHasExplicitReturn'
            IfStatement
              BinaryExpression
                Identifier: 'containerFlags'
                AmpersandToken
                PropertyAccessExpression
                  Identifier: ' ContainerFlags'
                  Identifier: 'IsInterface'
              Block
                ExpressionStatement
                  BinaryExpression
                    Identifier: '
            seenThisKeyword'
                    EqualsToken
                    FalseKeyword
                ExpressionStatement
                  CallExpression
                    Identifier: '
            bindChildren'
                    Identifier: 'node'
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
            Debug'
                      Identifier: 'assertNotNode'
                    Identifier: 'node'
                    Identifier: ' isIdentifier'
                ExpressionStatement
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: ' // ContainsThis cannot overlap with HasExtendedUnicodeEscape on Identifier
            node'
                      Identifier: 'flags'
                    EqualsToken
                    ConditionalExpression
                      Identifier: ' seenThisKeyword'
                      QuestionToken
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: ' node'
                          Identifier: 'flags'
                        BarToken
                        PropertyAccessExpression
                          Identifier: ' NodeFlags'
                          Identifier: 'ContainsThis'
                      ColonToken
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: ' node'
                          Identifier: 'flags'
                        AmpersandToken
                        PrefixUnaryExpression
                          PropertyAccessExpression
                            Identifier: 'NodeFlags'
                            Identifier: 'ContainsThis'
              Block
                ExpressionStatement
                  CallExpression
                    Identifier: '
            bindChildren'
                    Identifier: 'node'
          ExpressionStatement
            BinaryExpression
              Identifier: '

        container'
              EqualsToken
              Identifier: ' saveContainer'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        thisParentContainer'
              EqualsToken
              Identifier: ' saveThisParentContainer'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        blockScopeContainer'
              EqualsToken
              Identifier: ' savedBlockScopeContainer'
      FunctionDeclaration
        Identifier: ' bindEachFunctionsFirst'
        Parameter
          Identifier: 'nodes'
          UnionType
            TypeReference
              Identifier: ' NodeArray'
              TypeReference
                Identifier: 'Node'
            UndefinedKeyword
        VoidKeyword
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        bindEach'
              Identifier: 'nodes'
              ArrowFunction
                Parameter
                  Identifier: ' n'
                EqualsGreaterThanToken
                ConditionalExpression
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: ' n'
                      Identifier: 'kind'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'FunctionDeclaration'
                  QuestionToken
                  CallExpression
                    Identifier: ' bind'
                    Identifier: 'n'
                  ColonToken
                  Identifier: ' undefined'
          ExpressionStatement
            CallExpression
              Identifier: '
        bindEach'
              Identifier: 'nodes'
              ArrowFunction
                Parameter
                  Identifier: ' n'
                EqualsGreaterThanToken
                ConditionalExpression
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: ' n'
                      Identifier: 'kind'
                    ExclamationEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'FunctionDeclaration'
                  QuestionToken
                  CallExpression
                    Identifier: ' bind'
                    Identifier: 'n'
                  ColonToken
                  Identifier: ' undefined'
      FunctionDeclaration
        Identifier: ' bindEach'
        Parameter
          Identifier: 'nodes'
          UnionType
            TypeReference
              Identifier: ' NodeArray'
              TypeReference
                Identifier: 'Node'
            UndefinedKeyword
        Parameter
          Identifier: ' bindFunction'
          FunctionType
            Parameter
              Identifier: 'node'
              TypeReference
                Identifier: ' Node'
            VoidKeyword
          Identifier: ' bind'
        VoidKeyword
        Block
          IfStatement
            BinaryExpression
              Identifier: 'nodes'
              EqualsEqualsEqualsToken
              Identifier: ' undefined'
            Block
              ReturnStatement
          ExpressionStatement
            CallExpression
              Identifier: '

        forEach'
              Identifier: 'nodes'
              Identifier: ' bindFunction'
      FunctionDeclaration
        Identifier: ' bindEachChild'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        forEachChild'
              Identifier: 'node'
              Identifier: ' bind'
              Identifier: ' bindEach'
      FunctionDeclaration
        Identifier: ' bindChildren'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        VoidKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveInAssignmentPattern'
                Identifier: ' inAssignmentPattern'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        // Most nodes aren't valid in an assignment pattern, so we clear the value here
        // and set it before we descend into nodes that could actually be part of an assignment pattern.
        inAssignmentPattern'
              EqualsToken
              FalseKeyword
          IfStatement
            CallExpression
              Identifier: 'checkUnreachable'
              Identifier: 'node'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindEachChild'
                  Identifier: 'node'
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindJSDoc'
                  Identifier: 'node'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            inAssignmentPattern'
                  EqualsToken
                  Identifier: ' saveInAssignmentPattern'
              ReturnStatement
          IfStatement
            BinaryExpression
              BinaryExpression
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'kind'
                  GreaterThanEqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'FirstStatement'
                AmpersandAmpersandToken
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: ' node'
                    Identifier: 'kind'
                  LessThanEqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'LastStatement'
              AmpersandAmpersandToken
              ParenthesizedExpression
                BinaryExpression
                  PrefixUnaryExpression
                    PropertyAccessExpression
                      Identifier: 'options'
                      Identifier: 'allowUnreachableCode'
                  BarBarToken
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: ' node'
                      Identifier: 'kind'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'ReturnStatement'
            Block
              ExpressionStatement
                BinaryExpression
                  PropertyAccessExpression
                    ParenthesizedExpression
                      AsExpression
                        Identifier: 'node'
                        TypeReference
                          Identifier: ' HasFlowNode'
                    Identifier: 'flowNode'
                  EqualsToken
                  Identifier: ' currentFlow'
          SwitchStatement
            PropertyAccessExpression
              Identifier: 'node'
              Identifier: 'kind'
            CaseBlock
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'WhileStatement'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bindWhileStatement'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' WhileStatement'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'DoStatement'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bindDoStatement'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' DoStatement'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ForStatement'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bindForStatement'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' ForStatement'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ForInStatement'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ForOfStatement'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bindForInOrForOfStatement'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' ForInOrOfStatement'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'IfStatement'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bindIfStatement'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' IfStatement'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ReturnStatement'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ThrowStatement'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bindReturnOrThrow'
                    AsExpression
                      Identifier: 'node'
                      UnionType
                        TypeReference
                          Identifier: ' ReturnStatement'
                        TypeReference
                          Identifier: ' ThrowStatement'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'BreakStatement'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ContinueStatement'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bindBreakOrContinueStatement'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' BreakOrContinueStatement'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'TryStatement'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bindTryStatement'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' TryStatement'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'SwitchStatement'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bindSwitchStatement'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' SwitchStatement'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'CaseBlock'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bindCaseBlock'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' CaseBlock'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'CaseClause'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bindCaseClause'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' CaseClause'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ExpressionStatement'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bindExpressionStatement'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' ExpressionStatement'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'LabeledStatement'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bindLabeledStatement'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' LabeledStatement'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'PrefixUnaryExpression'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bindPrefixUnaryExpressionFlow'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' PrefixUnaryExpression'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'PostfixUnaryExpression'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bindPostfixUnaryExpressionFlow'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' PostfixUnaryExpression'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'BinaryExpression'
                IfStatement
                  CallExpression
                    Identifier: 'isDestructuringAssignment'
                    Identifier: 'node'
                  Block
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    // Carry over whether we are in an assignment pattern to
                    // binary expressions that could actually be an initializer
                    inAssignmentPattern'
                        EqualsToken
                        Identifier: ' saveInAssignmentPattern'
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                    bindDestructuringAssignmentFlow'
                        Identifier: 'node'
                    ReturnStatement
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bindBinaryExpressionFlow'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' BinaryExpression'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'DeleteExpression'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bindDeleteExpressionFlow'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' DeleteExpression'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ConditionalExpression'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bindConditionalExpressionFlow'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' ConditionalExpression'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'VariableDeclaration'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bindVariableDeclarationFlow'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' VariableDeclaration'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'PropertyAccessExpression'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ElementAccessExpression'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bindAccessExpressionFlow'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' AccessExpression'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'CallExpression'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bindCallExpressionFlow'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' CallExpression'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'NonNullExpression'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bindNonNullExpressionFlow'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' NonNullExpression'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'JSDocTypedefTag'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'JSDocCallbackTag'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'JSDocEnumTag'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bindJSDocTypeAlias'
                    AsExpression
                      Identifier: 'node'
                      UnionType
                        TypeReference
                          Identifier: ' JSDocTypedefTag'
                        TypeReference
                          Identifier: ' JSDocCallbackTag'
                        TypeReference
                          Identifier: ' JSDocEnumTag'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'JSDocImportTag'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bindJSDocImportTag'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' JSDocImportTag'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'SourceFile'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                bindEachFunctionsFirst'
                      PropertyAccessExpression
                        ParenthesizedExpression
                          AsExpression
                            Identifier: 'node'
                            TypeReference
                              Identifier: ' SourceFile'
                        Identifier: 'statements'
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                bind'
                      PropertyAccessExpression
                        ParenthesizedExpression
                          AsExpression
                            Identifier: 'node'
                            TypeReference
                              Identifier: ' SourceFile'
                        Identifier: 'endOfFileToken'
                  BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'Block'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ModuleBlock'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bindEachFunctionsFirst'
                    PropertyAccessExpression
                      ParenthesizedExpression
                        AsExpression
                          Identifier: 'node'
                          TypeReference
                            Identifier: ' Block'
                      Identifier: 'statements'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'BindingElement'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bindBindingElementFlow'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' BindingElement'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'Parameter'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bindParameterFlow'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' ParameterDeclaration'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ObjectLiteralExpression'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ArrayLiteralExpression'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'PropertyAssignment'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'SpreadElement'
                ExpressionStatement
                  BinaryExpression
                    Identifier: '
                // Carry over whether we are in an assignment pattern of Object and Array literals
                // as well as their children that are valid assignment targets.
                inAssignmentPattern'
                    EqualsToken
                    Identifier: ' saveInAssignmentPattern'
              DefaultClause
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bindEachChild'
                    Identifier: 'node'
                BreakStatement
          ExpressionStatement
            CallExpression
              Identifier: '
        bindJSDoc'
              Identifier: 'node'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        inAssignmentPattern'
              EqualsToken
              Identifier: ' saveInAssignmentPattern'
      FunctionDeclaration
        Identifier: ' isNarrowingExpression'
        Parameter
          Identifier: 'expr'
          TypeReference
            Identifier: ' Expression'
        BooleanKeyword
        Block
          SwitchStatement
            PropertyAccessExpression
              Identifier: 'expr'
              Identifier: 'kind'
            CaseBlock
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'Identifier'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ThisKeyword'
                ReturnStatement
                  TrueKeyword
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'PropertyAccessExpression'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ElementAccessExpression'
                ReturnStatement
                  CallExpression
                    Identifier: ' containsNarrowableReference'
                    Identifier: 'expr'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'CallExpression'
                ReturnStatement
                  CallExpression
                    Identifier: ' hasNarrowableArgument'
                    AsExpression
                      Identifier: 'expr'
                      TypeReference
                        Identifier: ' CallExpression'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ParenthesizedExpression'
                IfStatement
                  CallExpression
                    Identifier: 'isJSDocTypeAssertion'
                    Identifier: 'expr'
                  Block
                    ReturnStatement
                      FalseKeyword
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'NonNullExpression'
                ReturnStatement
                  CallExpression
                    Identifier: ' isNarrowingExpression'
                    PropertyAccessExpression
                      ParenthesizedExpression
                        AsExpression
                          Identifier: 'expr'
                          UnionType
                            TypeReference
                              Identifier: ' ParenthesizedExpression'
                            TypeReference
                              Identifier: ' NonNullExpression'
                      Identifier: 'expression'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'BinaryExpression'
                ReturnStatement
                  CallExpression
                    Identifier: ' isNarrowingBinaryExpression'
                    AsExpression
                      Identifier: 'expr'
                      TypeReference
                        Identifier: ' BinaryExpression'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'PrefixUnaryExpression'
                ReturnStatement
                  BinaryExpression
                    BinaryExpression
                      PropertyAccessExpression
                        ParenthesizedExpression
                          AsExpression
                            Identifier: 'expr'
                            TypeReference
                              Identifier: ' PrefixUnaryExpression'
                        Identifier: 'operator'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'ExclamationToken'
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: ' isNarrowingExpression'
                      PropertyAccessExpression
                        ParenthesizedExpression
                          AsExpression
                            Identifier: 'expr'
                            TypeReference
                              Identifier: ' PrefixUnaryExpression'
                        Identifier: 'operand'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'TypeOfExpression'
                ReturnStatement
                  CallExpression
                    Identifier: ' isNarrowingExpression'
                    PropertyAccessExpression
                      ParenthesizedExpression
                        AsExpression
                          Identifier: 'expr'
                          TypeReference
                            Identifier: ' TypeOfExpression'
                      Identifier: 'expression'
          ReturnStatement
            FalseKeyword
      FunctionDeclaration
        Identifier: ' isNarrowableReference'
        Parameter
          Identifier: 'expr'
          TypeReference
            Identifier: ' Expression'
        BooleanKeyword
        Block
          SwitchStatement
            PropertyAccessExpression
              Identifier: 'expr'
              Identifier: 'kind'
            CaseBlock
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'Identifier'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ThisKeyword'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'SuperKeyword'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'MetaProperty'
                ReturnStatement
                  TrueKeyword
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'PropertyAccessExpression'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ParenthesizedExpression'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'NonNullExpression'
                ReturnStatement
                  CallExpression
                    Identifier: ' isNarrowableReference'
                    PropertyAccessExpression
                      ParenthesizedExpression
                        AsExpression
                          Identifier: 'expr'
                          UnionType
                            TypeReference
                              Identifier: ' PropertyAccessExpression'
                            TypeReference
                              Identifier: ' ParenthesizedExpression'
                            TypeReference
                              Identifier: ' NonNullExpression'
                      Identifier: 'expression'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ElementAccessExpression'
                ReturnStatement
                  BinaryExpression
                    ParenthesizedExpression
                      BinaryExpression
                        CallExpression
                          Identifier: 'isStringOrNumericLiteralLike'
                          PropertyAccessExpression
                            ParenthesizedExpression
                              AsExpression
                                Identifier: 'expr'
                                TypeReference
                                  Identifier: ' ElementAccessExpression'
                            Identifier: 'argumentExpression'
                        BarBarToken
                        CallExpression
                          Identifier: ' isEntityNameExpression'
                          PropertyAccessExpression
                            ParenthesizedExpression
                              AsExpression
                                Identifier: 'expr'
                                TypeReference
                                  Identifier: ' ElementAccessExpression'
                            Identifier: 'argumentExpression'
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: '
                    isNarrowableReference'
                      PropertyAccessExpression
                        ParenthesizedExpression
                          AsExpression
                            Identifier: 'expr'
                            TypeReference
                              Identifier: ' ElementAccessExpression'
                        Identifier: 'expression'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'BinaryExpression'
                ReturnStatement
                  BinaryExpression
                    BinaryExpression
                      BinaryExpression
                        PropertyAccessExpression
                          PropertyAccessExpression
                            ParenthesizedExpression
                              AsExpression
                                Identifier: 'expr'
                                TypeReference
                                  Identifier: ' BinaryExpression'
                            Identifier: 'operatorToken'
                          Identifier: 'kind'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'CommaToken'
                      AmpersandAmpersandToken
                      CallExpression
                        Identifier: ' isNarrowableReference'
                        PropertyAccessExpression
                          ParenthesizedExpression
                            AsExpression
                              Identifier: 'expr'
                              TypeReference
                                Identifier: ' BinaryExpression'
                          Identifier: 'right'
                    BarBarToken
                    BinaryExpression
                      CallExpression
                        Identifier: '
                    isAssignmentOperator'
                        PropertyAccessExpression
                          PropertyAccessExpression
                            ParenthesizedExpression
                              AsExpression
                                Identifier: 'expr'
                                TypeReference
                                  Identifier: ' BinaryExpression'
                            Identifier: 'operatorToken'
                          Identifier: 'kind'
                      AmpersandAmpersandToken
                      CallExpression
                        Identifier: ' isLeftHandSideExpression'
                        PropertyAccessExpression
                          ParenthesizedExpression
                            AsExpression
                              Identifier: 'expr'
                              TypeReference
                                Identifier: ' BinaryExpression'
                          Identifier: 'left'
          ReturnStatement
            FalseKeyword
      FunctionDeclaration
        Identifier: ' containsNarrowableReference'
        Parameter
          Identifier: 'expr'
          TypeReference
            Identifier: ' Expression'
        BooleanKeyword
        Block
          ReturnStatement
            BinaryExpression
              CallExpression
                Identifier: ' isNarrowableReference'
                Identifier: 'expr'
              BarBarToken
              BinaryExpression
                CallExpression
                  Identifier: ' isOptionalChain'
                  Identifier: 'expr'
                AmpersandAmpersandToken
                CallExpression
                  Identifier: ' containsNarrowableReference'
                  PropertyAccessExpression
                    Identifier: 'expr'
                    Identifier: 'expression'
      FunctionDeclaration
        Identifier: ' hasNarrowableArgument'
        Parameter
          Identifier: 'expr'
          TypeReference
            Identifier: ' CallExpression'
        Block
          IfStatement
            PropertyAccessExpression
              Identifier: 'expr'
              Identifier: 'arguments'
            Block
              ForOfStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' argument'
                PropertyAccessExpression
                  Identifier: ' expr'
                  Identifier: 'arguments'
                Block
                  IfStatement
                    CallExpression
                      Identifier: 'containsNarrowableReference'
                      Identifier: 'argument'
                    Block
                      ReturnStatement
                        TrueKeyword
          IfStatement
            BinaryExpression
              BinaryExpression
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: '
            expr'
                    Identifier: 'expression'
                  Identifier: 'kind'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'PropertyAccessExpression'
              AmpersandAmpersandToken
              CallExpression
                Identifier: '
            containsNarrowableReference'
                PropertyAccessExpression
                  ParenthesizedExpression
                    AsExpression
                      PropertyAccessExpression
                        Identifier: 'expr'
                        Identifier: 'expression'
                      TypeReference
                        Identifier: ' PropertyAccessExpression'
                  Identifier: 'expression'
            Block
              ReturnStatement
                TrueKeyword
          ReturnStatement
            FalseKeyword
      FunctionDeclaration
        Identifier: ' isNarrowingTypeofOperands'
        Parameter
          Identifier: 'expr1'
          TypeReference
            Identifier: ' Expression'
        Parameter
          Identifier: ' expr2'
          TypeReference
            Identifier: ' Expression'
        Block
          ReturnStatement
            BinaryExpression
              BinaryExpression
                CallExpression
                  Identifier: ' isTypeOfExpression'
                  Identifier: 'expr1'
                AmpersandAmpersandToken
                CallExpression
                  Identifier: ' isNarrowableOperand'
                  PropertyAccessExpression
                    Identifier: 'expr1'
                    Identifier: 'expression'
              AmpersandAmpersandToken
              CallExpression
                Identifier: ' isStringLiteralLike'
                Identifier: 'expr2'
      FunctionDeclaration
        Identifier: ' isNarrowingBinaryExpression'
        Parameter
          Identifier: 'expr'
          TypeReference
            Identifier: ' BinaryExpression'
        Block
          SwitchStatement
            PropertyAccessExpression
              PropertyAccessExpression
                Identifier: 'expr'
                Identifier: 'operatorToken'
              Identifier: 'kind'
            CaseBlock
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'EqualsToken'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'BarBarEqualsToken'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'AmpersandAmpersandEqualsToken'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'QuestionQuestionEqualsToken'
                ReturnStatement
                  CallExpression
                    Identifier: ' containsNarrowableReference'
                    PropertyAccessExpression
                      Identifier: 'expr'
                      Identifier: 'left'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'EqualsEqualsToken'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ExclamationEqualsToken'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'EqualsEqualsEqualsToken'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ExclamationEqualsEqualsToken'
                ReturnStatement
                  BinaryExpression
                    BinaryExpression
                      BinaryExpression
                        BinaryExpression
                          CallExpression
                            Identifier: ' isNarrowableOperand'
                            PropertyAccessExpression
                              Identifier: 'expr'
                              Identifier: 'left'
                          BarBarToken
                          CallExpression
                            Identifier: ' isNarrowableOperand'
                            PropertyAccessExpression
                              Identifier: 'expr'
                              Identifier: 'right'
                        BarBarToken
                        CallExpression
                          Identifier: '
                    isNarrowingTypeofOperands'
                          PropertyAccessExpression
                            Identifier: 'expr'
                            Identifier: 'right'
                          PropertyAccessExpression
                            Identifier: ' expr'
                            Identifier: 'left'
                      BarBarToken
                      CallExpression
                        Identifier: ' isNarrowingTypeofOperands'
                        PropertyAccessExpression
                          Identifier: 'expr'
                          Identifier: 'left'
                        PropertyAccessExpression
                          Identifier: ' expr'
                          Identifier: 'right'
                    BarBarToken
                    ParenthesizedExpression
                      BinaryExpression
                        BinaryExpression
                          CallExpression
                            Identifier: 'isBooleanLiteral'
                            PropertyAccessExpression
                              Identifier: 'expr'
                              Identifier: 'right'
                          AmpersandAmpersandToken
                          CallExpression
                            Identifier: ' isNarrowingExpression'
                            PropertyAccessExpression
                              Identifier: 'expr'
                              Identifier: 'left'
                        BarBarToken
                        BinaryExpression
                          CallExpression
                            Identifier: ' isBooleanLiteral'
                            PropertyAccessExpression
                              Identifier: 'expr'
                              Identifier: 'left'
                          AmpersandAmpersandToken
                          CallExpression
                            Identifier: ' isNarrowingExpression'
                            PropertyAccessExpression
                              Identifier: 'expr'
                              Identifier: 'right'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'InstanceOfKeyword'
                ReturnStatement
                  CallExpression
                    Identifier: ' isNarrowableOperand'
                    PropertyAccessExpression
                      Identifier: 'expr'
                      Identifier: 'left'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'InKeyword'
                ReturnStatement
                  CallExpression
                    Identifier: ' isNarrowingExpression'
                    PropertyAccessExpression
                      Identifier: 'expr'
                      Identifier: 'right'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'CommaToken'
                ReturnStatement
                  CallExpression
                    Identifier: ' isNarrowingExpression'
                    PropertyAccessExpression
                      Identifier: 'expr'
                      Identifier: 'right'
          ReturnStatement
            FalseKeyword
      FunctionDeclaration
        Identifier: ' isNarrowableOperand'
        Parameter
          Identifier: 'expr'
          TypeReference
            Identifier: ' Expression'
        BooleanKeyword
        Block
          SwitchStatement
            PropertyAccessExpression
              Identifier: 'expr'
              Identifier: 'kind'
            CaseBlock
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ParenthesizedExpression'
                ReturnStatement
                  CallExpression
                    Identifier: ' isNarrowableOperand'
                    PropertyAccessExpression
                      ParenthesizedExpression
                        AsExpression
                          Identifier: 'expr'
                          TypeReference
                            Identifier: ' ParenthesizedExpression'
                      Identifier: 'expression'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'BinaryExpression'
                SwitchStatement
                  PropertyAccessExpression
                    PropertyAccessExpression
                      ParenthesizedExpression
                        AsExpression
                          Identifier: 'expr'
                          TypeReference
                            Identifier: ' BinaryExpression'
                      Identifier: 'operatorToken'
                    Identifier: 'kind'
                  CaseBlock
                    CaseClause
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'EqualsToken'
                      ReturnStatement
                        CallExpression
                          Identifier: ' isNarrowableOperand'
                          PropertyAccessExpression
                            ParenthesizedExpression
                              AsExpression
                                Identifier: 'expr'
                                TypeReference
                                  Identifier: ' BinaryExpression'
                            Identifier: 'left'
                    CaseClause
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'CommaToken'
                      ReturnStatement
                        CallExpression
                          Identifier: ' isNarrowableOperand'
                          PropertyAccessExpression
                            ParenthesizedExpression
                              AsExpression
                                Identifier: 'expr'
                                TypeReference
                                  Identifier: ' BinaryExpression'
                            Identifier: 'right'
          ReturnStatement
            CallExpression
              Identifier: ' containsNarrowableReference'
              Identifier: 'expr'
      FunctionDeclaration
        Identifier: ' createBranchLabel'
        Block
          ReturnStatement
            AsExpression
              CallExpression
                Identifier: ' createFlowNode'
                PropertyAccessExpression
                  Identifier: 'FlowFlags'
                  Identifier: 'BranchLabel'
                Identifier: ' /*node*/ undefined'
                Identifier: ' /*antecedent*/ undefined'
              TypeReference
                Identifier: ' FlowLabel'
      FunctionDeclaration
        Identifier: ' createLoopLabel'
        Block
          ReturnStatement
            AsExpression
              CallExpression
                Identifier: ' createFlowNode'
                PropertyAccessExpression
                  Identifier: 'FlowFlags'
                  Identifier: 'LoopLabel'
                Identifier: ' /*node*/ undefined'
                Identifier: ' /*antecedent*/ undefined'
              TypeReference
                Identifier: ' FlowLabel'
      FunctionDeclaration
        Identifier: ' createReduceLabel'
        Parameter
          Identifier: 'target'
          TypeReference
            Identifier: ' FlowLabel'
        Parameter
          Identifier: ' antecedents'
          ArrayType
            TypeReference
              Identifier: ' FlowNode'
        Parameter
          Identifier: ' antecedent'
          TypeReference
            Identifier: ' FlowNode'
        Block
          ReturnStatement
            AsExpression
              CallExpression
                Identifier: ' createFlowNode'
                PropertyAccessExpression
                  Identifier: 'FlowFlags'
                  Identifier: 'ReduceLabel'
                ObjectLiteralExpression
                  ShorthandPropertyAssignment
                    Identifier: ' target'
                  ShorthandPropertyAssignment
                    Identifier: ' antecedents'
                Identifier: ' antecedent'
              TypeReference
                Identifier: ' FlowReduceLabel'
      FunctionDeclaration
        Identifier: ' setFlowNodeReferenced'
        Parameter
          Identifier: 'flow'
          TypeReference
            Identifier: ' FlowNode'
        Block
          ExpressionStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: '
        // On first reference we set the Referenced flag, thereafter we set the Shared flag
        flow'
                Identifier: 'flags'
              BarEqualsToken
              ConditionalExpression
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: ' flow'
                    Identifier: 'flags'
                  AmpersandToken
                  PropertyAccessExpression
                    Identifier: ' FlowFlags'
                    Identifier: 'Referenced'
                QuestionToken
                PropertyAccessExpression
                  Identifier: ' FlowFlags'
                  Identifier: 'Shared'
                ColonToken
                PropertyAccessExpression
                  Identifier: ' FlowFlags'
                  Identifier: 'Referenced'
      FunctionDeclaration
        Identifier: ' addAntecedent'
        Parameter
          Identifier: 'label'
          TypeReference
            Identifier: ' FlowLabel'
        Parameter
          Identifier: ' antecedent'
          TypeReference
            Identifier: ' FlowNode'
        VoidKeyword
        Block
          IfStatement
            BinaryExpression
              PrefixUnaryExpression
                ParenthesizedExpression
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: 'antecedent'
                      Identifier: 'flags'
                    AmpersandToken
                    PropertyAccessExpression
                      Identifier: ' FlowFlags'
                      Identifier: 'Unreachable'
              AmpersandAmpersandToken
              PrefixUnaryExpression
                CallExpression
                  Identifier: 'contains'
                  PropertyAccessExpression
                    Identifier: 'label'
                    Identifier: 'antecedent'
                  Identifier: ' antecedent'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    ParenthesizedExpression
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: 'label'
                          Identifier: 'antecedent'
                        BarBarToken
                        ParenthesizedExpression
                          BinaryExpression
                            PropertyAccessExpression
                              Identifier: 'label'
                              Identifier: 'antecedent'
                            EqualsToken
                            ArrayLiteralExpression
                    Identifier: 'push'
                  Identifier: 'antecedent'
              ExpressionStatement
                CallExpression
                  Identifier: '
            setFlowNodeReferenced'
                  Identifier: 'antecedent'
      FunctionDeclaration
        Identifier: ' createFlowCondition'
        Parameter
          Identifier: 'flags'
          UnionType
            TypeReference
              QualifiedName
                Identifier: ' FlowFlags'
                Identifier: 'TrueCondition'
            TypeReference
              QualifiedName
                Identifier: ' FlowFlags'
                Identifier: 'FalseCondition'
        Parameter
          Identifier: ' antecedent'
          TypeReference
            Identifier: ' FlowNode'
        Parameter
          Identifier: ' expression'
          UnionType
            TypeReference
              Identifier: ' Expression'
            UndefinedKeyword
        Block
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'antecedent'
                Identifier: 'flags'
              AmpersandToken
              PropertyAccessExpression
                Identifier: ' FlowFlags'
                Identifier: 'Unreachable'
            Block
              ReturnStatement
                Identifier: ' antecedent'
          IfStatement
            PrefixUnaryExpression
              Identifier: 'expression'
            Block
              ReturnStatement
                ConditionalExpression
                  BinaryExpression
                    Identifier: ' flags'
                    AmpersandToken
                    PropertyAccessExpression
                      Identifier: ' FlowFlags'
                      Identifier: 'TrueCondition'
                  QuestionToken
                  Identifier: ' antecedent'
                  ColonToken
                  Identifier: ' unreachableFlow'
          IfStatement
            BinaryExpression
              BinaryExpression
                ParenthesizedExpression
                  BinaryExpression
                    BinaryExpression
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: 'expression'
                          Identifier: 'kind'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'TrueKeyword'
                      AmpersandAmpersandToken
                      BinaryExpression
                        Identifier: ' flags'
                        AmpersandToken
                        PropertyAccessExpression
                          Identifier: ' FlowFlags'
                          Identifier: 'FalseCondition'
                    BarBarToken
                    BinaryExpression
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: '
                expression'
                          Identifier: 'kind'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'FalseKeyword'
                      AmpersandAmpersandToken
                      BinaryExpression
                        Identifier: ' flags'
                        AmpersandToken
                        PropertyAccessExpression
                          Identifier: ' FlowFlags'
                          Identifier: 'TrueCondition'
                AmpersandAmpersandToken
                PrefixUnaryExpression
                  CallExpression
                    Identifier: 'isExpressionOfOptionalChainRoot'
                    Identifier: 'expression'
              AmpersandAmpersandToken
              PrefixUnaryExpression
                CallExpression
                  Identifier: 'isNullishCoalesce'
                  PropertyAccessExpression
                    Identifier: 'expression'
                    Identifier: 'parent'
            Block
              ReturnStatement
                Identifier: ' unreachableFlow'
          IfStatement
            PrefixUnaryExpression
              CallExpression
                Identifier: 'isNarrowingExpression'
                Identifier: 'expression'
            Block
              ReturnStatement
                Identifier: ' antecedent'
          ExpressionStatement
            CallExpression
              Identifier: '
        setFlowNodeReferenced'
              Identifier: 'antecedent'
          ReturnStatement
            AsExpression
              CallExpression
                Identifier: ' createFlowNode'
                Identifier: 'flags'
                Identifier: ' expression'
                Identifier: ' antecedent'
              TypeReference
                Identifier: ' FlowCondition'
      FunctionDeclaration
        Identifier: ' createFlowSwitchClause'
        Parameter
          Identifier: 'antecedent'
          TypeReference
            Identifier: ' FlowNode'
        Parameter
          Identifier: ' switchStatement'
          TypeReference
            Identifier: ' SwitchStatement'
        Parameter
          Identifier: ' clauseStart'
          NumberKeyword
        Parameter
          Identifier: ' clauseEnd'
          NumberKeyword
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        setFlowNodeReferenced'
              Identifier: 'antecedent'
          ReturnStatement
            AsExpression
              CallExpression
                Identifier: ' createFlowNode'
                PropertyAccessExpression
                  Identifier: 'FlowFlags'
                  Identifier: 'SwitchClause'
                ObjectLiteralExpression
                  ShorthandPropertyAssignment
                    Identifier: ' switchStatement'
                  ShorthandPropertyAssignment
                    Identifier: ' clauseStart'
                  ShorthandPropertyAssignment
                    Identifier: ' clauseEnd'
                Identifier: ' antecedent'
              TypeReference
                Identifier: ' FlowSwitchClause'
      FunctionDeclaration
        Identifier: ' createFlowMutation'
        Parameter
          Identifier: 'flags'
          UnionType
            TypeReference
              QualifiedName
                Identifier: ' FlowFlags'
                Identifier: 'Assignment'
            TypeReference
              QualifiedName
                Identifier: ' FlowFlags'
                Identifier: 'ArrayMutation'
        Parameter
          Identifier: ' antecedent'
          TypeReference
            Identifier: ' FlowNode'
        Parameter
          Identifier: ' node'
          UnionType
            TypeReference
              Identifier: ' Expression'
            TypeReference
              Identifier: ' VariableDeclaration'
            TypeReference
              Identifier: ' ArrayBindingElement'
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        setFlowNodeReferenced'
              Identifier: 'antecedent'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        hasFlowEffects'
              EqualsToken
              TrueKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' result'
                AsExpression
                  CallExpression
                    Identifier: ' createFlowNode'
                    Identifier: 'flags'
                    Identifier: ' node'
                    Identifier: ' antecedent'
                  UnionType
                    TypeReference
                      Identifier: ' FlowAssignment'
                    TypeReference
                      Identifier: ' FlowArrayMutation'
          IfStatement
            Identifier: 'currentExceptionTarget'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            addAntecedent'
                  Identifier: 'currentExceptionTarget'
                  Identifier: ' result'
          ReturnStatement
            Identifier: ' result'
      FunctionDeclaration
        Identifier: ' createFlowCall'
        Parameter
          Identifier: 'antecedent'
          TypeReference
            Identifier: ' FlowNode'
        Parameter
          Identifier: ' node'
          TypeReference
            Identifier: ' CallExpression'
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        setFlowNodeReferenced'
              Identifier: 'antecedent'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        hasFlowEffects'
              EqualsToken
              TrueKeyword
          ReturnStatement
            AsExpression
              CallExpression
                Identifier: ' createFlowNode'
                PropertyAccessExpression
                  Identifier: 'FlowFlags'
                  Identifier: 'Call'
                Identifier: ' node'
                Identifier: ' antecedent'
              TypeReference
                Identifier: ' FlowCall'
      FunctionDeclaration
        Identifier: ' finishFlowLabel'
        Parameter
          Identifier: 'flow'
          TypeReference
            Identifier: ' FlowLabel'
        TypeReference
          Identifier: ' FlowNode'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' antecedents'
                PropertyAccessExpression
                  Identifier: ' flow'
                  Identifier: 'antecedent'
          IfStatement
            PrefixUnaryExpression
              Identifier: 'antecedents'
            Block
              ReturnStatement
                Identifier: ' unreachableFlow'
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'antecedents'
                Identifier: 'length'
              EqualsEqualsEqualsToken
              NumericLiteral
            Block
              ReturnStatement
                ElementAccessExpression
                  Identifier: ' antecedents'
                  NumericLiteral
          ReturnStatement
            Identifier: ' flow'
      FunctionDeclaration
        Identifier: ' isStatementCondition'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' parent'
                PropertyAccessExpression
                  Identifier: ' node'
                  Identifier: 'parent'
          SwitchStatement
            PropertyAccessExpression
              Identifier: 'parent'
              Identifier: 'kind'
            CaseBlock
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'IfStatement'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'WhileStatement'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'DoStatement'
                ReturnStatement
                  BinaryExpression
                    PropertyAccessExpression
                      ParenthesizedExpression
                        AsExpression
                          Identifier: 'parent'
                          UnionType
                            TypeReference
                              Identifier: ' IfStatement'
                            TypeReference
                              Identifier: ' WhileStatement'
                            TypeReference
                              Identifier: ' DoStatement'
                      Identifier: 'expression'
                    EqualsEqualsEqualsToken
                    Identifier: ' node'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ForStatement'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ConditionalExpression'
                ReturnStatement
                  BinaryExpression
                    PropertyAccessExpression
                      ParenthesizedExpression
                        AsExpression
                          Identifier: 'parent'
                          UnionType
                            TypeReference
                              Identifier: ' ForStatement'
                            TypeReference
                              Identifier: ' ConditionalExpression'
                      Identifier: 'condition'
                    EqualsEqualsEqualsToken
                    Identifier: ' node'
          ReturnStatement
            FalseKeyword
      FunctionDeclaration
        Identifier: ' isLogicalExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        Block
          WhileStatement
            TrueKeyword
            Block
              IfStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'kind'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'ParenthesizedExpression'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                node'
                      EqualsToken
                      PropertyAccessExpression
                        ParenthesizedExpression
                          AsExpression
                            Identifier: 'node'
                            TypeReference
                              Identifier: ' ParenthesizedExpression'
                        Identifier: 'expression'
                IfStatement
                  BinaryExpression
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'kind'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'PrefixUnaryExpression'
                    AmpersandAmpersandToken
                    BinaryExpression
                      PropertyAccessExpression
                        ParenthesizedExpression
                          AsExpression
                            Identifier: 'node'
                            TypeReference
                              Identifier: ' PrefixUnaryExpression'
                        Identifier: 'operator'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'ExclamationToken'
                  Block
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                node'
                        EqualsToken
                        PropertyAccessExpression
                          ParenthesizedExpression
                            AsExpression
                              Identifier: 'node'
                              TypeReference
                                Identifier: ' PrefixUnaryExpression'
                          Identifier: 'operand'
                  Block
                    ReturnStatement
                      CallExpression
                        Identifier: ' isLogicalOrCoalescingBinaryExpression'
                        Identifier: 'node'
      FunctionDeclaration
        Identifier: ' isLogicalAssignmentExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        Block
          ReturnStatement
            CallExpression
              Identifier: ' isLogicalOrCoalescingAssignmentExpression'
              CallExpression
                Identifier: 'skipParentheses'
                Identifier: 'node'
      FunctionDeclaration
        Identifier: ' isTopLevelLogicalExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        BooleanKeyword
        Block
          WhileStatement
            BinaryExpression
              CallExpression
                Identifier: '
            isParenthesizedExpression'
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'parent'
              BarBarToken
              BinaryExpression
                CallExpression
                  Identifier: '
            isPrefixUnaryExpression'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'parent'
                AmpersandAmpersandToken
                BinaryExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: ' node'
                      Identifier: 'parent'
                    Identifier: 'operator'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'ExclamationToken'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            node'
                  EqualsToken
                  PropertyAccessExpression
                    Identifier: ' node'
                    Identifier: 'parent'
          ReturnStatement
            BinaryExpression
              BinaryExpression
                PrefixUnaryExpression
                  CallExpression
                    Identifier: 'isStatementCondition'
                    Identifier: 'node'
                AmpersandAmpersandToken
                PrefixUnaryExpression
                  CallExpression
                    Identifier: 'isLogicalExpression'
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'parent'
              AmpersandAmpersandToken
              PrefixUnaryExpression
                ParenthesizedExpression
                  BinaryExpression
                    CallExpression
                      Identifier: 'isOptionalChain'
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'parent'
                    AmpersandAmpersandToken
                    BinaryExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: ' node'
                          Identifier: 'parent'
                        Identifier: 'expression'
                      EqualsEqualsEqualsToken
                      Identifier: ' node'
      FunctionDeclaration
        Identifier: ' doWithConditionalBranches'
        TypeParameter
          Identifier: 'T'
        Parameter
          Identifier: 'action'
          FunctionType
            Parameter
              Identifier: 'value'
              TypeReference
                Identifier: ' T'
            VoidKeyword
        Parameter
          Identifier: ' value'
          TypeReference
            Identifier: ' T'
        Parameter
          Identifier: ' trueTarget'
          TypeReference
            Identifier: ' FlowLabel'
        Parameter
          Identifier: ' falseTarget'
          TypeReference
            Identifier: ' FlowLabel'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' savedTrueTarget'
                Identifier: ' currentTrueTarget'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' savedFalseTarget'
                Identifier: ' currentFalseTarget'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentTrueTarget'
              EqualsToken
              Identifier: ' trueTarget'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentFalseTarget'
              EqualsToken
              Identifier: ' falseTarget'
          ExpressionStatement
            CallExpression
              Identifier: '
        action'
              Identifier: 'value'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentTrueTarget'
              EqualsToken
              Identifier: ' savedTrueTarget'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentFalseTarget'
              EqualsToken
              Identifier: ' savedFalseTarget'
      FunctionDeclaration
        Identifier: ' bindCondition'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' Expression'
            UndefinedKeyword
        Parameter
          Identifier: ' trueTarget'
          TypeReference
            Identifier: ' FlowLabel'
        Parameter
          Identifier: ' falseTarget'
          TypeReference
            Identifier: ' FlowLabel'
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        doWithConditionalBranches'
              Identifier: 'bind'
              Identifier: ' node'
              Identifier: ' trueTarget'
              Identifier: ' falseTarget'
          IfStatement
            BinaryExpression
              PrefixUnaryExpression
                Identifier: 'node'
              BarBarToken
              BinaryExpression
                BinaryExpression
                  PrefixUnaryExpression
                    CallExpression
                      Identifier: 'isLogicalAssignmentExpression'
                      Identifier: 'node'
                  AmpersandAmpersandToken
                  PrefixUnaryExpression
                    CallExpression
                      Identifier: 'isLogicalExpression'
                      Identifier: 'node'
                AmpersandAmpersandToken
                PrefixUnaryExpression
                  ParenthesizedExpression
                    BinaryExpression
                      CallExpression
                        Identifier: 'isOptionalChain'
                        Identifier: 'node'
                      AmpersandAmpersandToken
                      CallExpression
                        Identifier: ' isOutermostOptionalChain'
                        Identifier: 'node'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            addAntecedent'
                  Identifier: 'trueTarget'
                  CallExpression
                    Identifier: ' createFlowCondition'
                    PropertyAccessExpression
                      Identifier: 'FlowFlags'
                      Identifier: 'TrueCondition'
                    Identifier: ' currentFlow'
                    Identifier: ' node'
              ExpressionStatement
                CallExpression
                  Identifier: '
            addAntecedent'
                  Identifier: 'falseTarget'
                  CallExpression
                    Identifier: ' createFlowCondition'
                    PropertyAccessExpression
                      Identifier: 'FlowFlags'
                      Identifier: 'FalseCondition'
                    Identifier: ' currentFlow'
                    Identifier: ' node'
      FunctionDeclaration
        Identifier: ' bindIterativeStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Statement'
        Parameter
          Identifier: ' breakTarget'
          TypeReference
            Identifier: ' FlowLabel'
        Parameter
          Identifier: ' continueTarget'
          TypeReference
            Identifier: ' FlowLabel'
        VoidKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveBreakTarget'
                Identifier: ' currentBreakTarget'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveContinueTarget'
                Identifier: ' currentContinueTarget'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentBreakTarget'
              EqualsToken
              Identifier: ' breakTarget'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentContinueTarget'
              EqualsToken
              Identifier: ' continueTarget'
          ExpressionStatement
            CallExpression
              Identifier: '
        bind'
              Identifier: 'node'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentBreakTarget'
              EqualsToken
              Identifier: ' saveBreakTarget'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentContinueTarget'
              EqualsToken
              Identifier: ' saveContinueTarget'
      FunctionDeclaration
        Identifier: ' setContinueTarget'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' target'
          TypeReference
            Identifier: ' FlowLabel'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' label'
                Identifier: ' activeLabelList'
          WhileStatement
            BinaryExpression
              Identifier: 'label'
              AmpersandAmpersandToken
              BinaryExpression
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: ' node'
                    Identifier: 'parent'
                  Identifier: 'kind'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'LabeledStatement'
            Block
              ExpressionStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: '
            label'
                    Identifier: 'continueTarget'
                  EqualsToken
                  Identifier: ' target'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            label'
                  EqualsToken
                  PropertyAccessExpression
                    Identifier: ' label'
                    Identifier: 'next'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            node'
                  EqualsToken
                  PropertyAccessExpression
                    Identifier: ' node'
                    Identifier: 'parent'
          ReturnStatement
            Identifier: ' target'
      FunctionDeclaration
        Identifier: ' bindWhileStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' WhileStatement'
        VoidKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' preWhileLabel'
                CallExpression
                  Identifier: ' setContinueTarget'
                  Identifier: 'node'
                  CallExpression
                    Identifier: ' createLoopLabel'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' preBodyLabel'
                CallExpression
                  Identifier: ' createBranchLabel'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' postWhileLabel'
                CallExpression
                  Identifier: ' createBranchLabel'
          ExpressionStatement
            CallExpression
              Identifier: '
        addAntecedent'
              Identifier: 'preWhileLabel'
              Identifier: ' currentFlow'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentFlow'
              EqualsToken
              Identifier: ' preWhileLabel'
          ExpressionStatement
            CallExpression
              Identifier: '
        bindCondition'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'expression'
              Identifier: ' preBodyLabel'
              Identifier: ' postWhileLabel'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentFlow'
              EqualsToken
              CallExpression
                Identifier: ' finishFlowLabel'
                Identifier: 'preBodyLabel'
          ExpressionStatement
            CallExpression
              Identifier: '
        bindIterativeStatement'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'statement'
              Identifier: ' postWhileLabel'
              Identifier: ' preWhileLabel'
          ExpressionStatement
            CallExpression
              Identifier: '
        addAntecedent'
              Identifier: 'preWhileLabel'
              Identifier: ' currentFlow'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentFlow'
              EqualsToken
              CallExpression
                Identifier: ' finishFlowLabel'
                Identifier: 'postWhileLabel'
      FunctionDeclaration
        Identifier: ' bindDoStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' DoStatement'
        VoidKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' preDoLabel'
                CallExpression
                  Identifier: ' createLoopLabel'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' preConditionLabel'
                CallExpression
                  Identifier: ' setContinueTarget'
                  Identifier: 'node'
                  CallExpression
                    Identifier: ' createBranchLabel'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' postDoLabel'
                CallExpression
                  Identifier: ' createBranchLabel'
          ExpressionStatement
            CallExpression
              Identifier: '
        addAntecedent'
              Identifier: 'preDoLabel'
              Identifier: ' currentFlow'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentFlow'
              EqualsToken
              Identifier: ' preDoLabel'
          ExpressionStatement
            CallExpression
              Identifier: '
        bindIterativeStatement'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'statement'
              Identifier: ' postDoLabel'
              Identifier: ' preConditionLabel'
          ExpressionStatement
            CallExpression
              Identifier: '
        addAntecedent'
              Identifier: 'preConditionLabel'
              Identifier: ' currentFlow'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentFlow'
              EqualsToken
              CallExpression
                Identifier: ' finishFlowLabel'
                Identifier: 'preConditionLabel'
          ExpressionStatement
            CallExpression
              Identifier: '
        bindCondition'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'expression'
              Identifier: ' preDoLabel'
              Identifier: ' postDoLabel'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentFlow'
              EqualsToken
              CallExpression
                Identifier: ' finishFlowLabel'
                Identifier: 'postDoLabel'
      FunctionDeclaration
        Identifier: ' bindForStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' ForStatement'
        VoidKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' preLoopLabel'
                CallExpression
                  Identifier: ' setContinueTarget'
                  Identifier: 'node'
                  CallExpression
                    Identifier: ' createLoopLabel'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' preBodyLabel'
                CallExpression
                  Identifier: ' createBranchLabel'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' postLoopLabel'
                CallExpression
                  Identifier: ' createBranchLabel'
          ExpressionStatement
            CallExpression
              Identifier: '
        bind'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'initializer'
          ExpressionStatement
            CallExpression
              Identifier: '
        addAntecedent'
              Identifier: 'preLoopLabel'
              Identifier: ' currentFlow'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentFlow'
              EqualsToken
              Identifier: ' preLoopLabel'
          ExpressionStatement
            CallExpression
              Identifier: '
        bindCondition'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'condition'
              Identifier: ' preBodyLabel'
              Identifier: ' postLoopLabel'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentFlow'
              EqualsToken
              CallExpression
                Identifier: ' finishFlowLabel'
                Identifier: 'preBodyLabel'
          ExpressionStatement
            CallExpression
              Identifier: '
        bindIterativeStatement'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'statement'
              Identifier: ' postLoopLabel'
              Identifier: ' preLoopLabel'
          ExpressionStatement
            CallExpression
              Identifier: '
        bind'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'incrementor'
          ExpressionStatement
            CallExpression
              Identifier: '
        addAntecedent'
              Identifier: 'preLoopLabel'
              Identifier: ' currentFlow'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentFlow'
              EqualsToken
              CallExpression
                Identifier: ' finishFlowLabel'
                Identifier: 'postLoopLabel'
      FunctionDeclaration
        Identifier: ' bindForInOrForOfStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' ForInOrOfStatement'
        VoidKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' preLoopLabel'
                CallExpression
                  Identifier: ' setContinueTarget'
                  Identifier: 'node'
                  CallExpression
                    Identifier: ' createLoopLabel'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' postLoopLabel'
                CallExpression
                  Identifier: ' createBranchLabel'
          ExpressionStatement
            CallExpression
              Identifier: '
        bind'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'expression'
          ExpressionStatement
            CallExpression
              Identifier: '
        addAntecedent'
              Identifier: 'preLoopLabel'
              Identifier: ' currentFlow'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentFlow'
              EqualsToken
              Identifier: ' preLoopLabel'
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'kind'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'ForOfStatement'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            bind'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'awaitModifier'
          ExpressionStatement
            CallExpression
              Identifier: '
        addAntecedent'
              Identifier: 'postLoopLabel'
              Identifier: ' currentFlow'
          ExpressionStatement
            CallExpression
              Identifier: '
        bind'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'initializer'
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'initializer'
                Identifier: 'kind'
              ExclamationEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'VariableDeclarationList'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindAssignmentTargetFlow'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'initializer'
          ExpressionStatement
            CallExpression
              Identifier: '
        bindIterativeStatement'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'statement'
              Identifier: ' postLoopLabel'
              Identifier: ' preLoopLabel'
          ExpressionStatement
            CallExpression
              Identifier: '
        addAntecedent'
              Identifier: 'preLoopLabel'
              Identifier: ' currentFlow'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentFlow'
              EqualsToken
              CallExpression
                Identifier: ' finishFlowLabel'
                Identifier: 'postLoopLabel'
      FunctionDeclaration
        Identifier: ' bindIfStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' IfStatement'
        VoidKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' thenLabel'
                CallExpression
                  Identifier: ' createBranchLabel'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' elseLabel'
                CallExpression
                  Identifier: ' createBranchLabel'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' postIfLabel'
                CallExpression
                  Identifier: ' createBranchLabel'
          ExpressionStatement
            CallExpression
              Identifier: '
        bindCondition'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'expression'
              Identifier: ' thenLabel'
              Identifier: ' elseLabel'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentFlow'
              EqualsToken
              CallExpression
                Identifier: ' finishFlowLabel'
                Identifier: 'thenLabel'
          ExpressionStatement
            CallExpression
              Identifier: '
        bind'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'thenStatement'
          ExpressionStatement
            CallExpression
              Identifier: '
        addAntecedent'
              Identifier: 'postIfLabel'
              Identifier: ' currentFlow'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentFlow'
              EqualsToken
              CallExpression
                Identifier: ' finishFlowLabel'
                Identifier: 'elseLabel'
          ExpressionStatement
            CallExpression
              Identifier: '
        bind'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'elseStatement'
          ExpressionStatement
            CallExpression
              Identifier: '
        addAntecedent'
              Identifier: 'postIfLabel'
              Identifier: ' currentFlow'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentFlow'
              EqualsToken
              CallExpression
                Identifier: ' finishFlowLabel'
                Identifier: 'postIfLabel'
      FunctionDeclaration
        Identifier: ' bindReturnOrThrow'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' ReturnStatement'
            TypeReference
              Identifier: ' ThrowStatement'
        VoidKeyword
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        bind'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'expression'
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'kind'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'ReturnStatement'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            hasExplicitReturn'
                  EqualsToken
                  TrueKeyword
              IfStatement
                Identifier: 'currentReturnTarget'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                addAntecedent'
                      Identifier: 'currentReturnTarget'
                      Identifier: ' currentFlow'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentFlow'
              EqualsToken
              Identifier: ' unreachableFlow'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        hasFlowEffects'
              EqualsToken
              TrueKeyword
      FunctionDeclaration
        Identifier: ' findActiveLabel'
        Parameter
          Identifier: 'name'
          TypeReference
            Identifier: ' __String'
        Block
          ForStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' label'
                Identifier: ' activeLabelList'
            Identifier: ' label'
            BinaryExpression
              Identifier: ' label'
              EqualsToken
              PropertyAccessExpression
                Identifier: ' label'
                Identifier: 'next'
            Block
              IfStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: 'label'
                    Identifier: 'name'
                  EqualsEqualsEqualsToken
                  Identifier: ' name'
                Block
                  ReturnStatement
                    Identifier: ' label'
          ReturnStatement
            Identifier: ' undefined'
      FunctionDeclaration
        Identifier: ' bindBreakOrContinueFlow'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' BreakOrContinueStatement'
        Parameter
          Identifier: ' breakTarget'
          UnionType
            TypeReference
              Identifier: ' FlowLabel'
            UndefinedKeyword
        Parameter
          Identifier: ' continueTarget'
          UnionType
            TypeReference
              Identifier: ' FlowLabel'
            UndefinedKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' flowLabel'
                ConditionalExpression
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: ' node'
                      Identifier: 'kind'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'BreakStatement'
                  QuestionToken
                  Identifier: ' breakTarget'
                  ColonToken
                  Identifier: ' continueTarget'
          IfStatement
            Identifier: 'flowLabel'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            addAntecedent'
                  Identifier: 'flowLabel'
                  Identifier: ' currentFlow'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            currentFlow'
                  EqualsToken
                  Identifier: ' unreachableFlow'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            hasFlowEffects'
                  EqualsToken
                  TrueKeyword
      FunctionDeclaration
        Identifier: ' bindBreakOrContinueStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' BreakOrContinueStatement'
        VoidKeyword
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        bind'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'label'
          IfStatement
            PropertyAccessExpression
              Identifier: 'node'
              Identifier: 'label'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' activeLabel'
                    CallExpression
                      Identifier: ' findActiveLabel'
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: 'node'
                          Identifier: 'label'
                        Identifier: 'escapedText'
              IfStatement
                Identifier: 'activeLabel'
                Block
                  ExpressionStatement
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: '
                activeLabel'
                        Identifier: 'referenced'
                      EqualsToken
                      TrueKeyword
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                bindBreakOrContinueFlow'
                      Identifier: 'node'
                      PropertyAccessExpression
                        Identifier: ' activeLabel'
                        Identifier: 'breakTarget'
                      PropertyAccessExpression
                        Identifier: ' activeLabel'
                        Identifier: 'continueTarget'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindBreakOrContinueFlow'
                  Identifier: 'node'
                  Identifier: ' currentBreakTarget'
                  Identifier: ' currentContinueTarget'
      FunctionDeclaration
        Identifier: ' bindTryStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' TryStatement'
        VoidKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveReturnTarget'
                Identifier: ' currentReturnTarget'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveExceptionTarget'
                Identifier: ' currentExceptionTarget'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' normalExitLabel'
                CallExpression
                  Identifier: ' createBranchLabel'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' returnLabel'
                CallExpression
                  Identifier: ' createBranchLabel'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' exceptionLabel'
                CallExpression
                  Identifier: ' createBranchLabel'
          IfStatement
            PropertyAccessExpression
              Identifier: 'node'
              Identifier: 'finallyBlock'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            currentReturnTarget'
                  EqualsToken
                  Identifier: ' returnLabel'
          ExpressionStatement
            CallExpression
              Identifier: '
        addAntecedent'
              Identifier: 'exceptionLabel'
              Identifier: ' currentFlow'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentExceptionTarget'
              EqualsToken
              Identifier: ' exceptionLabel'
          ExpressionStatement
            CallExpression
              Identifier: '
        bind'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'tryBlock'
          ExpressionStatement
            CallExpression
              Identifier: '
        addAntecedent'
              Identifier: 'normalExitLabel'
              Identifier: ' currentFlow'
          IfStatement
            PropertyAccessExpression
              Identifier: 'node'
              Identifier: 'catchClause'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            // Start of catch clause is the target of exceptions from try block.
            currentFlow'
                  EqualsToken
                  CallExpression
                    Identifier: ' finishFlowLabel'
                    Identifier: 'exceptionLabel'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            // The currentExceptionTarget now represents control flows from exceptions in the catch clause.
            // Effectively, in a try-catch-finally, if an exception occurs in the try block, the catch block
            // acts like a second try block.
            exceptionLabel'
                  EqualsToken
                  CallExpression
                    Identifier: ' createBranchLabel'
              ExpressionStatement
                CallExpression
                  Identifier: '
            addAntecedent'
                  Identifier: 'exceptionLabel'
                  Identifier: ' currentFlow'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            currentExceptionTarget'
                  EqualsToken
                  Identifier: ' exceptionLabel'
              ExpressionStatement
                CallExpression
                  Identifier: '
            bind'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'catchClause'
              ExpressionStatement
                CallExpression
                  Identifier: '
            addAntecedent'
                  Identifier: 'normalExitLabel'
                  Identifier: ' currentFlow'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentReturnTarget'
              EqualsToken
              Identifier: ' saveReturnTarget'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentExceptionTarget'
              EqualsToken
              Identifier: ' saveExceptionTarget'
          IfStatement
            PropertyAccessExpression
              Identifier: 'node'
              Identifier: 'finallyBlock'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' finallyLabel'
                    CallExpression
                      Identifier: ' createBranchLabel'
              ExpressionStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: '
            finallyLabel'
                    Identifier: 'antecedent'
                  EqualsToken
                  CallExpression
                    Identifier: ' concatenate'
                    CallExpression
                      Identifier: 'concatenate'
                      PropertyAccessExpression
                        Identifier: 'normalExitLabel'
                        Identifier: 'antecedent'
                      PropertyAccessExpression
                        Identifier: ' exceptionLabel'
                        Identifier: 'antecedent'
                    PropertyAccessExpression
                      Identifier: ' returnLabel'
                      Identifier: 'antecedent'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            currentFlow'
                  EqualsToken
                  Identifier: ' finallyLabel'
              ExpressionStatement
                CallExpression
                  Identifier: '
            bind'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'finallyBlock'
              IfStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: 'currentFlow'
                    Identifier: 'flags'
                  AmpersandToken
                  PropertyAccessExpression
                    Identifier: ' FlowFlags'
                    Identifier: 'Unreachable'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                // If the end of the finally block is unreachable, the end of the entire try statement is unreachable.
                currentFlow'
                      EqualsToken
                      Identifier: ' unreachableFlow'
                Block
                  IfStatement
                    BinaryExpression
                      Identifier: 'currentReturnTarget'
                      AmpersandAmpersandToken
                      PropertyAccessExpression
                        Identifier: ' returnLabel'
                        Identifier: 'antecedent'
                    Block
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    addAntecedent'
                          Identifier: 'currentReturnTarget'
                          CallExpression
                            Identifier: ' createReduceLabel'
                            Identifier: 'finallyLabel'
                            PropertyAccessExpression
                              Identifier: ' returnLabel'
                              Identifier: 'antecedent'
                            Identifier: ' currentFlow'
                  IfStatement
                    BinaryExpression
                      Identifier: 'currentExceptionTarget'
                      AmpersandAmpersandToken
                      PropertyAccessExpression
                        Identifier: ' exceptionLabel'
                        Identifier: 'antecedent'
                    Block
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    addAntecedent'
                          Identifier: 'currentExceptionTarget'
                          CallExpression
                            Identifier: ' createReduceLabel'
                            Identifier: 'finallyLabel'
                            PropertyAccessExpression
                              Identifier: ' exceptionLabel'
                              Identifier: 'antecedent'
                            Identifier: ' currentFlow'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                // If the end of the finally block is reachable, but the end of the try and catch blocks are not,
                // convert the current flow to unreachable. For example, 'try { return 1; } finally { ... }' should
                // result in an unreachable current control flow.
                currentFlow'
                      EqualsToken
                      ConditionalExpression
                        PropertyAccessExpression
                          Identifier: ' normalExitLabel'
                          Identifier: 'antecedent'
                        QuestionToken
                        CallExpression
                          Identifier: ' createReduceLabel'
                          Identifier: 'finallyLabel'
                          PropertyAccessExpression
                            Identifier: ' normalExitLabel'
                            Identifier: 'antecedent'
                          Identifier: ' currentFlow'
                        ColonToken
                        Identifier: ' unreachableFlow'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            currentFlow'
                  EqualsToken
                  CallExpression
                    Identifier: ' finishFlowLabel'
                    Identifier: 'normalExitLabel'
      FunctionDeclaration
        Identifier: ' bindSwitchStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' SwitchStatement'
        VoidKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' postSwitchLabel'
                CallExpression
                  Identifier: ' createBranchLabel'
          ExpressionStatement
            CallExpression
              Identifier: '
        bind'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'expression'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveBreakTarget'
                Identifier: ' currentBreakTarget'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' savePreSwitchCaseFlow'
                Identifier: ' preSwitchCaseFlow'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentBreakTarget'
              EqualsToken
              Identifier: ' postSwitchLabel'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        preSwitchCaseFlow'
              EqualsToken
              Identifier: ' currentFlow'
          ExpressionStatement
            CallExpression
              Identifier: '
        bind'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'caseBlock'
          ExpressionStatement
            CallExpression
              Identifier: '
        addAntecedent'
              Identifier: 'postSwitchLabel'
              Identifier: ' currentFlow'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' hasDefault'
                CallExpression
                  Identifier: ' forEach'
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'caseBlock'
                    Identifier: 'clauses'
                  ArrowFunction
                    Parameter
                      Identifier: ' c'
                    EqualsGreaterThanToken
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: ' c'
                        Identifier: 'kind'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'DefaultClause'
          ExpressionStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: '
        // We mark a switch statement as possibly exhaustive if it has no default clause and if all
        // case clauses have unreachable end points (e.g. they all return). Note, we no longer need
        // this property in control flow analysis, it's there only for backwards compatibility.
        node'
                Identifier: 'possiblyExhaustive'
              EqualsToken
              BinaryExpression
                PrefixUnaryExpression
                  Identifier: 'hasDefault'
                AmpersandAmpersandToken
                PrefixUnaryExpression
                  PropertyAccessExpression
                    Identifier: 'postSwitchLabel'
                    Identifier: 'antecedent'
          IfStatement
            PrefixUnaryExpression
              Identifier: 'hasDefault'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            addAntecedent'
                  Identifier: 'postSwitchLabel'
                  CallExpression
                    Identifier: ' createFlowSwitchClause'
                    Identifier: 'preSwitchCaseFlow'
                    Identifier: ' node'
                    NumericLiteral
                    NumericLiteral
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentBreakTarget'
              EqualsToken
              Identifier: ' saveBreakTarget'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        preSwitchCaseFlow'
              EqualsToken
              Identifier: ' savePreSwitchCaseFlow'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentFlow'
              EqualsToken
              CallExpression
                Identifier: ' finishFlowLabel'
                Identifier: 'postSwitchLabel'
      FunctionDeclaration
        Identifier: ' bindCaseBlock'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' CaseBlock'
        VoidKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' clauses'
                PropertyAccessExpression
                  Identifier: ' node'
                  Identifier: 'clauses'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' isNarrowingSwitch'
                BinaryExpression
                  BinaryExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: ' node'
                          Identifier: 'parent'
                        Identifier: 'expression'
                      Identifier: 'kind'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'TrueKeyword'
                  BarBarToken
                  CallExpression
                    Identifier: ' isNarrowingExpression'
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'parent'
                      Identifier: 'expression'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' fallthroughFlow'
                TypeReference
                  Identifier: ' FlowNode'
                Identifier: ' unreachableFlow'
          ForStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' i'
                NumericLiteral
            BinaryExpression
              Identifier: ' i'
              LessThanToken
              PropertyAccessExpression
                Identifier: ' clauses'
                Identifier: 'length'
            PostfixUnaryExpression
              Identifier: ' i'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' clauseStart'
                    Identifier: ' i'
              WhileStatement
                BinaryExpression
                  PrefixUnaryExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        ElementAccessExpression
                          Identifier: 'clauses'
                          Identifier: 'i'
                        Identifier: 'statements'
                      Identifier: 'length'
                  AmpersandAmpersandToken
                  BinaryExpression
                    BinaryExpression
                      Identifier: ' i'
                      PlusToken
                      NumericLiteral
                    LessThanToken
                    PropertyAccessExpression
                      Identifier: ' clauses'
                      Identifier: 'length'
                Block
                  IfStatement
                    BinaryExpression
                      Identifier: 'fallthroughFlow'
                      EqualsEqualsEqualsToken
                      Identifier: ' unreachableFlow'
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    currentFlow'
                          EqualsToken
                          NonNullExpression
                            Identifier: ' preSwitchCaseFlow'
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                bind'
                      ElementAccessExpression
                        Identifier: 'clauses'
                        Identifier: 'i'
                  ExpressionStatement
                    PostfixUnaryExpression
                      Identifier: '
                i'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' preCaseLabel'
                    CallExpression
                      Identifier: ' createBranchLabel'
              ExpressionStatement
                CallExpression
                  Identifier: '
            addAntecedent'
                  Identifier: 'preCaseLabel'
                  ConditionalExpression
                    Identifier: ' isNarrowingSwitch'
                    QuestionToken
                    CallExpression
                      Identifier: ' createFlowSwitchClause'
                      NonNullExpression
                        Identifier: 'preSwitchCaseFlow'
                      PropertyAccessExpression
                        Identifier: ' node'
                        Identifier: 'parent'
                      Identifier: ' clauseStart'
                      BinaryExpression
                        Identifier: ' i'
                        PlusToken
                        NumericLiteral
                    ColonToken
                    NonNullExpression
                      Identifier: ' preSwitchCaseFlow'
              ExpressionStatement
                CallExpression
                  Identifier: '
            addAntecedent'
                  Identifier: 'preCaseLabel'
                  Identifier: ' fallthroughFlow'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            currentFlow'
                  EqualsToken
                  CallExpression
                    Identifier: ' finishFlowLabel'
                    Identifier: 'preCaseLabel'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' clause'
                    ElementAccessExpression
                      Identifier: ' clauses'
                      Identifier: 'i'
              ExpressionStatement
                CallExpression
                  Identifier: '
            bind'
                  Identifier: 'clause'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            fallthroughFlow'
                  EqualsToken
                  Identifier: ' currentFlow'
              IfStatement
                BinaryExpression
                  BinaryExpression
                    PrefixUnaryExpression
                      ParenthesizedExpression
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: 'currentFlow'
                            Identifier: 'flags'
                          AmpersandToken
                          PropertyAccessExpression
                            Identifier: ' FlowFlags'
                            Identifier: 'Unreachable'
                    AmpersandAmpersandToken
                    BinaryExpression
                      Identifier: ' i'
                      ExclamationEqualsEqualsToken
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: ' clauses'
                          Identifier: 'length'
                        MinusToken
                        NumericLiteral
                  AmpersandAmpersandToken
                  PropertyAccessExpression
                    Identifier: ' options'
                    Identifier: 'noFallthroughCasesInSwitch'
                Block
                  ExpressionStatement
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: '
                clause'
                        Identifier: 'fallthroughFlowNode'
                      EqualsToken
                      Identifier: ' currentFlow'
      FunctionDeclaration
        Identifier: ' bindCaseClause'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' CaseClause'
        VoidKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveCurrentFlow'
                Identifier: ' currentFlow'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentFlow'
              EqualsToken
              NonNullExpression
                Identifier: ' preSwitchCaseFlow'
          ExpressionStatement
            CallExpression
              Identifier: '
        bind'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'expression'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentFlow'
              EqualsToken
              Identifier: ' saveCurrentFlow'
          ExpressionStatement
            CallExpression
              Identifier: '
        bindEach'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'statements'
      FunctionDeclaration
        Identifier: ' bindExpressionStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' ExpressionStatement'
        VoidKeyword
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        bind'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'expression'
          ExpressionStatement
            CallExpression
              Identifier: '
        maybeBindExpressionFlowIfCall'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'expression'
      FunctionDeclaration
        Identifier: ' maybeBindExpressionFlowIfCall'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Expression'
        Block
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'kind'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'CallExpression'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' call'
                    AsExpression
                      Identifier: ' node'
                      TypeReference
                        Identifier: ' CallExpression'
              IfStatement
                BinaryExpression
                  BinaryExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: 'call'
                        Identifier: 'expression'
                      Identifier: 'kind'
                    ExclamationEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'SuperKeyword'
                  AmpersandAmpersandToken
                  CallExpression
                    Identifier: ' isDottedName'
                    PropertyAccessExpression
                      Identifier: 'call'
                      Identifier: 'expression'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                currentFlow'
                      EqualsToken
                      CallExpression
                        Identifier: ' createFlowCall'
                        Identifier: 'currentFlow'
                        Identifier: ' call'
      FunctionDeclaration
        Identifier: ' bindLabeledStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' LabeledStatement'
        VoidKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' postStatementLabel'
                CallExpression
                  Identifier: ' createBranchLabel'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        activeLabelList'
              EqualsToken
              ObjectLiteralExpression
                PropertyAssignment
                  Identifier: '
            next'
                  Identifier: ' activeLabelList'
                PropertyAssignment
                  Identifier: '
            name'
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: ' node'
                      Identifier: 'label'
                    Identifier: 'escapedText'
                PropertyAssignment
                  Identifier: '
            breakTarget'
                  Identifier: ' postStatementLabel'
                PropertyAssignment
                  Identifier: '
            continueTarget'
                  Identifier: ' undefined'
                PropertyAssignment
                  Identifier: '
            referenced'
                  FalseKeyword
          ExpressionStatement
            CallExpression
              Identifier: '
        bind'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'label'
          ExpressionStatement
            CallExpression
              Identifier: '
        bind'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'statement'
          IfStatement
            BinaryExpression
              PrefixUnaryExpression
                PropertyAccessExpression
                  Identifier: 'activeLabelList'
                  Identifier: 'referenced'
              AmpersandAmpersandToken
              PrefixUnaryExpression
                PropertyAccessExpression
                  Identifier: 'options'
                  Identifier: 'allowUnusedLabels'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            errorOrSuggestionOnNode'
                  CallExpression
                    Identifier: 'unusedLabelIsError'
                    Identifier: 'options'
                  PropertyAccessExpression
                    Identifier: ' node'
                    Identifier: 'label'
                  PropertyAccessExpression
                    Identifier: ' Diagnostics'
                    Identifier: 'Unused_label'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        activeLabelList'
              EqualsToken
              PropertyAccessExpression
                Identifier: ' activeLabelList'
                Identifier: 'next'
          ExpressionStatement
            CallExpression
              Identifier: '
        addAntecedent'
              Identifier: 'postStatementLabel'
              Identifier: ' currentFlow'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentFlow'
              EqualsToken
              CallExpression
                Identifier: ' finishFlowLabel'
                Identifier: 'postStatementLabel'
      FunctionDeclaration
        Identifier: ' bindDestructuringTargetFlow'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Expression'
        Block
          IfStatement
            BinaryExpression
              BinaryExpression
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'kind'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'BinaryExpression'
              AmpersandAmpersandToken
              BinaryExpression
                PropertyAccessExpression
                  PropertyAccessExpression
                    ParenthesizedExpression
                      AsExpression
                        Identifier: 'node'
                        TypeReference
                          Identifier: ' BinaryExpression'
                    Identifier: 'operatorToken'
                  Identifier: 'kind'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'EqualsToken'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindAssignmentTargetFlow'
                  PropertyAccessExpression
                    ParenthesizedExpression
                      AsExpression
                        Identifier: 'node'
                        TypeReference
                          Identifier: ' BinaryExpression'
                    Identifier: 'left'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindAssignmentTargetFlow'
                  Identifier: 'node'
      FunctionDeclaration
        Identifier: ' bindAssignmentTargetFlow'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Expression'
        Block
          IfStatement
            CallExpression
              Identifier: 'isNarrowableReference'
              Identifier: 'node'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            currentFlow'
                  EqualsToken
                  CallExpression
                    Identifier: ' createFlowMutation'
                    PropertyAccessExpression
                      Identifier: 'FlowFlags'
                      Identifier: 'Assignment'
                    Identifier: ' currentFlow'
                    Identifier: ' node'
            IfStatement
              BinaryExpression
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'kind'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ArrayLiteralExpression'
              Block
                ForOfStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' e'
                  PropertyAccessExpression
                    ParenthesizedExpression
                      AsExpression
                        Identifier: 'node'
                        TypeReference
                          Identifier: ' ArrayLiteralExpression'
                    Identifier: 'elements'
                  Block
                    IfStatement
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: 'e'
                          Identifier: 'kind'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'SpreadElement'
                      Block
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                    bindAssignmentTargetFlow'
                            PropertyAccessExpression
                              ParenthesizedExpression
                                AsExpression
                                  Identifier: 'e'
                                  TypeReference
                                    Identifier: ' SpreadElement'
                              Identifier: 'expression'
                      Block
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                    bindDestructuringTargetFlow'
                            Identifier: 'e'
              IfStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'kind'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'ObjectLiteralExpression'
                Block
                  ForOfStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' p'
                    PropertyAccessExpression
                      ParenthesizedExpression
                        AsExpression
                          Identifier: 'node'
                          TypeReference
                            Identifier: ' ObjectLiteralExpression'
                      Identifier: 'properties'
                    Block
                      IfStatement
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: 'p'
                            Identifier: 'kind'
                          EqualsEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' SyntaxKind'
                            Identifier: 'PropertyAssignment'
                        Block
                          ExpressionStatement
                            CallExpression
                              Identifier: '
                    bindDestructuringTargetFlow'
                              PropertyAccessExpression
                                Identifier: 'p'
                                Identifier: 'initializer'
                        IfStatement
                          BinaryExpression
                            PropertyAccessExpression
                              Identifier: 'p'
                              Identifier: 'kind'
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' SyntaxKind'
                              Identifier: 'ShorthandPropertyAssignment'
                          Block
                            ExpressionStatement
                              CallExpression
                                Identifier: '
                    bindAssignmentTargetFlow'
                                PropertyAccessExpression
                                  Identifier: 'p'
                                  Identifier: 'name'
                          IfStatement
                            BinaryExpression
                              PropertyAccessExpression
                                Identifier: 'p'
                                Identifier: 'kind'
                              EqualsEqualsEqualsToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'SpreadAssignment'
                            Block
                              ExpressionStatement
                                CallExpression
                                  Identifier: '
                    bindAssignmentTargetFlow'
                                  PropertyAccessExpression
                                    Identifier: 'p'
                                    Identifier: 'expression'
      FunctionDeclaration
        Identifier: ' bindLogicalLikeExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' BinaryExpression'
        Parameter
          Identifier: ' trueTarget'
          TypeReference
            Identifier: ' FlowLabel'
        Parameter
          Identifier: ' falseTarget'
          TypeReference
            Identifier: ' FlowLabel'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' preRightLabel'
                CallExpression
                  Identifier: ' createBranchLabel'
          IfStatement
            BinaryExpression
              BinaryExpression
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'operatorToken'
                  Identifier: 'kind'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'AmpersandAmpersandToken'
              BarBarToken
              BinaryExpression
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: ' node'
                    Identifier: 'operatorToken'
                  Identifier: 'kind'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'AmpersandAmpersandEqualsToken'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindCondition'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'left'
                  Identifier: ' preRightLabel'
                  Identifier: ' falseTarget'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindCondition'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'left'
                  Identifier: ' trueTarget'
                  Identifier: ' preRightLabel'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentFlow'
              EqualsToken
              CallExpression
                Identifier: ' finishFlowLabel'
                Identifier: 'preRightLabel'
          ExpressionStatement
            CallExpression
              Identifier: '
        bind'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'operatorToken'
          IfStatement
            CallExpression
              Identifier: 'isLogicalOrCoalescingAssignmentOperator'
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'operatorToken'
                Identifier: 'kind'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            doWithConditionalBranches'
                  Identifier: 'bind'
                  PropertyAccessExpression
                    Identifier: ' node'
                    Identifier: 'right'
                  Identifier: ' trueTarget'
                  Identifier: ' falseTarget'
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindAssignmentTargetFlow'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'left'
              ExpressionStatement
                CallExpression
                  Identifier: '

            addAntecedent'
                  Identifier: 'trueTarget'
                  CallExpression
                    Identifier: ' createFlowCondition'
                    PropertyAccessExpression
                      Identifier: 'FlowFlags'
                      Identifier: 'TrueCondition'
                    Identifier: ' currentFlow'
                    Identifier: ' node'
              ExpressionStatement
                CallExpression
                  Identifier: '
            addAntecedent'
                  Identifier: 'falseTarget'
                  CallExpression
                    Identifier: ' createFlowCondition'
                    PropertyAccessExpression
                      Identifier: 'FlowFlags'
                      Identifier: 'FalseCondition'
                    Identifier: ' currentFlow'
                    Identifier: ' node'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindCondition'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'right'
                  Identifier: ' trueTarget'
                  Identifier: ' falseTarget'
      FunctionDeclaration
        Identifier: ' bindPrefixUnaryExpressionFlow'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' PrefixUnaryExpression'
        Block
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'operator'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'ExclamationToken'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' saveTrueTarget'
                    Identifier: ' currentTrueTarget'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            currentTrueTarget'
                  EqualsToken
                  Identifier: ' currentFalseTarget'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            currentFalseTarget'
                  EqualsToken
                  Identifier: ' saveTrueTarget'
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindEachChild'
                  Identifier: 'node'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            currentFalseTarget'
                  EqualsToken
                  Identifier: ' currentTrueTarget'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            currentTrueTarget'
                  EqualsToken
                  Identifier: ' saveTrueTarget'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindEachChild'
                  Identifier: 'node'
              IfStatement
                BinaryExpression
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'operator'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'PlusPlusToken'
                  BarBarToken
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: ' node'
                      Identifier: 'operator'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'MinusMinusToken'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                bindAssignmentTargetFlow'
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'operand'
      FunctionDeclaration
        Identifier: ' bindPostfixUnaryExpressionFlow'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' PostfixUnaryExpression'
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        bindEachChild'
              Identifier: 'node'
          IfStatement
            BinaryExpression
              BinaryExpression
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'operator'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'PlusPlusToken'
              BarBarToken
              BinaryExpression
                PropertyAccessExpression
                  Identifier: ' node'
                  Identifier: 'operator'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'MinusMinusToken'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindAssignmentTargetFlow'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'operand'
      FunctionDeclaration
        Identifier: ' bindDestructuringAssignmentFlow'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' DestructuringAssignment'
        Block
          IfStatement
            Identifier: 'inAssignmentPattern'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            inAssignmentPattern'
                  EqualsToken
                  FalseKeyword
              ExpressionStatement
                CallExpression
                  Identifier: '
            bind'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'operatorToken'
              ExpressionStatement
                CallExpression
                  Identifier: '
            bind'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'right'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            inAssignmentPattern'
                  EqualsToken
                  TrueKeyword
              ExpressionStatement
                CallExpression
                  Identifier: '
            bind'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'left'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            inAssignmentPattern'
                  EqualsToken
                  TrueKeyword
              ExpressionStatement
                CallExpression
                  Identifier: '
            bind'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'left'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            inAssignmentPattern'
                  EqualsToken
                  FalseKeyword
              ExpressionStatement
                CallExpression
                  Identifier: '
            bind'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'operatorToken'
              ExpressionStatement
                CallExpression
                  Identifier: '
            bind'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'right'
          ExpressionStatement
            CallExpression
              Identifier: '
        bindAssignmentTargetFlow'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'left'
      FunctionDeclaration
        Identifier: ' createBindBinaryExpressionFlow'
        Block
          InterfaceDeclaration
            Identifier: ' WorkArea'
            PropertySignature
              Identifier: '
            stackIndex'
              NumberKeyword
            PropertySignature
              Identifier: '
            skip'
              BooleanKeyword
            PropertySignature
              Identifier: '
            inStrictModeStack'
              ArrayType
                ParenthesizedType
                  UnionType
                    BooleanKeyword
                    UndefinedKeyword
            PropertySignature
              Identifier: '
            parentStack'
              ArrayType
                ParenthesizedType
                  UnionType
                    TypeReference
                      Identifier: 'Node'
                    UndefinedKeyword
          ReturnStatement
            CallExpression
              Identifier: ' createBinaryExpressionTrampoline'
              Identifier: 'onEnter'
              Identifier: ' onLeft'
              Identifier: ' onOperator'
              Identifier: ' onRight'
              Identifier: ' onExit'
              Identifier: ' /*foldState*/ undefined'
          FunctionDeclaration
            Identifier: ' onEnter'
            Parameter
              Identifier: 'node'
              TypeReference
                Identifier: ' BinaryExpression'
            Parameter
              Identifier: ' state'
              UnionType
                TypeReference
                  Identifier: ' WorkArea'
                UndefinedKeyword
            Block
              IfStatement
                Identifier: 'state'
                Block
                  ExpressionStatement
                    PostfixUnaryExpression
                      PropertyAccessExpression
                        Identifier: '
                state'
                        Identifier: 'stackIndex'
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                // Emulate the work that `bind` does before reaching `bindChildren`. A normal call to
                // `bindBinaryExpressionFlow` will already have done this work.
                setParent'
                      Identifier: 'node'
                      Identifier: ' parent'
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' saveInStrictMode'
                        Identifier: ' inStrictMode'
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                bindWorker'
                      Identifier: 'node'
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' saveParent'
                        Identifier: ' parent'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                parent'
                      EqualsToken
                      Identifier: ' node'
                  ExpressionStatement
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: '
                state'
                        Identifier: 'skip'
                      EqualsToken
                      FalseKeyword
                  ExpressionStatement
                    BinaryExpression
                      ElementAccessExpression
                        PropertyAccessExpression
                          Identifier: '
                state'
                          Identifier: 'inStrictModeStack'
                        PropertyAccessExpression
                          Identifier: 'state'
                          Identifier: 'stackIndex'
                      EqualsToken
                      Identifier: ' saveInStrictMode'
                  ExpressionStatement
                    BinaryExpression
                      ElementAccessExpression
                        PropertyAccessExpression
                          Identifier: '
                state'
                          Identifier: 'parentStack'
                        PropertyAccessExpression
                          Identifier: 'state'
                          Identifier: 'stackIndex'
                      EqualsToken
                      Identifier: ' saveParent'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                state'
                      EqualsToken
                      ObjectLiteralExpression
                        PropertyAssignment
                          Identifier: '
                    stackIndex'
                          NumericLiteral
                        PropertyAssignment
                          Identifier: '
                    skip'
                          FalseKeyword
                        PropertyAssignment
                          Identifier: '
                    inStrictModeStack'
                          ArrayLiteralExpression
                            Identifier: 'undefined'
                        PropertyAssignment
                          Identifier: '
                    parentStack'
                          ArrayLiteralExpression
                            Identifier: 'undefined'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' operator'
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: ' node'
                        Identifier: 'operatorToken'
                      Identifier: 'kind'
              IfStatement
                BinaryExpression
                  CallExpression
                    Identifier: 'isLogicalOrCoalescingBinaryOperator'
                    Identifier: 'operator'
                  BarBarToken
                  CallExpression
                    Identifier: ' isLogicalOrCoalescingAssignmentOperator'
                    Identifier: 'operator'
                Block
                  IfStatement
                    CallExpression
                      Identifier: 'isTopLevelLogicalExpression'
                      Identifier: 'node'
                    Block
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' postExpressionLabel'
                            CallExpression
                              Identifier: ' createBranchLabel'
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' saveCurrentFlow'
                            Identifier: ' currentFlow'
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' saveHasFlowEffects'
                            Identifier: ' hasFlowEffects'
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    hasFlowEffects'
                          EqualsToken
                          FalseKeyword
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    bindLogicalLikeExpression'
                          Identifier: 'node'
                          Identifier: ' postExpressionLabel'
                          Identifier: ' postExpressionLabel'
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    currentFlow'
                          EqualsToken
                          ConditionalExpression
                            Identifier: ' hasFlowEffects'
                            QuestionToken
                            CallExpression
                              Identifier: ' finishFlowLabel'
                              Identifier: 'postExpressionLabel'
                            ColonToken
                            Identifier: ' saveCurrentFlow'
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    hasFlowEffects'
                          BarBarEqualsToken
                          Identifier: ' saveHasFlowEffects'
                    Block
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    bindLogicalLikeExpression'
                          Identifier: 'node'
                          NonNullExpression
                            Identifier: ' currentTrueTarget'
                          NonNullExpression
                            Identifier: ' currentFalseTarget'
                  ExpressionStatement
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: '
                state'
                        Identifier: 'skip'
                      EqualsToken
                      TrueKeyword
              ReturnStatement
                Identifier: ' state'
          FunctionDeclaration
            Identifier: ' onLeft'
            Parameter
              Identifier: 'left'
              TypeReference
                Identifier: ' Expression'
            Parameter
              Identifier: ' state'
              TypeReference
                Identifier: ' WorkArea'
            Parameter
              Identifier: ' node'
              TypeReference
                Identifier: ' BinaryExpression'
            Block
              IfStatement
                PrefixUnaryExpression
                  PropertyAccessExpression
                    Identifier: 'state'
                    Identifier: 'skip'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' maybeBound'
                        CallExpression
                          Identifier: ' maybeBind'
                          Identifier: 'left'
                  IfStatement
                    BinaryExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: 'node'
                          Identifier: 'operatorToken'
                        Identifier: 'kind'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'CommaToken'
                    Block
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    maybeBindExpressionFlowIfCall'
                          Identifier: 'left'
                  ReturnStatement
                    Identifier: ' maybeBound'
          FunctionDeclaration
            Identifier: ' onOperator'
            Parameter
              Identifier: 'operatorToken'
              TypeReference
                Identifier: ' BinaryOperatorToken'
            Parameter
              Identifier: ' state'
              TypeReference
                Identifier: ' WorkArea'
            Parameter
              Identifier: ' _node'
              TypeReference
                Identifier: ' BinaryExpression'
            Block
              IfStatement
                PrefixUnaryExpression
                  PropertyAccessExpression
                    Identifier: 'state'
                    Identifier: 'skip'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                bind'
                      Identifier: 'operatorToken'
          FunctionDeclaration
            Identifier: ' onRight'
            Parameter
              Identifier: 'right'
              TypeReference
                Identifier: ' Expression'
            Parameter
              Identifier: ' state'
              TypeReference
                Identifier: ' WorkArea'
            Parameter
              Identifier: ' node'
              TypeReference
                Identifier: ' BinaryExpression'
            Block
              IfStatement
                PrefixUnaryExpression
                  PropertyAccessExpression
                    Identifier: 'state'
                    Identifier: 'skip'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' maybeBound'
                        CallExpression
                          Identifier: ' maybeBind'
                          Identifier: 'right'
                  IfStatement
                    BinaryExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: 'node'
                          Identifier: 'operatorToken'
                        Identifier: 'kind'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'CommaToken'
                    Block
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    maybeBindExpressionFlowIfCall'
                          Identifier: 'right'
                  ReturnStatement
                    Identifier: ' maybeBound'
          FunctionDeclaration
            Identifier: ' onExit'
            Parameter
              Identifier: 'node'
              TypeReference
                Identifier: ' BinaryExpression'
            Parameter
              Identifier: ' state'
              TypeReference
                Identifier: ' WorkArea'
            Block
              IfStatement
                PrefixUnaryExpression
                  PropertyAccessExpression
                    Identifier: 'state'
                    Identifier: 'skip'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' operator'
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: ' node'
                            Identifier: 'operatorToken'
                          Identifier: 'kind'
                  IfStatement
                    BinaryExpression
                      CallExpression
                        Identifier: 'isAssignmentOperator'
                        Identifier: 'operator'
                      AmpersandAmpersandToken
                      PrefixUnaryExpression
                        CallExpression
                          Identifier: 'isAssignmentTarget'
                          Identifier: 'node'
                    Block
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    bindAssignmentTargetFlow'
                          PropertyAccessExpression
                            Identifier: 'node'
                            Identifier: 'left'
                      IfStatement
                        BinaryExpression
                          BinaryExpression
                            Identifier: 'operator'
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' SyntaxKind'
                              Identifier: 'EqualsToken'
                          AmpersandAmpersandToken
                          BinaryExpression
                            PropertyAccessExpression
                              PropertyAccessExpression
                                Identifier: ' node'
                                Identifier: 'left'
                              Identifier: 'kind'
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' SyntaxKind'
                              Identifier: 'ElementAccessExpression'
                        Block
                          VariableStatement
                            VariableDeclarationList
                              VariableDeclaration
                                Identifier: ' elementAccess'
                                AsExpression
                                  PropertyAccessExpression
                                    Identifier: ' node'
                                    Identifier: 'left'
                                  TypeReference
                                    Identifier: ' ElementAccessExpression'
                          IfStatement
                            CallExpression
                              Identifier: 'isNarrowableOperand'
                              PropertyAccessExpression
                                Identifier: 'elementAccess'
                                Identifier: 'expression'
                            Block
                              ExpressionStatement
                                BinaryExpression
                                  Identifier: '
                            currentFlow'
                                  EqualsToken
                                  CallExpression
                                    Identifier: ' createFlowMutation'
                                    PropertyAccessExpression
                                      Identifier: 'FlowFlags'
                                      Identifier: 'ArrayMutation'
                                    Identifier: ' currentFlow'
                                    Identifier: ' node'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' savedInStrictMode'
                    ElementAccessExpression
                      PropertyAccessExpression
                        Identifier: ' state'
                        Identifier: 'inStrictModeStack'
                      PropertyAccessExpression
                        Identifier: 'state'
                        Identifier: 'stackIndex'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' savedParent'
                    ElementAccessExpression
                      PropertyAccessExpression
                        Identifier: ' state'
                        Identifier: 'parentStack'
                      PropertyAccessExpression
                        Identifier: 'state'
                        Identifier: 'stackIndex'
              IfStatement
                BinaryExpression
                  Identifier: 'savedInStrictMode'
                  ExclamationEqualsEqualsToken
                  Identifier: ' undefined'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                inStrictMode'
                      EqualsToken
                      Identifier: ' savedInStrictMode'
              IfStatement
                BinaryExpression
                  Identifier: 'savedParent'
                  ExclamationEqualsEqualsToken
                  Identifier: ' undefined'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                parent'
                      EqualsToken
                      Identifier: ' savedParent'
              ExpressionStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: '
            state'
                    Identifier: 'skip'
                  EqualsToken
                  FalseKeyword
              ExpressionStatement
                PostfixUnaryExpression
                  PropertyAccessExpression
                    Identifier: '
            state'
                    Identifier: 'stackIndex'
          FunctionDeclaration
            Identifier: ' maybeBind'
            Parameter
              Identifier: 'node'
              TypeReference
                Identifier: ' Node'
            Block
              IfStatement
                BinaryExpression
                  BinaryExpression
                    Identifier: 'node'
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: ' isBinaryExpression'
                      Identifier: 'node'
                  AmpersandAmpersandToken
                  PrefixUnaryExpression
                    CallExpression
                      Identifier: 'isDestructuringAssignment'
                      Identifier: 'node'
                Block
                  ReturnStatement
                    Identifier: ' node'
              ExpressionStatement
                CallExpression
                  Identifier: '
            bind'
                  Identifier: 'node'
      FunctionDeclaration
        Identifier: ' bindDeleteExpressionFlow'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' DeleteExpression'
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        bindEachChild'
              Identifier: 'node'
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'expression'
                Identifier: 'kind'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'PropertyAccessExpression'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindAssignmentTargetFlow'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'expression'
      FunctionDeclaration
        Identifier: ' bindConditionalExpressionFlow'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' ConditionalExpression'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' trueLabel'
                CallExpression
                  Identifier: ' createBranchLabel'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' falseLabel'
                CallExpression
                  Identifier: ' createBranchLabel'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' postExpressionLabel'
                CallExpression
                  Identifier: ' createBranchLabel'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveCurrentFlow'
                Identifier: ' currentFlow'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveHasFlowEffects'
                Identifier: ' hasFlowEffects'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        hasFlowEffects'
              EqualsToken
              FalseKeyword
          ExpressionStatement
            CallExpression
              Identifier: '
        bindCondition'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'condition'
              Identifier: ' trueLabel'
              Identifier: ' falseLabel'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentFlow'
              EqualsToken
              CallExpression
                Identifier: ' finishFlowLabel'
                Identifier: 'trueLabel'
          ExpressionStatement
            CallExpression
              Identifier: '
        bind'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'questionToken'
          ExpressionStatement
            CallExpression
              Identifier: '
        bind'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'whenTrue'
          ExpressionStatement
            CallExpression
              Identifier: '
        addAntecedent'
              Identifier: 'postExpressionLabel'
              Identifier: ' currentFlow'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentFlow'
              EqualsToken
              CallExpression
                Identifier: ' finishFlowLabel'
                Identifier: 'falseLabel'
          ExpressionStatement
            CallExpression
              Identifier: '
        bind'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'colonToken'
          ExpressionStatement
            CallExpression
              Identifier: '
        bind'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'whenFalse'
          ExpressionStatement
            CallExpression
              Identifier: '
        addAntecedent'
              Identifier: 'postExpressionLabel'
              Identifier: ' currentFlow'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentFlow'
              EqualsToken
              ConditionalExpression
                Identifier: ' hasFlowEffects'
                QuestionToken
                CallExpression
                  Identifier: ' finishFlowLabel'
                  Identifier: 'postExpressionLabel'
                ColonToken
                Identifier: ' saveCurrentFlow'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        hasFlowEffects'
              BarBarEqualsToken
              Identifier: ' saveHasFlowEffects'
      FunctionDeclaration
        Identifier: ' bindInitializedVariableFlow'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' VariableDeclaration'
            TypeReference
              Identifier: ' ArrayBindingElement'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' name'
                ConditionalExpression
                  PrefixUnaryExpression
                    CallExpression
                      Identifier: 'isOmittedExpression'
                      Identifier: 'node'
                  QuestionToken
                  PropertyAccessExpression
                    Identifier: ' node'
                    Identifier: 'name'
                  ColonToken
                  Identifier: ' undefined'
          IfStatement
            CallExpression
              Identifier: 'isBindingPattern'
              Identifier: 'name'
            Block
              ForOfStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' child'
                PropertyAccessExpression
                  Identifier: ' name'
                  Identifier: 'elements'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                bindInitializedVariableFlow'
                      Identifier: 'child'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            currentFlow'
                  EqualsToken
                  CallExpression
                    Identifier: ' createFlowMutation'
                    PropertyAccessExpression
                      Identifier: 'FlowFlags'
                      Identifier: 'Assignment'
                    Identifier: ' currentFlow'
                    Identifier: ' node'
      FunctionDeclaration
        Identifier: ' bindVariableDeclarationFlow'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' VariableDeclaration'
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        bindEachChild'
              Identifier: 'node'
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'initializer'
              BarBarToken
              CallExpression
                Identifier: ' isForInOrOfStatement'
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'parent'
                  Identifier: 'parent'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindInitializedVariableFlow'
                  Identifier: 'node'
      FunctionDeclaration
        Identifier: ' bindBindingElementFlow'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' BindingElement'
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        // When evaluating a binding pattern, the initializer is evaluated before the binding pattern, per:
        // - https://tc39.es/ecma262/#sec-destructuring-binding-patterns-runtime-semantics-iteratorbindinginitialization
        //   - `BindingElement: BindingPattern Initializer?`
        // - https://tc39.es/ecma262/#sec-runtime-semantics-keyedbindinginitialization
        //   - `BindingElement: BindingPattern Initializer?`
        bind'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'dotDotDotToken'
          ExpressionStatement
            CallExpression
              Identifier: '
        bind'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'propertyName'
          ExpressionStatement
            CallExpression
              Identifier: '
        bindInitializer'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'initializer'
          ExpressionStatement
            CallExpression
              Identifier: '
        bind'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'name'
      FunctionDeclaration
        Identifier: ' bindParameterFlow'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' ParameterDeclaration'
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        bindEach'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'modifiers'
          ExpressionStatement
            CallExpression
              Identifier: '
        bind'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'dotDotDotToken'
          ExpressionStatement
            CallExpression
              Identifier: '
        bind'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'questionToken'
          ExpressionStatement
            CallExpression
              Identifier: '
        bind'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'type'
          ExpressionStatement
            CallExpression
              Identifier: '
        bindInitializer'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'initializer'
          ExpressionStatement
            CallExpression
              Identifier: '
        bind'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'name'
      FunctionDeclaration
        Identifier: ' bindInitializer'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' Expression'
            UndefinedKeyword
        Block
          IfStatement
            PrefixUnaryExpression
              Identifier: 'node'
            Block
              ReturnStatement
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' entryFlow'
                Identifier: ' currentFlow'
          ExpressionStatement
            CallExpression
              Identifier: '
        bind'
              Identifier: 'node'
          IfStatement
            BinaryExpression
              BinaryExpression
                Identifier: 'entryFlow'
                EqualsEqualsEqualsToken
                Identifier: ' unreachableFlow'
              BarBarToken
              BinaryExpression
                Identifier: ' entryFlow'
                EqualsEqualsEqualsToken
                Identifier: ' currentFlow'
            Block
              ReturnStatement
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' exitFlow'
                CallExpression
                  Identifier: ' createBranchLabel'
          ExpressionStatement
            CallExpression
              Identifier: '
        addAntecedent'
              Identifier: 'exitFlow'
              Identifier: ' entryFlow'
          ExpressionStatement
            CallExpression
              Identifier: '
        addAntecedent'
              Identifier: 'exitFlow'
              Identifier: ' currentFlow'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentFlow'
              EqualsToken
              CallExpression
                Identifier: ' finishFlowLabel'
                Identifier: 'exitFlow'
      FunctionDeclaration
        Identifier: ' bindJSDocTypeAlias'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' JSDocTypedefTag'
            TypeReference
              Identifier: ' JSDocCallbackTag'
            TypeReference
              Identifier: ' JSDocEnumTag'
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        bind'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'tagName'
          IfStatement
            BinaryExpression
              BinaryExpression
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'kind'
                ExclamationEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'JSDocEnumTag'
              AmpersandAmpersandToken
              PropertyAccessExpression
                Identifier: ' node'
                Identifier: 'fullName'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            // don't bind the type name yet; that's delayed until delayedBindJSDocTypedefTag
            setParent'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'fullName'
                  Identifier: ' node'
              ExpressionStatement
                CallExpression
                  Identifier: '
            setParentRecursive'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'fullName'
                  FalseKeyword
          IfStatement
            BinaryExpression
              TypeOfExpression
                PropertyAccessExpression
                  Identifier: ' node'
                  Identifier: 'comment'
              ExclamationEqualsEqualsToken
              StringLiteral
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindEach'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'comment'
      FunctionDeclaration
        Identifier: ' bindJSDocClassTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' JSDocClassTag'
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        bindEachChild'
              Identifier: 'node'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' host'
                CallExpression
                  Identifier: ' getHostSignatureFromJSDoc'
                  Identifier: 'node'
          IfStatement
            BinaryExpression
              Identifier: 'host'
              AmpersandAmpersandToken
              BinaryExpression
                PropertyAccessExpression
                  Identifier: ' host'
                  Identifier: 'kind'
                ExclamationEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'MethodDeclaration'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            addDeclarationToSymbol'
                  PropertyAccessExpression
                    Identifier: 'host'
                    Identifier: 'symbol'
                  Identifier: ' host'
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'Class'
      FunctionDeclaration
        Identifier: ' bindJSDocImportTag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' JSDocImportTag'
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        // don't bind the importClause yet; that's delayed until bindJSDocImports
        bind'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'tagName'
          ExpressionStatement
            CallExpression
              Identifier: '
        bind'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'moduleSpecifier'
          ExpressionStatement
            CallExpression
              Identifier: '
        bind'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'attributes'
          IfStatement
            BinaryExpression
              TypeOfExpression
                PropertyAccessExpression
                  Identifier: ' node'
                  Identifier: 'comment'
              ExclamationEqualsEqualsToken
              StringLiteral
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindEach'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'comment'
      FunctionDeclaration
        Identifier: ' bindOptionalExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Expression'
        Parameter
          Identifier: ' trueTarget'
          TypeReference
            Identifier: ' FlowLabel'
        Parameter
          Identifier: ' falseTarget'
          TypeReference
            Identifier: ' FlowLabel'
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        doWithConditionalBranches'
              Identifier: 'bind'
              Identifier: ' node'
              Identifier: ' trueTarget'
              Identifier: ' falseTarget'
          IfStatement
            BinaryExpression
              PrefixUnaryExpression
                CallExpression
                  Identifier: 'isOptionalChain'
                  Identifier: 'node'
              BarBarToken
              CallExpression
                Identifier: ' isOutermostOptionalChain'
                Identifier: 'node'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            addAntecedent'
                  Identifier: 'trueTarget'
                  CallExpression
                    Identifier: ' createFlowCondition'
                    PropertyAccessExpression
                      Identifier: 'FlowFlags'
                      Identifier: 'TrueCondition'
                    Identifier: ' currentFlow'
                    Identifier: ' node'
              ExpressionStatement
                CallExpression
                  Identifier: '
            addAntecedent'
                  Identifier: 'falseTarget'
                  CallExpression
                    Identifier: ' createFlowCondition'
                    PropertyAccessExpression
                      Identifier: 'FlowFlags'
                      Identifier: 'FalseCondition'
                    Identifier: ' currentFlow'
                    Identifier: ' node'
      FunctionDeclaration
        Identifier: ' bindOptionalChainRest'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' OptionalChain'
        Block
          SwitchStatement
            PropertyAccessExpression
              Identifier: 'node'
              Identifier: 'kind'
            CaseBlock
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'PropertyAccessExpression'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bind'
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'questionDotToken'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bind'
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'name'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ElementAccessExpression'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bind'
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'questionDotToken'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bind'
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'argumentExpression'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'CallExpression'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bind'
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'questionDotToken'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bindEach'
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'typeArguments'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                bindEach'
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'arguments'
                BreakStatement
      FunctionDeclaration
        Identifier: ' bindOptionalChain'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' OptionalChain'
        Parameter
          Identifier: ' trueTarget'
          TypeReference
            Identifier: ' FlowLabel'
        Parameter
          Identifier: ' falseTarget'
          TypeReference
            Identifier: ' FlowLabel'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' preChainLabel'
                ConditionalExpression
                  CallExpression
                    Identifier: ' isOptionalChainRoot'
                    Identifier: 'node'
                  QuestionToken
                  CallExpression
                    Identifier: ' createBranchLabel'
                  ColonToken
                  Identifier: ' undefined'
          ExpressionStatement
            CallExpression
              Identifier: '
        bindOptionalExpression'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'expression'
              BinaryExpression
                Identifier: ' preChainLabel'
                BarBarToken
                Identifier: ' trueTarget'
              Identifier: ' falseTarget'
          IfStatement
            Identifier: 'preChainLabel'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            currentFlow'
                  EqualsToken
                  CallExpression
                    Identifier: ' finishFlowLabel'
                    Identifier: 'preChainLabel'
          ExpressionStatement
            CallExpression
              Identifier: '
        doWithConditionalBranches'
              Identifier: 'bindOptionalChainRest'
              Identifier: ' node'
              Identifier: ' trueTarget'
              Identifier: ' falseTarget'
          IfStatement
            CallExpression
              Identifier: 'isOutermostOptionalChain'
              Identifier: 'node'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            addAntecedent'
                  Identifier: 'trueTarget'
                  CallExpression
                    Identifier: ' createFlowCondition'
                    PropertyAccessExpression
                      Identifier: 'FlowFlags'
                      Identifier: 'TrueCondition'
                    Identifier: ' currentFlow'
                    Identifier: ' node'
              ExpressionStatement
                CallExpression
                  Identifier: '
            addAntecedent'
                  Identifier: 'falseTarget'
                  CallExpression
                    Identifier: ' createFlowCondition'
                    PropertyAccessExpression
                      Identifier: 'FlowFlags'
                      Identifier: 'FalseCondition'
                    Identifier: ' currentFlow'
                    Identifier: ' node'
      FunctionDeclaration
        Identifier: ' bindOptionalChainFlow'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' OptionalChain'
        Block
          IfStatement
            CallExpression
              Identifier: 'isTopLevelLogicalExpression'
              Identifier: 'node'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' postExpressionLabel'
                    CallExpression
                      Identifier: ' createBranchLabel'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' saveCurrentFlow'
                    Identifier: ' currentFlow'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' saveHasFlowEffects'
                    Identifier: ' hasFlowEffects'
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindOptionalChain'
                  Identifier: 'node'
                  Identifier: ' postExpressionLabel'
                  Identifier: ' postExpressionLabel'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            currentFlow'
                  EqualsToken
                  ConditionalExpression
                    Identifier: ' hasFlowEffects'
                    QuestionToken
                    CallExpression
                      Identifier: ' finishFlowLabel'
                      Identifier: 'postExpressionLabel'
                    ColonToken
                    Identifier: ' saveCurrentFlow'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            hasFlowEffects'
                  BarBarEqualsToken
                  Identifier: ' saveHasFlowEffects'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindOptionalChain'
                  Identifier: 'node'
                  NonNullExpression
                    Identifier: ' currentTrueTarget'
                  NonNullExpression
                    Identifier: ' currentFalseTarget'
      FunctionDeclaration
        Identifier: ' bindNonNullExpressionFlow'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' NonNullExpression'
            TypeReference
              Identifier: ' NonNullChain'
        Block
          IfStatement
            CallExpression
              Identifier: 'isOptionalChain'
              Identifier: 'node'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindOptionalChainFlow'
                  Identifier: 'node'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindEachChild'
                  Identifier: 'node'
      FunctionDeclaration
        Identifier: ' bindAccessExpressionFlow'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' AccessExpression'
            TypeReference
              Identifier: ' PropertyAccessChain'
            TypeReference
              Identifier: ' ElementAccessChain'
        Block
          IfStatement
            CallExpression
              Identifier: 'isOptionalChain'
              Identifier: 'node'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindOptionalChainFlow'
                  Identifier: 'node'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindEachChild'
                  Identifier: 'node'
      FunctionDeclaration
        Identifier: ' bindCallExpressionFlow'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' CallExpression'
            TypeReference
              Identifier: ' CallChain'
        Block
          IfStatement
            CallExpression
              Identifier: 'isOptionalChain'
              Identifier: 'node'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindOptionalChainFlow'
                  Identifier: 'node'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' expr'
                    CallExpression
                      Identifier: ' skipParentheses'
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'expression'
              IfStatement
                BinaryExpression
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: 'expr'
                      Identifier: 'kind'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'FunctionExpression'
                  BarBarToken
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: ' expr'
                      Identifier: 'kind'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'ArrowFunction'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                bindEach'
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'typeArguments'
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                bindEach'
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'arguments'
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                bind'
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'expression'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                bindEachChild'
                      Identifier: 'node'
                  IfStatement
                    BinaryExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: 'node'
                          Identifier: 'expression'
                        Identifier: 'kind'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'SuperKeyword'
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    currentFlow'
                          EqualsToken
                          CallExpression
                            Identifier: ' createFlowCall'
                            Identifier: 'currentFlow'
                            Identifier: ' node'
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'expression'
                Identifier: 'kind'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'PropertyAccessExpression'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' propertyAccess'
                    AsExpression
                      PropertyAccessExpression
                        Identifier: ' node'
                        Identifier: 'expression'
                      TypeReference
                        Identifier: ' PropertyAccessExpression'
              IfStatement
                BinaryExpression
                  BinaryExpression
                    CallExpression
                      Identifier: 'isIdentifier'
                      PropertyAccessExpression
                        Identifier: 'propertyAccess'
                        Identifier: 'name'
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: ' isNarrowableOperand'
                      PropertyAccessExpression
                        Identifier: 'propertyAccess'
                        Identifier: 'expression'
                  AmpersandAmpersandToken
                  CallExpression
                    Identifier: ' isPushOrUnshiftIdentifier'
                    PropertyAccessExpression
                      Identifier: 'propertyAccess'
                      Identifier: 'name'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                currentFlow'
                      EqualsToken
                      CallExpression
                        Identifier: ' createFlowMutation'
                        PropertyAccessExpression
                          Identifier: 'FlowFlags'
                          Identifier: 'ArrayMutation'
                        Identifier: ' currentFlow'
                        Identifier: ' node'
      FunctionDeclaration
        Identifier: ' addToContainerChain'
        Parameter
          Identifier: 'next'
          TypeReference
            Identifier: ' HasLocals'
        Block
          IfStatement
            Identifier: 'lastContainer'
            Block
              ExpressionStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: '
            lastContainer'
                    Identifier: 'nextContainer'
                  EqualsToken
                  Identifier: ' next'
          ExpressionStatement
            BinaryExpression
              Identifier: '

        lastContainer'
              EqualsToken
              Identifier: ' next'
      FunctionDeclaration
        Identifier: ' declareSymbolAndAddToSymbolTable'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Declaration'
        Parameter
          Identifier: ' symbolFlags'
          TypeReference
            Identifier: ' SymbolFlags'
        Parameter
          Identifier: ' symbolExcludes'
          TypeReference
            Identifier: ' SymbolFlags'
        UnionType
          TypeReference
            Identifier: ' Symbol'
          UndefinedKeyword
        Block
          SwitchStatement
            PropertyAccessExpression
              Identifier: 'container'
              Identifier: 'kind'
            CaseBlock
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ModuleDeclaration'
                ReturnStatement
                  CallExpression
                    Identifier: ' declareModuleMember'
                    Identifier: 'node'
                    Identifier: ' symbolFlags'
                    Identifier: ' symbolExcludes'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'SourceFile'
                ReturnStatement
                  CallExpression
                    Identifier: ' declareSourceFileMember'
                    Identifier: 'node'
                    Identifier: ' symbolFlags'
                    Identifier: ' symbolExcludes'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ClassExpression'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ClassDeclaration'
                ReturnStatement
                  CallExpression
                    Identifier: ' declareClassMember'
                    Identifier: 'node'
                    Identifier: ' symbolFlags'
                    Identifier: ' symbolExcludes'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'EnumDeclaration'
                ReturnStatement
                  CallExpression
                    Identifier: ' declareSymbol'
                    NonNullExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: 'container'
                          Identifier: 'symbol'
                        Identifier: 'exports'
                    PropertyAccessExpression
                      Identifier: ' container'
                      Identifier: 'symbol'
                    Identifier: ' node'
                    Identifier: ' symbolFlags'
                    Identifier: ' symbolExcludes'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'TypeLiteral'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'JSDocTypeLiteral'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ObjectLiteralExpression'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'InterfaceDeclaration'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'JsxAttributes'
                ReturnStatement
                  CallExpression
                    Identifier: ' declareSymbol'
                    NonNullExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: 'container'
                          Identifier: 'symbol'
                        Identifier: 'members'
                    PropertyAccessExpression
                      Identifier: ' container'
                      Identifier: 'symbol'
                    Identifier: ' node'
                    Identifier: ' symbolFlags'
                    Identifier: ' symbolExcludes'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'FunctionType'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ConstructorType'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'CallSignature'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ConstructSignature'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'JSDocSignature'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'IndexSignature'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'MethodDeclaration'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'MethodSignature'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'Constructor'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'GetAccessor'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'SetAccessor'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'FunctionDeclaration'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'FunctionExpression'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ArrowFunction'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'JSDocFunctionType'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ClassStaticBlockDeclaration'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'TypeAliasDeclaration'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'MappedType'
                IfStatement
                  PropertyAccessExpression
                    Identifier: 'container'
                    Identifier: 'locals'
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' Debug'
                        Identifier: 'assertNode'
                      Identifier: 'container'
                      Identifier: ' canHaveLocals'
                ReturnStatement
                  CallExpression
                    Identifier: ' declareSymbol'
                    NonNullExpression
                      PropertyAccessExpression
                        Identifier: 'container'
                        Identifier: 'locals'
                    Identifier: ' /*parent*/ undefined'
                    Identifier: ' node'
                    Identifier: ' symbolFlags'
                    Identifier: ' symbolExcludes'
      FunctionDeclaration
        Identifier: ' declareClassMember'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Declaration'
        Parameter
          Identifier: ' symbolFlags'
          TypeReference
            Identifier: ' SymbolFlags'
        Parameter
          Identifier: ' symbolExcludes'
          TypeReference
            Identifier: ' SymbolFlags'
        Block
          ReturnStatement
            ConditionalExpression
              CallExpression
                Identifier: ' isStatic'
                Identifier: 'node'
              QuestionToken
              CallExpression
                Identifier: ' declareSymbol'
                NonNullExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: 'container'
                      Identifier: 'symbol'
                    Identifier: 'exports'
                PropertyAccessExpression
                  Identifier: ' container'
                  Identifier: 'symbol'
                Identifier: ' node'
                Identifier: ' symbolFlags'
                Identifier: ' symbolExcludes'
              ColonToken
              CallExpression
                Identifier: ' declareSymbol'
                NonNullExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: 'container'
                      Identifier: 'symbol'
                    Identifier: 'members'
                PropertyAccessExpression
                  Identifier: ' container'
                  Identifier: 'symbol'
                Identifier: ' node'
                Identifier: ' symbolFlags'
                Identifier: ' symbolExcludes'
      FunctionDeclaration
        Identifier: ' declareSourceFileMember'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Declaration'
        Parameter
          Identifier: ' symbolFlags'
          TypeReference
            Identifier: ' SymbolFlags'
        Parameter
          Identifier: ' symbolExcludes'
          TypeReference
            Identifier: ' SymbolFlags'
        Block
          ReturnStatement
            ConditionalExpression
              CallExpression
                Identifier: ' isExternalModule'
                Identifier: 'file'
              QuestionToken
              CallExpression
                Identifier: ' declareModuleMember'
                Identifier: 'node'
                Identifier: ' symbolFlags'
                Identifier: ' symbolExcludes'
              ColonToken
              CallExpression
                Identifier: ' declareSymbol'
                NonNullExpression
                  PropertyAccessExpression
                    Identifier: 'file'
                    Identifier: 'locals'
                Identifier: ' /*parent*/ undefined'
                Identifier: ' node'
                Identifier: ' symbolFlags'
                Identifier: ' symbolExcludes'
      FunctionDeclaration
        Identifier: ' hasExportDeclarations'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' ModuleDeclaration'
            TypeReference
              Identifier: ' SourceFile'
        BooleanKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' body'
                ConditionalExpression
                  CallExpression
                    Identifier: ' isSourceFile'
                    Identifier: 'node'
                  QuestionToken
                  Identifier: ' node'
                  ColonToken
                  CallExpression
                    Identifier: ' tryCast'
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'body'
                    Identifier: ' isModuleBlock'
          ReturnStatement
            BinaryExpression
              PrefixUnaryExpression
                PrefixUnaryExpression
                  Identifier: 'body'
              AmpersandAmpersandToken
              CallExpression
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: ' body'
                    Identifier: 'statements'
                  Identifier: 'some'
                ArrowFunction
                  Parameter
                    Identifier: 's'
                  EqualsGreaterThanToken
                  BinaryExpression
                    CallExpression
                      Identifier: ' isExportDeclaration'
                      Identifier: 's'
                    BarBarToken
                    CallExpression
                      Identifier: ' isExportAssignment'
                      Identifier: 's'
      FunctionDeclaration
        Identifier: ' setExportContextFlag'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Mutable'
            UnionType
              TypeReference
                Identifier: 'ModuleDeclaration'
              TypeReference
                Identifier: ' SourceFile'
        Block
          IfStatement
            BinaryExpression
              BinaryExpression
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'flags'
                AmpersandToken
                PropertyAccessExpression
                  Identifier: ' NodeFlags'
                  Identifier: 'Ambient'
              AmpersandAmpersandToken
              PrefixUnaryExpression
                CallExpression
                  Identifier: 'hasExportDeclarations'
                  Identifier: 'node'
            Block
              ExpressionStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: '
            node'
                    Identifier: 'flags'
                  BarEqualsToken
                  PropertyAccessExpression
                    Identifier: ' NodeFlags'
                    Identifier: 'ExportContext'
            Block
              ExpressionStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: '
            node'
                    Identifier: 'flags'
                  AmpersandEqualsToken
                  PrefixUnaryExpression
                    PropertyAccessExpression
                      Identifier: 'NodeFlags'
                      Identifier: 'ExportContext'
      FunctionDeclaration
        Identifier: ' bindModuleDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' ModuleDeclaration'
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        setExportContextFlag'
              Identifier: 'node'
          IfStatement
            CallExpression
              Identifier: 'isAmbientModule'
              Identifier: 'node'
            Block
              IfStatement
                CallExpression
                  Identifier: 'hasSyntacticModifier'
                  Identifier: 'node'
                  PropertyAccessExpression
                    Identifier: ' ModifierFlags'
                    Identifier: 'Export'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                errorOnFirstToken'
                      Identifier: 'node'
                      PropertyAccessExpression
                        Identifier: ' Diagnostics'
                        Identifier: 'export_modifier_cannot_be_applied_to_ambient_modules_and_module_augmentations_since_they_are_always_visible'
              IfStatement
                CallExpression
                  Identifier: 'isModuleAugmentationExternal'
                  Identifier: 'node'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                declareModuleSymbol'
                      Identifier: 'node'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' pattern'
                        UnionType
                          StringKeyword
                          TypeReference
                            Identifier: ' Pattern'
                          UndefinedKeyword
                  IfStatement
                    BinaryExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: 'node'
                          Identifier: 'name'
                        Identifier: 'kind'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'StringLiteral'
                    Block
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            ObjectBindingPattern
                              BindingElement
                                Identifier: ' text'
                            PropertyAccessExpression
                              Identifier: ' node'
                              Identifier: 'name'
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    pattern'
                          EqualsToken
                          CallExpression
                            Identifier: ' tryParsePattern'
                            Identifier: 'text'
                      IfStatement
                        BinaryExpression
                          Identifier: 'pattern'
                          EqualsEqualsEqualsToken
                          Identifier: ' undefined'
                        Block
                          ExpressionStatement
                            CallExpression
                              Identifier: '
                        errorOnFirstToken'
                              PropertyAccessExpression
                                Identifier: 'node'
                                Identifier: 'name'
                              PropertyAccessExpression
                                Identifier: ' Diagnostics'
                                Identifier: 'Pattern_0_can_have_at_most_one_Asterisk_character'
                              Identifier: ' text'
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' symbol'
                        NonNullExpression
                          CallExpression
                            Identifier: ' declareSymbolAndAddToSymbolTable'
                            Identifier: 'node'
                            PropertyAccessExpression
                              Identifier: ' SymbolFlags'
                              Identifier: 'ValueModule'
                            PropertyAccessExpression
                              Identifier: ' SymbolFlags'
                              Identifier: 'ValueModuleExcludes'
                  ExpressionStatement
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: '
                file'
                        Identifier: 'patternAmbientModules'
                      EqualsToken
                      CallExpression
                        Identifier: ' append'
                        TypeReference
                          Identifier: 'PatternAmbientModule'
                        PropertyAccessExpression
                          Identifier: 'file'
                          Identifier: 'patternAmbientModules'
                        ConditionalExpression
                          BinaryExpression
                            Identifier: ' pattern'
                            AmpersandAmpersandToken
                            PrefixUnaryExpression
                              CallExpression
                                Identifier: 'isString'
                                Identifier: 'pattern'
                          QuestionToken
                          ObjectLiteralExpression
                            ShorthandPropertyAssignment
                              Identifier: ' pattern'
                            ShorthandPropertyAssignment
                              Identifier: ' symbol'
                          ColonToken
                          Identifier: ' undefined'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' state'
                    CallExpression
                      Identifier: ' declareModuleSymbol'
                      Identifier: 'node'
              IfStatement
                BinaryExpression
                  Identifier: 'state'
                  ExclamationEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' ModuleInstanceState'
                    Identifier: 'NonInstantiated'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        ObjectBindingPattern
                          BindingElement
                            Identifier: ' symbol'
                        Identifier: ' node'
                  ExpressionStatement
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: '
                // if module was already merged with some function, class or non-const enum, treat it as non-const-enum-only
                symbol'
                        Identifier: 'constEnumOnlyModule'
                      EqualsToken
                      BinaryExpression
                        BinaryExpression
                          ParenthesizedExpression
                            PrefixUnaryExpression
                              ParenthesizedExpression
                                BinaryExpression
                                  PropertyAccessExpression
                                    Identifier: 'symbol'
                                    Identifier: 'flags'
                                  AmpersandToken
                                  ParenthesizedExpression
                                    BinaryExpression
                                      BinaryExpression
                                        PropertyAccessExpression
                                          Identifier: 'SymbolFlags'
                                          Identifier: 'Function'
                                        BarToken
                                        PropertyAccessExpression
                                          Identifier: ' SymbolFlags'
                                          Identifier: 'Class'
                                      BarToken
                                      PropertyAccessExpression
                                        Identifier: ' SymbolFlags'
                                        Identifier: 'RegularEnum'
                          AmpersandAmpersandToken
                          BinaryExpression
                            Identifier: ' state'
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' ModuleInstanceState'
                              Identifier: 'ConstEnumOnly'
                        AmpersandAmpersandToken
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: ' symbol'
                            Identifier: 'constEnumOnlyModule'
                          ExclamationEqualsEqualsToken
                          FalseKeyword
      FunctionDeclaration
        Identifier: ' declareModuleSymbol'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' ModuleDeclaration'
        TypeReference
          Identifier: ' ModuleInstanceState'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' state'
                CallExpression
                  Identifier: ' getModuleInstanceState'
                  Identifier: 'node'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' instantiated'
                BinaryExpression
                  Identifier: ' state'
                  ExclamationEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' ModuleInstanceState'
                    Identifier: 'NonInstantiated'
          ExpressionStatement
            CallExpression
              Identifier: '
        declareSymbolAndAddToSymbolTable'
              Identifier: '
            node'
              ConditionalExpression
                Identifier: '
            instantiated'
                QuestionToken
                PropertyAccessExpression
                  Identifier: ' SymbolFlags'
                  Identifier: 'ValueModule'
                ColonToken
                PropertyAccessExpression
                  Identifier: ' SymbolFlags'
                  Identifier: 'NamespaceModule'
              ConditionalExpression
                Identifier: '
            instantiated'
                QuestionToken
                PropertyAccessExpression
                  Identifier: ' SymbolFlags'
                  Identifier: 'ValueModuleExcludes'
                ColonToken
                PropertyAccessExpression
                  Identifier: ' SymbolFlags'
                  Identifier: 'NamespaceModuleExcludes'
          ReturnStatement
            Identifier: ' state'
      FunctionDeclaration
        Identifier: ' bindFunctionOrConstructorType'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' SignatureDeclaration'
            TypeReference
              Identifier: ' JSDocSignature'
        VoidKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' symbol'
                CallExpression
                  Identifier: ' createSymbol'
                  PropertyAccessExpression
                    Identifier: 'SymbolFlags'
                    Identifier: 'Signature'
                  NonNullExpression
                    CallExpression
                      Identifier: ' getDeclarationName'
                      Identifier: 'node'
          ExpressionStatement
            CallExpression
              Identifier: ' // TODO: GH#18217
        addDeclarationToSymbol'
              Identifier: 'symbol'
              Identifier: ' node'
              PropertyAccessExpression
                Identifier: ' SymbolFlags'
                Identifier: 'Signature'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' typeLiteralSymbol'
                CallExpression
                  Identifier: ' createSymbol'
                  PropertyAccessExpression
                    Identifier: 'SymbolFlags'
                    Identifier: 'TypeLiteral'
                  PropertyAccessExpression
                    Identifier: ' InternalSymbolName'
                    Identifier: 'Type'
          ExpressionStatement
            CallExpression
              Identifier: '
        addDeclarationToSymbol'
              Identifier: 'typeLiteralSymbol'
              Identifier: ' node'
              PropertyAccessExpression
                Identifier: ' SymbolFlags'
                Identifier: 'TypeLiteral'
          ExpressionStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: '
        typeLiteralSymbol'
                Identifier: 'members'
              EqualsToken
              CallExpression
                Identifier: ' createSymbolTable'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: '
        typeLiteralSymbol'
                  Identifier: 'members'
                Identifier: 'set'
              PropertyAccessExpression
                Identifier: 'symbol'
                Identifier: 'escapedName'
              Identifier: ' symbol'
      FunctionDeclaration
        Identifier: ' bindObjectLiteralExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' ObjectLiteralExpression'
        Block
          ReturnStatement
            CallExpression
              Identifier: ' bindAnonymousDeclaration'
              Identifier: 'node'
              PropertyAccessExpression
                Identifier: ' SymbolFlags'
                Identifier: 'ObjectLiteral'
              PropertyAccessExpression
                Identifier: ' InternalSymbolName'
                Identifier: 'Object'
      FunctionDeclaration
        Identifier: ' bindJsxAttributes'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' JsxAttributes'
        Block
          ReturnStatement
            CallExpression
              Identifier: ' bindAnonymousDeclaration'
              Identifier: 'node'
              PropertyAccessExpression
                Identifier: ' SymbolFlags'
                Identifier: 'ObjectLiteral'
              PropertyAccessExpression
                Identifier: ' InternalSymbolName'
                Identifier: 'JSXAttributes'
      FunctionDeclaration
        Identifier: ' bindJsxAttribute'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' JsxAttribute'
        Parameter
          Identifier: ' symbolFlags'
          TypeReference
            Identifier: ' SymbolFlags'
        Parameter
          Identifier: ' symbolExcludes'
          TypeReference
            Identifier: ' SymbolFlags'
        Block
          ReturnStatement
            CallExpression
              Identifier: ' declareSymbolAndAddToSymbolTable'
              Identifier: 'node'
              Identifier: ' symbolFlags'
              Identifier: ' symbolExcludes'
      FunctionDeclaration
        Identifier: ' bindAnonymousDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Declaration'
        Parameter
          Identifier: ' symbolFlags'
          TypeReference
            Identifier: ' SymbolFlags'
        Parameter
          Identifier: ' name'
          TypeReference
            Identifier: ' __String'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' symbol'
                CallExpression
                  Identifier: ' createSymbol'
                  Identifier: 'symbolFlags'
                  Identifier: ' name'
          IfStatement
            BinaryExpression
              Identifier: 'symbolFlags'
              AmpersandToken
              ParenthesizedExpression
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: 'SymbolFlags'
                    Identifier: 'EnumMember'
                  BarToken
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'ClassMember'
            Block
              ExpressionStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: '
            symbol'
                    Identifier: 'parent'
                  EqualsToken
                  PropertyAccessExpression
                    Identifier: ' container'
                    Identifier: 'symbol'
          ExpressionStatement
            CallExpression
              Identifier: '
        addDeclarationToSymbol'
              Identifier: 'symbol'
              Identifier: ' node'
              Identifier: ' symbolFlags'
          ReturnStatement
            Identifier: ' symbol'
      FunctionDeclaration
        Identifier: ' bindBlockScopedDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Declaration'
        Parameter
          Identifier: ' symbolFlags'
          TypeReference
            Identifier: ' SymbolFlags'
        Parameter
          Identifier: ' symbolExcludes'
          TypeReference
            Identifier: ' SymbolFlags'
        Block
          SwitchStatement
            PropertyAccessExpression
              Identifier: 'blockScopeContainer'
              Identifier: 'kind'
            CaseBlock
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ModuleDeclaration'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                declareModuleMember'
                    Identifier: 'node'
                    Identifier: ' symbolFlags'
                    Identifier: ' symbolExcludes'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'SourceFile'
                IfStatement
                  CallExpression
                    Identifier: 'isExternalOrCommonJsModule'
                    AsExpression
                      Identifier: 'container'
                      TypeReference
                        Identifier: ' SourceFile'
                  Block
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                    declareModuleMember'
                        Identifier: 'node'
                        Identifier: ' symbolFlags'
                        Identifier: ' symbolExcludes'
                    BreakStatement
              DefaultClause
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
                Debug'
                      Identifier: 'assertNode'
                    Identifier: 'blockScopeContainer'
                    Identifier: ' canHaveLocals'
                IfStatement
                  PrefixUnaryExpression
                    PropertyAccessExpression
                      Identifier: 'blockScopeContainer'
                      Identifier: 'locals'
                  Block
                    ExpressionStatement
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: '
                    blockScopeContainer'
                          Identifier: 'locals'
                        EqualsToken
                        CallExpression
                          Identifier: ' createSymbolTable'
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                    addToContainerChain'
                        Identifier: 'blockScopeContainer'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                declareSymbol'
                    PropertyAccessExpression
                      Identifier: 'blockScopeContainer'
                      Identifier: 'locals'
                    Identifier: ' /*parent*/ undefined'
                    Identifier: ' node'
                    Identifier: ' symbolFlags'
                    Identifier: ' symbolExcludes'
      FunctionDeclaration
        Identifier: ' delayedBindJSDocTypedefTag'
        Block
          IfStatement
            PrefixUnaryExpression
              Identifier: 'delayedTypeAliases'
            Block
              ReturnStatement
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveContainer'
                Identifier: ' container'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveLastContainer'
                Identifier: ' lastContainer'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveBlockScopeContainer'
                Identifier: ' blockScopeContainer'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveParent'
                Identifier: ' parent'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveCurrentFlow'
                Identifier: ' currentFlow'
          ForOfStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' typeAlias'
            Identifier: ' delayedTypeAliases'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' host'
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: ' typeAlias'
                        Identifier: 'parent'
                      Identifier: 'parent'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            container'
                  EqualsToken
                  BinaryExpression
                    ParenthesizedExpression
                      AsExpression
                        CallExpression
                          Identifier: 'getEnclosingContainer'
                          Identifier: 'host'
                        UnionType
                          TypeReference
                            Identifier: ' IsContainer'
                          UndefinedKeyword
                    BarBarToken
                    Identifier: ' file'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            blockScopeContainer'
                  EqualsToken
                  BinaryExpression
                    ParenthesizedExpression
                      AsExpression
                        CallExpression
                          Identifier: 'getEnclosingBlockScopeContainer'
                          Identifier: 'host'
                        UnionType
                          TypeReference
                            Identifier: ' IsBlockScopedContainer'
                          UndefinedKeyword
                    BarBarToken
                    Identifier: ' file'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            currentFlow'
                  EqualsToken
                  CallExpression
                    Identifier: ' createFlowNode'
                    PropertyAccessExpression
                      Identifier: 'FlowFlags'
                      Identifier: 'Start'
                    Identifier: ' /*node*/ undefined'
                    Identifier: ' /*antecedent*/ undefined'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            parent'
                  EqualsToken
                  Identifier: ' typeAlias'
              ExpressionStatement
                CallExpression
                  Identifier: '
            bind'
                  PropertyAccessExpression
                    Identifier: 'typeAlias'
                    Identifier: 'typeExpression'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' declName'
                    CallExpression
                      Identifier: ' getNameOfDeclaration'
                      Identifier: 'typeAlias'
              IfStatement
                BinaryExpression
                  BinaryExpression
                    ParenthesizedExpression
                      BinaryExpression
                        CallExpression
                          Identifier: 'isJSDocEnumTag'
                          Identifier: 'typeAlias'
                        BarBarToken
                        PrefixUnaryExpression
                          PropertyAccessExpression
                            Identifier: 'typeAlias'
                            Identifier: 'fullName'
                    AmpersandAmpersandToken
                    Identifier: ' declName'
                  AmpersandAmpersandToken
                  CallExpression
                    Identifier: ' isPropertyAccessEntityNameExpression'
                    PropertyAccessExpression
                      Identifier: 'declName'
                      Identifier: 'parent'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' isTopLevel'
                        CallExpression
                          Identifier: ' isTopLevelNamespaceAssignment'
                          PropertyAccessExpression
                            Identifier: 'declName'
                            Identifier: 'parent'
                  IfStatement
                    Identifier: 'isTopLevel'
                    Block
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    bindPotentiallyMissingNamespaces'
                          PropertyAccessExpression
                            Identifier: 'file'
                            Identifier: 'symbol'
                          PropertyAccessExpression
                            Identifier: ' declName'
                            Identifier: 'parent'
                          Identifier: ' isTopLevel'
                          PrefixUnaryExpression
                            PrefixUnaryExpression
                              CallExpression
                                Identifier: 'findAncestor'
                                Identifier: 'declName'
                                ArrowFunction
                                  Parameter
                                    Identifier: ' d'
                                  EqualsGreaterThanToken
                                  BinaryExpression
                                    CallExpression
                                      Identifier: ' isPropertyAccessExpression'
                                      Identifier: 'd'
                                    AmpersandAmpersandToken
                                    BinaryExpression
                                      PropertyAccessExpression
                                        PropertyAccessExpression
                                          Identifier: ' d'
                                          Identifier: 'name'
                                        Identifier: 'escapedText'
                                      EqualsEqualsEqualsToken
                                      StringLiteral
                          FalseKeyword
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' oldContainer'
                            Identifier: ' container'
                      SwitchStatement
                        CallExpression
                          Identifier: 'getAssignmentDeclarationPropertyAccessKind'
                          PropertyAccessExpression
                            Identifier: 'declName'
                            Identifier: 'parent'
                        CaseBlock
                          CaseClause
                            PropertyAccessExpression
                              Identifier: ' AssignmentDeclarationKind'
                              Identifier: 'ExportsProperty'
                          CaseClause
                            PropertyAccessExpression
                              Identifier: ' AssignmentDeclarationKind'
                              Identifier: 'ModuleExports'
                            IfStatement
                              PrefixUnaryExpression
                                CallExpression
                                  Identifier: 'isExternalOrCommonJsModule'
                                  Identifier: 'file'
                              Block
                                ExpressionStatement
                                  BinaryExpression
                                    Identifier: '
                                container'
                                    EqualsToken
                                    NonNullExpression
                                      Identifier: ' undefined'
                              Block
                                ExpressionStatement
                                  BinaryExpression
                                    Identifier: '
                                container'
                                    EqualsToken
                                    Identifier: ' file'
                            BreakStatement
                          CaseClause
                            PropertyAccessExpression
                              Identifier: ' AssignmentDeclarationKind'
                              Identifier: 'ThisProperty'
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                            container'
                                EqualsToken
                                PropertyAccessExpression
                                  PropertyAccessExpression
                                    Identifier: ' declName'
                                    Identifier: 'parent'
                                  Identifier: 'expression'
                            BreakStatement
                          CaseClause
                            PropertyAccessExpression
                              Identifier: ' AssignmentDeclarationKind'
                              Identifier: 'PrototypeProperty'
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                            container'
                                EqualsToken
                                PropertyAccessExpression
                                  ParenthesizedExpression
                                    AsExpression
                                      PropertyAccessExpression
                                        PropertyAccessExpression
                                          Identifier: 'declName'
                                          Identifier: 'parent'
                                        Identifier: 'expression'
                                      TypeReference
                                        Identifier: ' PropertyAccessEntityNameExpression'
                                  Identifier: 'name'
                            BreakStatement
                          CaseClause
                            PropertyAccessExpression
                              Identifier: ' AssignmentDeclarationKind'
                              Identifier: 'Property'
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                            container'
                                EqualsToken
                                ConditionalExpression
                                  CallExpression
                                    Identifier: ' isExportsOrModuleExportsOrAlias'
                                    Identifier: 'file'
                                    PropertyAccessExpression
                                      PropertyAccessExpression
                                        Identifier: ' declName'
                                        Identifier: 'parent'
                                      Identifier: 'expression'
                                  QuestionToken
                                  Identifier: ' file'
                                  ColonToken
                                  ConditionalExpression
                                    CallExpression
                                      Identifier: ' isPropertyAccessExpression'
                                      PropertyAccessExpression
                                        PropertyAccessExpression
                                          Identifier: 'declName'
                                          Identifier: 'parent'
                                        Identifier: 'expression'
                                    QuestionToken
                                    PropertyAccessExpression
                                      PropertyAccessExpression
                                        PropertyAccessExpression
                                          Identifier: ' declName'
                                          Identifier: 'parent'
                                        Identifier: 'expression'
                                      Identifier: 'name'
                                    ColonToken
                                    PropertyAccessExpression
                                      PropertyAccessExpression
                                        Identifier: ' declName'
                                        Identifier: 'parent'
                                      Identifier: 'expression'
                            BreakStatement
                          CaseClause
                            PropertyAccessExpression
                              Identifier: ' AssignmentDeclarationKind'
                              Identifier: 'None'
                            ReturnStatement
                              CallExpression
                                PropertyAccessExpression
                                  Identifier: ' Debug'
                                  Identifier: 'fail'
                                StringLiteral
                      IfStatement
                        Identifier: 'container'
                        Block
                          ExpressionStatement
                            CallExpression
                              Identifier: '
                        declareModuleMember'
                              Identifier: 'typeAlias'
                              PropertyAccessExpression
                                Identifier: ' SymbolFlags'
                                Identifier: 'TypeAlias'
                              PropertyAccessExpression
                                Identifier: ' SymbolFlags'
                                Identifier: 'TypeAliasExcludes'
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    container'
                          EqualsToken
                          Identifier: ' oldContainer'
                IfStatement
                  BinaryExpression
                    BinaryExpression
                      CallExpression
                        Identifier: 'isJSDocEnumTag'
                        Identifier: 'typeAlias'
                      BarBarToken
                      PrefixUnaryExpression
                        PropertyAccessExpression
                          Identifier: 'typeAlias'
                          Identifier: 'fullName'
                    BarBarToken
                    BinaryExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: ' typeAlias'
                          Identifier: 'fullName'
                        Identifier: 'kind'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'Identifier'
                  Block
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                parent'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' typeAlias'
                          Identifier: 'parent'
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                bindBlockScopedDeclaration'
                        Identifier: 'typeAlias'
                        PropertyAccessExpression
                          Identifier: ' SymbolFlags'
                          Identifier: 'TypeAlias'
                        PropertyAccessExpression
                          Identifier: ' SymbolFlags'
                          Identifier: 'TypeAliasExcludes'
                  Block
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                bind'
                        PropertyAccessExpression
                          Identifier: 'typeAlias'
                          Identifier: 'fullName'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        container'
              EqualsToken
              Identifier: ' saveContainer'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        lastContainer'
              EqualsToken
              Identifier: ' saveLastContainer'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        blockScopeContainer'
              EqualsToken
              Identifier: ' saveBlockScopeContainer'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        parent'
              EqualsToken
              Identifier: ' saveParent'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentFlow'
              EqualsToken
              Identifier: ' saveCurrentFlow'
      FunctionDeclaration
        Identifier: ' bindJSDocImports'
        Block
          IfStatement
            BinaryExpression
              Identifier: 'jsDocImports'
              EqualsEqualsEqualsToken
              Identifier: ' undefined'
            Block
              ReturnStatement
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveContainer'
                Identifier: ' container'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveLastContainer'
                Identifier: ' lastContainer'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveBlockScopeContainer'
                Identifier: ' blockScopeContainer'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveParent'
                Identifier: ' parent'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveCurrentFlow'
                Identifier: ' currentFlow'
          ForOfStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' jsDocImportTag'
            Identifier: ' jsDocImports'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' host'
                    CallExpression
                      Identifier: ' getJSDocHost'
                      Identifier: 'jsDocImportTag'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' enclosingContainer'
                    ConditionalExpression
                      Identifier: ' host'
                      QuestionToken
                      AsExpression
                        CallExpression
                          Identifier: ' getEnclosingContainer'
                          Identifier: 'host'
                        UnionType
                          TypeReference
                            Identifier: ' IsContainer'
                          UndefinedKeyword
                      ColonToken
                      Identifier: ' undefined'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' enclosingBlockScopeContainer'
                    ConditionalExpression
                      Identifier: ' host'
                      QuestionToken
                      AsExpression
                        CallExpression
                          Identifier: ' getEnclosingBlockScopeContainer'
                          Identifier: 'host'
                        UnionType
                          TypeReference
                            Identifier: ' IsBlockScopedContainer'
                          UndefinedKeyword
                      ColonToken
                      Identifier: ' undefined'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            container'
                  EqualsToken
                  BinaryExpression
                    Identifier: ' enclosingContainer'
                    BarBarToken
                    Identifier: ' file'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            blockScopeContainer'
                  EqualsToken
                  BinaryExpression
                    Identifier: ' enclosingBlockScopeContainer'
                    BarBarToken
                    Identifier: ' file'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            currentFlow'
                  EqualsToken
                  CallExpression
                    Identifier: ' createFlowNode'
                    PropertyAccessExpression
                      Identifier: 'FlowFlags'
                      Identifier: 'Start'
                    Identifier: ' /*node*/ undefined'
                    Identifier: ' /*antecedent*/ undefined'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            parent'
                  EqualsToken
                  Identifier: ' jsDocImportTag'
              ExpressionStatement
                CallExpression
                  Identifier: '
            bind'
                  PropertyAccessExpression
                    Identifier: 'jsDocImportTag'
                    Identifier: 'importClause'
          ExpressionStatement
            BinaryExpression
              Identifier: '

        container'
              EqualsToken
              Identifier: ' saveContainer'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        lastContainer'
              EqualsToken
              Identifier: ' saveLastContainer'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        blockScopeContainer'
              EqualsToken
              Identifier: ' saveBlockScopeContainer'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        parent'
              EqualsToken
              Identifier: ' saveParent'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        currentFlow'
              EqualsToken
              Identifier: ' saveCurrentFlow'
      FunctionDeclaration
        Identifier: ' checkContextualIdentifier'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Identifier'
        Block
          IfStatement
            BinaryExpression
              BinaryExpression
                BinaryExpression
                  PrefixUnaryExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: 'file'
                        Identifier: 'parseDiagnostics'
                      Identifier: 'length'
                  AmpersandAmpersandToken
                  PrefixUnaryExpression
                    ParenthesizedExpression
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: 'node'
                          Identifier: 'flags'
                        AmpersandToken
                        PropertyAccessExpression
                          Identifier: ' NodeFlags'
                          Identifier: 'Ambient'
                AmpersandAmpersandToken
                PrefixUnaryExpression
                  ParenthesizedExpression
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'flags'
                      AmpersandToken
                      PropertyAccessExpression
                        Identifier: ' NodeFlags'
                        Identifier: 'JSDoc'
              AmpersandAmpersandToken
              PrefixUnaryExpression
                CallExpression
                  Identifier: 'isIdentifierName'
                  Identifier: 'node'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' originalKeywordKind'
                    CallExpression
                      Identifier: ' identifierToKeywordKind'
                      Identifier: 'node'
              IfStatement
                BinaryExpression
                  Identifier: 'originalKeywordKind'
                  EqualsEqualsEqualsToken
                  Identifier: ' undefined'
                Block
                  ReturnStatement
              IfStatement
                BinaryExpression
                  BinaryExpression
                    Identifier: '
                inStrictMode'
                    AmpersandAmpersandToken
                    BinaryExpression
                      Identifier: '
                originalKeywordKind'
                      GreaterThanEqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'FirstFutureReservedWord'
                  AmpersandAmpersandToken
                  BinaryExpression
                    Identifier: '
                originalKeywordKind'
                    LessThanEqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'LastFutureReservedWord'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: '
                file'
                          Identifier: 'bindDiagnostics'
                        Identifier: 'push'
                      CallExpression
                        Identifier: 'createDiagnosticForNode'
                        Identifier: 'node'
                        CallExpression
                          Identifier: ' getStrictModeIdentifierMessage'
                          Identifier: 'node'
                        CallExpression
                          Identifier: ' declarationNameToString'
                          Identifier: 'node'
                IfStatement
                  BinaryExpression
                    Identifier: 'originalKeywordKind'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'AwaitKeyword'
                  Block
                    IfStatement
                      BinaryExpression
                        CallExpression
                          Identifier: 'isExternalModule'
                          Identifier: 'file'
                        AmpersandAmpersandToken
                        CallExpression
                          Identifier: ' isInTopLevelContext'
                          Identifier: 'node'
                      Block
                        ExpressionStatement
                          CallExpression
                            PropertyAccessExpression
                              PropertyAccessExpression
                                Identifier: '
                    file'
                                Identifier: 'bindDiagnostics'
                              Identifier: 'push'
                            CallExpression
                              Identifier: 'createDiagnosticForNode'
                              Identifier: 'node'
                              PropertyAccessExpression
                                Identifier: ' Diagnostics'
                                Identifier: 'Identifier_expected_0_is_a_reserved_word_at_the_top_level_of_a_module'
                              CallExpression
                                Identifier: ' declarationNameToString'
                                Identifier: 'node'
                      IfStatement
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: 'node'
                            Identifier: 'flags'
                          AmpersandToken
                          PropertyAccessExpression
                            Identifier: ' NodeFlags'
                            Identifier: 'AwaitContext'
                        Block
                          ExpressionStatement
                            CallExpression
                              PropertyAccessExpression
                                PropertyAccessExpression
                                  Identifier: '
                    file'
                                  Identifier: 'bindDiagnostics'
                                Identifier: 'push'
                              CallExpression
                                Identifier: 'createDiagnosticForNode'
                                Identifier: 'node'
                                PropertyAccessExpression
                                  Identifier: ' Diagnostics'
                                  Identifier: 'Identifier_expected_0_is_a_reserved_word_that_cannot_be_used_here'
                                CallExpression
                                  Identifier: ' declarationNameToString'
                                  Identifier: 'node'
                  IfStatement
                    BinaryExpression
                      BinaryExpression
                        Identifier: 'originalKeywordKind'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'YieldKeyword'
                      AmpersandAmpersandToken
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: ' node'
                          Identifier: 'flags'
                        AmpersandToken
                        PropertyAccessExpression
                          Identifier: ' NodeFlags'
                          Identifier: 'YieldContext'
                    Block
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            PropertyAccessExpression
                              Identifier: '
                file'
                              Identifier: 'bindDiagnostics'
                            Identifier: 'push'
                          CallExpression
                            Identifier: 'createDiagnosticForNode'
                            Identifier: 'node'
                            PropertyAccessExpression
                              Identifier: ' Diagnostics'
                              Identifier: 'Identifier_expected_0_is_a_reserved_word_that_cannot_be_used_here'
                            CallExpression
                              Identifier: ' declarationNameToString'
                              Identifier: 'node'
      FunctionDeclaration
        Identifier: ' getStrictModeIdentifierMessage'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        Block
          IfStatement
            CallExpression
              Identifier: 'getContainingClass'
              Identifier: 'node'
            Block
              ReturnStatement
                PropertyAccessExpression
                  Identifier: ' Diagnostics'
                  Identifier: 'Identifier_expected_0_is_a_reserved_word_in_strict_mode_Class_definitions_are_automatically_in_strict_mode'
          IfStatement
            PropertyAccessExpression
              Identifier: 'file'
              Identifier: 'externalModuleIndicator'
            Block
              ReturnStatement
                PropertyAccessExpression
                  Identifier: ' Diagnostics'
                  Identifier: 'Identifier_expected_0_is_a_reserved_word_in_strict_mode_Modules_are_automatically_in_strict_mode'
          ReturnStatement
            PropertyAccessExpression
              Identifier: ' Diagnostics'
              Identifier: 'Identifier_expected_0_is_a_reserved_word_in_strict_mode'
      FunctionDeclaration
        Identifier: ' checkPrivateIdentifier'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' PrivateIdentifier'
        Block
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'escapedText'
              EqualsEqualsEqualsToken
              StringLiteral
            Block
              IfStatement
                PrefixUnaryExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: 'file'
                      Identifier: 'parseDiagnostics'
                    Identifier: 'length'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: '
                file'
                          Identifier: 'bindDiagnostics'
                        Identifier: 'push'
                      CallExpression
                        Identifier: 'createDiagnosticForNode'
                        Identifier: 'node'
                        PropertyAccessExpression
                          Identifier: ' Diagnostics'
                          Identifier: 'constructor_is_a_reserved_word'
                        CallExpression
                          Identifier: ' declarationNameToString'
                          Identifier: 'node'
      FunctionDeclaration
        Identifier: ' checkStrictModeBinaryExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' BinaryExpression'
        Block
          IfStatement
            BinaryExpression
              BinaryExpression
                Identifier: 'inStrictMode'
                AmpersandAmpersandToken
                CallExpression
                  Identifier: ' isLeftHandSideExpression'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'left'
              AmpersandAmpersandToken
              CallExpression
                Identifier: ' isAssignmentOperator'
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'operatorToken'
                  Identifier: 'kind'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            // ECMA 262 (Annex C) The identifier eval or arguments may not appear as the LeftHandSideExpression of an
            // Assignment operator(11.13) or of a PostfixExpression(11.3)
            checkStrictModeEvalOrArguments'
                  Identifier: 'node'
                  AsExpression
                    PropertyAccessExpression
                      Identifier: ' node'
                      Identifier: 'left'
                    TypeReference
                      Identifier: ' Identifier'
      FunctionDeclaration
        Identifier: ' checkStrictModeCatchClause'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' CatchClause'
        Block
          IfStatement
            BinaryExpression
              Identifier: 'inStrictMode'
              AmpersandAmpersandToken
              PropertyAccessExpression
                Identifier: ' node'
                Identifier: 'variableDeclaration'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            checkStrictModeEvalOrArguments'
                  Identifier: 'node'
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: ' node'
                      Identifier: 'variableDeclaration'
                    Identifier: 'name'
      FunctionDeclaration
        Identifier: ' checkStrictModeDeleteExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' DeleteExpression'
        Block
          IfStatement
            BinaryExpression
              Identifier: 'inStrictMode'
              AmpersandAmpersandToken
              BinaryExpression
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: ' node'
                    Identifier: 'expression'
                  Identifier: 'kind'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'Identifier'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' span'
                    CallExpression
                      Identifier: ' getErrorSpanForNode'
                      Identifier: 'file'
                      PropertyAccessExpression
                        Identifier: ' node'
                        Identifier: 'expression'
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: '
            file'
                      Identifier: 'bindDiagnostics'
                    Identifier: 'push'
                  CallExpression
                    Identifier: 'createFileDiagnostic'
                    Identifier: 'file'
                    PropertyAccessExpression
                      Identifier: ' span'
                      Identifier: 'start'
                    PropertyAccessExpression
                      Identifier: ' span'
                      Identifier: 'length'
                    PropertyAccessExpression
                      Identifier: ' Diagnostics'
                      Identifier: 'delete_cannot_be_called_on_an_identifier_in_strict_mode'
      FunctionDeclaration
        Identifier: ' isEvalOrArgumentsIdentifier'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        BooleanKeyword
        Block
          ReturnStatement
            BinaryExpression
              CallExpression
                Identifier: ' isIdentifier'
                Identifier: 'node'
              AmpersandAmpersandToken
              ParenthesizedExpression
                BinaryExpression
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'escapedText'
                    EqualsEqualsEqualsToken
                    StringLiteral
                  BarBarToken
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: ' node'
                      Identifier: 'escapedText'
                    EqualsEqualsEqualsToken
                    StringLiteral
      FunctionDeclaration
        Identifier: ' checkStrictModeEvalOrArguments'
        Parameter
          Identifier: 'contextNode'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' name'
          UnionType
            TypeReference
              Identifier: ' Node'
            UndefinedKeyword
        Block
          IfStatement
            BinaryExpression
              Identifier: 'name'
              AmpersandAmpersandToken
              BinaryExpression
                PropertyAccessExpression
                  Identifier: ' name'
                  Identifier: 'kind'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'Identifier'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' identifier'
                    AsExpression
                      Identifier: ' name'
                      TypeReference
                        Identifier: ' Identifier'
              IfStatement
                CallExpression
                  Identifier: 'isEvalOrArgumentsIdentifier'
                  Identifier: 'identifier'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' span'
                        CallExpression
                          Identifier: ' getErrorSpanForNode'
                          Identifier: 'file'
                          Identifier: ' name'
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: '
                file'
                          Identifier: 'bindDiagnostics'
                        Identifier: 'push'
                      CallExpression
                        Identifier: 'createFileDiagnostic'
                        Identifier: 'file'
                        PropertyAccessExpression
                          Identifier: ' span'
                          Identifier: 'start'
                        PropertyAccessExpression
                          Identifier: ' span'
                          Identifier: 'length'
                        CallExpression
                          Identifier: ' getStrictModeEvalOrArgumentsMessage'
                          Identifier: 'contextNode'
                        CallExpression
                          Identifier: ' idText'
                          Identifier: 'identifier'
      FunctionDeclaration
        Identifier: ' getStrictModeEvalOrArgumentsMessage'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        Block
          IfStatement
            CallExpression
              Identifier: 'getContainingClass'
              Identifier: 'node'
            Block
              ReturnStatement
                PropertyAccessExpression
                  Identifier: ' Diagnostics'
                  Identifier: 'Code_contained_in_a_class_is_evaluated_in_JavaScript_s_strict_mode_which_does_not_allow_this_use_of_0_For_more_information_see_https_Colon_Slash_Slashdeveloper_mozilla_org_Slashen_US_Slashdocs_SlashWeb_SlashJavaScript_SlashReference_SlashStrict_mode'
          IfStatement
            PropertyAccessExpression
              Identifier: 'file'
              Identifier: 'externalModuleIndicator'
            Block
              ReturnStatement
                PropertyAccessExpression
                  Identifier: ' Diagnostics'
                  Identifier: 'Invalid_use_of_0_Modules_are_automatically_in_strict_mode'
          ReturnStatement
            PropertyAccessExpression
              Identifier: ' Diagnostics'
              Identifier: 'Invalid_use_of_0_in_strict_mode'
      FunctionDeclaration
        Identifier: ' checkStrictModeFunctionName'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' FunctionLikeDeclaration'
        Block
          IfStatement
            BinaryExpression
              Identifier: 'inStrictMode'
              AmpersandAmpersandToken
              PrefixUnaryExpression
                ParenthesizedExpression
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'flags'
                    AmpersandToken
                    PropertyAccessExpression
                      Identifier: ' NodeFlags'
                      Identifier: 'Ambient'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            // It is a SyntaxError if the identifier eval or arguments appears within a FormalParameterList of a strict mode FunctionDeclaration or FunctionExpression (13.1))
            checkStrictModeEvalOrArguments'
                  Identifier: 'node'
                  PropertyAccessExpression
                    Identifier: ' node'
                    Identifier: 'name'
      FunctionDeclaration
        Identifier: ' getStrictModeBlockScopeFunctionDeclarationMessage'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        Block
          IfStatement
            CallExpression
              Identifier: 'getContainingClass'
              Identifier: 'node'
            Block
              ReturnStatement
                PropertyAccessExpression
                  Identifier: ' Diagnostics'
                  Identifier: 'Function_declarations_are_not_allowed_inside_blocks_in_strict_mode_when_targeting_ES5_Class_definitions_are_automatically_in_strict_mode'
          IfStatement
            PropertyAccessExpression
              Identifier: 'file'
              Identifier: 'externalModuleIndicator'
            Block
              ReturnStatement
                PropertyAccessExpression
                  Identifier: ' Diagnostics'
                  Identifier: 'Function_declarations_are_not_allowed_inside_blocks_in_strict_mode_when_targeting_ES5_Modules_are_automatically_in_strict_mode'
          ReturnStatement
            PropertyAccessExpression
              Identifier: ' Diagnostics'
              Identifier: 'Function_declarations_are_not_allowed_inside_blocks_in_strict_mode_when_targeting_ES5'
      FunctionDeclaration
        Identifier: ' checkStrictModeFunctionDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' FunctionDeclaration'
        Block
          IfStatement
            BinaryExpression
              Identifier: 'languageVersion'
              LessThanToken
              PropertyAccessExpression
                Identifier: ' ScriptTarget'
                Identifier: 'ES2015'
            Block
              IfStatement
                BinaryExpression
                  BinaryExpression
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: '
                blockScopeContainer'
                        Identifier: 'kind'
                      ExclamationEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'SourceFile'
                    AmpersandAmpersandToken
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: '
                blockScopeContainer'
                        Identifier: 'kind'
                      ExclamationEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'ModuleDeclaration'
                  AmpersandAmpersandToken
                  PrefixUnaryExpression
                    CallExpression
                      Identifier: 'isFunctionLikeOrClassStaticBlockDeclaration'
                      Identifier: 'blockScopeContainer'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' errorSpan'
                        CallExpression
                          Identifier: ' getErrorSpanForNode'
                          Identifier: 'file'
                          Identifier: ' node'
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: '
                file'
                          Identifier: 'bindDiagnostics'
                        Identifier: 'push'
                      CallExpression
                        Identifier: 'createFileDiagnostic'
                        Identifier: 'file'
                        PropertyAccessExpression
                          Identifier: ' errorSpan'
                          Identifier: 'start'
                        PropertyAccessExpression
                          Identifier: ' errorSpan'
                          Identifier: 'length'
                        CallExpression
                          Identifier: ' getStrictModeBlockScopeFunctionDeclarationMessage'
                          Identifier: 'node'
      FunctionDeclaration
        Identifier: ' checkStrictModePostfixUnaryExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' PostfixUnaryExpression'
        Block
          IfStatement
            Identifier: 'inStrictMode'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            checkStrictModeEvalOrArguments'
                  Identifier: 'node'
                  AsExpression
                    PropertyAccessExpression
                      Identifier: ' node'
                      Identifier: 'operand'
                    TypeReference
                      Identifier: ' Identifier'
      FunctionDeclaration
        Identifier: ' checkStrictModePrefixUnaryExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' PrefixUnaryExpression'
        Block
          IfStatement
            Identifier: 'inStrictMode'
            Block
              IfStatement
                BinaryExpression
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'operator'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'PlusPlusToken'
                  BarBarToken
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: ' node'
                      Identifier: 'operator'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'MinusMinusToken'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                checkStrictModeEvalOrArguments'
                      Identifier: 'node'
                      AsExpression
                        PropertyAccessExpression
                          Identifier: ' node'
                          Identifier: 'operand'
                        TypeReference
                          Identifier: ' Identifier'
      FunctionDeclaration
        Identifier: ' checkStrictModeWithStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' WithStatement'
        Block
          IfStatement
            Identifier: 'inStrictMode'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            errorOnFirstToken'
                  Identifier: 'node'
                  PropertyAccessExpression
                    Identifier: ' Diagnostics'
                    Identifier: 'with_statements_are_not_allowed_in_strict_mode'
      FunctionDeclaration
        Identifier: ' checkStrictModeLabeledStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' LabeledStatement'
        Block
          IfStatement
            BinaryExpression
              Identifier: 'inStrictMode'
              AmpersandAmpersandToken
              BinaryExpression
                CallExpression
                  Identifier: ' getEmitScriptTarget'
                  Identifier: 'options'
                GreaterThanEqualsToken
                PropertyAccessExpression
                  Identifier: ' ScriptTarget'
                  Identifier: 'ES2015'
            Block
              IfStatement
                BinaryExpression
                  CallExpression
                    Identifier: 'isDeclarationStatement'
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'statement'
                  BarBarToken
                  CallExpression
                    Identifier: ' isVariableStatement'
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'statement'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                errorOnFirstToken'
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'label'
                      PropertyAccessExpression
                        Identifier: ' Diagnostics'
                        Identifier: 'A_label_is_not_allowed_here'
      FunctionDeclaration
        Identifier: ' errorOnFirstToken'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' message'
          TypeReference
            Identifier: ' DiagnosticMessage'
        Parameter
          DotDotDotToken
          Identifier: 'args'
          TypeReference
            Identifier: ' DiagnosticArguments'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' span'
                CallExpression
                  Identifier: ' getSpanOfTokenAtPosition'
                  Identifier: 'file'
                  PropertyAccessExpression
                    Identifier: ' node'
                    Identifier: 'pos'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: '
        file'
                  Identifier: 'bindDiagnostics'
                Identifier: 'push'
              CallExpression
                Identifier: 'createFileDiagnostic'
                Identifier: 'file'
                PropertyAccessExpression
                  Identifier: ' span'
                  Identifier: 'start'
                PropertyAccessExpression
                  Identifier: ' span'
                  Identifier: 'length'
                Identifier: ' message'
                SpreadElement
                  Identifier: 'args'
      FunctionDeclaration
        Identifier: ' errorOrSuggestionOnNode'
        Parameter
          Identifier: 'isError'
          BooleanKeyword
        Parameter
          Identifier: ' node'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' message'
          TypeReference
            Identifier: ' DiagnosticMessage'
        VoidKeyword
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        errorOrSuggestionOnRange'
              Identifier: 'isError'
              Identifier: ' node'
              Identifier: ' node'
              Identifier: ' message'
      FunctionDeclaration
        Identifier: ' errorOrSuggestionOnRange'
        Parameter
          Identifier: 'isError'
          BooleanKeyword
        Parameter
          Identifier: ' startNode'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' endNode'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' message'
          TypeReference
            Identifier: ' DiagnosticMessage'
        VoidKeyword
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        addErrorOrSuggestionDiagnostic'
              Identifier: 'isError'
              ObjectLiteralExpression
                PropertyAssignment
                  Identifier: ' pos'
                  CallExpression
                    Identifier: ' getTokenPosOfNode'
                    Identifier: 'startNode'
                    Identifier: ' file'
                PropertyAssignment
                  Identifier: ' end'
                  PropertyAccessExpression
                    Identifier: ' endNode'
                    Identifier: 'end'
              Identifier: ' message'
      FunctionDeclaration
        Identifier: ' addErrorOrSuggestionDiagnostic'
        Parameter
          Identifier: 'isError'
          BooleanKeyword
        Parameter
          Identifier: ' range'
          TypeReference
            Identifier: ' TextRange'
        Parameter
          Identifier: ' message'
          TypeReference
            Identifier: ' DiagnosticMessage'
        VoidKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' diag'
                CallExpression
                  Identifier: ' createFileDiagnostic'
                  Identifier: 'file'
                  PropertyAccessExpression
                    Identifier: ' range'
                    Identifier: 'pos'
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: ' range'
                      Identifier: 'end'
                    MinusToken
                    PropertyAccessExpression
                      Identifier: ' range'
                      Identifier: 'pos'
                  Identifier: ' message'
          IfStatement
            Identifier: 'isError'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: '
            file'
                      Identifier: 'bindDiagnostics'
                    Identifier: 'push'
                  Identifier: 'diag'
            Block
              ExpressionStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: '
            file'
                    Identifier: 'bindSuggestionDiagnostics'
                  EqualsToken
                  CallExpression
                    Identifier: ' append'
                    PropertyAccessExpression
                      Identifier: 'file'
                      Identifier: 'bindSuggestionDiagnostics'
                    ObjectLiteralExpression
                      SpreadAssignment
                        Identifier: 'diag'
                      PropertyAssignment
                        Identifier: ' category'
                        PropertyAccessExpression
                          Identifier: ' DiagnosticCategory'
                          Identifier: 'Suggestion'
      FunctionDeclaration
        Identifier: ' bind'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' Node'
            UndefinedKeyword
        VoidKeyword
        Block
          IfStatement
            PrefixUnaryExpression
              Identifier: 'node'
            Block
              ReturnStatement
          ExpressionStatement
            CallExpression
              Identifier: '
        setParent'
              Identifier: 'node'
              Identifier: ' parent'
          IfStatement
            Identifier: 'tracing'
            ExpressionStatement
              BinaryExpression
                PropertyAccessExpression
                  ParenthesizedExpression
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' TracingNode'
                  Identifier: 'tracingPath'
                EqualsToken
                PropertyAccessExpression
                  Identifier: ' file'
                  Identifier: 'path'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveInStrictMode'
                Identifier: ' inStrictMode'
          ExpressionStatement
            CallExpression
              Identifier: '

        // Even though in the AST the jsdoc @typedef node belongs to the current node,
        // its symbol might be in the same scope with the current node's symbol. Consider:
        //
        //     /** @typedef {string | number} MyType */
        //     function foo();
        //
        // Here the current node is "foo", which is a container, but the scope of "MyType" should
        // not be inside "foo". Therefore we always bind @typedef before bind the parent node,
        // and skip binding this tag later when binding all the other jsdoc tags.

        // First we bind declaration nodes to a symbol if possible. We'll both create a symbol
        // and then potentially add the symbol to an appropriate symbol table. Possible
        // destination symbol tables are:
        //
        //  1) The 'exports' table of the current container's symbol.
        //  2) The 'members' table of the current container's symbol.
        //  3) The 'locals' table of the current container.
        //
        // However, not all symbols will end up in any of these tables. 'Anonymous' symbols
        // (like TypeLiterals for example) will not be put in any table.
        bindWorker'
              Identifier: 'node'
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'kind'
              GreaterThanToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'LastToken'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' saveParent'
                    Identifier: ' parent'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            parent'
                  EqualsToken
                  Identifier: ' node'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' containerFlags'
                    CallExpression
                      Identifier: ' getContainerFlags'
                      Identifier: 'node'
              IfStatement
                BinaryExpression
                  Identifier: 'containerFlags'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' ContainerFlags'
                    Identifier: 'None'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                bindChildren'
                      Identifier: 'node'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                bindContainer'
                      AsExpression
                        Identifier: 'node'
                        TypeReference
                          Identifier: ' HasContainerFlags'
                      Identifier: ' containerFlags'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            parent'
                  EqualsToken
                  Identifier: ' saveParent'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' saveParent'
                    Identifier: ' parent'
              IfStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'kind'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'EndOfFileToken'
                ExpressionStatement
                  BinaryExpression
                    Identifier: ' parent'
                    EqualsToken
                    Identifier: ' node'
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindJSDoc'
                  Identifier: 'node'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            parent'
                  EqualsToken
                  Identifier: ' saveParent'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        inStrictMode'
              EqualsToken
              Identifier: ' saveInStrictMode'
      FunctionDeclaration
        Identifier: ' bindJSDoc'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        Block
          IfStatement
            CallExpression
              Identifier: 'hasJSDocNodes'
              Identifier: 'node'
            Block
              IfStatement
                CallExpression
                  Identifier: 'isInJSFile'
                  Identifier: 'node'
                Block
                  ForOfStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' j'
                    NonNullExpression
                      PropertyAccessExpression
                        Identifier: ' node'
                        Identifier: 'jsDoc'
                    Block
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    bind'
                          Identifier: 'j'
                Block
                  ForOfStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' j'
                    NonNullExpression
                      PropertyAccessExpression
                        Identifier: ' node'
                        Identifier: 'jsDoc'
                    Block
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    setParent'
                          Identifier: 'j'
                          Identifier: ' node'
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    setParentRecursive'
                          Identifier: 'j'
                          FalseKeyword
      FunctionDeclaration
        Identifier: ' updateStrictModeStatementList'
        Parameter
          Identifier: 'statements'
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'Statement'
        Block
          IfStatement
            PrefixUnaryExpression
              Identifier: 'inStrictMode'
            Block
              ForOfStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' statement'
                Identifier: ' statements'
                Block
                  IfStatement
                    PrefixUnaryExpression
                      CallExpression
                        Identifier: 'isPrologueDirective'
                        Identifier: 'statement'
                    Block
                      ReturnStatement
                  IfStatement
                    CallExpression
                      Identifier: 'isUseStrictPrologueDirective'
                      AsExpression
                        Identifier: 'statement'
                        TypeReference
                          Identifier: ' ExpressionStatement'
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    inStrictMode'
                          EqualsToken
                          TrueKeyword
                      ReturnStatement
      FunctionDeclaration
        Identifier: ' isUseStrictPrologueDirective'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' ExpressionStatement'
        BooleanKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' nodeText'
                CallExpression
                  Identifier: ' getSourceTextOfNodeFromSourceFile'
                  Identifier: 'file'
                  PropertyAccessExpression
                    Identifier: ' node'
                    Identifier: 'expression'
          ReturnStatement
            BinaryExpression
              BinaryExpression
                Identifier: ' nodeText'
                EqualsEqualsEqualsToken
                StringLiteral
              BarBarToken
              BinaryExpression
                Identifier: ' nodeText'
                EqualsEqualsEqualsToken
                StringLiteral
      FunctionDeclaration
        Identifier: ' bindWorker'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        Block
          SwitchStatement
            PropertyAccessExpression
              Identifier: 'node'
              Identifier: 'kind'
            CaseBlock
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'Identifier'
                IfStatement
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'flags'
                    AmpersandToken
                    PropertyAccessExpression
                      Identifier: ' NodeFlags'
                      Identifier: 'IdentifierIsInJSDocNamespace'
                  Block
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' parentNode'
                          PropertyAccessExpression
                            Identifier: ' node'
                            Identifier: 'parent'
                    WhileStatement
                      BinaryExpression
                        Identifier: 'parentNode'
                        AmpersandAmpersandToken
                        PrefixUnaryExpression
                          CallExpression
                            Identifier: 'isJSDocTypeAlias'
                            Identifier: 'parentNode'
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        parentNode'
                            EqualsToken
                            PropertyAccessExpression
                              Identifier: ' parentNode'
                              Identifier: 'parent'
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                    bindBlockScopedDeclaration'
                        AsExpression
                          Identifier: 'parentNode'
                          TypeReference
                            Identifier: ' Declaration'
                        PropertyAccessExpression
                          Identifier: ' SymbolFlags'
                          Identifier: 'TypeAlias'
                        PropertyAccessExpression
                          Identifier: ' SymbolFlags'
                          Identifier: 'TypeAliasExcludes'
                    BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ThisKeyword'
                IfStatement
                  BinaryExpression
                    Identifier: 'currentFlow'
                    AmpersandAmpersandToken
                    ParenthesizedExpression
                      BinaryExpression
                        CallExpression
                          Identifier: 'isExpression'
                          Identifier: 'node'
                        BarBarToken
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: ' parent'
                            Identifier: 'kind'
                          EqualsEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' SyntaxKind'
                            Identifier: 'ShorthandPropertyAssignment'
                  Block
                    ExpressionStatement
                      BinaryExpression
                        PropertyAccessExpression
                          ParenthesizedExpression
                            AsExpression
                              Identifier: 'node'
                              UnionType
                                TypeReference
                                  Identifier: ' Identifier'
                                TypeReference
                                  Identifier: ' ThisExpression'
                          Identifier: 'flowNode'
                        EqualsToken
                        Identifier: ' currentFlow'
                ReturnStatement
                  CallExpression
                    Identifier: ' checkContextualIdentifier'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' Identifier'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'QualifiedName'
                IfStatement
                  BinaryExpression
                    Identifier: 'currentFlow'
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: ' isPartOfTypeQuery'
                      Identifier: 'node'
                  Block
                    ExpressionStatement
                      BinaryExpression
                        PropertyAccessExpression
                          ParenthesizedExpression
                            AsExpression
                              Identifier: 'node'
                              TypeReference
                                Identifier: ' QualifiedName'
                          Identifier: 'flowNode'
                        EqualsToken
                        Identifier: ' currentFlow'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'MetaProperty'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'SuperKeyword'
                ExpressionStatement
                  BinaryExpression
                    PropertyAccessExpression
                      ParenthesizedExpression
                        AsExpression
                          Identifier: 'node'
                          UnionType
                            TypeReference
                              Identifier: ' MetaProperty'
                            TypeReference
                              Identifier: ' SuperExpression'
                      Identifier: 'flowNode'
                    EqualsToken
                    Identifier: ' currentFlow'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'PrivateIdentifier'
                ReturnStatement
                  CallExpression
                    Identifier: ' checkPrivateIdentifier'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' PrivateIdentifier'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'PropertyAccessExpression'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ElementAccessExpression'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' expr'
                      AsExpression
                        Identifier: ' node'
                        UnionType
                          TypeReference
                            Identifier: ' PropertyAccessExpression'
                          TypeReference
                            Identifier: ' ElementAccessExpression'
                IfStatement
                  BinaryExpression
                    Identifier: 'currentFlow'
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: ' isNarrowableReference'
                      Identifier: 'expr'
                  Block
                    ExpressionStatement
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: '
                    expr'
                          Identifier: 'flowNode'
                        EqualsToken
                        Identifier: ' currentFlow'
                IfStatement
                  CallExpression
                    Identifier: 'isSpecialPropertyDeclaration'
                    Identifier: 'expr'
                  Block
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                    bindSpecialPropertyDeclaration'
                        Identifier: 'expr'
                IfStatement
                  BinaryExpression
                    BinaryExpression
                      BinaryExpression
                        CallExpression
                          Identifier: '
                    isInJSFile'
                          Identifier: 'expr'
                        AmpersandAmpersandToken
                        PropertyAccessExpression
                          Identifier: '
                    file'
                          Identifier: 'commonJsModuleIndicator'
                      AmpersandAmpersandToken
                      CallExpression
                        Identifier: '
                    isModuleExportsAccessExpression'
                        Identifier: 'expr'
                    AmpersandAmpersandToken
                    PrefixUnaryExpression
                      CallExpression
                        Identifier: 'lookupSymbolForName'
                        Identifier: 'blockScopeContainer'
                        AsExpression
                          StringLiteral
                          TypeReference
                            Identifier: ' __String'
                  Block
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                    declareSymbol'
                        NonNullExpression
                          PropertyAccessExpression
                            Identifier: 'file'
                            Identifier: 'locals'
                        Identifier: ' /*parent*/ undefined'
                        PropertyAccessExpression
                          Identifier: ' expr'
                          Identifier: 'expression'
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: ' SymbolFlags'
                            Identifier: 'FunctionScopedVariable'
                          BarToken
                          PropertyAccessExpression
                            Identifier: ' SymbolFlags'
                            Identifier: 'ModuleExports'
                        PropertyAccessExpression
                          Identifier: ' SymbolFlags'
                          Identifier: 'FunctionScopedVariableExcludes'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'BinaryExpression'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' specialKind'
                      CallExpression
                        Identifier: ' getAssignmentDeclarationKind'
                        AsExpression
                          Identifier: 'node'
                          TypeReference
                            Identifier: ' BinaryExpression'
                SwitchStatement
                  Identifier: 'specialKind'
                  CaseBlock
                    CaseClause
                      PropertyAccessExpression
                        Identifier: ' AssignmentDeclarationKind'
                        Identifier: 'ExportsProperty'
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                        bindExportsPropertyAssignment'
                          AsExpression
                            Identifier: 'node'
                            TypeReference
                              Identifier: ' BindableStaticPropertyAssignmentExpression'
                      BreakStatement
                    CaseClause
                      PropertyAccessExpression
                        Identifier: ' AssignmentDeclarationKind'
                        Identifier: 'ModuleExports'
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                        bindModuleExportsAssignment'
                          AsExpression
                            Identifier: 'node'
                            TypeReference
                              Identifier: ' BindablePropertyAssignmentExpression'
                      BreakStatement
                    CaseClause
                      PropertyAccessExpression
                        Identifier: ' AssignmentDeclarationKind'
                        Identifier: 'PrototypeProperty'
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                        bindPrototypePropertyAssignment'
                          PropertyAccessExpression
                            ParenthesizedExpression
                              AsExpression
                                Identifier: 'node'
                                TypeReference
                                  Identifier: ' BindableStaticPropertyAssignmentExpression'
                            Identifier: 'left'
                          Identifier: ' node'
                      BreakStatement
                    CaseClause
                      PropertyAccessExpression
                        Identifier: ' AssignmentDeclarationKind'
                        Identifier: 'Prototype'
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                        bindPrototypeAssignment'
                          AsExpression
                            Identifier: 'node'
                            TypeReference
                              Identifier: ' BindableStaticPropertyAssignmentExpression'
                      BreakStatement
                    CaseClause
                      PropertyAccessExpression
                        Identifier: ' AssignmentDeclarationKind'
                        Identifier: 'ThisProperty'
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                        bindThisPropertyAssignment'
                          AsExpression
                            Identifier: 'node'
                            TypeReference
                              Identifier: ' BindablePropertyAssignmentExpression'
                      BreakStatement
                    CaseClause
                      PropertyAccessExpression
                        Identifier: ' AssignmentDeclarationKind'
                        Identifier: 'Property'
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' expression'
                            PropertyAccessExpression
                              ParenthesizedExpression
                                AsExpression
                                  PropertyAccessExpression
                                    ParenthesizedExpression
                                      AsExpression
                                        Identifier: 'node'
                                        TypeReference
                                          Identifier: ' BinaryExpression'
                                    Identifier: 'left'
                                  TypeReference
                                    Identifier: ' AccessExpression'
                              Identifier: 'expression'
                      IfStatement
                        BinaryExpression
                          CallExpression
                            Identifier: 'isInJSFile'
                            Identifier: 'node'
                          AmpersandAmpersandToken
                          CallExpression
                            Identifier: ' isIdentifier'
                            Identifier: 'expression'
                        Block
                          VariableStatement
                            VariableDeclarationList
                              VariableDeclaration
                                Identifier: ' symbol'
                                CallExpression
                                  Identifier: ' lookupSymbolForName'
                                  Identifier: 'blockScopeContainer'
                                  PropertyAccessExpression
                                    Identifier: ' expression'
                                    Identifier: 'escapedText'
                          IfStatement
                            CallExpression
                              Identifier: 'isThisInitializedDeclaration'
                              PropertyAccessExpression
                                Identifier: 'symbol'
                                QuestionDotToken
                                Identifier: 'valueDeclaration'
                            Block
                              ExpressionStatement
                                CallExpression
                                  Identifier: '
                                bindThisPropertyAssignment'
                                  AsExpression
                                    Identifier: 'node'
                                    TypeReference
                                      Identifier: ' BindablePropertyAssignmentExpression'
                              BreakStatement
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                        bindSpecialPropertyAssignment'
                          AsExpression
                            Identifier: 'node'
                            TypeReference
                              Identifier: ' BindablePropertyAssignmentExpression'
                      BreakStatement
                    CaseClause
                      PropertyAccessExpression
                        Identifier: ' AssignmentDeclarationKind'
                        Identifier: 'None'
                      BreakStatement
                    DefaultClause
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                        Debug'
                            Identifier: 'fail'
                          StringLiteral
                ReturnStatement
                  CallExpression
                    Identifier: ' checkStrictModeBinaryExpression'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' BinaryExpression'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'CatchClause'
                ReturnStatement
                  CallExpression
                    Identifier: ' checkStrictModeCatchClause'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' CatchClause'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'DeleteExpression'
                ReturnStatement
                  CallExpression
                    Identifier: ' checkStrictModeDeleteExpression'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' DeleteExpression'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'PostfixUnaryExpression'
                ReturnStatement
                  CallExpression
                    Identifier: ' checkStrictModePostfixUnaryExpression'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' PostfixUnaryExpression'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'PrefixUnaryExpression'
                ReturnStatement
                  CallExpression
                    Identifier: ' checkStrictModePrefixUnaryExpression'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' PrefixUnaryExpression'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'WithStatement'
                ReturnStatement
                  CallExpression
                    Identifier: ' checkStrictModeWithStatement'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' WithStatement'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'LabeledStatement'
                ReturnStatement
                  CallExpression
                    Identifier: ' checkStrictModeLabeledStatement'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' LabeledStatement'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ThisType'
                ExpressionStatement
                  BinaryExpression
                    Identifier: '
                seenThisKeyword'
                    EqualsToken
                    TrueKeyword
                ReturnStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'TypePredicate'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'TypeParameter'
                ReturnStatement
                  CallExpression
                    Identifier: ' bindTypeParameter'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' TypeParameterDeclaration'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'Parameter'
                ReturnStatement
                  CallExpression
                    Identifier: ' bindParameter'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' ParameterDeclaration'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'VariableDeclaration'
                ReturnStatement
                  CallExpression
                    Identifier: ' bindVariableDeclarationOrBindingElement'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' VariableDeclaration'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'BindingElement'
                ExpressionStatement
                  BinaryExpression
                    PropertyAccessExpression
                      ParenthesizedExpression
                        AsExpression
                          Identifier: 'node'
                          TypeReference
                            Identifier: ' BindingElement'
                      Identifier: 'flowNode'
                    EqualsToken
                    Identifier: ' currentFlow'
                ReturnStatement
                  CallExpression
                    Identifier: ' bindVariableDeclarationOrBindingElement'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' BindingElement'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'PropertyDeclaration'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'PropertySignature'
                ReturnStatement
                  CallExpression
                    Identifier: ' bindPropertyWorker'
                    AsExpression
                      Identifier: 'node'
                      UnionType
                        TypeReference
                          Identifier: ' PropertyDeclaration'
                        TypeReference
                          Identifier: ' PropertySignature'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'PropertyAssignment'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ShorthandPropertyAssignment'
                ReturnStatement
                  CallExpression
                    Identifier: ' bindPropertyOrMethodOrAccessor'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' Declaration'
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'Property'
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'PropertyExcludes'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'EnumMember'
                ReturnStatement
                  CallExpression
                    Identifier: ' bindPropertyOrMethodOrAccessor'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' Declaration'
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'EnumMember'
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'EnumMemberExcludes'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'CallSignature'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ConstructSignature'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'IndexSignature'
                ReturnStatement
                  CallExpression
                    Identifier: ' declareSymbolAndAddToSymbolTable'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' Declaration'
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'Signature'
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'None'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'MethodDeclaration'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'MethodSignature'
                ReturnStatement
                  CallExpression
                    Identifier: ' bindPropertyOrMethodOrAccessor'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' Declaration'
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: ' SymbolFlags'
                        Identifier: 'Method'
                      BarToken
                      ParenthesizedExpression
                        ConditionalExpression
                          PropertyAccessExpression
                            ParenthesizedExpression
                              AsExpression
                                Identifier: 'node'
                                TypeReference
                                  Identifier: ' MethodDeclaration'
                            Identifier: 'questionToken'
                          QuestionToken
                          PropertyAccessExpression
                            Identifier: ' SymbolFlags'
                            Identifier: 'Optional'
                          ColonToken
                          PropertyAccessExpression
                            Identifier: ' SymbolFlags'
                            Identifier: 'None'
                    ConditionalExpression
                      CallExpression
                        Identifier: ' isObjectLiteralMethod'
                        Identifier: 'node'
                      QuestionToken
                      PropertyAccessExpression
                        Identifier: ' SymbolFlags'
                        Identifier: 'PropertyExcludes'
                      ColonToken
                      PropertyAccessExpression
                        Identifier: ' SymbolFlags'
                        Identifier: 'MethodExcludes'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'FunctionDeclaration'
                ReturnStatement
                  CallExpression
                    Identifier: ' bindFunctionDeclaration'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' FunctionDeclaration'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'Constructor'
                ReturnStatement
                  CallExpression
                    Identifier: ' declareSymbolAndAddToSymbolTable'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' Declaration'
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'Constructor'
                    PropertyAccessExpression
                      Identifier: ' /*symbolExcludes:*/ SymbolFlags'
                      Identifier: 'None'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'GetAccessor'
                ReturnStatement
                  CallExpression
                    Identifier: ' bindPropertyOrMethodOrAccessor'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' Declaration'
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'GetAccessor'
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'GetAccessorExcludes'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'SetAccessor'
                ReturnStatement
                  CallExpression
                    Identifier: ' bindPropertyOrMethodOrAccessor'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' Declaration'
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'SetAccessor'
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'SetAccessorExcludes'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'FunctionType'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'JSDocFunctionType'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'JSDocSignature'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ConstructorType'
                ReturnStatement
                  CallExpression
                    Identifier: ' bindFunctionOrConstructorType'
                    AsExpression
                      Identifier: 'node'
                      UnionType
                        TypeReference
                          Identifier: ' SignatureDeclaration'
                        TypeReference
                          Identifier: ' JSDocSignature'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'TypeLiteral'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'JSDocTypeLiteral'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'MappedType'
                ReturnStatement
                  CallExpression
                    Identifier: ' bindAnonymousTypeWorker'
                    AsExpression
                      Identifier: 'node'
                      UnionType
                        TypeReference
                          Identifier: ' TypeLiteralNode'
                        TypeReference
                          Identifier: ' MappedTypeNode'
                        TypeReference
                          Identifier: ' JSDocTypeLiteral'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'JSDocClassTag'
                ReturnStatement
                  CallExpression
                    Identifier: ' bindJSDocClassTag'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' JSDocClassTag'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ObjectLiteralExpression'
                ReturnStatement
                  CallExpression
                    Identifier: ' bindObjectLiteralExpression'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' ObjectLiteralExpression'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'FunctionExpression'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ArrowFunction'
                ReturnStatement
                  CallExpression
                    Identifier: ' bindFunctionExpression'
                    AsExpression
                      Identifier: 'node'
                      UnionType
                        TypeReference
                          Identifier: ' FunctionExpression'
                        TypeReference
                          Identifier: ' ArrowFunction'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'CallExpression'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' assignmentKind'
                      CallExpression
                        Identifier: ' getAssignmentDeclarationKind'
                        AsExpression
                          Identifier: 'node'
                          TypeReference
                            Identifier: ' CallExpression'
                SwitchStatement
                  Identifier: 'assignmentKind'
                  CaseBlock
                    CaseClause
                      PropertyAccessExpression
                        Identifier: ' AssignmentDeclarationKind'
                        Identifier: 'ObjectDefinePropertyValue'
                      ReturnStatement
                        CallExpression
                          Identifier: ' bindObjectDefinePropertyAssignment'
                          AsExpression
                            Identifier: 'node'
                            TypeReference
                              Identifier: ' BindableObjectDefinePropertyCall'
                    CaseClause
                      PropertyAccessExpression
                        Identifier: ' AssignmentDeclarationKind'
                        Identifier: 'ObjectDefinePropertyExports'
                      ReturnStatement
                        CallExpression
                          Identifier: ' bindObjectDefinePropertyExport'
                          AsExpression
                            Identifier: 'node'
                            TypeReference
                              Identifier: ' BindableObjectDefinePropertyCall'
                    CaseClause
                      PropertyAccessExpression
                        Identifier: ' AssignmentDeclarationKind'
                        Identifier: 'ObjectDefinePrototypeProperty'
                      ReturnStatement
                        CallExpression
                          Identifier: ' bindObjectDefinePrototypeProperty'
                          AsExpression
                            Identifier: 'node'
                            TypeReference
                              Identifier: ' BindableObjectDefinePropertyCall'
                    CaseClause
                      PropertyAccessExpression
                        Identifier: ' AssignmentDeclarationKind'
                        Identifier: 'None'
                      BreakStatement
                    DefaultClause
                      ReturnStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' Debug'
                            Identifier: 'fail'
                          StringLiteral
                IfStatement
                  CallExpression
                    Identifier: 'isInJSFile'
                    Identifier: 'node'
                  Block
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                    bindCallExpression'
                        AsExpression
                          Identifier: 'node'
                          TypeReference
                            Identifier: ' CallExpression'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ClassExpression'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ClassDeclaration'
                ExpressionStatement
                  BinaryExpression
                    Identifier: '
                // All classes are automatically in strict mode in ES6.
                inStrictMode'
                    EqualsToken
                    TrueKeyword
                ReturnStatement
                  CallExpression
                    Identifier: ' bindClassLikeDeclaration'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' ClassLikeDeclaration'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'InterfaceDeclaration'
                ReturnStatement
                  CallExpression
                    Identifier: ' bindBlockScopedDeclaration'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' Declaration'
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'Interface'
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'InterfaceExcludes'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'TypeAliasDeclaration'
                ReturnStatement
                  CallExpression
                    Identifier: ' bindBlockScopedDeclaration'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' Declaration'
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'TypeAlias'
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'TypeAliasExcludes'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'EnumDeclaration'
                ReturnStatement
                  CallExpression
                    Identifier: ' bindEnumDeclaration'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' EnumDeclaration'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ModuleDeclaration'
                ReturnStatement
                  CallExpression
                    Identifier: ' bindModuleDeclaration'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' ModuleDeclaration'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'JsxAttributes'
                ReturnStatement
                  CallExpression
                    Identifier: ' bindJsxAttributes'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' JsxAttributes'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'JsxAttribute'
                ReturnStatement
                  CallExpression
                    Identifier: ' bindJsxAttribute'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' JsxAttribute'
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'Property'
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'PropertyExcludes'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ImportEqualsDeclaration'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'NamespaceImport'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ImportSpecifier'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ExportSpecifier'
                ReturnStatement
                  CallExpression
                    Identifier: ' declareSymbolAndAddToSymbolTable'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' Declaration'
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'Alias'
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'AliasExcludes'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'NamespaceExportDeclaration'
                ReturnStatement
                  CallExpression
                    Identifier: ' bindNamespaceExportDeclaration'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' NamespaceExportDeclaration'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ImportClause'
                ReturnStatement
                  CallExpression
                    Identifier: ' bindImportClause'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' ImportClause'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ExportDeclaration'
                ReturnStatement
                  CallExpression
                    Identifier: ' bindExportDeclaration'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' ExportDeclaration'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ExportAssignment'
                ReturnStatement
                  CallExpression
                    Identifier: ' bindExportAssignment'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' ExportAssignment'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'SourceFile'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                updateStrictModeStatementList'
                    PropertyAccessExpression
                      ParenthesizedExpression
                        AsExpression
                          Identifier: 'node'
                          TypeReference
                            Identifier: ' SourceFile'
                      Identifier: 'statements'
                ReturnStatement
                  CallExpression
                    Identifier: ' bindSourceFileIfExternalModule'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'Block'
                IfStatement
                  PrefixUnaryExpression
                    CallExpression
                      Identifier: 'isFunctionLikeOrClassStaticBlockDeclaration'
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'parent'
                  Block
                    ReturnStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ModuleBlock'
                ReturnStatement
                  CallExpression
                    Identifier: ' updateStrictModeStatementList'
                    PropertyAccessExpression
                      ParenthesizedExpression
                        AsExpression
                          Identifier: 'node'
                          UnionType
                            TypeReference
                              Identifier: ' Block'
                            TypeReference
                              Identifier: ' ModuleBlock'
                      Identifier: 'statements'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'JSDocParameterTag'
                IfStatement
                  BinaryExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'parent'
                      Identifier: 'kind'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'JSDocSignature'
                  Block
                    ReturnStatement
                      CallExpression
                        Identifier: ' bindParameter'
                        AsExpression
                          Identifier: 'node'
                          TypeReference
                            Identifier: ' JSDocParameterTag'
                IfStatement
                  BinaryExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'parent'
                      Identifier: 'kind'
                    ExclamationEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'JSDocTypeLiteral'
                  Block
                    BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'JSDocPropertyTag'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' propTag'
                      AsExpression
                        Identifier: ' node'
                        TypeReference
                          Identifier: ' JSDocPropertyLikeTag'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' flags'
                      ConditionalExpression
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: ' propTag'
                            Identifier: 'isBracketed'
                          BarBarToken
                          BinaryExpression
                            PropertyAccessExpression
                              Identifier: ' propTag'
                              Identifier: 'typeExpression'
                            AmpersandAmpersandToken
                            BinaryExpression
                              PropertyAccessExpression
                                PropertyAccessExpression
                                  PropertyAccessExpression
                                    Identifier: ' propTag'
                                    Identifier: 'typeExpression'
                                  Identifier: 'type'
                                Identifier: 'kind'
                              EqualsEqualsEqualsToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'JSDocOptionalType'
                        QuestionToken
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: '
                    SymbolFlags'
                            Identifier: 'Property'
                          BarToken
                          PropertyAccessExpression
                            Identifier: ' SymbolFlags'
                            Identifier: 'Optional'
                        ColonToken
                        PropertyAccessExpression
                          Identifier: '
                    SymbolFlags'
                          Identifier: 'Property'
                ReturnStatement
                  CallExpression
                    Identifier: ' declareSymbolAndAddToSymbolTable'
                    Identifier: 'propTag'
                    Identifier: ' flags'
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'PropertyExcludes'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'JSDocTypedefTag'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'JSDocCallbackTag'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'JSDocEnumTag'
                ReturnStatement
                  CallExpression
                    PropertyAccessExpression
                      ParenthesizedExpression
                        BinaryExpression
                          Identifier: 'delayedTypeAliases'
                          BarBarToken
                          ParenthesizedExpression
                            BinaryExpression
                              Identifier: 'delayedTypeAliases'
                              EqualsToken
                              ArrayLiteralExpression
                      Identifier: 'push'
                    AsExpression
                      Identifier: 'node'
                      UnionType
                        TypeReference
                          Identifier: ' JSDocTypedefTag'
                        TypeReference
                          Identifier: ' JSDocCallbackTag'
                        TypeReference
                          Identifier: ' JSDocEnumTag'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'JSDocOverloadTag'
                ReturnStatement
                  CallExpression
                    Identifier: ' bind'
                    PropertyAccessExpression
                      ParenthesizedExpression
                        AsExpression
                          Identifier: 'node'
                          TypeReference
                            Identifier: ' JSDocOverloadTag'
                      Identifier: 'typeExpression'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'JSDocImportTag'
                ReturnStatement
                  CallExpression
                    PropertyAccessExpression
                      ParenthesizedExpression
                        BinaryExpression
                          Identifier: 'jsDocImports'
                          BarBarToken
                          ParenthesizedExpression
                            BinaryExpression
                              Identifier: 'jsDocImports'
                              EqualsToken
                              ArrayLiteralExpression
                      Identifier: 'push'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' JSDocImportTag'
      FunctionDeclaration
        Identifier: ' bindPropertyWorker'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' PropertyDeclaration'
            TypeReference
              Identifier: ' PropertySignature'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' isAutoAccessor'
                CallExpression
                  Identifier: ' isAutoAccessorPropertyDeclaration'
                  Identifier: 'node'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' includes'
                ConditionalExpression
                  Identifier: ' isAutoAccessor'
                  QuestionToken
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'Accessor'
                  ColonToken
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'Property'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' excludes'
                ConditionalExpression
                  Identifier: ' isAutoAccessor'
                  QuestionToken
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'AccessorExcludes'
                  ColonToken
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'PropertyExcludes'
          ReturnStatement
            CallExpression
              Identifier: ' bindPropertyOrMethodOrAccessor'
              Identifier: 'node'
              BinaryExpression
                Identifier: ' includes'
                BarToken
                ParenthesizedExpression
                  ConditionalExpression
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'questionToken'
                    QuestionToken
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'Optional'
                    ColonToken
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'None'
              Identifier: ' excludes'
      FunctionDeclaration
        Identifier: ' bindAnonymousTypeWorker'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' TypeLiteralNode'
            TypeReference
              Identifier: ' MappedTypeNode'
            TypeReference
              Identifier: ' JSDocTypeLiteral'
        Block
          ReturnStatement
            CallExpression
              Identifier: ' bindAnonymousDeclaration'
              AsExpression
                Identifier: 'node'
                TypeReference
                  Identifier: ' Declaration'
              PropertyAccessExpression
                Identifier: ' SymbolFlags'
                Identifier: 'TypeLiteral'
              PropertyAccessExpression
                Identifier: ' InternalSymbolName'
                Identifier: 'Type'
      FunctionDeclaration
        Identifier: ' bindSourceFileIfExternalModule'
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        setExportContextFlag'
              Identifier: 'file'
          IfStatement
            CallExpression
              Identifier: 'isExternalModule'
              Identifier: 'file'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindSourceFileAsExternalModule'
            IfStatement
              CallExpression
                Identifier: 'isJsonSourceFile'
                Identifier: 'file'
              Block
                ExpressionStatement
                  CallExpression
                    Identifier: '
            bindSourceFileAsExternalModule'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' originalSymbol'
                      PropertyAccessExpression
                        Identifier: ' file'
                        Identifier: 'symbol'
                ExpressionStatement
                  CallExpression
                    Identifier: '
            declareSymbol'
                    NonNullExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: 'file'
                          Identifier: 'symbol'
                        Identifier: 'exports'
                    PropertyAccessExpression
                      Identifier: ' file'
                      Identifier: 'symbol'
                    Identifier: ' file'
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'Property'
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'All'
                ExpressionStatement
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: '
            file'
                      Identifier: 'symbol'
                    EqualsToken
                    Identifier: ' originalSymbol'
      FunctionDeclaration
        Identifier: ' bindSourceFileAsExternalModule'
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        bindAnonymousDeclaration'
              Identifier: 'file'
              PropertyAccessExpression
                Identifier: ' SymbolFlags'
                Identifier: 'ValueModule'
              AsExpression
                TemplateExpression
                  TemplateHead
                  TemplateSpan
                    CallExpression
                      Identifier: 'removeFileExtension'
                      PropertyAccessExpression
                        Identifier: 'file'
                        Identifier: 'fileName'
                    TemplateTail
                TypeReference
                  Identifier: ' __String'
      FunctionDeclaration
        Identifier: ' bindExportAssignment'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' ExportAssignment'
        Block
          IfStatement
            BinaryExpression
              PrefixUnaryExpression
                PropertyAccessExpression
                  Identifier: 'container'
                  Identifier: 'symbol'
              BarBarToken
              PrefixUnaryExpression
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: 'container'
                    Identifier: 'symbol'
                  Identifier: 'exports'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            // Incorrect export assignment in some sort of block construct
            bindAnonymousDeclaration'
                  Identifier: 'node'
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'Value'
                  NonNullExpression
                    CallExpression
                      Identifier: ' getDeclarationName'
                      Identifier: 'node'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' flags'
                    ConditionalExpression
                      CallExpression
                        Identifier: ' exportAssignmentIsAlias'
                        Identifier: 'node'
                      QuestionToken
                      PropertyAccessExpression
                        Identifier: ' SymbolFlags'
                        Identifier: 'Alias'
                      ColonToken
                      PropertyAccessExpression
                        Identifier: ' SymbolFlags'
                        Identifier: 'Property'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' symbol'
                    CallExpression
                      Identifier: ' declareSymbol'
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: 'container'
                          Identifier: 'symbol'
                        Identifier: 'exports'
                      PropertyAccessExpression
                        Identifier: ' container'
                        Identifier: 'symbol'
                      Identifier: ' node'
                      Identifier: ' flags'
                      PropertyAccessExpression
                        Identifier: ' SymbolFlags'
                        Identifier: 'All'
              IfStatement
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'isExportEquals'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                // Will be an error later, since the module already has other exports. Just make sure this has a valueDeclaration set.
                setValueDeclaration'
                      Identifier: 'symbol'
                      Identifier: ' node'
      FunctionDeclaration
        Identifier: ' bindNamespaceExportDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' NamespaceExportDeclaration'
        Block
          IfStatement
            CallExpression
              Identifier: 'some'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'modifiers'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: '
            file'
                      Identifier: 'bindDiagnostics'
                    Identifier: 'push'
                  CallExpression
                    Identifier: 'createDiagnosticForNode'
                    Identifier: 'node'
                    PropertyAccessExpression
                      Identifier: ' Diagnostics'
                      Identifier: 'Modifiers_cannot_appear_here'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' diag'
                ConditionalExpression
                  PrefixUnaryExpression
                    CallExpression
                      Identifier: 'isSourceFile'
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'parent'
                  QuestionToken
                  PropertyAccessExpression
                    Identifier: ' Diagnostics'
                    Identifier: 'Global_module_exports_may_only_appear_at_top_level'
                  ColonToken
                  ConditionalExpression
                    PrefixUnaryExpression
                      CallExpression
                        Identifier: 'isExternalModule'
                        PropertyAccessExpression
                          Identifier: 'node'
                          Identifier: 'parent'
                    QuestionToken
                    PropertyAccessExpression
                      Identifier: ' Diagnostics'
                      Identifier: 'Global_module_exports_may_only_appear_in_module_files'
                    ColonToken
                    ConditionalExpression
                      PrefixUnaryExpression
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: 'node'
                            Identifier: 'parent'
                          Identifier: 'isDeclarationFile'
                      QuestionToken
                      PropertyAccessExpression
                        Identifier: ' Diagnostics'
                        Identifier: 'Global_module_exports_may_only_appear_in_declaration_files'
                      ColonToken
                      Identifier: ' undefined'
          IfStatement
            Identifier: 'diag'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: '
            file'
                      Identifier: 'bindDiagnostics'
                    Identifier: 'push'
                  CallExpression
                    Identifier: 'createDiagnosticForNode'
                    Identifier: 'node'
                    Identifier: ' diag'
            Block
              ExpressionStatement
                BinaryExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: '
            file'
                      Identifier: 'symbol'
                    Identifier: 'globalExports'
                  EqualsToken
                  BinaryExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: ' file'
                        Identifier: 'symbol'
                      Identifier: 'globalExports'
                    BarBarToken
                    CallExpression
                      Identifier: ' createSymbolTable'
              ExpressionStatement
                CallExpression
                  Identifier: '
            declareSymbol'
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: 'file'
                      Identifier: 'symbol'
                    Identifier: 'globalExports'
                  PropertyAccessExpression
                    Identifier: ' file'
                    Identifier: 'symbol'
                  Identifier: ' node'
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'Alias'
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'AliasExcludes'
      FunctionDeclaration
        Identifier: ' bindExportDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' ExportDeclaration'
        Block
          IfStatement
            BinaryExpression
              PrefixUnaryExpression
                PropertyAccessExpression
                  Identifier: 'container'
                  Identifier: 'symbol'
              BarBarToken
              PrefixUnaryExpression
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: 'container'
                    Identifier: 'symbol'
                  Identifier: 'exports'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            // Export * in some sort of block construct
            bindAnonymousDeclaration'
                  Identifier: 'node'
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'ExportStar'
                  NonNullExpression
                    CallExpression
                      Identifier: ' getDeclarationName'
                      Identifier: 'node'
            IfStatement
              PrefixUnaryExpression
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'exportClause'
              Block
                ExpressionStatement
                  CallExpression
                    Identifier: '
            // All export * declarations are collected in an __export symbol
            declareSymbol'
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: 'container'
                        Identifier: 'symbol'
                      Identifier: 'exports'
                    PropertyAccessExpression
                      Identifier: ' container'
                      Identifier: 'symbol'
                    Identifier: ' node'
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'ExportStar'
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'None'
              IfStatement
                CallExpression
                  Identifier: 'isNamespaceExport'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'exportClause'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
            // declareSymbol walks up parents to find name text, parent _must_ be set
            // but won't be set by the normal binder walk until `bindChildren` later on.
            setParent'
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'exportClause'
                      Identifier: ' node'
                  ExpressionStatement
                    CallExpression
                      Identifier: '
            declareSymbol'
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: 'container'
                          Identifier: 'symbol'
                        Identifier: 'exports'
                      PropertyAccessExpression
                        Identifier: ' container'
                        Identifier: 'symbol'
                      PropertyAccessExpression
                        Identifier: ' node'
                        Identifier: 'exportClause'
                      PropertyAccessExpression
                        Identifier: ' SymbolFlags'
                        Identifier: 'Alias'
                      PropertyAccessExpression
                        Identifier: ' SymbolFlags'
                        Identifier: 'AliasExcludes'
      FunctionDeclaration
        Identifier: ' bindImportClause'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' ImportClause'
        Block
          IfStatement
            PropertyAccessExpression
              Identifier: 'node'
              Identifier: 'name'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            declareSymbolAndAddToSymbolTable'
                  Identifier: 'node'
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'Alias'
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'AliasExcludes'
      FunctionDeclaration
        Identifier: ' setCommonJsModuleIndicator'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        Block
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'file'
                Identifier: 'externalModuleIndicator'
              AmpersandAmpersandToken
              BinaryExpression
                PropertyAccessExpression
                  Identifier: ' file'
                  Identifier: 'externalModuleIndicator'
                ExclamationEqualsEqualsToken
                TrueKeyword
            Block
              ReturnStatement
                FalseKeyword
          IfStatement
            PrefixUnaryExpression
              PropertyAccessExpression
                Identifier: 'file'
                Identifier: 'commonJsModuleIndicator'
            Block
              ExpressionStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: '
            file'
                    Identifier: 'commonJsModuleIndicator'
                  EqualsToken
                  Identifier: ' node'
              IfStatement
                PrefixUnaryExpression
                  PropertyAccessExpression
                    Identifier: 'file'
                    Identifier: 'externalModuleIndicator'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                bindSourceFileAsExternalModule'
          ReturnStatement
            TrueKeyword
      FunctionDeclaration
        Identifier: ' bindObjectDefinePropertyExport'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' BindableObjectDefinePropertyCall'
        Block
          IfStatement
            PrefixUnaryExpression
              CallExpression
                Identifier: 'setCommonJsModuleIndicator'
                Identifier: 'node'
            Block
              ReturnStatement
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' symbol'
                CallExpression
                  Identifier: ' forEachIdentifierInEntityName'
                  ElementAccessExpression
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'arguments'
                    NumericLiteral
                  Identifier: ' /*parent*/ undefined'
                  ArrowFunction
                    Parameter
                      Identifier: 'id'
                    Parameter
                      Identifier: ' symbol'
                    EqualsGreaterThanToken
                    Block
                      IfStatement
                        Identifier: 'symbol'
                        Block
                          ExpressionStatement
                            CallExpression
                              Identifier: '
                addDeclarationToSymbol'
                              Identifier: 'symbol'
                              Identifier: ' id'
                              BinaryExpression
                                PropertyAccessExpression
                                  Identifier: ' SymbolFlags'
                                  Identifier: 'Module'
                                BarToken
                                PropertyAccessExpression
                                  Identifier: ' SymbolFlags'
                                  Identifier: 'Assignment'
                      ReturnStatement
                        Identifier: ' symbol'
          IfStatement
            Identifier: 'symbol'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' flags'
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: ' SymbolFlags'
                        Identifier: 'Property'
                      BarToken
                      PropertyAccessExpression
                        Identifier: ' SymbolFlags'
                        Identifier: 'ExportValue'
              ExpressionStatement
                CallExpression
                  Identifier: '
            declareSymbol'
                  NonNullExpression
                    PropertyAccessExpression
                      Identifier: 'symbol'
                      Identifier: 'exports'
                  Identifier: ' symbol'
                  Identifier: ' node'
                  Identifier: ' flags'
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'None'
      FunctionDeclaration
        Identifier: ' bindExportsPropertyAssignment'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' BindableStaticPropertyAssignmentExpression'
        Block
          IfStatement
            PrefixUnaryExpression
              CallExpression
                Identifier: 'setCommonJsModuleIndicator'
                Identifier: 'node'
            Block
              ReturnStatement
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' symbol'
                CallExpression
                  Identifier: ' forEachIdentifierInEntityName'
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'left'
                    Identifier: 'expression'
                  Identifier: ' /*parent*/ undefined'
                  ArrowFunction
                    Parameter
                      Identifier: 'id'
                    Parameter
                      Identifier: ' symbol'
                    EqualsGreaterThanToken
                    Block
                      IfStatement
                        Identifier: 'symbol'
                        Block
                          ExpressionStatement
                            CallExpression
                              Identifier: '
                addDeclarationToSymbol'
                              Identifier: 'symbol'
                              Identifier: ' id'
                              BinaryExpression
                                PropertyAccessExpression
                                  Identifier: ' SymbolFlags'
                                  Identifier: 'Module'
                                BarToken
                                PropertyAccessExpression
                                  Identifier: ' SymbolFlags'
                                  Identifier: 'Assignment'
                      ReturnStatement
                        Identifier: ' symbol'
          IfStatement
            Identifier: 'symbol'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' isAlias'
                    BinaryExpression
                      CallExpression
                        Identifier: ' isAliasableExpression'
                        PropertyAccessExpression
                          Identifier: 'node'
                          Identifier: 'right'
                      AmpersandAmpersandToken
                      ParenthesizedExpression
                        BinaryExpression
                          CallExpression
                            Identifier: 'isExportsIdentifier'
                            PropertyAccessExpression
                              PropertyAccessExpression
                                Identifier: 'node'
                                Identifier: 'left'
                              Identifier: 'expression'
                          BarBarToken
                          CallExpression
                            Identifier: ' isModuleExportsAccessExpression'
                            PropertyAccessExpression
                              PropertyAccessExpression
                                Identifier: 'node'
                                Identifier: 'left'
                              Identifier: 'expression'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' flags'
                    ConditionalExpression
                      Identifier: ' isAlias'
                      QuestionToken
                      PropertyAccessExpression
                        Identifier: ' SymbolFlags'
                        Identifier: 'Alias'
                      ColonToken
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: ' SymbolFlags'
                          Identifier: 'Property'
                        BarToken
                        PropertyAccessExpression
                          Identifier: ' SymbolFlags'
                          Identifier: 'ExportValue'
              ExpressionStatement
                CallExpression
                  Identifier: '
            setParent'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'left'
                  Identifier: ' node'
              ExpressionStatement
                CallExpression
                  Identifier: '
            declareSymbol'
                  NonNullExpression
                    PropertyAccessExpression
                      Identifier: 'symbol'
                      Identifier: 'exports'
                  Identifier: ' symbol'
                  PropertyAccessExpression
                    Identifier: ' node'
                    Identifier: 'left'
                  Identifier: ' flags'
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'None'
      FunctionDeclaration
        Identifier: ' bindModuleExportsAssignment'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' BindablePropertyAssignmentExpression'
        Block
          IfStatement
            PrefixUnaryExpression
              CallExpression
                Identifier: 'setCommonJsModuleIndicator'
                Identifier: 'node'
            Block
              ReturnStatement
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' assignedExpression'
                CallExpression
                  Identifier: ' getRightMostAssignedExpression'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'right'
          IfStatement
            BinaryExpression
              CallExpression
                Identifier: 'isEmptyObjectLiteral'
                Identifier: 'assignedExpression'
              BarBarToken
              BinaryExpression
                BinaryExpression
                  Identifier: ' container'
                  EqualsEqualsEqualsToken
                  Identifier: ' file'
                AmpersandAmpersandToken
                CallExpression
                  Identifier: ' isExportsOrModuleExportsOrAlias'
                  Identifier: 'file'
                  Identifier: ' assignedExpression'
            Block
              ReturnStatement
          IfStatement
            BinaryExpression
              CallExpression
                Identifier: 'isObjectLiteralExpression'
                Identifier: 'assignedExpression'
              AmpersandAmpersandToken
              CallExpression
                Identifier: ' every'
                PropertyAccessExpression
                  Identifier: 'assignedExpression'
                  Identifier: 'properties'
                Identifier: ' isShorthandPropertyAssignment'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            forEach'
                  PropertyAccessExpression
                    Identifier: 'assignedExpression'
                    Identifier: 'properties'
                  Identifier: ' bindExportAssignedObjectMemberAlias'
              ReturnStatement
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' flags'
                ConditionalExpression
                  CallExpression
                    Identifier: ' exportAssignmentIsAlias'
                    Identifier: 'node'
                  QuestionToken
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'Alias'
                  ColonToken
                  BinaryExpression
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: ' SymbolFlags'
                        Identifier: 'Property'
                      BarToken
                      PropertyAccessExpression
                        Identifier: ' SymbolFlags'
                        Identifier: 'ExportValue'
                    BarToken
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'ValueModule'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' symbol'
                CallExpression
                  Identifier: ' declareSymbol'
                  NonNullExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: 'file'
                        Identifier: 'symbol'
                      Identifier: 'exports'
                  PropertyAccessExpression
                    Identifier: ' file'
                    Identifier: 'symbol'
                  Identifier: ' node'
                  BinaryExpression
                    Identifier: ' flags'
                    BarToken
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'Assignment'
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'None'
          ExpressionStatement
            CallExpression
              Identifier: '
        setValueDeclaration'
              Identifier: 'symbol'
              Identifier: ' node'
      FunctionDeclaration
        Identifier: ' bindExportAssignedObjectMemberAlias'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' ShorthandPropertyAssignment'
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        declareSymbol'
              NonNullExpression
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: 'file'
                    Identifier: 'symbol'
                  Identifier: 'exports'
              PropertyAccessExpression
                Identifier: ' file'
                Identifier: 'symbol'
              Identifier: ' node'
              BinaryExpression
                PropertyAccessExpression
                  Identifier: ' SymbolFlags'
                  Identifier: 'Alias'
                BarToken
                PropertyAccessExpression
                  Identifier: ' SymbolFlags'
                  Identifier: 'Assignment'
              PropertyAccessExpression
                Identifier: ' SymbolFlags'
                Identifier: 'None'
      FunctionDeclaration
        Identifier: ' bindThisPropertyAssignment'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' BindablePropertyAssignmentExpression'
            TypeReference
              Identifier: ' PropertyAccessExpression'
            TypeReference
              Identifier: ' LiteralLikeElementAccessExpression'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        Debug'
                Identifier: 'assert'
              CallExpression
                Identifier: 'isInJSFile'
                Identifier: 'node'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' hasPrivateIdentifier'
                BinaryExpression
                  ParenthesizedExpression
                    BinaryExpression
                      BinaryExpression
                        CallExpression
                          Identifier: 'isBinaryExpression'
                          Identifier: 'node'
                        AmpersandAmpersandToken
                        CallExpression
                          Identifier: ' isPropertyAccessExpression'
                          PropertyAccessExpression
                            Identifier: 'node'
                            Identifier: 'left'
                      AmpersandAmpersandToken
                      CallExpression
                        Identifier: ' isPrivateIdentifier'
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: 'node'
                            Identifier: 'left'
                          Identifier: 'name'
                  BarBarToken
                  ParenthesizedExpression
                    BinaryExpression
                      CallExpression
                        Identifier: 'isPropertyAccessExpression'
                        Identifier: 'node'
                      AmpersandAmpersandToken
                      CallExpression
                        Identifier: ' isPrivateIdentifier'
                        PropertyAccessExpression
                          Identifier: 'node'
                          Identifier: 'name'
          IfStatement
            Identifier: 'hasPrivateIdentifier'
            Block
              ReturnStatement
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' thisContainer'
                CallExpression
                  Identifier: ' getThisContainer'
                  Identifier: 'node'
                  FalseKeyword
                  FalseKeyword
          SwitchStatement
            PropertyAccessExpression
              Identifier: 'thisContainer'
              Identifier: 'kind'
            CaseBlock
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'FunctionDeclaration'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'FunctionExpression'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' constructorSymbol'
                      UnionType
                        TypeReference
                          Identifier: ' Symbol'
                        UndefinedKeyword
                      PropertyAccessExpression
                        Identifier: ' thisContainer'
                        Identifier: 'symbol'
                IfStatement
                  BinaryExpression
                    CallExpression
                      Identifier: 'isBinaryExpression'
                      PropertyAccessExpression
                        Identifier: 'thisContainer'
                        Identifier: 'parent'
                    AmpersandAmpersandToken
                    BinaryExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: ' thisContainer'
                            Identifier: 'parent'
                          Identifier: 'operatorToken'
                        Identifier: 'kind'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'EqualsToken'
                  Block
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' l'
                          PropertyAccessExpression
                            PropertyAccessExpression
                              Identifier: ' thisContainer'
                              Identifier: 'parent'
                            Identifier: 'left'
                    IfStatement
                      BinaryExpression
                        CallExpression
                          Identifier: 'isBindableStaticAccessExpression'
                          Identifier: 'l'
                        AmpersandAmpersandToken
                        CallExpression
                          Identifier: ' isPrototypeAccess'
                          PropertyAccessExpression
                            Identifier: 'l'
                            Identifier: 'expression'
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        constructorSymbol'
                            EqualsToken
                            CallExpression
                              Identifier: ' lookupSymbolForPropertyAccess'
                              PropertyAccessExpression
                                PropertyAccessExpression
                                  Identifier: 'l'
                                  Identifier: 'expression'
                                Identifier: 'expression'
                              Identifier: ' thisParentContainer'
                IfStatement
                  BinaryExpression
                    Identifier: 'constructorSymbol'
                    AmpersandAmpersandToken
                    PropertyAccessExpression
                      Identifier: ' constructorSymbol'
                      Identifier: 'valueDeclaration'
                  Block
                    ExpressionStatement
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: '
                    // Declare a 'member' if the container is an ES5 class or ES6 constructor
                    constructorSymbol'
                          Identifier: 'members'
                        EqualsToken
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: ' constructorSymbol'
                            Identifier: 'members'
                          BarBarToken
                          CallExpression
                            Identifier: ' createSymbolTable'
                    IfStatement
                      CallExpression
                        Identifier: 'hasDynamicName'
                        Identifier: 'node'
                      Block
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                        bindDynamicallyNamedThisPropertyAssignment'
                            Identifier: 'node'
                            Identifier: ' constructorSymbol'
                            PropertyAccessExpression
                              Identifier: ' constructorSymbol'
                              Identifier: 'members'
                      Block
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                        declareSymbol'
                            PropertyAccessExpression
                              Identifier: 'constructorSymbol'
                              Identifier: 'members'
                            Identifier: ' constructorSymbol'
                            Identifier: ' node'
                            BinaryExpression
                              PropertyAccessExpression
                                Identifier: ' SymbolFlags'
                                Identifier: 'Property'
                              BarToken
                              PropertyAccessExpression
                                Identifier: ' SymbolFlags'
                                Identifier: 'Assignment'
                            BinaryExpression
                              PropertyAccessExpression
                                Identifier: ' SymbolFlags'
                                Identifier: 'PropertyExcludes'
                              AmpersandToken
                              PrefixUnaryExpression
                                PropertyAccessExpression
                                  Identifier: 'SymbolFlags'
                                  Identifier: 'Property'
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                    addDeclarationToSymbol'
                        Identifier: 'constructorSymbol'
                        PropertyAccessExpression
                          Identifier: ' constructorSymbol'
                          Identifier: 'valueDeclaration'
                        PropertyAccessExpression
                          Identifier: ' SymbolFlags'
                          Identifier: 'Class'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'Constructor'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'PropertyDeclaration'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'MethodDeclaration'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'GetAccessor'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'SetAccessor'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ClassStaticBlockDeclaration'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' containingClass'
                      PropertyAccessExpression
                        Identifier: ' thisContainer'
                        Identifier: 'parent'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' symbolTable'
                      ConditionalExpression
                        CallExpression
                          Identifier: ' isStatic'
                          Identifier: 'thisContainer'
                        QuestionToken
                        NonNullExpression
                          PropertyAccessExpression
                            PropertyAccessExpression
                              Identifier: ' containingClass'
                              Identifier: 'symbol'
                            Identifier: 'exports'
                        ColonToken
                        NonNullExpression
                          PropertyAccessExpression
                            PropertyAccessExpression
                              Identifier: ' containingClass'
                              Identifier: 'symbol'
                            Identifier: 'members'
                IfStatement
                  CallExpression
                    Identifier: 'hasDynamicName'
                    Identifier: 'node'
                  Block
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                    bindDynamicallyNamedThisPropertyAssignment'
                        Identifier: 'node'
                        PropertyAccessExpression
                          Identifier: ' containingClass'
                          Identifier: 'symbol'
                        Identifier: ' symbolTable'
                  Block
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                    declareSymbol'
                        Identifier: 'symbolTable'
                        PropertyAccessExpression
                          Identifier: ' containingClass'
                          Identifier: 'symbol'
                        Identifier: ' node'
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: ' SymbolFlags'
                            Identifier: 'Property'
                          BarToken
                          PropertyAccessExpression
                            Identifier: ' SymbolFlags'
                            Identifier: 'Assignment'
                        PropertyAccessExpression
                          Identifier: ' SymbolFlags'
                          Identifier: 'None'
                        TrueKeyword
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'SourceFile'
                IfStatement
                  CallExpression
                    Identifier: 'hasDynamicName'
                    Identifier: 'node'
                  Block
                    BreakStatement
                  IfStatement
                    PropertyAccessExpression
                      Identifier: 'thisContainer'
                      Identifier: 'commonJsModuleIndicator'
                    Block
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    declareSymbol'
                          NonNullExpression
                            PropertyAccessExpression
                              PropertyAccessExpression
                                Identifier: 'thisContainer'
                                Identifier: 'symbol'
                              Identifier: 'exports'
                          PropertyAccessExpression
                            Identifier: ' thisContainer'
                            Identifier: 'symbol'
                          Identifier: ' node'
                          BinaryExpression
                            PropertyAccessExpression
                              Identifier: ' SymbolFlags'
                              Identifier: 'Property'
                            BarToken
                            PropertyAccessExpression
                              Identifier: ' SymbolFlags'
                              Identifier: 'ExportValue'
                          PropertyAccessExpression
                            Identifier: ' SymbolFlags'
                            Identifier: 'None'
                    Block
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    declareSymbolAndAddToSymbolTable'
                          Identifier: 'node'
                          PropertyAccessExpression
                            Identifier: ' SymbolFlags'
                            Identifier: 'FunctionScopedVariable'
                          PropertyAccessExpression
                            Identifier: ' SymbolFlags'
                            Identifier: 'FunctionScopedVariableExcludes'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ModuleDeclaration'
                BreakStatement
              DefaultClause
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
                Debug'
                      Identifier: 'failBadSyntaxKind'
                    Identifier: 'thisContainer'
      FunctionDeclaration
        Identifier: ' bindDynamicallyNamedThisPropertyAssignment'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' BinaryExpression'
            TypeReference
              Identifier: ' DynamicNamedDeclaration'
        Parameter
          Identifier: ' symbol'
          TypeReference
            Identifier: ' Symbol'
        Parameter
          Identifier: ' symbolTable'
          TypeReference
            Identifier: ' SymbolTable'
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        declareSymbol'
              Identifier: 'symbolTable'
              Identifier: ' symbol'
              Identifier: ' node'
              PropertyAccessExpression
                Identifier: ' SymbolFlags'
                Identifier: 'Property'
              PropertyAccessExpression
                Identifier: ' SymbolFlags'
                Identifier: 'None'
              TrueKeyword
              TrueKeyword
          ExpressionStatement
            CallExpression
              Identifier: '
        addLateBoundAssignmentDeclarationToSymbol'
              Identifier: 'node'
              Identifier: ' symbol'
      FunctionDeclaration
        Identifier: ' addLateBoundAssignmentDeclarationToSymbol'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' BinaryExpression'
            TypeReference
              Identifier: ' DynamicNamedDeclaration'
        Parameter
          Identifier: ' symbol'
          UnionType
            TypeReference
              Identifier: ' Symbol'
            UndefinedKeyword
        Block
          IfStatement
            Identifier: 'symbol'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    ParenthesizedExpression
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: 'symbol'
                          Identifier: 'assignmentDeclarationMembers'
                        BarBarToken
                        ParenthesizedExpression
                          BinaryExpression
                            PropertyAccessExpression
                              Identifier: 'symbol'
                              Identifier: 'assignmentDeclarationMembers'
                            EqualsToken
                            NewExpression
                              Identifier: ' Map'
                    Identifier: 'set'
                  CallExpression
                    Identifier: 'getNodeId'
                    Identifier: 'node'
                  Identifier: ' node'
      FunctionDeclaration
        Identifier: ' bindSpecialPropertyDeclaration'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' PropertyAccessExpression'
            TypeReference
              Identifier: ' LiteralLikeElementAccessExpression'
        Block
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'expression'
                Identifier: 'kind'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'ThisKeyword'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindThisPropertyAssignment'
                  Identifier: 'node'
            IfStatement
              BinaryExpression
                CallExpression
                  Identifier: 'isBindableStaticAccessExpression'
                  Identifier: 'node'
                AmpersandAmpersandToken
                BinaryExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: ' node'
                        Identifier: 'parent'
                      Identifier: 'parent'
                    Identifier: 'kind'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'SourceFile'
              Block
                IfStatement
                  CallExpression
                    Identifier: 'isPrototypeAccess'
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'expression'
                  Block
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                bindPrototypePropertyAssignment'
                        Identifier: 'node'
                        PropertyAccessExpression
                          Identifier: ' node'
                          Identifier: 'parent'
                  Block
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                bindStaticPropertyAssignment'
                        Identifier: 'node'
      FunctionDeclaration
        Identifier: ' bindPrototypeAssignment'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' BindableStaticPropertyAssignmentExpression'
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        setParent'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'left'
              Identifier: ' node'
          ExpressionStatement
            CallExpression
              Identifier: '
        setParent'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'right'
              Identifier: ' node'
          ExpressionStatement
            CallExpression
              Identifier: '
        bindPropertyAssignment'
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'left'
                Identifier: 'expression'
              PropertyAccessExpression
                Identifier: ' node'
                Identifier: 'left'
              FalseKeyword
              TrueKeyword
      FunctionDeclaration
        Identifier: ' bindObjectDefinePrototypeProperty'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' BindableObjectDefinePropertyCall'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' namespaceSymbol'
                CallExpression
                  Identifier: ' lookupSymbolForPropertyAccess'
                  AsExpression
                    PropertyAccessExpression
                      ParenthesizedExpression
                        AsExpression
                          ElementAccessExpression
                            PropertyAccessExpression
                              Identifier: 'node'
                              Identifier: 'arguments'
                            NumericLiteral
                          TypeReference
                            Identifier: ' PropertyAccessExpression'
                      Identifier: 'expression'
                    TypeReference
                      Identifier: ' EntityNameExpression'
          IfStatement
            BinaryExpression
              Identifier: 'namespaceSymbol'
              AmpersandAmpersandToken
              PropertyAccessExpression
                Identifier: ' namespaceSymbol'
                Identifier: 'valueDeclaration'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            // Ensure the namespace symbol becomes class-like
            addDeclarationToSymbol'
                  Identifier: 'namespaceSymbol'
                  PropertyAccessExpression
                    Identifier: ' namespaceSymbol'
                    Identifier: 'valueDeclaration'
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'Class'
          ExpressionStatement
            CallExpression
              Identifier: '
        bindPotentiallyNewExpandoMemberToNamespace'
              Identifier: 'node'
              Identifier: ' namespaceSymbol'
              TrueKeyword
      FunctionDeclaration
        Identifier: ' bindPrototypePropertyAssignment'
        Parameter
          Identifier: 'lhs'
          TypeReference
            Identifier: ' BindableStaticAccessExpression'
        Parameter
          Identifier: ' parent'
          TypeReference
            Identifier: ' Node'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' classPrototype'
                AsExpression
                  PropertyAccessExpression
                    Identifier: ' lhs'
                    Identifier: 'expression'
                  TypeReference
                    Identifier: ' BindableStaticAccessExpression'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' constructorFunction'
                PropertyAccessExpression
                  Identifier: ' classPrototype'
                  Identifier: 'expression'
          ExpressionStatement
            CallExpression
              Identifier: '

        // Fix up parent pointers since we're going to use these nodes before we bind into them
        setParent'
              Identifier: 'constructorFunction'
              Identifier: ' classPrototype'
          ExpressionStatement
            CallExpression
              Identifier: '
        setParent'
              Identifier: 'classPrototype'
              Identifier: ' lhs'
          ExpressionStatement
            CallExpression
              Identifier: '
        setParent'
              Identifier: 'lhs'
              Identifier: ' parent'
          ExpressionStatement
            CallExpression
              Identifier: '

        bindPropertyAssignment'
              Identifier: 'constructorFunction'
              Identifier: ' lhs'
              TrueKeyword
              TrueKeyword
      FunctionDeclaration
        Identifier: ' bindObjectDefinePropertyAssignment'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' BindableObjectDefinePropertyCall'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' namespaceSymbol'
                CallExpression
                  Identifier: ' lookupSymbolForPropertyAccess'
                  ElementAccessExpression
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'arguments'
                    NumericLiteral
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' isToplevel'
                BinaryExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: ' node'
                        Identifier: 'parent'
                      Identifier: 'parent'
                    Identifier: 'kind'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'SourceFile'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        namespaceSymbol'
              EqualsToken
              CallExpression
                Identifier: ' bindPotentiallyMissingNamespaces'
                Identifier: 'namespaceSymbol'
                ElementAccessExpression
                  PropertyAccessExpression
                    Identifier: ' node'
                    Identifier: 'arguments'
                  NumericLiteral
                Identifier: ' isToplevel'
                FalseKeyword
                FalseKeyword
          ExpressionStatement
            CallExpression
              Identifier: '
        bindPotentiallyNewExpandoMemberToNamespace'
              Identifier: 'node'
              Identifier: ' namespaceSymbol'
              FalseKeyword
      FunctionDeclaration
        Identifier: ' bindSpecialPropertyAssignment'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' BindablePropertyAssignmentExpression'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' parentSymbol'
                BinaryExpression
                  CallExpression
                    Identifier: ' lookupSymbolForPropertyAccess'
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'left'
                      Identifier: 'expression'
                    Identifier: ' blockScopeContainer'
                  BarBarToken
                  CallExpression
                    Identifier: ' lookupSymbolForPropertyAccess'
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'left'
                      Identifier: 'expression'
                    Identifier: ' container'
          IfStatement
            BinaryExpression
              PrefixUnaryExpression
                CallExpression
                  Identifier: 'isInJSFile'
                  Identifier: 'node'
              AmpersandAmpersandToken
              PrefixUnaryExpression
                CallExpression
                  Identifier: 'isFunctionSymbol'
                  Identifier: 'parentSymbol'
            Block
              ReturnStatement
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' rootExpr'
                CallExpression
                  Identifier: ' getLeftmostAccessExpression'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'left'
          IfStatement
            BinaryExpression
              CallExpression
                Identifier: 'isIdentifier'
                Identifier: 'rootExpr'
              AmpersandAmpersandToken
              BinaryExpression
                NonNullExpression
                  PropertyAccessExpression
                    CallExpression
                      Identifier: ' lookupSymbolForName'
                      Identifier: 'container'
                      PropertyAccessExpression
                        Identifier: ' rootExpr'
                        Identifier: 'escapedText'
                    QuestionDotToken
                    Identifier: 'flags'
                AmpersandToken
                PropertyAccessExpression
                  Identifier: ' SymbolFlags'
                  Identifier: 'Alias'
            Block
              ReturnStatement
          ExpressionStatement
            CallExpression
              Identifier: '
        // Fix up parent pointers since we're going to use these nodes before we bind into them
        setParent'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'left'
              Identifier: ' node'
          ExpressionStatement
            CallExpression
              Identifier: '
        setParent'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'right'
              Identifier: ' node'
          IfStatement
            BinaryExpression
              BinaryExpression
                CallExpression
                  Identifier: 'isIdentifier'
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'left'
                    Identifier: 'expression'
                AmpersandAmpersandToken
                BinaryExpression
                  Identifier: ' container'
                  EqualsEqualsEqualsToken
                  Identifier: ' file'
              AmpersandAmpersandToken
              CallExpression
                Identifier: ' isExportsOrModuleExportsOrAlias'
                Identifier: 'file'
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: ' node'
                    Identifier: 'left'
                  Identifier: 'expression'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            // This can be an alias for the 'exports' or 'module.exports' names, e.g.
            //    var util = module.exports;
            //    util.property = function ...
            bindExportsPropertyAssignment'
                  AsExpression
                    Identifier: 'node'
                    TypeReference
                      Identifier: ' BindableStaticPropertyAssignmentExpression'
            IfStatement
              CallExpression
                Identifier: 'hasDynamicName'
                Identifier: 'node'
              Block
                ExpressionStatement
                  CallExpression
                    Identifier: '
            bindAnonymousDeclaration'
                    Identifier: 'node'
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: ' SymbolFlags'
                        Identifier: 'Property'
                      BarToken
                      PropertyAccessExpression
                        Identifier: ' SymbolFlags'
                        Identifier: 'Assignment'
                    PropertyAccessExpression
                      Identifier: ' InternalSymbolName'
                      Identifier: 'Computed'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' sym'
                      CallExpression
                        Identifier: ' bindPotentiallyMissingNamespaces'
                        Identifier: 'parentSymbol'
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: ' node'
                            Identifier: 'left'
                          Identifier: 'expression'
                        CallExpression
                          Identifier: ' isTopLevelNamespaceAssignment'
                          PropertyAccessExpression
                            Identifier: 'node'
                            Identifier: 'left'
                        FalseKeyword
                        FalseKeyword
                ExpressionStatement
                  CallExpression
                    Identifier: '
            addLateBoundAssignmentDeclarationToSymbol'
                    Identifier: 'node'
                    Identifier: ' sym'
              Block
                ExpressionStatement
                  CallExpression
                    Identifier: '
            bindStaticPropertyAssignment'
                    CallExpression
                      Identifier: 'cast'
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'left'
                      Identifier: ' isBindableStaticNameExpression'
      FunctionDeclaration
        Identifier: ' bindStaticPropertyAssignment'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' BindableStaticNameExpression'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        Debug'
                Identifier: 'assert'
              PrefixUnaryExpression
                CallExpression
                  Identifier: 'isIdentifier'
                  Identifier: 'node'
          ExpressionStatement
            CallExpression
              Identifier: '
        setParent'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'expression'
              Identifier: ' node'
          ExpressionStatement
            CallExpression
              Identifier: '
        bindPropertyAssignment'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'expression'
              Identifier: ' node'
              FalseKeyword
              FalseKeyword
      FunctionDeclaration
        Identifier: ' bindPotentiallyMissingNamespaces'
        Parameter
          Identifier: 'namespaceSymbol'
          UnionType
            TypeReference
              Identifier: ' Symbol'
            UndefinedKeyword
        Parameter
          Identifier: ' entityName'
          TypeReference
            Identifier: ' BindableStaticNameExpression'
        Parameter
          Identifier: ' isToplevel'
          BooleanKeyword
        Parameter
          Identifier: ' isPrototypeProperty'
          BooleanKeyword
        Parameter
          Identifier: ' containerIsClass'
          BooleanKeyword
        Block
          IfStatement
            BinaryExpression
              NonNullExpression
                PropertyAccessExpression
                  Identifier: 'namespaceSymbol'
                  QuestionDotToken
                  Identifier: 'flags'
              AmpersandToken
              PropertyAccessExpression
                Identifier: ' SymbolFlags'
                Identifier: 'Alias'
            Block
              ReturnStatement
                Identifier: ' namespaceSymbol'
          IfStatement
            BinaryExpression
              Identifier: 'isToplevel'
              AmpersandAmpersandToken
              PrefixUnaryExpression
                Identifier: 'isPrototypeProperty'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' flags'
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: ' SymbolFlags'
                        Identifier: 'Module'
                      BarToken
                      PropertyAccessExpression
                        Identifier: ' SymbolFlags'
                        Identifier: 'Assignment'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' excludeFlags'
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: ' SymbolFlags'
                        Identifier: 'ValueModuleExcludes'
                      AmpersandToken
                      PrefixUnaryExpression
                        PropertyAccessExpression
                          Identifier: 'SymbolFlags'
                          Identifier: 'Assignment'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            namespaceSymbol'
                  EqualsToken
                  CallExpression
                    Identifier: ' forEachIdentifierInEntityName'
                    Identifier: 'entityName'
                    Identifier: ' namespaceSymbol'
                    ArrowFunction
                      Parameter
                        Identifier: 'id'
                      Parameter
                        Identifier: ' symbol'
                      Parameter
                        Identifier: ' parent'
                      EqualsGreaterThanToken
                      Block
                        IfStatement
                          Identifier: 'symbol'
                          Block
                            ExpressionStatement
                              CallExpression
                                Identifier: '
                    addDeclarationToSymbol'
                                Identifier: 'symbol'
                                Identifier: ' id'
                                Identifier: ' flags'
                            ReturnStatement
                              Identifier: ' symbol'
                          Block
                            VariableStatement
                              VariableDeclarationList
                                VariableDeclaration
                                  Identifier: ' table'
                                  ConditionalExpression
                                    Identifier: ' parent'
                                    QuestionToken
                                    NonNullExpression
                                      PropertyAccessExpression
                                        Identifier: ' parent'
                                        Identifier: 'exports'
                                    ColonToken
                                    BinaryExpression
                                      PropertyAccessExpression
                                        Identifier: '
                        file'
                                        Identifier: 'jsGlobalAugmentations'
                                      BarBarToken
                                      ParenthesizedExpression
                                        BinaryExpression
                                          PropertyAccessExpression
                                            Identifier: 'file'
                                            Identifier: 'jsGlobalAugmentations'
                                          EqualsToken
                                          CallExpression
                                            Identifier: ' createSymbolTable'
                            ReturnStatement
                              CallExpression
                                Identifier: ' declareSymbol'
                                Identifier: 'table'
                                Identifier: ' parent'
                                Identifier: ' id'
                                Identifier: ' flags'
                                Identifier: ' excludeFlags'
          IfStatement
            BinaryExpression
              BinaryExpression
                Identifier: 'containerIsClass'
                AmpersandAmpersandToken
                Identifier: ' namespaceSymbol'
              AmpersandAmpersandToken
              PropertyAccessExpression
                Identifier: ' namespaceSymbol'
                Identifier: 'valueDeclaration'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            addDeclarationToSymbol'
                  Identifier: 'namespaceSymbol'
                  PropertyAccessExpression
                    Identifier: ' namespaceSymbol'
                    Identifier: 'valueDeclaration'
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'Class'
          ReturnStatement
            Identifier: ' namespaceSymbol'
      FunctionDeclaration
        Identifier: ' bindPotentiallyNewExpandoMemberToNamespace'
        Parameter
          Identifier: 'declaration'
          UnionType
            TypeReference
              Identifier: ' BindableStaticAccessExpression'
            TypeReference
              Identifier: ' CallExpression'
        Parameter
          Identifier: ' namespaceSymbol'
          UnionType
            TypeReference
              Identifier: ' Symbol'
            UndefinedKeyword
        Parameter
          Identifier: ' isPrototypeProperty'
          BooleanKeyword
        Block
          IfStatement
            BinaryExpression
              PrefixUnaryExpression
                Identifier: 'namespaceSymbol'
              BarBarToken
              PrefixUnaryExpression
                CallExpression
                  Identifier: 'isExpandoSymbol'
                  Identifier: 'namespaceSymbol'
            Block
              ReturnStatement
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' symbolTable'
                ConditionalExpression
                  Identifier: ' isPrototypeProperty'
                  QuestionToken
                  ParenthesizedExpression
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: 'namespaceSymbol'
                        Identifier: 'members'
                      BarBarToken
                      ParenthesizedExpression
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: 'namespaceSymbol'
                            Identifier: 'members'
                          EqualsToken
                          CallExpression
                            Identifier: ' createSymbolTable'
                  ColonToken
                  ParenthesizedExpression
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: 'namespaceSymbol'
                        Identifier: 'exports'
                      BarBarToken
                      ParenthesizedExpression
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: 'namespaceSymbol'
                            Identifier: 'exports'
                          EqualsToken
                          CallExpression
                            Identifier: ' createSymbolTable'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' includes'
                PropertyAccessExpression
                  Identifier: ' SymbolFlags'
                  Identifier: 'None'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' excludes'
                PropertyAccessExpression
                  Identifier: ' SymbolFlags'
                  Identifier: 'None'
          IfStatement
            CallExpression
              Identifier: 'isFunctionLikeDeclaration'
              NonNullExpression
                CallExpression
                  Identifier: 'getAssignedExpandoInitializer'
                  Identifier: 'declaration'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            includes'
                  EqualsToken
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'Method'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            excludes'
                  EqualsToken
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'MethodExcludes'
            IfStatement
              BinaryExpression
                CallExpression
                  Identifier: 'isCallExpression'
                  Identifier: 'declaration'
                AmpersandAmpersandToken
                CallExpression
                  Identifier: ' isBindableObjectDefinePropertyCall'
                  Identifier: 'declaration'
              Block
                IfStatement
                  CallExpression
                    Identifier: '
                some'
                    PropertyAccessExpression
                      ElementAccessExpression
                        PropertyAccessExpression
                          Identifier: 'declaration'
                          Identifier: 'arguments'
                        NumericLiteral
                      Identifier: 'properties'
                    ArrowFunction
                      Parameter
                        Identifier: ' p'
                      EqualsGreaterThanToken
                      Block
                        VariableStatement
                          VariableDeclarationList
                            VariableDeclaration
                              Identifier: ' id'
                              CallExpression
                                Identifier: ' getNameOfDeclaration'
                                Identifier: 'p'
                        ReturnStatement
                          BinaryExpression
                            BinaryExpression
                              PrefixUnaryExpression
                                PrefixUnaryExpression
                                  Identifier: 'id'
                              AmpersandAmpersandToken
                              CallExpression
                                Identifier: ' isIdentifier'
                                Identifier: 'id'
                            AmpersandAmpersandToken
                            BinaryExpression
                              CallExpression
                                Identifier: ' idText'
                                Identifier: 'id'
                              EqualsEqualsEqualsToken
                              StringLiteral
                  Block
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                // We mix in `SymbolFLags.Property` so in the checker `getTypeOfVariableParameterOrProperty` is used for this
                // symbol, instead of `getTypeOfAccessor` (which will assert as there is no real accessor declaration)
                includes'
                        BarEqualsToken
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: ' SymbolFlags'
                            Identifier: 'SetAccessor'
                          BarToken
                          PropertyAccessExpression
                            Identifier: ' SymbolFlags'
                            Identifier: 'Property'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                excludes'
                        BarEqualsToken
                        PropertyAccessExpression
                          Identifier: ' SymbolFlags'
                          Identifier: 'SetAccessorExcludes'
                IfStatement
                  CallExpression
                    Identifier: '
                some'
                    PropertyAccessExpression
                      ElementAccessExpression
                        PropertyAccessExpression
                          Identifier: 'declaration'
                          Identifier: 'arguments'
                        NumericLiteral
                      Identifier: 'properties'
                    ArrowFunction
                      Parameter
                        Identifier: ' p'
                      EqualsGreaterThanToken
                      Block
                        VariableStatement
                          VariableDeclarationList
                            VariableDeclaration
                              Identifier: ' id'
                              CallExpression
                                Identifier: ' getNameOfDeclaration'
                                Identifier: 'p'
                        ReturnStatement
                          BinaryExpression
                            BinaryExpression
                              PrefixUnaryExpression
                                PrefixUnaryExpression
                                  Identifier: 'id'
                              AmpersandAmpersandToken
                              CallExpression
                                Identifier: ' isIdentifier'
                                Identifier: 'id'
                            AmpersandAmpersandToken
                            BinaryExpression
                              CallExpression
                                Identifier: ' idText'
                                Identifier: 'id'
                              EqualsEqualsEqualsToken
                              StringLiteral
                  Block
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                includes'
                        BarEqualsToken
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: ' SymbolFlags'
                            Identifier: 'GetAccessor'
                          BarToken
                          PropertyAccessExpression
                            Identifier: ' SymbolFlags'
                            Identifier: 'Property'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                excludes'
                        BarEqualsToken
                        PropertyAccessExpression
                          Identifier: ' SymbolFlags'
                          Identifier: 'GetAccessorExcludes'
          IfStatement
            BinaryExpression
              Identifier: 'includes'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' SymbolFlags'
                Identifier: 'None'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            includes'
                  EqualsToken
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'Property'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            excludes'
                  EqualsToken
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'PropertyExcludes'
          ExpressionStatement
            CallExpression
              Identifier: '

        declareSymbol'
              Identifier: 'symbolTable'
              Identifier: ' namespaceSymbol'
              Identifier: ' declaration'
              BinaryExpression
                Identifier: ' includes'
                BarToken
                PropertyAccessExpression
                  Identifier: ' SymbolFlags'
                  Identifier: 'Assignment'
              BinaryExpression
                Identifier: ' excludes'
                AmpersandToken
                PrefixUnaryExpression
                  PropertyAccessExpression
                    Identifier: 'SymbolFlags'
                    Identifier: 'Assignment'
      FunctionDeclaration
        Identifier: ' isTopLevelNamespaceAssignment'
        Parameter
          Identifier: 'propertyAccess'
          TypeReference
            Identifier: ' BindableAccessExpression'
        Block
          ReturnStatement
            ConditionalExpression
              CallExpression
                Identifier: ' isBinaryExpression'
                PropertyAccessExpression
                  Identifier: 'propertyAccess'
                  Identifier: 'parent'
              QuestionToken
              BinaryExpression
                PropertyAccessExpression
                  PropertyAccessExpression
                    CallExpression
                      Identifier: ' getParentOfBinaryExpression'
                      PropertyAccessExpression
                        Identifier: 'propertyAccess'
                        Identifier: 'parent'
                    Identifier: 'parent'
                  Identifier: 'kind'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'SourceFile'
              ColonToken
              BinaryExpression
                PropertyAccessExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: ' propertyAccess'
                      Identifier: 'parent'
                    Identifier: 'parent'
                  Identifier: 'kind'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'SourceFile'
      FunctionDeclaration
        Identifier: ' bindPropertyAssignment'
        Parameter
          Identifier: 'name'
          TypeReference
            Identifier: ' BindableStaticNameExpression'
        Parameter
          Identifier: ' propertyAccess'
          TypeReference
            Identifier: ' BindableStaticAccessExpression'
        Parameter
          Identifier: ' isPrototypeProperty'
          BooleanKeyword
        Parameter
          Identifier: ' containerIsClass'
          BooleanKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' namespaceSymbol'
                BinaryExpression
                  CallExpression
                    Identifier: ' lookupSymbolForPropertyAccess'
                    Identifier: 'name'
                    Identifier: ' blockScopeContainer'
                  BarBarToken
                  CallExpression
                    Identifier: ' lookupSymbolForPropertyAccess'
                    Identifier: 'name'
                    Identifier: ' container'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' isToplevel'
                CallExpression
                  Identifier: ' isTopLevelNamespaceAssignment'
                  Identifier: 'propertyAccess'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        namespaceSymbol'
              EqualsToken
              CallExpression
                Identifier: ' bindPotentiallyMissingNamespaces'
                Identifier: 'namespaceSymbol'
                PropertyAccessExpression
                  Identifier: ' propertyAccess'
                  Identifier: 'expression'
                Identifier: ' isToplevel'
                Identifier: ' isPrototypeProperty'
                Identifier: ' containerIsClass'
          ExpressionStatement
            CallExpression
              Identifier: '
        bindPotentiallyNewExpandoMemberToNamespace'
              Identifier: 'propertyAccess'
              Identifier: ' namespaceSymbol'
              Identifier: ' isPrototypeProperty'
      FunctionDeclaration
        Identifier: ' isExpandoSymbol'
        Parameter
          Identifier: 'symbol'
          TypeReference
            Identifier: ' Symbol'
        BooleanKeyword
        Block
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'symbol'
                Identifier: 'flags'
              AmpersandToken
              ParenthesizedExpression
                BinaryExpression
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: 'SymbolFlags'
                      Identifier: 'Function'
                    BarToken
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'Class'
                  BarToken
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'NamespaceModule'
            Block
              ReturnStatement
                TrueKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' node'
                PropertyAccessExpression
                  Identifier: ' symbol'
                  Identifier: 'valueDeclaration'
          IfStatement
            BinaryExpression
              Identifier: 'node'
              AmpersandAmpersandToken
              CallExpression
                Identifier: ' isCallExpression'
                Identifier: 'node'
            Block
              ReturnStatement
                PrefixUnaryExpression
                  PrefixUnaryExpression
                    CallExpression
                      Identifier: 'getAssignedExpandoInitializer'
                      Identifier: 'node'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' init'
                ConditionalExpression
                  PrefixUnaryExpression
                    Identifier: 'node'
                  QuestionToken
                  Identifier: ' undefined'
                  ColonToken
                  ConditionalExpression
                    CallExpression
                      Identifier: '
            isVariableDeclaration'
                      Identifier: 'node'
                    QuestionToken
                    PropertyAccessExpression
                      Identifier: ' node'
                      Identifier: 'initializer'
                    ColonToken
                    ConditionalExpression
                      CallExpression
                        Identifier: '
            isBinaryExpression'
                        Identifier: 'node'
                      QuestionToken
                      PropertyAccessExpression
                        Identifier: ' node'
                        Identifier: 'right'
                      ColonToken
                      ConditionalExpression
                        BinaryExpression
                          CallExpression
                            Identifier: '
            isPropertyAccessExpression'
                            Identifier: 'node'
                          AmpersandAmpersandToken
                          CallExpression
                            Identifier: ' isBinaryExpression'
                            PropertyAccessExpression
                              Identifier: 'node'
                              Identifier: 'parent'
                        QuestionToken
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: ' node'
                            Identifier: 'parent'
                          Identifier: 'right'
                        ColonToken
                        Identifier: '
            undefined'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        init'
              EqualsToken
              BinaryExpression
                Identifier: ' init'
                AmpersandAmpersandToken
                CallExpression
                  Identifier: ' getRightMostAssignedExpression'
                  Identifier: 'init'
          IfStatement
            Identifier: 'init'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' isPrototypeAssignment'
                    CallExpression
                      Identifier: ' isPrototypeAccess'
                      ConditionalExpression
                        CallExpression
                          Identifier: 'isVariableDeclaration'
                          NonNullExpression
                            Identifier: 'node'
                        QuestionToken
                        PropertyAccessExpression
                          Identifier: ' node'
                          Identifier: 'name'
                        ColonToken
                        ConditionalExpression
                          CallExpression
                            Identifier: ' isBinaryExpression'
                            NonNullExpression
                              Identifier: 'node'
                          QuestionToken
                          PropertyAccessExpression
                            Identifier: ' node'
                            Identifier: 'left'
                          ColonToken
                          NonNullExpression
                            Identifier: ' node'
              ReturnStatement
                PrefixUnaryExpression
                  PrefixUnaryExpression
                    CallExpression
                      Identifier: 'getExpandoInitializer'
                      ConditionalExpression
                        BinaryExpression
                          CallExpression
                            Identifier: 'isBinaryExpression'
                            Identifier: 'init'
                          AmpersandAmpersandToken
                          ParenthesizedExpression
                            BinaryExpression
                              BinaryExpression
                                PropertyAccessExpression
                                  PropertyAccessExpression
                                    Identifier: 'init'
                                    Identifier: 'operatorToken'
                                  Identifier: 'kind'
                                EqualsEqualsEqualsToken
                                PropertyAccessExpression
                                  Identifier: ' SyntaxKind'
                                  Identifier: 'BarBarToken'
                              BarBarToken
                              BinaryExpression
                                PropertyAccessExpression
                                  PropertyAccessExpression
                                    Identifier: ' init'
                                    Identifier: 'operatorToken'
                                  Identifier: 'kind'
                                EqualsEqualsEqualsToken
                                PropertyAccessExpression
                                  Identifier: ' SyntaxKind'
                                  Identifier: 'QuestionQuestionToken'
                        QuestionToken
                        PropertyAccessExpression
                          Identifier: ' init'
                          Identifier: 'right'
                        ColonToken
                        Identifier: ' init'
                      Identifier: ' isPrototypeAssignment'
          ReturnStatement
            FalseKeyword
      FunctionDeclaration
        Identifier: ' getParentOfBinaryExpression'
        Parameter
          Identifier: 'expr'
          TypeReference
            Identifier: ' Node'
        Block
          WhileStatement
            CallExpression
              Identifier: 'isBinaryExpression'
              PropertyAccessExpression
                Identifier: 'expr'
                Identifier: 'parent'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            expr'
                  EqualsToken
                  PropertyAccessExpression
                    Identifier: ' expr'
                    Identifier: 'parent'
          ReturnStatement
            PropertyAccessExpression
              Identifier: ' expr'
              Identifier: 'parent'
      FunctionDeclaration
        Identifier: ' lookupSymbolForPropertyAccess'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' BindableStaticNameExpression'
        Parameter
          Identifier: ' lookupContainer'
          UnionType
            TypeReference
              Identifier: ' IsContainer'
            TypeReference
              Identifier: ' IsBlockScopedContainer'
            TypeReference
              Identifier: ' EntityNameExpression'
          Identifier: ' container'
        UnionType
          TypeReference
            Identifier: ' Symbol'
          UndefinedKeyword
        Block
          IfStatement
            CallExpression
              Identifier: 'isIdentifier'
              Identifier: 'node'
            Block
              ReturnStatement
                CallExpression
                  Identifier: ' lookupSymbolForName'
                  Identifier: 'lookupContainer'
                  PropertyAccessExpression
                    Identifier: ' node'
                    Identifier: 'escapedText'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' symbol'
                    CallExpression
                      Identifier: ' lookupSymbolForPropertyAccess'
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'expression'
              ReturnStatement
                BinaryExpression
                  BinaryExpression
                    Identifier: ' symbol'
                    AmpersandAmpersandToken
                    PropertyAccessExpression
                      Identifier: ' symbol'
                      Identifier: 'exports'
                  AmpersandAmpersandToken
                  CallExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: ' symbol'
                        Identifier: 'exports'
                      Identifier: 'get'
                    CallExpression
                      Identifier: 'getElementOrPropertyAccessName'
                      Identifier: 'node'
      FunctionDeclaration
        Identifier: ' forEachIdentifierInEntityName'
        Parameter
          Identifier: 'e'
          TypeReference
            Identifier: ' BindableStaticNameExpression'
        Parameter
          Identifier: ' parent'
          UnionType
            TypeReference
              Identifier: ' Symbol'
            UndefinedKeyword
        Parameter
          Identifier: ' action'
          FunctionType
            Parameter
              Identifier: 'e'
              TypeReference
                Identifier: ' Declaration'
            Parameter
              Identifier: ' symbol'
              UnionType
                TypeReference
                  Identifier: ' Symbol'
                UndefinedKeyword
            Parameter
              Identifier: ' parent'
              UnionType
                TypeReference
                  Identifier: ' Symbol'
                UndefinedKeyword
            UnionType
              TypeReference
                Identifier: ' Symbol'
              UndefinedKeyword
        UnionType
          TypeReference
            Identifier: ' Symbol'
          UndefinedKeyword
        Block
          IfStatement
            CallExpression
              Identifier: 'isExportsOrModuleExportsOrAlias'
              Identifier: 'file'
              Identifier: ' e'
            Block
              ReturnStatement
                PropertyAccessExpression
                  Identifier: ' file'
                  Identifier: 'symbol'
            IfStatement
              CallExpression
                Identifier: 'isIdentifier'
                Identifier: 'e'
              Block
                ReturnStatement
                  CallExpression
                    Identifier: ' action'
                    Identifier: 'e'
                    CallExpression
                      Identifier: ' lookupSymbolForPropertyAccess'
                      Identifier: 'e'
                    Identifier: ' parent'
              Block
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' s'
                      CallExpression
                        Identifier: ' forEachIdentifierInEntityName'
                        PropertyAccessExpression
                          Identifier: 'e'
                          Identifier: 'expression'
                        Identifier: ' parent'
                        Identifier: ' action'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' name'
                      CallExpression
                        Identifier: ' getNameOrArgument'
                        Identifier: 'e'
                IfStatement
                  CallExpression
                    Identifier: 'isPrivateIdentifier'
                    Identifier: 'name'
                  Block
                    ExpressionStatement
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                Debug'
                          Identifier: 'fail'
                        StringLiteral
                ReturnStatement
                  CallExpression
                    Identifier: ' action'
                    Identifier: 'name'
                    BinaryExpression
                      BinaryExpression
                        Identifier: ' s'
                        AmpersandAmpersandToken
                        PropertyAccessExpression
                          Identifier: ' s'
                          Identifier: 'exports'
                      AmpersandAmpersandToken
                      CallExpression
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: ' s'
                            Identifier: 'exports'
                          Identifier: 'get'
                        CallExpression
                          Identifier: 'getElementOrPropertyAccessName'
                          Identifier: 'e'
                    Identifier: ' s'
      FunctionDeclaration
        Identifier: ' bindCallExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' CallExpression'
        Block
          IfStatement
            BinaryExpression
              PrefixUnaryExpression
                PropertyAccessExpression
                  Identifier: 'file'
                  Identifier: 'commonJsModuleIndicator'
              AmpersandAmpersandToken
              CallExpression
                Identifier: ' isRequireCall'
                Identifier: 'node'
                FalseKeyword
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            setCommonJsModuleIndicator'
                  Identifier: 'node'
      FunctionDeclaration
        Identifier: ' bindClassLikeDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' ClassLikeDeclaration'
        Block
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'kind'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'ClassDeclaration'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindBlockScopedDeclaration'
                  Identifier: 'node'
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'Class'
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'ClassExcludes'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' bindingName'
                    ConditionalExpression
                      PropertyAccessExpression
                        Identifier: ' node'
                        Identifier: 'name'
                      QuestionToken
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: ' node'
                          Identifier: 'name'
                        Identifier: 'escapedText'
                      ColonToken
                      PropertyAccessExpression
                        Identifier: ' InternalSymbolName'
                        Identifier: 'Class'
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindAnonymousDeclaration'
                  Identifier: 'node'
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'Class'
                  Identifier: ' bindingName'
              IfStatement
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'name'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                classifiableNames'
                        Identifier: 'add'
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: 'node'
                          Identifier: 'name'
                        Identifier: 'escapedText'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                ObjectBindingPattern
                  BindingElement
                    Identifier: ' symbol'
                Identifier: ' node'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' prototypeSymbol'
                CallExpression
                  Identifier: ' createSymbol'
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: 'SymbolFlags'
                      Identifier: 'Property'
                    BarToken
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'Prototype'
                  AsExpression
                    StringLiteral
                    TypeReference
                      Identifier: ' __String'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' symbolExport'
                CallExpression
                  PropertyAccessExpression
                    NonNullExpression
                      PropertyAccessExpression
                        Identifier: ' symbol'
                        Identifier: 'exports'
                    Identifier: 'get'
                  PropertyAccessExpression
                    Identifier: 'prototypeSymbol'
                    Identifier: 'escapedName'
          IfStatement
            Identifier: 'symbolExport'
            Block
              IfStatement
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'name'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                setParent'
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'name'
                      Identifier: ' node'
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: '
            file'
                      Identifier: 'bindDiagnostics'
                    Identifier: 'push'
                  CallExpression
                    Identifier: 'createDiagnosticForNode'
                    ElementAccessExpression
                      NonNullExpression
                        PropertyAccessExpression
                          Identifier: 'symbolExport'
                          Identifier: 'declarations'
                      NumericLiteral
                    PropertyAccessExpression
                      Identifier: ' Diagnostics'
                      Identifier: 'Duplicate_identifier_0'
                    CallExpression
                      Identifier: ' symbolName'
                      Identifier: 'prototypeSymbol'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                NonNullExpression
                  PropertyAccessExpression
                    Identifier: '
        symbol'
                    Identifier: 'exports'
                Identifier: 'set'
              PropertyAccessExpression
                Identifier: 'prototypeSymbol'
                Identifier: 'escapedName'
              Identifier: ' prototypeSymbol'
          ExpressionStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: '
        prototypeSymbol'
                Identifier: 'parent'
              EqualsToken
              Identifier: ' symbol'
      FunctionDeclaration
        Identifier: ' bindEnumDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' EnumDeclaration'
        Block
          ReturnStatement
            ConditionalExpression
              CallExpression
                Identifier: ' isEnumConst'
                Identifier: 'node'
              QuestionToken
              CallExpression
                Identifier: ' bindBlockScopedDeclaration'
                Identifier: 'node'
                PropertyAccessExpression
                  Identifier: ' SymbolFlags'
                  Identifier: 'ConstEnum'
                PropertyAccessExpression
                  Identifier: ' SymbolFlags'
                  Identifier: 'ConstEnumExcludes'
              ColonToken
              CallExpression
                Identifier: ' bindBlockScopedDeclaration'
                Identifier: 'node'
                PropertyAccessExpression
                  Identifier: ' SymbolFlags'
                  Identifier: 'RegularEnum'
                PropertyAccessExpression
                  Identifier: ' SymbolFlags'
                  Identifier: 'RegularEnumExcludes'
      FunctionDeclaration
        Identifier: ' bindVariableDeclarationOrBindingElement'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' VariableDeclaration'
            TypeReference
              Identifier: ' BindingElement'
        Block
          IfStatement
            Identifier: 'inStrictMode'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            checkStrictModeEvalOrArguments'
                  Identifier: 'node'
                  PropertyAccessExpression
                    Identifier: ' node'
                    Identifier: 'name'
          IfStatement
            PrefixUnaryExpression
              CallExpression
                Identifier: 'isBindingPattern'
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'name'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' possibleVariableDecl'
                    ConditionalExpression
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: ' node'
                          Identifier: 'kind'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'VariableDeclaration'
                      QuestionToken
                      Identifier: ' node'
                      ColonToken
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: ' node'
                          Identifier: 'parent'
                        Identifier: 'parent'
              IfStatement
                BinaryExpression
                  BinaryExpression
                    BinaryExpression
                      CallExpression
                        Identifier: '
                isInJSFile'
                        Identifier: 'node'
                      AmpersandAmpersandToken
                      CallExpression
                        Identifier: '
                isVariableDeclarationInitializedToBareOrAccessedRequire'
                        Identifier: 'possibleVariableDecl'
                    AmpersandAmpersandToken
                    PrefixUnaryExpression
                      CallExpression
                        Identifier: 'getJSDocTypeTag'
                        Identifier: 'node'
                  AmpersandAmpersandToken
                  PrefixUnaryExpression
                    ParenthesizedExpression
                      BinaryExpression
                        CallExpression
                          Identifier: 'getCombinedModifierFlags'
                          Identifier: 'node'
                        AmpersandToken
                        PropertyAccessExpression
                          Identifier: ' ModifierFlags'
                          Identifier: 'Export'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                declareSymbolAndAddToSymbolTable'
                      AsExpression
                        Identifier: 'node'
                        TypeReference
                          Identifier: ' Declaration'
                      PropertyAccessExpression
                        Identifier: ' SymbolFlags'
                        Identifier: 'Alias'
                      PropertyAccessExpression
                        Identifier: ' SymbolFlags'
                        Identifier: 'AliasExcludes'
                IfStatement
                  CallExpression
                    Identifier: 'isBlockOrCatchScoped'
                    Identifier: 'node'
                  Block
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                bindBlockScopedDeclaration'
                        Identifier: 'node'
                        PropertyAccessExpression
                          Identifier: ' SymbolFlags'
                          Identifier: 'BlockScopedVariable'
                        PropertyAccessExpression
                          Identifier: ' SymbolFlags'
                          Identifier: 'BlockScopedVariableExcludes'
                  IfStatement
                    CallExpression
                      Identifier: 'isPartOfParameterDeclaration'
                      Identifier: 'node'
                    Block
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                // It is safe to walk up parent chain to find whether the node is a destructuring parameter declaration
                // because its parent chain has already been set up, since parents are set before descending into children.
                //
                // If node is a binding element in parameter declaration, we need to use ParameterExcludes.
                // Using ParameterExcludes flag allows the compiler to report an error on duplicate identifiers in Parameter Declaration
                // For example:
                //      function foo([a,a]) {} // Duplicate Identifier error
                //      function bar(a,a) {}   // Duplicate Identifier error, parameter declaration in this case is handled in bindParameter
                //                             // which correctly set excluded symbols
                declareSymbolAndAddToSymbolTable'
                          Identifier: 'node'
                          PropertyAccessExpression
                            Identifier: ' SymbolFlags'
                            Identifier: 'FunctionScopedVariable'
                          PropertyAccessExpression
                            Identifier: ' SymbolFlags'
                            Identifier: 'ParameterExcludes'
                    Block
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                declareSymbolAndAddToSymbolTable'
                          Identifier: 'node'
                          PropertyAccessExpression
                            Identifier: ' SymbolFlags'
                            Identifier: 'FunctionScopedVariable'
                          PropertyAccessExpression
                            Identifier: ' SymbolFlags'
                            Identifier: 'FunctionScopedVariableExcludes'
      FunctionDeclaration
        Identifier: ' bindParameter'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' ParameterDeclaration'
            TypeReference
              Identifier: ' JSDocParameterTag'
        Block
          IfStatement
            BinaryExpression
              BinaryExpression
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'kind'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'JSDocParameterTag'
              AmpersandAmpersandToken
              BinaryExpression
                PropertyAccessExpression
                  Identifier: ' container'
                  Identifier: 'kind'
                ExclamationEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'JSDocSignature'
            Block
              ReturnStatement
          IfStatement
            BinaryExpression
              Identifier: 'inStrictMode'
              AmpersandAmpersandToken
              PrefixUnaryExpression
                ParenthesizedExpression
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'flags'
                    AmpersandToken
                    PropertyAccessExpression
                      Identifier: ' NodeFlags'
                      Identifier: 'Ambient'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            // It is a SyntaxError if the identifier eval or arguments appears within a FormalParameterList of a
            // strict mode FunctionLikeDeclaration or FunctionExpression(13.1)
            checkStrictModeEvalOrArguments'
                  Identifier: 'node'
                  PropertyAccessExpression
                    Identifier: ' node'
                    Identifier: 'name'
          IfStatement
            CallExpression
              Identifier: 'isBindingPattern'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'name'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindAnonymousDeclaration'
                  Identifier: 'node'
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'FunctionScopedVariable'
                  AsExpression
                    BinaryExpression
                      StringLiteral
                      PlusToken
                      CallExpression
                        PropertyAccessExpression
                          PropertyAccessExpression
                            PropertyAccessExpression
                              ParenthesizedExpression
                                AsExpression
                                  Identifier: 'node'
                                  TypeReference
                                    Identifier: ' ParameterDeclaration'
                              Identifier: 'parent'
                            Identifier: 'parameters'
                          Identifier: 'indexOf'
                        AsExpression
                          Identifier: 'node'
                          TypeReference
                            Identifier: ' ParameterDeclaration'
                    TypeReference
                      Identifier: ' __String'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            declareSymbolAndAddToSymbolTable'
                  Identifier: 'node'
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'FunctionScopedVariable'
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'ParameterExcludes'
          IfStatement
            CallExpression
              Identifier: 'isParameterPropertyDeclaration'
              Identifier: 'node'
              PropertyAccessExpression
                Identifier: ' node'
                Identifier: 'parent'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' classDeclaration'
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: ' node'
                        Identifier: 'parent'
                      Identifier: 'parent'
              ExpressionStatement
                CallExpression
                  Identifier: '
            declareSymbol'
                  NonNullExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: 'classDeclaration'
                        Identifier: 'symbol'
                      Identifier: 'members'
                  PropertyAccessExpression
                    Identifier: ' classDeclaration'
                    Identifier: 'symbol'
                  Identifier: ' node'
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'Property'
                    BarToken
                    ParenthesizedExpression
                      ConditionalExpression
                        PropertyAccessExpression
                          Identifier: 'node'
                          Identifier: 'questionToken'
                        QuestionToken
                        PropertyAccessExpression
                          Identifier: ' SymbolFlags'
                          Identifier: 'Optional'
                        ColonToken
                        PropertyAccessExpression
                          Identifier: ' SymbolFlags'
                          Identifier: 'None'
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'PropertyExcludes'
      FunctionDeclaration
        Identifier: ' bindFunctionDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' FunctionDeclaration'
        Block
          IfStatement
            BinaryExpression
              PrefixUnaryExpression
                PropertyAccessExpression
                  Identifier: 'file'
                  Identifier: 'isDeclarationFile'
              AmpersandAmpersandToken
              PrefixUnaryExpression
                ParenthesizedExpression
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'flags'
                    AmpersandToken
                    PropertyAccessExpression
                      Identifier: ' NodeFlags'
                      Identifier: 'Ambient'
            Block
              IfStatement
                CallExpression
                  Identifier: 'isAsyncFunction'
                  Identifier: 'node'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                emitFlags'
                      BarEqualsToken
                      PropertyAccessExpression
                        Identifier: ' NodeFlags'
                        Identifier: 'HasAsyncFunctions'
          ExpressionStatement
            CallExpression
              Identifier: '

        checkStrictModeFunctionName'
              Identifier: 'node'
          IfStatement
            Identifier: 'inStrictMode'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            checkStrictModeFunctionDeclaration'
                  Identifier: 'node'
              ExpressionStatement
                CallExpression
                  Identifier: '
            bindBlockScopedDeclaration'
                  Identifier: 'node'
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'Function'
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'FunctionExcludes'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            declareSymbolAndAddToSymbolTable'
                  Identifier: 'node'
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'Function'
                  PropertyAccessExpression
                    Identifier: ' SymbolFlags'
                    Identifier: 'FunctionExcludes'
      FunctionDeclaration
        Identifier: ' bindFunctionExpression'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' FunctionExpression'
            TypeReference
              Identifier: ' ArrowFunction'
        Block
          IfStatement
            BinaryExpression
              PrefixUnaryExpression
                PropertyAccessExpression
                  Identifier: 'file'
                  Identifier: 'isDeclarationFile'
              AmpersandAmpersandToken
              PrefixUnaryExpression
                ParenthesizedExpression
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'flags'
                    AmpersandToken
                    PropertyAccessExpression
                      Identifier: ' NodeFlags'
                      Identifier: 'Ambient'
            Block
              IfStatement
                CallExpression
                  Identifier: 'isAsyncFunction'
                  Identifier: 'node'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                emitFlags'
                      BarEqualsToken
                      PropertyAccessExpression
                        Identifier: ' NodeFlags'
                        Identifier: 'HasAsyncFunctions'
          IfStatement
            Identifier: 'currentFlow'
            Block
              ExpressionStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: '
            node'
                    Identifier: 'flowNode'
                  EqualsToken
                  Identifier: ' currentFlow'
          ExpressionStatement
            CallExpression
              Identifier: '
        checkStrictModeFunctionName'
              Identifier: 'node'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' bindingName'
                ConditionalExpression
                  PropertyAccessExpression
                    Identifier: ' node'
                    Identifier: 'name'
                  QuestionToken
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: ' node'
                      Identifier: 'name'
                    Identifier: 'escapedText'
                  ColonToken
                  PropertyAccessExpression
                    Identifier: ' InternalSymbolName'
                    Identifier: 'Function'
          ReturnStatement
            CallExpression
              Identifier: ' bindAnonymousDeclaration'
              Identifier: 'node'
              PropertyAccessExpression
                Identifier: ' SymbolFlags'
                Identifier: 'Function'
              Identifier: ' bindingName'
      FunctionDeclaration
        Identifier: ' bindPropertyOrMethodOrAccessor'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Declaration'
        Parameter
          Identifier: ' symbolFlags'
          TypeReference
            Identifier: ' SymbolFlags'
        Parameter
          Identifier: ' symbolExcludes'
          TypeReference
            Identifier: ' SymbolFlags'
        Block
          IfStatement
            BinaryExpression
              BinaryExpression
                PrefixUnaryExpression
                  PropertyAccessExpression
                    Identifier: 'file'
                    Identifier: 'isDeclarationFile'
                AmpersandAmpersandToken
                PrefixUnaryExpression
                  ParenthesizedExpression
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'flags'
                      AmpersandToken
                      PropertyAccessExpression
                        Identifier: ' NodeFlags'
                        Identifier: 'Ambient'
              AmpersandAmpersandToken
              CallExpression
                Identifier: ' isAsyncFunction'
                Identifier: 'node'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            emitFlags'
                  BarEqualsToken
                  PropertyAccessExpression
                    Identifier: ' NodeFlags'
                    Identifier: 'HasAsyncFunctions'
          IfStatement
            BinaryExpression
              Identifier: 'currentFlow'
              AmpersandAmpersandToken
              CallExpression
                Identifier: ' isObjectLiteralOrClassExpressionMethodOrAccessor'
                Identifier: 'node'
            Block
              ExpressionStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: '
            node'
                    Identifier: 'flowNode'
                  EqualsToken
                  Identifier: ' currentFlow'
          ReturnStatement
            ConditionalExpression
              CallExpression
                Identifier: ' hasDynamicName'
                Identifier: 'node'
              QuestionToken
              CallExpression
                Identifier: ' bindAnonymousDeclaration'
                Identifier: 'node'
                Identifier: ' symbolFlags'
                PropertyAccessExpression
                  Identifier: ' InternalSymbolName'
                  Identifier: 'Computed'
              ColonToken
              CallExpression
                Identifier: ' declareSymbolAndAddToSymbolTable'
                Identifier: 'node'
                Identifier: ' symbolFlags'
                Identifier: ' symbolExcludes'
      FunctionDeclaration
        Identifier: ' getInferTypeContainer'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        UnionType
          TypeReference
            Identifier: ' ConditionalTypeNode'
          UndefinedKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' extendsType'
                CallExpression
                  Identifier: ' findAncestor'
                  Identifier: 'node'
                  ArrowFunction
                    Parameter
                      Identifier: ' n'
                    EqualsGreaterThanToken
                    BinaryExpression
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: ' n'
                          Identifier: 'parent'
                        AmpersandAmpersandToken
                        CallExpression
                          Identifier: ' isConditionalTypeNode'
                          PropertyAccessExpression
                            Identifier: 'n'
                            Identifier: 'parent'
                      AmpersandAmpersandToken
                      BinaryExpression
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: ' n'
                            Identifier: 'parent'
                          Identifier: 'extendsType'
                        EqualsEqualsEqualsToken
                        Identifier: ' n'
          ReturnStatement
            BinaryExpression
              Identifier: ' extendsType'
              AmpersandAmpersandToken
              AsExpression
                PropertyAccessExpression
                  Identifier: ' extendsType'
                  Identifier: 'parent'
                TypeReference
                  Identifier: ' ConditionalTypeNode'
      FunctionDeclaration
        Identifier: ' bindTypeParameter'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' TypeParameterDeclaration'
        Block
          IfStatement
            CallExpression
              Identifier: 'isJSDocTemplateTag'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'parent'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' container'
                    UnionType
                      TypeReference
                        Identifier: ' HasLocals'
                      UndefinedKeyword
                    CallExpression
                      Identifier: ' getEffectiveContainerForJSDocTemplateTag'
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'parent'
              IfStatement
                Identifier: 'container'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                Debug'
                        Identifier: 'assertNode'
                      Identifier: 'container'
                      Identifier: ' canHaveLocals'
                  ExpressionStatement
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: '
                container'
                        Identifier: 'locals'
                      QuestionQuestionEqualsToken
                      CallExpression
                        Identifier: ' createSymbolTable'
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                declareSymbol'
                      PropertyAccessExpression
                        Identifier: 'container'
                        Identifier: 'locals'
                      Identifier: ' /*parent*/ undefined'
                      Identifier: ' node'
                      PropertyAccessExpression
                        Identifier: ' SymbolFlags'
                        Identifier: 'TypeParameter'
                      PropertyAccessExpression
                        Identifier: ' SymbolFlags'
                        Identifier: 'TypeParameterExcludes'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                declareSymbolAndAddToSymbolTable'
                      Identifier: 'node'
                      PropertyAccessExpression
                        Identifier: ' SymbolFlags'
                        Identifier: 'TypeParameter'
                      PropertyAccessExpression
                        Identifier: ' SymbolFlags'
                        Identifier: 'TypeParameterExcludes'
            IfStatement
              BinaryExpression
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'parent'
                  Identifier: 'kind'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'InferType'
              Block
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' container'
                      UnionType
                        TypeReference
                          Identifier: ' HasLocals'
                        UndefinedKeyword
                      CallExpression
                        Identifier: ' getInferTypeContainer'
                        PropertyAccessExpression
                          Identifier: 'node'
                          Identifier: 'parent'
                IfStatement
                  Identifier: 'container'
                  Block
                    ExpressionStatement
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                Debug'
                          Identifier: 'assertNode'
                        Identifier: 'container'
                        Identifier: ' canHaveLocals'
                    ExpressionStatement
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: '
                container'
                          Identifier: 'locals'
                        QuestionQuestionEqualsToken
                        CallExpression
                          Identifier: ' createSymbolTable'
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                declareSymbol'
                        PropertyAccessExpression
                          Identifier: 'container'
                          Identifier: 'locals'
                        Identifier: ' /*parent*/ undefined'
                        Identifier: ' node'
                        PropertyAccessExpression
                          Identifier: ' SymbolFlags'
                          Identifier: 'TypeParameter'
                        PropertyAccessExpression
                          Identifier: ' SymbolFlags'
                          Identifier: 'TypeParameterExcludes'
                  Block
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                bindAnonymousDeclaration'
                        Identifier: 'node'
                        PropertyAccessExpression
                          Identifier: ' SymbolFlags'
                          Identifier: 'TypeParameter'
                        NonNullExpression
                          CallExpression
                            Identifier: ' getDeclarationName'
                            Identifier: 'node'
              Block
                ExpressionStatement
                  CallExpression
                    Identifier: '
            declareSymbolAndAddToSymbolTable'
                    Identifier: 'node'
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'TypeParameter'
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'TypeParameterExcludes'
      FunctionDeclaration
        Identifier: ' shouldReportErrorOnModuleDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' ModuleDeclaration'
        BooleanKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' instanceState'
                CallExpression
                  Identifier: ' getModuleInstanceState'
                  Identifier: 'node'
          ReturnStatement
            BinaryExpression
              BinaryExpression
                Identifier: ' instanceState'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' ModuleInstanceState'
                  Identifier: 'Instantiated'
              BarBarToken
              ParenthesizedExpression
                BinaryExpression
                  BinaryExpression
                    Identifier: 'instanceState'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' ModuleInstanceState'
                      Identifier: 'ConstEnumOnly'
                  AmpersandAmpersandToken
                  CallExpression
                    Identifier: ' shouldPreserveConstEnums'
                    Identifier: 'options'
      FunctionDeclaration
        Identifier: ' checkUnreachable'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        BooleanKeyword
        Block
          IfStatement
            PrefixUnaryExpression
              ParenthesizedExpression
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: 'currentFlow'
                    Identifier: 'flags'
                  AmpersandToken
                  PropertyAccessExpression
                    Identifier: ' FlowFlags'
                    Identifier: 'Unreachable'
            Block
              ReturnStatement
                FalseKeyword
          IfStatement
            BinaryExpression
              Identifier: 'currentFlow'
              EqualsEqualsEqualsToken
              Identifier: ' unreachableFlow'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' reportError'
                    BinaryExpression
                      BinaryExpression
                        BinaryExpression
                          ParenthesizedExpression
                            BinaryExpression
                              CallExpression
                                Identifier: 'isStatementButNotDeclaration'
                                Identifier: 'node'
                              AmpersandAmpersandToken
                              BinaryExpression
                                PropertyAccessExpression
                                  Identifier: ' node'
                                  Identifier: 'kind'
                                ExclamationEqualsEqualsToken
                                PropertyAccessExpression
                                  Identifier: ' SyntaxKind'
                                  Identifier: 'EmptyStatement'
                          BarBarToken
                          BinaryExpression
                            PropertyAccessExpression
                              Identifier: '
                // report error on class declarations
                node'
                              Identifier: 'kind'
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' SyntaxKind'
                              Identifier: 'ClassDeclaration'
                        BarBarToken
                        CallExpression
                          Identifier: '
                // report errors on enums with preserved emit
                isEnumDeclarationWithPreservedEmit'
                          Identifier: 'node'
                          Identifier: ' options'
                      BarBarToken
                      ParenthesizedExpression
                        BinaryExpression
                          BinaryExpression
                            PropertyAccessExpression
                              Identifier: 'node'
                              Identifier: 'kind'
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' SyntaxKind'
                              Identifier: 'ModuleDeclaration'
                          AmpersandAmpersandToken
                          CallExpression
                            Identifier: ' shouldReportErrorOnModuleDeclaration'
                            AsExpression
                              Identifier: 'node'
                              TypeReference
                                Identifier: ' ModuleDeclaration'
              IfStatement
                Identifier: 'reportError'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                currentFlow'
                      EqualsToken
                      Identifier: ' reportedUnreachableFlow'
                  IfStatement
                    PrefixUnaryExpression
                      PropertyAccessExpression
                        Identifier: 'options'
                        Identifier: 'allowUnreachableCode'
                    Block
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' isError'
                            BinaryExpression
                              BinaryExpression
                                CallExpression
                                  Identifier: ' unreachableCodeIsError'
                                  Identifier: 'options'
                                AmpersandAmpersandToken
                                PrefixUnaryExpression
                                  ParenthesizedExpression
                                    BinaryExpression
                                      PropertyAccessExpression
                                        Identifier: 'node'
                                        Identifier: 'flags'
                                      AmpersandToken
                                      PropertyAccessExpression
                                        Identifier: ' NodeFlags'
                                        Identifier: 'Ambient'
                              AmpersandAmpersandToken
                              ParenthesizedExpression
                                BinaryExpression
                                  BinaryExpression
                                    PrefixUnaryExpression
                                      CallExpression
                                        Identifier: 'isVariableStatement'
                                        Identifier: 'node'
                                    BarBarToken
                                    PrefixUnaryExpression
                                      PrefixUnaryExpression
                                        ParenthesizedExpression
                                          BinaryExpression
                                            CallExpression
                                              Identifier: 'getCombinedNodeFlags'
                                              PropertyAccessExpression
                                                Identifier: 'node'
                                                Identifier: 'declarationList'
                                            AmpersandToken
                                            PropertyAccessExpression
                                              Identifier: ' NodeFlags'
                                              Identifier: 'BlockScoped'
                                  BarBarToken
                                  CallExpression
                                    PropertyAccessExpression
                                      PropertyAccessExpression
                                        PropertyAccessExpression
                                          Identifier: '
                            node'
                                          Identifier: 'declarationList'
                                        Identifier: 'declarations'
                                      Identifier: 'some'
                                    ArrowFunction
                                      Parameter
                                        Identifier: 'd'
                                      EqualsGreaterThanToken
                                      PrefixUnaryExpression
                                        PrefixUnaryExpression
                                          PropertyAccessExpression
                                            Identifier: 'd'
                                            Identifier: 'initializer'
                      ExpressionStatement
                        CallExpression
                          Identifier: '

                    eachUnreachableRange'
                          Identifier: 'node'
                          Identifier: ' options'
                          ArrowFunction
                            Parameter
                              Identifier: 'start'
                            Parameter
                              Identifier: ' end'
                            EqualsGreaterThanToken
                            CallExpression
                              Identifier: ' errorOrSuggestionOnRange'
                              Identifier: 'isError'
                              Identifier: ' start'
                              Identifier: ' end'
                              PropertyAccessExpression
                                Identifier: ' Diagnostics'
                                Identifier: 'Unreachable_code_detected'
          ReturnStatement
            TrueKeyword
  FunctionDeclaration
    Identifier: ' isEnumDeclarationWithPreservedEmit'
    Parameter
      Identifier: 'node'
      TypeReference
        Identifier: ' Node'
    Parameter
      Identifier: ' options'
      TypeReference
        Identifier: ' CompilerOptions'
    BooleanKeyword
    Block
      ReturnStatement
        BinaryExpression
          BinaryExpression
            PropertyAccessExpression
              Identifier: ' node'
              Identifier: 'kind'
            EqualsEqualsEqualsToken
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'EnumDeclaration'
          AmpersandAmpersandToken
          ParenthesizedExpression
            BinaryExpression
              PrefixUnaryExpression
                CallExpression
                  Identifier: 'isEnumConst'
                  AsExpression
                    Identifier: 'node'
                    TypeReference
                      Identifier: ' EnumDeclaration'
              BarBarToken
              CallExpression
                Identifier: ' shouldPreserveConstEnums'
                Identifier: 'options'
  FunctionDeclaration
    Identifier: ' eachUnreachableRange'
    Parameter
      Identifier: 'node'
      TypeReference
        Identifier: ' Node'
    Parameter
      Identifier: ' options'
      TypeReference
        Identifier: ' CompilerOptions'
    Parameter
      Identifier: ' cb'
      FunctionType
        Parameter
          Identifier: 'start'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' last'
          TypeReference
            Identifier: ' Node'
        VoidKeyword
    VoidKeyword
    Block
      IfStatement
        BinaryExpression
          BinaryExpression
            CallExpression
              Identifier: 'isStatement'
              Identifier: 'node'
            AmpersandAmpersandToken
            CallExpression
              Identifier: ' isExecutableStatement'
              Identifier: 'node'
          AmpersandAmpersandToken
          CallExpression
            Identifier: ' isBlock'
            PropertyAccessExpression
              Identifier: 'node'
              Identifier: 'parent'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                ObjectBindingPattern
                  BindingElement
                    Identifier: ' statements'
                PropertyAccessExpression
                  Identifier: ' node'
                  Identifier: 'parent'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' slice'
                CallExpression
                  Identifier: ' sliceAfter'
                  Identifier: 'statements'
                  Identifier: ' node'
          ExpressionStatement
            CallExpression
              Identifier: '
        getRangesWhere'
              Identifier: 'slice'
              Identifier: ' isExecutableStatement'
              ArrowFunction
                Parameter
                  Identifier: 'start'
                Parameter
                  Identifier: ' afterEnd'
                EqualsGreaterThanToken
                CallExpression
                  Identifier: ' cb'
                  ElementAccessExpression
                    Identifier: 'slice'
                    Identifier: 'start'
                  ElementAccessExpression
                    Identifier: ' slice'
                    BinaryExpression
                      Identifier: 'afterEnd'
                      MinusToken
                      NumericLiteral
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        cb'
              Identifier: 'node'
              Identifier: ' node'
      FunctionDeclaration
        Identifier: ' isExecutableStatement'
        Parameter
          Identifier: 's'
          TypeReference
            Identifier: ' Statement'
        BooleanKeyword
        Block
          ReturnStatement
            BinaryExpression
              BinaryExpression
                PrefixUnaryExpression
                  CallExpression
                    Identifier: 'isFunctionDeclaration'
                    Identifier: 's'
                AmpersandAmpersandToken
                PrefixUnaryExpression
                  CallExpression
                    Identifier: 'isPurelyTypeDeclaration'
                    Identifier: 's'
              AmpersandAmpersandToken
              PrefixUnaryExpression
                ParenthesizedExpression
                  BinaryExpression
                    BinaryExpression
                      CallExpression
                        Identifier: 'isVariableStatement'
                        Identifier: 's'
                      AmpersandAmpersandToken
                      PrefixUnaryExpression
                        ParenthesizedExpression
                          BinaryExpression
                            CallExpression
                              Identifier: 'getCombinedNodeFlags'
                              Identifier: 's'
                            AmpersandToken
                            ParenthesizedExpression
                              PropertyAccessExpression
                                Identifier: 'NodeFlags'
                                Identifier: 'BlockScoped'
                    AmpersandAmpersandToken
                    CallExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: ' s'
                            Identifier: 'declarationList'
                          Identifier: 'declarations'
                        Identifier: 'some'
                      ArrowFunction
                        Parameter
                          Identifier: 'd'
                        EqualsGreaterThanToken
                        PrefixUnaryExpression
                          PropertyAccessExpression
                            Identifier: 'd'
                            Identifier: 'initializer'
      FunctionDeclaration
        Identifier: ' isPurelyTypeDeclaration'
        Parameter
          Identifier: 's'
          TypeReference
            Identifier: ' Statement'
        BooleanKeyword
        Block
          SwitchStatement
            PropertyAccessExpression
              Identifier: 's'
              Identifier: 'kind'
            CaseBlock
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'InterfaceDeclaration'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'TypeAliasDeclaration'
                ReturnStatement
                  TrueKeyword
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ModuleDeclaration'
                ReturnStatement
                  BinaryExpression
                    CallExpression
                      Identifier: ' getModuleInstanceState'
                      AsExpression
                        Identifier: 's'
                        TypeReference
                          Identifier: ' ModuleDeclaration'
                    ExclamationEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' ModuleInstanceState'
                      Identifier: 'Instantiated'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'EnumDeclaration'
                ReturnStatement
                  PrefixUnaryExpression
                    CallExpression
                      Identifier: 'isEnumDeclarationWithPreservedEmit'
                      Identifier: 's'
                      Identifier: ' options'
              DefaultClause
                ReturnStatement
                  FalseKeyword
  FunctionDeclaration
    ExportKeyword
    Identifier: ' isExportsOrModuleExportsOrAlias'
    Parameter
      Identifier: 'sourceFile'
      TypeReference
        Identifier: ' SourceFile'
    Parameter
      Identifier: ' node'
      TypeReference
        Identifier: ' Expression'
    BooleanKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' i'
            NumericLiteral
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' q'
            CallExpression
              Identifier: ' createQueue'
              TypeReference
                Identifier: 'Expression'
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            Identifier: '
    q'
            Identifier: 'enqueue'
          Identifier: 'node'
      WhileStatement
        BinaryExpression
          PrefixUnaryExpression
            CallExpression
              PropertyAccessExpression
                Identifier: 'q'
                Identifier: 'isEmpty'
          AmpersandAmpersandToken
          BinaryExpression
            Identifier: ' i'
            LessThanToken
            NumericLiteral
        Block
          ExpressionStatement
            PostfixUnaryExpression
              Identifier: '
        i'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        node'
              EqualsToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' q'
                  Identifier: 'dequeue'
          IfStatement
            BinaryExpression
              CallExpression
                Identifier: 'isExportsIdentifier'
                Identifier: 'node'
              BarBarToken
              CallExpression
                Identifier: ' isModuleExportsAccessExpression'
                Identifier: 'node'
            Block
              ReturnStatement
                TrueKeyword
            IfStatement
              CallExpression
                Identifier: 'isIdentifier'
                Identifier: 'node'
              Block
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' symbol'
                      CallExpression
                        Identifier: ' lookupSymbolForName'
                        Identifier: 'sourceFile'
                        PropertyAccessExpression
                          Identifier: ' node'
                          Identifier: 'escapedText'
                IfStatement
                  BinaryExpression
                    BinaryExpression
                      BinaryExpression
                        PrefixUnaryExpression
                          PrefixUnaryExpression
                            Identifier: 'symbol'
                        AmpersandAmpersandToken
                        PrefixUnaryExpression
                          PrefixUnaryExpression
                            PropertyAccessExpression
                              Identifier: 'symbol'
                              Identifier: 'valueDeclaration'
                      AmpersandAmpersandToken
                      CallExpression
                        Identifier: ' isVariableDeclaration'
                        PropertyAccessExpression
                          Identifier: 'symbol'
                          Identifier: 'valueDeclaration'
                    AmpersandAmpersandToken
                    PrefixUnaryExpression
                      PrefixUnaryExpression
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: 'symbol'
                            Identifier: 'valueDeclaration'
                          Identifier: 'initializer'
                  Block
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' init'
                          PropertyAccessExpression
                            PropertyAccessExpression
                              Identifier: ' symbol'
                              Identifier: 'valueDeclaration'
                            Identifier: 'initializer'
                    ExpressionStatement
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                q'
                          Identifier: 'enqueue'
                        Identifier: 'init'
                    IfStatement
                      CallExpression
                        Identifier: 'isAssignmentExpression'
                        Identifier: 'init'
                        TrueKeyword
                      Block
                        ExpressionStatement
                          CallExpression
                            PropertyAccessExpression
                              Identifier: '
                    q'
                              Identifier: 'enqueue'
                            PropertyAccessExpression
                              Identifier: 'init'
                              Identifier: 'left'
                        ExpressionStatement
                          CallExpression
                            PropertyAccessExpression
                              Identifier: '
                    q'
                              Identifier: 'enqueue'
                            PropertyAccessExpression
                              Identifier: 'init'
                              Identifier: 'right'
      ReturnStatement
        FalseKeyword
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getContainerFlags'
    Parameter
      Identifier: 'node'
      TypeReference
        Identifier: ' Node'
    TypeReference
      Identifier: ' ContainerFlags'
    Block
      SwitchStatement
        PropertyAccessExpression
          Identifier: 'node'
          Identifier: 'kind'
        CaseBlock
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ClassExpression'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ClassDeclaration'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'EnumDeclaration'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ObjectLiteralExpression'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'TypeLiteral'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocTypeLiteral'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'JsxAttributes'
            ReturnStatement
              PropertyAccessExpression
                Identifier: ' ContainerFlags'
                Identifier: 'IsContainer'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'InterfaceDeclaration'
            ReturnStatement
              BinaryExpression
                PropertyAccessExpression
                  Identifier: ' ContainerFlags'
                  Identifier: 'IsContainer'
                BarToken
                PropertyAccessExpression
                  Identifier: ' ContainerFlags'
                  Identifier: 'IsInterface'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ModuleDeclaration'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'TypeAliasDeclaration'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'MappedType'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'IndexSignature'
            ReturnStatement
              BinaryExpression
                PropertyAccessExpression
                  Identifier: ' ContainerFlags'
                  Identifier: 'IsContainer'
                BarToken
                PropertyAccessExpression
                  Identifier: ' ContainerFlags'
                  Identifier: 'HasLocals'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'SourceFile'
            ReturnStatement
              BinaryExpression
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: ' ContainerFlags'
                    Identifier: 'IsContainer'
                  BarToken
                  PropertyAccessExpression
                    Identifier: ' ContainerFlags'
                    Identifier: 'IsControlFlowContainer'
                BarToken
                PropertyAccessExpression
                  Identifier: ' ContainerFlags'
                  Identifier: 'HasLocals'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'GetAccessor'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'SetAccessor'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'MethodDeclaration'
            IfStatement
              CallExpression
                Identifier: 'isObjectLiteralOrClassExpressionMethodOrAccessor'
                Identifier: 'node'
              Block
                ReturnStatement
                  BinaryExpression
                    BinaryExpression
                      BinaryExpression
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: ' ContainerFlags'
                            Identifier: 'IsContainer'
                          BarToken
                          PropertyAccessExpression
                            Identifier: ' ContainerFlags'
                            Identifier: 'IsControlFlowContainer'
                        BarToken
                        PropertyAccessExpression
                          Identifier: ' ContainerFlags'
                          Identifier: 'HasLocals'
                      BarToken
                      PropertyAccessExpression
                        Identifier: ' ContainerFlags'
                        Identifier: 'IsFunctionLike'
                    BarToken
                    PropertyAccessExpression
                      Identifier: ' ContainerFlags'
                      Identifier: 'IsObjectLiteralOrClassExpressionMethodOrAccessor'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'Constructor'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'FunctionDeclaration'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'MethodSignature'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'CallSignature'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocSignature'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocFunctionType'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'FunctionType'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ConstructSignature'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ConstructorType'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ClassStaticBlockDeclaration'
            ReturnStatement
              BinaryExpression
                BinaryExpression
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: ' ContainerFlags'
                      Identifier: 'IsContainer'
                    BarToken
                    PropertyAccessExpression
                      Identifier: ' ContainerFlags'
                      Identifier: 'IsControlFlowContainer'
                  BarToken
                  PropertyAccessExpression
                    Identifier: ' ContainerFlags'
                    Identifier: 'HasLocals'
                BarToken
                PropertyAccessExpression
                  Identifier: ' ContainerFlags'
                  Identifier: 'IsFunctionLike'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'FunctionExpression'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ArrowFunction'
            ReturnStatement
              BinaryExpression
                BinaryExpression
                  BinaryExpression
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: ' ContainerFlags'
                        Identifier: 'IsContainer'
                      BarToken
                      PropertyAccessExpression
                        Identifier: ' ContainerFlags'
                        Identifier: 'IsControlFlowContainer'
                    BarToken
                    PropertyAccessExpression
                      Identifier: ' ContainerFlags'
                      Identifier: 'HasLocals'
                  BarToken
                  PropertyAccessExpression
                    Identifier: ' ContainerFlags'
                    Identifier: 'IsFunctionLike'
                BarToken
                PropertyAccessExpression
                  Identifier: ' ContainerFlags'
                  Identifier: 'IsFunctionExpression'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ModuleBlock'
            ReturnStatement
              PropertyAccessExpression
                Identifier: ' ContainerFlags'
                Identifier: 'IsControlFlowContainer'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'PropertyDeclaration'
            ReturnStatement
              ConditionalExpression
                PropertyAccessExpression
                  ParenthesizedExpression
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' PropertyDeclaration'
                  Identifier: 'initializer'
                QuestionToken
                PropertyAccessExpression
                  Identifier: ' ContainerFlags'
                  Identifier: 'IsControlFlowContainer'
                ColonToken
                NumericLiteral
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'CatchClause'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ForStatement'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ForInStatement'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ForOfStatement'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'CaseBlock'
            ReturnStatement
              BinaryExpression
                PropertyAccessExpression
                  Identifier: ' ContainerFlags'
                  Identifier: 'IsBlockScopedContainer'
                BarToken
                PropertyAccessExpression
                  Identifier: ' ContainerFlags'
                  Identifier: 'HasLocals'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'Block'
            ReturnStatement
              ConditionalExpression
                BinaryExpression
                  CallExpression
                    Identifier: ' isFunctionLike'
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'parent'
                  BarBarToken
                  CallExpression
                    Identifier: ' isClassStaticBlockDeclaration'
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'parent'
                QuestionToken
                PropertyAccessExpression
                  Identifier: ' ContainerFlags'
                  Identifier: 'None'
                ColonToken
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: ' ContainerFlags'
                    Identifier: 'IsBlockScopedContainer'
                  BarToken
                  PropertyAccessExpression
                    Identifier: ' ContainerFlags'
                    Identifier: 'HasLocals'
      ReturnStatement
        PropertyAccessExpression
          Identifier: ' ContainerFlags'
          Identifier: 'None'
  FunctionDeclaration
    Identifier: ' lookupSymbolForName'
    Parameter
      Identifier: 'container'
      TypeReference
        Identifier: ' Node'
    Parameter
      Identifier: ' name'
      TypeReference
        Identifier: ' __String'
    UnionType
      TypeReference
        Identifier: ' Symbol'
      UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' local'
            CallExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  CallExpression
                    Identifier: ' tryCast'
                    Identifier: 'container'
                    Identifier: ' canHaveLocals'
                  QuestionDotToken
                  Identifier: 'locals'
                QuestionDotToken
                Identifier: 'get'
              Identifier: 'name'
      IfStatement
        Identifier: 'local'
        Block
          ReturnStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: ' local'
                Identifier: 'exportSymbol'
              QuestionQuestionToken
              Identifier: ' local'
      IfStatement
        BinaryExpression
          BinaryExpression
            CallExpression
              Identifier: 'isSourceFile'
              Identifier: 'container'
            AmpersandAmpersandToken
            PropertyAccessExpression
              Identifier: ' container'
              Identifier: 'jsGlobalAugmentations'
          AmpersandAmpersandToken
          CallExpression
            PropertyAccessExpression
              PropertyAccessExpression
                Identifier: ' container'
                Identifier: 'jsGlobalAugmentations'
              Identifier: 'has'
            Identifier: 'name'
        Block
          ReturnStatement
            CallExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: ' container'
                  Identifier: 'jsGlobalAugmentations'
                Identifier: 'get'
              Identifier: 'name'
      IfStatement
        CallExpression
          Identifier: 'canHaveSymbol'
          Identifier: 'container'
        Block
          ReturnStatement
            CallExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: ' container'
                    Identifier: 'symbol'
                  QuestionDotToken
                  Identifier: 'exports'
                QuestionDotToken
                Identifier: 'get'
              Identifier: 'name'
