SourceFile
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' ParserServices'
        ImportSpecifier
          Identifier: ' TSESTree'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' ParserOptions'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' Scope'
    StringLiteral
  ModuleDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' Parser'
    ModuleBlock
      InterfaceDeclaration
        Identifier: ' ParserMeta'
        PropertySignature
          Identifier: '
        /**
         * The unique name of the parser.
         */
        name'
          StringKeyword
        PropertySignature
          Identifier: '
        /**
         * The a string identifying the version of the parser.
         */
        version'
          QuestionToken
          StringKeyword
      TypeAliasDeclaration
        Identifier: ' LooseParserModule'
        UnionType
          TypeLiteral
            PropertySignature
              Identifier: '
        /**
         * Information about the parser to uniquely identify it when serializing.
         */
        meta'
              QuestionToken
              MappedType
                TypeParameter
                  Identifier: 'K'
                  TypeOperator
                    TypeReference
                      Identifier: ' ParserMeta'
                QuestionToken
                UnionType
                  IndexedAccessType
                    TypeReference
                      Identifier: ' ParserMeta'
                    TypeReference
                      Identifier: 'K'
                  UndefinedKeyword
            MethodSignature
              Identifier: '
        /**
         * Parses the given text into an AST
         */
        parseForESLint'
              Parameter
                Identifier: 'text'
                StringKeyword
              Parameter
                Identifier: ' options'
                QuestionToken
                UnknownKeyword
              MappedType
                TypeParameter
                  Identifier: 'k'
                  TypeOperator
                    TypeReference
                      Identifier: ' ParseResult'
                UnknownKeyword
          TypeLiteral
            PropertySignature
              Identifier: '
        /**
         * Information about the parser to uniquely identify it when serializing.
         */
        meta'
              QuestionToken
              MappedType
                TypeParameter
                  Identifier: 'K'
                  TypeOperator
                    TypeReference
                      Identifier: ' ParserMeta'
                QuestionToken
                UnionType
                  IndexedAccessType
                    TypeReference
                      Identifier: ' ParserMeta'
                    TypeReference
                      Identifier: 'K'
                  UndefinedKeyword
            MethodSignature
              Identifier: '
        /**
         * Parses the given text into an ESTree AST
         */
        parse'
              Parameter
                Identifier: 'text'
                StringKeyword
              Parameter
                Identifier: ' options'
                QuestionToken
                UnknownKeyword
              UnknownKeyword
      TypeAliasDeclaration
        Identifier: ' ParserModule'
        UnionType
          TypeLiteral
            PropertySignature
              Identifier: '
        /**
         * Information about the parser to uniquely identify it when serializing.
         */
        meta'
              QuestionToken
              TypeReference
                Identifier: ' ParserMeta'
            MethodSignature
              Identifier: '
        /**
         * Parses the given text into an AST
         */
        parseForESLint'
              Parameter
                Identifier: 'text'
                StringKeyword
              Parameter
                Identifier: ' options'
                QuestionToken
                TypeReference
                  Identifier: ' ParserOptions'
              TypeReference
                Identifier: ' ParseResult'
          TypeLiteral
            PropertySignature
              Identifier: '
        /**
         * Information about the parser to uniquely identify it when serializing.
         */
        meta'
              QuestionToken
              TypeReference
                Identifier: ' ParserMeta'
            MethodSignature
              Identifier: '
        /**
         * Parses the given text into an ESTree AST
         */
        parse'
              Parameter
                Identifier: 'text'
                StringKeyword
              Parameter
                Identifier: ' options'
                QuestionToken
                TypeReference
                  Identifier: ' ParserOptions'
              TypeReference
                QualifiedName
                  Identifier: ' TSESTree'
                  Identifier: 'Program'
      InterfaceDeclaration
        Identifier: ' ParseResult'
        PropertySignature
          Identifier: '
        /**
         * The ESTree AST
         */
        ast'
          TypeReference
            QualifiedName
              Identifier: ' TSESTree'
              Identifier: 'Program'
        PropertySignature
          Identifier: '
        /**
         * A `ScopeManager` object.
         * Custom parsers can use customized scope analysis for experimental/enhancement syntaxes.
         * The default is the `ScopeManager` object which is created by `eslint-scope`.
         */
        scopeManager'
          QuestionToken
          TypeReference
            QualifiedName
              Identifier: ' Scope'
              Identifier: 'ScopeManager'
        PropertySignature
          Identifier: '
        /**
         * Any parser-dependent services (such as type checkers for nodes).
         * The value of the services property is available to rules as `context.sourceCode.parserServices`.
         * The default is an empty object.
         */
        services'
          QuestionToken
          TypeReference
            Identifier: ' ParserServices'
        PropertySignature
          Identifier: '
        /**
         * An object to customize AST traversal.
         * The keys of the object are the type of AST nodes.
         * Each value is an array of the property names which should be traversed.
         * The default is `KEYS` of `eslint-visitor-keys`.
         */
        visitorKeys'
          QuestionToken
          TypeReference
            Identifier: ' VisitorKeys'
      InterfaceDeclaration
        Identifier: ' VisitorKeys'
        IndexSignature
          Parameter
            Identifier: 'nodeType'
            StringKeyword
          TypeOperator
            ArrayType
              StringKeyword
