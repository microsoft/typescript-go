SourceFile
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: '
    append'
        ImportSpecifier
          Identifier: '
    arrayIsEqualTo'
        ImportSpecifier
          Identifier: '
    binarySearch'
        ImportSpecifier
          Identifier: '
    CharacterCodes'
        ImportSpecifier
          Identifier: '
    CommentDirective'
        ImportSpecifier
          Identifier: '
    CommentDirectiveType'
        ImportSpecifier
          Identifier: '
    CommentKind'
        ImportSpecifier
          Identifier: '
    CommentRange'
        ImportSpecifier
          Identifier: '
    compareValues'
        ImportSpecifier
          Identifier: '
    Debug'
        ImportSpecifier
          Identifier: '
    DiagnosticMessage'
        ImportSpecifier
          Identifier: '
    Diagnostics'
        ImportSpecifier
          Identifier: '
    forEach'
        ImportSpecifier
          Identifier: '
    getNameOfScriptTarget'
        ImportSpecifier
          Identifier: '
    getSpellingSuggestion'
        ImportSpecifier
          Identifier: '
    identity'
        ImportSpecifier
          Identifier: '
    JSDocParsingMode'
        ImportSpecifier
          Identifier: '
    JSDocSyntaxKind'
        ImportSpecifier
          Identifier: '
    JsxTokenSyntaxKind'
        ImportSpecifier
          Identifier: '
    KeywordSyntaxKind'
        ImportSpecifier
          Identifier: '
    LanguageFeatureMinimumTarget'
        ImportSpecifier
          Identifier: '
    LanguageVariant'
        ImportSpecifier
          Identifier: '
    LanugageFeatures'
        ImportSpecifier
          Identifier: '
    LineAndCharacter'
        ImportSpecifier
          Identifier: '
    MapLike'
        ImportSpecifier
          Identifier: '
    parsePseudoBigInt'
        ImportSpecifier
          Identifier: '
    positionIsSynthesized'
        ImportSpecifier
          Identifier: '
    PunctuationOrKeywordSyntaxKind'
        ImportSpecifier
          Identifier: '
    RegularExpressionFlags'
        ImportSpecifier
          Identifier: '
    ScriptKind'
        ImportSpecifier
          Identifier: '
    ScriptTarget'
        ImportSpecifier
          Identifier: '
    SourceFileLike'
        ImportSpecifier
          Identifier: '
    SyntaxKind'
        ImportSpecifier
          Identifier: '
    TextRange'
        ImportSpecifier
          Identifier: '
    TokenFlags'
    StringLiteral
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' ErrorCallback'
    FunctionType
      Parameter
        Identifier: 'message'
        TypeReference
          Identifier: ' DiagnosticMessage'
      Parameter
        Identifier: ' length'
        NumberKeyword
      Parameter
        Identifier: ' arg0'
        QuestionToken
        AnyKeyword
      VoidKeyword
  FunctionDeclaration
    ExportKeyword
    Identifier: ' tokenIsIdentifierOrKeyword'
    Parameter
      Identifier: 'token'
      TypeReference
        Identifier: ' SyntaxKind'
    BooleanKeyword
    Block
      ReturnStatement
        BinaryExpression
          Identifier: ' token'
          GreaterThanEqualsToken
          PropertyAccessExpression
            Identifier: ' SyntaxKind'
            Identifier: 'Identifier'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' tokenIsIdentifierOrKeywordOrGreaterThan'
    Parameter
      Identifier: 'token'
      TypeReference
        Identifier: ' SyntaxKind'
    BooleanKeyword
    Block
      ReturnStatement
        BinaryExpression
          BinaryExpression
            Identifier: ' token'
            EqualsEqualsEqualsToken
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'GreaterThanToken'
          BarBarToken
          CallExpression
            Identifier: ' tokenIsIdentifierOrKeyword'
            Identifier: 'token'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Scanner'
    MethodSignature
      Identifier: '
    /** @deprecated use {@link getTokenFullStart} */
    getStartPos'
      NumberKeyword
    MethodSignature
      Identifier: '
    getToken'
      TypeReference
        Identifier: ' SyntaxKind'
    MethodSignature
      Identifier: '
    getTokenFullStart'
      NumberKeyword
    MethodSignature
      Identifier: '
    getTokenStart'
      NumberKeyword
    MethodSignature
      Identifier: '
    getTokenEnd'
      NumberKeyword
    MethodSignature
      Identifier: '
    /** @deprecated use {@link getTokenEnd} */
    getTextPos'
      NumberKeyword
    MethodSignature
      Identifier: '
    /** @deprecated use {@link getTokenStart} */
    getTokenPos'
      NumberKeyword
    MethodSignature
      Identifier: '
    getTokenText'
      StringKeyword
    MethodSignature
      Identifier: '
    getTokenValue'
      StringKeyword
    MethodSignature
      Identifier: '
    hasUnicodeEscape'
      BooleanKeyword
    MethodSignature
      Identifier: '
    hasExtendedUnicodeEscape'
      BooleanKeyword
    MethodSignature
      Identifier: '
    hasPrecedingLineBreak'
      BooleanKeyword
    MethodSignature
      Identifier: '
    /** @internal */
    hasPrecedingJSDocComment'
      BooleanKeyword
    MethodSignature
      Identifier: '
    /** @internal */
    hasPrecedingJSDocLeadingAsterisks'
      BooleanKeyword
    MethodSignature
      Identifier: '
    isIdentifier'
      BooleanKeyword
    MethodSignature
      Identifier: '
    isReservedWord'
      BooleanKeyword
    MethodSignature
      Identifier: '
    isUnterminated'
      BooleanKeyword
    MethodSignature
      Identifier: '
    /** @internal */
    getNumericLiteralFlags'
      TypeReference
        Identifier: ' TokenFlags'
    MethodSignature
      Identifier: '
    /** @internal */
    getCommentDirectives'
      UnionType
        ArrayType
          TypeReference
            Identifier: ' CommentDirective'
        UndefinedKeyword
    MethodSignature
      Identifier: '
    /** @internal */
    getTokenFlags'
      TypeReference
        Identifier: ' TokenFlags'
    MethodSignature
      Identifier: '
    reScanGreaterToken'
      TypeReference
        Identifier: ' SyntaxKind'
    MethodSignature
      Identifier: '
    reScanSlashToken'
      TypeReference
        Identifier: ' SyntaxKind'
    MethodSignature
      Identifier: '
    /** @internal */
    reScanSlashToken'
      Parameter
        Identifier: 'reportErrors'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' SyntaxKind'
    MethodSignature
      Identifier: ' // eslint-disable-line @typescript-eslint/unified-signatures
    reScanAsteriskEqualsToken'
      TypeReference
        Identifier: ' SyntaxKind'
    MethodSignature
      Identifier: '
    reScanTemplateToken'
      Parameter
        Identifier: 'isTaggedTemplate'
        BooleanKeyword
      TypeReference
        Identifier: ' SyntaxKind'
    MethodSignature
      Identifier: '
    /** @deprecated use {@link reScanTemplateToken}(false) */
    reScanTemplateHeadOrNoSubstitutionTemplate'
      TypeReference
        Identifier: ' SyntaxKind'
    MethodSignature
      Identifier: '
    scanJsxIdentifier'
      TypeReference
        Identifier: ' SyntaxKind'
    MethodSignature
      Identifier: '
    scanJsxAttributeValue'
      TypeReference
        Identifier: ' SyntaxKind'
    MethodSignature
      Identifier: '
    reScanJsxAttributeValue'
      TypeReference
        Identifier: ' SyntaxKind'
    MethodSignature
      Identifier: '
    reScanJsxToken'
      Parameter
        Identifier: 'allowMultilineJsxText'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' JsxTokenSyntaxKind'
    MethodSignature
      Identifier: '
    reScanLessThanToken'
      TypeReference
        Identifier: ' SyntaxKind'
    MethodSignature
      Identifier: '
    reScanHashToken'
      TypeReference
        Identifier: ' SyntaxKind'
    MethodSignature
      Identifier: '
    reScanQuestionToken'
      TypeReference
        Identifier: ' SyntaxKind'
    MethodSignature
      Identifier: '
    reScanInvalidIdentifier'
      TypeReference
        Identifier: ' SyntaxKind'
    MethodSignature
      Identifier: '
    scanJsxToken'
      TypeReference
        Identifier: ' JsxTokenSyntaxKind'
    MethodSignature
      Identifier: '
    scanJsDocToken'
      TypeReference
        Identifier: ' JSDocSyntaxKind'
    MethodSignature
      Identifier: '
    /** @internal */
    scanJSDocCommentTextToken'
      Parameter
        Identifier: 'inBackticks'
        BooleanKeyword
      UnionType
        TypeReference
          Identifier: ' JSDocSyntaxKind'
        TypeReference
          QualifiedName
            Identifier: ' SyntaxKind'
            Identifier: 'JSDocCommentTextToken'
    MethodSignature
      Identifier: '
    scan'
      TypeReference
        Identifier: ' SyntaxKind'
    MethodSignature
      Identifier: '

    getText'
      StringKeyword
    MethodSignature
      Identifier: '
    /** @internal */
    clearCommentDirectives'
      VoidKeyword
    MethodSignature
      Identifier: '
    // Sets the text for the scanner to scan.  An optional subrange starting point and length
    // can be provided to have the scanner only scan a portion of the text.
    setText'
      Parameter
        Identifier: 'text'
        UnionType
          StringKeyword
          UndefinedKeyword
      Parameter
        Identifier: ' start'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' length'
        QuestionToken
        NumberKeyword
      VoidKeyword
    MethodSignature
      Identifier: '
    setOnError'
      Parameter
        Identifier: 'onError'
        UnionType
          TypeReference
            Identifier: ' ErrorCallback'
          UndefinedKeyword
      VoidKeyword
    MethodSignature
      Identifier: '
    setScriptTarget'
      Parameter
        Identifier: 'scriptTarget'
        TypeReference
          Identifier: ' ScriptTarget'
      VoidKeyword
    MethodSignature
      Identifier: '
    setLanguageVariant'
      Parameter
        Identifier: 'variant'
        TypeReference
          Identifier: ' LanguageVariant'
      VoidKeyword
    MethodSignature
      Identifier: '
    setScriptKind'
      Parameter
        Identifier: 'scriptKind'
        TypeReference
          Identifier: ' ScriptKind'
      VoidKeyword
    MethodSignature
      Identifier: '
    setJSDocParsingMode'
      Parameter
        Identifier: 'kind'
        TypeReference
          Identifier: ' JSDocParsingMode'
      VoidKeyword
    MethodSignature
      Identifier: '
    /** @deprecated use {@link resetTokenState} */
    setTextPos'
      Parameter
        Identifier: 'textPos'
        NumberKeyword
      VoidKeyword
    MethodSignature
      Identifier: '
    resetTokenState'
      Parameter
        Identifier: 'pos'
        NumberKeyword
      VoidKeyword
    MethodSignature
      Identifier: '
    /** @internal */
    setSkipJsDocLeadingAsterisks'
      Parameter
        Identifier: 'skip'
        BooleanKeyword
      VoidKeyword
    MethodSignature
      Identifier: '
    // Invokes the provided callback then unconditionally restores the scanner to the state it
    // was in immediately prior to invoking the callback.  The result of invoking the callback
    // is returned from this function.
    lookAhead'
      TypeParameter
        Identifier: 'T'
      Parameter
        Identifier: 'callback'
        FunctionType
          TypeReference
            Identifier: ' T'
      TypeReference
        Identifier: ' T'
    MethodSignature
      Identifier: '

    // Invokes the callback with the scanner set to scan the specified range. When the callback
    // returns, the scanner is restored to the state it was in before scanRange was called.
    scanRange'
      TypeParameter
        Identifier: 'T'
      Parameter
        Identifier: 'start'
        NumberKeyword
      Parameter
        Identifier: ' length'
        NumberKeyword
      Parameter
        Identifier: ' callback'
        FunctionType
          TypeReference
            Identifier: ' T'
      TypeReference
        Identifier: ' T'
    MethodSignature
      Identifier: '

    // Invokes the provided callback.  If the callback returns something falsy, then it restores
    // the scanner to the state it was in immediately prior to invoking the callback.  If the
    // callback returns something truthy, then the scanner state is not rolled back.  The result
    // of invoking the callback is returned from this function.
    tryScan'
      TypeParameter
        Identifier: 'T'
      Parameter
        Identifier: 'callback'
        FunctionType
          TypeReference
            Identifier: ' T'
      TypeReference
        Identifier: ' T'
  VariableStatement
    ExportKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' textToKeywordObj'
        TypeReference
          Identifier: ' MapLike'
          TypeReference
            Identifier: 'KeywordSyntaxKind'
        ObjectLiteralExpression
          PropertyAssignment
            Identifier: '
    abstract'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'AbstractKeyword'
          PropertyAssignment
            Identifier: '
    accessor'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'AccessorKeyword'
          PropertyAssignment
            Identifier: '
    any'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'AnyKeyword'
          PropertyAssignment
            Identifier: '
    as'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'AsKeyword'
          PropertyAssignment
            Identifier: '
    asserts'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'AssertsKeyword'
          PropertyAssignment
            Identifier: '
    assert'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'AssertKeyword'
          PropertyAssignment
            Identifier: '
    bigint'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'BigIntKeyword'
          PropertyAssignment
            Identifier: '
    boolean'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'BooleanKeyword'
          PropertyAssignment
            Identifier: '
    break'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'BreakKeyword'
          PropertyAssignment
            Identifier: '
    case'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'CaseKeyword'
          PropertyAssignment
            Identifier: '
    catch'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'CatchKeyword'
          PropertyAssignment
            Identifier: '
    class'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ClassKeyword'
          PropertyAssignment
            Identifier: '
    continue'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ContinueKeyword'
          PropertyAssignment
            Identifier: '
    const'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ConstKeyword'
          PropertyAssignment
            ComputedPropertyName
              BinaryExpression
                StringLiteral
                PlusToken
                StringLiteral
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ConstructorKeyword'
          PropertyAssignment
            Identifier: '
    debugger'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'DebuggerKeyword'
          PropertyAssignment
            Identifier: '
    declare'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'DeclareKeyword'
          PropertyAssignment
            Identifier: '
    default'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'DefaultKeyword'
          PropertyAssignment
            Identifier: '
    delete'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'DeleteKeyword'
          PropertyAssignment
            Identifier: '
    do'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'DoKeyword'
          PropertyAssignment
            Identifier: '
    else'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ElseKeyword'
          PropertyAssignment
            Identifier: '
    enum'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'EnumKeyword'
          PropertyAssignment
            Identifier: '
    export'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ExportKeyword'
          PropertyAssignment
            Identifier: '
    extends'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ExtendsKeyword'
          PropertyAssignment
            Identifier: '
    false'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'FalseKeyword'
          PropertyAssignment
            Identifier: '
    finally'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'FinallyKeyword'
          PropertyAssignment
            Identifier: '
    for'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ForKeyword'
          PropertyAssignment
            Identifier: '
    from'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'FromKeyword'
          PropertyAssignment
            Identifier: '
    function'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'FunctionKeyword'
          PropertyAssignment
            Identifier: '
    get'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'GetKeyword'
          PropertyAssignment
            Identifier: '
    if'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'IfKeyword'
          PropertyAssignment
            Identifier: '
    implements'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ImplementsKeyword'
          PropertyAssignment
            Identifier: '
    import'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ImportKeyword'
          PropertyAssignment
            Identifier: '
    in'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'InKeyword'
          PropertyAssignment
            Identifier: '
    infer'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'InferKeyword'
          PropertyAssignment
            Identifier: '
    instanceof'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'InstanceOfKeyword'
          PropertyAssignment
            Identifier: '
    interface'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'InterfaceKeyword'
          PropertyAssignment
            Identifier: '
    intrinsic'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'IntrinsicKeyword'
          PropertyAssignment
            Identifier: '
    is'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'IsKeyword'
          PropertyAssignment
            Identifier: '
    keyof'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'KeyOfKeyword'
          PropertyAssignment
            Identifier: '
    let'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'LetKeyword'
          PropertyAssignment
            Identifier: '
    module'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ModuleKeyword'
          PropertyAssignment
            Identifier: '
    namespace'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'NamespaceKeyword'
          PropertyAssignment
            Identifier: '
    never'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'NeverKeyword'
          PropertyAssignment
            Identifier: '
    new'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'NewKeyword'
          PropertyAssignment
            Identifier: '
    null'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'NullKeyword'
          PropertyAssignment
            Identifier: '
    number'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'NumberKeyword'
          PropertyAssignment
            Identifier: '
    object'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ObjectKeyword'
          PropertyAssignment
            Identifier: '
    package'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'PackageKeyword'
          PropertyAssignment
            Identifier: '
    private'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'PrivateKeyword'
          PropertyAssignment
            Identifier: '
    protected'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ProtectedKeyword'
          PropertyAssignment
            Identifier: '
    public'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'PublicKeyword'
          PropertyAssignment
            Identifier: '
    override'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'OverrideKeyword'
          PropertyAssignment
            Identifier: '
    out'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'OutKeyword'
          PropertyAssignment
            Identifier: '
    readonly'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ReadonlyKeyword'
          PropertyAssignment
            Identifier: '
    require'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'RequireKeyword'
          PropertyAssignment
            Identifier: '
    global'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'GlobalKeyword'
          PropertyAssignment
            Identifier: '
    return'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ReturnKeyword'
          PropertyAssignment
            Identifier: '
    satisfies'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'SatisfiesKeyword'
          PropertyAssignment
            Identifier: '
    set'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'SetKeyword'
          PropertyAssignment
            Identifier: '
    static'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'StaticKeyword'
          PropertyAssignment
            Identifier: '
    string'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'StringKeyword'
          PropertyAssignment
            Identifier: '
    super'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'SuperKeyword'
          PropertyAssignment
            Identifier: '
    switch'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'SwitchKeyword'
          PropertyAssignment
            Identifier: '
    symbol'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'SymbolKeyword'
          PropertyAssignment
            Identifier: '
    this'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ThisKeyword'
          PropertyAssignment
            Identifier: '
    throw'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ThrowKeyword'
          PropertyAssignment
            Identifier: '
    true'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'TrueKeyword'
          PropertyAssignment
            Identifier: '
    try'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'TryKeyword'
          PropertyAssignment
            Identifier: '
    type'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'TypeKeyword'
          PropertyAssignment
            Identifier: '
    typeof'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'TypeOfKeyword'
          PropertyAssignment
            Identifier: '
    undefined'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'UndefinedKeyword'
          PropertyAssignment
            Identifier: '
    unique'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'UniqueKeyword'
          PropertyAssignment
            Identifier: '
    unknown'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'UnknownKeyword'
          PropertyAssignment
            Identifier: '
    using'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'UsingKeyword'
          PropertyAssignment
            Identifier: '
    var'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'VarKeyword'
          PropertyAssignment
            Identifier: '
    void'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'VoidKeyword'
          PropertyAssignment
            Identifier: '
    while'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'WhileKeyword'
          PropertyAssignment
            Identifier: '
    with'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'WithKeyword'
          PropertyAssignment
            Identifier: '
    yield'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'YieldKeyword'
          PropertyAssignment
            Identifier: '
    async'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'AsyncKeyword'
          PropertyAssignment
            Identifier: '
    await'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'AwaitKeyword'
          PropertyAssignment
            Identifier: '
    of'
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'OfKeyword'
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' textToKeyword'
        NewExpression
          Identifier: ' Map'
          CallExpression
            PropertyAccessExpression
              Identifier: 'Object'
              Identifier: 'entries'
            Identifier: 'textToKeywordObj'
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' textToToken'
        NewExpression
          Identifier: ' Map'
          CallExpression
            PropertyAccessExpression
              Identifier: 'Object'
              Identifier: 'entries'
            ObjectLiteralExpression
              SpreadAssignment
                Identifier: 'textToKeywordObj'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'OpenBraceToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'CloseBraceToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'OpenParenToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'CloseParenToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'OpenBracketToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'CloseBracketToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'DotToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'DotDotDotToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'SemicolonToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'CommaToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'LessThanToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'GreaterThanToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'LessThanEqualsToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'GreaterThanEqualsToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'EqualsEqualsToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ExclamationEqualsToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'EqualsEqualsEqualsToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ExclamationEqualsEqualsToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'EqualsGreaterThanToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'PlusToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'MinusToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'AsteriskAsteriskToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'AsteriskToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'SlashToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'PercentToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'PlusPlusToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'MinusMinusToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'LessThanLessThanToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'LessThanSlashToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'GreaterThanGreaterThanToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'GreaterThanGreaterThanGreaterThanToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'AmpersandToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'BarToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'CaretToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ExclamationToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'TildeToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'AmpersandAmpersandToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'BarBarToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'QuestionToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'QuestionQuestionToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'QuestionDotToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ColonToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'EqualsToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'PlusEqualsToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'MinusEqualsToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'AsteriskEqualsToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'AsteriskAsteriskEqualsToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'SlashEqualsToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'PercentEqualsToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'LessThanLessThanEqualsToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'GreaterThanGreaterThanEqualsToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'GreaterThanGreaterThanGreaterThanEqualsToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'AmpersandEqualsToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'BarEqualsToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'CaretEqualsToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'BarBarEqualsToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'AmpersandAmpersandEqualsToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'QuestionQuestionEqualsToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'AtToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'HashToken'
              PropertyAssignment
                StringLiteral
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'BacktickToken'
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' charCodeToRegExpFlag'
        NewExpression
          Identifier: ' Map'
          TypeReference
            Identifier: 'CharacterCodes'
          TypeReference
            Identifier: ' RegularExpressionFlags'
          ArrayLiteralExpression
            ArrayLiteralExpression
              PropertyAccessExpression
                Identifier: 'CharacterCodes'
                Identifier: 'd'
              PropertyAccessExpression
                Identifier: ' RegularExpressionFlags'
                Identifier: 'HasIndices'
            ArrayLiteralExpression
              PropertyAccessExpression
                Identifier: 'CharacterCodes'
                Identifier: 'g'
              PropertyAccessExpression
                Identifier: ' RegularExpressionFlags'
                Identifier: 'Global'
            ArrayLiteralExpression
              PropertyAccessExpression
                Identifier: 'CharacterCodes'
                Identifier: 'i'
              PropertyAccessExpression
                Identifier: ' RegularExpressionFlags'
                Identifier: 'IgnoreCase'
            ArrayLiteralExpression
              PropertyAccessExpression
                Identifier: 'CharacterCodes'
                Identifier: 'm'
              PropertyAccessExpression
                Identifier: ' RegularExpressionFlags'
                Identifier: 'Multiline'
            ArrayLiteralExpression
              PropertyAccessExpression
                Identifier: 'CharacterCodes'
                Identifier: 's'
              PropertyAccessExpression
                Identifier: ' RegularExpressionFlags'
                Identifier: 'DotAll'
            ArrayLiteralExpression
              PropertyAccessExpression
                Identifier: 'CharacterCodes'
                Identifier: 'u'
              PropertyAccessExpression
                Identifier: ' RegularExpressionFlags'
                Identifier: 'Unicode'
            ArrayLiteralExpression
              PropertyAccessExpression
                Identifier: 'CharacterCodes'
                Identifier: 'v'
              PropertyAccessExpression
                Identifier: ' RegularExpressionFlags'
                Identifier: 'UnicodeSets'
            ArrayLiteralExpression
              PropertyAccessExpression
                Identifier: 'CharacterCodes'
                Identifier: 'y'
              PropertyAccessExpression
                Identifier: ' RegularExpressionFlags'
                Identifier: 'Sticky'
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' regExpFlagToFirstAvailableLanguageVersion'
        NewExpression
          Identifier: ' Map'
          TypeReference
            Identifier: 'RegularExpressionFlags'
          IndexedAccessType
            TypeQuery
              Identifier: ' LanguageFeatureMinimumTarget'
            TypeReference
              Identifier: 'LanugageFeatures'
          ArrayLiteralExpression
            ArrayLiteralExpression
              PropertyAccessExpression
                Identifier: 'RegularExpressionFlags'
                Identifier: 'HasIndices'
              PropertyAccessExpression
                Identifier: ' LanguageFeatureMinimumTarget'
                Identifier: 'RegularExpressionFlagsHasIndices'
            ArrayLiteralExpression
              PropertyAccessExpression
                Identifier: 'RegularExpressionFlags'
                Identifier: 'DotAll'
              PropertyAccessExpression
                Identifier: ' LanguageFeatureMinimumTarget'
                Identifier: 'RegularExpressionFlagsDotAll'
            ArrayLiteralExpression
              PropertyAccessExpression
                Identifier: 'RegularExpressionFlags'
                Identifier: 'Unicode'
              PropertyAccessExpression
                Identifier: ' LanguageFeatureMinimumTarget'
                Identifier: 'RegularExpressionFlagsUnicode'
            ArrayLiteralExpression
              PropertyAccessExpression
                Identifier: 'RegularExpressionFlags'
                Identifier: 'UnicodeSets'
              PropertyAccessExpression
                Identifier: ' LanguageFeatureMinimumTarget'
                Identifier: 'RegularExpressionFlagsUnicodeSets'
            ArrayLiteralExpression
              PropertyAccessExpression
                Identifier: 'RegularExpressionFlags'
                Identifier: 'Sticky'
              PropertyAccessExpression
                Identifier: ' LanguageFeatureMinimumTarget'
                Identifier: 'RegularExpressionFlagsSticky'
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' unicodeES5IdentifierStart'
        ArrayLiteralExpression
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' unicodeES5IdentifierPart'
        ArrayLiteralExpression
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' unicodeESNextIdentifierStart'
        ArrayLiteralExpression
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' unicodeESNextIdentifierPart'
        ArrayLiteralExpression
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
          NumericLiteral
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' commentDirectiveRegExSingleLine'
        RegularExpressionLiteral
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' commentDirectiveRegExMultiLine'
        RegularExpressionLiteral
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' jsDocSeeOrLink'
        RegularExpressionLiteral
  FunctionDeclaration
    Identifier: ' lookupInUnicodeMap'
    Parameter
      Identifier: 'code'
      NumberKeyword
    Parameter
      Identifier: ' map'
      TypeOperator
        ArrayType
          NumberKeyword
    BooleanKeyword
    Block
      IfStatement
        BinaryExpression
          Identifier: 'code'
          LessThanToken
          ElementAccessExpression
            Identifier: ' map'
            NumericLiteral
        Block
          ReturnStatement
            FalseKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' lo'
            NumericLiteral
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' hi'
            NumberKeyword
            PropertyAccessExpression
              Identifier: ' map'
              Identifier: 'length'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' mid'
            NumberKeyword
      WhileStatement
        BinaryExpression
          BinaryExpression
            Identifier: 'lo'
            PlusToken
            NumericLiteral
          LessThanToken
          Identifier: ' hi'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        mid'
              EqualsToken
              BinaryExpression
                Identifier: ' lo'
                PlusToken
                BinaryExpression
                  ParenthesizedExpression
                    BinaryExpression
                      Identifier: 'hi'
                      MinusToken
                      Identifier: ' lo'
                  SlashToken
                  NumericLiteral
          ExpressionStatement
            BinaryExpression
              Identifier: '
        // mid has to be even to catch a range's beginning
        mid'
              MinusEqualsToken
              BinaryExpression
                Identifier: ' mid'
                PercentToken
                NumericLiteral
          IfStatement
            BinaryExpression
              BinaryExpression
                ElementAccessExpression
                  Identifier: 'map'
                  Identifier: 'mid'
                LessThanEqualsToken
                Identifier: ' code'
              AmpersandAmpersandToken
              BinaryExpression
                Identifier: ' code'
                LessThanEqualsToken
                ElementAccessExpression
                  Identifier: ' map'
                  BinaryExpression
                    Identifier: 'mid'
                    PlusToken
                    NumericLiteral
            Block
              ReturnStatement
                TrueKeyword
          IfStatement
            BinaryExpression
              Identifier: 'code'
              LessThanToken
              ElementAccessExpression
                Identifier: ' map'
                Identifier: 'mid'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            hi'
                  EqualsToken
                  Identifier: ' mid'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            lo'
                  EqualsToken
                  BinaryExpression
                    Identifier: ' mid'
                    PlusToken
                    NumericLiteral
      ReturnStatement
        FalseKeyword
  FunctionDeclaration
    ExportKeyword
    Identifier: ' isUnicodeIdentifierStart'
    Parameter
      Identifier: 'code'
      NumberKeyword
    Parameter
      Identifier: ' languageVersion'
      UnionType
        TypeReference
          Identifier: ' ScriptTarget'
        UndefinedKeyword
    BooleanKeyword
    Block
      ReturnStatement
        ConditionalExpression
          BinaryExpression
            NonNullExpression
              Identifier: ' languageVersion'
            GreaterThanEqualsToken
            PropertyAccessExpression
              Identifier: ' ScriptTarget'
              Identifier: 'ES2015'
          QuestionToken
          CallExpression
            Identifier: '
        lookupInUnicodeMap'
            Identifier: 'code'
            Identifier: ' unicodeESNextIdentifierStart'
          ColonToken
          CallExpression
            Identifier: '
        lookupInUnicodeMap'
            Identifier: 'code'
            Identifier: ' unicodeES5IdentifierStart'
  FunctionDeclaration
    Identifier: ' isUnicodeIdentifierPart'
    Parameter
      Identifier: 'code'
      NumberKeyword
    Parameter
      Identifier: ' languageVersion'
      UnionType
        TypeReference
          Identifier: ' ScriptTarget'
        UndefinedKeyword
    Block
      ReturnStatement
        ConditionalExpression
          BinaryExpression
            NonNullExpression
              Identifier: ' languageVersion'
            GreaterThanEqualsToken
            PropertyAccessExpression
              Identifier: ' ScriptTarget'
              Identifier: 'ES2015'
          QuestionToken
          CallExpression
            Identifier: '
        lookupInUnicodeMap'
            Identifier: 'code'
            Identifier: ' unicodeESNextIdentifierPart'
          ColonToken
          CallExpression
            Identifier: '
        lookupInUnicodeMap'
            Identifier: 'code'
            Identifier: ' unicodeES5IdentifierPart'
  FunctionDeclaration
    Identifier: ' makeReverseMap'
    TypeParameter
      Identifier: 'T'
    Parameter
      Identifier: 'source'
      TypeReference
        Identifier: ' Map'
        TypeReference
          Identifier: 'T'
        NumberKeyword
    ArrayType
      TypeReference
        Identifier: ' T'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' result'
            ArrayType
              TypeReference
                Identifier: ' T'
            ArrayLiteralExpression
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            Identifier: '
    source'
            Identifier: 'forEach'
          ArrowFunction
            Parameter
              Identifier: 'value'
            Parameter
              Identifier: ' name'
            EqualsGreaterThanToken
            Block
              ExpressionStatement
                BinaryExpression
                  ElementAccessExpression
                    Identifier: '
        result'
                    Identifier: 'value'
                  EqualsToken
                  Identifier: ' name'
      ReturnStatement
        Identifier: ' result'
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' tokenStrings'
        CallExpression
          Identifier: ' makeReverseMap'
          Identifier: 'textToToken'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' tokenToString'
    Parameter
      Identifier: 't'
      TypeReference
        Identifier: ' PunctuationOrKeywordSyntaxKind'
    StringKeyword
  FunctionDeclaration
    ExportKeyword
    Identifier: ' tokenToString'
    Parameter
      Identifier: 't'
      TypeReference
        Identifier: ' SyntaxKind'
    UnionType
      StringKeyword
      UndefinedKeyword
  FunctionDeclaration
    ExportKeyword
    Identifier: ' tokenToString'
    Parameter
      Identifier: 't'
      TypeReference
        Identifier: ' SyntaxKind'
    UnionType
      StringKeyword
      UndefinedKeyword
    Block
      ReturnStatement
        ElementAccessExpression
          Identifier: ' tokenStrings'
          Identifier: 't'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' stringToToken'
    Parameter
      Identifier: 's'
      StringKeyword
    UnionType
      TypeReference
        Identifier: ' SyntaxKind'
      UndefinedKeyword
    Block
      ReturnStatement
        CallExpression
          PropertyAccessExpression
            Identifier: ' textToToken'
            Identifier: 'get'
          Identifier: 's'
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' regExpFlagCharCodes'
        CallExpression
          Identifier: ' makeReverseMap'
          Identifier: 'charCodeToRegExpFlag'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' regularExpressionFlagToCharacterCode'
    Parameter
      Identifier: 'f'
      TypeReference
        Identifier: ' RegularExpressionFlags'
    UnionType
      TypeReference
        Identifier: ' CharacterCodes'
      UndefinedKeyword
    Block
      ReturnStatement
        ElementAccessExpression
          Identifier: ' regExpFlagCharCodes'
          Identifier: 'f'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' characterCodeToRegularExpressionFlag'
    Parameter
      Identifier: 'ch'
      TypeReference
        Identifier: ' CharacterCodes'
    UnionType
      TypeReference
        Identifier: ' RegularExpressionFlags'
      UndefinedKeyword
    Block
      ReturnStatement
        CallExpression
          PropertyAccessExpression
            Identifier: ' charCodeToRegExpFlag'
            Identifier: 'get'
          Identifier: 'ch'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' computeLineStarts'
    Parameter
      Identifier: 'text'
      StringKeyword
    ArrayType
      NumberKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' result'
            ArrayType
              NumberKeyword
            ArrayLiteralExpression
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' pos'
            NumericLiteral
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' lineStart'
            NumericLiteral
      WhileStatement
        BinaryExpression
          Identifier: 'pos'
          LessThanToken
          PropertyAccessExpression
            Identifier: ' text'
            Identifier: 'length'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' ch'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' text'
                    Identifier: 'charCodeAt'
                  Identifier: 'pos'
          ExpressionStatement
            PostfixUnaryExpression
              Identifier: '
        pos'
          SwitchStatement
            Identifier: 'ch'
            CaseBlock
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'carriageReturn'
                IfStatement
                  BinaryExpression
                    CallExpression
                      PropertyAccessExpression
                        Identifier: 'text'
                        Identifier: 'charCodeAt'
                      Identifier: 'pos'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'lineFeed'
                  Block
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'lineFeed'
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
                result'
                      Identifier: 'push'
                    Identifier: 'lineStart'
                ExpressionStatement
                  BinaryExpression
                    Identifier: '
                lineStart'
                    EqualsToken
                    Identifier: ' pos'
                BreakStatement
              DefaultClause
                IfStatement
                  BinaryExpression
                    BinaryExpression
                      Identifier: 'ch'
                      GreaterThanToken
                      PropertyAccessExpression
                        Identifier: ' CharacterCodes'
                        Identifier: 'maxAsciiCharacter'
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: ' isLineBreak'
                      Identifier: 'ch'
                  Block
                    ExpressionStatement
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                    result'
                          Identifier: 'push'
                        Identifier: 'lineStart'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    lineStart'
                        EqualsToken
                        Identifier: ' pos'
                BreakStatement
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            Identifier: '
    result'
            Identifier: 'push'
          Identifier: 'lineStart'
      ReturnStatement
        Identifier: ' result'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getPositionOfLineAndCharacter'
    Parameter
      Identifier: 'sourceFile'
      TypeReference
        Identifier: ' SourceFileLike'
    Parameter
      Identifier: ' line'
      NumberKeyword
    Parameter
      Identifier: ' character'
      NumberKeyword
    NumberKeyword
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getPositionOfLineAndCharacter'
    Parameter
      Identifier: 'sourceFile'
      TypeReference
        Identifier: ' SourceFileLike'
    Parameter
      Identifier: ' line'
      NumberKeyword
    Parameter
      Identifier: ' character'
      NumberKeyword
    Parameter
      Identifier: ' allowEdits'
      QuestionToken
      LiteralType
        TrueKeyword
    NumberKeyword
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getPositionOfLineAndCharacter'
    Parameter
      Identifier: 'sourceFile'
      TypeReference
        Identifier: ' SourceFileLike'
    Parameter
      Identifier: ' line'
      NumberKeyword
    Parameter
      Identifier: ' character'
      NumberKeyword
    Parameter
      Identifier: ' allowEdits'
      QuestionToken
      LiteralType
        TrueKeyword
    NumberKeyword
    Block
      ReturnStatement
        ConditionalExpression
          PropertyAccessExpression
            Identifier: ' sourceFile'
            Identifier: 'getPositionOfLineAndCharacter'
          QuestionToken
          CallExpression
            PropertyAccessExpression
              Identifier: '
        sourceFile'
              Identifier: 'getPositionOfLineAndCharacter'
            Identifier: 'line'
            Identifier: ' character'
            Identifier: ' allowEdits'
          ColonToken
          CallExpression
            Identifier: '
        computePositionOfLineAndCharacter'
            CallExpression
              Identifier: 'getLineStarts'
              Identifier: 'sourceFile'
            Identifier: ' line'
            Identifier: ' character'
            PropertyAccessExpression
              Identifier: ' sourceFile'
              Identifier: 'text'
            Identifier: ' allowEdits'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' computePositionOfLineAndCharacter'
    Parameter
      Identifier: 'lineStarts'
      TypeOperator
        ArrayType
          NumberKeyword
    Parameter
      Identifier: ' line'
      NumberKeyword
    Parameter
      Identifier: ' character'
      NumberKeyword
    Parameter
      Identifier: ' debugText'
      QuestionToken
      StringKeyword
    Parameter
      Identifier: ' allowEdits'
      QuestionToken
      LiteralType
        TrueKeyword
    NumberKeyword
    Block
      IfStatement
        BinaryExpression
          BinaryExpression
            Identifier: 'line'
            LessThanToken
            NumericLiteral
          BarBarToken
          BinaryExpression
            Identifier: ' line'
            GreaterThanEqualsToken
            PropertyAccessExpression
              Identifier: ' lineStarts'
              Identifier: 'length'
        Block
          IfStatement
            Identifier: 'allowEdits'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            // Clamp line to nearest allowable value
            line'
                  EqualsToken
                  ConditionalExpression
                    BinaryExpression
                      Identifier: ' line'
                      LessThanToken
                      NumericLiteral
                    QuestionToken
                    NumericLiteral
                    ColonToken
                    ConditionalExpression
                      BinaryExpression
                        Identifier: ' line'
                        GreaterThanEqualsToken
                        PropertyAccessExpression
                          Identifier: ' lineStarts'
                          Identifier: 'length'
                      QuestionToken
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: ' lineStarts'
                          Identifier: 'length'
                        MinusToken
                        NumericLiteral
                      ColonToken
                      Identifier: ' line'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            Debug'
                    Identifier: 'fail'
                  TemplateExpression
                    TemplateHead
                    TemplateSpan
                      Identifier: 'line'
                      TemplateMiddle
                    TemplateSpan
                      PropertyAccessExpression
                        Identifier: 'lineStarts'
                        Identifier: 'length'
                      TemplateMiddle
                    TemplateSpan
                      ConditionalExpression
                        BinaryExpression
                          Identifier: 'debugText'
                          ExclamationEqualsEqualsToken
                          Identifier: ' undefined'
                        QuestionToken
                        CallExpression
                          Identifier: ' arrayIsEqualTo'
                          Identifier: 'lineStarts'
                          CallExpression
                            Identifier: ' computeLineStarts'
                            Identifier: 'debugText'
                        ColonToken
                        StringLiteral
                      TemplateTail
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' res'
            BinaryExpression
              ElementAccessExpression
                Identifier: ' lineStarts'
                Identifier: 'line'
              PlusToken
              Identifier: ' character'
      IfStatement
        Identifier: 'allowEdits'
        Block
          ReturnStatement
            ConditionalExpression
              BinaryExpression
                Identifier: ' res'
                GreaterThanToken
                ElementAccessExpression
                  Identifier: ' lineStarts'
                  BinaryExpression
                    Identifier: 'line'
                    PlusToken
                    NumericLiteral
              QuestionToken
              ElementAccessExpression
                Identifier: ' lineStarts'
                BinaryExpression
                  Identifier: 'line'
                  PlusToken
                  NumericLiteral
              ColonToken
              ConditionalExpression
                BinaryExpression
                  BinaryExpression
                    TypeOfExpression
                      Identifier: ' debugText'
                    EqualsEqualsEqualsToken
                    StringLiteral
                  AmpersandAmpersandToken
                  BinaryExpression
                    Identifier: ' res'
                    GreaterThanToken
                    PropertyAccessExpression
                      Identifier: ' debugText'
                      Identifier: 'length'
                QuestionToken
                PropertyAccessExpression
                  Identifier: ' debugText'
                  Identifier: 'length'
                ColonToken
                Identifier: ' res'
      IfStatement
        BinaryExpression
          Identifier: 'line'
          LessThanToken
          BinaryExpression
            PropertyAccessExpression
              Identifier: ' lineStarts'
              Identifier: 'length'
            MinusToken
            NumericLiteral
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        Debug'
                Identifier: 'assert'
              BinaryExpression
                Identifier: 'res'
                LessThanToken
                ElementAccessExpression
                  Identifier: ' lineStarts'
                  BinaryExpression
                    Identifier: 'line'
                    PlusToken
                    NumericLiteral
        IfStatement
          BinaryExpression
            Identifier: 'debugText'
            ExclamationEqualsEqualsToken
            Identifier: ' undefined'
          Block
            ExpressionStatement
              CallExpression
                PropertyAccessExpression
                  Identifier: '
        Debug'
                  Identifier: 'assert'
                BinaryExpression
                  Identifier: 'res'
                  LessThanEqualsToken
                  PropertyAccessExpression
                    Identifier: ' debugText'
                    Identifier: 'length'
      ReturnStatement
        Identifier: ' res'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getLineStarts'
    Parameter
      Identifier: 'sourceFile'
      TypeReference
        Identifier: ' SourceFileLike'
    TypeOperator
      ArrayType
        NumberKeyword
    Block
      ReturnStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: ' sourceFile'
            Identifier: 'lineMap'
          BarBarToken
          ParenthesizedExpression
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'sourceFile'
                Identifier: 'lineMap'
              EqualsToken
              CallExpression
                Identifier: ' computeLineStarts'
                PropertyAccessExpression
                  Identifier: 'sourceFile'
                  Identifier: 'text'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' computeLineAndCharacterOfPosition'
    Parameter
      Identifier: 'lineStarts'
      TypeOperator
        ArrayType
          NumberKeyword
    Parameter
      Identifier: ' position'
      NumberKeyword
    TypeReference
      Identifier: ' LineAndCharacter'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' lineNumber'
            CallExpression
              Identifier: ' computeLineOfPosition'
              Identifier: 'lineStarts'
              Identifier: ' position'
      ReturnStatement
        ObjectLiteralExpression
          PropertyAssignment
            Identifier: '
        line'
            Identifier: ' lineNumber'
          PropertyAssignment
            Identifier: '
        character'
            BinaryExpression
              Identifier: ' position'
              MinusToken
              ElementAccessExpression
                Identifier: ' lineStarts'
                Identifier: 'lineNumber'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' computeLineOfPosition'
    Parameter
      Identifier: 'lineStarts'
      TypeOperator
        ArrayType
          NumberKeyword
    Parameter
      Identifier: ' position'
      NumberKeyword
    Parameter
      Identifier: ' lowerBound'
      QuestionToken
      NumberKeyword
    NumberKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' lineNumber'
            CallExpression
              Identifier: ' binarySearch'
              Identifier: 'lineStarts'
              Identifier: ' position'
              Identifier: ' identity'
              Identifier: ' compareValues'
              Identifier: ' lowerBound'
      IfStatement
        BinaryExpression
          Identifier: 'lineNumber'
          LessThanToken
          NumericLiteral
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        // If the actual position was not found,
        // the binary search returns the 2's-complement of the next line start
        // e.g. if the line starts at [5, 10, 23, 80] and the position requested was 20
        // then the search will return -2.
        //
        // We want the index of the previous line start, so we subtract 1.
        // Review 2's-complement if this is confusing.
        lineNumber'
              EqualsToken
              BinaryExpression
                PrefixUnaryExpression
                  Identifier: 'lineNumber'
                MinusToken
                NumericLiteral
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        Debug'
                Identifier: 'assert'
              BinaryExpression
                Identifier: 'lineNumber'
                ExclamationEqualsEqualsToken
                PrefixUnaryExpression
                  NumericLiteral
              StringLiteral
      ReturnStatement
        Identifier: ' lineNumber'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getLinesBetweenPositions'
    Parameter
      Identifier: 'sourceFile'
      TypeReference
        Identifier: ' SourceFileLike'
    Parameter
      Identifier: ' pos1'
      NumberKeyword
    Parameter
      Identifier: ' pos2'
      NumberKeyword
    NumberKeyword
    Block
      IfStatement
        BinaryExpression
          Identifier: 'pos1'
          EqualsEqualsEqualsToken
          Identifier: ' pos2'
        ReturnStatement
          NumericLiteral
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' lineStarts'
            CallExpression
              Identifier: ' getLineStarts'
              Identifier: 'sourceFile'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' lower'
            CallExpression
              PropertyAccessExpression
                Identifier: ' Math'
                Identifier: 'min'
              Identifier: 'pos1'
              Identifier: ' pos2'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' isNegative'
            BinaryExpression
              Identifier: ' lower'
              EqualsEqualsEqualsToken
              Identifier: ' pos2'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' upper'
            ConditionalExpression
              Identifier: ' isNegative'
              QuestionToken
              Identifier: ' pos1'
              ColonToken
              Identifier: ' pos2'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' lowerLine'
            CallExpression
              Identifier: ' computeLineOfPosition'
              Identifier: 'lineStarts'
              Identifier: ' lower'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' upperLine'
            CallExpression
              Identifier: ' computeLineOfPosition'
              Identifier: 'lineStarts'
              Identifier: ' upper'
              Identifier: ' lowerLine'
      ReturnStatement
        ConditionalExpression
          Identifier: ' isNegative'
          QuestionToken
          BinaryExpression
            Identifier: ' lowerLine'
            MinusToken
            Identifier: ' upperLine'
          ColonToken
          BinaryExpression
            Identifier: ' upperLine'
            MinusToken
            Identifier: ' lowerLine'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getLineAndCharacterOfPosition'
    Parameter
      Identifier: 'sourceFile'
      TypeReference
        Identifier: ' SourceFileLike'
    Parameter
      Identifier: ' position'
      NumberKeyword
    TypeReference
      Identifier: ' LineAndCharacter'
    Block
      ReturnStatement
        CallExpression
          Identifier: ' computeLineAndCharacterOfPosition'
          CallExpression
            Identifier: 'getLineStarts'
            Identifier: 'sourceFile'
          Identifier: ' position'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' isWhiteSpaceLike'
    Parameter
      Identifier: 'ch'
      NumberKeyword
    BooleanKeyword
    Block
      ReturnStatement
        BinaryExpression
          CallExpression
            Identifier: ' isWhiteSpaceSingleLine'
            Identifier: 'ch'
          BarBarToken
          CallExpression
            Identifier: ' isLineBreak'
            Identifier: 'ch'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' isWhiteSpaceSingleLine'
    Parameter
      Identifier: 'ch'
      NumberKeyword
    BooleanKeyword
    Block
      ReturnStatement
        BinaryExpression
          BinaryExpression
            BinaryExpression
              BinaryExpression
                BinaryExpression
                  BinaryExpression
                    BinaryExpression
                      BinaryExpression
                        BinaryExpression
                          BinaryExpression
                            BinaryExpression
                              BinaryExpression
                                Identifier: ' ch'
                                EqualsEqualsEqualsToken
                                PropertyAccessExpression
                                  Identifier: ' CharacterCodes'
                                  Identifier: 'space'
                              BarBarToken
                              BinaryExpression
                                Identifier: '
        ch'
                                EqualsEqualsEqualsToken
                                PropertyAccessExpression
                                  Identifier: ' CharacterCodes'
                                  Identifier: 'tab'
                            BarBarToken
                            BinaryExpression
                              Identifier: '
        ch'
                              EqualsEqualsEqualsToken
                              PropertyAccessExpression
                                Identifier: ' CharacterCodes'
                                Identifier: 'verticalTab'
                          BarBarToken
                          BinaryExpression
                            Identifier: '
        ch'
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' CharacterCodes'
                              Identifier: 'formFeed'
                        BarBarToken
                        BinaryExpression
                          Identifier: '
        ch'
                          EqualsEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' CharacterCodes'
                            Identifier: 'nonBreakingSpace'
                      BarBarToken
                      BinaryExpression
                        Identifier: '
        ch'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'nextLine'
                    BarBarToken
                    BinaryExpression
                      Identifier: '
        ch'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' CharacterCodes'
                        Identifier: 'ogham'
                  BarBarToken
                  BinaryExpression
                    BinaryExpression
                      Identifier: '
        ch'
                      GreaterThanEqualsToken
                      PropertyAccessExpression
                        Identifier: ' CharacterCodes'
                        Identifier: 'enQuad'
                    AmpersandAmpersandToken
                    BinaryExpression
                      Identifier: ' ch'
                      LessThanEqualsToken
                      PropertyAccessExpression
                        Identifier: ' CharacterCodes'
                        Identifier: 'zeroWidthSpace'
                BarBarToken
                BinaryExpression
                  Identifier: '
        ch'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'narrowNoBreakSpace'
              BarBarToken
              BinaryExpression
                Identifier: '
        ch'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'mathematicalSpace'
            BarBarToken
            BinaryExpression
              Identifier: '
        ch'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' CharacterCodes'
                Identifier: 'ideographicSpace'
          BarBarToken
          BinaryExpression
            Identifier: '
        ch'
            EqualsEqualsEqualsToken
            PropertyAccessExpression
              Identifier: ' CharacterCodes'
              Identifier: 'byteOrderMark'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' isLineBreak'
    Parameter
      Identifier: 'ch'
      NumberKeyword
    BooleanKeyword
    Block
      ReturnStatement
        BinaryExpression
          BinaryExpression
            BinaryExpression
              BinaryExpression
                Identifier: ' ch'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'lineFeed'
              BarBarToken
              BinaryExpression
                Identifier: '
        ch'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'carriageReturn'
            BarBarToken
            BinaryExpression
              Identifier: '
        ch'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' CharacterCodes'
                Identifier: 'lineSeparator'
          BarBarToken
          BinaryExpression
            Identifier: '
        ch'
            EqualsEqualsEqualsToken
            PropertyAccessExpression
              Identifier: ' CharacterCodes'
              Identifier: 'paragraphSeparator'
  FunctionDeclaration
    Identifier: ' isDigit'
    Parameter
      Identifier: 'ch'
      NumberKeyword
    BooleanKeyword
    Block
      ReturnStatement
        BinaryExpression
          BinaryExpression
            Identifier: ' ch'
            GreaterThanEqualsToken
            PropertyAccessExpression
              Identifier: ' CharacterCodes'
              Identifier: '_0'
          AmpersandAmpersandToken
          BinaryExpression
            Identifier: ' ch'
            LessThanEqualsToken
            PropertyAccessExpression
              Identifier: ' CharacterCodes'
              Identifier: '_9'
  FunctionDeclaration
    Identifier: ' isHexDigit'
    Parameter
      Identifier: 'ch'
      NumberKeyword
    BooleanKeyword
    Block
      ReturnStatement
        BinaryExpression
          BinaryExpression
            CallExpression
              Identifier: ' isDigit'
              Identifier: 'ch'
            BarBarToken
            BinaryExpression
              BinaryExpression
                Identifier: ' ch'
                GreaterThanEqualsToken
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'A'
              AmpersandAmpersandToken
              BinaryExpression
                Identifier: ' ch'
                LessThanEqualsToken
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'F'
          BarBarToken
          BinaryExpression
            BinaryExpression
              Identifier: ' ch'
              GreaterThanEqualsToken
              PropertyAccessExpression
                Identifier: ' CharacterCodes'
                Identifier: 'a'
            AmpersandAmpersandToken
            BinaryExpression
              Identifier: ' ch'
              LessThanEqualsToken
              PropertyAccessExpression
                Identifier: ' CharacterCodes'
                Identifier: 'f'
  FunctionDeclaration
    Identifier: ' isASCIILetter'
    Parameter
      Identifier: 'ch'
      NumberKeyword
    BooleanKeyword
    Block
      ReturnStatement
        BinaryExpression
          BinaryExpression
            BinaryExpression
              Identifier: ' ch'
              GreaterThanEqualsToken
              PropertyAccessExpression
                Identifier: ' CharacterCodes'
                Identifier: 'A'
            AmpersandAmpersandToken
            BinaryExpression
              Identifier: ' ch'
              LessThanEqualsToken
              PropertyAccessExpression
                Identifier: ' CharacterCodes'
                Identifier: 'Z'
          BarBarToken
          BinaryExpression
            BinaryExpression
              Identifier: ' ch'
              GreaterThanEqualsToken
              PropertyAccessExpression
                Identifier: ' CharacterCodes'
                Identifier: 'a'
            AmpersandAmpersandToken
            BinaryExpression
              Identifier: ' ch'
              LessThanEqualsToken
              PropertyAccessExpression
                Identifier: ' CharacterCodes'
                Identifier: 'z'
  FunctionDeclaration
    Identifier: ' isWordCharacter'
    Parameter
      Identifier: 'ch'
      NumberKeyword
    BooleanKeyword
    Block
      ReturnStatement
        BinaryExpression
          BinaryExpression
            CallExpression
              Identifier: ' isASCIILetter'
              Identifier: 'ch'
            BarBarToken
            CallExpression
              Identifier: ' isDigit'
              Identifier: 'ch'
          BarBarToken
          BinaryExpression
            Identifier: ' ch'
            EqualsEqualsEqualsToken
            PropertyAccessExpression
              Identifier: ' CharacterCodes'
              Identifier: '_'
  FunctionDeclaration
    Identifier: ' isOctalDigit'
    Parameter
      Identifier: 'ch'
      NumberKeyword
    BooleanKeyword
    Block
      ReturnStatement
        BinaryExpression
          BinaryExpression
            Identifier: ' ch'
            GreaterThanEqualsToken
            PropertyAccessExpression
              Identifier: ' CharacterCodes'
              Identifier: '_0'
          AmpersandAmpersandToken
          BinaryExpression
            Identifier: ' ch'
            LessThanEqualsToken
            PropertyAccessExpression
              Identifier: ' CharacterCodes'
              Identifier: '_7'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' couldStartTrivia'
    Parameter
      Identifier: 'text'
      StringKeyword
    Parameter
      Identifier: ' pos'
      NumberKeyword
    BooleanKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' ch'
            CallExpression
              PropertyAccessExpression
                Identifier: ' text'
                Identifier: 'charCodeAt'
              Identifier: 'pos'
      SwitchStatement
        Identifier: 'ch'
        CaseBlock
          CaseClause
            PropertyAccessExpression
              Identifier: ' CharacterCodes'
              Identifier: 'carriageReturn'
          CaseClause
            PropertyAccessExpression
              Identifier: ' CharacterCodes'
              Identifier: 'lineFeed'
          CaseClause
            PropertyAccessExpression
              Identifier: ' CharacterCodes'
              Identifier: 'tab'
          CaseClause
            PropertyAccessExpression
              Identifier: ' CharacterCodes'
              Identifier: 'verticalTab'
          CaseClause
            PropertyAccessExpression
              Identifier: ' CharacterCodes'
              Identifier: 'formFeed'
          CaseClause
            PropertyAccessExpression
              Identifier: ' CharacterCodes'
              Identifier: 'space'
          CaseClause
            PropertyAccessExpression
              Identifier: ' CharacterCodes'
              Identifier: 'slash'
          CaseClause
            PropertyAccessExpression
              Identifier: ' CharacterCodes'
              Identifier: 'lessThan'
          CaseClause
            PropertyAccessExpression
              Identifier: ' CharacterCodes'
              Identifier: 'bar'
          CaseClause
            PropertyAccessExpression
              Identifier: ' CharacterCodes'
              Identifier: 'equals'
          CaseClause
            PropertyAccessExpression
              Identifier: ' CharacterCodes'
              Identifier: 'greaterThan'
            ReturnStatement
              TrueKeyword
          CaseClause
            PropertyAccessExpression
              Identifier: ' CharacterCodes'
              Identifier: 'hash'
            ReturnStatement
              BinaryExpression
                Identifier: ' pos'
                EqualsEqualsEqualsToken
                NumericLiteral
          DefaultClause
            ReturnStatement
              BinaryExpression
                Identifier: ' ch'
                GreaterThanToken
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'maxAsciiCharacter'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' skipTrivia'
    Parameter
      Identifier: 'text'
      StringKeyword
    Parameter
      Identifier: ' pos'
      NumberKeyword
    Parameter
      Identifier: ' stopAfterLineBreak'
      QuestionToken
      BooleanKeyword
    Parameter
      Identifier: ' stopAtComments'
      QuestionToken
      BooleanKeyword
    Parameter
      Identifier: ' inJSDoc'
      QuestionToken
      BooleanKeyword
    NumberKeyword
    Block
      IfStatement
        CallExpression
          Identifier: 'positionIsSynthesized'
          Identifier: 'pos'
        Block
          ReturnStatement
            Identifier: ' pos'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' canConsumeStar'
            FalseKeyword
      WhileStatement
        TrueKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' ch'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' text'
                    Identifier: 'charCodeAt'
                  Identifier: 'pos'
          SwitchStatement
            Identifier: 'ch'
            CaseBlock
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'carriageReturn'
                IfStatement
                  BinaryExpression
                    CallExpression
                      PropertyAccessExpression
                        Identifier: 'text'
                        Identifier: 'charCodeAt'
                      BinaryExpression
                        Identifier: 'pos'
                        PlusToken
                        NumericLiteral
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'lineFeed'
                  Block
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'lineFeed'
                ExpressionStatement
                  PostfixUnaryExpression
                    Identifier: '
                pos'
                IfStatement
                  Identifier: 'stopAfterLineBreak'
                  Block
                    ReturnStatement
                      Identifier: ' pos'
                ExpressionStatement
                  BinaryExpression
                    Identifier: '
                canConsumeStar'
                    EqualsToken
                    PrefixUnaryExpression
                      PrefixUnaryExpression
                        Identifier: 'inJSDoc'
                ContinueStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'tab'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'verticalTab'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'formFeed'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'space'
                ExpressionStatement
                  PostfixUnaryExpression
                    Identifier: '
                pos'
                ContinueStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'slash'
                IfStatement
                  Identifier: 'stopAtComments'
                  Block
                    BreakStatement
                IfStatement
                  BinaryExpression
                    CallExpression
                      PropertyAccessExpression
                        Identifier: 'text'
                        Identifier: 'charCodeAt'
                      BinaryExpression
                        Identifier: 'pos'
                        PlusToken
                        NumericLiteral
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'slash'
                  Block
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    pos'
                        PlusEqualsToken
                        NumericLiteral
                    WhileStatement
                      BinaryExpression
                        Identifier: 'pos'
                        LessThanToken
                        PropertyAccessExpression
                          Identifier: ' text'
                          Identifier: 'length'
                      Block
                        IfStatement
                          CallExpression
                            Identifier: 'isLineBreak'
                            CallExpression
                              PropertyAccessExpression
                                Identifier: 'text'
                                Identifier: 'charCodeAt'
                              Identifier: 'pos'
                          Block
                            BreakStatement
                        ExpressionStatement
                          PostfixUnaryExpression
                            Identifier: '
                        pos'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    canConsumeStar'
                        EqualsToken
                        FalseKeyword
                    ContinueStatement
                IfStatement
                  BinaryExpression
                    CallExpression
                      PropertyAccessExpression
                        Identifier: 'text'
                        Identifier: 'charCodeAt'
                      BinaryExpression
                        Identifier: 'pos'
                        PlusToken
                        NumericLiteral
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'asterisk'
                  Block
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    pos'
                        PlusEqualsToken
                        NumericLiteral
                    WhileStatement
                      BinaryExpression
                        Identifier: 'pos'
                        LessThanToken
                        PropertyAccessExpression
                          Identifier: ' text'
                          Identifier: 'length'
                      Block
                        IfStatement
                          BinaryExpression
                            BinaryExpression
                              CallExpression
                                PropertyAccessExpression
                                  Identifier: 'text'
                                  Identifier: 'charCodeAt'
                                Identifier: 'pos'
                              EqualsEqualsEqualsToken
                              PropertyAccessExpression
                                Identifier: ' CharacterCodes'
                                Identifier: 'asterisk'
                            AmpersandAmpersandToken
                            BinaryExpression
                              CallExpression
                                PropertyAccessExpression
                                  Identifier: ' text'
                                  Identifier: 'charCodeAt'
                                BinaryExpression
                                  Identifier: 'pos'
                                  PlusToken
                                  NumericLiteral
                              EqualsEqualsEqualsToken
                              PropertyAccessExpression
                                Identifier: ' CharacterCodes'
                                Identifier: 'slash'
                          Block
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                            pos'
                                PlusEqualsToken
                                NumericLiteral
                            BreakStatement
                        ExpressionStatement
                          PostfixUnaryExpression
                            Identifier: '
                        pos'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    canConsumeStar'
                        EqualsToken
                        FalseKeyword
                    ContinueStatement
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'lessThan'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'bar'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'equals'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'greaterThan'
                IfStatement
                  CallExpression
                    Identifier: 'isConflictMarkerTrivia'
                    Identifier: 'text'
                    Identifier: ' pos'
                  Block
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    pos'
                        EqualsToken
                        CallExpression
                          Identifier: ' scanConflictMarkerTrivia'
                          Identifier: 'text'
                          Identifier: ' pos'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    canConsumeStar'
                        EqualsToken
                        FalseKeyword
                    ContinueStatement
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'hash'
                IfStatement
                  BinaryExpression
                    BinaryExpression
                      Identifier: 'pos'
                      EqualsEqualsEqualsToken
                      NumericLiteral
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: ' isShebangTrivia'
                      Identifier: 'text'
                      Identifier: ' pos'
                  Block
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    pos'
                        EqualsToken
                        CallExpression
                          Identifier: ' scanShebangTrivia'
                          Identifier: 'text'
                          Identifier: ' pos'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    canConsumeStar'
                        EqualsToken
                        FalseKeyword
                    ContinueStatement
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'asterisk'
                IfStatement
                  Identifier: 'canConsumeStar'
                  Block
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    canConsumeStar'
                        EqualsToken
                        FalseKeyword
                    ContinueStatement
                BreakStatement
              DefaultClause
                IfStatement
                  BinaryExpression
                    BinaryExpression
                      Identifier: 'ch'
                      GreaterThanToken
                      PropertyAccessExpression
                        Identifier: ' CharacterCodes'
                        Identifier: 'maxAsciiCharacter'
                    AmpersandAmpersandToken
                    ParenthesizedExpression
                      CallExpression
                        Identifier: 'isWhiteSpaceLike'
                        Identifier: 'ch'
                  Block
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    ContinueStatement
                BreakStatement
          ReturnStatement
            Identifier: ' pos'
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' mergeConflictMarkerLength'
        PropertyAccessExpression
          StringLiteral
          Identifier: 'length'
  FunctionDeclaration
    Identifier: ' isConflictMarkerTrivia'
    Parameter
      Identifier: 'text'
      StringKeyword
    Parameter
      Identifier: ' pos'
      NumberKeyword
    Block
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            Identifier: '
    Debug'
            Identifier: 'assert'
          BinaryExpression
            Identifier: 'pos'
            GreaterThanEqualsToken
            NumericLiteral
      IfStatement
        BinaryExpression
          BinaryExpression
            Identifier: 'pos'
            EqualsEqualsEqualsToken
            NumericLiteral
          BarBarToken
          CallExpression
            Identifier: ' isLineBreak'
            CallExpression
              PropertyAccessExpression
                Identifier: 'text'
                Identifier: 'charCodeAt'
              BinaryExpression
                Identifier: 'pos'
                MinusToken
                NumericLiteral
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' ch'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' text'
                    Identifier: 'charCodeAt'
                  Identifier: 'pos'
          IfStatement
            BinaryExpression
              ParenthesizedExpression
                BinaryExpression
                  Identifier: 'pos'
                  PlusToken
                  Identifier: ' mergeConflictMarkerLength'
              LessThanToken
              PropertyAccessExpression
                Identifier: ' text'
                Identifier: 'length'
            Block
              ForStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' i'
                    NumericLiteral
                BinaryExpression
                  Identifier: ' i'
                  LessThanToken
                  Identifier: ' mergeConflictMarkerLength'
                PostfixUnaryExpression
                  Identifier: ' i'
                Block
                  IfStatement
                    BinaryExpression
                      CallExpression
                        PropertyAccessExpression
                          Identifier: 'text'
                          Identifier: 'charCodeAt'
                        BinaryExpression
                          Identifier: 'pos'
                          PlusToken
                          Identifier: ' i'
                      ExclamationEqualsEqualsToken
                      Identifier: ' ch'
                    Block
                      ReturnStatement
                        FalseKeyword
              ReturnStatement
                BinaryExpression
                  BinaryExpression
                    Identifier: ' ch'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'equals'
                  BarBarToken
                  BinaryExpression
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                text'
                        Identifier: 'charCodeAt'
                      BinaryExpression
                        Identifier: 'pos'
                        PlusToken
                        Identifier: ' mergeConflictMarkerLength'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'space'
      ReturnStatement
        FalseKeyword
  FunctionDeclaration
    Identifier: ' scanConflictMarkerTrivia'
    Parameter
      Identifier: 'text'
      StringKeyword
    Parameter
      Identifier: ' pos'
      NumberKeyword
    Parameter
      Identifier: ' error'
      QuestionToken
      FunctionType
        Parameter
          Identifier: 'diag'
          TypeReference
            Identifier: ' DiagnosticMessage'
        Parameter
          Identifier: ' pos'
          QuestionToken
          NumberKeyword
        Parameter
          Identifier: ' len'
          QuestionToken
          NumberKeyword
        VoidKeyword
    Block
      IfStatement
        Identifier: 'error'
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        error'
              PropertyAccessExpression
                Identifier: 'Diagnostics'
                Identifier: 'Merge_conflict_marker_encountered'
              Identifier: ' pos'
              Identifier: ' mergeConflictMarkerLength'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' ch'
            CallExpression
              PropertyAccessExpression
                Identifier: ' text'
                Identifier: 'charCodeAt'
              Identifier: 'pos'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' len'
            PropertyAccessExpression
              Identifier: ' text'
              Identifier: 'length'
      IfStatement
        BinaryExpression
          BinaryExpression
            Identifier: 'ch'
            EqualsEqualsEqualsToken
            PropertyAccessExpression
              Identifier: ' CharacterCodes'
              Identifier: 'lessThan'
          BarBarToken
          BinaryExpression
            Identifier: ' ch'
            EqualsEqualsEqualsToken
            PropertyAccessExpression
              Identifier: ' CharacterCodes'
              Identifier: 'greaterThan'
        Block
          WhileStatement
            BinaryExpression
              BinaryExpression
                Identifier: 'pos'
                LessThanToken
                Identifier: ' len'
              AmpersandAmpersandToken
              PrefixUnaryExpression
                CallExpression
                  Identifier: 'isLineBreak'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: 'text'
                      Identifier: 'charCodeAt'
                    Identifier: 'pos'
            Block
              ExpressionStatement
                PostfixUnaryExpression
                  Identifier: '
            pos'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        Debug'
                Identifier: 'assert'
              BinaryExpression
                BinaryExpression
                  Identifier: 'ch'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'bar'
                BarBarToken
                BinaryExpression
                  Identifier: ' ch'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'equals'
          WhileStatement
            BinaryExpression
              Identifier: 'pos'
              LessThanToken
              Identifier: ' len'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' currentChar'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' text'
                        Identifier: 'charCodeAt'
                      Identifier: 'pos'
              IfStatement
                BinaryExpression
                  BinaryExpression
                    ParenthesizedExpression
                      BinaryExpression
                        BinaryExpression
                          Identifier: 'currentChar'
                          EqualsEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' CharacterCodes'
                            Identifier: 'equals'
                        BarBarToken
                        BinaryExpression
                          Identifier: ' currentChar'
                          EqualsEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' CharacterCodes'
                            Identifier: 'greaterThan'
                    AmpersandAmpersandToken
                    BinaryExpression
                      Identifier: ' currentChar'
                      ExclamationEqualsEqualsToken
                      Identifier: ' ch'
                  AmpersandAmpersandToken
                  CallExpression
                    Identifier: ' isConflictMarkerTrivia'
                    Identifier: 'text'
                    Identifier: ' pos'
                Block
                  BreakStatement
              ExpressionStatement
                PostfixUnaryExpression
                  Identifier: '

            pos'
      ReturnStatement
        Identifier: ' pos'
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' shebangTriviaRegex'
        RegularExpressionLiteral
  FunctionDeclaration
    Identifier: ' isShebangTrivia'
    Parameter
      Identifier: 'text'
      StringKeyword
    Parameter
      Identifier: ' pos'
      NumberKeyword
    Block
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            Identifier: '
    // Shebangs check must only be done at the start of the file
    Debug'
            Identifier: 'assert'
          BinaryExpression
            Identifier: 'pos'
            EqualsEqualsEqualsToken
            NumericLiteral
      ReturnStatement
        CallExpression
          PropertyAccessExpression
            Identifier: ' shebangTriviaRegex'
            Identifier: 'test'
          Identifier: 'text'
  FunctionDeclaration
    Identifier: ' scanShebangTrivia'
    Parameter
      Identifier: 'text'
      StringKeyword
    Parameter
      Identifier: ' pos'
      NumberKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' shebang'
            ElementAccessExpression
              NonNullExpression
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' shebangTriviaRegex'
                    Identifier: 'exec'
                  Identifier: 'text'
              NumericLiteral
      ExpressionStatement
        BinaryExpression
          Identifier: '
    pos'
          EqualsToken
          BinaryExpression
            Identifier: ' pos'
            PlusToken
            PropertyAccessExpression
              Identifier: ' shebang'
              Identifier: 'length'
      ReturnStatement
        Identifier: ' pos'
  FunctionDeclaration
    Identifier: ' iterateCommentRanges'
    TypeParameter
      Identifier: 'T'
    TypeParameter
      Identifier: ' U'
    Parameter
      Identifier: 'reduce'
      BooleanKeyword
    Parameter
      Identifier: ' text'
      StringKeyword
    Parameter
      Identifier: ' pos'
      NumberKeyword
    Parameter
      Identifier: ' trailing'
      BooleanKeyword
    Parameter
      Identifier: ' cb'
      FunctionType
        Parameter
          Identifier: 'pos'
          NumberKeyword
        Parameter
          Identifier: ' end'
          NumberKeyword
        Parameter
          Identifier: ' kind'
          TypeReference
            Identifier: ' CommentKind'
        Parameter
          Identifier: ' hasTrailingNewLine'
          BooleanKeyword
        Parameter
          Identifier: ' state'
          TypeReference
            Identifier: ' T'
        Parameter
          Identifier: ' memo'
          UnionType
            TypeReference
              Identifier: ' U'
            UndefinedKeyword
        TypeReference
          Identifier: ' U'
    Parameter
      Identifier: ' state'
      TypeReference
        Identifier: ' T'
    Parameter
      Identifier: ' initial'
      QuestionToken
      TypeReference
        Identifier: ' U'
    UnionType
      TypeReference
        Identifier: ' U'
      UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' pendingPos'
            ExclamationToken
            NumberKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' pendingEnd'
            ExclamationToken
            NumberKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' pendingKind'
            ExclamationToken
            TypeReference
              Identifier: ' CommentKind'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' pendingHasTrailingNewLine'
            ExclamationToken
            BooleanKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' hasPendingCommentRange'
            FalseKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' collecting'
            Identifier: ' trailing'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' accumulator'
            Identifier: ' initial'
      IfStatement
        BinaryExpression
          Identifier: 'pos'
          EqualsEqualsEqualsToken
          NumericLiteral
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        collecting'
              EqualsToken
              TrueKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' shebang'
                CallExpression
                  Identifier: ' getShebang'
                  Identifier: 'text'
          IfStatement
            Identifier: 'shebang'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            pos'
                  EqualsToken
                  PropertyAccessExpression
                    Identifier: ' shebang'
                    Identifier: 'length'
      LabeledStatement
        Identifier: '
    scan'
        WhileStatement
          BinaryExpression
            BinaryExpression
              Identifier: 'pos'
              GreaterThanEqualsToken
              NumericLiteral
            AmpersandAmpersandToken
            BinaryExpression
              Identifier: ' pos'
              LessThanToken
              PropertyAccessExpression
                Identifier: ' text'
                Identifier: 'length'
          Block
            VariableStatement
              VariableDeclarationList
                VariableDeclaration
                  Identifier: ' ch'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' text'
                      Identifier: 'charCodeAt'
                    Identifier: 'pos'
            SwitchStatement
              Identifier: 'ch'
              CaseBlock
                CaseClause
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'carriageReturn'
                  IfStatement
                    BinaryExpression
                      CallExpression
                        PropertyAccessExpression
                          Identifier: 'text'
                          Identifier: 'charCodeAt'
                        BinaryExpression
                          Identifier: 'pos'
                          PlusToken
                          NumericLiteral
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' CharacterCodes'
                        Identifier: 'lineFeed'
                    Block
                      ExpressionStatement
                        PostfixUnaryExpression
                          Identifier: '
                    pos'
                CaseClause
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'lineFeed'
                  ExpressionStatement
                    PostfixUnaryExpression
                      Identifier: '
                pos'
                  IfStatement
                    Identifier: 'trailing'
                    Block
                      BreakStatement
                        Identifier: ' scan'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '

                collecting'
                      EqualsToken
                      TrueKeyword
                  IfStatement
                    Identifier: 'hasPendingCommentRange'
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    pendingHasTrailingNewLine'
                          EqualsToken
                          TrueKeyword
                  ContinueStatement
                CaseClause
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'tab'
                CaseClause
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'verticalTab'
                CaseClause
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'formFeed'
                CaseClause
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'space'
                  ExpressionStatement
                    PostfixUnaryExpression
                      Identifier: '
                pos'
                  ContinueStatement
                CaseClause
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'slash'
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' nextChar'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' text'
                            Identifier: 'charCodeAt'
                          BinaryExpression
                            Identifier: 'pos'
                            PlusToken
                            NumericLiteral
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' hasTrailingNewLine'
                        FalseKeyword
                  IfStatement
                    BinaryExpression
                      BinaryExpression
                        Identifier: 'nextChar'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'slash'
                      BarBarToken
                      BinaryExpression
                        Identifier: ' nextChar'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'asterisk'
                    Block
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' kind'
                            ConditionalExpression
                              BinaryExpression
                                Identifier: ' nextChar'
                                EqualsEqualsEqualsToken
                                PropertyAccessExpression
                                  Identifier: ' CharacterCodes'
                                  Identifier: 'slash'
                              QuestionToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'SingleLineCommentTrivia'
                              ColonToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'MultiLineCommentTrivia'
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' startPos'
                            Identifier: ' pos'
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    pos'
                          PlusEqualsToken
                          NumericLiteral
                      IfStatement
                        BinaryExpression
                          Identifier: 'nextChar'
                          EqualsEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' CharacterCodes'
                            Identifier: 'slash'
                        Block
                          WhileStatement
                            BinaryExpression
                              Identifier: 'pos'
                              LessThanToken
                              PropertyAccessExpression
                                Identifier: ' text'
                                Identifier: 'length'
                            Block
                              IfStatement
                                CallExpression
                                  Identifier: 'isLineBreak'
                                  CallExpression
                                    PropertyAccessExpression
                                      Identifier: 'text'
                                      Identifier: 'charCodeAt'
                                    Identifier: 'pos'
                                Block
                                  ExpressionStatement
                                    BinaryExpression
                                      Identifier: '
                                hasTrailingNewLine'
                                      EqualsToken
                                      TrueKeyword
                                  BreakStatement
                              ExpressionStatement
                                PostfixUnaryExpression
                                  Identifier: '
                            pos'
                        Block
                          WhileStatement
                            BinaryExpression
                              Identifier: 'pos'
                              LessThanToken
                              PropertyAccessExpression
                                Identifier: ' text'
                                Identifier: 'length'
                            Block
                              IfStatement
                                BinaryExpression
                                  BinaryExpression
                                    CallExpression
                                      PropertyAccessExpression
                                        Identifier: 'text'
                                        Identifier: 'charCodeAt'
                                      Identifier: 'pos'
                                    EqualsEqualsEqualsToken
                                    PropertyAccessExpression
                                      Identifier: ' CharacterCodes'
                                      Identifier: 'asterisk'
                                  AmpersandAmpersandToken
                                  BinaryExpression
                                    CallExpression
                                      PropertyAccessExpression
                                        Identifier: ' text'
                                        Identifier: 'charCodeAt'
                                      BinaryExpression
                                        Identifier: 'pos'
                                        PlusToken
                                        NumericLiteral
                                    EqualsEqualsEqualsToken
                                    PropertyAccessExpression
                                      Identifier: ' CharacterCodes'
                                      Identifier: 'slash'
                                Block
                                  ExpressionStatement
                                    BinaryExpression
                                      Identifier: '
                                pos'
                                      PlusEqualsToken
                                      NumericLiteral
                                  BreakStatement
                              ExpressionStatement
                                PostfixUnaryExpression
                                  Identifier: '
                            pos'
                      IfStatement
                        Identifier: 'collecting'
                        Block
                          IfStatement
                            Identifier: 'hasPendingCommentRange'
                            Block
                              ExpressionStatement
                                BinaryExpression
                                  Identifier: '
                            accumulator'
                                  EqualsToken
                                  CallExpression
                                    Identifier: ' cb'
                                    Identifier: 'pendingPos'
                                    Identifier: ' pendingEnd'
                                    Identifier: ' pendingKind'
                                    Identifier: ' pendingHasTrailingNewLine'
                                    Identifier: ' state'
                                    Identifier: ' accumulator'
                              IfStatement
                                BinaryExpression
                                  PrefixUnaryExpression
                                    Identifier: 'reduce'
                                  AmpersandAmpersandToken
                                  Identifier: ' accumulator'
                                Block
                                  ReturnStatement
                                    Identifier: ' accumulator'
                          ExpressionStatement
                            BinaryExpression
                              Identifier: '

                        pendingPos'
                              EqualsToken
                              Identifier: ' startPos'
                          ExpressionStatement
                            BinaryExpression
                              Identifier: '
                        pendingEnd'
                              EqualsToken
                              Identifier: ' pos'
                          ExpressionStatement
                            BinaryExpression
                              Identifier: '
                        pendingKind'
                              EqualsToken
                              Identifier: ' kind'
                          ExpressionStatement
                            BinaryExpression
                              Identifier: '
                        pendingHasTrailingNewLine'
                              EqualsToken
                              Identifier: ' hasTrailingNewLine'
                          ExpressionStatement
                            BinaryExpression
                              Identifier: '
                        hasPendingCommentRange'
                              EqualsToken
                              TrueKeyword
                      ContinueStatement
                  BreakStatement
                    Identifier: ' scan'
                DefaultClause
                  IfStatement
                    BinaryExpression
                      BinaryExpression
                        Identifier: 'ch'
                        GreaterThanToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'maxAsciiCharacter'
                      AmpersandAmpersandToken
                      ParenthesizedExpression
                        CallExpression
                          Identifier: 'isWhiteSpaceLike'
                          Identifier: 'ch'
                    Block
                      IfStatement
                        BinaryExpression
                          Identifier: 'hasPendingCommentRange'
                          AmpersandAmpersandToken
                          CallExpression
                            Identifier: ' isLineBreak'
                            Identifier: 'ch'
                        Block
                          ExpressionStatement
                            BinaryExpression
                              Identifier: '
                        pendingHasTrailingNewLine'
                              EqualsToken
                              TrueKeyword
                      ExpressionStatement
                        PostfixUnaryExpression
                          Identifier: '
                    pos'
                      ContinueStatement
                  BreakStatement
                    Identifier: ' scan'
      IfStatement
        Identifier: 'hasPendingCommentRange'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        accumulator'
              EqualsToken
              CallExpression
                Identifier: ' cb'
                Identifier: 'pendingPos'
                Identifier: ' pendingEnd'
                Identifier: ' pendingKind'
                Identifier: ' pendingHasTrailingNewLine'
                Identifier: ' state'
                Identifier: ' accumulator'
      ReturnStatement
        Identifier: ' accumulator'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' forEachLeadingCommentRange'
    TypeParameter
      Identifier: 'U'
    Parameter
      Identifier: 'text'
      StringKeyword
    Parameter
      Identifier: ' pos'
      NumberKeyword
    Parameter
      Identifier: ' cb'
      FunctionType
        Parameter
          Identifier: 'pos'
          NumberKeyword
        Parameter
          Identifier: ' end'
          NumberKeyword
        Parameter
          Identifier: ' kind'
          TypeReference
            Identifier: ' CommentKind'
        Parameter
          Identifier: ' hasTrailingNewLine'
          BooleanKeyword
        TypeReference
          Identifier: ' U'
    UnionType
      TypeReference
        Identifier: ' U'
      UndefinedKeyword
  FunctionDeclaration
    ExportKeyword
    Identifier: ' forEachLeadingCommentRange'
    TypeParameter
      Identifier: 'T'
    TypeParameter
      Identifier: ' U'
    Parameter
      Identifier: 'text'
      StringKeyword
    Parameter
      Identifier: ' pos'
      NumberKeyword
    Parameter
      Identifier: ' cb'
      FunctionType
        Parameter
          Identifier: 'pos'
          NumberKeyword
        Parameter
          Identifier: ' end'
          NumberKeyword
        Parameter
          Identifier: ' kind'
          TypeReference
            Identifier: ' CommentKind'
        Parameter
          Identifier: ' hasTrailingNewLine'
          BooleanKeyword
        Parameter
          Identifier: ' state'
          TypeReference
            Identifier: ' T'
        TypeReference
          Identifier: ' U'
    Parameter
      Identifier: ' state'
      TypeReference
        Identifier: ' T'
    UnionType
      TypeReference
        Identifier: ' U'
      UndefinedKeyword
  FunctionDeclaration
    ExportKeyword
    Identifier: ' forEachLeadingCommentRange'
    TypeParameter
      Identifier: 'T'
    TypeParameter
      Identifier: ' U'
    Parameter
      Identifier: 'text'
      StringKeyword
    Parameter
      Identifier: ' pos'
      NumberKeyword
    Parameter
      Identifier: ' cb'
      FunctionType
        Parameter
          Identifier: 'pos'
          NumberKeyword
        Parameter
          Identifier: ' end'
          NumberKeyword
        Parameter
          Identifier: ' kind'
          TypeReference
            Identifier: ' CommentKind'
        Parameter
          Identifier: ' hasTrailingNewLine'
          BooleanKeyword
        Parameter
          Identifier: ' state'
          TypeReference
            Identifier: ' T'
        TypeReference
          Identifier: ' U'
    Parameter
      Identifier: ' state'
      QuestionToken
      TypeReference
        Identifier: ' T'
    UnionType
      TypeReference
        Identifier: ' U'
      UndefinedKeyword
    Block
      ReturnStatement
        CallExpression
          Identifier: ' iterateCommentRanges'
          FalseKeyword
          Identifier: ' text'
          Identifier: ' pos'
          FalseKeyword
          Identifier: ' cb'
          NonNullExpression
            Identifier: ' state'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' forEachTrailingCommentRange'
    TypeParameter
      Identifier: 'U'
    Parameter
      Identifier: 'text'
      StringKeyword
    Parameter
      Identifier: ' pos'
      NumberKeyword
    Parameter
      Identifier: ' cb'
      FunctionType
        Parameter
          Identifier: 'pos'
          NumberKeyword
        Parameter
          Identifier: ' end'
          NumberKeyword
        Parameter
          Identifier: ' kind'
          TypeReference
            Identifier: ' CommentKind'
        Parameter
          Identifier: ' hasTrailingNewLine'
          BooleanKeyword
        TypeReference
          Identifier: ' U'
    UnionType
      TypeReference
        Identifier: ' U'
      UndefinedKeyword
  FunctionDeclaration
    ExportKeyword
    Identifier: ' forEachTrailingCommentRange'
    TypeParameter
      Identifier: 'T'
    TypeParameter
      Identifier: ' U'
    Parameter
      Identifier: 'text'
      StringKeyword
    Parameter
      Identifier: ' pos'
      NumberKeyword
    Parameter
      Identifier: ' cb'
      FunctionType
        Parameter
          Identifier: 'pos'
          NumberKeyword
        Parameter
          Identifier: ' end'
          NumberKeyword
        Parameter
          Identifier: ' kind'
          TypeReference
            Identifier: ' CommentKind'
        Parameter
          Identifier: ' hasTrailingNewLine'
          BooleanKeyword
        Parameter
          Identifier: ' state'
          TypeReference
            Identifier: ' T'
        TypeReference
          Identifier: ' U'
    Parameter
      Identifier: ' state'
      TypeReference
        Identifier: ' T'
    UnionType
      TypeReference
        Identifier: ' U'
      UndefinedKeyword
  FunctionDeclaration
    ExportKeyword
    Identifier: ' forEachTrailingCommentRange'
    TypeParameter
      Identifier: 'T'
    TypeParameter
      Identifier: ' U'
    Parameter
      Identifier: 'text'
      StringKeyword
    Parameter
      Identifier: ' pos'
      NumberKeyword
    Parameter
      Identifier: ' cb'
      FunctionType
        Parameter
          Identifier: 'pos'
          NumberKeyword
        Parameter
          Identifier: ' end'
          NumberKeyword
        Parameter
          Identifier: ' kind'
          TypeReference
            Identifier: ' CommentKind'
        Parameter
          Identifier: ' hasTrailingNewLine'
          BooleanKeyword
        Parameter
          Identifier: ' state'
          TypeReference
            Identifier: ' T'
        TypeReference
          Identifier: ' U'
    Parameter
      Identifier: ' state'
      QuestionToken
      TypeReference
        Identifier: ' T'
    UnionType
      TypeReference
        Identifier: ' U'
      UndefinedKeyword
    Block
      ReturnStatement
        CallExpression
          Identifier: ' iterateCommentRanges'
          FalseKeyword
          Identifier: ' text'
          Identifier: ' pos'
          TrueKeyword
          Identifier: ' cb'
          NonNullExpression
            Identifier: ' state'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' reduceEachLeadingCommentRange'
    TypeParameter
      Identifier: 'T'
    TypeParameter
      Identifier: ' U'
    Parameter
      Identifier: 'text'
      StringKeyword
    Parameter
      Identifier: ' pos'
      NumberKeyword
    Parameter
      Identifier: ' cb'
      FunctionType
        Parameter
          Identifier: 'pos'
          NumberKeyword
        Parameter
          Identifier: ' end'
          NumberKeyword
        Parameter
          Identifier: ' kind'
          TypeReference
            Identifier: ' CommentKind'
        Parameter
          Identifier: ' hasTrailingNewLine'
          BooleanKeyword
        Parameter
          Identifier: ' state'
          TypeReference
            Identifier: ' T'
        TypeReference
          Identifier: ' U'
    Parameter
      Identifier: ' state'
      TypeReference
        Identifier: ' T'
    Parameter
      Identifier: ' initial'
      TypeReference
        Identifier: ' U'
    UnionType
      TypeReference
        Identifier: ' U'
      UndefinedKeyword
    Block
      ReturnStatement
        CallExpression
          Identifier: ' iterateCommentRanges'
          TrueKeyword
          Identifier: ' text'
          Identifier: ' pos'
          FalseKeyword
          Identifier: ' cb'
          Identifier: ' state'
          Identifier: ' initial'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' reduceEachTrailingCommentRange'
    TypeParameter
      Identifier: 'T'
    TypeParameter
      Identifier: ' U'
    Parameter
      Identifier: 'text'
      StringKeyword
    Parameter
      Identifier: ' pos'
      NumberKeyword
    Parameter
      Identifier: ' cb'
      FunctionType
        Parameter
          Identifier: 'pos'
          NumberKeyword
        Parameter
          Identifier: ' end'
          NumberKeyword
        Parameter
          Identifier: ' kind'
          TypeReference
            Identifier: ' CommentKind'
        Parameter
          Identifier: ' hasTrailingNewLine'
          BooleanKeyword
        Parameter
          Identifier: ' state'
          TypeReference
            Identifier: ' T'
        TypeReference
          Identifier: ' U'
    Parameter
      Identifier: ' state'
      TypeReference
        Identifier: ' T'
    Parameter
      Identifier: ' initial'
      TypeReference
        Identifier: ' U'
    UnionType
      TypeReference
        Identifier: ' U'
      UndefinedKeyword
    Block
      ReturnStatement
        CallExpression
          Identifier: ' iterateCommentRanges'
          TrueKeyword
          Identifier: ' text'
          Identifier: ' pos'
          TrueKeyword
          Identifier: ' cb'
          Identifier: ' state'
          Identifier: ' initial'
  FunctionDeclaration
    Identifier: ' appendCommentRange'
    Parameter
      Identifier: 'pos'
      NumberKeyword
    Parameter
      Identifier: ' end'
      NumberKeyword
    Parameter
      Identifier: ' kind'
      TypeReference
        Identifier: ' CommentKind'
    Parameter
      Identifier: ' hasTrailingNewLine'
      BooleanKeyword
    Parameter
      Identifier: ' _state'
      AnyKeyword
    Parameter
      Identifier: ' comments'
      ArrayType
        TypeReference
          Identifier: ' CommentRange'
      ArrayLiteralExpression
    Block
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            Identifier: '
    comments'
            Identifier: 'push'
          ObjectLiteralExpression
            ShorthandPropertyAssignment
              Identifier: ' kind'
            ShorthandPropertyAssignment
              Identifier: ' pos'
            ShorthandPropertyAssignment
              Identifier: ' end'
            ShorthandPropertyAssignment
              Identifier: ' hasTrailingNewLine'
      ReturnStatement
        Identifier: ' comments'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getLeadingCommentRanges'
    Parameter
      Identifier: 'text'
      StringKeyword
    Parameter
      Identifier: ' pos'
      NumberKeyword
    UnionType
      ArrayType
        TypeReference
          Identifier: ' CommentRange'
      UndefinedKeyword
    Block
      ReturnStatement
        CallExpression
          Identifier: ' reduceEachLeadingCommentRange'
          Identifier: 'text'
          Identifier: ' pos'
          Identifier: ' appendCommentRange'
          Identifier: ' /*state*/ undefined'
          Identifier: ' /*initial*/ undefined'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getTrailingCommentRanges'
    Parameter
      Identifier: 'text'
      StringKeyword
    Parameter
      Identifier: ' pos'
      NumberKeyword
    UnionType
      ArrayType
        TypeReference
          Identifier: ' CommentRange'
      UndefinedKeyword
    Block
      ReturnStatement
        CallExpression
          Identifier: ' reduceEachTrailingCommentRange'
          Identifier: 'text'
          Identifier: ' pos'
          Identifier: ' appendCommentRange'
          Identifier: ' /*state*/ undefined'
          Identifier: ' /*initial*/ undefined'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getShebang'
    Parameter
      Identifier: 'text'
      StringKeyword
    UnionType
      StringKeyword
      UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' match'
            CallExpression
              PropertyAccessExpression
                Identifier: ' shebangTriviaRegex'
                Identifier: 'exec'
              Identifier: 'text'
      IfStatement
        Identifier: 'match'
        Block
          ReturnStatement
            ElementAccessExpression
              Identifier: ' match'
              NumericLiteral
  FunctionDeclaration
    ExportKeyword
    Identifier: ' isIdentifierStart'
    Parameter
      Identifier: 'ch'
      NumberKeyword
    Parameter
      Identifier: ' languageVersion'
      UnionType
        TypeReference
          Identifier: ' ScriptTarget'
        UndefinedKeyword
    BooleanKeyword
    Block
      ReturnStatement
        BinaryExpression
          BinaryExpression
            BinaryExpression
              CallExpression
                Identifier: ' isASCIILetter'
                Identifier: 'ch'
              BarBarToken
              BinaryExpression
                Identifier: ' ch'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: '$'
            BarBarToken
            BinaryExpression
              Identifier: ' ch'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' CharacterCodes'
                Identifier: '_'
          BarBarToken
          BinaryExpression
            BinaryExpression
              Identifier: '
        ch'
              GreaterThanToken
              PropertyAccessExpression
                Identifier: ' CharacterCodes'
                Identifier: 'maxAsciiCharacter'
            AmpersandAmpersandToken
            CallExpression
              Identifier: ' isUnicodeIdentifierStart'
              Identifier: 'ch'
              Identifier: ' languageVersion'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' isIdentifierPart'
    Parameter
      Identifier: 'ch'
      NumberKeyword
    Parameter
      Identifier: ' languageVersion'
      UnionType
        TypeReference
          Identifier: ' ScriptTarget'
        UndefinedKeyword
    Parameter
      Identifier: ' identifierVariant'
      QuestionToken
      TypeReference
        Identifier: ' LanguageVariant'
    BooleanKeyword
    Block
      ReturnStatement
        BinaryExpression
          BinaryExpression
            BinaryExpression
              CallExpression
                Identifier: ' isWordCharacter'
                Identifier: 'ch'
              BarBarToken
              BinaryExpression
                Identifier: ' ch'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: '$'
            BarBarToken
            ParenthesizedExpression
              ConditionalExpression
                BinaryExpression
                  Identifier: 'identifierVariant'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' LanguageVariant'
                    Identifier: 'JSX'
                QuestionToken
                ParenthesizedExpression
                  BinaryExpression
                    BinaryExpression
                      Identifier: 'ch'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' CharacterCodes'
                        Identifier: 'minus'
                    BarBarToken
                    BinaryExpression
                      Identifier: ' ch'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' CharacterCodes'
                        Identifier: 'colon'
                ColonToken
                FalseKeyword
          BarBarToken
          BinaryExpression
            BinaryExpression
              Identifier: '
        ch'
              GreaterThanToken
              PropertyAccessExpression
                Identifier: ' CharacterCodes'
                Identifier: 'maxAsciiCharacter'
            AmpersandAmpersandToken
            CallExpression
              Identifier: ' isUnicodeIdentifierPart'
              Identifier: 'ch'
              Identifier: ' languageVersion'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' isIdentifierText'
    Parameter
      Identifier: 'name'
      StringKeyword
    Parameter
      Identifier: ' languageVersion'
      UnionType
        TypeReference
          Identifier: ' ScriptTarget'
        UndefinedKeyword
    Parameter
      Identifier: ' identifierVariant'
      QuestionToken
      TypeReference
        Identifier: ' LanguageVariant'
    BooleanKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' ch'
            CallExpression
              Identifier: ' codePointAt'
              Identifier: 'name'
              NumericLiteral
      IfStatement
        PrefixUnaryExpression
          CallExpression
            Identifier: 'isIdentifierStart'
            Identifier: 'ch'
            Identifier: ' languageVersion'
        Block
          ReturnStatement
            FalseKeyword
      ForStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' i'
            CallExpression
              Identifier: ' charSize'
              Identifier: 'ch'
        BinaryExpression
          Identifier: ' i'
          LessThanToken
          PropertyAccessExpression
            Identifier: ' name'
            Identifier: 'length'
        BinaryExpression
          Identifier: ' i'
          PlusEqualsToken
          CallExpression
            Identifier: ' charSize'
            Identifier: 'ch'
        Block
          IfStatement
            PrefixUnaryExpression
              CallExpression
                Identifier: 'isIdentifierPart'
                BinaryExpression
                  Identifier: 'ch'
                  EqualsToken
                  CallExpression
                    Identifier: ' codePointAt'
                    Identifier: 'name'
                    Identifier: ' i'
                Identifier: ' languageVersion'
                Identifier: ' identifierVariant'
            Block
              ReturnStatement
                FalseKeyword
      ReturnStatement
        TrueKeyword
  EnumDeclaration
    ConstKeyword
    Identifier: ' EscapeSequenceScanningFlags'
    EnumMember
      Identifier: '
    String'
      BinaryExpression
        NumericLiteral
        LessThanLessThanToken
        NumericLiteral
    EnumMember
      Identifier: '
    ReportErrors'
      BinaryExpression
        NumericLiteral
        LessThanLessThanToken
        NumericLiteral
    EnumMember
      Identifier: '

    RegularExpression'
      BinaryExpression
        NumericLiteral
        LessThanLessThanToken
        NumericLiteral
    EnumMember
      Identifier: '
    AnnexB'
      BinaryExpression
        NumericLiteral
        LessThanLessThanToken
        NumericLiteral
    EnumMember
      Identifier: '
    AnyUnicodeMode'
      BinaryExpression
        NumericLiteral
        LessThanLessThanToken
        NumericLiteral
    EnumMember
      Identifier: '
    AtomEscape'
      BinaryExpression
        NumericLiteral
        LessThanLessThanToken
        NumericLiteral
    EnumMember
      Identifier: '

    ReportInvalidEscapeErrors'
      BinaryExpression
        Identifier: ' RegularExpression'
        BarToken
        Identifier: ' ReportErrors'
    EnumMember
      Identifier: '
    AllowExtendedUnicodeEscape'
      BinaryExpression
        Identifier: ' String'
        BarToken
        Identifier: ' AnyUnicodeMode'
  EnumDeclaration
    ConstKeyword
    Identifier: ' ClassSetExpressionType'
    EnumMember
      Identifier: '
    Unknown'
    EnumMember
      Identifier: '
    ClassUnion'
    EnumMember
      Identifier: '
    ClassIntersection'
    EnumMember
      Identifier: '
    ClassSubtraction'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' createScanner'
    Parameter
      Identifier: '
    languageVersion'
      TypeReference
        Identifier: ' ScriptTarget'
    Parameter
      Identifier: '
    skipTrivia'
      BooleanKeyword
    Parameter
      Identifier: '
    languageVariant'
      TypeReference
        Identifier: ' LanguageVariant'
      PropertyAccessExpression
        Identifier: ' LanguageVariant'
        Identifier: 'Standard'
    Parameter
      Identifier: '
    textInitial'
      QuestionToken
      StringKeyword
    Parameter
      Identifier: '
    onError'
      QuestionToken
      TypeReference
        Identifier: ' ErrorCallback'
    Parameter
      Identifier: '
    start'
      QuestionToken
      NumberKeyword
    Parameter
      Identifier: '
    length'
      QuestionToken
      NumberKeyword
    TypeReference
      Identifier: ' Scanner'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' text'
            NonNullExpression
              Identifier: ' textInitial'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' pos'
            NumberKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' end'
            NumberKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' fullStartPos'
            NumberKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' tokenStart'
            NumberKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' token'
            TypeReference
              Identifier: ' SyntaxKind'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' tokenValue'
            ExclamationToken
            StringKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' tokenFlags'
            TypeReference
              Identifier: ' TokenFlags'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' commentDirectives'
            UnionType
              ArrayType
                TypeReference
                  Identifier: ' CommentDirective'
              UndefinedKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' skipJsDocLeadingAsterisks'
            NumericLiteral
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' scriptKind'
            PropertyAccessExpression
              Identifier: ' ScriptKind'
              Identifier: 'Unknown'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' jsDocParsingMode'
            PropertyAccessExpression
              Identifier: ' JSDocParsingMode'
              Identifier: 'ParseAll'
      ExpressionStatement
        CallExpression
          Identifier: '

    setText'
          Identifier: 'text'
          Identifier: ' start'
          Identifier: ' length'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' scanner'
            TypeReference
              Identifier: ' Scanner'
            ObjectLiteralExpression
              PropertyAssignment
                Identifier: '
        getTokenFullStart'
                ArrowFunction
                  EqualsGreaterThanToken
                  Identifier: ' fullStartPos'
              PropertyAssignment
                Identifier: '
        getStartPos'
                ArrowFunction
                  EqualsGreaterThanToken
                  Identifier: ' fullStartPos'
              PropertyAssignment
                Identifier: '
        getTokenEnd'
                ArrowFunction
                  EqualsGreaterThanToken
                  Identifier: ' pos'
              PropertyAssignment
                Identifier: '
        getTextPos'
                ArrowFunction
                  EqualsGreaterThanToken
                  Identifier: ' pos'
              PropertyAssignment
                Identifier: '
        getToken'
                ArrowFunction
                  EqualsGreaterThanToken
                  Identifier: ' token'
              PropertyAssignment
                Identifier: '
        getTokenStart'
                ArrowFunction
                  EqualsGreaterThanToken
                  Identifier: ' tokenStart'
              PropertyAssignment
                Identifier: '
        getTokenPos'
                ArrowFunction
                  EqualsGreaterThanToken
                  Identifier: ' tokenStart'
              PropertyAssignment
                Identifier: '
        getTokenText'
                ArrowFunction
                  EqualsGreaterThanToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' text'
                      Identifier: 'substring'
                    Identifier: 'tokenStart'
                    Identifier: ' pos'
              PropertyAssignment
                Identifier: '
        getTokenValue'
                ArrowFunction
                  EqualsGreaterThanToken
                  Identifier: ' tokenValue'
              PropertyAssignment
                Identifier: '
        hasUnicodeEscape'
                ArrowFunction
                  EqualsGreaterThanToken
                  BinaryExpression
                    ParenthesizedExpression
                      BinaryExpression
                        Identifier: 'tokenFlags'
                        AmpersandToken
                        PropertyAccessExpression
                          Identifier: ' TokenFlags'
                          Identifier: 'UnicodeEscape'
                    ExclamationEqualsEqualsToken
                    NumericLiteral
              PropertyAssignment
                Identifier: '
        hasExtendedUnicodeEscape'
                ArrowFunction
                  EqualsGreaterThanToken
                  BinaryExpression
                    ParenthesizedExpression
                      BinaryExpression
                        Identifier: 'tokenFlags'
                        AmpersandToken
                        PropertyAccessExpression
                          Identifier: ' TokenFlags'
                          Identifier: 'ExtendedUnicodeEscape'
                    ExclamationEqualsEqualsToken
                    NumericLiteral
              PropertyAssignment
                Identifier: '
        hasPrecedingLineBreak'
                ArrowFunction
                  EqualsGreaterThanToken
                  BinaryExpression
                    ParenthesizedExpression
                      BinaryExpression
                        Identifier: 'tokenFlags'
                        AmpersandToken
                        PropertyAccessExpression
                          Identifier: ' TokenFlags'
                          Identifier: 'PrecedingLineBreak'
                    ExclamationEqualsEqualsToken
                    NumericLiteral
              PropertyAssignment
                Identifier: '
        hasPrecedingJSDocComment'
                ArrowFunction
                  EqualsGreaterThanToken
                  BinaryExpression
                    ParenthesizedExpression
                      BinaryExpression
                        Identifier: 'tokenFlags'
                        AmpersandToken
                        PropertyAccessExpression
                          Identifier: ' TokenFlags'
                          Identifier: 'PrecedingJSDocComment'
                    ExclamationEqualsEqualsToken
                    NumericLiteral
              PropertyAssignment
                Identifier: '
        hasPrecedingJSDocLeadingAsterisks'
                ArrowFunction
                  EqualsGreaterThanToken
                  BinaryExpression
                    ParenthesizedExpression
                      BinaryExpression
                        Identifier: 'tokenFlags'
                        AmpersandToken
                        PropertyAccessExpression
                          Identifier: ' TokenFlags'
                          Identifier: 'PrecedingJSDocLeadingAsterisks'
                    ExclamationEqualsEqualsToken
                    NumericLiteral
              PropertyAssignment
                Identifier: '
        isIdentifier'
                ArrowFunction
                  EqualsGreaterThanToken
                  BinaryExpression
                    BinaryExpression
                      Identifier: ' token'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'Identifier'
                    BarBarToken
                    BinaryExpression
                      Identifier: ' token'
                      GreaterThanToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'LastReservedWord'
              PropertyAssignment
                Identifier: '
        isReservedWord'
                ArrowFunction
                  EqualsGreaterThanToken
                  BinaryExpression
                    BinaryExpression
                      Identifier: ' token'
                      GreaterThanEqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'FirstReservedWord'
                    AmpersandAmpersandToken
                    BinaryExpression
                      Identifier: ' token'
                      LessThanEqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'LastReservedWord'
              PropertyAssignment
                Identifier: '
        isUnterminated'
                ArrowFunction
                  EqualsGreaterThanToken
                  BinaryExpression
                    ParenthesizedExpression
                      BinaryExpression
                        Identifier: 'tokenFlags'
                        AmpersandToken
                        PropertyAccessExpression
                          Identifier: ' TokenFlags'
                          Identifier: 'Unterminated'
                    ExclamationEqualsEqualsToken
                    NumericLiteral
              PropertyAssignment
                Identifier: '
        getCommentDirectives'
                ArrowFunction
                  EqualsGreaterThanToken
                  Identifier: ' commentDirectives'
              PropertyAssignment
                Identifier: '
        getNumericLiteralFlags'
                ArrowFunction
                  EqualsGreaterThanToken
                  BinaryExpression
                    Identifier: ' tokenFlags'
                    AmpersandToken
                    PropertyAccessExpression
                      Identifier: ' TokenFlags'
                      Identifier: 'NumericLiteralFlags'
              PropertyAssignment
                Identifier: '
        getTokenFlags'
                ArrowFunction
                  EqualsGreaterThanToken
                  Identifier: ' tokenFlags'
              ShorthandPropertyAssignment
                Identifier: '
        reScanGreaterToken'
              ShorthandPropertyAssignment
                Identifier: '
        reScanAsteriskEqualsToken'
              ShorthandPropertyAssignment
                Identifier: '
        reScanSlashToken'
              ShorthandPropertyAssignment
                Identifier: '
        reScanTemplateToken'
              ShorthandPropertyAssignment
                Identifier: '
        reScanTemplateHeadOrNoSubstitutionTemplate'
              ShorthandPropertyAssignment
                Identifier: '
        scanJsxIdentifier'
              ShorthandPropertyAssignment
                Identifier: '
        scanJsxAttributeValue'
              ShorthandPropertyAssignment
                Identifier: '
        reScanJsxAttributeValue'
              ShorthandPropertyAssignment
                Identifier: '
        reScanJsxToken'
              ShorthandPropertyAssignment
                Identifier: '
        reScanLessThanToken'
              ShorthandPropertyAssignment
                Identifier: '
        reScanHashToken'
              ShorthandPropertyAssignment
                Identifier: '
        reScanQuestionToken'
              ShorthandPropertyAssignment
                Identifier: '
        reScanInvalidIdentifier'
              ShorthandPropertyAssignment
                Identifier: '
        scanJsxToken'
              ShorthandPropertyAssignment
                Identifier: '
        scanJsDocToken'
              ShorthandPropertyAssignment
                Identifier: '
        scanJSDocCommentTextToken'
              ShorthandPropertyAssignment
                Identifier: '
        scan'
              ShorthandPropertyAssignment
                Identifier: '
        getText'
              ShorthandPropertyAssignment
                Identifier: '
        clearCommentDirectives'
              ShorthandPropertyAssignment
                Identifier: '
        setText'
              ShorthandPropertyAssignment
                Identifier: '
        setScriptTarget'
              ShorthandPropertyAssignment
                Identifier: '
        setLanguageVariant'
              ShorthandPropertyAssignment
                Identifier: '
        setScriptKind'
              ShorthandPropertyAssignment
                Identifier: '
        setJSDocParsingMode'
              ShorthandPropertyAssignment
                Identifier: '
        setOnError'
              ShorthandPropertyAssignment
                Identifier: '
        resetTokenState'
              PropertyAssignment
                Identifier: '
        setTextPos'
                Identifier: ' resetTokenState'
              ShorthandPropertyAssignment
                Identifier: '
        setSkipJsDocLeadingAsterisks'
              ShorthandPropertyAssignment
                Identifier: '
        tryScan'
              ShorthandPropertyAssignment
                Identifier: '
        lookAhead'
              ShorthandPropertyAssignment
                Identifier: '
        scanRange'
      IfStatement
        PropertyAccessExpression
          Identifier: 'Debug'
          Identifier: 'isDebugging'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        Object'
                Identifier: 'defineProperty'
              Identifier: 'scanner'
              StringLiteral
              ObjectLiteralExpression
                PropertyAssignment
                  Identifier: '
            get'
                  ArrowFunction
                    EqualsGreaterThanToken
                    Block
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' text'
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' scanner'
                                Identifier: 'getText'
                      ReturnStatement
                        BinaryExpression
                          BinaryExpression
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' text'
                                Identifier: 'slice'
                              NumericLiteral
                              CallExpression
                                PropertyAccessExpression
                                  Identifier: ' scanner'
                                  Identifier: 'getTokenFullStart'
                            PlusToken
                            StringLiteral
                          PlusToken
                          CallExpression
                            PropertyAccessExpression
                              Identifier: ' text'
                              Identifier: 'slice'
                            CallExpression
                              PropertyAccessExpression
                                Identifier: 'scanner'
                                Identifier: 'getTokenFullStart'
      ReturnStatement
        Identifier: ' scanner'
      FunctionDeclaration
        Identifier: ' codePointUnchecked'
        Parameter
          Identifier: 'pos'
          NumberKeyword
        Block
          ReturnStatement
            CallExpression
              Identifier: ' codePointAt'
              Identifier: 'text'
              Identifier: ' pos'
      FunctionDeclaration
        Identifier: ' codePointChecked'
        Parameter
          Identifier: 'pos'
          NumberKeyword
        Block
          ReturnStatement
            ConditionalExpression
              BinaryExpression
                BinaryExpression
                  Identifier: ' pos'
                  GreaterThanEqualsToken
                  NumericLiteral
                AmpersandAmpersandToken
                BinaryExpression
                  Identifier: ' pos'
                  LessThanToken
                  Identifier: ' end'
              QuestionToken
              CallExpression
                Identifier: ' codePointUnchecked'
                Identifier: 'pos'
              ColonToken
              PropertyAccessExpression
                Identifier: ' CharacterCodes'
                Identifier: 'EOF'
      FunctionDeclaration
        Identifier: ' charCodeUnchecked'
        Parameter
          Identifier: 'pos'
          NumberKeyword
        Block
          ReturnStatement
            CallExpression
              PropertyAccessExpression
                Identifier: ' text'
                Identifier: 'charCodeAt'
              Identifier: 'pos'
      FunctionDeclaration
        Identifier: ' charCodeChecked'
        Parameter
          Identifier: 'pos'
          NumberKeyword
        Block
          ReturnStatement
            ConditionalExpression
              BinaryExpression
                BinaryExpression
                  Identifier: ' pos'
                  GreaterThanEqualsToken
                  NumericLiteral
                AmpersandAmpersandToken
                BinaryExpression
                  Identifier: ' pos'
                  LessThanToken
                  Identifier: ' end'
              QuestionToken
              CallExpression
                Identifier: ' charCodeUnchecked'
                Identifier: 'pos'
              ColonToken
              PropertyAccessExpression
                Identifier: ' CharacterCodes'
                Identifier: 'EOF'
      FunctionDeclaration
        Identifier: ' error'
        Parameter
          Identifier: 'message'
          TypeReference
            Identifier: ' DiagnosticMessage'
        VoidKeyword
      FunctionDeclaration
        Identifier: ' error'
        Parameter
          Identifier: 'message'
          TypeReference
            Identifier: ' DiagnosticMessage'
        Parameter
          Identifier: ' errPos'
          NumberKeyword
        Parameter
          Identifier: ' length'
          NumberKeyword
        Parameter
          Identifier: ' arg0'
          QuestionToken
          AnyKeyword
        VoidKeyword
      FunctionDeclaration
        Identifier: ' error'
        Parameter
          Identifier: 'message'
          TypeReference
            Identifier: ' DiagnosticMessage'
        Parameter
          Identifier: ' errPos'
          NumberKeyword
          Identifier: ' pos'
        Parameter
          Identifier: ' length'
          QuestionToken
          NumberKeyword
        Parameter
          Identifier: ' arg0'
          QuestionToken
          AnyKeyword
        VoidKeyword
        Block
          IfStatement
            Identifier: 'onError'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' oldPos'
                    Identifier: ' pos'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            pos'
                  EqualsToken
                  Identifier: ' errPos'
              ExpressionStatement
                CallExpression
                  Identifier: '
            onError'
                  Identifier: 'message'
                  BinaryExpression
                    Identifier: ' length'
                    BarBarToken
                    NumericLiteral
                  Identifier: ' arg0'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            pos'
                  EqualsToken
                  Identifier: ' oldPos'
      FunctionDeclaration
        Identifier: ' scanNumberFragment'
        StringKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' start'
                Identifier: ' pos'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' allowSeparator'
                FalseKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' isPreviousTokenSeparator'
                FalseKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' result'
                StringLiteral
          WhileStatement
            TrueKeyword
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' ch'
                    CallExpression
                      Identifier: ' charCodeUnchecked'
                      Identifier: 'pos'
              IfStatement
                BinaryExpression
                  Identifier: 'ch'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: '_'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                tokenFlags'
                      BarEqualsToken
                      PropertyAccessExpression
                        Identifier: ' TokenFlags'
                        Identifier: 'ContainsSeparator'
                  IfStatement
                    Identifier: 'allowSeparator'
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    allowSeparator'
                          EqualsToken
                          FalseKeyword
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    isPreviousTokenSeparator'
                          EqualsToken
                          TrueKeyword
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    result'
                          PlusEqualsToken
                          CallExpression
                            PropertyAccessExpression
                              Identifier: ' text'
                              Identifier: 'substring'
                            Identifier: 'start'
                            Identifier: ' pos'
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    tokenFlags'
                          BarEqualsToken
                          PropertyAccessExpression
                            Identifier: ' TokenFlags'
                            Identifier: 'ContainsInvalidSeparator'
                      IfStatement
                        Identifier: 'isPreviousTokenSeparator'
                        Block
                          ExpressionStatement
                            CallExpression
                              Identifier: '
                        error'
                              PropertyAccessExpression
                                Identifier: 'Diagnostics'
                                Identifier: 'Multiple_consecutive_numeric_separators_are_not_permitted'
                              Identifier: ' pos'
                              NumericLiteral
                        Block
                          ExpressionStatement
                            CallExpression
                              Identifier: '
                        error'
                              PropertyAccessExpression
                                Identifier: 'Diagnostics'
                                Identifier: 'Numeric_separators_are_not_allowed_here'
                              Identifier: ' pos'
                              NumericLiteral
                  ExpressionStatement
                    PostfixUnaryExpression
                      Identifier: '
                pos'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                start'
                      EqualsToken
                      Identifier: ' pos'
                  ContinueStatement
              IfStatement
                CallExpression
                  Identifier: 'isDigit'
                  Identifier: 'ch'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                allowSeparator'
                      EqualsToken
                      TrueKeyword
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                isPreviousTokenSeparator'
                      EqualsToken
                      FalseKeyword
                  ExpressionStatement
                    PostfixUnaryExpression
                      Identifier: '
                pos'
                  ContinueStatement
              BreakStatement
          IfStatement
            BinaryExpression
              CallExpression
                Identifier: 'charCodeUnchecked'
                BinaryExpression
                  Identifier: 'pos'
                  MinusToken
                  NumericLiteral
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' CharacterCodes'
                Identifier: '_'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            tokenFlags'
                  BarEqualsToken
                  PropertyAccessExpression
                    Identifier: ' TokenFlags'
                    Identifier: 'ContainsInvalidSeparator'
              ExpressionStatement
                CallExpression
                  Identifier: '
            error'
                  PropertyAccessExpression
                    Identifier: 'Diagnostics'
                    Identifier: 'Numeric_separators_are_not_allowed_here'
                  BinaryExpression
                    Identifier: ' pos'
                    MinusToken
                    NumericLiteral
                  NumericLiteral
          ReturnStatement
            BinaryExpression
              Identifier: ' result'
              PlusToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' text'
                  Identifier: 'substring'
                Identifier: 'start'
                Identifier: ' pos'
      FunctionDeclaration
        Identifier: ' scanNumber'
        TypeReference
          Identifier: ' SyntaxKind'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' start'
                Identifier: ' pos'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' mainFragment'
                StringKeyword
          IfStatement
            BinaryExpression
              CallExpression
                Identifier: 'charCodeUnchecked'
                Identifier: 'pos'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' CharacterCodes'
                Identifier: '_0'
            Block
              ExpressionStatement
                PostfixUnaryExpression
                  Identifier: '
            pos'
              IfStatement
                BinaryExpression
                  CallExpression
                    Identifier: 'charCodeUnchecked'
                    Identifier: 'pos'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: '_'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                tokenFlags'
                      BarEqualsToken
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: ' TokenFlags'
                          Identifier: 'ContainsSeparator'
                        BarToken
                        PropertyAccessExpression
                          Identifier: ' TokenFlags'
                          Identifier: 'ContainsInvalidSeparator'
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                error'
                      PropertyAccessExpression
                        Identifier: 'Diagnostics'
                        Identifier: 'Numeric_separators_are_not_allowed_here'
                      Identifier: ' pos'
                      NumericLiteral
                  ExpressionStatement
                    PostfixUnaryExpression
                      Identifier: '
                // treat it as a normal number literal
                pos'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                mainFragment'
                      EqualsToken
                      CallExpression
                        Identifier: ' scanNumberFragment'
                IfStatement
                  PrefixUnaryExpression
                    CallExpression
                      Identifier: 'scanDigits'
                  Block
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                // NonOctalDecimalIntegerLiteral, emit error later
                // Separators in decimal and exponent parts are still allowed according to the spec
                tokenFlags'
                        BarEqualsToken
                        PropertyAccessExpression
                          Identifier: ' TokenFlags'
                          Identifier: 'ContainsLeadingZero'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                mainFragment'
                        EqualsToken
                        BinaryExpression
                          StringLiteral
                          PlusToken
                          PrefixUnaryExpression
                            Identifier: 'tokenValue'
                  IfStatement
                    PrefixUnaryExpression
                      Identifier: 'tokenValue'
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                // a single zero
                mainFragment'
                          EqualsToken
                          StringLiteral
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                // LegacyOctalIntegerLiteral
                tokenValue'
                          EqualsToken
                          BinaryExpression
                            StringLiteral
                            PlusToken
                            CallExpression
                              Identifier: ' parseInt'
                              Identifier: 'tokenValue'
                              NumericLiteral
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                tokenFlags'
                          BarEqualsToken
                          PropertyAccessExpression
                            Identifier: ' TokenFlags'
                            Identifier: 'Octal'
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' withMinus'
                            BinaryExpression
                              Identifier: ' token'
                              EqualsEqualsEqualsToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'MinusToken'
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' literal'
                            BinaryExpression
                              BinaryExpression
                                ParenthesizedExpression
                                  ConditionalExpression
                                    Identifier: 'withMinus'
                                    QuestionToken
                                    StringLiteral
                                    ColonToken
                                    StringLiteral
                                PlusToken
                                StringLiteral
                              PlusToken
                              CallExpression
                                PropertyAccessExpression
                                  ParenthesizedExpression
                                    PrefixUnaryExpression
                                      Identifier: 'tokenValue'
                                  Identifier: 'toString'
                                NumericLiteral
                      IfStatement
                        Identifier: 'withMinus'
                        ExpressionStatement
                          PostfixUnaryExpression
                            Identifier: ' start'
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                error'
                          PropertyAccessExpression
                            Identifier: 'Diagnostics'
                            Identifier: 'Octal_literals_are_not_allowed_Use_the_syntax_0'
                          Identifier: ' start'
                          BinaryExpression
                            Identifier: ' pos'
                            MinusToken
                            Identifier: ' start'
                          Identifier: ' literal'
                      ReturnStatement
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'NumericLiteral'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            mainFragment'
                  EqualsToken
                  CallExpression
                    Identifier: ' scanNumberFragment'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' decimalFragment'
                UnionType
                  StringKeyword
                  UndefinedKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' scientificFragment'
                UnionType
                  StringKeyword
                  UndefinedKeyword
          IfStatement
            BinaryExpression
              CallExpression
                Identifier: 'charCodeUnchecked'
                Identifier: 'pos'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' CharacterCodes'
                Identifier: 'dot'
            Block
              ExpressionStatement
                PostfixUnaryExpression
                  Identifier: '
            pos'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            decimalFragment'
                  EqualsToken
                  CallExpression
                    Identifier: ' scanNumberFragment'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' end'
                Identifier: ' pos'
          IfStatement
            BinaryExpression
              BinaryExpression
                CallExpression
                  Identifier: 'charCodeUnchecked'
                  Identifier: 'pos'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'E'
              BarBarToken
              BinaryExpression
                CallExpression
                  Identifier: ' charCodeUnchecked'
                  Identifier: 'pos'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'e'
            Block
              ExpressionStatement
                PostfixUnaryExpression
                  Identifier: '
            pos'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            tokenFlags'
                  BarEqualsToken
                  PropertyAccessExpression
                    Identifier: ' TokenFlags'
                    Identifier: 'Scientific'
              IfStatement
                BinaryExpression
                  BinaryExpression
                    CallExpression
                      Identifier: 'charCodeUnchecked'
                      Identifier: 'pos'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'plus'
                  BarBarToken
                  BinaryExpression
                    CallExpression
                      Identifier: ' charCodeUnchecked'
                      Identifier: 'pos'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'minus'
                ExpressionStatement
                  PostfixUnaryExpression
                    Identifier: ' pos'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' preNumericPart'
                    Identifier: ' pos'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' finalFragment'
                    CallExpression
                      Identifier: ' scanNumberFragment'
              IfStatement
                PrefixUnaryExpression
                  Identifier: 'finalFragment'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                error'
                      PropertyAccessExpression
                        Identifier: 'Diagnostics'
                        Identifier: 'Digit_expected'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                scientificFragment'
                      EqualsToken
                      BinaryExpression
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' text'
                            Identifier: 'substring'
                          Identifier: 'end'
                          Identifier: ' preNumericPart'
                        PlusToken
                        Identifier: ' finalFragment'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                end'
                      EqualsToken
                      Identifier: ' pos'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' result'
                StringKeyword
          IfStatement
            BinaryExpression
              Identifier: 'tokenFlags'
              AmpersandToken
              PropertyAccessExpression
                Identifier: ' TokenFlags'
                Identifier: 'ContainsSeparator'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            result'
                  EqualsToken
                  Identifier: ' mainFragment'
              IfStatement
                Identifier: 'decimalFragment'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                result'
                      PlusEqualsToken
                      BinaryExpression
                        StringLiteral
                        PlusToken
                        Identifier: ' decimalFragment'
              IfStatement
                Identifier: 'scientificFragment'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                result'
                      PlusEqualsToken
                      Identifier: ' scientificFragment'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            result'
                  EqualsToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' text'
                      Identifier: 'substring'
                    Identifier: 'start'
                    Identifier: ' end'
          IfStatement
            BinaryExpression
              Identifier: 'tokenFlags'
              AmpersandToken
              PropertyAccessExpression
                Identifier: ' TokenFlags'
                Identifier: 'ContainsLeadingZero'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            error'
                  PropertyAccessExpression
                    Identifier: 'Diagnostics'
                    Identifier: 'Decimals_with_leading_zeros_are_not_allowed'
                  Identifier: ' start'
                  BinaryExpression
                    Identifier: ' end'
                    MinusToken
                    Identifier: ' start'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            // if a literal has a leading zero, it must not be bigint
            tokenValue'
                  EqualsToken
                  BinaryExpression
                    StringLiteral
                    PlusToken
                    PrefixUnaryExpression
                      Identifier: 'result'
              ReturnStatement
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'NumericLiteral'
          IfStatement
            BinaryExpression
              BinaryExpression
                Identifier: 'decimalFragment'
                ExclamationEqualsEqualsToken
                Identifier: ' undefined'
              BarBarToken
              BinaryExpression
                Identifier: ' tokenFlags'
                AmpersandToken
                PropertyAccessExpression
                  Identifier: ' TokenFlags'
                  Identifier: 'Scientific'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            checkForIdentifierStartAfterNumericLiteral'
                  Identifier: 'start'
                  BinaryExpression
                    BinaryExpression
                      Identifier: ' decimalFragment'
                      EqualsEqualsEqualsToken
                      Identifier: ' undefined'
                    AmpersandAmpersandToken
                    PrefixUnaryExpression
                      PrefixUnaryExpression
                        ParenthesizedExpression
                          BinaryExpression
                            Identifier: 'tokenFlags'
                            AmpersandToken
                            PropertyAccessExpression
                              Identifier: ' TokenFlags'
                              Identifier: 'Scientific'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            // if value is not an integer, it can be safely coerced to a number
            tokenValue'
                  EqualsToken
                  BinaryExpression
                    StringLiteral
                    PlusToken
                    PrefixUnaryExpression
                      Identifier: 'result'
              ReturnStatement
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'NumericLiteral'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            tokenValue'
                  EqualsToken
                  Identifier: ' result'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' type'
                    CallExpression
                      Identifier: ' checkBigIntSuffix'
              ExpressionStatement
                CallExpression
                  Identifier: ' // if value is an integer, check whether it is a bigint
            checkForIdentifierStartAfterNumericLiteral'
                  Identifier: 'start'
              ReturnStatement
                Identifier: ' type'
      FunctionDeclaration
        Identifier: ' checkForIdentifierStartAfterNumericLiteral'
        Parameter
          Identifier: 'numericStart'
          NumberKeyword
        Parameter
          Identifier: ' isScientific'
          QuestionToken
          BooleanKeyword
        Block
          IfStatement
            PrefixUnaryExpression
              CallExpression
                Identifier: 'isIdentifierStart'
                CallExpression
                  Identifier: 'codePointUnchecked'
                  Identifier: 'pos'
                Identifier: ' languageVersion'
            Block
              ReturnStatement
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' identifierStart'
                Identifier: ' pos'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                ObjectBindingPattern
                  BindingElement
                    Identifier: ' length'
                CallExpression
                  Identifier: ' scanIdentifierParts'
          IfStatement
            BinaryExpression
              BinaryExpression
                Identifier: 'length'
                EqualsEqualsEqualsToken
                NumericLiteral
              AmpersandAmpersandToken
              BinaryExpression
                ElementAccessExpression
                  Identifier: ' text'
                  Identifier: 'identifierStart'
                EqualsEqualsEqualsToken
                StringLiteral
            Block
              IfStatement
                Identifier: 'isScientific'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                error'
                      PropertyAccessExpression
                        Identifier: 'Diagnostics'
                        Identifier: 'A_bigint_literal_cannot_use_exponential_notation'
                      Identifier: ' numericStart'
                      BinaryExpression
                        BinaryExpression
                          Identifier: ' identifierStart'
                          MinusToken
                          Identifier: ' numericStart'
                        PlusToken
                        NumericLiteral
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                error'
                      PropertyAccessExpression
                        Identifier: 'Diagnostics'
                        Identifier: 'A_bigint_literal_must_be_an_integer'
                      Identifier: ' numericStart'
                      BinaryExpression
                        BinaryExpression
                          Identifier: ' identifierStart'
                          MinusToken
                          Identifier: ' numericStart'
                        PlusToken
                        NumericLiteral
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            error'
                  PropertyAccessExpression
                    Identifier: 'Diagnostics'
                    Identifier: 'An_identifier_or_keyword_cannot_immediately_follow_a_numeric_literal'
                  Identifier: ' identifierStart'
                  Identifier: ' length'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            pos'
                  EqualsToken
                  Identifier: ' identifierStart'
      FunctionDeclaration
        Identifier: ' scanDigits'
        BooleanKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' start'
                Identifier: ' pos'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' isOctal'
                TrueKeyword
          WhileStatement
            CallExpression
              Identifier: 'isDigit'
              CallExpression
                Identifier: 'charCodeChecked'
                Identifier: 'pos'
            Block
              IfStatement
                PrefixUnaryExpression
                  CallExpression
                    Identifier: 'isOctalDigit'
                    CallExpression
                      Identifier: 'charCodeUnchecked'
                      Identifier: 'pos'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                isOctal'
                      EqualsToken
                      FalseKeyword
              ExpressionStatement
                PostfixUnaryExpression
                  Identifier: '
            pos'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        tokenValue'
              EqualsToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' text'
                  Identifier: 'substring'
                Identifier: 'start'
                Identifier: ' pos'
          ReturnStatement
            Identifier: ' isOctal'
      FunctionDeclaration
        Identifier: ' scanExactNumberOfHexDigits'
        Parameter
          Identifier: 'count'
          NumberKeyword
        Parameter
          Identifier: ' canHaveSeparators'
          BooleanKeyword
        NumberKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' valueString'
                CallExpression
                  Identifier: ' scanHexDigits'
                  Identifier: '/*minCount*/ count'
                  FalseKeyword
                  Identifier: ' canHaveSeparators'
          ReturnStatement
            ConditionalExpression
              Identifier: ' valueString'
              QuestionToken
              CallExpression
                Identifier: ' parseInt'
                Identifier: 'valueString'
                NumericLiteral
              ColonToken
              PrefixUnaryExpression
                NumericLiteral
      FunctionDeclaration
        Identifier: ' scanMinimumNumberOfHexDigits'
        Parameter
          Identifier: 'count'
          NumberKeyword
        Parameter
          Identifier: ' canHaveSeparators'
          BooleanKeyword
        StringKeyword
        Block
          ReturnStatement
            CallExpression
              Identifier: ' scanHexDigits'
              Identifier: '/*minCount*/ count'
              TrueKeyword
              Identifier: ' canHaveSeparators'
      FunctionDeclaration
        Identifier: ' scanHexDigits'
        Parameter
          Identifier: 'minCount'
          NumberKeyword
        Parameter
          Identifier: ' scanAsManyAsPossible'
          BooleanKeyword
        Parameter
          Identifier: ' canHaveSeparators'
          BooleanKeyword
        StringKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' valueChars'
                ArrayType
                  NumberKeyword
                ArrayLiteralExpression
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' allowSeparator'
                FalseKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' isPreviousTokenSeparator'
                FalseKeyword
          WhileStatement
            BinaryExpression
              BinaryExpression
                PropertyAccessExpression
                  Identifier: 'valueChars'
                  Identifier: 'length'
                LessThanToken
                Identifier: ' minCount'
              BarBarToken
              Identifier: ' scanAsManyAsPossible'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' ch'
                    CallExpression
                      Identifier: ' charCodeUnchecked'
                      Identifier: 'pos'
              IfStatement
                BinaryExpression
                  Identifier: 'canHaveSeparators'
                  AmpersandAmpersandToken
                  BinaryExpression
                    Identifier: ' ch'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: '_'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                tokenFlags'
                      BarEqualsToken
                      PropertyAccessExpression
                        Identifier: ' TokenFlags'
                        Identifier: 'ContainsSeparator'
                  IfStatement
                    Identifier: 'allowSeparator'
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    allowSeparator'
                          EqualsToken
                          FalseKeyword
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    isPreviousTokenSeparator'
                          EqualsToken
                          TrueKeyword
                    IfStatement
                      Identifier: 'isPreviousTokenSeparator'
                      Block
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                    error'
                            PropertyAccessExpression
                              Identifier: 'Diagnostics'
                              Identifier: 'Multiple_consecutive_numeric_separators_are_not_permitted'
                            Identifier: ' pos'
                            NumericLiteral
                      Block
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                    error'
                            PropertyAccessExpression
                              Identifier: 'Diagnostics'
                              Identifier: 'Numeric_separators_are_not_allowed_here'
                            Identifier: ' pos'
                            NumericLiteral
                  ExpressionStatement
                    PostfixUnaryExpression
                      Identifier: '
                pos'
                  ContinueStatement
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            allowSeparator'
                  EqualsToken
                  Identifier: ' canHaveSeparators'
              IfStatement
                BinaryExpression
                  BinaryExpression
                    Identifier: 'ch'
                    GreaterThanEqualsToken
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'A'
                  AmpersandAmpersandToken
                  BinaryExpression
                    Identifier: ' ch'
                    LessThanEqualsToken
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'F'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                ch'
                      PlusEqualsToken
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'a'
                        MinusToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'A'
                IfStatement
                  PrefixUnaryExpression
                    ParenthesizedExpression
                      BinaryExpression
                        ParenthesizedExpression
                          BinaryExpression
                            BinaryExpression
                              Identifier: 'ch'
                              GreaterThanEqualsToken
                              PropertyAccessExpression
                                Identifier: ' CharacterCodes'
                                Identifier: '_0'
                            AmpersandAmpersandToken
                            BinaryExpression
                              Identifier: ' ch'
                              LessThanEqualsToken
                              PropertyAccessExpression
                                Identifier: ' CharacterCodes'
                                Identifier: '_9'
                        BarBarToken
                        ParenthesizedExpression
                          BinaryExpression
                            BinaryExpression
                              Identifier: 'ch'
                              GreaterThanEqualsToken
                              PropertyAccessExpression
                                Identifier: ' CharacterCodes'
                                Identifier: 'a'
                            AmpersandAmpersandToken
                            BinaryExpression
                              Identifier: ' ch'
                              LessThanEqualsToken
                              PropertyAccessExpression
                                Identifier: ' CharacterCodes'
                                Identifier: 'f'
                  Block
                    BreakStatement
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            valueChars'
                    Identifier: 'push'
                  Identifier: 'ch'
              ExpressionStatement
                PostfixUnaryExpression
                  Identifier: '
            pos'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            isPreviousTokenSeparator'
                  EqualsToken
                  FalseKeyword
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'valueChars'
                Identifier: 'length'
              LessThanToken
              Identifier: ' minCount'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            valueChars'
                  EqualsToken
                  ArrayLiteralExpression
          IfStatement
            BinaryExpression
              CallExpression
                Identifier: 'charCodeUnchecked'
                BinaryExpression
                  Identifier: 'pos'
                  MinusToken
                  NumericLiteral
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' CharacterCodes'
                Identifier: '_'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            error'
                  PropertyAccessExpression
                    Identifier: 'Diagnostics'
                    Identifier: 'Numeric_separators_are_not_allowed_here'
                  BinaryExpression
                    Identifier: ' pos'
                    MinusToken
                    NumericLiteral
                  NumericLiteral
          ReturnStatement
            CallExpression
              PropertyAccessExpression
                Identifier: ' String'
                Identifier: 'fromCharCode'
              SpreadElement
                Identifier: 'valueChars'
      FunctionDeclaration
        Identifier: ' scanString'
        Parameter
          Identifier: 'jsxAttributeString'
          FalseKeyword
        StringKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' quote'
                CallExpression
                  Identifier: ' charCodeUnchecked'
                  Identifier: 'pos'
          ExpressionStatement
            PostfixUnaryExpression
              Identifier: '
        pos'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' result'
                StringLiteral
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' start'
                Identifier: ' pos'
          WhileStatement
            TrueKeyword
            Block
              IfStatement
                BinaryExpression
                  Identifier: 'pos'
                  GreaterThanEqualsToken
                  Identifier: ' end'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                result'
                      PlusEqualsToken
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' text'
                          Identifier: 'substring'
                        Identifier: 'start'
                        Identifier: ' pos'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                tokenFlags'
                      BarEqualsToken
                      PropertyAccessExpression
                        Identifier: ' TokenFlags'
                        Identifier: 'Unterminated'
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                error'
                      PropertyAccessExpression
                        Identifier: 'Diagnostics'
                        Identifier: 'Unterminated_string_literal'
                  BreakStatement
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' ch'
                    CallExpression
                      Identifier: ' charCodeUnchecked'
                      Identifier: 'pos'
              IfStatement
                BinaryExpression
                  Identifier: 'ch'
                  EqualsEqualsEqualsToken
                  Identifier: ' quote'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                result'
                      PlusEqualsToken
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' text'
                          Identifier: 'substring'
                        Identifier: 'start'
                        Identifier: ' pos'
                  ExpressionStatement
                    PostfixUnaryExpression
                      Identifier: '
                pos'
                  BreakStatement
              IfStatement
                BinaryExpression
                  BinaryExpression
                    Identifier: 'ch'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'backslash'
                  AmpersandAmpersandToken
                  PrefixUnaryExpression
                    Identifier: 'jsxAttributeString'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                result'
                      PlusEqualsToken
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' text'
                          Identifier: 'substring'
                        Identifier: 'start'
                        Identifier: ' pos'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                result'
                      PlusEqualsToken
                      CallExpression
                        Identifier: ' scanEscapeSequence'
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: 'EscapeSequenceScanningFlags'
                            Identifier: 'String'
                          BarToken
                          PropertyAccessExpression
                            Identifier: ' EscapeSequenceScanningFlags'
                            Identifier: 'ReportErrors'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                start'
                      EqualsToken
                      Identifier: ' pos'
                  ContinueStatement
              IfStatement
                BinaryExpression
                  ParenthesizedExpression
                    BinaryExpression
                      BinaryExpression
                        Identifier: 'ch'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'lineFeed'
                      BarBarToken
                      BinaryExpression
                        Identifier: ' ch'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'carriageReturn'
                  AmpersandAmpersandToken
                  PrefixUnaryExpression
                    Identifier: 'jsxAttributeString'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                result'
                      PlusEqualsToken
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' text'
                          Identifier: 'substring'
                        Identifier: 'start'
                        Identifier: ' pos'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                tokenFlags'
                      BarEqualsToken
                      PropertyAccessExpression
                        Identifier: ' TokenFlags'
                        Identifier: 'Unterminated'
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                error'
                      PropertyAccessExpression
                        Identifier: 'Diagnostics'
                        Identifier: 'Unterminated_string_literal'
                  BreakStatement
              ExpressionStatement
                PostfixUnaryExpression
                  Identifier: '
            pos'
          ReturnStatement
            Identifier: ' result'
      FunctionDeclaration
        Identifier: ' scanTemplateAndSetTokenValue'
        Parameter
          Identifier: 'shouldEmitInvalidEscapeError'
          BooleanKeyword
        TypeReference
          Identifier: ' SyntaxKind'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' startedWithBacktick'
                BinaryExpression
                  CallExpression
                    Identifier: ' charCodeUnchecked'
                    Identifier: 'pos'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'backtick'
          ExpressionStatement
            PostfixUnaryExpression
              Identifier: '

        pos'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' start'
                Identifier: ' pos'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' contents'
                StringLiteral
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' resultingToken'
                TypeReference
                  Identifier: ' SyntaxKind'
          WhileStatement
            TrueKeyword
            Block
              IfStatement
                BinaryExpression
                  Identifier: 'pos'
                  GreaterThanEqualsToken
                  Identifier: ' end'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                contents'
                      PlusEqualsToken
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' text'
                          Identifier: 'substring'
                        Identifier: 'start'
                        Identifier: ' pos'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                tokenFlags'
                      BarEqualsToken
                      PropertyAccessExpression
                        Identifier: ' TokenFlags'
                        Identifier: 'Unterminated'
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                error'
                      PropertyAccessExpression
                        Identifier: 'Diagnostics'
                        Identifier: 'Unterminated_template_literal'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                resultingToken'
                      EqualsToken
                      ConditionalExpression
                        Identifier: ' startedWithBacktick'
                        QuestionToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'NoSubstitutionTemplateLiteral'
                        ColonToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'TemplateTail'
                  BreakStatement
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' currChar'
                    CallExpression
                      Identifier: ' charCodeUnchecked'
                      Identifier: 'pos'
              IfStatement
                BinaryExpression
                  Identifier: 'currChar'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'backtick'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                contents'
                      PlusEqualsToken
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' text'
                          Identifier: 'substring'
                        Identifier: 'start'
                        Identifier: ' pos'
                  ExpressionStatement
                    PostfixUnaryExpression
                      Identifier: '
                pos'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                resultingToken'
                      EqualsToken
                      ConditionalExpression
                        Identifier: ' startedWithBacktick'
                        QuestionToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'NoSubstitutionTemplateLiteral'
                        ColonToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'TemplateTail'
                  BreakStatement
              IfStatement
                BinaryExpression
                  BinaryExpression
                    BinaryExpression
                      Identifier: 'currChar'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' CharacterCodes'
                        Identifier: '$'
                    AmpersandAmpersandToken
                    BinaryExpression
                      BinaryExpression
                        Identifier: ' pos'
                        PlusToken
                        NumericLiteral
                      LessThanToken
                      Identifier: ' end'
                  AmpersandAmpersandToken
                  BinaryExpression
                    CallExpression
                      Identifier: ' charCodeUnchecked'
                      BinaryExpression
                        Identifier: 'pos'
                        PlusToken
                        NumericLiteral
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'openBrace'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                contents'
                      PlusEqualsToken
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' text'
                          Identifier: 'substring'
                        Identifier: 'start'
                        Identifier: ' pos'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                pos'
                      PlusEqualsToken
                      NumericLiteral
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                resultingToken'
                      EqualsToken
                      ConditionalExpression
                        Identifier: ' startedWithBacktick'
                        QuestionToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'TemplateHead'
                        ColonToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'TemplateMiddle'
                  BreakStatement
              IfStatement
                BinaryExpression
                  Identifier: 'currChar'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'backslash'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                contents'
                      PlusEqualsToken
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' text'
                          Identifier: 'substring'
                        Identifier: 'start'
                        Identifier: ' pos'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                contents'
                      PlusEqualsToken
                      CallExpression
                        Identifier: ' scanEscapeSequence'
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: 'EscapeSequenceScanningFlags'
                            Identifier: 'String'
                          BarToken
                          ParenthesizedExpression
                            ConditionalExpression
                              Identifier: 'shouldEmitInvalidEscapeError'
                              QuestionToken
                              PropertyAccessExpression
                                Identifier: ' EscapeSequenceScanningFlags'
                                Identifier: 'ReportErrors'
                              ColonToken
                              NumericLiteral
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                start'
                      EqualsToken
                      Identifier: ' pos'
                  ContinueStatement
              IfStatement
                BinaryExpression
                  Identifier: 'currChar'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'carriageReturn'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                contents'
                      PlusEqualsToken
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' text'
                          Identifier: 'substring'
                        Identifier: 'start'
                        Identifier: ' pos'
                  ExpressionStatement
                    PostfixUnaryExpression
                      Identifier: '
                pos'
                  IfStatement
                    BinaryExpression
                      BinaryExpression
                        Identifier: 'pos'
                        LessThanToken
                        Identifier: ' end'
                      AmpersandAmpersandToken
                      BinaryExpression
                        CallExpression
                          Identifier: ' charCodeUnchecked'
                          Identifier: 'pos'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'lineFeed'
                    Block
                      ExpressionStatement
                        PostfixUnaryExpression
                          Identifier: '
                    pos'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '

                contents'
                      PlusEqualsToken
                      StringLiteral
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                start'
                      EqualsToken
                      Identifier: ' pos'
                  ContinueStatement
              ExpressionStatement
                PostfixUnaryExpression
                  Identifier: '

            pos'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '

        Debug'
                Identifier: 'assert'
              BinaryExpression
                Identifier: 'resultingToken'
                ExclamationEqualsEqualsToken
                Identifier: ' undefined'
          ExpressionStatement
            BinaryExpression
              Identifier: '

        tokenValue'
              EqualsToken
              Identifier: ' contents'
          ReturnStatement
            Identifier: ' resultingToken'
      FunctionDeclaration
        Identifier: ' scanEscapeSequence'
        Parameter
          Identifier: 'flags'
          TypeReference
            Identifier: ' EscapeSequenceScanningFlags'
        StringKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' start'
                Identifier: ' pos'
          ExpressionStatement
            PostfixUnaryExpression
              Identifier: '
        pos'
          IfStatement
            BinaryExpression
              Identifier: 'pos'
              GreaterThanEqualsToken
              Identifier: ' end'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            error'
                  PropertyAccessExpression
                    Identifier: 'Diagnostics'
                    Identifier: 'Unexpected_end_of_text'
              ReturnStatement
                StringLiteral
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' ch'
                CallExpression
                  Identifier: ' charCodeUnchecked'
                  Identifier: 'pos'
          ExpressionStatement
            PostfixUnaryExpression
              Identifier: '
        pos'
          SwitchStatement
            Identifier: 'ch'
            CaseBlock
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: '_0'
                IfStatement
                  BinaryExpression
                    BinaryExpression
                      Identifier: 'pos'
                      GreaterThanEqualsToken
                      Identifier: ' end'
                    BarBarToken
                    PrefixUnaryExpression
                      CallExpression
                        Identifier: 'isDigit'
                        CallExpression
                          Identifier: 'charCodeUnchecked'
                          Identifier: 'pos'
                  Block
                    ReturnStatement
                      StringLiteral
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: '_1'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: '_2'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: '_3'
                IfStatement
                  BinaryExpression
                    BinaryExpression
                      Identifier: 'pos'
                      LessThanToken
                      Identifier: ' end'
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: ' isOctalDigit'
                      CallExpression
                        Identifier: 'charCodeUnchecked'
                        Identifier: 'pos'
                  Block
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: '_4'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: '_5'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: '_6'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: '_7'
                IfStatement
                  BinaryExpression
                    BinaryExpression
                      Identifier: 'pos'
                      LessThanToken
                      Identifier: ' end'
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: ' isOctalDigit'
                      CallExpression
                        Identifier: 'charCodeUnchecked'
                        Identifier: 'pos'
                  Block
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                ExpressionStatement
                  BinaryExpression
                    Identifier: '
                // '\47'
                tokenFlags'
                    BarEqualsToken
                    PropertyAccessExpression
                      Identifier: ' TokenFlags'
                      Identifier: 'ContainsInvalidEscape'
                IfStatement
                  BinaryExpression
                    Identifier: 'flags'
                    AmpersandToken
                    PropertyAccessExpression
                      Identifier: ' EscapeSequenceScanningFlags'
                      Identifier: 'ReportInvalidEscapeErrors'
                  Block
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' code'
                          CallExpression
                            Identifier: ' parseInt'
                            CallExpression
                              PropertyAccessExpression
                                Identifier: 'text'
                                Identifier: 'substring'
                              BinaryExpression
                                Identifier: 'start'
                                PlusToken
                                NumericLiteral
                              Identifier: ' pos'
                            NumericLiteral
                    IfStatement
                      BinaryExpression
                        BinaryExpression
                          BinaryExpression
                            Identifier: 'flags'
                            AmpersandToken
                            PropertyAccessExpression
                              Identifier: ' EscapeSequenceScanningFlags'
                              Identifier: 'RegularExpression'
                          AmpersandAmpersandToken
                          PrefixUnaryExpression
                            ParenthesizedExpression
                              BinaryExpression
                                Identifier: 'flags'
                                AmpersandToken
                                PropertyAccessExpression
                                  Identifier: ' EscapeSequenceScanningFlags'
                                  Identifier: 'AtomEscape'
                        AmpersandAmpersandToken
                        BinaryExpression
                          Identifier: ' ch'
                          ExclamationEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' CharacterCodes'
                            Identifier: '_0'
                      Block
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                        error'
                            PropertyAccessExpression
                              Identifier: 'Diagnostics'
                              Identifier: 'Octal_escape_sequences_and_backreferences_are_not_allowed_in_a_character_class_If_this_was_intended_as_an_escape_sequence_use_the_syntax_0_instead'
                            Identifier: ' start'
                            BinaryExpression
                              Identifier: ' pos'
                              MinusToken
                              Identifier: ' start'
                            BinaryExpression
                              StringLiteral
                              PlusToken
                              CallExpression
                                PropertyAccessExpression
                                  CallExpression
                                    PropertyAccessExpression
                                      Identifier: ' code'
                                      Identifier: 'toString'
                                    NumericLiteral
                                  Identifier: 'padStart'
                                NumericLiteral
                                StringLiteral
                      Block
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                        error'
                            PropertyAccessExpression
                              Identifier: 'Diagnostics'
                              Identifier: 'Octal_escape_sequences_are_not_allowed_Use_the_syntax_0'
                            Identifier: ' start'
                            BinaryExpression
                              Identifier: ' pos'
                              MinusToken
                              Identifier: ' start'
                            BinaryExpression
                              StringLiteral
                              PlusToken
                              CallExpression
                                PropertyAccessExpression
                                  CallExpression
                                    PropertyAccessExpression
                                      Identifier: ' code'
                                      Identifier: 'toString'
                                    NumericLiteral
                                  Identifier: 'padStart'
                                NumericLiteral
                                StringLiteral
                    ReturnStatement
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' String'
                          Identifier: 'fromCharCode'
                        Identifier: 'code'
                ReturnStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' text'
                      Identifier: 'substring'
                    Identifier: 'start'
                    Identifier: ' pos'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: '_8'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: '_9'
                ExpressionStatement
                  BinaryExpression
                    Identifier: '
                // the invalid '\8' and '\9'
                tokenFlags'
                    BarEqualsToken
                    PropertyAccessExpression
                      Identifier: ' TokenFlags'
                      Identifier: 'ContainsInvalidEscape'
                IfStatement
                  BinaryExpression
                    Identifier: 'flags'
                    AmpersandToken
                    PropertyAccessExpression
                      Identifier: ' EscapeSequenceScanningFlags'
                      Identifier: 'ReportInvalidEscapeErrors'
                  Block
                    IfStatement
                      BinaryExpression
                        BinaryExpression
                          Identifier: 'flags'
                          AmpersandToken
                          PropertyAccessExpression
                            Identifier: ' EscapeSequenceScanningFlags'
                            Identifier: 'RegularExpression'
                        AmpersandAmpersandToken
                        PrefixUnaryExpression
                          ParenthesizedExpression
                            BinaryExpression
                              Identifier: 'flags'
                              AmpersandToken
                              PropertyAccessExpression
                                Identifier: ' EscapeSequenceScanningFlags'
                                Identifier: 'AtomEscape'
                      Block
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                        error'
                            PropertyAccessExpression
                              Identifier: 'Diagnostics'
                              Identifier: 'Decimal_escape_sequences_and_backreferences_are_not_allowed_in_a_character_class'
                            Identifier: ' start'
                            BinaryExpression
                              Identifier: ' pos'
                              MinusToken
                              Identifier: ' start'
                      Block
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                        error'
                            PropertyAccessExpression
                              Identifier: 'Diagnostics'
                              Identifier: 'Escape_sequence_0_is_not_allowed'
                            Identifier: ' start'
                            BinaryExpression
                              Identifier: ' pos'
                              MinusToken
                              Identifier: ' start'
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' text'
                                Identifier: 'substring'
                              Identifier: 'start'
                              Identifier: ' pos'
                    ReturnStatement
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' String'
                          Identifier: 'fromCharCode'
                        Identifier: 'ch'
                ReturnStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' text'
                      Identifier: 'substring'
                    Identifier: 'start'
                    Identifier: ' pos'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'b'
                ReturnStatement
                  StringLiteral
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 't'
                ReturnStatement
                  StringLiteral
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'n'
                ReturnStatement
                  StringLiteral
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'v'
                ReturnStatement
                  StringLiteral
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'f'
                ReturnStatement
                  StringLiteral
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'r'
                ReturnStatement
                  StringLiteral
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'singleQuote'
                ReturnStatement
                  StringLiteral
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'doubleQuote'
                ReturnStatement
                  StringLiteral
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'u'
                IfStatement
                  BinaryExpression
                    BinaryExpression
                      Identifier: 'pos'
                      LessThanToken
                      Identifier: ' end'
                    AmpersandAmpersandToken
                    BinaryExpression
                      CallExpression
                        Identifier: ' charCodeUnchecked'
                        Identifier: 'pos'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' CharacterCodes'
                        Identifier: 'openBrace'
                  Block
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    // '\u{DDDDDD}'
                    pos'
                        MinusEqualsToken
                        NumericLiteral
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' result'
                          CallExpression
                            Identifier: ' scanExtendedUnicodeEscape'
                            PrefixUnaryExpression
                              PrefixUnaryExpression
                                ParenthesizedExpression
                                  BinaryExpression
                                    Identifier: 'flags'
                                    AmpersandToken
                                    PropertyAccessExpression
                                      Identifier: ' EscapeSequenceScanningFlags'
                                      Identifier: 'ReportInvalidEscapeErrors'
                    IfStatement
                      PrefixUnaryExpression
                        ParenthesizedExpression
                          BinaryExpression
                            Identifier: 'flags'
                            AmpersandToken
                            PropertyAccessExpression
                              Identifier: ' EscapeSequenceScanningFlags'
                              Identifier: 'AllowExtendedUnicodeEscape'
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        tokenFlags'
                            BarEqualsToken
                            PropertyAccessExpression
                              Identifier: ' TokenFlags'
                              Identifier: 'ContainsInvalidEscape'
                        IfStatement
                          BinaryExpression
                            Identifier: 'flags'
                            AmpersandToken
                            PropertyAccessExpression
                              Identifier: ' EscapeSequenceScanningFlags'
                              Identifier: 'ReportInvalidEscapeErrors'
                          Block
                            ExpressionStatement
                              CallExpression
                                Identifier: '
                            error'
                                PropertyAccessExpression
                                  Identifier: 'Diagnostics'
                                  Identifier: 'Unicode_escape_sequences_are_only_available_when_the_Unicode_u_flag_or_the_Unicode_Sets_v_flag_is_set'
                                Identifier: ' start'
                                BinaryExpression
                                  Identifier: ' pos'
                                  MinusToken
                                  Identifier: ' start'
                    ReturnStatement
                      Identifier: ' result'
                ForStatement
                  BinaryExpression
                    Identifier: ' pos'
                    LessThanToken
                    BinaryExpression
                      Identifier: ' start'
                      PlusToken
                      NumericLiteral
                  PostfixUnaryExpression
                    Identifier: ' pos'
                  Block
                    IfStatement
                      PrefixUnaryExpression
                        ParenthesizedExpression
                          BinaryExpression
                            BinaryExpression
                              Identifier: 'pos'
                              LessThanToken
                              Identifier: ' end'
                            AmpersandAmpersandToken
                            CallExpression
                              Identifier: ' isHexDigit'
                              CallExpression
                                Identifier: 'charCodeUnchecked'
                                Identifier: 'pos'
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        tokenFlags'
                            BarEqualsToken
                            PropertyAccessExpression
                              Identifier: ' TokenFlags'
                              Identifier: 'ContainsInvalidEscape'
                        IfStatement
                          BinaryExpression
                            Identifier: 'flags'
                            AmpersandToken
                            PropertyAccessExpression
                              Identifier: ' EscapeSequenceScanningFlags'
                              Identifier: 'ReportInvalidEscapeErrors'
                          Block
                            ExpressionStatement
                              CallExpression
                                Identifier: '
                            error'
                                PropertyAccessExpression
                                  Identifier: 'Diagnostics'
                                  Identifier: 'Hexadecimal_digit_expected'
                        ReturnStatement
                          CallExpression
                            PropertyAccessExpression
                              Identifier: ' text'
                              Identifier: 'substring'
                            Identifier: 'start'
                            Identifier: ' pos'
                ExpressionStatement
                  BinaryExpression
                    Identifier: '
                tokenFlags'
                    BarEqualsToken
                    PropertyAccessExpression
                      Identifier: ' TokenFlags'
                      Identifier: 'UnicodeEscape'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' escapedValue'
                      CallExpression
                        Identifier: ' parseInt'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: 'text'
                            Identifier: 'substring'
                          BinaryExpression
                            Identifier: 'start'
                            PlusToken
                            NumericLiteral
                          Identifier: ' pos'
                        NumericLiteral
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' escapedValueString'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' String'
                          Identifier: 'fromCharCode'
                        Identifier: 'escapedValue'
                IfStatement
                  BinaryExpression
                    BinaryExpression
                      BinaryExpression
                        BinaryExpression
                          BinaryExpression
                            BinaryExpression
                              Identifier: '
                    flags'
                              AmpersandToken
                              PropertyAccessExpression
                                Identifier: ' EscapeSequenceScanningFlags'
                                Identifier: 'AnyUnicodeMode'
                            AmpersandAmpersandToken
                            BinaryExpression
                              Identifier: ' escapedValue'
                              GreaterThanEqualsToken
                              NumericLiteral
                          AmpersandAmpersandToken
                          BinaryExpression
                            Identifier: ' escapedValue'
                            LessThanEqualsToken
                            NumericLiteral
                        AmpersandAmpersandToken
                        BinaryExpression
                          BinaryExpression
                            Identifier: '
                    pos'
                            PlusToken
                            NumericLiteral
                          LessThanToken
                          Identifier: ' end'
                      AmpersandAmpersandToken
                      BinaryExpression
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' text'
                            Identifier: 'substring'
                          Identifier: 'pos'
                          BinaryExpression
                            Identifier: ' pos'
                            PlusToken
                            NumericLiteral
                        EqualsEqualsEqualsToken
                        StringLiteral
                    AmpersandAmpersandToken
                    BinaryExpression
                      CallExpression
                        Identifier: ' charCodeUnchecked'
                        BinaryExpression
                          Identifier: 'pos'
                          PlusToken
                          NumericLiteral
                      ExclamationEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' CharacterCodes'
                        Identifier: 'openBrace'
                  Block
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' nextStart'
                          Identifier: ' pos'
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' nextPos'
                          BinaryExpression
                            Identifier: ' pos'
                            PlusToken
                            NumericLiteral
                    ForStatement
                      BinaryExpression
                        Identifier: ' nextPos'
                        LessThanToken
                        BinaryExpression
                          Identifier: ' nextStart'
                          PlusToken
                          NumericLiteral
                      PostfixUnaryExpression
                        Identifier: ' nextPos'
                      Block
                        IfStatement
                          PrefixUnaryExpression
                            CallExpression
                              Identifier: 'isHexDigit'
                              CallExpression
                                Identifier: 'charCodeUnchecked'
                                Identifier: 'nextPos'
                          Block
                            ReturnStatement
                              Identifier: ' escapedValueString'
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' nextEscapedValue'
                          CallExpression
                            Identifier: ' parseInt'
                            CallExpression
                              PropertyAccessExpression
                                Identifier: 'text'
                                Identifier: 'substring'
                              BinaryExpression
                                Identifier: 'nextStart'
                                PlusToken
                                NumericLiteral
                              Identifier: ' nextPos'
                            NumericLiteral
                    IfStatement
                      BinaryExpression
                        BinaryExpression
                          Identifier: 'nextEscapedValue'
                          GreaterThanEqualsToken
                          NumericLiteral
                        AmpersandAmpersandToken
                        BinaryExpression
                          Identifier: ' nextEscapedValue'
                          LessThanEqualsToken
                          NumericLiteral
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        pos'
                            EqualsToken
                            Identifier: ' nextPos'
                        ReturnStatement
                          BinaryExpression
                            Identifier: ' escapedValueString'
                            PlusToken
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' String'
                                Identifier: 'fromCharCode'
                              Identifier: 'nextEscapedValue'
                ReturnStatement
                  Identifier: ' escapedValueString'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'x'
                ForStatement
                  BinaryExpression
                    Identifier: ' pos'
                    LessThanToken
                    BinaryExpression
                      Identifier: ' start'
                      PlusToken
                      NumericLiteral
                  PostfixUnaryExpression
                    Identifier: ' pos'
                  Block
                    IfStatement
                      PrefixUnaryExpression
                        ParenthesizedExpression
                          BinaryExpression
                            BinaryExpression
                              Identifier: 'pos'
                              LessThanToken
                              Identifier: ' end'
                            AmpersandAmpersandToken
                            CallExpression
                              Identifier: ' isHexDigit'
                              CallExpression
                                Identifier: 'charCodeUnchecked'
                                Identifier: 'pos'
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        tokenFlags'
                            BarEqualsToken
                            PropertyAccessExpression
                              Identifier: ' TokenFlags'
                              Identifier: 'ContainsInvalidEscape'
                        IfStatement
                          BinaryExpression
                            Identifier: 'flags'
                            AmpersandToken
                            PropertyAccessExpression
                              Identifier: ' EscapeSequenceScanningFlags'
                              Identifier: 'ReportInvalidEscapeErrors'
                          Block
                            ExpressionStatement
                              CallExpression
                                Identifier: '
                            error'
                                PropertyAccessExpression
                                  Identifier: 'Diagnostics'
                                  Identifier: 'Hexadecimal_digit_expected'
                        ReturnStatement
                          CallExpression
                            PropertyAccessExpression
                              Identifier: ' text'
                              Identifier: 'substring'
                            Identifier: 'start'
                            Identifier: ' pos'
                ExpressionStatement
                  BinaryExpression
                    Identifier: '
                tokenFlags'
                    BarEqualsToken
                    PropertyAccessExpression
                      Identifier: ' TokenFlags'
                      Identifier: 'HexEscape'
                ReturnStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' String'
                      Identifier: 'fromCharCode'
                    CallExpression
                      Identifier: 'parseInt'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: 'text'
                          Identifier: 'substring'
                        BinaryExpression
                          Identifier: 'start'
                          PlusToken
                          NumericLiteral
                        Identifier: ' pos'
                      NumericLiteral
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'carriageReturn'
                IfStatement
                  BinaryExpression
                    BinaryExpression
                      Identifier: 'pos'
                      LessThanToken
                      Identifier: ' end'
                    AmpersandAmpersandToken
                    BinaryExpression
                      CallExpression
                        Identifier: ' charCodeUnchecked'
                        Identifier: 'pos'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' CharacterCodes'
                        Identifier: 'lineFeed'
                  Block
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'lineFeed'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'lineSeparator'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'paragraphSeparator'
                ReturnStatement
                  StringLiteral
              DefaultClause
                IfStatement
                  BinaryExpression
                    BinaryExpression
                      Identifier: '
                    flags'
                      AmpersandToken
                      PropertyAccessExpression
                        Identifier: ' EscapeSequenceScanningFlags'
                        Identifier: 'AnyUnicodeMode'
                    BarBarToken
                    BinaryExpression
                      BinaryExpression
                        BinaryExpression
                          Identifier: ' flags'
                          AmpersandToken
                          PropertyAccessExpression
                            Identifier: ' EscapeSequenceScanningFlags'
                            Identifier: 'RegularExpression'
                        AmpersandAmpersandToken
                        PrefixUnaryExpression
                          ParenthesizedExpression
                            BinaryExpression
                              Identifier: 'flags'
                              AmpersandToken
                              PropertyAccessExpression
                                Identifier: ' EscapeSequenceScanningFlags'
                                Identifier: 'AnnexB'
                      AmpersandAmpersandToken
                      CallExpression
                        Identifier: ' isIdentifierPart'
                        Identifier: 'ch'
                        Identifier: ' languageVersion'
                  Block
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                    error'
                        PropertyAccessExpression
                          Identifier: 'Diagnostics'
                          Identifier: 'This_character_cannot_be_escaped_in_a_regular_expression'
                        BinaryExpression
                          Identifier: ' pos'
                          MinusToken
                          NumericLiteral
                        NumericLiteral
                ReturnStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' String'
                      Identifier: 'fromCharCode'
                    Identifier: 'ch'
      FunctionDeclaration
        Identifier: ' scanExtendedUnicodeEscape'
        Parameter
          Identifier: 'shouldEmitInvalidEscapeError'
          BooleanKeyword
        StringKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' start'
                Identifier: ' pos'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        pos'
              PlusEqualsToken
              NumericLiteral
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' escapedStart'
                Identifier: ' pos'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' escapedValueString'
                CallExpression
                  Identifier: ' scanMinimumNumberOfHexDigits'
                  NumericLiteral
                  FalseKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' escapedValue'
                ConditionalExpression
                  Identifier: ' escapedValueString'
                  QuestionToken
                  CallExpression
                    Identifier: ' parseInt'
                    Identifier: 'escapedValueString'
                    NumericLiteral
                  ColonToken
                  PrefixUnaryExpression
                    NumericLiteral
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' isInvalidExtendedEscape'
                FalseKeyword
          IfStatement
            BinaryExpression
              Identifier: 'escapedValue'
              LessThanToken
              NumericLiteral
            Block
              IfStatement
                Identifier: 'shouldEmitInvalidEscapeError'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                error'
                      PropertyAccessExpression
                        Identifier: 'Diagnostics'
                        Identifier: 'Hexadecimal_digit_expected'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            isInvalidExtendedEscape'
                  EqualsToken
                  TrueKeyword
            IfStatement
              BinaryExpression
                Identifier: 'escapedValue'
                GreaterThanToken
                NumericLiteral
              Block
                IfStatement
                  Identifier: 'shouldEmitInvalidEscapeError'
                  Block
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                error'
                        PropertyAccessExpression
                          Identifier: 'Diagnostics'
                          Identifier: 'An_extended_Unicode_escape_value_must_be_between_0x0_and_0x10FFFF_inclusive'
                        Identifier: ' escapedStart'
                        BinaryExpression
                          Identifier: ' pos'
                          MinusToken
                          Identifier: ' escapedStart'
                ExpressionStatement
                  BinaryExpression
                    Identifier: '
            isInvalidExtendedEscape'
                    EqualsToken
                    TrueKeyword
          IfStatement
            BinaryExpression
              Identifier: 'pos'
              GreaterThanEqualsToken
              Identifier: ' end'
            Block
              IfStatement
                Identifier: 'shouldEmitInvalidEscapeError'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                error'
                      PropertyAccessExpression
                        Identifier: 'Diagnostics'
                        Identifier: 'Unexpected_end_of_text'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            isInvalidExtendedEscape'
                  EqualsToken
                  TrueKeyword
            IfStatement
              BinaryExpression
                CallExpression
                  Identifier: 'charCodeUnchecked'
                  Identifier: 'pos'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'closeBrace'
              Block
                ExpressionStatement
                  PostfixUnaryExpression
                    Identifier: '
            // Only swallow the following character up if it's a '}'.
            pos'
              Block
                IfStatement
                  Identifier: 'shouldEmitInvalidEscapeError'
                  Block
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                error'
                        PropertyAccessExpression
                          Identifier: 'Diagnostics'
                          Identifier: 'Unterminated_Unicode_escape_sequence'
                ExpressionStatement
                  BinaryExpression
                    Identifier: '
            isInvalidExtendedEscape'
                    EqualsToken
                    TrueKeyword
          IfStatement
            Identifier: 'isInvalidExtendedEscape'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            tokenFlags'
                  BarEqualsToken
                  PropertyAccessExpression
                    Identifier: ' TokenFlags'
                    Identifier: 'ContainsInvalidEscape'
              ReturnStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' text'
                    Identifier: 'substring'
                  Identifier: 'start'
                  Identifier: ' pos'
          ExpressionStatement
            BinaryExpression
              Identifier: '

        tokenFlags'
              BarEqualsToken
              PropertyAccessExpression
                Identifier: ' TokenFlags'
                Identifier: 'ExtendedUnicodeEscape'
          ReturnStatement
            CallExpression
              Identifier: ' utf16EncodeAsString'
              Identifier: 'escapedValue'
      FunctionDeclaration
        Identifier: ' peekUnicodeEscape'
        NumberKeyword
        Block
          IfStatement
            BinaryExpression
              BinaryExpression
                BinaryExpression
                  Identifier: 'pos'
                  PlusToken
                  NumericLiteral
                LessThanToken
                Identifier: ' end'
              AmpersandAmpersandToken
              BinaryExpression
                CallExpression
                  Identifier: ' charCodeUnchecked'
                  BinaryExpression
                    Identifier: 'pos'
                    PlusToken
                    NumericLiteral
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'u'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' start'
                    Identifier: ' pos'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            pos'
                  PlusEqualsToken
                  NumericLiteral
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' value'
                    CallExpression
                      Identifier: ' scanExactNumberOfHexDigits'
                      NumericLiteral
                      FalseKeyword
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            pos'
                  EqualsToken
                  Identifier: ' start'
              ReturnStatement
                Identifier: ' value'
          ReturnStatement
            PrefixUnaryExpression
              NumericLiteral
      FunctionDeclaration
        Identifier: ' peekExtendedUnicodeEscape'
        NumberKeyword
        Block
          IfStatement
            BinaryExpression
              BinaryExpression
                CallExpression
                  Identifier: 'codePointUnchecked'
                  BinaryExpression
                    Identifier: 'pos'
                    PlusToken
                    NumericLiteral
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'u'
              AmpersandAmpersandToken
              BinaryExpression
                CallExpression
                  Identifier: ' codePointUnchecked'
                  BinaryExpression
                    Identifier: 'pos'
                    PlusToken
                    NumericLiteral
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'openBrace'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' start'
                    Identifier: ' pos'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            pos'
                  PlusEqualsToken
                  NumericLiteral
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' escapedValueString'
                    CallExpression
                      Identifier: ' scanMinimumNumberOfHexDigits'
                      NumericLiteral
                      FalseKeyword
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' escapedValue'
                    ConditionalExpression
                      Identifier: ' escapedValueString'
                      QuestionToken
                      CallExpression
                        Identifier: ' parseInt'
                        Identifier: 'escapedValueString'
                        NumericLiteral
                      ColonToken
                      PrefixUnaryExpression
                        NumericLiteral
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            pos'
                  EqualsToken
                  Identifier: ' start'
              ReturnStatement
                Identifier: ' escapedValue'
          ReturnStatement
            PrefixUnaryExpression
              NumericLiteral
      FunctionDeclaration
        Identifier: ' scanIdentifierParts'
        StringKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' result'
                StringLiteral
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' start'
                Identifier: ' pos'
          WhileStatement
            BinaryExpression
              Identifier: 'pos'
              LessThanToken
              Identifier: ' end'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' ch'
                    CallExpression
                      Identifier: ' codePointUnchecked'
                      Identifier: 'pos'
              IfStatement
                CallExpression
                  Identifier: 'isIdentifierPart'
                  Identifier: 'ch'
                  Identifier: ' languageVersion'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                pos'
                      PlusEqualsToken
                      CallExpression
                        Identifier: ' charSize'
                        Identifier: 'ch'
                IfStatement
                  BinaryExpression
                    Identifier: 'ch'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'backslash'
                  Block
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                ch'
                        EqualsToken
                        CallExpression
                          Identifier: ' peekExtendedUnicodeEscape'
                    IfStatement
                      BinaryExpression
                        BinaryExpression
                          Identifier: 'ch'
                          GreaterThanEqualsToken
                          NumericLiteral
                        AmpersandAmpersandToken
                        CallExpression
                          Identifier: ' isIdentifierPart'
                          Identifier: 'ch'
                          Identifier: ' languageVersion'
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                    result'
                            PlusEqualsToken
                            CallExpression
                              Identifier: ' scanExtendedUnicodeEscape'
                              TrueKeyword
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                    start'
                            EqualsToken
                            Identifier: ' pos'
                        ContinueStatement
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                ch'
                        EqualsToken
                        CallExpression
                          Identifier: ' peekUnicodeEscape'
                    IfStatement
                      PrefixUnaryExpression
                        ParenthesizedExpression
                          BinaryExpression
                            BinaryExpression
                              Identifier: 'ch'
                              GreaterThanEqualsToken
                              NumericLiteral
                            AmpersandAmpersandToken
                            CallExpression
                              Identifier: ' isIdentifierPart'
                              Identifier: 'ch'
                              Identifier: ' languageVersion'
                      Block
                        BreakStatement
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                tokenFlags'
                        BarEqualsToken
                        PropertyAccessExpression
                          Identifier: ' TokenFlags'
                          Identifier: 'UnicodeEscape'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                result'
                        PlusEqualsToken
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' text'
                            Identifier: 'substring'
                          Identifier: 'start'
                          Identifier: ' pos'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                result'
                        PlusEqualsToken
                        CallExpression
                          Identifier: ' utf16EncodeAsString'
                          Identifier: 'ch'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                // Valid Unicode escape is always six characters
                pos'
                        PlusEqualsToken
                        NumericLiteral
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                start'
                        EqualsToken
                        Identifier: ' pos'
                  Block
                    BreakStatement
          ExpressionStatement
            BinaryExpression
              Identifier: '
        result'
              PlusEqualsToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' text'
                  Identifier: 'substring'
                Identifier: 'start'
                Identifier: ' pos'
          ReturnStatement
            Identifier: ' result'
      FunctionDeclaration
        Identifier: ' getIdentifierToken'
        UnionType
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'Identifier'
          TypeReference
            Identifier: ' KeywordSyntaxKind'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' len'
                PropertyAccessExpression
                  Identifier: ' tokenValue'
                  Identifier: 'length'
          IfStatement
            BinaryExpression
              BinaryExpression
                Identifier: 'len'
                GreaterThanEqualsToken
                NumericLiteral
              AmpersandAmpersandToken
              BinaryExpression
                Identifier: ' len'
                LessThanEqualsToken
                NumericLiteral
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' ch'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' tokenValue'
                        Identifier: 'charCodeAt'
                      NumericLiteral
              IfStatement
                BinaryExpression
                  BinaryExpression
                    Identifier: 'ch'
                    GreaterThanEqualsToken
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'a'
                  AmpersandAmpersandToken
                  BinaryExpression
                    Identifier: ' ch'
                    LessThanEqualsToken
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'z'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' keyword'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' textToKeyword'
                            Identifier: 'get'
                          Identifier: 'tokenValue'
                  IfStatement
                    BinaryExpression
                      Identifier: 'keyword'
                      ExclamationEqualsEqualsToken
                      Identifier: ' undefined'
                    Block
                      ReturnStatement
                        BinaryExpression
                          Identifier: ' token'
                          EqualsToken
                          Identifier: ' keyword'
          ReturnStatement
            BinaryExpression
              Identifier: ' token'
              EqualsToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'Identifier'
      FunctionDeclaration
        Identifier: ' scanBinaryOrOctalDigits'
        Parameter
          Identifier: 'base'
          UnionType
            LiteralType
              NumericLiteral
            LiteralType
              NumericLiteral
        StringKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' value'
                StringLiteral
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' separatorAllowed'
                FalseKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' isPreviousTokenSeparator'
                FalseKeyword
          WhileStatement
            TrueKeyword
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' ch'
                    CallExpression
                      Identifier: ' charCodeUnchecked'
                      Identifier: 'pos'
              IfStatement
                BinaryExpression
                  Identifier: 'ch'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: '_'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                tokenFlags'
                      BarEqualsToken
                      PropertyAccessExpression
                        Identifier: ' TokenFlags'
                        Identifier: 'ContainsSeparator'
                  IfStatement
                    Identifier: 'separatorAllowed'
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    separatorAllowed'
                          EqualsToken
                          FalseKeyword
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    isPreviousTokenSeparator'
                          EqualsToken
                          TrueKeyword
                    IfStatement
                      Identifier: 'isPreviousTokenSeparator'
                      Block
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                    error'
                            PropertyAccessExpression
                              Identifier: 'Diagnostics'
                              Identifier: 'Multiple_consecutive_numeric_separators_are_not_permitted'
                            Identifier: ' pos'
                            NumericLiteral
                      Block
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                    error'
                            PropertyAccessExpression
                              Identifier: 'Diagnostics'
                              Identifier: 'Numeric_separators_are_not_allowed_here'
                            Identifier: ' pos'
                            NumericLiteral
                  ExpressionStatement
                    PostfixUnaryExpression
                      Identifier: '
                pos'
                  ContinueStatement
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            separatorAllowed'
                  EqualsToken
                  TrueKeyword
              IfStatement
                BinaryExpression
                  PrefixUnaryExpression
                    CallExpression
                      Identifier: 'isDigit'
                      Identifier: 'ch'
                  BarBarToken
                  BinaryExpression
                    BinaryExpression
                      Identifier: ' ch'
                      MinusToken
                      PropertyAccessExpression
                        Identifier: ' CharacterCodes'
                        Identifier: '_0'
                    GreaterThanEqualsToken
                    Identifier: ' base'
                Block
                  BreakStatement
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            value'
                  PlusEqualsToken
                  ElementAccessExpression
                    Identifier: ' text'
                    Identifier: 'pos'
              ExpressionStatement
                PostfixUnaryExpression
                  Identifier: '
            pos'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            isPreviousTokenSeparator'
                  EqualsToken
                  FalseKeyword
          IfStatement
            BinaryExpression
              CallExpression
                Identifier: 'charCodeUnchecked'
                BinaryExpression
                  Identifier: 'pos'
                  MinusToken
                  NumericLiteral
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' CharacterCodes'
                Identifier: '_'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            // Literal ends with underscore - not allowed
            error'
                  PropertyAccessExpression
                    Identifier: 'Diagnostics'
                    Identifier: 'Numeric_separators_are_not_allowed_here'
                  BinaryExpression
                    Identifier: ' pos'
                    MinusToken
                    NumericLiteral
                  NumericLiteral
          ReturnStatement
            Identifier: ' value'
      FunctionDeclaration
        Identifier: ' checkBigIntSuffix'
        TypeReference
          Identifier: ' SyntaxKind'
        Block
          IfStatement
            BinaryExpression
              CallExpression
                Identifier: 'charCodeUnchecked'
                Identifier: 'pos'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' CharacterCodes'
                Identifier: 'n'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            tokenValue'
                  PlusEqualsToken
                  StringLiteral
              IfStatement
                BinaryExpression
                  Identifier: 'tokenFlags'
                  AmpersandToken
                  PropertyAccessExpression
                    Identifier: ' TokenFlags'
                    Identifier: 'BinaryOrOctalSpecifier'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                tokenValue'
                      EqualsToken
                      BinaryExpression
                        CallExpression
                          Identifier: ' parsePseudoBigInt'
                          Identifier: 'tokenValue'
                        PlusToken
                        StringLiteral
              ExpressionStatement
                PostfixUnaryExpression
                  Identifier: '
            pos'
              ReturnStatement
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'BigIntLiteral'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' numericValue'
                    ConditionalExpression
                      BinaryExpression
                        Identifier: ' tokenFlags'
                        AmpersandToken
                        PropertyAccessExpression
                          Identifier: ' TokenFlags'
                          Identifier: 'BinarySpecifier'
                      QuestionToken
                      CallExpression
                        Identifier: ' parseInt'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: 'tokenValue'
                            Identifier: 'slice'
                          NumericLiteral
                        NumericLiteral
                      ColonToken
                      ConditionalExpression
                        BinaryExpression
                          Identifier: ' tokenFlags'
                          AmpersandToken
                          PropertyAccessExpression
                            Identifier: ' TokenFlags'
                            Identifier: 'OctalSpecifier'
                        QuestionToken
                        CallExpression
                          Identifier: ' parseInt'
                          CallExpression
                            PropertyAccessExpression
                              Identifier: 'tokenValue'
                              Identifier: 'slice'
                            NumericLiteral
                          NumericLiteral
                        ColonToken
                        PrefixUnaryExpression
                          Identifier: 'tokenValue'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            tokenValue'
                  EqualsToken
                  BinaryExpression
                    StringLiteral
                    PlusToken
                    Identifier: ' numericValue'
              ReturnStatement
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'NumericLiteral'
      FunctionDeclaration
        Identifier: ' scan'
        TypeReference
          Identifier: ' SyntaxKind'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        fullStartPos'
              EqualsToken
              Identifier: ' pos'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        tokenFlags'
              EqualsToken
              PropertyAccessExpression
                Identifier: ' TokenFlags'
                Identifier: 'None'
          WhileStatement
            TrueKeyword
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            tokenStart'
                  EqualsToken
                  Identifier: ' pos'
              IfStatement
                BinaryExpression
                  Identifier: 'pos'
                  GreaterThanEqualsToken
                  Identifier: ' end'
                Block
                  ReturnStatement
                    BinaryExpression
                      Identifier: ' token'
                      EqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'EndOfFileToken'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' ch'
                    CallExpression
                      Identifier: ' codePointUnchecked'
                      Identifier: 'pos'
              IfStatement
                BinaryExpression
                  Identifier: 'pos'
                  EqualsEqualsEqualsToken
                  NumericLiteral
                Block
                  IfStatement
                    BinaryExpression
                      BinaryExpression
                        Identifier: 'ch'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'hash'
                      AmpersandAmpersandToken
                      CallExpression
                        Identifier: ' isShebangTrivia'
                        Identifier: 'text'
                        Identifier: ' pos'
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    pos'
                          EqualsToken
                          CallExpression
                            Identifier: ' scanShebangTrivia'
                            Identifier: 'text'
                            Identifier: ' pos'
                      IfStatement
                        Identifier: 'skipTrivia'
                        Block
                          ContinueStatement
                        Block
                          ReturnStatement
                            BinaryExpression
                              Identifier: ' token'
                              EqualsToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'ShebangTrivia'
              SwitchStatement
                Identifier: 'ch'
                CaseBlock
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'lineFeed'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'carriageReturn'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    tokenFlags'
                        BarEqualsToken
                        PropertyAccessExpression
                          Identifier: ' TokenFlags'
                          Identifier: 'PrecedingLineBreak'
                    IfStatement
                      Identifier: 'skipTrivia'
                      Block
                        ExpressionStatement
                          PostfixUnaryExpression
                            Identifier: '
                        pos'
                        ContinueStatement
                      Block
                        IfStatement
                          BinaryExpression
                            BinaryExpression
                              BinaryExpression
                                Identifier: 'ch'
                                EqualsEqualsEqualsToken
                                PropertyAccessExpression
                                  Identifier: ' CharacterCodes'
                                  Identifier: 'carriageReturn'
                              AmpersandAmpersandToken
                              BinaryExpression
                                BinaryExpression
                                  Identifier: ' pos'
                                  PlusToken
                                  NumericLiteral
                                LessThanToken
                                Identifier: ' end'
                            AmpersandAmpersandToken
                            BinaryExpression
                              CallExpression
                                Identifier: ' charCodeUnchecked'
                                BinaryExpression
                                  Identifier: 'pos'
                                  PlusToken
                                  NumericLiteral
                              EqualsEqualsEqualsToken
                              PropertyAccessExpression
                                Identifier: ' CharacterCodes'
                                Identifier: 'lineFeed'
                          Block
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                            // consume both CR and LF
                            pos'
                                PlusEqualsToken
                                NumericLiteral
                          Block
                            ExpressionStatement
                              PostfixUnaryExpression
                                Identifier: '
                            pos'
                        ReturnStatement
                          BinaryExpression
                            Identifier: ' token'
                            EqualsToken
                            PropertyAccessExpression
                              Identifier: ' SyntaxKind'
                              Identifier: 'NewLineTrivia'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'tab'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'verticalTab'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'formFeed'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'space'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'nonBreakingSpace'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'ogham'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'enQuad'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'emQuad'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'enSpace'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'emSpace'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'threePerEmSpace'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'fourPerEmSpace'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'sixPerEmSpace'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'figureSpace'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'punctuationSpace'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'thinSpace'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'hairSpace'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'zeroWidthSpace'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'narrowNoBreakSpace'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'mathematicalSpace'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'ideographicSpace'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'byteOrderMark'
                    IfStatement
                      Identifier: 'skipTrivia'
                      Block
                        ExpressionStatement
                          PostfixUnaryExpression
                            Identifier: '
                        pos'
                        ContinueStatement
                      Block
                        WhileStatement
                          BinaryExpression
                            BinaryExpression
                              Identifier: 'pos'
                              LessThanToken
                              Identifier: ' end'
                            AmpersandAmpersandToken
                            CallExpression
                              Identifier: ' isWhiteSpaceSingleLine'
                              CallExpression
                                Identifier: 'charCodeUnchecked'
                                Identifier: 'pos'
                          Block
                            ExpressionStatement
                              PostfixUnaryExpression
                                Identifier: '
                            pos'
                        ReturnStatement
                          BinaryExpression
                            Identifier: ' token'
                            EqualsToken
                            PropertyAccessExpression
                              Identifier: ' SyntaxKind'
                              Identifier: 'WhitespaceTrivia'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'exclamation'
                    IfStatement
                      BinaryExpression
                        CallExpression
                          Identifier: 'charCodeUnchecked'
                          BinaryExpression
                            Identifier: 'pos'
                            PlusToken
                            NumericLiteral
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'equals'
                      Block
                        IfStatement
                          BinaryExpression
                            CallExpression
                              Identifier: 'charCodeUnchecked'
                              BinaryExpression
                                Identifier: 'pos'
                                PlusToken
                                NumericLiteral
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' CharacterCodes'
                              Identifier: 'equals'
                          Block
                            ReturnStatement
                              BinaryExpression
                                BinaryExpression
                                  Identifier: ' pos'
                                  PlusEqualsToken
                                  NumericLiteral
                                CommaToken
                                BinaryExpression
                                  Identifier: ' token'
                                  EqualsToken
                                  PropertyAccessExpression
                                    Identifier: ' SyntaxKind'
                                    Identifier: 'ExclamationEqualsEqualsToken'
                        ReturnStatement
                          BinaryExpression
                            BinaryExpression
                              Identifier: ' pos'
                              PlusEqualsToken
                              NumericLiteral
                            CommaToken
                            BinaryExpression
                              Identifier: ' token'
                              EqualsToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'ExclamationEqualsToken'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'ExclamationToken'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'doubleQuote'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'singleQuote'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    tokenValue'
                        EqualsToken
                        CallExpression
                          Identifier: ' scanString'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'StringLiteral'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'backtick'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        CallExpression
                          Identifier: ' scanTemplateAndSetTokenValue'
                          FalseKeyword
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'percent'
                    IfStatement
                      BinaryExpression
                        CallExpression
                          Identifier: 'charCodeUnchecked'
                          BinaryExpression
                            Identifier: 'pos'
                            PlusToken
                            NumericLiteral
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'equals'
                      Block
                        ReturnStatement
                          BinaryExpression
                            BinaryExpression
                              Identifier: ' pos'
                              PlusEqualsToken
                              NumericLiteral
                            CommaToken
                            BinaryExpression
                              Identifier: ' token'
                              EqualsToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'PercentEqualsToken'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'PercentToken'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'ampersand'
                    IfStatement
                      BinaryExpression
                        CallExpression
                          Identifier: 'charCodeUnchecked'
                          BinaryExpression
                            Identifier: 'pos'
                            PlusToken
                            NumericLiteral
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'ampersand'
                      Block
                        IfStatement
                          BinaryExpression
                            CallExpression
                              Identifier: 'charCodeUnchecked'
                              BinaryExpression
                                Identifier: 'pos'
                                PlusToken
                                NumericLiteral
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' CharacterCodes'
                              Identifier: 'equals'
                          Block
                            ReturnStatement
                              BinaryExpression
                                BinaryExpression
                                  Identifier: ' pos'
                                  PlusEqualsToken
                                  NumericLiteral
                                CommaToken
                                BinaryExpression
                                  Identifier: ' token'
                                  EqualsToken
                                  PropertyAccessExpression
                                    Identifier: ' SyntaxKind'
                                    Identifier: 'AmpersandAmpersandEqualsToken'
                        ReturnStatement
                          BinaryExpression
                            BinaryExpression
                              Identifier: ' pos'
                              PlusEqualsToken
                              NumericLiteral
                            CommaToken
                            BinaryExpression
                              Identifier: ' token'
                              EqualsToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'AmpersandAmpersandToken'
                    IfStatement
                      BinaryExpression
                        CallExpression
                          Identifier: 'charCodeUnchecked'
                          BinaryExpression
                            Identifier: 'pos'
                            PlusToken
                            NumericLiteral
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'equals'
                      Block
                        ReturnStatement
                          BinaryExpression
                            BinaryExpression
                              Identifier: ' pos'
                              PlusEqualsToken
                              NumericLiteral
                            CommaToken
                            BinaryExpression
                              Identifier: ' token'
                              EqualsToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'AmpersandEqualsToken'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'AmpersandToken'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'openParen'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'OpenParenToken'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'closeParen'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'CloseParenToken'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'asterisk'
                    IfStatement
                      BinaryExpression
                        CallExpression
                          Identifier: 'charCodeUnchecked'
                          BinaryExpression
                            Identifier: 'pos'
                            PlusToken
                            NumericLiteral
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'equals'
                      Block
                        ReturnStatement
                          BinaryExpression
                            BinaryExpression
                              Identifier: ' pos'
                              PlusEqualsToken
                              NumericLiteral
                            CommaToken
                            BinaryExpression
                              Identifier: ' token'
                              EqualsToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'AsteriskEqualsToken'
                    IfStatement
                      BinaryExpression
                        CallExpression
                          Identifier: 'charCodeUnchecked'
                          BinaryExpression
                            Identifier: 'pos'
                            PlusToken
                            NumericLiteral
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'asterisk'
                      Block
                        IfStatement
                          BinaryExpression
                            CallExpression
                              Identifier: 'charCodeUnchecked'
                              BinaryExpression
                                Identifier: 'pos'
                                PlusToken
                                NumericLiteral
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' CharacterCodes'
                              Identifier: 'equals'
                          Block
                            ReturnStatement
                              BinaryExpression
                                BinaryExpression
                                  Identifier: ' pos'
                                  PlusEqualsToken
                                  NumericLiteral
                                CommaToken
                                BinaryExpression
                                  Identifier: ' token'
                                  EqualsToken
                                  PropertyAccessExpression
                                    Identifier: ' SyntaxKind'
                                    Identifier: 'AsteriskAsteriskEqualsToken'
                        ReturnStatement
                          BinaryExpression
                            BinaryExpression
                              Identifier: ' pos'
                              PlusEqualsToken
                              NumericLiteral
                            CommaToken
                            BinaryExpression
                              Identifier: ' token'
                              EqualsToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'AsteriskAsteriskToken'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    IfStatement
                      BinaryExpression
                        BinaryExpression
                          Identifier: '
                        skipJsDocLeadingAsterisks'
                          AmpersandAmpersandToken
                          BinaryExpression
                            ParenthesizedExpression
                              BinaryExpression
                                Identifier: 'tokenFlags'
                                AmpersandToken
                                PropertyAccessExpression
                                  Identifier: ' TokenFlags'
                                  Identifier: 'PrecedingJSDocLeadingAsterisks'
                            EqualsEqualsEqualsToken
                            NumericLiteral
                        AmpersandAmpersandToken
                        ParenthesizedExpression
                          BinaryExpression
                            Identifier: 'tokenFlags'
                            AmpersandToken
                            PropertyAccessExpression
                              Identifier: ' TokenFlags'
                              Identifier: 'PrecedingLineBreak'
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        // decoration at the start of a JSDoc comment line
                        tokenFlags'
                            BarEqualsToken
                            PropertyAccessExpression
                              Identifier: ' TokenFlags'
                              Identifier: 'PrecedingJSDocLeadingAsterisks'
                        ContinueStatement
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'AsteriskToken'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'plus'
                    IfStatement
                      BinaryExpression
                        CallExpression
                          Identifier: 'charCodeUnchecked'
                          BinaryExpression
                            Identifier: 'pos'
                            PlusToken
                            NumericLiteral
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'plus'
                      Block
                        ReturnStatement
                          BinaryExpression
                            BinaryExpression
                              Identifier: ' pos'
                              PlusEqualsToken
                              NumericLiteral
                            CommaToken
                            BinaryExpression
                              Identifier: ' token'
                              EqualsToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'PlusPlusToken'
                    IfStatement
                      BinaryExpression
                        CallExpression
                          Identifier: 'charCodeUnchecked'
                          BinaryExpression
                            Identifier: 'pos'
                            PlusToken
                            NumericLiteral
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'equals'
                      Block
                        ReturnStatement
                          BinaryExpression
                            BinaryExpression
                              Identifier: ' pos'
                              PlusEqualsToken
                              NumericLiteral
                            CommaToken
                            BinaryExpression
                              Identifier: ' token'
                              EqualsToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'PlusEqualsToken'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'PlusToken'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'comma'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'CommaToken'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'minus'
                    IfStatement
                      BinaryExpression
                        CallExpression
                          Identifier: 'charCodeUnchecked'
                          BinaryExpression
                            Identifier: 'pos'
                            PlusToken
                            NumericLiteral
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'minus'
                      Block
                        ReturnStatement
                          BinaryExpression
                            BinaryExpression
                              Identifier: ' pos'
                              PlusEqualsToken
                              NumericLiteral
                            CommaToken
                            BinaryExpression
                              Identifier: ' token'
                              EqualsToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'MinusMinusToken'
                    IfStatement
                      BinaryExpression
                        CallExpression
                          Identifier: 'charCodeUnchecked'
                          BinaryExpression
                            Identifier: 'pos'
                            PlusToken
                            NumericLiteral
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'equals'
                      Block
                        ReturnStatement
                          BinaryExpression
                            BinaryExpression
                              Identifier: ' pos'
                              PlusEqualsToken
                              NumericLiteral
                            CommaToken
                            BinaryExpression
                              Identifier: ' token'
                              EqualsToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'MinusEqualsToken'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'MinusToken'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'dot'
                    IfStatement
                      CallExpression
                        Identifier: 'isDigit'
                        CallExpression
                          Identifier: 'charCodeUnchecked'
                          BinaryExpression
                            Identifier: 'pos'
                            PlusToken
                            NumericLiteral
                      Block
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                        scanNumber'
                        ReturnStatement
                          BinaryExpression
                            Identifier: ' token'
                            EqualsToken
                            PropertyAccessExpression
                              Identifier: ' SyntaxKind'
                              Identifier: 'NumericLiteral'
                    IfStatement
                      BinaryExpression
                        BinaryExpression
                          CallExpression
                            Identifier: 'charCodeUnchecked'
                            BinaryExpression
                              Identifier: 'pos'
                              PlusToken
                              NumericLiteral
                          EqualsEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' CharacterCodes'
                            Identifier: 'dot'
                        AmpersandAmpersandToken
                        BinaryExpression
                          CallExpression
                            Identifier: ' charCodeUnchecked'
                            BinaryExpression
                              Identifier: 'pos'
                              PlusToken
                              NumericLiteral
                          EqualsEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' CharacterCodes'
                            Identifier: 'dot'
                      Block
                        ReturnStatement
                          BinaryExpression
                            BinaryExpression
                              Identifier: ' pos'
                              PlusEqualsToken
                              NumericLiteral
                            CommaToken
                            BinaryExpression
                              Identifier: ' token'
                              EqualsToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'DotDotDotToken'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'DotToken'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'slash'
                    IfStatement
                      BinaryExpression
                        CallExpression
                          Identifier: 'charCodeUnchecked'
                          BinaryExpression
                            Identifier: 'pos'
                            PlusToken
                            NumericLiteral
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'slash'
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        pos'
                            PlusEqualsToken
                            NumericLiteral
                        WhileStatement
                          BinaryExpression
                            Identifier: 'pos'
                            LessThanToken
                            Identifier: ' end'
                          Block
                            IfStatement
                              CallExpression
                                Identifier: 'isLineBreak'
                                CallExpression
                                  Identifier: 'charCodeUnchecked'
                                  Identifier: 'pos'
                              Block
                                BreakStatement
                            ExpressionStatement
                              PostfixUnaryExpression
                                Identifier: '
                            pos'
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '

                        commentDirectives'
                            EqualsToken
                            CallExpression
                              Identifier: ' appendIfCommentDirective'
                              Identifier: '
                            commentDirectives'
                              CallExpression
                                PropertyAccessExpression
                                  Identifier: '
                            text'
                                  Identifier: 'slice'
                                Identifier: 'tokenStart'
                                Identifier: ' pos'
                              Identifier: '
                            commentDirectiveRegExSingleLine'
                              Identifier: '
                            tokenStart'
                        IfStatement
                          Identifier: 'skipTrivia'
                          Block
                            ContinueStatement
                          Block
                            ReturnStatement
                              BinaryExpression
                                Identifier: ' token'
                                EqualsToken
                                PropertyAccessExpression
                                  Identifier: ' SyntaxKind'
                                  Identifier: 'SingleLineCommentTrivia'
                    IfStatement
                      BinaryExpression
                        CallExpression
                          Identifier: 'charCodeUnchecked'
                          BinaryExpression
                            Identifier: 'pos'
                            PlusToken
                            NumericLiteral
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'asterisk'
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        pos'
                            PlusEqualsToken
                            NumericLiteral
                        VariableStatement
                          VariableDeclarationList
                            VariableDeclaration
                              Identifier: ' isJSDoc'
                              BinaryExpression
                                BinaryExpression
                                  CallExpression
                                    Identifier: ' charCodeUnchecked'
                                    Identifier: 'pos'
                                  EqualsEqualsEqualsToken
                                  PropertyAccessExpression
                                    Identifier: ' CharacterCodes'
                                    Identifier: 'asterisk'
                                AmpersandAmpersandToken
                                BinaryExpression
                                  CallExpression
                                    Identifier: ' charCodeUnchecked'
                                    BinaryExpression
                                      Identifier: 'pos'
                                      PlusToken
                                      NumericLiteral
                                  ExclamationEqualsEqualsToken
                                  PropertyAccessExpression
                                    Identifier: ' CharacterCodes'
                                    Identifier: 'slash'
                        VariableStatement
                          VariableDeclarationList
                            VariableDeclaration
                              Identifier: ' commentClosed'
                              FalseKeyword
                        VariableStatement
                          VariableDeclarationList
                            VariableDeclaration
                              Identifier: ' lastLineStart'
                              Identifier: ' tokenStart'
                        WhileStatement
                          BinaryExpression
                            Identifier: 'pos'
                            LessThanToken
                            Identifier: ' end'
                          Block
                            VariableStatement
                              VariableDeclarationList
                                VariableDeclaration
                                  Identifier: ' ch'
                                  CallExpression
                                    Identifier: ' charCodeUnchecked'
                                    Identifier: 'pos'
                            IfStatement
                              BinaryExpression
                                BinaryExpression
                                  Identifier: 'ch'
                                  EqualsEqualsEqualsToken
                                  PropertyAccessExpression
                                    Identifier: ' CharacterCodes'
                                    Identifier: 'asterisk'
                                AmpersandAmpersandToken
                                BinaryExpression
                                  CallExpression
                                    Identifier: ' charCodeUnchecked'
                                    BinaryExpression
                                      Identifier: 'pos'
                                      PlusToken
                                      NumericLiteral
                                  EqualsEqualsEqualsToken
                                  PropertyAccessExpression
                                    Identifier: ' CharacterCodes'
                                    Identifier: 'slash'
                              Block
                                ExpressionStatement
                                  BinaryExpression
                                    Identifier: '
                                pos'
                                    PlusEqualsToken
                                    NumericLiteral
                                ExpressionStatement
                                  BinaryExpression
                                    Identifier: '
                                commentClosed'
                                    EqualsToken
                                    TrueKeyword
                                BreakStatement
                            ExpressionStatement
                              PostfixUnaryExpression
                                Identifier: '

                            pos'
                            IfStatement
                              CallExpression
                                Identifier: 'isLineBreak'
                                Identifier: 'ch'
                              Block
                                ExpressionStatement
                                  BinaryExpression
                                    Identifier: '
                                lastLineStart'
                                    EqualsToken
                                    Identifier: ' pos'
                                ExpressionStatement
                                  BinaryExpression
                                    Identifier: '
                                tokenFlags'
                                    BarEqualsToken
                                    PropertyAccessExpression
                                      Identifier: ' TokenFlags'
                                      Identifier: 'PrecedingLineBreak'
                        IfStatement
                          BinaryExpression
                            Identifier: 'isJSDoc'
                            AmpersandAmpersandToken
                            CallExpression
                              Identifier: ' shouldParseJSDoc'
                          Block
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                            tokenFlags'
                                BarEqualsToken
                                PropertyAccessExpression
                                  Identifier: ' TokenFlags'
                                  Identifier: 'PrecedingJSDocComment'
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '

                        commentDirectives'
                            EqualsToken
                            CallExpression
                              Identifier: ' appendIfCommentDirective'
                              Identifier: 'commentDirectives'
                              CallExpression
                                PropertyAccessExpression
                                  Identifier: ' text'
                                  Identifier: 'slice'
                                Identifier: 'lastLineStart'
                                Identifier: ' pos'
                              Identifier: ' commentDirectiveRegExMultiLine'
                              Identifier: ' lastLineStart'
                        IfStatement
                          PrefixUnaryExpression
                            Identifier: 'commentClosed'
                          Block
                            ExpressionStatement
                              CallExpression
                                Identifier: '
                            error'
                                PropertyAccessExpression
                                  Identifier: 'Diagnostics'
                                  Identifier: 'Asterisk_Slash_expected'
                        IfStatement
                          Identifier: 'skipTrivia'
                          Block
                            ContinueStatement
                          Block
                            IfStatement
                              PrefixUnaryExpression
                                Identifier: 'commentClosed'
                              Block
                                ExpressionStatement
                                  BinaryExpression
                                    Identifier: '
                                tokenFlags'
                                    BarEqualsToken
                                    PropertyAccessExpression
                                      Identifier: ' TokenFlags'
                                      Identifier: 'Unterminated'
                            ReturnStatement
                              BinaryExpression
                                Identifier: ' token'
                                EqualsToken
                                PropertyAccessExpression
                                  Identifier: ' SyntaxKind'
                                  Identifier: 'MultiLineCommentTrivia'
                    IfStatement
                      BinaryExpression
                        CallExpression
                          Identifier: 'charCodeUnchecked'
                          BinaryExpression
                            Identifier: 'pos'
                            PlusToken
                            NumericLiteral
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'equals'
                      Block
                        ReturnStatement
                          BinaryExpression
                            BinaryExpression
                              Identifier: ' pos'
                              PlusEqualsToken
                              NumericLiteral
                            CommaToken
                            BinaryExpression
                              Identifier: ' token'
                              EqualsToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'SlashEqualsToken'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '

                    pos'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'SlashToken'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: '_0'
                    IfStatement
                      BinaryExpression
                        BinaryExpression
                          BinaryExpression
                            Identifier: 'pos'
                            PlusToken
                            NumericLiteral
                          LessThanToken
                          Identifier: ' end'
                        AmpersandAmpersandToken
                        ParenthesizedExpression
                          BinaryExpression
                            BinaryExpression
                              CallExpression
                                Identifier: 'charCodeUnchecked'
                                BinaryExpression
                                  Identifier: 'pos'
                                  PlusToken
                                  NumericLiteral
                              EqualsEqualsEqualsToken
                              PropertyAccessExpression
                                Identifier: ' CharacterCodes'
                                Identifier: 'X'
                            BarBarToken
                            BinaryExpression
                              CallExpression
                                Identifier: ' charCodeUnchecked'
                                BinaryExpression
                                  Identifier: 'pos'
                                  PlusToken
                                  NumericLiteral
                              EqualsEqualsEqualsToken
                              PropertyAccessExpression
                                Identifier: ' CharacterCodes'
                                Identifier: 'x'
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        pos'
                            PlusEqualsToken
                            NumericLiteral
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        tokenValue'
                            EqualsToken
                            CallExpression
                              Identifier: ' scanMinimumNumberOfHexDigits'
                              NumericLiteral
                              TrueKeyword
                        IfStatement
                          PrefixUnaryExpression
                            Identifier: 'tokenValue'
                          Block
                            ExpressionStatement
                              CallExpression
                                Identifier: '
                            error'
                                PropertyAccessExpression
                                  Identifier: 'Diagnostics'
                                  Identifier: 'Hexadecimal_digit_expected'
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                            tokenValue'
                                EqualsToken
                                StringLiteral
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        tokenValue'
                            EqualsToken
                            BinaryExpression
                              StringLiteral
                              PlusToken
                              Identifier: ' tokenValue'
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        tokenFlags'
                            BarEqualsToken
                            PropertyAccessExpression
                              Identifier: ' TokenFlags'
                              Identifier: 'HexSpecifier'
                        ReturnStatement
                          BinaryExpression
                            Identifier: ' token'
                            EqualsToken
                            CallExpression
                              Identifier: ' checkBigIntSuffix'
                      IfStatement
                        BinaryExpression
                          BinaryExpression
                            BinaryExpression
                              Identifier: 'pos'
                              PlusToken
                              NumericLiteral
                            LessThanToken
                            Identifier: ' end'
                          AmpersandAmpersandToken
                          ParenthesizedExpression
                            BinaryExpression
                              BinaryExpression
                                CallExpression
                                  Identifier: 'charCodeUnchecked'
                                  BinaryExpression
                                    Identifier: 'pos'
                                    PlusToken
                                    NumericLiteral
                                EqualsEqualsEqualsToken
                                PropertyAccessExpression
                                  Identifier: ' CharacterCodes'
                                  Identifier: 'B'
                              BarBarToken
                              BinaryExpression
                                CallExpression
                                  Identifier: ' charCodeUnchecked'
                                  BinaryExpression
                                    Identifier: 'pos'
                                    PlusToken
                                    NumericLiteral
                                EqualsEqualsEqualsToken
                                PropertyAccessExpression
                                  Identifier: ' CharacterCodes'
                                  Identifier: 'b'
                        Block
                          ExpressionStatement
                            BinaryExpression
                              Identifier: '
                        pos'
                              PlusEqualsToken
                              NumericLiteral
                          ExpressionStatement
                            BinaryExpression
                              Identifier: '
                        tokenValue'
                              EqualsToken
                              CallExpression
                                Identifier: ' scanBinaryOrOctalDigits'
                                NumericLiteral
                          IfStatement
                            PrefixUnaryExpression
                              Identifier: 'tokenValue'
                            Block
                              ExpressionStatement
                                CallExpression
                                  Identifier: '
                            error'
                                  PropertyAccessExpression
                                    Identifier: 'Diagnostics'
                                    Identifier: 'Binary_digit_expected'
                              ExpressionStatement
                                BinaryExpression
                                  Identifier: '
                            tokenValue'
                                  EqualsToken
                                  StringLiteral
                          ExpressionStatement
                            BinaryExpression
                              Identifier: '
                        tokenValue'
                              EqualsToken
                              BinaryExpression
                                StringLiteral
                                PlusToken
                                Identifier: ' tokenValue'
                          ExpressionStatement
                            BinaryExpression
                              Identifier: '
                        tokenFlags'
                              BarEqualsToken
                              PropertyAccessExpression
                                Identifier: ' TokenFlags'
                                Identifier: 'BinarySpecifier'
                          ReturnStatement
                            BinaryExpression
                              Identifier: ' token'
                              EqualsToken
                              CallExpression
                                Identifier: ' checkBigIntSuffix'
                        IfStatement
                          BinaryExpression
                            BinaryExpression
                              BinaryExpression
                                Identifier: 'pos'
                                PlusToken
                                NumericLiteral
                              LessThanToken
                              Identifier: ' end'
                            AmpersandAmpersandToken
                            ParenthesizedExpression
                              BinaryExpression
                                BinaryExpression
                                  CallExpression
                                    Identifier: 'charCodeUnchecked'
                                    BinaryExpression
                                      Identifier: 'pos'
                                      PlusToken
                                      NumericLiteral
                                  EqualsEqualsEqualsToken
                                  PropertyAccessExpression
                                    Identifier: ' CharacterCodes'
                                    Identifier: 'O'
                                BarBarToken
                                BinaryExpression
                                  CallExpression
                                    Identifier: ' charCodeUnchecked'
                                    BinaryExpression
                                      Identifier: 'pos'
                                      PlusToken
                                      NumericLiteral
                                  EqualsEqualsEqualsToken
                                  PropertyAccessExpression
                                    Identifier: ' CharacterCodes'
                                    Identifier: 'o'
                          Block
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                        pos'
                                PlusEqualsToken
                                NumericLiteral
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                        tokenValue'
                                EqualsToken
                                CallExpression
                                  Identifier: ' scanBinaryOrOctalDigits'
                                  NumericLiteral
                            IfStatement
                              PrefixUnaryExpression
                                Identifier: 'tokenValue'
                              Block
                                ExpressionStatement
                                  CallExpression
                                    Identifier: '
                            error'
                                    PropertyAccessExpression
                                      Identifier: 'Diagnostics'
                                      Identifier: 'Octal_digit_expected'
                                ExpressionStatement
                                  BinaryExpression
                                    Identifier: '
                            tokenValue'
                                    EqualsToken
                                    StringLiteral
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                        tokenValue'
                                EqualsToken
                                BinaryExpression
                                  StringLiteral
                                  PlusToken
                                  Identifier: ' tokenValue'
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                        tokenFlags'
                                BarEqualsToken
                                PropertyAccessExpression
                                  Identifier: ' TokenFlags'
                                  Identifier: 'OctalSpecifier'
                            ReturnStatement
                              BinaryExpression
                                Identifier: ' token'
                                EqualsToken
                                CallExpression
                                  Identifier: ' checkBigIntSuffix'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: '_1'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: '_2'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: '_3'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: '_4'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: '_5'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: '_6'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: '_7'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: '_8'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: '_9'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        CallExpression
                          Identifier: ' scanNumber'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'colon'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'ColonToken'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'semicolon'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'SemicolonToken'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'lessThan'
                    IfStatement
                      CallExpression
                        Identifier: 'isConflictMarkerTrivia'
                        Identifier: 'text'
                        Identifier: ' pos'
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        pos'
                            EqualsToken
                            CallExpression
                              Identifier: ' scanConflictMarkerTrivia'
                              Identifier: 'text'
                              Identifier: ' pos'
                              Identifier: ' error'
                        IfStatement
                          Identifier: 'skipTrivia'
                          Block
                            ContinueStatement
                          Block
                            ReturnStatement
                              BinaryExpression
                                Identifier: ' token'
                                EqualsToken
                                PropertyAccessExpression
                                  Identifier: ' SyntaxKind'
                                  Identifier: 'ConflictMarkerTrivia'
                    IfStatement
                      BinaryExpression
                        CallExpression
                          Identifier: 'charCodeUnchecked'
                          BinaryExpression
                            Identifier: 'pos'
                            PlusToken
                            NumericLiteral
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'lessThan'
                      Block
                        IfStatement
                          BinaryExpression
                            CallExpression
                              Identifier: 'charCodeUnchecked'
                              BinaryExpression
                                Identifier: 'pos'
                                PlusToken
                                NumericLiteral
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' CharacterCodes'
                              Identifier: 'equals'
                          Block
                            ReturnStatement
                              BinaryExpression
                                BinaryExpression
                                  Identifier: ' pos'
                                  PlusEqualsToken
                                  NumericLiteral
                                CommaToken
                                BinaryExpression
                                  Identifier: ' token'
                                  EqualsToken
                                  PropertyAccessExpression
                                    Identifier: ' SyntaxKind'
                                    Identifier: 'LessThanLessThanEqualsToken'
                        ReturnStatement
                          BinaryExpression
                            BinaryExpression
                              Identifier: ' pos'
                              PlusEqualsToken
                              NumericLiteral
                            CommaToken
                            BinaryExpression
                              Identifier: ' token'
                              EqualsToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'LessThanLessThanToken'
                    IfStatement
                      BinaryExpression
                        CallExpression
                          Identifier: 'charCodeUnchecked'
                          BinaryExpression
                            Identifier: 'pos'
                            PlusToken
                            NumericLiteral
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'equals'
                      Block
                        ReturnStatement
                          BinaryExpression
                            BinaryExpression
                              Identifier: ' pos'
                              PlusEqualsToken
                              NumericLiteral
                            CommaToken
                            BinaryExpression
                              Identifier: ' token'
                              EqualsToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'LessThanEqualsToken'
                    IfStatement
                      BinaryExpression
                        BinaryExpression
                          BinaryExpression
                            Identifier: '
                        languageVariant'
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' LanguageVariant'
                              Identifier: 'JSX'
                          AmpersandAmpersandToken
                          BinaryExpression
                            CallExpression
                              Identifier: '
                        charCodeUnchecked'
                              BinaryExpression
                                Identifier: 'pos'
                                PlusToken
                                NumericLiteral
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' CharacterCodes'
                              Identifier: 'slash'
                        AmpersandAmpersandToken
                        BinaryExpression
                          CallExpression
                            Identifier: '
                        charCodeUnchecked'
                            BinaryExpression
                              Identifier: 'pos'
                              PlusToken
                              NumericLiteral
                          ExclamationEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' CharacterCodes'
                            Identifier: 'asterisk'
                      Block
                        ReturnStatement
                          BinaryExpression
                            BinaryExpression
                              Identifier: ' pos'
                              PlusEqualsToken
                              NumericLiteral
                            CommaToken
                            BinaryExpression
                              Identifier: ' token'
                              EqualsToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'LessThanSlashToken'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'LessThanToken'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'equals'
                    IfStatement
                      CallExpression
                        Identifier: 'isConflictMarkerTrivia'
                        Identifier: 'text'
                        Identifier: ' pos'
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        pos'
                            EqualsToken
                            CallExpression
                              Identifier: ' scanConflictMarkerTrivia'
                              Identifier: 'text'
                              Identifier: ' pos'
                              Identifier: ' error'
                        IfStatement
                          Identifier: 'skipTrivia'
                          Block
                            ContinueStatement
                          Block
                            ReturnStatement
                              BinaryExpression
                                Identifier: ' token'
                                EqualsToken
                                PropertyAccessExpression
                                  Identifier: ' SyntaxKind'
                                  Identifier: 'ConflictMarkerTrivia'
                    IfStatement
                      BinaryExpression
                        CallExpression
                          Identifier: 'charCodeUnchecked'
                          BinaryExpression
                            Identifier: 'pos'
                            PlusToken
                            NumericLiteral
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'equals'
                      Block
                        IfStatement
                          BinaryExpression
                            CallExpression
                              Identifier: 'charCodeUnchecked'
                              BinaryExpression
                                Identifier: 'pos'
                                PlusToken
                                NumericLiteral
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' CharacterCodes'
                              Identifier: 'equals'
                          Block
                            ReturnStatement
                              BinaryExpression
                                BinaryExpression
                                  Identifier: ' pos'
                                  PlusEqualsToken
                                  NumericLiteral
                                CommaToken
                                BinaryExpression
                                  Identifier: ' token'
                                  EqualsToken
                                  PropertyAccessExpression
                                    Identifier: ' SyntaxKind'
                                    Identifier: 'EqualsEqualsEqualsToken'
                        ReturnStatement
                          BinaryExpression
                            BinaryExpression
                              Identifier: ' pos'
                              PlusEqualsToken
                              NumericLiteral
                            CommaToken
                            BinaryExpression
                              Identifier: ' token'
                              EqualsToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'EqualsEqualsToken'
                    IfStatement
                      BinaryExpression
                        CallExpression
                          Identifier: 'charCodeUnchecked'
                          BinaryExpression
                            Identifier: 'pos'
                            PlusToken
                            NumericLiteral
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'greaterThan'
                      Block
                        ReturnStatement
                          BinaryExpression
                            BinaryExpression
                              Identifier: ' pos'
                              PlusEqualsToken
                              NumericLiteral
                            CommaToken
                            BinaryExpression
                              Identifier: ' token'
                              EqualsToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'EqualsGreaterThanToken'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'EqualsToken'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'greaterThan'
                    IfStatement
                      CallExpression
                        Identifier: 'isConflictMarkerTrivia'
                        Identifier: 'text'
                        Identifier: ' pos'
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        pos'
                            EqualsToken
                            CallExpression
                              Identifier: ' scanConflictMarkerTrivia'
                              Identifier: 'text'
                              Identifier: ' pos'
                              Identifier: ' error'
                        IfStatement
                          Identifier: 'skipTrivia'
                          Block
                            ContinueStatement
                          Block
                            ReturnStatement
                              BinaryExpression
                                Identifier: ' token'
                                EqualsToken
                                PropertyAccessExpression
                                  Identifier: ' SyntaxKind'
                                  Identifier: 'ConflictMarkerTrivia'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '

                    pos'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'GreaterThanToken'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'question'
                    IfStatement
                      BinaryExpression
                        BinaryExpression
                          CallExpression
                            Identifier: 'charCodeUnchecked'
                            BinaryExpression
                              Identifier: 'pos'
                              PlusToken
                              NumericLiteral
                          EqualsEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' CharacterCodes'
                            Identifier: 'dot'
                        AmpersandAmpersandToken
                        PrefixUnaryExpression
                          CallExpression
                            Identifier: 'isDigit'
                            CallExpression
                              Identifier: 'charCodeUnchecked'
                              BinaryExpression
                                Identifier: 'pos'
                                PlusToken
                                NumericLiteral
                      Block
                        ReturnStatement
                          BinaryExpression
                            BinaryExpression
                              Identifier: ' pos'
                              PlusEqualsToken
                              NumericLiteral
                            CommaToken
                            BinaryExpression
                              Identifier: ' token'
                              EqualsToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'QuestionDotToken'
                    IfStatement
                      BinaryExpression
                        CallExpression
                          Identifier: 'charCodeUnchecked'
                          BinaryExpression
                            Identifier: 'pos'
                            PlusToken
                            NumericLiteral
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'question'
                      Block
                        IfStatement
                          BinaryExpression
                            CallExpression
                              Identifier: 'charCodeUnchecked'
                              BinaryExpression
                                Identifier: 'pos'
                                PlusToken
                                NumericLiteral
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' CharacterCodes'
                              Identifier: 'equals'
                          Block
                            ReturnStatement
                              BinaryExpression
                                BinaryExpression
                                  Identifier: ' pos'
                                  PlusEqualsToken
                                  NumericLiteral
                                CommaToken
                                BinaryExpression
                                  Identifier: ' token'
                                  EqualsToken
                                  PropertyAccessExpression
                                    Identifier: ' SyntaxKind'
                                    Identifier: 'QuestionQuestionEqualsToken'
                        ReturnStatement
                          BinaryExpression
                            BinaryExpression
                              Identifier: ' pos'
                              PlusEqualsToken
                              NumericLiteral
                            CommaToken
                            BinaryExpression
                              Identifier: ' token'
                              EqualsToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'QuestionQuestionToken'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'QuestionToken'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'openBracket'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'OpenBracketToken'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'closeBracket'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'CloseBracketToken'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'caret'
                    IfStatement
                      BinaryExpression
                        CallExpression
                          Identifier: 'charCodeUnchecked'
                          BinaryExpression
                            Identifier: 'pos'
                            PlusToken
                            NumericLiteral
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'equals'
                      Block
                        ReturnStatement
                          BinaryExpression
                            BinaryExpression
                              Identifier: ' pos'
                              PlusEqualsToken
                              NumericLiteral
                            CommaToken
                            BinaryExpression
                              Identifier: ' token'
                              EqualsToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'CaretEqualsToken'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'CaretToken'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'openBrace'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'OpenBraceToken'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'bar'
                    IfStatement
                      CallExpression
                        Identifier: 'isConflictMarkerTrivia'
                        Identifier: 'text'
                        Identifier: ' pos'
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        pos'
                            EqualsToken
                            CallExpression
                              Identifier: ' scanConflictMarkerTrivia'
                              Identifier: 'text'
                              Identifier: ' pos'
                              Identifier: ' error'
                        IfStatement
                          Identifier: 'skipTrivia'
                          Block
                            ContinueStatement
                          Block
                            ReturnStatement
                              BinaryExpression
                                Identifier: ' token'
                                EqualsToken
                                PropertyAccessExpression
                                  Identifier: ' SyntaxKind'
                                  Identifier: 'ConflictMarkerTrivia'
                    IfStatement
                      BinaryExpression
                        CallExpression
                          Identifier: 'charCodeUnchecked'
                          BinaryExpression
                            Identifier: 'pos'
                            PlusToken
                            NumericLiteral
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'bar'
                      Block
                        IfStatement
                          BinaryExpression
                            CallExpression
                              Identifier: 'charCodeUnchecked'
                              BinaryExpression
                                Identifier: 'pos'
                                PlusToken
                                NumericLiteral
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' CharacterCodes'
                              Identifier: 'equals'
                          Block
                            ReturnStatement
                              BinaryExpression
                                BinaryExpression
                                  Identifier: ' pos'
                                  PlusEqualsToken
                                  NumericLiteral
                                CommaToken
                                BinaryExpression
                                  Identifier: ' token'
                                  EqualsToken
                                  PropertyAccessExpression
                                    Identifier: ' SyntaxKind'
                                    Identifier: 'BarBarEqualsToken'
                        ReturnStatement
                          BinaryExpression
                            BinaryExpression
                              Identifier: ' pos'
                              PlusEqualsToken
                              NumericLiteral
                            CommaToken
                            BinaryExpression
                              Identifier: ' token'
                              EqualsToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'BarBarToken'
                    IfStatement
                      BinaryExpression
                        CallExpression
                          Identifier: 'charCodeUnchecked'
                          BinaryExpression
                            Identifier: 'pos'
                            PlusToken
                            NumericLiteral
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'equals'
                      Block
                        ReturnStatement
                          BinaryExpression
                            BinaryExpression
                              Identifier: ' pos'
                              PlusEqualsToken
                              NumericLiteral
                            CommaToken
                            BinaryExpression
                              Identifier: ' token'
                              EqualsToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'BarEqualsToken'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'BarToken'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'closeBrace'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'CloseBraceToken'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'tilde'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'TildeToken'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'at'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'AtToken'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'backslash'
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' extendedCookedChar'
                          CallExpression
                            Identifier: ' peekExtendedUnicodeEscape'
                    IfStatement
                      BinaryExpression
                        BinaryExpression
                          Identifier: 'extendedCookedChar'
                          GreaterThanEqualsToken
                          NumericLiteral
                        AmpersandAmpersandToken
                        CallExpression
                          Identifier: ' isIdentifierStart'
                          Identifier: 'extendedCookedChar'
                          Identifier: ' languageVersion'
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        tokenValue'
                            EqualsToken
                            BinaryExpression
                              CallExpression
                                Identifier: ' scanExtendedUnicodeEscape'
                                TrueKeyword
                              PlusToken
                              CallExpression
                                Identifier: ' scanIdentifierParts'
                        ReturnStatement
                          BinaryExpression
                            Identifier: ' token'
                            EqualsToken
                            CallExpression
                              Identifier: ' getIdentifierToken'
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' cookedChar'
                          CallExpression
                            Identifier: ' peekUnicodeEscape'
                    IfStatement
                      BinaryExpression
                        BinaryExpression
                          Identifier: 'cookedChar'
                          GreaterThanEqualsToken
                          NumericLiteral
                        AmpersandAmpersandToken
                        CallExpression
                          Identifier: ' isIdentifierStart'
                          Identifier: 'cookedChar'
                          Identifier: ' languageVersion'
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        pos'
                            PlusEqualsToken
                            NumericLiteral
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        tokenFlags'
                            BarEqualsToken
                            PropertyAccessExpression
                              Identifier: ' TokenFlags'
                              Identifier: 'UnicodeEscape'
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        tokenValue'
                            EqualsToken
                            BinaryExpression
                              CallExpression
                                PropertyAccessExpression
                                  Identifier: ' String'
                                  Identifier: 'fromCharCode'
                                Identifier: 'cookedChar'
                              PlusToken
                              CallExpression
                                Identifier: ' scanIdentifierParts'
                        ReturnStatement
                          BinaryExpression
                            Identifier: ' token'
                            EqualsToken
                            CallExpression
                              Identifier: ' getIdentifierToken'
                    ExpressionStatement
                      CallExpression
                        Identifier: '

                    error'
                        PropertyAccessExpression
                          Identifier: 'Diagnostics'
                          Identifier: 'Invalid_character'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'Unknown'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'hash'
                    IfStatement
                      BinaryExpression
                        BinaryExpression
                          Identifier: 'pos'
                          ExclamationEqualsEqualsToken
                          NumericLiteral
                        AmpersandAmpersandToken
                        BinaryExpression
                          ElementAccessExpression
                            Identifier: ' text'
                            BinaryExpression
                              Identifier: 'pos'
                              PlusToken
                              NumericLiteral
                          EqualsEqualsEqualsToken
                          StringLiteral
                      Block
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                        error'
                            PropertyAccessExpression
                              Identifier: 'Diagnostics'
                              Identifier: 'can_only_be_used_at_the_start_of_a_file'
                            Identifier: ' pos'
                            NumericLiteral
                        ExpressionStatement
                          PostfixUnaryExpression
                            Identifier: '
                        pos'
                        ReturnStatement
                          BinaryExpression
                            Identifier: ' token'
                            EqualsToken
                            PropertyAccessExpression
                              Identifier: ' SyntaxKind'
                              Identifier: 'Unknown'
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' charAfterHash'
                          CallExpression
                            Identifier: ' codePointUnchecked'
                            BinaryExpression
                              Identifier: 'pos'
                              PlusToken
                              NumericLiteral
                    IfStatement
                      BinaryExpression
                        Identifier: 'charAfterHash'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'backslash'
                      Block
                        ExpressionStatement
                          PostfixUnaryExpression
                            Identifier: '
                        pos'
                        VariableStatement
                          VariableDeclarationList
                            VariableDeclaration
                              Identifier: ' extendedCookedChar'
                              CallExpression
                                Identifier: ' peekExtendedUnicodeEscape'
                        IfStatement
                          BinaryExpression
                            BinaryExpression
                              Identifier: 'extendedCookedChar'
                              GreaterThanEqualsToken
                              NumericLiteral
                            AmpersandAmpersandToken
                            CallExpression
                              Identifier: ' isIdentifierStart'
                              Identifier: 'extendedCookedChar'
                              Identifier: ' languageVersion'
                          Block
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                            tokenValue'
                                EqualsToken
                                BinaryExpression
                                  BinaryExpression
                                    StringLiteral
                                    PlusToken
                                    CallExpression
                                      Identifier: ' scanExtendedUnicodeEscape'
                                      TrueKeyword
                                  PlusToken
                                  CallExpression
                                    Identifier: ' scanIdentifierParts'
                            ReturnStatement
                              BinaryExpression
                                Identifier: ' token'
                                EqualsToken
                                PropertyAccessExpression
                                  Identifier: ' SyntaxKind'
                                  Identifier: 'PrivateIdentifier'
                        VariableStatement
                          VariableDeclarationList
                            VariableDeclaration
                              Identifier: ' cookedChar'
                              CallExpression
                                Identifier: ' peekUnicodeEscape'
                        IfStatement
                          BinaryExpression
                            BinaryExpression
                              Identifier: 'cookedChar'
                              GreaterThanEqualsToken
                              NumericLiteral
                            AmpersandAmpersandToken
                            CallExpression
                              Identifier: ' isIdentifierStart'
                              Identifier: 'cookedChar'
                              Identifier: ' languageVersion'
                          Block
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                            pos'
                                PlusEqualsToken
                                NumericLiteral
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                            tokenFlags'
                                BarEqualsToken
                                PropertyAccessExpression
                                  Identifier: ' TokenFlags'
                                  Identifier: 'UnicodeEscape'
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                            tokenValue'
                                EqualsToken
                                BinaryExpression
                                  BinaryExpression
                                    StringLiteral
                                    PlusToken
                                    CallExpression
                                      PropertyAccessExpression
                                        Identifier: ' String'
                                        Identifier: 'fromCharCode'
                                      Identifier: 'cookedChar'
                                  PlusToken
                                  CallExpression
                                    Identifier: ' scanIdentifierParts'
                            ReturnStatement
                              BinaryExpression
                                Identifier: ' token'
                                EqualsToken
                                PropertyAccessExpression
                                  Identifier: ' SyntaxKind'
                                  Identifier: 'PrivateIdentifier'
                        ExpressionStatement
                          PostfixUnaryExpression
                            Identifier: '
                        pos'
                    IfStatement
                      CallExpression
                        Identifier: 'isIdentifierStart'
                        Identifier: 'charAfterHash'
                        Identifier: ' languageVersion'
                      Block
                        ExpressionStatement
                          PostfixUnaryExpression
                            Identifier: '
                        pos'
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                        // We're relying on scanIdentifier's behavior and adjusting the token kind after the fact.
                        // Notably absent from this block is the fact that calling a function named "scanIdentifier",
                        // but identifiers don't include '#', and that function doesn't deal with it at all.
                        // This works because 'scanIdentifier' tries to reuse source characters and builds up substrings;
                        // however, it starts at the 'tokenPos' which includes the '#', and will "accidentally" prepend the '#' for us.
                        scanIdentifier'
                            Identifier: 'charAfterHash'
                            Identifier: ' languageVersion'
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        tokenValue'
                            EqualsToken
                            StringLiteral
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                        error'
                            PropertyAccessExpression
                              Identifier: 'Diagnostics'
                              Identifier: 'Invalid_character'
                            PostfixUnaryExpression
                              Identifier: ' pos'
                            CallExpression
                              Identifier: ' charSize'
                              Identifier: 'ch'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'PrivateIdentifier'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'replacementCharacter'
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                    error'
                        PropertyAccessExpression
                          Identifier: 'Diagnostics'
                          Identifier: 'File_appears_to_be_binary'
                        NumericLiteral
                        NumericLiteral
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    pos'
                        EqualsToken
                        Identifier: ' end'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'NonTextFileMarkerTrivia'
                  DefaultClause
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' identifierKind'
                          CallExpression
                            Identifier: ' scanIdentifier'
                            Identifier: 'ch'
                            Identifier: ' languageVersion'
                    IfStatement
                      Identifier: 'identifierKind'
                      Block
                        ReturnStatement
                          BinaryExpression
                            Identifier: ' token'
                            EqualsToken
                            Identifier: ' identifierKind'
                      IfStatement
                        CallExpression
                          Identifier: 'isWhiteSpaceSingleLine'
                          Identifier: 'ch'
                        Block
                          ExpressionStatement
                            BinaryExpression
                              Identifier: '
                        pos'
                              PlusEqualsToken
                              CallExpression
                                Identifier: ' charSize'
                                Identifier: 'ch'
                          ContinueStatement
                        IfStatement
                          CallExpression
                            Identifier: 'isLineBreak'
                            Identifier: 'ch'
                          Block
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                        tokenFlags'
                                BarEqualsToken
                                PropertyAccessExpression
                                  Identifier: ' TokenFlags'
                                  Identifier: 'PrecedingLineBreak'
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                        pos'
                                PlusEqualsToken
                                CallExpression
                                  Identifier: ' charSize'
                                  Identifier: 'ch'
                            ContinueStatement
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' size'
                          CallExpression
                            Identifier: ' charSize'
                            Identifier: 'ch'
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                    error'
                        PropertyAccessExpression
                          Identifier: 'Diagnostics'
                          Identifier: 'Invalid_character'
                        Identifier: ' pos'
                        Identifier: ' size'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    pos'
                        PlusEqualsToken
                        Identifier: ' size'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'Unknown'
      FunctionDeclaration
        Identifier: ' shouldParseJSDoc'
        Block
          SwitchStatement
            Identifier: 'jsDocParsingMode'
            CaseBlock
              CaseClause
                PropertyAccessExpression
                  Identifier: ' JSDocParsingMode'
                  Identifier: 'ParseAll'
                ReturnStatement
                  TrueKeyword
              CaseClause
                PropertyAccessExpression
                  Identifier: ' JSDocParsingMode'
                  Identifier: 'ParseNone'
                ReturnStatement
                  FalseKeyword
          IfStatement
            BinaryExpression
              BinaryExpression
                Identifier: 'scriptKind'
                ExclamationEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' ScriptKind'
                  Identifier: 'TS'
              AmpersandAmpersandToken
              BinaryExpression
                Identifier: ' scriptKind'
                ExclamationEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' ScriptKind'
                  Identifier: 'TSX'
            Block
              ReturnStatement
                TrueKeyword
          IfStatement
            BinaryExpression
              Identifier: 'jsDocParsingMode'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' JSDocParsingMode'
                Identifier: 'ParseForTypeInfo'
            Block
              ReturnStatement
                FalseKeyword
          ReturnStatement
            CallExpression
              PropertyAccessExpression
                Identifier: ' jsDocSeeOrLink'
                Identifier: 'test'
              CallExpression
                PropertyAccessExpression
                  Identifier: 'text'
                  Identifier: 'slice'
                Identifier: 'fullStartPos'
                Identifier: ' pos'
      FunctionDeclaration
        Identifier: ' reScanInvalidIdentifier'
        TypeReference
          Identifier: ' SyntaxKind'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        Debug'
                Identifier: 'assert'
              BinaryExpression
                Identifier: 'token'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'Unknown'
              StringLiteral
          ExpressionStatement
            BinaryExpression
              Identifier: '
        pos'
              EqualsToken
              BinaryExpression
                Identifier: ' tokenStart'
                EqualsToken
                Identifier: ' fullStartPos'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        tokenFlags'
              EqualsToken
              NumericLiteral
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' ch'
                CallExpression
                  Identifier: ' codePointUnchecked'
                  Identifier: 'pos'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' identifierKind'
                CallExpression
                  Identifier: ' scanIdentifier'
                  Identifier: 'ch'
                  PropertyAccessExpression
                    Identifier: ' ScriptTarget'
                    Identifier: 'ESNext'
          IfStatement
            Identifier: 'identifierKind'
            Block
              ReturnStatement
                BinaryExpression
                  Identifier: ' token'
                  EqualsToken
                  Identifier: ' identifierKind'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        pos'
              PlusEqualsToken
              CallExpression
                Identifier: ' charSize'
                Identifier: 'ch'
          ReturnStatement
            Identifier: ' token'
      FunctionDeclaration
        Identifier: ' scanIdentifier'
        Parameter
          Identifier: 'startCharacter'
          NumberKeyword
        Parameter
          Identifier: ' languageVersion'
          TypeReference
            Identifier: ' ScriptTarget'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' ch'
                Identifier: ' startCharacter'
          IfStatement
            CallExpression
              Identifier: 'isIdentifierStart'
              Identifier: 'ch'
              Identifier: ' languageVersion'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            pos'
                  PlusEqualsToken
                  CallExpression
                    Identifier: ' charSize'
                    Identifier: 'ch'
              WhileStatement
                BinaryExpression
                  BinaryExpression
                    Identifier: 'pos'
                    LessThanToken
                    Identifier: ' end'
                  AmpersandAmpersandToken
                  CallExpression
                    Identifier: ' isIdentifierPart'
                    BinaryExpression
                      Identifier: 'ch'
                      EqualsToken
                      CallExpression
                        Identifier: ' codePointUnchecked'
                        Identifier: 'pos'
                    Identifier: ' languageVersion'
                ExpressionStatement
                  BinaryExpression
                    Identifier: ' pos'
                    PlusEqualsToken
                    CallExpression
                      Identifier: ' charSize'
                      Identifier: 'ch'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            tokenValue'
                  EqualsToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' text'
                      Identifier: 'substring'
                    Identifier: 'tokenStart'
                    Identifier: ' pos'
              IfStatement
                BinaryExpression
                  Identifier: 'ch'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'backslash'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                tokenValue'
                      PlusEqualsToken
                      CallExpression
                        Identifier: ' scanIdentifierParts'
              ReturnStatement
                CallExpression
                  Identifier: ' getIdentifierToken'
      FunctionDeclaration
        Identifier: ' reScanGreaterToken'
        TypeReference
          Identifier: ' SyntaxKind'
        Block
          IfStatement
            BinaryExpression
              Identifier: 'token'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'GreaterThanToken'
            Block
              IfStatement
                BinaryExpression
                  CallExpression
                    Identifier: 'charCodeUnchecked'
                    Identifier: 'pos'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'greaterThan'
                Block
                  IfStatement
                    BinaryExpression
                      CallExpression
                        Identifier: 'charCodeUnchecked'
                        BinaryExpression
                          Identifier: 'pos'
                          PlusToken
                          NumericLiteral
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' CharacterCodes'
                        Identifier: 'greaterThan'
                    Block
                      IfStatement
                        BinaryExpression
                          CallExpression
                            Identifier: 'charCodeUnchecked'
                            BinaryExpression
                              Identifier: 'pos'
                              PlusToken
                              NumericLiteral
                          EqualsEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' CharacterCodes'
                            Identifier: 'equals'
                        Block
                          ReturnStatement
                            BinaryExpression
                              BinaryExpression
                                Identifier: ' pos'
                                PlusEqualsToken
                                NumericLiteral
                              CommaToken
                              BinaryExpression
                                Identifier: ' token'
                                EqualsToken
                                PropertyAccessExpression
                                  Identifier: ' SyntaxKind'
                                  Identifier: 'GreaterThanGreaterThanGreaterThanEqualsToken'
                      ReturnStatement
                        BinaryExpression
                          BinaryExpression
                            Identifier: ' pos'
                            PlusEqualsToken
                            NumericLiteral
                          CommaToken
                          BinaryExpression
                            Identifier: ' token'
                            EqualsToken
                            PropertyAccessExpression
                              Identifier: ' SyntaxKind'
                              Identifier: 'GreaterThanGreaterThanGreaterThanToken'
                  IfStatement
                    BinaryExpression
                      CallExpression
                        Identifier: 'charCodeUnchecked'
                        BinaryExpression
                          Identifier: 'pos'
                          PlusToken
                          NumericLiteral
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' CharacterCodes'
                        Identifier: 'equals'
                    Block
                      ReturnStatement
                        BinaryExpression
                          BinaryExpression
                            Identifier: ' pos'
                            PlusEqualsToken
                            NumericLiteral
                          CommaToken
                          BinaryExpression
                            Identifier: ' token'
                            EqualsToken
                            PropertyAccessExpression
                              Identifier: ' SyntaxKind'
                              Identifier: 'GreaterThanGreaterThanEqualsToken'
                  ExpressionStatement
                    PostfixUnaryExpression
                      Identifier: '
                pos'
                  ReturnStatement
                    BinaryExpression
                      Identifier: ' token'
                      EqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'GreaterThanGreaterThanToken'
              IfStatement
                BinaryExpression
                  CallExpression
                    Identifier: 'charCodeUnchecked'
                    Identifier: 'pos'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'equals'
                Block
                  ExpressionStatement
                    PostfixUnaryExpression
                      Identifier: '
                pos'
                  ReturnStatement
                    BinaryExpression
                      Identifier: ' token'
                      EqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'GreaterThanEqualsToken'
          ReturnStatement
            Identifier: ' token'
      FunctionDeclaration
        Identifier: ' reScanAsteriskEqualsToken'
        TypeReference
          Identifier: ' SyntaxKind'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        Debug'
                Identifier: 'assert'
              BinaryExpression
                Identifier: 'token'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'AsteriskEqualsToken'
              StringLiteral
          ExpressionStatement
            BinaryExpression
              Identifier: '
        pos'
              EqualsToken
              BinaryExpression
                Identifier: ' tokenStart'
                PlusToken
                NumericLiteral
          ReturnStatement
            BinaryExpression
              Identifier: ' token'
              EqualsToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'EqualsToken'
      FunctionDeclaration
        Identifier: ' reScanSlashToken'
        Parameter
          Identifier: 'reportErrors'
          QuestionToken
          BooleanKeyword
        TypeReference
          Identifier: ' SyntaxKind'
        Block
          IfStatement
            BinaryExpression
              BinaryExpression
                Identifier: 'token'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'SlashToken'
              BarBarToken
              BinaryExpression
                Identifier: ' token'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'SlashEqualsToken'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' startOfRegExpBody'
                    BinaryExpression
                      Identifier: ' tokenStart'
                      PlusToken
                      NumericLiteral
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            pos'
                  EqualsToken
                  Identifier: ' startOfRegExpBody'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' inEscape'
                    FalseKeyword
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' namedCaptureGroups'
                    FalseKeyword
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' inCharacterClass'
                    FalseKeyword
              WhileStatement
                TrueKeyword
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' ch'
                        CallExpression
                          Identifier: ' charCodeChecked'
                          Identifier: 'pos'
                  IfStatement
                    BinaryExpression
                      BinaryExpression
                        Identifier: 'ch'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'EOF'
                      BarBarToken
                      CallExpression
                        Identifier: ' isLineBreak'
                        Identifier: 'ch'
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    tokenFlags'
                          BarEqualsToken
                          PropertyAccessExpression
                            Identifier: ' TokenFlags'
                            Identifier: 'Unterminated'
                      BreakStatement
                  IfStatement
                    Identifier: 'inEscape'
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    // Parsing an escape character;
                    // reset the flag and just advance to the next char.
                    inEscape'
                          EqualsToken
                          FalseKeyword
                    IfStatement
                      BinaryExpression
                        BinaryExpression
                          Identifier: 'ch'
                          EqualsEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' CharacterCodes'
                            Identifier: 'slash'
                        AmpersandAmpersandToken
                        PrefixUnaryExpression
                          Identifier: 'inCharacterClass'
                      Block
                        BreakStatement
                      IfStatement
                        BinaryExpression
                          Identifier: 'ch'
                          EqualsEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' CharacterCodes'
                            Identifier: 'openBracket'
                        Block
                          ExpressionStatement
                            BinaryExpression
                              Identifier: '
                    inCharacterClass'
                              EqualsToken
                              TrueKeyword
                        IfStatement
                          BinaryExpression
                            Identifier: 'ch'
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' CharacterCodes'
                              Identifier: 'backslash'
                          Block
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                    inEscape'
                                EqualsToken
                                TrueKeyword
                          IfStatement
                            BinaryExpression
                              Identifier: 'ch'
                              EqualsEqualsEqualsToken
                              PropertyAccessExpression
                                Identifier: ' CharacterCodes'
                                Identifier: 'closeBracket'
                            Block
                              ExpressionStatement
                                BinaryExpression
                                  Identifier: '
                    inCharacterClass'
                                  EqualsToken
                                  FalseKeyword
                            IfStatement
                              BinaryExpression
                                BinaryExpression
                                  BinaryExpression
                                    BinaryExpression
                                      BinaryExpression
                                        PrefixUnaryExpression
                                          Identifier: 'inCharacterClass'
                                        AmpersandAmpersandToken
                                        BinaryExpression
                                          Identifier: ' ch'
                                          EqualsEqualsEqualsToken
                                          PropertyAccessExpression
                                            Identifier: ' CharacterCodes'
                                            Identifier: 'openParen'
                                      AmpersandAmpersandToken
                                      BinaryExpression
                                        CallExpression
                                          Identifier: ' charCodeChecked'
                                          BinaryExpression
                                            Identifier: 'pos'
                                            PlusToken
                                            NumericLiteral
                                        EqualsEqualsEqualsToken
                                        PropertyAccessExpression
                                          Identifier: ' CharacterCodes'
                                          Identifier: 'question'
                                    AmpersandAmpersandToken
                                    BinaryExpression
                                      CallExpression
                                        Identifier: ' charCodeChecked'
                                        BinaryExpression
                                          Identifier: 'pos'
                                          PlusToken
                                          NumericLiteral
                                      EqualsEqualsEqualsToken
                                      PropertyAccessExpression
                                        Identifier: ' CharacterCodes'
                                        Identifier: 'lessThan'
                                  AmpersandAmpersandToken
                                  BinaryExpression
                                    CallExpression
                                      Identifier: ' charCodeChecked'
                                      BinaryExpression
                                        Identifier: 'pos'
                                        PlusToken
                                        NumericLiteral
                                    ExclamationEqualsEqualsToken
                                    PropertyAccessExpression
                                      Identifier: ' CharacterCodes'
                                      Identifier: 'equals'
                                AmpersandAmpersandToken
                                BinaryExpression
                                  CallExpression
                                    Identifier: ' charCodeChecked'
                                    BinaryExpression
                                      Identifier: 'pos'
                                      PlusToken
                                      NumericLiteral
                                  ExclamationEqualsEqualsToken
                                  PropertyAccessExpression
                                    Identifier: ' CharacterCodes'
                                    Identifier: 'exclamation'
                              Block
                                ExpressionStatement
                                  BinaryExpression
                                    Identifier: '
                    namedCaptureGroups'
                                    EqualsToken
                                    TrueKeyword
                  ExpressionStatement
                    PostfixUnaryExpression
                      Identifier: '
                pos'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' endOfRegExpBody'
                    Identifier: ' pos'
              IfStatement
                BinaryExpression
                  Identifier: 'tokenFlags'
                  AmpersandToken
                  PropertyAccessExpression
                    Identifier: ' TokenFlags'
                    Identifier: 'Unterminated'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                // Search for the nearest unbalanced bracket for better recovery. Since the expression is
                // invalid anyways, we take nested square brackets into consideration for the best guess.
                pos'
                      EqualsToken
                      Identifier: ' startOfRegExpBody'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                inEscape'
                      EqualsToken
                      FalseKeyword
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' characterClassDepth'
                        NumericLiteral
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' inDecimalQuantifier'
                        FalseKeyword
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' groupDepth'
                        NumericLiteral
                  WhileStatement
                    BinaryExpression
                      Identifier: 'pos'
                      LessThanToken
                      Identifier: ' endOfRegExpBody'
                    Block
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' ch'
                            CallExpression
                              Identifier: ' charCodeUnchecked'
                              Identifier: 'pos'
                      IfStatement
                        Identifier: 'inEscape'
                        Block
                          ExpressionStatement
                            BinaryExpression
                              Identifier: '
                        inEscape'
                              EqualsToken
                              FalseKeyword
                        IfStatement
                          BinaryExpression
                            Identifier: 'ch'
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' CharacterCodes'
                              Identifier: 'backslash'
                          Block
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                        inEscape'
                                EqualsToken
                                TrueKeyword
                          IfStatement
                            BinaryExpression
                              Identifier: 'ch'
                              EqualsEqualsEqualsToken
                              PropertyAccessExpression
                                Identifier: ' CharacterCodes'
                                Identifier: 'openBracket'
                            Block
                              ExpressionStatement
                                PostfixUnaryExpression
                                  Identifier: '
                        characterClassDepth'
                            IfStatement
                              BinaryExpression
                                BinaryExpression
                                  Identifier: 'ch'
                                  EqualsEqualsEqualsToken
                                  PropertyAccessExpression
                                    Identifier: ' CharacterCodes'
                                    Identifier: 'closeBracket'
                                AmpersandAmpersandToken
                                Identifier: ' characterClassDepth'
                              Block
                                ExpressionStatement
                                  PostfixUnaryExpression
                                    Identifier: '
                        characterClassDepth'
                              IfStatement
                                PrefixUnaryExpression
                                  Identifier: 'characterClassDepth'
                                Block
                                  IfStatement
                                    BinaryExpression
                                      Identifier: 'ch'
                                      EqualsEqualsEqualsToken
                                      PropertyAccessExpression
                                        Identifier: ' CharacterCodes'
                                        Identifier: 'openBrace'
                                    Block
                                      ExpressionStatement
                                        BinaryExpression
                                          Identifier: '
                            inDecimalQuantifier'
                                          EqualsToken
                                          TrueKeyword
                                    IfStatement
                                      BinaryExpression
                                        BinaryExpression
                                          Identifier: 'ch'
                                          EqualsEqualsEqualsToken
                                          PropertyAccessExpression
                                            Identifier: ' CharacterCodes'
                                            Identifier: 'closeBrace'
                                        AmpersandAmpersandToken
                                        Identifier: ' inDecimalQuantifier'
                                      Block
                                        ExpressionStatement
                                          BinaryExpression
                                            Identifier: '
                            inDecimalQuantifier'
                                            EqualsToken
                                            FalseKeyword
                                      IfStatement
                                        PrefixUnaryExpression
                                          Identifier: 'inDecimalQuantifier'
                                        Block
                                          IfStatement
                                            BinaryExpression
                                              Identifier: 'ch'
                                              EqualsEqualsEqualsToken
                                              PropertyAccessExpression
                                                Identifier: ' CharacterCodes'
                                                Identifier: 'openParen'
                                            Block
                                              ExpressionStatement
                                                PostfixUnaryExpression
                                                  Identifier: '
                                groupDepth'
                                            IfStatement
                                              BinaryExpression
                                                BinaryExpression
                                                  Identifier: 'ch'
                                                  EqualsEqualsEqualsToken
                                                  PropertyAccessExpression
                                                    Identifier: ' CharacterCodes'
                                                    Identifier: 'closeParen'
                                                AmpersandAmpersandToken
                                                Identifier: ' groupDepth'
                                              Block
                                                ExpressionStatement
                                                  PostfixUnaryExpression
                                                    Identifier: '
                                groupDepth'
                                              IfStatement
                                                BinaryExpression
                                                  BinaryExpression
                                                    BinaryExpression
                                                      Identifier: 'ch'
                                                      EqualsEqualsEqualsToken
                                                      PropertyAccessExpression
                                                        Identifier: ' CharacterCodes'
                                                        Identifier: 'closeParen'
                                                    BarBarToken
                                                    BinaryExpression
                                                      Identifier: ' ch'
                                                      EqualsEqualsEqualsToken
                                                      PropertyAccessExpression
                                                        Identifier: ' CharacterCodes'
                                                        Identifier: 'closeBracket'
                                                  BarBarToken
                                                  BinaryExpression
                                                    Identifier: ' ch'
                                                    EqualsEqualsEqualsToken
                                                    PropertyAccessExpression
                                                      Identifier: ' CharacterCodes'
                                                      Identifier: 'closeBrace'
                                                Block
                                                  BreakStatement
                      ExpressionStatement
                        PostfixUnaryExpression
                          Identifier: '
                    pos'
                  WhileStatement
                    BinaryExpression
                      CallExpression
                        Identifier: 'isWhiteSpaceLike'
                        CallExpression
                          Identifier: 'charCodeChecked'
                          BinaryExpression
                            Identifier: 'pos'
                            MinusToken
                            NumericLiteral
                      BarBarToken
                      BinaryExpression
                        CallExpression
                          Identifier: ' charCodeChecked'
                          BinaryExpression
                            Identifier: 'pos'
                            MinusToken
                            NumericLiteral
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'semicolon'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: ' pos'
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                error'
                      PropertyAccessExpression
                        Identifier: 'Diagnostics'
                        Identifier: 'Unterminated_regular_expression_literal'
                      Identifier: ' tokenStart'
                      BinaryExpression
                        Identifier: ' pos'
                        MinusToken
                        Identifier: ' tokenStart'
                Block
                  ExpressionStatement
                    PostfixUnaryExpression
                      Identifier: '
                // Consume the slash character
                pos'
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' regExpFlags'
                        PropertyAccessExpression
                          Identifier: ' RegularExpressionFlags'
                          Identifier: 'None'
                  WhileStatement
                    TrueKeyword
                    Block
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' ch'
                            CallExpression
                              Identifier: ' codePointChecked'
                              Identifier: 'pos'
                      IfStatement
                        BinaryExpression
                          BinaryExpression
                            Identifier: 'ch'
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' CharacterCodes'
                              Identifier: 'EOF'
                          BarBarToken
                          PrefixUnaryExpression
                            CallExpression
                              Identifier: 'isIdentifierPart'
                              Identifier: 'ch'
                              Identifier: ' languageVersion'
                        Block
                          BreakStatement
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' size'
                            CallExpression
                              Identifier: ' charSize'
                              Identifier: 'ch'
                      IfStatement
                        Identifier: 'reportErrors'
                        Block
                          VariableStatement
                            VariableDeclarationList
                              VariableDeclaration
                                Identifier: ' flag'
                                CallExpression
                                  Identifier: ' characterCodeToRegularExpressionFlag'
                                  Identifier: 'ch'
                          IfStatement
                            BinaryExpression
                              Identifier: 'flag'
                              EqualsEqualsEqualsToken
                              Identifier: ' undefined'
                            Block
                              ExpressionStatement
                                CallExpression
                                  Identifier: '
                            error'
                                  PropertyAccessExpression
                                    Identifier: 'Diagnostics'
                                    Identifier: 'Unknown_regular_expression_flag'
                                  Identifier: ' pos'
                                  Identifier: ' size'
                            IfStatement
                              BinaryExpression
                                Identifier: 'regExpFlags'
                                AmpersandToken
                                Identifier: ' flag'
                              Block
                                ExpressionStatement
                                  CallExpression
                                    Identifier: '
                            error'
                                    PropertyAccessExpression
                                      Identifier: 'Diagnostics'
                                      Identifier: 'Duplicate_regular_expression_flag'
                                    Identifier: ' pos'
                                    Identifier: ' size'
                              IfStatement
                                BinaryExpression
                                  ParenthesizedExpression
                                    BinaryExpression
                                      ParenthesizedExpression
                                        BinaryExpression
                                          Identifier: 'regExpFlags'
                                          BarToken
                                          Identifier: ' flag'
                                      AmpersandToken
                                      PropertyAccessExpression
                                        Identifier: ' RegularExpressionFlags'
                                        Identifier: 'AnyUnicodeMode'
                                  EqualsEqualsEqualsToken
                                  PropertyAccessExpression
                                    Identifier: ' RegularExpressionFlags'
                                    Identifier: 'AnyUnicodeMode'
                                Block
                                  ExpressionStatement
                                    CallExpression
                                      Identifier: '
                            error'
                                      PropertyAccessExpression
                                        Identifier: 'Diagnostics'
                                        Identifier: 'The_Unicode_u_flag_and_the_Unicode_Sets_v_flag_cannot_be_set_simultaneously'
                                      Identifier: ' pos'
                                      Identifier: ' size'
                                Block
                                  ExpressionStatement
                                    BinaryExpression
                                      Identifier: '
                            regExpFlags'
                                      BarEqualsToken
                                      Identifier: ' flag'
                                  ExpressionStatement
                                    CallExpression
                                      Identifier: '
                            checkRegularExpressionFlagAvailability'
                                      Identifier: 'flag'
                                      Identifier: ' size'
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    pos'
                          PlusEqualsToken
                          Identifier: ' size'
                  IfStatement
                    Identifier: 'reportErrors'
                    Block
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    scanRange'
                          Identifier: 'startOfRegExpBody'
                          BinaryExpression
                            Identifier: ' endOfRegExpBody'
                            MinusToken
                            Identifier: ' startOfRegExpBody'
                          ArrowFunction
                            EqualsGreaterThanToken
                            Block
                              ExpressionStatement
                                CallExpression
                                  Identifier: '
                        scanRegularExpressionWorker'
                                  Identifier: 'regExpFlags'
                                  TrueKeyword
                                  Identifier: ' namedCaptureGroups'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            tokenValue'
                  EqualsToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' text'
                      Identifier: 'substring'
                    Identifier: 'tokenStart'
                    Identifier: ' pos'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            token'
                  EqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'RegularExpressionLiteral'
          ReturnStatement
            Identifier: ' token'
      FunctionDeclaration
        Identifier: ' scanRegularExpressionWorker'
        Parameter
          Identifier: 'regExpFlags'
          TypeReference
            Identifier: ' RegularExpressionFlags'
        Parameter
          Identifier: ' annexB'
          BooleanKeyword
        Parameter
          Identifier: ' namedCaptureGroups'
          BooleanKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' unicodeSetsMode'
                PrefixUnaryExpression
                  PrefixUnaryExpression
                    ParenthesizedExpression
                      BinaryExpression
                        Identifier: 'regExpFlags'
                        AmpersandToken
                        PropertyAccessExpression
                          Identifier: ' RegularExpressionFlags'
                          Identifier: 'UnicodeSets'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' anyUnicodeMode'
                PrefixUnaryExpression
                  PrefixUnaryExpression
                    ParenthesizedExpression
                      BinaryExpression
                        Identifier: 'regExpFlags'
                        AmpersandToken
                        PropertyAccessExpression
                          Identifier: ' RegularExpressionFlags'
                          Identifier: 'AnyUnicodeMode'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' anyUnicodeModeOrNonAnnexB'
                BinaryExpression
                  Identifier: ' anyUnicodeMode'
                  BarBarToken
                  PrefixUnaryExpression
                    Identifier: 'annexB'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' mayContainStrings'
                FalseKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' numberOfCapturingGroups'
                NumericLiteral
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' groupSpecifiers'
                UnionType
                  TypeReference
                    Identifier: ' Set'
                    StringKeyword
                  UndefinedKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' groupNameReferences'
                UnionType
                  ArrayType
                    ParenthesizedType
                      IntersectionType
                        TypeReference
                          Identifier: 'TextRange'
                        TypeLiteral
                          PropertySignature
                            Identifier: ' name'
                            StringKeyword
                  UndefinedKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' decimalEscapes'
                UnionType
                  ArrayType
                    ParenthesizedType
                      IntersectionType
                        TypeReference
                          Identifier: 'TextRange'
                        TypeLiteral
                          PropertySignature
                            Identifier: ' value'
                            NumberKeyword
                  UndefinedKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' namedCapturingGroupsScopeStack'
                ArrayType
                  ParenthesizedType
                    UnionType
                      TypeReference
                        Identifier: 'Set'
                        StringKeyword
                      UndefinedKeyword
                ArrayLiteralExpression
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' topNamedCapturingGroupsScope'
                UnionType
                  TypeReference
                    Identifier: ' Set'
                    StringKeyword
                  UndefinedKeyword
          FunctionDeclaration
            Identifier: ' scanDisjunction'
            Parameter
              Identifier: 'isInGroup'
              BooleanKeyword
            Block
              WhileStatement
                TrueKeyword
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                namedCapturingGroupsScopeStack'
                        Identifier: 'push'
                      Identifier: 'topNamedCapturingGroupsScope'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                topNamedCapturingGroupsScope'
                      EqualsToken
                      Identifier: ' undefined'
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                scanAlternative'
                      Identifier: 'isInGroup'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                topNamedCapturingGroupsScope'
                      EqualsToken
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' namedCapturingGroupsScopeStack'
                          Identifier: 'pop'
                  IfStatement
                    BinaryExpression
                      CallExpression
                        Identifier: 'charCodeChecked'
                        Identifier: 'pos'
                      ExclamationEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' CharacterCodes'
                        Identifier: 'bar'
                    Block
                      ReturnStatement
                  ExpressionStatement
                    PostfixUnaryExpression
                      Identifier: '
                pos'
          FunctionDeclaration
            Identifier: ' scanAlternative'
            Parameter
              Identifier: 'isInGroup'
              BooleanKeyword
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' isPreviousTermQuantifiable'
                    FalseKeyword
              WhileStatement
                TrueKeyword
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' start'
                        Identifier: ' pos'
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' ch'
                        CallExpression
                          Identifier: ' charCodeChecked'
                          Identifier: 'pos'
                  SwitchStatement
                    Identifier: 'ch'
                    CaseBlock
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'EOF'
                        ReturnStatement
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'caret'
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: '$'
                        ExpressionStatement
                          PostfixUnaryExpression
                            Identifier: '
                        pos'
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        isPreviousTermQuantifiable'
                            EqualsToken
                            FalseKeyword
                        BreakStatement
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'backslash'
                        ExpressionStatement
                          PostfixUnaryExpression
                            Identifier: '
                        pos'
                        SwitchStatement
                          CallExpression
                            Identifier: 'charCodeChecked'
                            Identifier: 'pos'
                          CaseBlock
                            CaseClause
                              PropertyAccessExpression
                                Identifier: ' CharacterCodes'
                                Identifier: 'b'
                            CaseClause
                              PropertyAccessExpression
                                Identifier: ' CharacterCodes'
                                Identifier: 'B'
                              ExpressionStatement
                                PostfixUnaryExpression
                                  Identifier: '
                                pos'
                              ExpressionStatement
                                BinaryExpression
                                  Identifier: '
                                isPreviousTermQuantifiable'
                                  EqualsToken
                                  FalseKeyword
                              BreakStatement
                            DefaultClause
                              ExpressionStatement
                                CallExpression
                                  Identifier: '
                                scanAtomEscape'
                              ExpressionStatement
                                BinaryExpression
                                  Identifier: '
                                isPreviousTermQuantifiable'
                                  EqualsToken
                                  TrueKeyword
                              BreakStatement
                        BreakStatement
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'openParen'
                        ExpressionStatement
                          PostfixUnaryExpression
                            Identifier: '
                        pos'
                        IfStatement
                          BinaryExpression
                            CallExpression
                              Identifier: 'charCodeChecked'
                              Identifier: 'pos'
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' CharacterCodes'
                              Identifier: 'question'
                          Block
                            ExpressionStatement
                              PostfixUnaryExpression
                                Identifier: '
                            pos'
                            SwitchStatement
                              CallExpression
                                Identifier: 'charCodeChecked'
                                Identifier: 'pos'
                              CaseBlock
                                CaseClause
                                  PropertyAccessExpression
                                    Identifier: ' CharacterCodes'
                                    Identifier: 'equals'
                                CaseClause
                                  PropertyAccessExpression
                                    Identifier: ' CharacterCodes'
                                    Identifier: 'exclamation'
                                  ExpressionStatement
                                    PostfixUnaryExpression
                                      Identifier: '
                                    pos'
                                  ExpressionStatement
                                    BinaryExpression
                                      Identifier: '
                                    // In Annex B, `(?=Disjunction)` and `(?!Disjunction)` are quantifiable
                                    isPreviousTermQuantifiable'
                                      EqualsToken
                                      PrefixUnaryExpression
                                        Identifier: 'anyUnicodeModeOrNonAnnexB'
                                  BreakStatement
                                CaseClause
                                  PropertyAccessExpression
                                    Identifier: ' CharacterCodes'
                                    Identifier: 'lessThan'
                                  VariableStatement
                                    VariableDeclarationList
                                      VariableDeclaration
                                        Identifier: ' groupNameStart'
                                        Identifier: ' pos'
                                  ExpressionStatement
                                    PostfixUnaryExpression
                                      Identifier: '
                                    pos'
                                  SwitchStatement
                                    CallExpression
                                      Identifier: 'charCodeChecked'
                                      Identifier: 'pos'
                                    CaseBlock
                                      CaseClause
                                        PropertyAccessExpression
                                          Identifier: ' CharacterCodes'
                                          Identifier: 'equals'
                                      CaseClause
                                        PropertyAccessExpression
                                          Identifier: ' CharacterCodes'
                                          Identifier: 'exclamation'
                                        ExpressionStatement
                                          PostfixUnaryExpression
                                            Identifier: '
                                            pos'
                                        ExpressionStatement
                                          BinaryExpression
                                            Identifier: '
                                            isPreviousTermQuantifiable'
                                            EqualsToken
                                            FalseKeyword
                                        BreakStatement
                                      DefaultClause
                                        ExpressionStatement
                                          CallExpression
                                            Identifier: '
                                            scanGroupName'
                                            FalseKeyword
                                        ExpressionStatement
                                          CallExpression
                                            Identifier: '
                                            scanExpectedChar'
                                            PropertyAccessExpression
                                              Identifier: 'CharacterCodes'
                                              Identifier: 'greaterThan'
                                        IfStatement
                                          BinaryExpression
                                            Identifier: 'languageVersion'
                                            LessThanToken
                                            PropertyAccessExpression
                                              Identifier: ' ScriptTarget'
                                              Identifier: 'ES2018'
                                          Block
                                            ExpressionStatement
                                              CallExpression
                                                Identifier: '
                                                error'
                                                PropertyAccessExpression
                                                  Identifier: 'Diagnostics'
                                                  Identifier: 'Named_capturing_groups_are_only_available_when_targeting_ES2018_or_later'
                                                Identifier: ' groupNameStart'
                                                BinaryExpression
                                                  Identifier: ' pos'
                                                  MinusToken
                                                  Identifier: ' groupNameStart'
                                        ExpressionStatement
                                          PostfixUnaryExpression
                                            Identifier: '
                                            numberOfCapturingGroups'
                                        ExpressionStatement
                                          BinaryExpression
                                            Identifier: '
                                            isPreviousTermQuantifiable'
                                            EqualsToken
                                            TrueKeyword
                                        BreakStatement
                                  BreakStatement
                                DefaultClause
                                  VariableStatement
                                    VariableDeclarationList
                                      VariableDeclaration
                                        Identifier: ' start'
                                        Identifier: ' pos'
                                  VariableStatement
                                    VariableDeclarationList
                                      VariableDeclaration
                                        Identifier: ' setFlags'
                                        CallExpression
                                          Identifier: ' scanPatternModifiers'
                                          PropertyAccessExpression
                                            Identifier: 'RegularExpressionFlags'
                                            Identifier: 'None'
                                  IfStatement
                                    BinaryExpression
                                      CallExpression
                                        Identifier: 'charCodeChecked'
                                        Identifier: 'pos'
                                      EqualsEqualsEqualsToken
                                      PropertyAccessExpression
                                        Identifier: ' CharacterCodes'
                                        Identifier: 'minus'
                                    Block
                                      ExpressionStatement
                                        PostfixUnaryExpression
                                          Identifier: '
                                        pos'
                                      ExpressionStatement
                                        CallExpression
                                          Identifier: '
                                        scanPatternModifiers'
                                          Identifier: 'setFlags'
                                      IfStatement
                                        BinaryExpression
                                          Identifier: 'pos'
                                          EqualsEqualsEqualsToken
                                          BinaryExpression
                                            Identifier: ' start'
                                            PlusToken
                                            NumericLiteral
                                        Block
                                          ExpressionStatement
                                            CallExpression
                                              Identifier: '
                                            error'
                                              PropertyAccessExpression
                                                Identifier: 'Diagnostics'
                                                Identifier: 'Subpattern_flags_must_be_present_when_there_is_a_minus_sign'
                                              Identifier: ' start'
                                              BinaryExpression
                                                Identifier: ' pos'
                                                MinusToken
                                                Identifier: ' start'
                                  ExpressionStatement
                                    CallExpression
                                      Identifier: '
                                    scanExpectedChar'
                                      PropertyAccessExpression
                                        Identifier: 'CharacterCodes'
                                        Identifier: 'colon'
                                  ExpressionStatement
                                    BinaryExpression
                                      Identifier: '
                                    isPreviousTermQuantifiable'
                                      EqualsToken
                                      TrueKeyword
                                  BreakStatement
                          Block
                            ExpressionStatement
                              PostfixUnaryExpression
                                Identifier: '
                            numberOfCapturingGroups'
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                            isPreviousTermQuantifiable'
                                EqualsToken
                                TrueKeyword
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                        scanDisjunction'
                            TrueKeyword
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                        scanExpectedChar'
                            PropertyAccessExpression
                              Identifier: 'CharacterCodes'
                              Identifier: 'closeParen'
                        BreakStatement
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'openBrace'
                        ExpressionStatement
                          PostfixUnaryExpression
                            Identifier: '
                        pos'
                        VariableStatement
                          VariableDeclarationList
                            VariableDeclaration
                              Identifier: ' digitsStart'
                              Identifier: ' pos'
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                        scanDigits'
                        VariableStatement
                          VariableDeclarationList
                            VariableDeclaration
                              Identifier: ' min'
                              Identifier: ' tokenValue'
                        IfStatement
                          BinaryExpression
                            PrefixUnaryExpression
                              Identifier: 'anyUnicodeModeOrNonAnnexB'
                            AmpersandAmpersandToken
                            PrefixUnaryExpression
                              Identifier: 'min'
                          Block
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                            isPreviousTermQuantifiable'
                                EqualsToken
                                TrueKeyword
                            BreakStatement
                        IfStatement
                          BinaryExpression
                            CallExpression
                              Identifier: 'charCodeChecked'
                              Identifier: 'pos'
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' CharacterCodes'
                              Identifier: 'comma'
                          Block
                            ExpressionStatement
                              PostfixUnaryExpression
                                Identifier: '
                            pos'
                            ExpressionStatement
                              CallExpression
                                Identifier: '
                            scanDigits'
                            VariableStatement
                              VariableDeclarationList
                                VariableDeclaration
                                  Identifier: ' max'
                                  Identifier: ' tokenValue'
                            IfStatement
                              PrefixUnaryExpression
                                Identifier: 'min'
                              Block
                                IfStatement
                                  BinaryExpression
                                    Identifier: 'max'
                                    BarBarToken
                                    BinaryExpression
                                      CallExpression
                                        Identifier: ' charCodeChecked'
                                        Identifier: 'pos'
                                      EqualsEqualsEqualsToken
                                      PropertyAccessExpression
                                        Identifier: ' CharacterCodes'
                                        Identifier: 'closeBrace'
                                  Block
                                    ExpressionStatement
                                      CallExpression
                                        Identifier: '
                                    error'
                                        PropertyAccessExpression
                                          Identifier: 'Diagnostics'
                                          Identifier: 'Incomplete_quantifier_Digit_expected'
                                        Identifier: ' digitsStart'
                                        NumericLiteral
                                  Block
                                    ExpressionStatement
                                      CallExpression
                                        Identifier: '
                                    error'
                                        PropertyAccessExpression
                                          Identifier: 'Diagnostics'
                                          Identifier: 'Unexpected_0_Did_you_mean_to_escape_it_with_backslash'
                                        Identifier: ' start'
                                        NumericLiteral
                                        CallExpression
                                          PropertyAccessExpression
                                            Identifier: ' String'
                                            Identifier: 'fromCharCode'
                                          Identifier: 'ch'
                                    ExpressionStatement
                                      BinaryExpression
                                        Identifier: '
                                    isPreviousTermQuantifiable'
                                        EqualsToken
                                        TrueKeyword
                                    BreakStatement
                              IfStatement
                                BinaryExpression
                                  BinaryExpression
                                    Identifier: 'max'
                                    AmpersandAmpersandToken
                                    BinaryExpression
                                      CallExpression
                                        PropertyAccessExpression
                                          Identifier: ' Number'
                                          Identifier: 'parseInt'
                                        Identifier: 'min'
                                      GreaterThanToken
                                      CallExpression
                                        PropertyAccessExpression
                                          Identifier: ' Number'
                                          Identifier: 'parseInt'
                                        Identifier: 'max'
                                  AmpersandAmpersandToken
                                  ParenthesizedExpression
                                    BinaryExpression
                                      Identifier: 'anyUnicodeModeOrNonAnnexB'
                                      BarBarToken
                                      BinaryExpression
                                        CallExpression
                                          Identifier: ' charCodeChecked'
                                          Identifier: 'pos'
                                        EqualsEqualsEqualsToken
                                        PropertyAccessExpression
                                          Identifier: ' CharacterCodes'
                                          Identifier: 'closeBrace'
                                Block
                                  ExpressionStatement
                                    CallExpression
                                      Identifier: '
                                error'
                                      PropertyAccessExpression
                                        Identifier: 'Diagnostics'
                                        Identifier: 'Numbers_out_of_order_in_quantifier'
                                      Identifier: ' digitsStart'
                                      BinaryExpression
                                        Identifier: ' pos'
                                        MinusToken
                                        Identifier: ' digitsStart'
                          IfStatement
                            PrefixUnaryExpression
                              Identifier: 'min'
                            Block
                              IfStatement
                                Identifier: 'anyUnicodeModeOrNonAnnexB'
                                Block
                                  ExpressionStatement
                                    CallExpression
                                      Identifier: '
                                error'
                                      PropertyAccessExpression
                                        Identifier: 'Diagnostics'
                                        Identifier: 'Unexpected_0_Did_you_mean_to_escape_it_with_backslash'
                                      Identifier: ' start'
                                      NumericLiteral
                                      CallExpression
                                        PropertyAccessExpression
                                          Identifier: ' String'
                                          Identifier: 'fromCharCode'
                                        Identifier: 'ch'
                              ExpressionStatement
                                BinaryExpression
                                  Identifier: '
                            isPreviousTermQuantifiable'
                                  EqualsToken
                                  TrueKeyword
                              BreakStatement
                        IfStatement
                          BinaryExpression
                            CallExpression
                              Identifier: 'charCodeChecked'
                              Identifier: 'pos'
                            ExclamationEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' CharacterCodes'
                              Identifier: 'closeBrace'
                          Block
                            IfStatement
                              Identifier: 'anyUnicodeModeOrNonAnnexB'
                              Block
                                ExpressionStatement
                                  CallExpression
                                    Identifier: '
                                error'
                                    PropertyAccessExpression
                                      Identifier: 'Diagnostics'
                                      Identifier: '_0_expected'
                                    Identifier: ' pos'
                                    NumericLiteral
                                    CallExpression
                                      PropertyAccessExpression
                                        Identifier: ' String'
                                        Identifier: 'fromCharCode'
                                      PropertyAccessExpression
                                        Identifier: 'CharacterCodes'
                                        Identifier: 'closeBrace'
                                ExpressionStatement
                                  PostfixUnaryExpression
                                    Identifier: '
                                pos'
                              Block
                                ExpressionStatement
                                  BinaryExpression
                                    Identifier: '
                                isPreviousTermQuantifiable'
                                    EqualsToken
                                    TrueKeyword
                                BreakStatement
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'asterisk'
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'plus'
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'question'
                        ExpressionStatement
                          PostfixUnaryExpression
                            Identifier: '
                        pos'
                        IfStatement
                          BinaryExpression
                            CallExpression
                              Identifier: 'charCodeChecked'
                              Identifier: 'pos'
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' CharacterCodes'
                              Identifier: 'question'
                          Block
                            ExpressionStatement
                              PostfixUnaryExpression
                                Identifier: '
                            // Non-greedy
                            pos'
                        IfStatement
                          PrefixUnaryExpression
                            Identifier: 'isPreviousTermQuantifiable'
                          Block
                            ExpressionStatement
                              CallExpression
                                Identifier: '
                            error'
                                PropertyAccessExpression
                                  Identifier: 'Diagnostics'
                                  Identifier: 'There_is_nothing_available_for_repetition'
                                Identifier: ' start'
                                BinaryExpression
                                  Identifier: ' pos'
                                  MinusToken
                                  Identifier: ' start'
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        isPreviousTermQuantifiable'
                            EqualsToken
                            FalseKeyword
                        BreakStatement
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'dot'
                        ExpressionStatement
                          PostfixUnaryExpression
                            Identifier: '
                        pos'
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        isPreviousTermQuantifiable'
                            EqualsToken
                            TrueKeyword
                        BreakStatement
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'openBracket'
                        ExpressionStatement
                          PostfixUnaryExpression
                            Identifier: '
                        pos'
                        IfStatement
                          Identifier: 'unicodeSetsMode'
                          Block
                            ExpressionStatement
                              CallExpression
                                Identifier: '
                            scanClassSetExpression'
                          Block
                            ExpressionStatement
                              CallExpression
                                Identifier: '
                            scanClassRanges'
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                        scanExpectedChar'
                            PropertyAccessExpression
                              Identifier: 'CharacterCodes'
                              Identifier: 'closeBracket'
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        isPreviousTermQuantifiable'
                            EqualsToken
                            TrueKeyword
                        BreakStatement
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'closeParen'
                        IfStatement
                          Identifier: 'isInGroup'
                          Block
                            ReturnStatement
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'closeBracket'
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'closeBrace'
                        IfStatement
                          BinaryExpression
                            Identifier: 'anyUnicodeModeOrNonAnnexB'
                            BarBarToken
                            BinaryExpression
                              Identifier: ' ch'
                              EqualsEqualsEqualsToken
                              PropertyAccessExpression
                                Identifier: ' CharacterCodes'
                                Identifier: 'closeParen'
                          Block
                            ExpressionStatement
                              CallExpression
                                Identifier: '
                            error'
                                PropertyAccessExpression
                                  Identifier: 'Diagnostics'
                                  Identifier: 'Unexpected_0_Did_you_mean_to_escape_it_with_backslash'
                                Identifier: ' pos'
                                NumericLiteral
                                CallExpression
                                  PropertyAccessExpression
                                    Identifier: ' String'
                                    Identifier: 'fromCharCode'
                                  Identifier: 'ch'
                        ExpressionStatement
                          PostfixUnaryExpression
                            Identifier: '
                        pos'
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        isPreviousTermQuantifiable'
                            EqualsToken
                            TrueKeyword
                        BreakStatement
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'slash'
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'bar'
                        ReturnStatement
                      DefaultClause
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                        scanSourceCharacter'
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        isPreviousTermQuantifiable'
                            EqualsToken
                            TrueKeyword
                        BreakStatement
          FunctionDeclaration
            Identifier: ' scanPatternModifiers'
            Parameter
              Identifier: 'currFlags'
              TypeReference
                Identifier: ' RegularExpressionFlags'
            TypeReference
              Identifier: ' RegularExpressionFlags'
            Block
              WhileStatement
                TrueKeyword
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' ch'
                        CallExpression
                          Identifier: ' codePointChecked'
                          Identifier: 'pos'
                  IfStatement
                    BinaryExpression
                      BinaryExpression
                        Identifier: 'ch'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'EOF'
                      BarBarToken
                      PrefixUnaryExpression
                        CallExpression
                          Identifier: 'isIdentifierPart'
                          Identifier: 'ch'
                          Identifier: ' languageVersion'
                    Block
                      BreakStatement
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' size'
                        CallExpression
                          Identifier: ' charSize'
                          Identifier: 'ch'
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' flag'
                        CallExpression
                          Identifier: ' characterCodeToRegularExpressionFlag'
                          Identifier: 'ch'
                  IfStatement
                    BinaryExpression
                      Identifier: 'flag'
                      EqualsEqualsEqualsToken
                      Identifier: ' undefined'
                    Block
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    error'
                          PropertyAccessExpression
                            Identifier: 'Diagnostics'
                            Identifier: 'Unknown_regular_expression_flag'
                          Identifier: ' pos'
                          Identifier: ' size'
                    IfStatement
                      BinaryExpression
                        Identifier: 'currFlags'
                        AmpersandToken
                        Identifier: ' flag'
                      Block
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                    error'
                            PropertyAccessExpression
                              Identifier: 'Diagnostics'
                              Identifier: 'Duplicate_regular_expression_flag'
                            Identifier: ' pos'
                            Identifier: ' size'
                      IfStatement
                        PrefixUnaryExpression
                          ParenthesizedExpression
                            BinaryExpression
                              Identifier: 'flag'
                              AmpersandToken
                              PropertyAccessExpression
                                Identifier: ' RegularExpressionFlags'
                                Identifier: 'Modifiers'
                        Block
                          ExpressionStatement
                            CallExpression
                              Identifier: '
                    error'
                              PropertyAccessExpression
                                Identifier: 'Diagnostics'
                                Identifier: 'This_regular_expression_flag_cannot_be_toggled_within_a_subpattern'
                              Identifier: ' pos'
                              Identifier: ' size'
                        Block
                          ExpressionStatement
                            BinaryExpression
                              Identifier: '
                    currFlags'
                              BarEqualsToken
                              Identifier: ' flag'
                          ExpressionStatement
                            CallExpression
                              Identifier: '
                    checkRegularExpressionFlagAvailability'
                              Identifier: 'flag'
                              Identifier: ' size'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                pos'
                      PlusEqualsToken
                      Identifier: ' size'
              ReturnStatement
                Identifier: ' currFlags'
          FunctionDeclaration
            Identifier: ' scanAtomEscape'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            Debug'
                    Identifier: 'assertEqual'
                  CallExpression
                    Identifier: 'charCodeUnchecked'
                    BinaryExpression
                      Identifier: 'pos'
                      MinusToken
                      NumericLiteral
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'backslash'
              SwitchStatement
                CallExpression
                  Identifier: 'charCodeChecked'
                  Identifier: 'pos'
                CaseBlock
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'k'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    IfStatement
                      BinaryExpression
                        CallExpression
                          Identifier: 'charCodeChecked'
                          Identifier: 'pos'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'lessThan'
                      Block
                        ExpressionStatement
                          PostfixUnaryExpression
                            Identifier: '
                        pos'
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                        scanGroupName'
                            TrueKeyword
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                        scanExpectedChar'
                            PropertyAccessExpression
                              Identifier: 'CharacterCodes'
                              Identifier: 'greaterThan'
                      IfStatement
                        BinaryExpression
                          Identifier: 'anyUnicodeModeOrNonAnnexB'
                          BarBarToken
                          Identifier: ' namedCaptureGroups'
                        Block
                          ExpressionStatement
                            CallExpression
                              Identifier: '
                        error'
                              PropertyAccessExpression
                                Identifier: 'Diagnostics'
                                Identifier: 'k_must_be_followed_by_a_capturing_group_name_enclosed_in_angle_brackets'
                              BinaryExpression
                                Identifier: ' pos'
                                MinusToken
                                NumericLiteral
                              NumericLiteral
                    BreakStatement
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'q'
                    IfStatement
                      Identifier: 'unicodeSetsMode'
                      Block
                        ExpressionStatement
                          PostfixUnaryExpression
                            Identifier: '
                        pos'
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                        error'
                            PropertyAccessExpression
                              Identifier: 'Diagnostics'
                              Identifier: 'q_is_only_available_inside_character_class'
                            BinaryExpression
                              Identifier: ' pos'
                              MinusToken
                              NumericLiteral
                            NumericLiteral
                        BreakStatement
                  DefaultClause
                    ExpressionStatement
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                    // The scanEscapeSequence call in scanCharacterEscape must return non-empty strings
                    // since there must not be line breaks in a regex literal
                    Debug'
                          Identifier: 'assert'
                        BinaryExpression
                          BinaryExpression
                            CallExpression
                              Identifier: 'scanCharacterClassEscape'
                            BarBarToken
                            CallExpression
                              Identifier: ' scanDecimalEscape'
                          BarBarToken
                          CallExpression
                            Identifier: ' scanCharacterEscape'
                            TrueKeyword
                    BreakStatement
          FunctionDeclaration
            Identifier: ' scanDecimalEscape'
            BooleanKeyword
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            Debug'
                    Identifier: 'assertEqual'
                  CallExpression
                    Identifier: 'charCodeUnchecked'
                    BinaryExpression
                      Identifier: 'pos'
                      MinusToken
                      NumericLiteral
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'backslash'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' ch'
                    CallExpression
                      Identifier: ' charCodeChecked'
                      Identifier: 'pos'
              IfStatement
                BinaryExpression
                  BinaryExpression
                    Identifier: 'ch'
                    GreaterThanEqualsToken
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: '_1'
                  AmpersandAmpersandToken
                  BinaryExpression
                    Identifier: ' ch'
                    LessThanEqualsToken
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: '_9'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' start'
                        Identifier: ' pos'
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                scanDigits'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                decimalEscapes'
                      EqualsToken
                      CallExpression
                        Identifier: ' append'
                        Identifier: 'decimalEscapes'
                        ObjectLiteralExpression
                          PropertyAssignment
                            Identifier: ' pos'
                            Identifier: ' start'
                          PropertyAssignment
                            Identifier: ' end'
                            Identifier: ' pos'
                          PropertyAssignment
                            Identifier: ' value'
                            PrefixUnaryExpression
                              Identifier: 'tokenValue'
                  ReturnStatement
                    TrueKeyword
              ReturnStatement
                FalseKeyword
          FunctionDeclaration
            Identifier: ' scanCharacterEscape'
            Parameter
              Identifier: 'atomEscape'
              BooleanKeyword
            StringKeyword
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            Debug'
                    Identifier: 'assertEqual'
                  CallExpression
                    Identifier: 'charCodeUnchecked'
                    BinaryExpression
                      Identifier: 'pos'
                      MinusToken
                      NumericLiteral
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'backslash'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' ch'
                    CallExpression
                      Identifier: ' charCodeChecked'
                      Identifier: 'pos'
              SwitchStatement
                Identifier: 'ch'
                CaseBlock
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'EOF'
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                    error'
                        PropertyAccessExpression
                          Identifier: 'Diagnostics'
                          Identifier: 'Undetermined_character_escape'
                        BinaryExpression
                          Identifier: ' pos'
                          MinusToken
                          NumericLiteral
                        NumericLiteral
                    ReturnStatement
                      StringLiteral
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'c'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    ch'
                        EqualsToken
                        CallExpression
                          Identifier: ' charCodeChecked'
                          Identifier: 'pos'
                    IfStatement
                      CallExpression
                        Identifier: 'isASCIILetter'
                        Identifier: 'ch'
                      Block
                        ExpressionStatement
                          PostfixUnaryExpression
                            Identifier: '
                        pos'
                        ReturnStatement
                          CallExpression
                            PropertyAccessExpression
                              Identifier: ' String'
                              Identifier: 'fromCharCode'
                            BinaryExpression
                              Identifier: 'ch'
                              AmpersandToken
                              NumericLiteral
                    IfStatement
                      Identifier: 'anyUnicodeModeOrNonAnnexB'
                      Block
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                        error'
                            PropertyAccessExpression
                              Identifier: 'Diagnostics'
                              Identifier: 'c_must_be_followed_by_an_ASCII_letter'
                            BinaryExpression
                              Identifier: ' pos'
                              MinusToken
                              NumericLiteral
                            NumericLiteral
                      IfStatement
                        Identifier: 'atomEscape'
                        Block
                          ExpressionStatement
                            PostfixUnaryExpression
                              Identifier: '
                        // Annex B treats
                        //
                        //  ExtendedAtom : `\` [lookahead = `c`]
                        //
                        // as the single character `\` when `c` isn't followed by a valid control character
                        pos'
                          ReturnStatement
                            StringLiteral
                    ReturnStatement
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' String'
                          Identifier: 'fromCharCode'
                        Identifier: 'ch'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'caret'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: '$'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'slash'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'backslash'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'dot'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'asterisk'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'plus'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'question'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'openParen'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'closeParen'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'openBracket'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'closeBracket'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'openBrace'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'closeBrace'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'bar'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    ReturnStatement
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' String'
                          Identifier: 'fromCharCode'
                        Identifier: 'ch'
                  DefaultClause
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    ReturnStatement
                      CallExpression
                        Identifier: ' scanEscapeSequence'
                        BinaryExpression
                          BinaryExpression
                            BinaryExpression
                              PropertyAccessExpression
                                Identifier: '
                        EscapeSequenceScanningFlags'
                                Identifier: 'RegularExpression'
                              BarToken
                              ParenthesizedExpression
                                ConditionalExpression
                                  Identifier: 'annexB'
                                  QuestionToken
                                  PropertyAccessExpression
                                    Identifier: ' EscapeSequenceScanningFlags'
                                    Identifier: 'AnnexB'
                                  ColonToken
                                  NumericLiteral
                            BarToken
                            ParenthesizedExpression
                              ConditionalExpression
                                Identifier: 'anyUnicodeMode'
                                QuestionToken
                                PropertyAccessExpression
                                  Identifier: ' EscapeSequenceScanningFlags'
                                  Identifier: 'AnyUnicodeMode'
                                ColonToken
                                NumericLiteral
                          BarToken
                          ParenthesizedExpression
                            ConditionalExpression
                              Identifier: 'atomEscape'
                              QuestionToken
                              PropertyAccessExpression
                                Identifier: ' EscapeSequenceScanningFlags'
                                Identifier: 'AtomEscape'
                              ColonToken
                              NumericLiteral
          FunctionDeclaration
            Identifier: ' scanGroupName'
            Parameter
              Identifier: 'isReference'
              BooleanKeyword
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            Debug'
                    Identifier: 'assertEqual'
                  CallExpression
                    Identifier: 'charCodeUnchecked'
                    BinaryExpression
                      Identifier: 'pos'
                      MinusToken
                      NumericLiteral
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'lessThan'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            tokenStart'
                  EqualsToken
                  Identifier: ' pos'
              ExpressionStatement
                CallExpression
                  Identifier: '
            scanIdentifier'
                  CallExpression
                    Identifier: 'codePointChecked'
                    Identifier: 'pos'
                  Identifier: ' languageVersion'
              IfStatement
                BinaryExpression
                  Identifier: 'pos'
                  EqualsEqualsEqualsToken
                  Identifier: ' tokenStart'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                error'
                      PropertyAccessExpression
                        Identifier: 'Diagnostics'
                        Identifier: 'Expected_a_capturing_group_name'
                IfStatement
                  Identifier: 'isReference'
                  Block
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                groupNameReferences'
                        EqualsToken
                        CallExpression
                          Identifier: ' append'
                          Identifier: 'groupNameReferences'
                          ObjectLiteralExpression
                            PropertyAssignment
                              Identifier: ' pos'
                              Identifier: ' tokenStart'
                            PropertyAssignment
                              Identifier: ' end'
                              Identifier: ' pos'
                            PropertyAssignment
                              Identifier: ' name'
                              Identifier: ' tokenValue'
                  IfStatement
                    BinaryExpression
                      CallExpression
                        PropertyAccessExpression
                          Identifier: 'topNamedCapturingGroupsScope'
                          QuestionDotToken
                          Identifier: 'has'
                        Identifier: 'tokenValue'
                      BarBarToken
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' namedCapturingGroupsScopeStack'
                          Identifier: 'some'
                        ArrowFunction
                          Parameter
                            Identifier: 'group'
                          EqualsGreaterThanToken
                          CallExpression
                            PropertyAccessExpression
                              Identifier: ' group'
                              QuestionDotToken
                              Identifier: 'has'
                            Identifier: 'tokenValue'
                    Block
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                error'
                          PropertyAccessExpression
                            Identifier: 'Diagnostics'
                            Identifier: 'Named_capturing_groups_with_the_same_name_must_be_mutually_exclusive_to_each_other'
                          Identifier: ' tokenStart'
                          BinaryExpression
                            Identifier: ' pos'
                            MinusToken
                            Identifier: ' tokenStart'
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                topNamedCapturingGroupsScope'
                          QuestionQuestionEqualsToken
                          NewExpression
                            Identifier: ' Set'
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                topNamedCapturingGroupsScope'
                            Identifier: 'add'
                          Identifier: 'tokenValue'
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                groupSpecifiers'
                          QuestionQuestionEqualsToken
                          NewExpression
                            Identifier: ' Set'
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                groupSpecifiers'
                            Identifier: 'add'
                          Identifier: 'tokenValue'
          FunctionDeclaration
            Identifier: ' isClassContentExit'
            Parameter
              Identifier: 'ch'
              NumberKeyword
            Block
              ReturnStatement
                BinaryExpression
                  BinaryExpression
                    BinaryExpression
                      Identifier: ' ch'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' CharacterCodes'
                        Identifier: 'closeBracket'
                    BarBarToken
                    BinaryExpression
                      Identifier: ' ch'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' CharacterCodes'
                        Identifier: 'EOF'
                  BarBarToken
                  BinaryExpression
                    Identifier: ' pos'
                    GreaterThanEqualsToken
                    Identifier: ' end'
          FunctionDeclaration
            Identifier: ' scanClassRanges'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            Debug'
                    Identifier: 'assertEqual'
                  CallExpression
                    Identifier: 'charCodeUnchecked'
                    BinaryExpression
                      Identifier: 'pos'
                      MinusToken
                      NumericLiteral
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'openBracket'
              IfStatement
                BinaryExpression
                  CallExpression
                    Identifier: 'charCodeChecked'
                    Identifier: 'pos'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'caret'
                Block
                  ExpressionStatement
                    PostfixUnaryExpression
                      Identifier: '
                // character complement
                pos'
              WhileStatement
                TrueKeyword
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' ch'
                        CallExpression
                          Identifier: ' charCodeChecked'
                          Identifier: 'pos'
                  IfStatement
                    CallExpression
                      Identifier: 'isClassContentExit'
                      Identifier: 'ch'
                    Block
                      ReturnStatement
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' minStart'
                        Identifier: ' pos'
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' minCharacter'
                        CallExpression
                          Identifier: ' scanClassAtom'
                  IfStatement
                    BinaryExpression
                      CallExpression
                        Identifier: 'charCodeChecked'
                        Identifier: 'pos'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' CharacterCodes'
                        Identifier: 'minus'
                    Block
                      ExpressionStatement
                        PostfixUnaryExpression
                          Identifier: '
                    pos'
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' ch'
                            CallExpression
                              Identifier: ' charCodeChecked'
                              Identifier: 'pos'
                      IfStatement
                        CallExpression
                          Identifier: 'isClassContentExit'
                          Identifier: 'ch'
                        Block
                          ReturnStatement
                      IfStatement
                        BinaryExpression
                          PrefixUnaryExpression
                            Identifier: 'minCharacter'
                          AmpersandAmpersandToken
                          Identifier: ' anyUnicodeModeOrNonAnnexB'
                        Block
                          ExpressionStatement
                            CallExpression
                              Identifier: '
                        error'
                              PropertyAccessExpression
                                Identifier: 'Diagnostics'
                                Identifier: 'A_character_class_range_must_not_be_bounded_by_another_character_class'
                              Identifier: ' minStart'
                              BinaryExpression
                                BinaryExpression
                                  Identifier: ' pos'
                                  MinusToken
                                  NumericLiteral
                                MinusToken
                                Identifier: ' minStart'
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' maxStart'
                            Identifier: ' pos'
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' maxCharacter'
                            CallExpression
                              Identifier: ' scanClassAtom'
                      IfStatement
                        BinaryExpression
                          PrefixUnaryExpression
                            Identifier: 'maxCharacter'
                          AmpersandAmpersandToken
                          Identifier: ' anyUnicodeModeOrNonAnnexB'
                        Block
                          ExpressionStatement
                            CallExpression
                              Identifier: '
                        error'
                              PropertyAccessExpression
                                Identifier: 'Diagnostics'
                                Identifier: 'A_character_class_range_must_not_be_bounded_by_another_character_class'
                              Identifier: ' maxStart'
                              BinaryExpression
                                Identifier: ' pos'
                                MinusToken
                                Identifier: ' maxStart'
                          ContinueStatement
                      IfStatement
                        PrefixUnaryExpression
                          Identifier: 'minCharacter'
                        Block
                          ContinueStatement
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' minCharacterValue'
                            CallExpression
                              Identifier: ' codePointAt'
                              Identifier: 'minCharacter'
                              NumericLiteral
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' maxCharacterValue'
                            CallExpression
                              Identifier: ' codePointAt'
                              Identifier: 'maxCharacter'
                              NumericLiteral
                      IfStatement
                        BinaryExpression
                          BinaryExpression
                            BinaryExpression
                              PropertyAccessExpression
                                Identifier: '
                        minCharacter'
                                Identifier: 'length'
                              EqualsEqualsEqualsToken
                              CallExpression
                                Identifier: ' charSize'
                                Identifier: 'minCharacterValue'
                            AmpersandAmpersandToken
                            BinaryExpression
                              PropertyAccessExpression
                                Identifier: '
                        maxCharacter'
                                Identifier: 'length'
                              EqualsEqualsEqualsToken
                              CallExpression
                                Identifier: ' charSize'
                                Identifier: 'maxCharacterValue'
                          AmpersandAmpersandToken
                          BinaryExpression
                            Identifier: '
                        minCharacterValue'
                            GreaterThanToken
                            Identifier: ' maxCharacterValue'
                        Block
                          ExpressionStatement
                            CallExpression
                              Identifier: '
                        error'
                              PropertyAccessExpression
                                Identifier: 'Diagnostics'
                                Identifier: 'Range_out_of_order_in_character_class'
                              Identifier: ' minStart'
                              BinaryExpression
                                Identifier: ' pos'
                                MinusToken
                                Identifier: ' minStart'
          FunctionDeclaration
            Identifier: ' scanClassSetExpression'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            Debug'
                    Identifier: 'assertEqual'
                  CallExpression
                    Identifier: 'charCodeUnchecked'
                    BinaryExpression
                      Identifier: 'pos'
                      MinusToken
                      NumericLiteral
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'openBracket'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' isCharacterComplement'
                    FalseKeyword
              IfStatement
                BinaryExpression
                  CallExpression
                    Identifier: 'charCodeChecked'
                    Identifier: 'pos'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'caret'
                Block
                  ExpressionStatement
                    PostfixUnaryExpression
                      Identifier: '
                pos'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                isCharacterComplement'
                      EqualsToken
                      TrueKeyword
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' expressionMayContainStrings'
                    FalseKeyword
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' ch'
                    CallExpression
                      Identifier: ' charCodeChecked'
                      Identifier: 'pos'
              IfStatement
                CallExpression
                  Identifier: 'isClassContentExit'
                  Identifier: 'ch'
                Block
                  ReturnStatement
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' start'
                    Identifier: ' pos'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' operand'
                    ExclamationToken
                    StringKeyword
              SwitchStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: 'text'
                    Identifier: 'slice'
                  Identifier: 'pos'
                  BinaryExpression
                    Identifier: ' pos'
                    PlusToken
                    NumericLiteral
                CaseBlock
                  CaseClause
                    StringLiteral
                  CaseClause
                    StringLiteral
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                    error'
                        PropertyAccessExpression
                          Identifier: 'Diagnostics'
                          Identifier: 'Expected_a_class_set_operand'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    mayContainStrings'
                        EqualsToken
                        FalseKeyword
                    BreakStatement
                  DefaultClause
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    operand'
                        EqualsToken
                        CallExpression
                          Identifier: ' scanClassSetOperand'
                    BreakStatement
              SwitchStatement
                CallExpression
                  Identifier: 'charCodeChecked'
                  Identifier: 'pos'
                CaseBlock
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'minus'
                    IfStatement
                      BinaryExpression
                        CallExpression
                          Identifier: 'charCodeChecked'
                          BinaryExpression
                            Identifier: 'pos'
                            PlusToken
                            NumericLiteral
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'minus'
                      Block
                        IfStatement
                          BinaryExpression
                            Identifier: 'isCharacterComplement'
                            AmpersandAmpersandToken
                            Identifier: ' mayContainStrings'
                          Block
                            ExpressionStatement
                              CallExpression
                                Identifier: '
                            error'
                                PropertyAccessExpression
                                  Identifier: 'Diagnostics'
                                  Identifier: 'Anything_that_would_possibly_match_more_than_a_single_character_is_invalid_inside_a_negated_character_class'
                                Identifier: ' start'
                                BinaryExpression
                                  Identifier: ' pos'
                                  MinusToken
                                  Identifier: ' start'
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        expressionMayContainStrings'
                            EqualsToken
                            Identifier: ' mayContainStrings'
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                        scanClassSetSubExpression'
                            PropertyAccessExpression
                              Identifier: 'ClassSetExpressionType'
                              Identifier: 'ClassSubtraction'
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        mayContainStrings'
                            EqualsToken
                            BinaryExpression
                              PrefixUnaryExpression
                                Identifier: 'isCharacterComplement'
                              AmpersandAmpersandToken
                              Identifier: ' expressionMayContainStrings'
                        ReturnStatement
                    BreakStatement
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'ampersand'
                    IfStatement
                      BinaryExpression
                        CallExpression
                          Identifier: 'charCodeChecked'
                          BinaryExpression
                            Identifier: 'pos'
                            PlusToken
                            NumericLiteral
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'ampersand'
                      Block
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                        scanClassSetSubExpression'
                            PropertyAccessExpression
                              Identifier: 'ClassSetExpressionType'
                              Identifier: 'ClassIntersection'
                        IfStatement
                          BinaryExpression
                            Identifier: 'isCharacterComplement'
                            AmpersandAmpersandToken
                            Identifier: ' mayContainStrings'
                          Block
                            ExpressionStatement
                              CallExpression
                                Identifier: '
                            error'
                                PropertyAccessExpression
                                  Identifier: 'Diagnostics'
                                  Identifier: 'Anything_that_would_possibly_match_more_than_a_single_character_is_invalid_inside_a_negated_character_class'
                                Identifier: ' start'
                                BinaryExpression
                                  Identifier: ' pos'
                                  MinusToken
                                  Identifier: ' start'
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        expressionMayContainStrings'
                            EqualsToken
                            Identifier: ' mayContainStrings'
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        mayContainStrings'
                            EqualsToken
                            BinaryExpression
                              PrefixUnaryExpression
                                Identifier: 'isCharacterComplement'
                              AmpersandAmpersandToken
                              Identifier: ' expressionMayContainStrings'
                        ReturnStatement
                      Block
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                        error'
                            PropertyAccessExpression
                              Identifier: 'Diagnostics'
                              Identifier: 'Unexpected_0_Did_you_mean_to_escape_it_with_backslash'
                            Identifier: ' pos'
                            NumericLiteral
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' String'
                                Identifier: 'fromCharCode'
                              Identifier: 'ch'
                    BreakStatement
                  DefaultClause
                    IfStatement
                      BinaryExpression
                        Identifier: 'isCharacterComplement'
                        AmpersandAmpersandToken
                        Identifier: ' mayContainStrings'
                      Block
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                        error'
                            PropertyAccessExpression
                              Identifier: 'Diagnostics'
                              Identifier: 'Anything_that_would_possibly_match_more_than_a_single_character_is_invalid_inside_a_negated_character_class'
                            Identifier: ' start'
                            BinaryExpression
                              Identifier: ' pos'
                              MinusToken
                              Identifier: ' start'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    expressionMayContainStrings'
                        EqualsToken
                        Identifier: ' mayContainStrings'
                    BreakStatement
              WhileStatement
                TrueKeyword
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                ch'
                      EqualsToken
                      CallExpression
                        Identifier: ' charCodeChecked'
                        Identifier: 'pos'
                  IfStatement
                    BinaryExpression
                      Identifier: 'ch'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' CharacterCodes'
                        Identifier: 'EOF'
                    Block
                      BreakStatement
                  SwitchStatement
                    Identifier: 'ch'
                    CaseBlock
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'minus'
                        ExpressionStatement
                          PostfixUnaryExpression
                            Identifier: '
                        pos'
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        ch'
                            EqualsToken
                            CallExpression
                              Identifier: ' charCodeChecked'
                              Identifier: 'pos'
                        IfStatement
                          CallExpression
                            Identifier: 'isClassContentExit'
                            Identifier: 'ch'
                          Block
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                            mayContainStrings'
                                EqualsToken
                                BinaryExpression
                                  PrefixUnaryExpression
                                    Identifier: 'isCharacterComplement'
                                  AmpersandAmpersandToken
                                  Identifier: ' expressionMayContainStrings'
                            ReturnStatement
                        IfStatement
                          BinaryExpression
                            Identifier: 'ch'
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' CharacterCodes'
                              Identifier: 'minus'
                          Block
                            ExpressionStatement
                              PostfixUnaryExpression
                                Identifier: '
                            pos'
                            ExpressionStatement
                              CallExpression
                                Identifier: '
                            error'
                                PropertyAccessExpression
                                  Identifier: 'Diagnostics'
                                  Identifier: 'Operators_must_not_be_mixed_within_a_character_class_Wrap_it_in_a_nested_class_instead'
                                BinaryExpression
                                  Identifier: ' pos'
                                  MinusToken
                                  NumericLiteral
                                NumericLiteral
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                            start'
                                EqualsToken
                                BinaryExpression
                                  Identifier: ' pos'
                                  MinusToken
                                  NumericLiteral
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                            operand'
                                EqualsToken
                                CallExpression
                                  PropertyAccessExpression
                                    Identifier: ' text'
                                    Identifier: 'slice'
                                  Identifier: 'start'
                                  Identifier: ' pos'
                            ContinueStatement
                          Block
                            IfStatement
                              PrefixUnaryExpression
                                Identifier: 'operand'
                              Block
                                ExpressionStatement
                                  CallExpression
                                    Identifier: '
                                error'
                                    PropertyAccessExpression
                                      Identifier: 'Diagnostics'
                                      Identifier: 'A_character_class_range_must_not_be_bounded_by_another_character_class'
                                    Identifier: ' start'
                                    BinaryExpression
                                      BinaryExpression
                                        Identifier: ' pos'
                                        MinusToken
                                        NumericLiteral
                                      MinusToken
                                      Identifier: ' start'
                            VariableStatement
                              VariableDeclarationList
                                VariableDeclaration
                                  Identifier: ' secondStart'
                                  Identifier: ' pos'
                            VariableStatement
                              VariableDeclarationList
                                VariableDeclaration
                                  Identifier: ' secondOperand'
                                  CallExpression
                                    Identifier: ' scanClassSetOperand'
                            IfStatement
                              BinaryExpression
                                Identifier: 'isCharacterComplement'
                                AmpersandAmpersandToken
                                Identifier: ' mayContainStrings'
                              Block
                                ExpressionStatement
                                  CallExpression
                                    Identifier: '
                                error'
                                    PropertyAccessExpression
                                      Identifier: 'Diagnostics'
                                      Identifier: 'Anything_that_would_possibly_match_more_than_a_single_character_is_invalid_inside_a_negated_character_class'
                                    Identifier: ' secondStart'
                                    BinaryExpression
                                      Identifier: ' pos'
                                      MinusToken
                                      Identifier: ' secondStart'
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                            expressionMayContainStrings'
                                BarBarEqualsToken
                                Identifier: ' mayContainStrings'
                            IfStatement
                              PrefixUnaryExpression
                                Identifier: 'secondOperand'
                              Block
                                ExpressionStatement
                                  CallExpression
                                    Identifier: '
                                error'
                                    PropertyAccessExpression
                                      Identifier: 'Diagnostics'
                                      Identifier: 'A_character_class_range_must_not_be_bounded_by_another_character_class'
                                    Identifier: ' secondStart'
                                    BinaryExpression
                                      Identifier: ' pos'
                                      MinusToken
                                      Identifier: ' secondStart'
                                BreakStatement
                            IfStatement
                              PrefixUnaryExpression
                                Identifier: 'operand'
                              Block
                                BreakStatement
                            VariableStatement
                              VariableDeclarationList
                                VariableDeclaration
                                  Identifier: ' minCharacterValue'
                                  CallExpression
                                    Identifier: ' codePointAt'
                                    Identifier: 'operand'
                                    NumericLiteral
                            VariableStatement
                              VariableDeclarationList
                                VariableDeclaration
                                  Identifier: ' maxCharacterValue'
                                  CallExpression
                                    Identifier: ' codePointAt'
                                    Identifier: 'secondOperand'
                                    NumericLiteral
                            IfStatement
                              BinaryExpression
                                BinaryExpression
                                  BinaryExpression
                                    PropertyAccessExpression
                                      Identifier: '
                                operand'
                                      Identifier: 'length'
                                    EqualsEqualsEqualsToken
                                    CallExpression
                                      Identifier: ' charSize'
                                      Identifier: 'minCharacterValue'
                                  AmpersandAmpersandToken
                                  BinaryExpression
                                    PropertyAccessExpression
                                      Identifier: '
                                secondOperand'
                                      Identifier: 'length'
                                    EqualsEqualsEqualsToken
                                    CallExpression
                                      Identifier: ' charSize'
                                      Identifier: 'maxCharacterValue'
                                AmpersandAmpersandToken
                                BinaryExpression
                                  Identifier: '
                                minCharacterValue'
                                  GreaterThanToken
                                  Identifier: ' maxCharacterValue'
                              Block
                                ExpressionStatement
                                  CallExpression
                                    Identifier: '
                                error'
                                    PropertyAccessExpression
                                      Identifier: 'Diagnostics'
                                      Identifier: 'Range_out_of_order_in_character_class'
                                    Identifier: ' start'
                                    BinaryExpression
                                      Identifier: ' pos'
                                      MinusToken
                                      Identifier: ' start'
                        BreakStatement
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'ampersand'
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        start'
                            EqualsToken
                            Identifier: ' pos'
                        ExpressionStatement
                          PostfixUnaryExpression
                            Identifier: '
                        pos'
                        IfStatement
                          BinaryExpression
                            CallExpression
                              Identifier: 'charCodeChecked'
                              Identifier: 'pos'
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' CharacterCodes'
                              Identifier: 'ampersand'
                          Block
                            ExpressionStatement
                              PostfixUnaryExpression
                                Identifier: '
                            pos'
                            ExpressionStatement
                              CallExpression
                                Identifier: '
                            error'
                                PropertyAccessExpression
                                  Identifier: 'Diagnostics'
                                  Identifier: 'Operators_must_not_be_mixed_within_a_character_class_Wrap_it_in_a_nested_class_instead'
                                BinaryExpression
                                  Identifier: ' pos'
                                  MinusToken
                                  NumericLiteral
                                NumericLiteral
                            IfStatement
                              BinaryExpression
                                CallExpression
                                  Identifier: 'charCodeChecked'
                                  Identifier: 'pos'
                                EqualsEqualsEqualsToken
                                PropertyAccessExpression
                                  Identifier: ' CharacterCodes'
                                  Identifier: 'ampersand'
                              Block
                                ExpressionStatement
                                  CallExpression
                                    Identifier: '
                                error'
                                    PropertyAccessExpression
                                      Identifier: 'Diagnostics'
                                      Identifier: 'Unexpected_0_Did_you_mean_to_escape_it_with_backslash'
                                    Identifier: ' pos'
                                    NumericLiteral
                                    CallExpression
                                      PropertyAccessExpression
                                        Identifier: ' String'
                                        Identifier: 'fromCharCode'
                                      Identifier: 'ch'
                                ExpressionStatement
                                  PostfixUnaryExpression
                                    Identifier: '
                                pos'
                          Block
                            ExpressionStatement
                              CallExpression
                                Identifier: '
                            error'
                                PropertyAccessExpression
                                  Identifier: 'Diagnostics'
                                  Identifier: 'Unexpected_0_Did_you_mean_to_escape_it_with_backslash'
                                BinaryExpression
                                  Identifier: ' pos'
                                  MinusToken
                                  NumericLiteral
                                NumericLiteral
                                CallExpression
                                  PropertyAccessExpression
                                    Identifier: ' String'
                                    Identifier: 'fromCharCode'
                                  Identifier: 'ch'
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        operand'
                            EqualsToken
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' text'
                                Identifier: 'slice'
                              Identifier: 'start'
                              Identifier: ' pos'
                        ContinueStatement
                  IfStatement
                    CallExpression
                      Identifier: 'isClassContentExit'
                      CallExpression
                        Identifier: 'charCodeChecked'
                        Identifier: 'pos'
                    Block
                      BreakStatement
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                start'
                      EqualsToken
                      Identifier: ' pos'
                  SwitchStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: 'text'
                        Identifier: 'slice'
                      Identifier: 'pos'
                      BinaryExpression
                        Identifier: ' pos'
                        PlusToken
                        NumericLiteral
                    CaseBlock
                      CaseClause
                        StringLiteral
                      CaseClause
                        StringLiteral
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                        error'
                            PropertyAccessExpression
                              Identifier: 'Diagnostics'
                              Identifier: 'Operators_must_not_be_mixed_within_a_character_class_Wrap_it_in_a_nested_class_instead'
                            Identifier: ' pos'
                            NumericLiteral
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        pos'
                            PlusEqualsToken
                            NumericLiteral
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        operand'
                            EqualsToken
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' text'
                                Identifier: 'slice'
                              Identifier: 'start'
                              Identifier: ' pos'
                        BreakStatement
                      DefaultClause
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        operand'
                            EqualsToken
                            CallExpression
                              Identifier: ' scanClassSetOperand'
                        BreakStatement
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            mayContainStrings'
                  EqualsToken
                  BinaryExpression
                    PrefixUnaryExpression
                      Identifier: 'isCharacterComplement'
                    AmpersandAmpersandToken
                    Identifier: ' expressionMayContainStrings'
          FunctionDeclaration
            Identifier: ' scanClassSetSubExpression'
            Parameter
              Identifier: 'expressionType'
              TypeReference
                Identifier: ' ClassSetExpressionType'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' expressionMayContainStrings'
                    Identifier: ' mayContainStrings'
              WhileStatement
                TrueKeyword
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' ch'
                        CallExpression
                          Identifier: ' charCodeChecked'
                          Identifier: 'pos'
                  IfStatement
                    CallExpression
                      Identifier: 'isClassContentExit'
                      Identifier: 'ch'
                    Block
                      BreakStatement
                  SwitchStatement
                    Identifier: 'ch'
                    CaseBlock
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'minus'
                        ExpressionStatement
                          PostfixUnaryExpression
                            Identifier: '
                        pos'
                        IfStatement
                          BinaryExpression
                            CallExpression
                              Identifier: 'charCodeChecked'
                              Identifier: 'pos'
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' CharacterCodes'
                              Identifier: 'minus'
                          Block
                            ExpressionStatement
                              PostfixUnaryExpression
                                Identifier: '
                            pos'
                            IfStatement
                              BinaryExpression
                                Identifier: 'expressionType'
                                ExclamationEqualsEqualsToken
                                PropertyAccessExpression
                                  Identifier: ' ClassSetExpressionType'
                                  Identifier: 'ClassSubtraction'
                              Block
                                ExpressionStatement
                                  CallExpression
                                    Identifier: '
                                error'
                                    PropertyAccessExpression
                                      Identifier: 'Diagnostics'
                                      Identifier: 'Operators_must_not_be_mixed_within_a_character_class_Wrap_it_in_a_nested_class_instead'
                                    BinaryExpression
                                      Identifier: ' pos'
                                      MinusToken
                                      NumericLiteral
                                    NumericLiteral
                          Block
                            ExpressionStatement
                              CallExpression
                                Identifier: '
                            error'
                                PropertyAccessExpression
                                  Identifier: 'Diagnostics'
                                  Identifier: 'Operators_must_not_be_mixed_within_a_character_class_Wrap_it_in_a_nested_class_instead'
                                BinaryExpression
                                  Identifier: ' pos'
                                  MinusToken
                                  NumericLiteral
                                NumericLiteral
                        BreakStatement
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'ampersand'
                        ExpressionStatement
                          PostfixUnaryExpression
                            Identifier: '
                        pos'
                        IfStatement
                          BinaryExpression
                            CallExpression
                              Identifier: 'charCodeChecked'
                              Identifier: 'pos'
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' CharacterCodes'
                              Identifier: 'ampersand'
                          Block
                            ExpressionStatement
                              PostfixUnaryExpression
                                Identifier: '
                            pos'
                            IfStatement
                              BinaryExpression
                                Identifier: 'expressionType'
                                ExclamationEqualsEqualsToken
                                PropertyAccessExpression
                                  Identifier: ' ClassSetExpressionType'
                                  Identifier: 'ClassIntersection'
                              Block
                                ExpressionStatement
                                  CallExpression
                                    Identifier: '
                                error'
                                    PropertyAccessExpression
                                      Identifier: 'Diagnostics'
                                      Identifier: 'Operators_must_not_be_mixed_within_a_character_class_Wrap_it_in_a_nested_class_instead'
                                    BinaryExpression
                                      Identifier: ' pos'
                                      MinusToken
                                      NumericLiteral
                                    NumericLiteral
                            IfStatement
                              BinaryExpression
                                CallExpression
                                  Identifier: 'charCodeChecked'
                                  Identifier: 'pos'
                                EqualsEqualsEqualsToken
                                PropertyAccessExpression
                                  Identifier: ' CharacterCodes'
                                  Identifier: 'ampersand'
                              Block
                                ExpressionStatement
                                  CallExpression
                                    Identifier: '
                                error'
                                    PropertyAccessExpression
                                      Identifier: 'Diagnostics'
                                      Identifier: 'Unexpected_0_Did_you_mean_to_escape_it_with_backslash'
                                    Identifier: ' pos'
                                    NumericLiteral
                                    CallExpression
                                      PropertyAccessExpression
                                        Identifier: ' String'
                                        Identifier: 'fromCharCode'
                                      Identifier: 'ch'
                                ExpressionStatement
                                  PostfixUnaryExpression
                                    Identifier: '
                                pos'
                          Block
                            ExpressionStatement
                              CallExpression
                                Identifier: '
                            error'
                                PropertyAccessExpression
                                  Identifier: 'Diagnostics'
                                  Identifier: 'Unexpected_0_Did_you_mean_to_escape_it_with_backslash'
                                BinaryExpression
                                  Identifier: ' pos'
                                  MinusToken
                                  NumericLiteral
                                NumericLiteral
                                CallExpression
                                  PropertyAccessExpression
                                    Identifier: ' String'
                                    Identifier: 'fromCharCode'
                                  Identifier: 'ch'
                        BreakStatement
                      DefaultClause
                        SwitchStatement
                          Identifier: 'expressionType'
                          CaseBlock
                            CaseClause
                              PropertyAccessExpression
                                Identifier: ' ClassSetExpressionType'
                                Identifier: 'ClassSubtraction'
                              ExpressionStatement
                                CallExpression
                                  Identifier: '
                                error'
                                  PropertyAccessExpression
                                    Identifier: 'Diagnostics'
                                    Identifier: '_0_expected'
                                  Identifier: ' pos'
                                  NumericLiteral
                                  StringLiteral
                              BreakStatement
                            CaseClause
                              PropertyAccessExpression
                                Identifier: ' ClassSetExpressionType'
                                Identifier: 'ClassIntersection'
                              ExpressionStatement
                                CallExpression
                                  Identifier: '
                                error'
                                  PropertyAccessExpression
                                    Identifier: 'Diagnostics'
                                    Identifier: '_0_expected'
                                  Identifier: ' pos'
                                  NumericLiteral
                                  StringLiteral
                              BreakStatement
                            DefaultClause
                              BreakStatement
                        BreakStatement
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                ch'
                      EqualsToken
                      CallExpression
                        Identifier: ' charCodeChecked'
                        Identifier: 'pos'
                  IfStatement
                    CallExpression
                      Identifier: 'isClassContentExit'
                      Identifier: 'ch'
                    Block
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    error'
                          PropertyAccessExpression
                            Identifier: 'Diagnostics'
                            Identifier: 'Expected_a_class_set_operand'
                      BreakStatement
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                scanClassSetOperand'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                // Used only if expressionType is Intersection
                expressionMayContainStrings'
                      AmpersandAmpersandEqualsToken
                      Identifier: ' mayContainStrings'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            mayContainStrings'
                  EqualsToken
                  Identifier: ' expressionMayContainStrings'
          FunctionDeclaration
            Identifier: ' scanClassSetOperand'
            StringKeyword
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            mayContainStrings'
                  EqualsToken
                  FalseKeyword
              SwitchStatement
                CallExpression
                  Identifier: 'charCodeChecked'
                  Identifier: 'pos'
                CaseBlock
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'EOF'
                    ReturnStatement
                      StringLiteral
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'openBracket'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                    scanClassSetExpression'
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                    scanExpectedChar'
                        PropertyAccessExpression
                          Identifier: 'CharacterCodes'
                          Identifier: 'closeBracket'
                    ReturnStatement
                      StringLiteral
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'backslash'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    IfStatement
                      CallExpression
                        Identifier: 'scanCharacterClassEscape'
                      Block
                        ReturnStatement
                          StringLiteral
                      IfStatement
                        BinaryExpression
                          CallExpression
                            Identifier: 'charCodeChecked'
                            Identifier: 'pos'
                          EqualsEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' CharacterCodes'
                            Identifier: 'q'
                        Block
                          ExpressionStatement
                            PostfixUnaryExpression
                              Identifier: '
                        pos'
                          IfStatement
                            BinaryExpression
                              CallExpression
                                Identifier: 'charCodeChecked'
                                Identifier: 'pos'
                              EqualsEqualsEqualsToken
                              PropertyAccessExpression
                                Identifier: ' CharacterCodes'
                                Identifier: 'openBrace'
                            Block
                              ExpressionStatement
                                PostfixUnaryExpression
                                  Identifier: '
                            pos'
                              ExpressionStatement
                                CallExpression
                                  Identifier: '
                            scanClassStringDisjunctionContents'
                              ExpressionStatement
                                CallExpression
                                  Identifier: '
                            scanExpectedChar'
                                  PropertyAccessExpression
                                    Identifier: 'CharacterCodes'
                                    Identifier: 'closeBrace'
                              ReturnStatement
                                StringLiteral
                            Block
                              ExpressionStatement
                                CallExpression
                                  Identifier: '
                            error'
                                  PropertyAccessExpression
                                    Identifier: 'Diagnostics'
                                    Identifier: 'q_must_be_followed_by_string_alternatives_enclosed_in_braces'
                                  BinaryExpression
                                    Identifier: ' pos'
                                    MinusToken
                                    NumericLiteral
                                  NumericLiteral
                              ReturnStatement
                                StringLiteral
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                  DefaultClause
                    ReturnStatement
                      CallExpression
                        Identifier: ' scanClassSetCharacter'
          FunctionDeclaration
            Identifier: ' scanClassStringDisjunctionContents'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            Debug'
                    Identifier: 'assertEqual'
                  CallExpression
                    Identifier: 'charCodeUnchecked'
                    BinaryExpression
                      Identifier: 'pos'
                      MinusToken
                      NumericLiteral
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'openBrace'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' characterCount'
                    NumericLiteral
              WhileStatement
                TrueKeyword
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' ch'
                        CallExpression
                          Identifier: ' charCodeChecked'
                          Identifier: 'pos'
                  SwitchStatement
                    Identifier: 'ch'
                    CaseBlock
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'EOF'
                        ReturnStatement
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'closeBrace'
                        IfStatement
                          BinaryExpression
                            Identifier: 'characterCount'
                            ExclamationEqualsEqualsToken
                            NumericLiteral
                          Block
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                            mayContainStrings'
                                EqualsToken
                                TrueKeyword
                        ReturnStatement
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'bar'
                        IfStatement
                          BinaryExpression
                            Identifier: 'characterCount'
                            ExclamationEqualsEqualsToken
                            NumericLiteral
                          Block
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                            mayContainStrings'
                                EqualsToken
                                TrueKeyword
                        ExpressionStatement
                          PostfixUnaryExpression
                            Identifier: '
                        pos'
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        start'
                            EqualsToken
                            Identifier: ' pos'
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        characterCount'
                            EqualsToken
                            NumericLiteral
                        BreakStatement
                      DefaultClause
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                        scanClassSetCharacter'
                        ExpressionStatement
                          PostfixUnaryExpression
                            Identifier: '
                        characterCount'
                        BreakStatement
          FunctionDeclaration
            Identifier: ' scanClassSetCharacter'
            StringKeyword
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' ch'
                    CallExpression
                      Identifier: ' charCodeChecked'
                      Identifier: 'pos'
              IfStatement
                BinaryExpression
                  Identifier: 'ch'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'EOF'
                Block
                  ReturnStatement
                    StringLiteral
              IfStatement
                BinaryExpression
                  Identifier: 'ch'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'backslash'
                Block
                  ExpressionStatement
                    PostfixUnaryExpression
                      Identifier: '
                pos'
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' ch'
                        CallExpression
                          Identifier: ' charCodeChecked'
                          Identifier: 'pos'
                  SwitchStatement
                    Identifier: 'ch'
                    CaseBlock
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'b'
                        ExpressionStatement
                          PostfixUnaryExpression
                            Identifier: '
                        pos'
                        ReturnStatement
                          StringLiteral
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'ampersand'
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'minus'
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'exclamation'
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'hash'
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'percent'
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'comma'
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'colon'
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'semicolon'
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'lessThan'
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'equals'
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'greaterThan'
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'at'
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'backtick'
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'tilde'
                        ExpressionStatement
                          PostfixUnaryExpression
                            Identifier: '
                        pos'
                        ReturnStatement
                          CallExpression
                            PropertyAccessExpression
                              Identifier: ' String'
                              Identifier: 'fromCharCode'
                            Identifier: 'ch'
                      DefaultClause
                        ReturnStatement
                          CallExpression
                            Identifier: ' scanCharacterEscape'
                            FalseKeyword
                IfStatement
                  BinaryExpression
                    Identifier: 'ch'
                    EqualsEqualsEqualsToken
                    CallExpression
                      Identifier: ' charCodeChecked'
                      BinaryExpression
                        Identifier: 'pos'
                        PlusToken
                        NumericLiteral
                  Block
                    SwitchStatement
                      Identifier: 'ch'
                      CaseBlock
                        CaseClause
                          PropertyAccessExpression
                            Identifier: ' CharacterCodes'
                            Identifier: 'ampersand'
                        CaseClause
                          PropertyAccessExpression
                            Identifier: ' CharacterCodes'
                            Identifier: 'exclamation'
                        CaseClause
                          PropertyAccessExpression
                            Identifier: ' CharacterCodes'
                            Identifier: 'hash'
                        CaseClause
                          PropertyAccessExpression
                            Identifier: ' CharacterCodes'
                            Identifier: 'percent'
                        CaseClause
                          PropertyAccessExpression
                            Identifier: ' CharacterCodes'
                            Identifier: 'asterisk'
                        CaseClause
                          PropertyAccessExpression
                            Identifier: ' CharacterCodes'
                            Identifier: 'plus'
                        CaseClause
                          PropertyAccessExpression
                            Identifier: ' CharacterCodes'
                            Identifier: 'comma'
                        CaseClause
                          PropertyAccessExpression
                            Identifier: ' CharacterCodes'
                            Identifier: 'dot'
                        CaseClause
                          PropertyAccessExpression
                            Identifier: ' CharacterCodes'
                            Identifier: 'colon'
                        CaseClause
                          PropertyAccessExpression
                            Identifier: ' CharacterCodes'
                            Identifier: 'semicolon'
                        CaseClause
                          PropertyAccessExpression
                            Identifier: ' CharacterCodes'
                            Identifier: 'lessThan'
                        CaseClause
                          PropertyAccessExpression
                            Identifier: ' CharacterCodes'
                            Identifier: 'equals'
                        CaseClause
                          PropertyAccessExpression
                            Identifier: ' CharacterCodes'
                            Identifier: 'greaterThan'
                        CaseClause
                          PropertyAccessExpression
                            Identifier: ' CharacterCodes'
                            Identifier: 'question'
                        CaseClause
                          PropertyAccessExpression
                            Identifier: ' CharacterCodes'
                            Identifier: 'at'
                        CaseClause
                          PropertyAccessExpression
                            Identifier: ' CharacterCodes'
                            Identifier: 'backtick'
                        CaseClause
                          PropertyAccessExpression
                            Identifier: ' CharacterCodes'
                            Identifier: 'tilde'
                          ExpressionStatement
                            CallExpression
                              Identifier: '
                        error'
                              PropertyAccessExpression
                                Identifier: 'Diagnostics'
                                Identifier: 'A_character_class_must_not_contain_a_reserved_double_punctuator_Did_you_mean_to_escape_it_with_backslash'
                              Identifier: ' pos'
                              NumericLiteral
                          ExpressionStatement
                            BinaryExpression
                              Identifier: '
                        pos'
                              PlusEqualsToken
                              NumericLiteral
                          ReturnStatement
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' text'
                                Identifier: 'substring'
                              BinaryExpression
                                Identifier: 'pos'
                                MinusToken
                                NumericLiteral
                              Identifier: ' pos'
              SwitchStatement
                Identifier: 'ch'
                CaseBlock
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'slash'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'openParen'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'closeParen'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'openBracket'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'closeBracket'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'openBrace'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'closeBrace'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'minus'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'bar'
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                    error'
                        PropertyAccessExpression
                          Identifier: 'Diagnostics'
                          Identifier: 'Unexpected_0_Did_you_mean_to_escape_it_with_backslash'
                        Identifier: ' pos'
                        NumericLiteral
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' String'
                            Identifier: 'fromCharCode'
                          Identifier: 'ch'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    ReturnStatement
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' String'
                          Identifier: 'fromCharCode'
                        Identifier: 'ch'
              ReturnStatement
                CallExpression
                  Identifier: ' scanSourceCharacter'
          FunctionDeclaration
            Identifier: ' scanClassAtom'
            StringKeyword
            Block
              IfStatement
                BinaryExpression
                  CallExpression
                    Identifier: 'charCodeChecked'
                    Identifier: 'pos'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'backslash'
                Block
                  ExpressionStatement
                    PostfixUnaryExpression
                      Identifier: '
                pos'
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' ch'
                        CallExpression
                          Identifier: ' charCodeChecked'
                          Identifier: 'pos'
                  SwitchStatement
                    Identifier: 'ch'
                    CaseBlock
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'b'
                        ExpressionStatement
                          PostfixUnaryExpression
                            Identifier: '
                        pos'
                        ReturnStatement
                          StringLiteral
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'minus'
                        ExpressionStatement
                          PostfixUnaryExpression
                            Identifier: '
                        pos'
                        ReturnStatement
                          CallExpression
                            PropertyAccessExpression
                              Identifier: ' String'
                              Identifier: 'fromCharCode'
                            Identifier: 'ch'
                      DefaultClause
                        IfStatement
                          CallExpression
                            Identifier: 'scanCharacterClassEscape'
                          Block
                            ReturnStatement
                              StringLiteral
                        ReturnStatement
                          CallExpression
                            Identifier: ' scanCharacterEscape'
                            FalseKeyword
                Block
                  ReturnStatement
                    CallExpression
                      Identifier: ' scanSourceCharacter'
          FunctionDeclaration
            Identifier: ' scanCharacterClassEscape'
            BooleanKeyword
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            Debug'
                    Identifier: 'assertEqual'
                  CallExpression
                    Identifier: 'charCodeUnchecked'
                    BinaryExpression
                      Identifier: 'pos'
                      MinusToken
                      NumericLiteral
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'backslash'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' isCharacterComplement'
                    FalseKeyword
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' start'
                    BinaryExpression
                      Identifier: ' pos'
                      MinusToken
                      NumericLiteral
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' ch'
                    CallExpression
                      Identifier: ' charCodeChecked'
                      Identifier: 'pos'
              SwitchStatement
                Identifier: 'ch'
                CaseBlock
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'd'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'D'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 's'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'S'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'w'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'W'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    ReturnStatement
                      TrueKeyword
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'P'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    isCharacterComplement'
                        EqualsToken
                        TrueKeyword
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'p'
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                    IfStatement
                      BinaryExpression
                        CallExpression
                          Identifier: 'charCodeChecked'
                          Identifier: 'pos'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'openBrace'
                      Block
                        ExpressionStatement
                          PostfixUnaryExpression
                            Identifier: '
                        pos'
                        VariableStatement
                          VariableDeclarationList
                            VariableDeclaration
                              Identifier: ' propertyNameOrValueStart'
                              Identifier: ' pos'
                        VariableStatement
                          VariableDeclarationList
                            VariableDeclaration
                              Identifier: ' propertyNameOrValue'
                              CallExpression
                                Identifier: ' scanWordCharacters'
                        IfStatement
                          BinaryExpression
                            CallExpression
                              Identifier: 'charCodeChecked'
                              Identifier: 'pos'
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' CharacterCodes'
                              Identifier: 'equals'
                          Block
                            VariableStatement
                              VariableDeclarationList
                                VariableDeclaration
                                  Identifier: ' propertyName'
                                  CallExpression
                                    PropertyAccessExpression
                                      Identifier: ' nonBinaryUnicodeProperties'
                                      Identifier: 'get'
                                    Identifier: 'propertyNameOrValue'
                            IfStatement
                              BinaryExpression
                                Identifier: 'pos'
                                EqualsEqualsEqualsToken
                                Identifier: ' propertyNameOrValueStart'
                              Block
                                ExpressionStatement
                                  CallExpression
                                    Identifier: '
                                error'
                                    PropertyAccessExpression
                                      Identifier: 'Diagnostics'
                                      Identifier: 'Expected_a_Unicode_property_name'
                              IfStatement
                                BinaryExpression
                                  Identifier: 'propertyName'
                                  EqualsEqualsEqualsToken
                                  Identifier: ' undefined'
                                Block
                                  ExpressionStatement
                                    CallExpression
                                      Identifier: '
                                error'
                                      PropertyAccessExpression
                                        Identifier: 'Diagnostics'
                                        Identifier: 'Unknown_Unicode_property_name'
                                      Identifier: ' propertyNameOrValueStart'
                                      BinaryExpression
                                        Identifier: ' pos'
                                        MinusToken
                                        Identifier: ' propertyNameOrValueStart'
                                  VariableStatement
                                    VariableDeclarationList
                                      VariableDeclaration
                                        Identifier: ' suggestion'
                                        CallExpression
                                          Identifier: ' getSpellingSuggestion'
                                          Identifier: 'propertyNameOrValue'
                                          CallExpression
                                            PropertyAccessExpression
                                              Identifier: ' nonBinaryUnicodeProperties'
                                              Identifier: 'keys'
                                          Identifier: ' identity'
                                  IfStatement
                                    Identifier: 'suggestion'
                                    Block
                                      ExpressionStatement
                                        CallExpression
                                          Identifier: '
                                    error'
                                          PropertyAccessExpression
                                            Identifier: 'Diagnostics'
                                            Identifier: 'Did_you_mean_0'
                                          Identifier: ' propertyNameOrValueStart'
                                          BinaryExpression
                                            Identifier: ' pos'
                                            MinusToken
                                            Identifier: ' propertyNameOrValueStart'
                                          Identifier: ' suggestion'
                            ExpressionStatement
                              PostfixUnaryExpression
                                Identifier: '
                            pos'
                            VariableStatement
                              VariableDeclarationList
                                VariableDeclaration
                                  Identifier: ' propertyValueStart'
                                  Identifier: ' pos'
                            VariableStatement
                              VariableDeclarationList
                                VariableDeclaration
                                  Identifier: ' propertyValue'
                                  CallExpression
                                    Identifier: ' scanWordCharacters'
                            IfStatement
                              BinaryExpression
                                Identifier: 'pos'
                                EqualsEqualsEqualsToken
                                Identifier: ' propertyValueStart'
                              Block
                                ExpressionStatement
                                  CallExpression
                                    Identifier: '
                                error'
                                    PropertyAccessExpression
                                      Identifier: 'Diagnostics'
                                      Identifier: 'Expected_a_Unicode_property_value'
                              IfStatement
                                BinaryExpression
                                  BinaryExpression
                                    Identifier: 'propertyName'
                                    ExclamationEqualsEqualsToken
                                    Identifier: ' undefined'
                                  AmpersandAmpersandToken
                                  PrefixUnaryExpression
                                    CallExpression
                                      PropertyAccessExpression
                                        ElementAccessExpression
                                          Identifier: 'valuesOfNonBinaryUnicodeProperties'
                                          Identifier: 'propertyName'
                                        Identifier: 'has'
                                      Identifier: 'propertyValue'
                                Block
                                  ExpressionStatement
                                    CallExpression
                                      Identifier: '
                                error'
                                      PropertyAccessExpression
                                        Identifier: 'Diagnostics'
                                        Identifier: 'Unknown_Unicode_property_value'
                                      Identifier: ' propertyValueStart'
                                      BinaryExpression
                                        Identifier: ' pos'
                                        MinusToken
                                        Identifier: ' propertyValueStart'
                                  VariableStatement
                                    VariableDeclarationList
                                      VariableDeclaration
                                        Identifier: ' suggestion'
                                        CallExpression
                                          Identifier: ' getSpellingSuggestion'
                                          Identifier: 'propertyValue'
                                          ElementAccessExpression
                                            Identifier: ' valuesOfNonBinaryUnicodeProperties'
                                            Identifier: 'propertyName'
                                          Identifier: ' identity'
                                  IfStatement
                                    Identifier: 'suggestion'
                                    Block
                                      ExpressionStatement
                                        CallExpression
                                          Identifier: '
                                    error'
                                          PropertyAccessExpression
                                            Identifier: 'Diagnostics'
                                            Identifier: 'Did_you_mean_0'
                                          Identifier: ' propertyValueStart'
                                          BinaryExpression
                                            Identifier: ' pos'
                                            MinusToken
                                            Identifier: ' propertyValueStart'
                                          Identifier: ' suggestion'
                          Block
                            IfStatement
                              BinaryExpression
                                Identifier: 'pos'
                                EqualsEqualsEqualsToken
                                Identifier: ' propertyNameOrValueStart'
                              Block
                                ExpressionStatement
                                  CallExpression
                                    Identifier: '
                                error'
                                    PropertyAccessExpression
                                      Identifier: 'Diagnostics'
                                      Identifier: 'Expected_a_Unicode_property_name_or_value'
                              IfStatement
                                CallExpression
                                  PropertyAccessExpression
                                    Identifier: 'binaryUnicodePropertiesOfStrings'
                                    Identifier: 'has'
                                  Identifier: 'propertyNameOrValue'
                                Block
                                  IfStatement
                                    PrefixUnaryExpression
                                      Identifier: 'unicodeSetsMode'
                                    Block
                                      ExpressionStatement
                                        CallExpression
                                          Identifier: '
                                    error'
                                          PropertyAccessExpression
                                            Identifier: 'Diagnostics'
                                            Identifier: 'Any_Unicode_property_that_would_possibly_match_more_than_a_single_character_is_only_available_when_the_Unicode_Sets_v_flag_is_set'
                                          Identifier: ' propertyNameOrValueStart'
                                          BinaryExpression
                                            Identifier: ' pos'
                                            MinusToken
                                            Identifier: ' propertyNameOrValueStart'
                                    IfStatement
                                      Identifier: 'isCharacterComplement'
                                      Block
                                        ExpressionStatement
                                          CallExpression
                                            Identifier: '
                                    error'
                                            PropertyAccessExpression
                                              Identifier: 'Diagnostics'
                                              Identifier: 'Anything_that_would_possibly_match_more_than_a_single_character_is_invalid_inside_a_negated_character_class'
                                            Identifier: ' propertyNameOrValueStart'
                                            BinaryExpression
                                              Identifier: ' pos'
                                              MinusToken
                                              Identifier: ' propertyNameOrValueStart'
                                      Block
                                        ExpressionStatement
                                          BinaryExpression
                                            Identifier: '
                                    mayContainStrings'
                                            EqualsToken
                                            TrueKeyword
                                IfStatement
                                  BinaryExpression
                                    PrefixUnaryExpression
                                      CallExpression
                                        PropertyAccessExpression
                                          PropertyAccessExpression
                                            Identifier: 'valuesOfNonBinaryUnicodeProperties'
                                            Identifier: 'General_Category'
                                          Identifier: 'has'
                                        Identifier: 'propertyNameOrValue'
                                    AmpersandAmpersandToken
                                    PrefixUnaryExpression
                                      CallExpression
                                        PropertyAccessExpression
                                          Identifier: 'binaryUnicodeProperties'
                                          Identifier: 'has'
                                        Identifier: 'propertyNameOrValue'
                                  Block
                                    ExpressionStatement
                                      CallExpression
                                        Identifier: '
                                error'
                                        PropertyAccessExpression
                                          Identifier: 'Diagnostics'
                                          Identifier: 'Unknown_Unicode_property_name_or_value'
                                        Identifier: ' propertyNameOrValueStart'
                                        BinaryExpression
                                          Identifier: ' pos'
                                          MinusToken
                                          Identifier: ' propertyNameOrValueStart'
                                    VariableStatement
                                      VariableDeclarationList
                                        VariableDeclaration
                                          Identifier: ' suggestion'
                                          CallExpression
                                            Identifier: ' getSpellingSuggestion'
                                            Identifier: 'propertyNameOrValue'
                                            ArrayLiteralExpression
                                              SpreadElement
                                                PropertyAccessExpression
                                                  Identifier: 'valuesOfNonBinaryUnicodeProperties'
                                                  Identifier: 'General_Category'
                                              SpreadElement
                                                Identifier: 'binaryUnicodeProperties'
                                              SpreadElement
                                                Identifier: 'binaryUnicodePropertiesOfStrings'
                                            Identifier: ' identity'
                                    IfStatement
                                      Identifier: 'suggestion'
                                      Block
                                        ExpressionStatement
                                          CallExpression
                                            Identifier: '
                                    error'
                                            PropertyAccessExpression
                                              Identifier: 'Diagnostics'
                                              Identifier: 'Did_you_mean_0'
                                            Identifier: ' propertyNameOrValueStart'
                                            BinaryExpression
                                              Identifier: ' pos'
                                              MinusToken
                                              Identifier: ' propertyNameOrValueStart'
                                            Identifier: ' suggestion'
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                        scanExpectedChar'
                            PropertyAccessExpression
                              Identifier: 'CharacterCodes'
                              Identifier: 'closeBrace'
                        IfStatement
                          PrefixUnaryExpression
                            Identifier: 'anyUnicodeMode'
                          Block
                            ExpressionStatement
                              CallExpression
                                Identifier: '
                            error'
                                PropertyAccessExpression
                                  Identifier: 'Diagnostics'
                                  Identifier: 'Unicode_property_value_expressions_are_only_available_when_the_Unicode_u_flag_or_the_Unicode_Sets_v_flag_is_set'
                                Identifier: ' start'
                                BinaryExpression
                                  Identifier: ' pos'
                                  MinusToken
                                  Identifier: ' start'
                      IfStatement
                        Identifier: 'anyUnicodeModeOrNonAnnexB'
                        Block
                          ExpressionStatement
                            CallExpression
                              Identifier: '
                        error'
                              PropertyAccessExpression
                                Identifier: 'Diagnostics'
                                Identifier: '_0_must_be_followed_by_a_Unicode_property_value_expression_enclosed_in_braces'
                              BinaryExpression
                                Identifier: ' pos'
                                MinusToken
                                NumericLiteral
                              NumericLiteral
                              CallExpression
                                PropertyAccessExpression
                                  Identifier: ' String'
                                  Identifier: 'fromCharCode'
                                Identifier: 'ch'
                        Block
                          ExpressionStatement
                            PostfixUnaryExpression
                              Identifier: '
                        pos'
                          ReturnStatement
                            FalseKeyword
                    ReturnStatement
                      TrueKeyword
              ReturnStatement
                FalseKeyword
          FunctionDeclaration
            Identifier: ' scanWordCharacters'
            StringKeyword
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' value'
                    StringLiteral
              WhileStatement
                TrueKeyword
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' ch'
                        CallExpression
                          Identifier: ' charCodeChecked'
                          Identifier: 'pos'
                  IfStatement
                    BinaryExpression
                      BinaryExpression
                        Identifier: 'ch'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' CharacterCodes'
                          Identifier: 'EOF'
                      BarBarToken
                      PrefixUnaryExpression
                        CallExpression
                          Identifier: 'isWordCharacter'
                          Identifier: 'ch'
                    Block
                      BreakStatement
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                value'
                      PlusEqualsToken
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' String'
                          Identifier: 'fromCharCode'
                        Identifier: 'ch'
                  ExpressionStatement
                    PostfixUnaryExpression
                      Identifier: '
                pos'
              ReturnStatement
                Identifier: ' value'
          FunctionDeclaration
            Identifier: ' scanSourceCharacter'
            StringKeyword
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' size'
                    ConditionalExpression
                      Identifier: ' anyUnicodeMode'
                      QuestionToken
                      CallExpression
                        Identifier: ' charSize'
                        CallExpression
                          Identifier: 'codePointChecked'
                          Identifier: 'pos'
                      ColonToken
                      NumericLiteral
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            pos'
                  PlusEqualsToken
                  Identifier: ' size'
              ReturnStatement
                ConditionalExpression
                  BinaryExpression
                    Identifier: ' size'
                    GreaterThanToken
                    NumericLiteral
                  QuestionToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' text'
                      Identifier: 'substring'
                    BinaryExpression
                      Identifier: 'pos'
                      MinusToken
                      Identifier: ' size'
                    Identifier: ' pos'
                  ColonToken
                  StringLiteral
          FunctionDeclaration
            Identifier: ' scanExpectedChar'
            Parameter
              Identifier: 'ch'
              TypeReference
                Identifier: ' CharacterCodes'
            Block
              IfStatement
                BinaryExpression
                  CallExpression
                    Identifier: 'charCodeChecked'
                    Identifier: 'pos'
                  EqualsEqualsEqualsToken
                  Identifier: ' ch'
                Block
                  ExpressionStatement
                    PostfixUnaryExpression
                      Identifier: '
                pos'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                error'
                      PropertyAccessExpression
                        Identifier: 'Diagnostics'
                        Identifier: '_0_expected'
                      Identifier: ' pos'
                      NumericLiteral
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' String'
                          Identifier: 'fromCharCode'
                        Identifier: 'ch'
          ExpressionStatement
            CallExpression
              Identifier: '

        scanDisjunction'
              FalseKeyword
          ExpressionStatement
            CallExpression
              Identifier: '

        forEach'
              Identifier: 'groupNameReferences'
              ArrowFunction
                Parameter
                  Identifier: ' reference'
                EqualsGreaterThanToken
                Block
                  IfStatement
                    PrefixUnaryExpression
                      CallExpression
                        PropertyAccessExpression
                          Identifier: 'groupSpecifiers'
                          QuestionDotToken
                          Identifier: 'has'
                        PropertyAccessExpression
                          Identifier: 'reference'
                          Identifier: 'name'
                    Block
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                error'
                          PropertyAccessExpression
                            Identifier: 'Diagnostics'
                            Identifier: 'There_is_no_capturing_group_named_0_in_this_regular_expression'
                          PropertyAccessExpression
                            Identifier: ' reference'
                            Identifier: 'pos'
                          BinaryExpression
                            PropertyAccessExpression
                              Identifier: ' reference'
                              Identifier: 'end'
                            MinusToken
                            PropertyAccessExpression
                              Identifier: ' reference'
                              Identifier: 'pos'
                          PropertyAccessExpression
                            Identifier: ' reference'
                            Identifier: 'name'
                      IfStatement
                        Identifier: 'groupSpecifiers'
                        Block
                          VariableStatement
                            VariableDeclarationList
                              VariableDeclaration
                                Identifier: ' suggestion'
                                CallExpression
                                  Identifier: ' getSpellingSuggestion'
                                  PropertyAccessExpression
                                    Identifier: 'reference'
                                    Identifier: 'name'
                                  Identifier: ' groupSpecifiers'
                                  Identifier: ' identity'
                          IfStatement
                            Identifier: 'suggestion'
                            Block
                              ExpressionStatement
                                CallExpression
                                  Identifier: '
                        error'
                                  PropertyAccessExpression
                                    Identifier: 'Diagnostics'
                                    Identifier: 'Did_you_mean_0'
                                  PropertyAccessExpression
                                    Identifier: ' reference'
                                    Identifier: 'pos'
                                  BinaryExpression
                                    PropertyAccessExpression
                                      Identifier: ' reference'
                                      Identifier: 'end'
                                    MinusToken
                                    PropertyAccessExpression
                                      Identifier: ' reference'
                                      Identifier: 'pos'
                                  Identifier: ' suggestion'
          ExpressionStatement
            CallExpression
              Identifier: '
        forEach'
              Identifier: 'decimalEscapes'
              ArrowFunction
                Parameter
                  Identifier: ' escape'
                EqualsGreaterThanToken
                Block
                  IfStatement
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: 'escape'
                        Identifier: 'value'
                      GreaterThanToken
                      Identifier: ' numberOfCapturingGroups'
                    Block
                      IfStatement
                        Identifier: 'numberOfCapturingGroups'
                        Block
                          ExpressionStatement
                            CallExpression
                              Identifier: '
                    error'
                              PropertyAccessExpression
                                Identifier: 'Diagnostics'
                                Identifier: 'This_backreference_refers_to_a_group_that_does_not_exist_There_are_only_0_capturing_groups_in_this_regular_expression'
                              PropertyAccessExpression
                                Identifier: ' escape'
                                Identifier: 'pos'
                              BinaryExpression
                                PropertyAccessExpression
                                  Identifier: ' escape'
                                  Identifier: 'end'
                                MinusToken
                                PropertyAccessExpression
                                  Identifier: ' escape'
                                  Identifier: 'pos'
                              Identifier: ' numberOfCapturingGroups'
                        Block
                          ExpressionStatement
                            CallExpression
                              Identifier: '
                    error'
                              PropertyAccessExpression
                                Identifier: 'Diagnostics'
                                Identifier: 'This_backreference_refers_to_a_group_that_does_not_exist_There_are_no_capturing_groups_in_this_regular_expression'
                              PropertyAccessExpression
                                Identifier: ' escape'
                                Identifier: 'pos'
                              BinaryExpression
                                PropertyAccessExpression
                                  Identifier: ' escape'
                                  Identifier: 'end'
                                MinusToken
                                PropertyAccessExpression
                                  Identifier: ' escape'
                                  Identifier: 'pos'
      FunctionDeclaration
        Identifier: ' checkRegularExpressionFlagAvailability'
        Parameter
          Identifier: 'flag'
          TypeReference
            Identifier: ' RegularExpressionFlags'
        Parameter
          Identifier: ' size'
          NumberKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' availableFrom'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' regExpFlagToFirstAvailableLanguageVersion'
                    Identifier: 'get'
                  Identifier: 'flag'
          IfStatement
            BinaryExpression
              Identifier: 'availableFrom'
              AmpersandAmpersandToken
              BinaryExpression
                Identifier: ' languageVersion'
                LessThanToken
                Identifier: ' availableFrom'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            error'
                  PropertyAccessExpression
                    Identifier: 'Diagnostics'
                    Identifier: 'This_regular_expression_flag_is_only_available_when_targeting_0_or_later'
                  Identifier: ' pos'
                  Identifier: ' size'
                  CallExpression
                    Identifier: ' getNameOfScriptTarget'
                    Identifier: 'availableFrom'
      FunctionDeclaration
        Identifier: ' appendIfCommentDirective'
        Parameter
          Identifier: '
        commentDirectives'
          UnionType
            ArrayType
              TypeReference
                Identifier: ' CommentDirective'
            UndefinedKeyword
        Parameter
          Identifier: '
        text'
          StringKeyword
        Parameter
          Identifier: '
        commentDirectiveRegEx'
          TypeReference
            Identifier: ' RegExp'
        Parameter
          Identifier: '
        lineStart'
          NumberKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' type'
                CallExpression
                  Identifier: ' getDirectiveFromComment'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: 'text'
                      Identifier: 'trimStart'
                  Identifier: ' commentDirectiveRegEx'
          IfStatement
            BinaryExpression
              Identifier: 'type'
              EqualsEqualsEqualsToken
              Identifier: ' undefined'
            Block
              ReturnStatement
                Identifier: ' commentDirectives'
          ReturnStatement
            CallExpression
              Identifier: ' append'
              Identifier: '
            commentDirectives'
              ObjectLiteralExpression
                PropertyAssignment
                  Identifier: '
                range'
                  ObjectLiteralExpression
                    PropertyAssignment
                      Identifier: ' pos'
                      Identifier: ' lineStart'
                    PropertyAssignment
                      Identifier: ' end'
                      Identifier: ' pos'
                ShorthandPropertyAssignment
                  Identifier: '
                type'
      FunctionDeclaration
        Identifier: ' getDirectiveFromComment'
        Parameter
          Identifier: 'text'
          StringKeyword
        Parameter
          Identifier: ' commentDirectiveRegEx'
          TypeReference
            Identifier: ' RegExp'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' match'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' commentDirectiveRegEx'
                    Identifier: 'exec'
                  Identifier: 'text'
          IfStatement
            PrefixUnaryExpression
              Identifier: 'match'
            Block
              ReturnStatement
                Identifier: ' undefined'
          SwitchStatement
            ElementAccessExpression
              Identifier: 'match'
              NumericLiteral
            CaseBlock
              CaseClause
                StringLiteral
                ReturnStatement
                  PropertyAccessExpression
                    Identifier: ' CommentDirectiveType'
                    Identifier: 'ExpectError'
              CaseClause
                StringLiteral
                ReturnStatement
                  PropertyAccessExpression
                    Identifier: ' CommentDirectiveType'
                    Identifier: 'Ignore'
          ReturnStatement
            Identifier: ' undefined'
      FunctionDeclaration
        Identifier: ' reScanTemplateToken'
        Parameter
          Identifier: 'isTaggedTemplate'
          BooleanKeyword
        TypeReference
          Identifier: ' SyntaxKind'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        pos'
              EqualsToken
              Identifier: ' tokenStart'
          ReturnStatement
            BinaryExpression
              Identifier: ' token'
              EqualsToken
              CallExpression
                Identifier: ' scanTemplateAndSetTokenValue'
                PrefixUnaryExpression
                  Identifier: 'isTaggedTemplate'
      FunctionDeclaration
        Identifier: ' reScanTemplateHeadOrNoSubstitutionTemplate'
        TypeReference
          Identifier: ' SyntaxKind'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        pos'
              EqualsToken
              Identifier: ' tokenStart'
          ReturnStatement
            BinaryExpression
              Identifier: ' token'
              EqualsToken
              CallExpression
                Identifier: ' scanTemplateAndSetTokenValue'
                TrueKeyword
      FunctionDeclaration
        Identifier: ' reScanJsxToken'
        Parameter
          Identifier: 'allowMultilineJsxText'
          TrueKeyword
        TypeReference
          Identifier: ' JsxTokenSyntaxKind'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        pos'
              EqualsToken
              BinaryExpression
                Identifier: ' tokenStart'
                EqualsToken
                Identifier: ' fullStartPos'
          ReturnStatement
            BinaryExpression
              Identifier: ' token'
              EqualsToken
              CallExpression
                Identifier: ' scanJsxToken'
                Identifier: 'allowMultilineJsxText'
      FunctionDeclaration
        Identifier: ' reScanLessThanToken'
        TypeReference
          Identifier: ' SyntaxKind'
        Block
          IfStatement
            BinaryExpression
              Identifier: 'token'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'LessThanLessThanToken'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            pos'
                  EqualsToken
                  BinaryExpression
                    Identifier: ' tokenStart'
                    PlusToken
                    NumericLiteral
              ReturnStatement
                BinaryExpression
                  Identifier: ' token'
                  EqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'LessThanToken'
          ReturnStatement
            Identifier: ' token'
      FunctionDeclaration
        Identifier: ' reScanHashToken'
        TypeReference
          Identifier: ' SyntaxKind'
        Block
          IfStatement
            BinaryExpression
              Identifier: 'token'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'PrivateIdentifier'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            pos'
                  EqualsToken
                  BinaryExpression
                    Identifier: ' tokenStart'
                    PlusToken
                    NumericLiteral
              ReturnStatement
                BinaryExpression
                  Identifier: ' token'
                  EqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'HashToken'
          ReturnStatement
            Identifier: ' token'
      FunctionDeclaration
        Identifier: ' reScanQuestionToken'
        TypeReference
          Identifier: ' SyntaxKind'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        Debug'
                Identifier: 'assert'
              BinaryExpression
                Identifier: 'token'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'QuestionQuestionToken'
              StringLiteral
          ExpressionStatement
            BinaryExpression
              Identifier: '
        pos'
              EqualsToken
              BinaryExpression
                Identifier: ' tokenStart'
                PlusToken
                NumericLiteral
          ReturnStatement
            BinaryExpression
              Identifier: ' token'
              EqualsToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'QuestionToken'
      FunctionDeclaration
        Identifier: ' scanJsxToken'
        Parameter
          Identifier: 'allowMultilineJsxText'
          TrueKeyword
        TypeReference
          Identifier: ' JsxTokenSyntaxKind'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        fullStartPos'
              EqualsToken
              BinaryExpression
                Identifier: ' tokenStart'
                EqualsToken
                Identifier: ' pos'
          IfStatement
            BinaryExpression
              Identifier: 'pos'
              GreaterThanEqualsToken
              Identifier: ' end'
            Block
              ReturnStatement
                BinaryExpression
                  Identifier: ' token'
                  EqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'EndOfFileToken'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' char'
                CallExpression
                  Identifier: ' charCodeUnchecked'
                  Identifier: 'pos'
          IfStatement
            BinaryExpression
              Identifier: 'char'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' CharacterCodes'
                Identifier: 'lessThan'
            Block
              IfStatement
                BinaryExpression
                  CallExpression
                    Identifier: 'charCodeUnchecked'
                    BinaryExpression
                      Identifier: 'pos'
                      PlusToken
                      NumericLiteral
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'slash'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                pos'
                      PlusEqualsToken
                      NumericLiteral
                  ReturnStatement
                    BinaryExpression
                      Identifier: ' token'
                      EqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'LessThanSlashToken'
              ExpressionStatement
                PostfixUnaryExpression
                  Identifier: '
            pos'
              ReturnStatement
                BinaryExpression
                  Identifier: ' token'
                  EqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'LessThanToken'
          IfStatement
            BinaryExpression
              Identifier: 'char'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' CharacterCodes'
                Identifier: 'openBrace'
            Block
              ExpressionStatement
                PostfixUnaryExpression
                  Identifier: '
            pos'
              ReturnStatement
                BinaryExpression
                  Identifier: ' token'
                  EqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'OpenBraceToken'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' firstNonWhitespace'
                NumericLiteral
          WhileStatement
            BinaryExpression
              Identifier: 'pos'
              LessThanToken
              Identifier: ' end'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            char'
                  EqualsToken
                  CallExpression
                    Identifier: ' charCodeUnchecked'
                    Identifier: 'pos'
              IfStatement
                BinaryExpression
                  Identifier: 'char'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'openBrace'
                Block
                  BreakStatement
              IfStatement
                BinaryExpression
                  Identifier: 'char'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'lessThan'
                Block
                  IfStatement
                    CallExpression
                      Identifier: 'isConflictMarkerTrivia'
                      Identifier: 'text'
                      Identifier: ' pos'
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    pos'
                          EqualsToken
                          CallExpression
                            Identifier: ' scanConflictMarkerTrivia'
                            Identifier: 'text'
                            Identifier: ' pos'
                            Identifier: ' error'
                      ReturnStatement
                        BinaryExpression
                          Identifier: ' token'
                          EqualsToken
                          PropertyAccessExpression
                            Identifier: ' SyntaxKind'
                            Identifier: 'ConflictMarkerTrivia'
                  BreakStatement
              IfStatement
                BinaryExpression
                  Identifier: 'char'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'greaterThan'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                error'
                      PropertyAccessExpression
                        Identifier: 'Diagnostics'
                        Identifier: 'Unexpected_token_Did_you_mean_or_gt'
                      Identifier: ' pos'
                      NumericLiteral
              IfStatement
                BinaryExpression
                  Identifier: 'char'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'closeBrace'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                error'
                      PropertyAccessExpression
                        Identifier: 'Diagnostics'
                        Identifier: 'Unexpected_token_Did_you_mean_or_rbrace'
                      Identifier: ' pos'
                      NumericLiteral
              IfStatement
                BinaryExpression
                  CallExpression
                    Identifier: 'isLineBreak'
                    Identifier: 'char'
                  AmpersandAmpersandToken
                  BinaryExpression
                    Identifier: ' firstNonWhitespace'
                    EqualsEqualsEqualsToken
                    NumericLiteral
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                firstNonWhitespace'
                      EqualsToken
                      PrefixUnaryExpression
                        NumericLiteral
                IfStatement
                  BinaryExpression
                    BinaryExpression
                      PrefixUnaryExpression
                        Identifier: 'allowMultilineJsxText'
                      AmpersandAmpersandToken
                      CallExpression
                        Identifier: ' isLineBreak'
                        Identifier: 'char'
                    AmpersandAmpersandToken
                    BinaryExpression
                      Identifier: ' firstNonWhitespace'
                      GreaterThanToken
                      NumericLiteral
                  Block
                    BreakStatement
                  IfStatement
                    PrefixUnaryExpression
                      CallExpression
                        Identifier: 'isWhiteSpaceLike'
                        Identifier: 'char'
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                firstNonWhitespace'
                          EqualsToken
                          Identifier: ' pos'
              ExpressionStatement
                PostfixUnaryExpression
                  Identifier: '

            pos'
          ExpressionStatement
            BinaryExpression
              Identifier: '

        tokenValue'
              EqualsToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' text'
                  Identifier: 'substring'
                Identifier: 'fullStartPos'
                Identifier: ' pos'
          ReturnStatement
            ConditionalExpression
              BinaryExpression
                Identifier: ' firstNonWhitespace'
                EqualsEqualsEqualsToken
                PrefixUnaryExpression
                  NumericLiteral
              QuestionToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'JsxTextAllWhiteSpaces'
              ColonToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'JsxText'
      FunctionDeclaration
        Identifier: ' scanJsxIdentifier'
        TypeReference
          Identifier: ' SyntaxKind'
        Block
          IfStatement
            CallExpression
              Identifier: 'tokenIsIdentifierOrKeyword'
              Identifier: 'token'
            Block
              WhileStatement
                BinaryExpression
                  Identifier: 'pos'
                  LessThanToken
                  Identifier: ' end'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' ch'
                        CallExpression
                          Identifier: ' charCodeUnchecked'
                          Identifier: 'pos'
                  IfStatement
                    BinaryExpression
                      Identifier: 'ch'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' CharacterCodes'
                        Identifier: 'minus'
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    tokenValue'
                          PlusEqualsToken
                          StringLiteral
                      ExpressionStatement
                        PostfixUnaryExpression
                          Identifier: '
                    pos'
                      ContinueStatement
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' oldPos'
                        Identifier: ' pos'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                tokenValue'
                      PlusEqualsToken
                      CallExpression
                        Identifier: ' scanIdentifierParts'
                  IfStatement
                    BinaryExpression
                      Identifier: 'pos'
                      EqualsEqualsEqualsToken
                      Identifier: ' oldPos'
                    Block
                      BreakStatement
              ReturnStatement
                CallExpression
                  Identifier: ' getIdentifierToken'
          ReturnStatement
            Identifier: ' token'
      FunctionDeclaration
        Identifier: ' scanJsxAttributeValue'
        TypeReference
          Identifier: ' SyntaxKind'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        fullStartPos'
              EqualsToken
              Identifier: ' pos'
          SwitchStatement
            CallExpression
              Identifier: 'charCodeUnchecked'
              Identifier: 'pos'
            CaseBlock
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'doubleQuote'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'singleQuote'
                ExpressionStatement
                  BinaryExpression
                    Identifier: '
                tokenValue'
                    EqualsToken
                    CallExpression
                      Identifier: ' scanString'
                      TrueKeyword
                ReturnStatement
                  BinaryExpression
                    Identifier: ' token'
                    EqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'StringLiteral'
              DefaultClause
                ReturnStatement
                  CallExpression
                    Identifier: ' scan'
      FunctionDeclaration
        Identifier: ' reScanJsxAttributeValue'
        TypeReference
          Identifier: ' SyntaxKind'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        pos'
              EqualsToken
              BinaryExpression
                Identifier: ' tokenStart'
                EqualsToken
                Identifier: ' fullStartPos'
          ReturnStatement
            CallExpression
              Identifier: ' scanJsxAttributeValue'
      FunctionDeclaration
        Identifier: ' scanJSDocCommentTextToken'
        Parameter
          Identifier: 'inBackticks'
          BooleanKeyword
        UnionType
          TypeReference
            Identifier: ' JSDocSyntaxKind'
          TypeReference
            QualifiedName
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocCommentTextToken'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        fullStartPos'
              EqualsToken
              BinaryExpression
                Identifier: ' tokenStart'
                EqualsToken
                Identifier: ' pos'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        tokenFlags'
              EqualsToken
              PropertyAccessExpression
                Identifier: ' TokenFlags'
                Identifier: 'None'
          IfStatement
            BinaryExpression
              Identifier: 'pos'
              GreaterThanEqualsToken
              Identifier: ' end'
            Block
              ReturnStatement
                BinaryExpression
                  Identifier: ' token'
                  EqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'EndOfFileToken'
          ForStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' ch'
                CallExpression
                  Identifier: ' charCodeUnchecked'
                  Identifier: 'pos'
            BinaryExpression
              BinaryExpression
                Identifier: ' pos'
                LessThanToken
                Identifier: ' end'
              AmpersandAmpersandToken
              ParenthesizedExpression
                BinaryExpression
                  PrefixUnaryExpression
                    CallExpression
                      Identifier: 'isLineBreak'
                      Identifier: 'ch'
                  AmpersandAmpersandToken
                  BinaryExpression
                    Identifier: ' ch'
                    ExclamationEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'backtick'
            BinaryExpression
              Identifier: ' ch'
              EqualsToken
              CallExpression
                Identifier: ' codePointUnchecked'
                PrefixUnaryExpression
                  Identifier: 'pos'
            Block
              IfStatement
                PrefixUnaryExpression
                  Identifier: 'inBackticks'
                Block
                  IfStatement
                    BinaryExpression
                      Identifier: 'ch'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' CharacterCodes'
                        Identifier: 'openBrace'
                    Block
                      BreakStatement
                    IfStatement
                      BinaryExpression
                        BinaryExpression
                          BinaryExpression
                            BinaryExpression
                              Identifier: '
                    ch'
                              EqualsEqualsEqualsToken
                              PropertyAccessExpression
                                Identifier: ' CharacterCodes'
                                Identifier: 'at'
                            AmpersandAmpersandToken
                            BinaryExpression
                              BinaryExpression
                                Identifier: ' pos'
                                MinusToken
                                NumericLiteral
                              GreaterThanEqualsToken
                              NumericLiteral
                          AmpersandAmpersandToken
                          CallExpression
                            Identifier: ' isWhiteSpaceSingleLine'
                            CallExpression
                              Identifier: 'charCodeUnchecked'
                              BinaryExpression
                                Identifier: 'pos'
                                MinusToken
                                NumericLiteral
                        AmpersandAmpersandToken
                        PrefixUnaryExpression
                          ParenthesizedExpression
                            BinaryExpression
                              BinaryExpression
                                BinaryExpression
                                  Identifier: 'pos'
                                  PlusToken
                                  NumericLiteral
                                LessThanToken
                                Identifier: ' end'
                              AmpersandAmpersandToken
                              CallExpression
                                Identifier: ' isWhiteSpaceLike'
                                CallExpression
                                  Identifier: 'charCodeUnchecked'
                                  BinaryExpression
                                    Identifier: 'pos'
                                    PlusToken
                                    NumericLiteral
                      Block
                        BreakStatement
          IfStatement
            BinaryExpression
              Identifier: 'pos'
              EqualsEqualsEqualsToken
              Identifier: ' tokenStart'
            Block
              ReturnStatement
                CallExpression
                  Identifier: ' scanJsDocToken'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        tokenValue'
              EqualsToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' text'
                  Identifier: 'substring'
                Identifier: 'tokenStart'
                Identifier: ' pos'
          ReturnStatement
            BinaryExpression
              Identifier: ' token'
              EqualsToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'JSDocCommentTextToken'
      FunctionDeclaration
        Identifier: ' scanJsDocToken'
        TypeReference
          Identifier: ' JSDocSyntaxKind'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        fullStartPos'
              EqualsToken
              BinaryExpression
                Identifier: ' tokenStart'
                EqualsToken
                Identifier: ' pos'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        tokenFlags'
              EqualsToken
              PropertyAccessExpression
                Identifier: ' TokenFlags'
                Identifier: 'None'
          IfStatement
            BinaryExpression
              Identifier: 'pos'
              GreaterThanEqualsToken
              Identifier: ' end'
            Block
              ReturnStatement
                BinaryExpression
                  Identifier: ' token'
                  EqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'EndOfFileToken'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' ch'
                CallExpression
                  Identifier: ' codePointUnchecked'
                  Identifier: 'pos'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        pos'
              PlusEqualsToken
              CallExpression
                Identifier: ' charSize'
                Identifier: 'ch'
          SwitchStatement
            Identifier: 'ch'
            CaseBlock
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'tab'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'verticalTab'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'formFeed'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'space'
                WhileStatement
                  BinaryExpression
                    BinaryExpression
                      Identifier: 'pos'
                      LessThanToken
                      Identifier: ' end'
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: ' isWhiteSpaceSingleLine'
                      CallExpression
                        Identifier: 'charCodeUnchecked'
                        Identifier: 'pos'
                  Block
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
                ReturnStatement
                  BinaryExpression
                    Identifier: ' token'
                    EqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'WhitespaceTrivia'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'at'
                ReturnStatement
                  BinaryExpression
                    Identifier: ' token'
                    EqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'AtToken'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'carriageReturn'
                IfStatement
                  BinaryExpression
                    CallExpression
                      Identifier: 'charCodeUnchecked'
                      Identifier: 'pos'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'lineFeed'
                  Block
                    ExpressionStatement
                      PostfixUnaryExpression
                        Identifier: '
                    pos'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'lineFeed'
                ExpressionStatement
                  BinaryExpression
                    Identifier: '
                tokenFlags'
                    BarEqualsToken
                    PropertyAccessExpression
                      Identifier: ' TokenFlags'
                      Identifier: 'PrecedingLineBreak'
                ReturnStatement
                  BinaryExpression
                    Identifier: ' token'
                    EqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'NewLineTrivia'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'asterisk'
                ReturnStatement
                  BinaryExpression
                    Identifier: ' token'
                    EqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'AsteriskToken'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'openBrace'
                ReturnStatement
                  BinaryExpression
                    Identifier: ' token'
                    EqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'OpenBraceToken'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'closeBrace'
                ReturnStatement
                  BinaryExpression
                    Identifier: ' token'
                    EqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'CloseBraceToken'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'openBracket'
                ReturnStatement
                  BinaryExpression
                    Identifier: ' token'
                    EqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'OpenBracketToken'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'closeBracket'
                ReturnStatement
                  BinaryExpression
                    Identifier: ' token'
                    EqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'CloseBracketToken'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'openParen'
                ReturnStatement
                  BinaryExpression
                    Identifier: ' token'
                    EqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'OpenParenToken'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'closeParen'
                ReturnStatement
                  BinaryExpression
                    Identifier: ' token'
                    EqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'CloseParenToken'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'lessThan'
                ReturnStatement
                  BinaryExpression
                    Identifier: ' token'
                    EqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'LessThanToken'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'greaterThan'
                ReturnStatement
                  BinaryExpression
                    Identifier: ' token'
                    EqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'GreaterThanToken'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'equals'
                ReturnStatement
                  BinaryExpression
                    Identifier: ' token'
                    EqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'EqualsToken'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'comma'
                ReturnStatement
                  BinaryExpression
                    Identifier: ' token'
                    EqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'CommaToken'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'dot'
                ReturnStatement
                  BinaryExpression
                    Identifier: ' token'
                    EqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'DotToken'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'backtick'
                ReturnStatement
                  BinaryExpression
                    Identifier: ' token'
                    EqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'BacktickToken'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'hash'
                ReturnStatement
                  BinaryExpression
                    Identifier: ' token'
                    EqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'HashToken'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' CharacterCodes'
                  Identifier: 'backslash'
                ExpressionStatement
                  PostfixUnaryExpression
                    Identifier: '
                pos'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' extendedCookedChar'
                      CallExpression
                        Identifier: ' peekExtendedUnicodeEscape'
                IfStatement
                  BinaryExpression
                    BinaryExpression
                      Identifier: 'extendedCookedChar'
                      GreaterThanEqualsToken
                      NumericLiteral
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: ' isIdentifierStart'
                      Identifier: 'extendedCookedChar'
                      Identifier: ' languageVersion'
                  Block
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    tokenValue'
                        EqualsToken
                        BinaryExpression
                          CallExpression
                            Identifier: ' scanExtendedUnicodeEscape'
                            TrueKeyword
                          PlusToken
                          CallExpression
                            Identifier: ' scanIdentifierParts'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        CallExpression
                          Identifier: ' getIdentifierToken'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' cookedChar'
                      CallExpression
                        Identifier: ' peekUnicodeEscape'
                IfStatement
                  BinaryExpression
                    BinaryExpression
                      Identifier: 'cookedChar'
                      GreaterThanEqualsToken
                      NumericLiteral
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: ' isIdentifierStart'
                      Identifier: 'cookedChar'
                      Identifier: ' languageVersion'
                  Block
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    pos'
                        PlusEqualsToken
                        NumericLiteral
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    tokenFlags'
                        BarEqualsToken
                        PropertyAccessExpression
                          Identifier: ' TokenFlags'
                          Identifier: 'UnicodeEscape'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    tokenValue'
                        EqualsToken
                        BinaryExpression
                          CallExpression
                            PropertyAccessExpression
                              Identifier: ' String'
                              Identifier: 'fromCharCode'
                            Identifier: 'cookedChar'
                          PlusToken
                          CallExpression
                            Identifier: ' scanIdentifierParts'
                    ReturnStatement
                      BinaryExpression
                        Identifier: ' token'
                        EqualsToken
                        CallExpression
                          Identifier: ' getIdentifierToken'
                ExpressionStatement
                  PostfixUnaryExpression
                    Identifier: '
                pos'
                ReturnStatement
                  BinaryExpression
                    Identifier: ' token'
                    EqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'Unknown'
          IfStatement
            CallExpression
              Identifier: 'isIdentifierStart'
              Identifier: 'ch'
              Identifier: ' languageVersion'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' char'
                    Identifier: ' ch'
              WhileStatement
                BinaryExpression
                  BinaryExpression
                    BinaryExpression
                      Identifier: 'pos'
                      LessThanToken
                      Identifier: ' end'
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: ' isIdentifierPart'
                      BinaryExpression
                        Identifier: 'char'
                        EqualsToken
                        CallExpression
                          Identifier: ' codePointUnchecked'
                          Identifier: 'pos'
                      Identifier: ' languageVersion'
                  BarBarToken
                  BinaryExpression
                    Identifier: ' char'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' CharacterCodes'
                      Identifier: 'minus'
                ExpressionStatement
                  BinaryExpression
                    Identifier: ' pos'
                    PlusEqualsToken
                    CallExpression
                      Identifier: ' charSize'
                      Identifier: 'char'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            tokenValue'
                  EqualsToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' text'
                      Identifier: 'substring'
                    Identifier: 'tokenStart'
                    Identifier: ' pos'
              IfStatement
                BinaryExpression
                  Identifier: 'char'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'backslash'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                tokenValue'
                      PlusEqualsToken
                      CallExpression
                        Identifier: ' scanIdentifierParts'
              ReturnStatement
                BinaryExpression
                  Identifier: ' token'
                  EqualsToken
                  CallExpression
                    Identifier: ' getIdentifierToken'
            Block
              ReturnStatement
                BinaryExpression
                  Identifier: ' token'
                  EqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'Unknown'
      FunctionDeclaration
        Identifier: ' speculationHelper'
        TypeParameter
          Identifier: 'T'
        Parameter
          Identifier: 'callback'
          FunctionType
            TypeReference
              Identifier: ' T'
        Parameter
          Identifier: ' isLookahead'
          BooleanKeyword
        TypeReference
          Identifier: ' T'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' savePos'
                Identifier: ' pos'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveStartPos'
                Identifier: ' fullStartPos'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveTokenPos'
                Identifier: ' tokenStart'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveToken'
                Identifier: ' token'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveTokenValue'
                Identifier: ' tokenValue'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveTokenFlags'
                Identifier: ' tokenFlags'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' result'
                CallExpression
                  Identifier: ' callback'
          IfStatement
            BinaryExpression
              PrefixUnaryExpression
                Identifier: 'result'
              BarBarToken
              Identifier: ' isLookahead'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            pos'
                  EqualsToken
                  Identifier: ' savePos'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            fullStartPos'
                  EqualsToken
                  Identifier: ' saveStartPos'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            tokenStart'
                  EqualsToken
                  Identifier: ' saveTokenPos'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            token'
                  EqualsToken
                  Identifier: ' saveToken'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            tokenValue'
                  EqualsToken
                  Identifier: ' saveTokenValue'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            tokenFlags'
                  EqualsToken
                  Identifier: ' saveTokenFlags'
          ReturnStatement
            Identifier: ' result'
      FunctionDeclaration
        Identifier: ' scanRange'
        TypeParameter
          Identifier: 'T'
        Parameter
          Identifier: 'start'
          NumberKeyword
        Parameter
          Identifier: ' length'
          NumberKeyword
        Parameter
          Identifier: ' callback'
          FunctionType
            TypeReference
              Identifier: ' T'
        TypeReference
          Identifier: ' T'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveEnd'
                Identifier: ' end'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' savePos'
                Identifier: ' pos'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveStartPos'
                Identifier: ' fullStartPos'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveTokenPos'
                Identifier: ' tokenStart'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveToken'
                Identifier: ' token'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveTokenValue'
                Identifier: ' tokenValue'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveTokenFlags'
                Identifier: ' tokenFlags'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' saveErrorExpectations'
                Identifier: ' commentDirectives'
          ExpressionStatement
            CallExpression
              Identifier: '

        setText'
              Identifier: 'text'
              Identifier: ' start'
              Identifier: ' length'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' result'
                CallExpression
                  Identifier: ' callback'
          ExpressionStatement
            BinaryExpression
              Identifier: '

        end'
              EqualsToken
              Identifier: ' saveEnd'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        pos'
              EqualsToken
              Identifier: ' savePos'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        fullStartPos'
              EqualsToken
              Identifier: ' saveStartPos'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        tokenStart'
              EqualsToken
              Identifier: ' saveTokenPos'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        token'
              EqualsToken
              Identifier: ' saveToken'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        tokenValue'
              EqualsToken
              Identifier: ' saveTokenValue'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        tokenFlags'
              EqualsToken
              Identifier: ' saveTokenFlags'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        commentDirectives'
              EqualsToken
              Identifier: ' saveErrorExpectations'
          ReturnStatement
            Identifier: ' result'
      FunctionDeclaration
        Identifier: ' lookAhead'
        TypeParameter
          Identifier: 'T'
        Parameter
          Identifier: 'callback'
          FunctionType
            TypeReference
              Identifier: ' T'
        TypeReference
          Identifier: ' T'
        Block
          ReturnStatement
            CallExpression
              Identifier: ' speculationHelper'
              Identifier: 'callback'
              TrueKeyword
      FunctionDeclaration
        Identifier: ' tryScan'
        TypeParameter
          Identifier: 'T'
        Parameter
          Identifier: 'callback'
          FunctionType
            TypeReference
              Identifier: ' T'
        TypeReference
          Identifier: ' T'
        Block
          ReturnStatement
            CallExpression
              Identifier: ' speculationHelper'
              Identifier: 'callback'
              FalseKeyword
      FunctionDeclaration
        Identifier: ' getText'
        StringKeyword
        Block
          ReturnStatement
            Identifier: ' text'
      FunctionDeclaration
        Identifier: ' clearCommentDirectives'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        commentDirectives'
              EqualsToken
              Identifier: ' undefined'
      FunctionDeclaration
        Identifier: ' setText'
        Parameter
          Identifier: 'newText'
          UnionType
            StringKeyword
            UndefinedKeyword
        Parameter
          Identifier: ' start'
          UnionType
            NumberKeyword
            UndefinedKeyword
        Parameter
          Identifier: ' length'
          UnionType
            NumberKeyword
            UndefinedKeyword
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        text'
              EqualsToken
              BinaryExpression
                Identifier: ' newText'
                BarBarToken
                StringLiteral
          ExpressionStatement
            BinaryExpression
              Identifier: '
        end'
              EqualsToken
              ConditionalExpression
                BinaryExpression
                  Identifier: ' length'
                  EqualsEqualsEqualsToken
                  Identifier: ' undefined'
                QuestionToken
                PropertyAccessExpression
                  Identifier: ' text'
                  Identifier: 'length'
                ColonToken
                BinaryExpression
                  NonNullExpression
                    Identifier: ' start'
                  PlusToken
                  Identifier: ' length'
          ExpressionStatement
            CallExpression
              Identifier: '
        resetTokenState'
              BinaryExpression
                Identifier: 'start'
                BarBarToken
                NumericLiteral
      FunctionDeclaration
        Identifier: ' setOnError'
        Parameter
          Identifier: 'errorCallback'
          UnionType
            TypeReference
              Identifier: ' ErrorCallback'
            UndefinedKeyword
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        onError'
              EqualsToken
              Identifier: ' errorCallback'
      FunctionDeclaration
        Identifier: ' setScriptTarget'
        Parameter
          Identifier: 'scriptTarget'
          TypeReference
            Identifier: ' ScriptTarget'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        languageVersion'
              EqualsToken
              Identifier: ' scriptTarget'
      FunctionDeclaration
        Identifier: ' setLanguageVariant'
        Parameter
          Identifier: 'variant'
          TypeReference
            Identifier: ' LanguageVariant'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        languageVariant'
              EqualsToken
              Identifier: ' variant'
      FunctionDeclaration
        Identifier: ' setScriptKind'
        Parameter
          Identifier: 'kind'
          TypeReference
            Identifier: ' ScriptKind'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        scriptKind'
              EqualsToken
              Identifier: ' kind'
      FunctionDeclaration
        Identifier: ' setJSDocParsingMode'
        Parameter
          Identifier: 'kind'
          TypeReference
            Identifier: ' JSDocParsingMode'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        jsDocParsingMode'
              EqualsToken
              Identifier: ' kind'
      FunctionDeclaration
        Identifier: ' resetTokenState'
        Parameter
          Identifier: 'position'
          NumberKeyword
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        Debug'
                Identifier: 'assert'
              BinaryExpression
                Identifier: 'position'
                GreaterThanEqualsToken
                NumericLiteral
          ExpressionStatement
            BinaryExpression
              Identifier: '
        pos'
              EqualsToken
              Identifier: ' position'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        fullStartPos'
              EqualsToken
              Identifier: ' position'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        tokenStart'
              EqualsToken
              Identifier: ' position'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        token'
              EqualsToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'Unknown'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        tokenValue'
              EqualsToken
              NonNullExpression
                Identifier: ' undefined'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        tokenFlags'
              EqualsToken
              PropertyAccessExpression
                Identifier: ' TokenFlags'
                Identifier: 'None'
      FunctionDeclaration
        Identifier: ' setSkipJsDocLeadingAsterisks'
        Parameter
          Identifier: 'skip'
          BooleanKeyword
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        skipJsDocLeadingAsterisks'
              PlusEqualsToken
              ConditionalExpression
                Identifier: ' skip'
                QuestionToken
                NumericLiteral
                ColonToken
                PrefixUnaryExpression
                  NumericLiteral
  FunctionDeclaration
    Identifier: ' codePointAt'
    Parameter
      Identifier: 's'
      StringKeyword
    Parameter
      Identifier: ' i'
      NumberKeyword
    NumberKeyword
    Block
      ReturnStatement
        NonNullExpression
          CallExpression
            PropertyAccessExpression
              Identifier: ' s'
              Identifier: 'codePointAt'
            Identifier: 'i'
  FunctionDeclaration
    Identifier: ' charSize'
    Parameter
      Identifier: 'ch'
      NumberKeyword
    Block
      IfStatement
        BinaryExpression
          Identifier: 'ch'
          GreaterThanEqualsToken
          NumericLiteral
        Block
          ReturnStatement
            NumericLiteral
      IfStatement
        BinaryExpression
          Identifier: 'ch'
          EqualsEqualsEqualsToken
          PropertyAccessExpression
            Identifier: ' CharacterCodes'
            Identifier: 'EOF'
        Block
          ReturnStatement
            NumericLiteral
      ReturnStatement
        NumericLiteral
  FunctionDeclaration
    Identifier: ' utf16EncodeAsStringFallback'
    Parameter
      Identifier: 'codePoint'
      NumberKeyword
    Block
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            Identifier: '
    Debug'
            Identifier: 'assert'
          BinaryExpression
            BinaryExpression
              NumericLiteral
              LessThanEqualsToken
              Identifier: ' codePoint'
            AmpersandAmpersandToken
            BinaryExpression
              Identifier: ' codePoint'
              LessThanEqualsToken
              NumericLiteral
      IfStatement
        BinaryExpression
          Identifier: 'codePoint'
          LessThanEqualsToken
          NumericLiteral
        Block
          ReturnStatement
            CallExpression
              PropertyAccessExpression
                Identifier: ' String'
                Identifier: 'fromCharCode'
              Identifier: 'codePoint'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' codeUnit1'
            BinaryExpression
              CallExpression
                PropertyAccessExpression
                  Identifier: ' Math'
                  Identifier: 'floor'
                BinaryExpression
                  ParenthesizedExpression
                    BinaryExpression
                      Identifier: 'codePoint'
                      MinusToken
                      NumericLiteral
                  SlashToken
                  NumericLiteral
              PlusToken
              NumericLiteral
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' codeUnit2'
            BinaryExpression
              ParenthesizedExpression
                BinaryExpression
                  ParenthesizedExpression
                    BinaryExpression
                      Identifier: 'codePoint'
                      MinusToken
                      NumericLiteral
                  PercentToken
                  NumericLiteral
              PlusToken
              NumericLiteral
      ReturnStatement
        CallExpression
          PropertyAccessExpression
            Identifier: ' String'
            Identifier: 'fromCharCode'
          Identifier: 'codeUnit1'
          Identifier: ' codeUnit2'
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' utf16EncodeAsStringWorker'
        FunctionType
          Parameter
            Identifier: 'codePoint'
            NumberKeyword
          StringKeyword
        ConditionalExpression
          PropertyAccessExpression
            ParenthesizedExpression
              AsExpression
                Identifier: 'String'
                AnyKeyword
            Identifier: 'fromCodePoint'
          QuestionToken
          ArrowFunction
            Parameter
              Identifier: ' codePoint'
            EqualsGreaterThanToken
            CallExpression
              PropertyAccessExpression
                ParenthesizedExpression
                  AsExpression
                    Identifier: 'String'
                    AnyKeyword
                Identifier: 'fromCodePoint'
              Identifier: 'codePoint'
          ColonToken
          Identifier: ' utf16EncodeAsStringFallback'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' utf16EncodeAsString'
    Parameter
      Identifier: 'codePoint'
      NumberKeyword
    StringKeyword
    Block
      ReturnStatement
        CallExpression
          Identifier: ' utf16EncodeAsStringWorker'
          Identifier: 'codePoint'
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' nonBinaryUnicodeProperties'
        NewExpression
          Identifier: ' Map'
          CallExpression
            PropertyAccessExpression
              Identifier: 'Object'
              Identifier: 'entries'
            AsExpression
              ObjectLiteralExpression
                PropertyAssignment
                  Identifier: '
    General_Category'
                  StringLiteral
                PropertyAssignment
                  Identifier: '
    gc'
                  StringLiteral
                PropertyAssignment
                  Identifier: '
    Script'
                  StringLiteral
                PropertyAssignment
                  Identifier: '
    sc'
                  StringLiteral
                PropertyAssignment
                  Identifier: '
    Script_Extensions'
                  StringLiteral
                PropertyAssignment
                  Identifier: '
    scx'
                  StringLiteral
              TypeReference
                Identifier: ' const'
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' binaryUnicodeProperties'
        NewExpression
          Identifier: ' Set'
          ArrayLiteralExpression
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' binaryUnicodePropertiesOfStrings'
        NewExpression
          Identifier: ' Set'
          ArrayLiteralExpression
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
            StringLiteral
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' valuesOfNonBinaryUnicodeProperties'
        ObjectLiteralExpression
          PropertyAssignment
            Identifier: '
    General_Category'
            NewExpression
              Identifier: ' Set'
              ArrayLiteralExpression
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
          PropertyAssignment
            Identifier: '
    Script'
            NewExpression
              Identifier: ' Set'
              ArrayLiteralExpression
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
                StringLiteral
          PropertyAssignment
            Identifier: '
    Script_Extensions'
            AsExpression
              NonNullExpression
                Identifier: ' undefined'
              TypeReference
                Identifier: ' Set'
                StringKeyword
  ExpressionStatement
    BinaryExpression
      PropertyAccessExpression
        Identifier: '
// The Script_Extensions property of a character contains one or more Script values. See https://www.unicode.org/reports/tr24/#Script_Extensions
// Here since each Unicode property value expression only allows a single value, its values can be considered the same as those of the Script property.
valuesOfNonBinaryUnicodeProperties'
        Identifier: 'Script_Extensions'
      EqualsToken
      PropertyAccessExpression
        Identifier: ' valuesOfNonBinaryUnicodeProperties'
        Identifier: 'Script'
