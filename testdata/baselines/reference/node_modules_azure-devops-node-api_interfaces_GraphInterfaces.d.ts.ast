SourceFile
  ImportEqualsDeclaration
    Identifier: ' IdentitiesInterfaces'
    ExternalModuleReference
      StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' AadGraphMember'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GraphMember'
    PropertySignature
      Identifier: '
    /**
     * The short, generally unique name for the user in the backing directory. For AAD users, this corresponds to the mail nickname, which is often but not necessarily similar to the part of the user's mail address before the @ sign. For GitHub users, this corresponds to the GitHub user handle.
     */
    directoryAlias'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * When true, the group has been deleted in the identity provider
     */
    isDeletedInOrigin'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    metadataUpdateDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * The meta type of the user in the origin, such as "member", "guest", etc. See UserMetaType for the set of possible values.
     */
    metaType'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphCachePolicies'
    PropertySignature
      Identifier: '
    /**
     * Size of the cache
     */
    cacheSize'
      QuestionToken
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphDescriptorResult'
    PropertySignature
      Identifier: '
    /**
     * This field contains zero or more interesting links about the graph descriptor. These links may be invoked to obtain additional relationships or more detailed information about this graph descriptor.
     */
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    value'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphFederatedProviderData'
    PropertySignature
      Identifier: '
    /**
     * The access token that can be used to communicated with the federated provider on behalf on the target identity, if we were able to successfully acquire one, otherwise <code>null</code>, if we were not.
     */
    accessToken'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The name of the federated provider, e.g. "github.com".
     */
    providerName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The descriptor of the graph subject to which this federated provider data corresponds.
     */
    subjectDescriptor'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The version number of this federated provider data, which corresponds to when it was last updated. Can be used to prevent returning stale provider data from the cache when the caller is aware of a newer version, such as to prevent local cache poisoning from a remote cache or store. This is the app layer equivalent of the data layer sequence ID.
     */
    version'
      QuestionToken
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphGlobalExtendedPropertyBatch'
    PropertySignature
      Identifier: '
    propertyNameFilters'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    subjectDescriptors'
      QuestionToken
      ArrayType
        StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphGroup'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GraphMember'
    PropertySignature
      Identifier: '
    /**
     * A short phrase to help human readers disambiguate groups with similar names
     */
    description'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    isCrossProject'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    isDeleted'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    isGlobalScope'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    isRestrictedVisible'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    localScopeId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    scopeId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    scopeName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    scopeType'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    securingHostId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    specialType'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphGroupCreationContext'
    PropertySignature
      Identifier: '
    /**
     * Optional: If provided, we will use this identifier for the storage key of the created group
     */
    storageKey'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphGroupMailAddressCreationContext'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GraphGroupCreationContext'
    PropertySignature
      Identifier: '
    /**
     * This should be the mail address or the group in the source AD or AAD provider. Example: jamal@contoso.com Team Services will communicate with the source provider to fill all other fields on creation.
     */
    mailAddress'
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphGroupOriginIdCreationContext'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GraphGroupCreationContext'
    PropertySignature
      Identifier: '
    /**
     * This should be the object id or sid of the group from the source AD or AAD provider. Example: d47d025a-ce2f-4a79-8618-e8862ade30dd Team Services will communicate with the source provider to fill all other fields on creation.
     */
    originId'
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphGroupVstsCreationContext'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GraphGroupCreationContext'
    PropertySignature
      Identifier: '
    /**
     * For internal use only in back compat scenarios.
     */
    crossProject'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Used by VSTS groups; if set this will be the group description, otherwise ignored
     */
    description'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    descriptor'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Used by VSTS groups; if set this will be the group DisplayName, otherwise ignored
     */
    displayName'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * For internal use only in back compat scenarios.
     */
    restrictedVisibility'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * For internal use only in back compat scenarios.
     */
    specialGroupType'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphMember'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GraphSubject'
    PropertySignature
      Identifier: '
    /**
     * This represents the name of the container of origin for a graph member. (For MSA this is "Windows Live ID", for AD the name of the domain, for AAD the tenantID of the directory, for VSTS groups the ScopeId, etc)
     */
    domain'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The email address of record for a given graph member. This may be different than the principal name.
     */
    mailAddress'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * This is the PrincipalName of this graph member from the source provider. The source provider may change this field over time and it is not guaranteed to be immutable for the life of the graph member by VSTS.
     */
    principalName'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphMembership'
    PropertySignature
      Identifier: '
    /**
     * This field contains zero or more interesting links about the graph membership. These links may be invoked to obtain additional relationships or more detailed information about this graph membership.
     */
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    containerDescriptor'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    memberDescriptor'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphMembershipState'
    PropertySignature
      Identifier: '
    /**
     * This field contains zero or more interesting links about the graph membership state. These links may be invoked to obtain additional relationships or more detailed information about this graph membership state.
     */
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * When true, the membership is active
     */
    active'
      QuestionToken
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphMembershipTraversal'
    PropertySignature
      Identifier: '
    /**
     * Reason why the subject could not be traversed completely
     */
    incompletenessReason'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * When true, the subject is traversed completely
     */
    isComplete'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * The traversed subject descriptor
     */
    subjectDescriptor'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Subject descriptor ids of the traversed members
     */
    traversedSubjectIds'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Subject descriptors of the traversed members
     */
    traversedSubjects'
      QuestionToken
      ArrayType
        StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphProviderInfo'
    PropertySignature
      Identifier: '
    /**
     * The descriptor is the primary way to reference the graph subject while the system is running. This field will uniquely identify the same graph subject across both Accounts and Organizations.
     */
    descriptor'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * This represents the name of the container of origin for a graph member. (For MSA this is "Windows Live ID", for AAD the tenantID of the directory.)
     */
    domain'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The type of source provider for the origin identifier (ex: "aad", "msa")
     */
    origin'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The unique identifier from the system of origin. (For MSA this is the PUID in hex notation, for AAD this is the object id.)
     */
    originId'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphScope'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GraphSubject'
    PropertySignature
      Identifier: '
    /**
     * The subject descriptor that references the administrators group for this scope. Only members of this group can change the contents of this scope or assign other users permissions to access this scope.
     */
    administratorDescriptor'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * When true, this scope is also a securing host for one or more scopes.
     */
    isGlobal'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * The subject descriptor for the closest account or organization in the ancestor tree of this scope.
     */
    parentDescriptor'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The type of this scope. Typically ServiceHost or TeamProject.
     */
    scopeType'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' IdentitiesInterfaces'
          Identifier: 'GroupScopeType'
    PropertySignature
      Identifier: '
    /**
     * The subject descriptor for the containing organization in the ancestor tree of this scope.
     */
    securingHostDescriptor'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphScopeCreationContext'
    PropertySignature
      Identifier: '
    /**
     * Set this field to override the default description of this scope's admin group.
     */
    adminGroupDescription'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * All scopes have an Administrator Group that controls access to the contents of the scope. Set this field to use a non-default group name for that administrators group.
     */
    adminGroupName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Set this optional field if this scope is created on behalf of a user other than the user making the request. This should be the Id of the user that is not the requester.
     */
    creatorId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The scope must be provided with a unique name within the parent scope. This means the created scope can have a parent or child with the same name, but no siblings with the same name.
     */
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The type of scope being created.
     */
    scopeType'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' IdentitiesInterfaces'
          Identifier: 'GroupScopeType'
    PropertySignature
      Identifier: '
    /**
     * An optional ID that uniquely represents the scope within it's parent scope. If this parameter is not provided, Vsts will generate on automatically.
     */
    storageKey'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphServicePrincipal'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' AadGraphMember'
    PropertySignature
      Identifier: '
    applicationId'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphServicePrincipalCreationContext'
    PropertySignature
      Identifier: '
    /**
     * Optional: If provided, we will use this identifier for the storage key of the created service principal
     */
    storageKey'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphServicePrincipalOriginIdCreationContext'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GraphServicePrincipalCreationContext'
    PropertySignature
      Identifier: '
    /**
     * This should be the object id of the service principal from the AAD provider. Example: d47d025a-ce2f-4a79-8618-e8862ade30dd Team Services will communicate with the source provider to fill all other fields on creation.
     */
    originId'
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphServicePrincipalOriginIdUpdateContext'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GraphServicePrincipalUpdateContext'
    PropertySignature
      Identifier: '
    /**
     * This should be the object id or sid of the service principal from the source AAD provider. Example: d47d025a-ce2f-4a79-8618-e8862ade30dd Azure Devops will communicate with the source provider to fill all other fields on creation.
     */
    originId'
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphServicePrincipalUpdateContext'
    PropertySignature
      Identifier: '
    /**
     * Storage key should not be specified in case of updating service principal
     */
    storageKey'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphStorageKeyResult'
    PropertySignature
      Identifier: '
    /**
     * This field contains zero or more interesting links about the graph storage key. These links may be invoked to obtain additional relationships or more detailed information about this graph storage key.
     */
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    value'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphSubject'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GraphSubjectBase'
    PropertySignature
      Identifier: '
    /**
     * [Internal Use Only] The legacy descriptor is here in case you need to access old version IMS using identity descriptor.
     */
    legacyDescriptor'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The type of source provider for the origin identifier (ex:AD, AAD, MSA)
     */
    origin'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The unique identifier from the system of origin. Typically a sid, object id or Guid. Linking and unlinking operations can cause this value to change for a user because the user is not backed by a different provider and has a different unique id in the new provider.
     */
    originId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * This field identifies the type of the graph subject (ex: Group, Scope, User).
     */
    subjectKind'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphSubjectBase'
    PropertySignature
      Identifier: '
    /**
     * This field contains zero or more interesting links about the graph subject. These links may be invoked to obtain additional relationships or more detailed information about this graph subject.
     */
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * The descriptor is the primary way to reference the graph subject while the system is running. This field will uniquely identify the same graph subject across both Accounts and Organizations.
     */
    descriptor'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * This is the non-unique display name of the graph subject. To change this field, you must alter its value in the source provider.
     */
    displayName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * This url is the full route to the source resource of this graph subject.
     */
    url'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphSubjectLookup'
    PropertySignature
      Identifier: '
    lookupKeys'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' GraphSubjectLookupKey'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphSubjectLookupKey'
    PropertySignature
      Identifier: '
    descriptor'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphSubjectQuery'
    PropertySignature
      Identifier: '
    /**
     * Search term to search for Azure Devops users or/and groups
     */
    query'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Optional parameter. Specify a non-default scope (collection, project) to search for users or groups within the scope.
     */
    scopeDescriptor'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * "User" or "Group" can be specified, both or either
     */
    subjectKind'
      QuestionToken
      ArrayType
        StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphSystemSubject'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GraphSubject'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' GraphTraversalDirection'
    EnumMember
      Identifier: '
    Unknown'
      NumericLiteral
    EnumMember
      Identifier: '
    Down'
      NumericLiteral
    EnumMember
      Identifier: '
    Up'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphUser'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' AadGraphMember'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphUserCreationContext'
    PropertySignature
      Identifier: '
    /**
     * Optional: If provided, we will use this identifier for the storage key of the created user
     */
    storageKey'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphUserMailAddressCreationContext'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GraphUserCreationContext'
    PropertySignature
      Identifier: '
    /**
     * This should be the mail address of the user in the source AD or AAD provider. Example: Jamal.Hartnett@contoso.com Team Services will communicate with the source provider to fill all other fields on creation.
     */
    mailAddress'
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphUserOriginIdCreationContext'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GraphUserCreationContext'
    PropertySignature
      Identifier: '
    /**
     * This should be the name of the origin provider. Example: github.com
     */
    origin'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * This should be the object id or sid of the user from the source AD or AAD provider. Example: d47d025a-ce2f-4a79-8618-e8862ade30dd Team Services will communicate with the source provider to fill all other fields on creation.
     */
    originId'
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphUserOriginIdUpdateContext'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GraphUserUpdateContext'
    PropertySignature
      Identifier: '
    /**
     * This should be the object id or sid of the user from the source AD or AAD provider. Example: d47d025a-ce2f-4a79-8618-e8862ade30dd Azure Devops will communicate with the source provider to fill all other fields on creation.
     */
    originId'
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphUserPrincipalNameCreationContext'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GraphUserCreationContext'
    PropertySignature
      Identifier: '
    /**
     * This should be the principal name or upn of the user in the source AD or AAD provider. Example: jamal@contoso.com Team Services will communicate with the source provider to fill all other fields on creation.
     */
    principalName'
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphUserPrincipalNameUpdateContext'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GraphUserUpdateContext'
    PropertySignature
      Identifier: '
    /**
     * This should be Principal Name (UPN) to which we want to transfer rights. Example: destination@email.com
     */
    principalName'
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GraphUserUpdateContext'
    PropertySignature
      Identifier: '
    /**
     * Storage key should not be specified in case of updating user
     */
    storageKey'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' IdentityMapping'
    PropertySignature
      Identifier: '
    source'
      QuestionToken
      TypeReference
        Identifier: ' UserPrincipalName'
    PropertySignature
      Identifier: '
    target'
      QuestionToken
      TypeReference
        Identifier: ' UserPrincipalName'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' IdentityMappings'
    PropertySignature
      Identifier: '
    mappings'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' IdentityMapping'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' MappingResult'
    PropertySignature
      Identifier: '
    code'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    errorMessage'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' PagedGraphGroups'
    PropertySignature
      Identifier: '
    /**
     * This will be non-null if there is another page of data. There will never be more than one continuation token returned by a request.
     */
    continuationToken'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The enumerable list of groups found within a page.
     */
    graphGroups'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' GraphGroup'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' PagedGraphMembers'
    PropertySignature
      Identifier: '
    /**
     * This will be non-null if there is another page of data. There will never be more than one continuation token returned by a request.
     */
    continuationToken'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The enumerable list of members found within a page.
     */
    graphMembers'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' GraphMember'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' PagedGraphServicePrincipals'
    PropertySignature
      Identifier: '
    /**
     * This will be non-null if there is another page of data. There will never be more than one continuation token returned by a request.
     */
    continuationToken'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The enumerable list of service principals found within a page.
     */
    graphServicePrincipals'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' GraphServicePrincipal'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' PagedGraphUsers'
    PropertySignature
      Identifier: '
    /**
     * This will be non-null if there is another page of data. There will never be more than one continuation token returned by a request.
     */
    continuationToken'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The enumerable set of users found within a page.
     */
    graphUsers'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' GraphUser'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' RequestAccessPayLoad'
    PropertySignature
      Identifier: '
    message'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    projectUri'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    urlRequested'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ResolveDisconnectedUsersResponse'
    PropertySignature
      Identifier: '
    code'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    errorMessage'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    mappingResults'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' MappingResult'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' UserPrincipalName'
    PropertySignature
      Identifier: '
    principalName'
      QuestionToken
      StringKeyword
  VariableStatement
    ExportKeyword
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' TypeInfo'
        TypeLiteral
          PropertySignature
            Identifier: '
    AadGraphMember'
            AnyKeyword
          PropertySignature
            Identifier: '
    GraphScope'
            AnyKeyword
          PropertySignature
            Identifier: '
    GraphScopeCreationContext'
            AnyKeyword
          PropertySignature
            Identifier: '
    GraphServicePrincipal'
            AnyKeyword
          PropertySignature
            Identifier: '
    GraphTraversalDirection'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            unknown'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            down'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            up'
                    NumberKeyword
          PropertySignature
            Identifier: '
    GraphUser'
            AnyKeyword
          PropertySignature
            Identifier: '
    PagedGraphServicePrincipals'
            AnyKeyword
          PropertySignature
            Identifier: '
    PagedGraphUsers'
            AnyKeyword
