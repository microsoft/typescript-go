SourceFile
  ImportDeclaration
    ImportClause
      NamespaceImport
        Identifier: ' ts'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' testExtractSymbol'
    StringLiteral
  ExpressionStatement
    CallExpression
      Identifier: '

describe'
      StringLiteral
      ArrowFunction
        EqualsGreaterThanToken
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
    // The "b" type parameters aren't used and shouldn't be passed to the extracted function.
    // Type parameters should be in syntactic order (i.e. in order or character offset from BOF).
    // In all cases, we could use type inference, rather than passing explicit type arguments.
    // Note the inclusion of arrow functions to ensure that some type parameters are not from
    //   targetable scopes.
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
    // This test is descriptive, rather than normative.  The current implementation
    // doesn't handle type parameter shadowing.
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
    // Confirm that the constraint is preserved.
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
    // Confirm that the contextual type of an extracted expression counts as a use.
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
    // Class type parameter
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
    // Function type parameter
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
    // Coupled constraints
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '

    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
    // Write + void return
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
    // Return in finally block
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
    // Extraction position - namespace
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
    // Extraction position - function
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
    // Extraction position - file
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
    // Extraction position - class without ctor
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
    // Extraction position - class with ctor in middle
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
    // Extraction position - class with ctor at end
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
    // Shorthand property names
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
    // Type parameter as declared type
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
    // Return in nested function
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
    // Return in nested class
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
    // Selection excludes leading trivia of declaration
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
    // Arrow function
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '

    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '

    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '

    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '

    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '

    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '

    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '

    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '

    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '

    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '

    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '

    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '

    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '

    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '

    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '

    // We propagate numericLiteralFlags, but it's not consumed by the emitter,
    // so everything comes out decimal.  It would be nice to improve this.
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '

    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '

    // We propagate numericLiteralFlags, but it's not consumed by the emitter,
    // so everything comes out decimal.  It would be nice to improve this.
    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '

    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '

    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '

    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '

    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '

    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '

    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '

    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '

    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '

    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '

    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              Identifier: '

    testExtractFunction'
              StringLiteral
              NoSubstitutionTemplateLiteral
  FunctionDeclaration
    Identifier: ' testExtractFunction'
    Parameter
      Identifier: 'caption'
      StringKeyword
    Parameter
      Identifier: ' text'
      StringKeyword
    Block
      ExpressionStatement
        CallExpression
          Identifier: '
    testExtractSymbol'
          Identifier: 'caption'
          Identifier: ' text'
          StringLiteral
          PropertyAccessExpression
            PropertyAccessExpression
              Identifier: ' ts'
              Identifier: 'Diagnostics'
            Identifier: 'Extract_function'
