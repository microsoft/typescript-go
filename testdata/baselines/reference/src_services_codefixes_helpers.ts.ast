SourceFile
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' ImportAdder'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: '
    AccessorDeclaration'
        ImportSpecifier
          Identifier: '
    append'
        ImportSpecifier
          Identifier: '
    arrayFrom'
        ImportSpecifier
          Identifier: '
    ArrowFunction'
        ImportSpecifier
          Identifier: '
    Block'
        ImportSpecifier
          Identifier: '
    CallExpression'
        ImportSpecifier
          Identifier: '
    CharacterCodes'
        ImportSpecifier
          Identifier: '
    CheckFlags'
        ImportSpecifier
          Identifier: '
    ClassLikeDeclaration'
        ImportSpecifier
          Identifier: '
    CodeFixContextBase'
        ImportSpecifier
          Identifier: '
    combine'
        ImportSpecifier
          Identifier: '
    Debug'
        ImportSpecifier
          Identifier: '
    Declaration'
        ImportSpecifier
          Identifier: '
    Diagnostics'
        ImportSpecifier
          Identifier: '
    emptyArray'
        ImportSpecifier
          Identifier: '
    EntityName'
        ImportSpecifier
          Identifier: '
    Expression'
        ImportSpecifier
          Identifier: '
    factory'
        ImportSpecifier
          Identifier: '
    find'
        ImportSpecifier
          Identifier: '
    firstOrUndefined'
        ImportSpecifier
          Identifier: '
    flatMap'
        ImportSpecifier
          Identifier: '
    FunctionDeclaration'
        ImportSpecifier
          Identifier: '
    FunctionExpression'
        ImportSpecifier
          Identifier: '
    GenericType'
        ImportSpecifier
          Identifier: '
    GetAccessorDeclaration'
        ImportSpecifier
          Identifier: '
    getAllAccessorDeclarations'
        ImportSpecifier
          Identifier: '
    getCheckFlags'
        ImportSpecifier
          Identifier: '
    getEffectiveModifierFlags'
        ImportSpecifier
          Identifier: '
    getEmitScriptTarget'
        ImportSpecifier
          Identifier: '
    getFirstIdentifier'
        ImportSpecifier
          Identifier: '
    getModuleSpecifierResolverHost'
        ImportSpecifier
          Identifier: '
    getNameForExportedSymbol'
        ImportSpecifier
          Identifier: '
    getNameOfDeclaration'
        ImportSpecifier
          Identifier: '
    getPropertyNameFromType'
        ImportSpecifier
          Identifier: '
    getQuotePreference'
        ImportSpecifier
          Identifier: '
    getSetAccessorValueParameter'
        ImportSpecifier
          Identifier: '
    getSynthesizedDeepClone'
        ImportSpecifier
          Identifier: '
    getTokenAtPosition'
        ImportSpecifier
          Identifier: '
    getTsConfigObjectLiteralExpression'
        ImportSpecifier
          Identifier: '
    hasAbstractModifier'
        ImportSpecifier
          Identifier: '
    Identifier'
        ImportSpecifier
          Identifier: '
    idText'
        ImportSpecifier
          Identifier: '
    InternalNodeBuilderFlags'
        ImportSpecifier
          Identifier: '
    IntersectionType'
        ImportSpecifier
          Identifier: '
    isArrowFunction'
        ImportSpecifier
          Identifier: '
    isAutoAccessorPropertyDeclaration'
        ImportSpecifier
          Identifier: '
    isFunctionDeclaration'
        ImportSpecifier
          Identifier: '
    isFunctionExpression'
        ImportSpecifier
          Identifier: '
    isGetAccessorDeclaration'
        ImportSpecifier
          Identifier: '
    isIdentifier'
        ImportSpecifier
          Identifier: '
    isImportTypeNode'
        ImportSpecifier
          Identifier: '
    isInJSFile'
        ImportSpecifier
          Identifier: '
    isLiteralImportTypeNode'
        ImportSpecifier
          Identifier: '
    isMethodDeclaration'
        ImportSpecifier
          Identifier: '
    isObjectLiteralExpression'
        ImportSpecifier
          Identifier: '
    isPropertyAccessExpression'
        ImportSpecifier
          Identifier: '
    isPropertyAssignment'
        ImportSpecifier
          Identifier: '
    isSetAccessorDeclaration'
        ImportSpecifier
          Identifier: '
    isStringLiteral'
        ImportSpecifier
          Identifier: '
    isTypeNode'
        ImportSpecifier
          Identifier: '
    isTypeReferenceNode'
        ImportSpecifier
          Identifier: '
    isTypeUsableAsPropertyName'
        ImportSpecifier
          Identifier: '
    isYieldExpression'
        ImportSpecifier
          Identifier: '
    LanguageServiceHost'
        ImportSpecifier
          Identifier: '
    length'
        ImportSpecifier
          Identifier: '
    map'
        ImportSpecifier
          Identifier: '
    MethodDeclaration'
        ImportSpecifier
          Identifier: '
    MethodSignature'
        ImportSpecifier
          Identifier: '
    Modifier'
        ImportSpecifier
          Identifier: '
    ModifierFlags'
        ImportSpecifier
          Identifier: '
    Node'
        ImportSpecifier
          Identifier: '
    NodeArray'
        ImportSpecifier
          Identifier: '
    NodeBuilderFlags'
        ImportSpecifier
          Identifier: '
    NodeFlags'
        ImportSpecifier
          Identifier: '
    ObjectFlags'
        ImportSpecifier
          Identifier: '
    ObjectLiteralExpression'
        ImportSpecifier
          Identifier: '
    ObjectType'
        ImportSpecifier
          Identifier: '
    ParameterDeclaration'
        ImportSpecifier
          Identifier: '
    PrivateIdentifier'
        ImportSpecifier
          Identifier: '
    Program'
        ImportSpecifier
          Identifier: '
    PropertyAssignment'
        ImportSpecifier
          Identifier: '
    PropertyDeclaration'
        ImportSpecifier
          Identifier: '
    PropertyName'
        ImportSpecifier
          Identifier: '
    QuotePreference'
        ImportSpecifier
          Identifier: '
    sameMap'
        ImportSpecifier
          Identifier: '
    ScriptTarget'
        ImportSpecifier
          Identifier: '
    SetAccessorDeclaration'
        ImportSpecifier
          Identifier: '
    setTextRange'
        ImportSpecifier
          Identifier: '
    Signature'
        ImportSpecifier
          Identifier: '
    SignatureDeclaration'
        ImportSpecifier
          Identifier: '
    signatureHasRestParameter'
        ImportSpecifier
          Identifier: '
    some'
        ImportSpecifier
          Identifier: '
    SourceFile'
        ImportSpecifier
          Identifier: '
    Symbol'
        ImportSpecifier
          Identifier: '
    SymbolFlags'
        ImportSpecifier
          Identifier: '
    SymbolTracker'
        ImportSpecifier
          Identifier: '
    SyntaxKind'
        ImportSpecifier
          Identifier: '
    textChanges'
        ImportSpecifier
          Identifier: '
    TextSpan'
        ImportSpecifier
          Identifier: '
    textSpanEnd'
        ImportSpecifier
          Identifier: '
    TransientSymbol'
        ImportSpecifier
          Identifier: '
    tryCast'
        ImportSpecifier
          Identifier: '
    TsConfigSourceFile'
        ImportSpecifier
          Identifier: '
    Type'
        ImportSpecifier
          Identifier: '
    TypeChecker'
        ImportSpecifier
          Identifier: '
    TypeFlags'
        ImportSpecifier
          Identifier: '
    TypeNode'
        ImportSpecifier
          Identifier: '
    TypeParameterDeclaration'
        ImportSpecifier
          Identifier: '
    TypePredicate'
        ImportSpecifier
          Identifier: '
    unescapeLeadingUnderscores'
        ImportSpecifier
          Identifier: '
    UnionType'
        ImportSpecifier
          Identifier: '
    UserPreferences'
        ImportSpecifier
          Identifier: '
    visitEachChild'
        ImportSpecifier
          Identifier: '
    visitNode'
        ImportSpecifier
          Identifier: '
    visitNodes'
    StringLiteral
  FunctionDeclaration
    ExportKeyword
    Identifier: ' createMissingMemberNodes'
    Parameter
      Identifier: '
    classDeclaration'
      TypeReference
        Identifier: ' ClassLikeDeclaration'
    Parameter
      Identifier: '
    possiblyMissingSymbols'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' Symbol'
    Parameter
      Identifier: '
    sourceFile'
      TypeReference
        Identifier: ' SourceFile'
    Parameter
      Identifier: '
    context'
      TypeReference
        Identifier: ' TypeConstructionContext'
    Parameter
      Identifier: '
    preferences'
      TypeReference
        Identifier: ' UserPreferences'
    Parameter
      Identifier: '
    importAdder'
      UnionType
        TypeReference
          Identifier: ' ImportAdder'
        UndefinedKeyword
    Parameter
      Identifier: '
    addClassElement'
      FunctionType
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' AddNode'
        VoidKeyword
    VoidKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' classMembers'
            NonNullExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: ' classDeclaration'
                  Identifier: 'symbol'
                Identifier: 'members'
      ForOfStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' symbol'
        Identifier: ' possiblyMissingSymbols'
        Block
          IfStatement
            PrefixUnaryExpression
              CallExpression
                PropertyAccessExpression
                  Identifier: 'classMembers'
                  Identifier: 'has'
                PropertyAccessExpression
                  Identifier: 'symbol'
                  Identifier: 'escapedName'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            addNewNodeForMemberSymbol'
                  Identifier: 'symbol'
                  Identifier: ' classDeclaration'
                  Identifier: ' sourceFile'
                  Identifier: ' context'
                  Identifier: ' preferences'
                  Identifier: ' importAdder'
                  Identifier: ' addClassElement'
                  Identifier: ' /*body*/ undefined'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getNoopSymbolTrackerWithResolver'
    Parameter
      Identifier: 'context'
      TypeReference
        Identifier: ' TypeConstructionContext'
    TypeReference
      Identifier: ' SymbolTracker'
    Block
      ReturnStatement
        ObjectLiteralExpression
          PropertyAssignment
            Identifier: '
        trackSymbol'
            ArrowFunction
              EqualsGreaterThanToken
              FalseKeyword
          PropertyAssignment
            Identifier: '
        moduleResolverHost'
            CallExpression
              Identifier: ' getModuleSpecifierResolverHost'
              PropertyAccessExpression
                Identifier: 'context'
                Identifier: 'program'
              PropertyAccessExpression
                Identifier: ' context'
                Identifier: 'host'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TypeConstructionContext'
    PropertySignature
      Identifier: '
    program'
      TypeReference
        Identifier: ' Program'
    PropertySignature
      Identifier: '
    host'
      TypeReference
        Identifier: ' LanguageServiceHost'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' AddNode'
    UnionType
      TypeReference
        Identifier: ' PropertyDeclaration'
      TypeReference
        Identifier: ' GetAccessorDeclaration'
      TypeReference
        Identifier: ' SetAccessorDeclaration'
      TypeReference
        Identifier: ' MethodDeclaration'
      TypeReference
        Identifier: ' FunctionExpression'
      TypeReference
        Identifier: ' ArrowFunction'
  EnumDeclaration
    ExportKeyword
    ConstKeyword
    Identifier: ' PreserveOptionalFlags'
    EnumMember
      Identifier: '
    Method'
      BinaryExpression
        NumericLiteral
        LessThanLessThanToken
        NumericLiteral
    EnumMember
      Identifier: '
    Property'
      BinaryExpression
        NumericLiteral
        LessThanLessThanToken
        NumericLiteral
    EnumMember
      Identifier: '
    All'
      BinaryExpression
        Identifier: ' Method'
        BarToken
        Identifier: ' Property'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' addNewNodeForMemberSymbol'
    Parameter
      Identifier: '
    symbol'
      TypeReference
        Identifier: ' Symbol'
    Parameter
      Identifier: '
    enclosingDeclaration'
      TypeReference
        Identifier: ' ClassLikeDeclaration'
    Parameter
      Identifier: '
    sourceFile'
      TypeReference
        Identifier: ' SourceFile'
    Parameter
      Identifier: '
    context'
      TypeReference
        Identifier: ' TypeConstructionContext'
    Parameter
      Identifier: '
    preferences'
      TypeReference
        Identifier: ' UserPreferences'
    Parameter
      Identifier: '
    importAdder'
      UnionType
        TypeReference
          Identifier: ' ImportAdder'
        UndefinedKeyword
    Parameter
      Identifier: '
    addClassElement'
      FunctionType
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' AddNode'
        VoidKeyword
    Parameter
      Identifier: '
    body'
      UnionType
        TypeReference
          Identifier: ' Block'
        UndefinedKeyword
    Parameter
      Identifier: '
    preserveOptional'
      TypeReference
        Identifier: ' PreserveOptionalFlags'
      PropertyAccessExpression
        Identifier: ' PreserveOptionalFlags'
        Identifier: 'All'
    Parameter
      Identifier: '
    isAmbient'
      FalseKeyword
    VoidKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' declarations'
            CallExpression
              PropertyAccessExpression
                Identifier: ' symbol'
                Identifier: 'getDeclarations'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' declaration'
            CallExpression
              Identifier: ' firstOrUndefined'
              Identifier: 'declarations'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' checker'
            CallExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: ' context'
                  Identifier: 'program'
                Identifier: 'getTypeChecker'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' scriptTarget'
            CallExpression
              Identifier: ' getEmitScriptTarget'
              CallExpression
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: 'context'
                    Identifier: 'program'
                  Identifier: 'getCompilerOptions'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' kind'
            BinaryExpression
              PropertyAccessExpression
                Identifier: ' declaration'
                QuestionDotToken
                Identifier: 'kind'
              QuestionQuestionToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'PropertySignature'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' declarationName'
            CallExpression
              Identifier: ' createDeclarationName'
              Identifier: 'symbol'
              Identifier: ' declaration'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' effectiveModifierFlags'
            ConditionalExpression
              Identifier: ' declaration'
              QuestionToken
              CallExpression
                Identifier: ' getEffectiveModifierFlags'
                Identifier: 'declaration'
              ColonToken
              PropertyAccessExpression
                Identifier: ' ModifierFlags'
                Identifier: 'None'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' modifierFlags'
            BinaryExpression
              Identifier: ' effectiveModifierFlags'
              AmpersandToken
              PropertyAccessExpression
                Identifier: ' ModifierFlags'
                Identifier: 'Static'
      ExpressionStatement
        BinaryExpression
          Identifier: '
    modifierFlags'
          BarEqualsToken
          ConditionalExpression
            BinaryExpression
              Identifier: ' effectiveModifierFlags'
              AmpersandToken
              PropertyAccessExpression
                Identifier: ' ModifierFlags'
                Identifier: 'Public'
            QuestionToken
            PropertyAccessExpression
              Identifier: ' ModifierFlags'
              Identifier: 'Public'
            ColonToken
            ConditionalExpression
              BinaryExpression
                Identifier: '
        effectiveModifierFlags'
                AmpersandToken
                PropertyAccessExpression
                  Identifier: ' ModifierFlags'
                  Identifier: 'Protected'
              QuestionToken
              PropertyAccessExpression
                Identifier: ' ModifierFlags'
                Identifier: 'Protected'
              ColonToken
              PropertyAccessExpression
                Identifier: '
        ModifierFlags'
                Identifier: 'None'
      IfStatement
        BinaryExpression
          Identifier: 'declaration'
          AmpersandAmpersandToken
          CallExpression
            Identifier: ' isAutoAccessorPropertyDeclaration'
            Identifier: 'declaration'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        modifierFlags'
              BarEqualsToken
              PropertyAccessExpression
                Identifier: ' ModifierFlags'
                Identifier: 'Accessor'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' modifiers'
            CallExpression
              Identifier: ' createModifiers'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' type'
            CallExpression
              PropertyAccessExpression
                Identifier: ' checker'
                Identifier: 'getWidenedType'
              CallExpression
                PropertyAccessExpression
                  Identifier: 'checker'
                  Identifier: 'getTypeOfSymbolAtLocation'
                Identifier: 'symbol'
                Identifier: ' enclosingDeclaration'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' optional'
            PrefixUnaryExpression
              PrefixUnaryExpression
                ParenthesizedExpression
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: 'symbol'
                      Identifier: 'flags'
                    AmpersandToken
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'Optional'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' ambient'
            BinaryExpression
              PrefixUnaryExpression
                PrefixUnaryExpression
                  ParenthesizedExpression
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: 'enclosingDeclaration'
                        Identifier: 'flags'
                      AmpersandToken
                      PropertyAccessExpression
                        Identifier: ' NodeFlags'
                        Identifier: 'Ambient'
              BarBarToken
              Identifier: ' isAmbient'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' quotePreference'
            CallExpression
              Identifier: ' getQuotePreference'
              Identifier: 'sourceFile'
              Identifier: ' preferences'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' flags'
            BinaryExpression
              PropertyAccessExpression
                Identifier: ' NodeBuilderFlags'
                Identifier: 'NoTruncation'
              BarToken
              ParenthesizedExpression
                ConditionalExpression
                  BinaryExpression
                    Identifier: 'quotePreference'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' QuotePreference'
                      Identifier: 'Single'
                  QuestionToken
                  PropertyAccessExpression
                    Identifier: ' NodeBuilderFlags'
                    Identifier: 'UseSingleQuotesForStringLiteralType'
                  ColonToken
                  PropertyAccessExpression
                    Identifier: ' NodeBuilderFlags'
                    Identifier: 'None'
      SwitchStatement
        Identifier: 'kind'
        CaseBlock
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'PropertySignature'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'PropertyDeclaration'
            VariableStatement
              VariableDeclarationList
                VariableDeclaration
                  Identifier: ' typeNode'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' checker'
                      Identifier: 'typeToTypeNode'
                    Identifier: 'type'
                    Identifier: ' enclosingDeclaration'
                    Identifier: ' flags'
                    PropertyAccessExpression
                      Identifier: ' InternalNodeBuilderFlags'
                      Identifier: 'AllowUnresolvedNames'
                    CallExpression
                      Identifier: ' getNoopSymbolTrackerWithResolver'
                      Identifier: 'context'
            IfStatement
              Identifier: 'importAdder'
              Block
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' importableReference'
                      CallExpression
                        Identifier: ' tryGetAutoImportableReferenceFromTypeNode'
                        Identifier: 'typeNode'
                        Identifier: ' scriptTarget'
                IfStatement
                  Identifier: 'importableReference'
                  Block
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    typeNode'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' importableReference'
                          Identifier: 'typeNode'
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                    importSymbols'
                        Identifier: 'importAdder'
                        PropertyAccessExpression
                          Identifier: ' importableReference'
                          Identifier: 'symbols'
            ExpressionStatement
              CallExpression
                Identifier: '
            addClassElement'
                CallExpression
                  PropertyAccessExpression
                    Identifier: 'factory'
                    Identifier: 'createPropertyDeclaration'
                  Identifier: '
                modifiers'
                  ConditionalExpression
                    Identifier: '
                declaration'
                    QuestionToken
                    CallExpression
                      Identifier: ' createName'
                      Identifier: 'declarationName'
                    ColonToken
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' symbol'
                        Identifier: 'getName'
                  ConditionalExpression
                    BinaryExpression
                      Identifier: '
                optional'
                      AmpersandAmpersandToken
                      ParenthesizedExpression
                        BinaryExpression
                          Identifier: 'preserveOptional'
                          AmpersandToken
                          PropertyAccessExpression
                            Identifier: ' PreserveOptionalFlags'
                            Identifier: 'Property'
                    QuestionToken
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' factory'
                        Identifier: 'createToken'
                      PropertyAccessExpression
                        Identifier: 'SyntaxKind'
                        Identifier: 'QuestionToken'
                    ColonToken
                    Identifier: ' undefined'
                  Identifier: '
                typeNode'
                  Identifier: '
                /*initializer*/ undefined'
            BreakStatement
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'GetAccessor'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'SetAccessor'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            Debug'
                    Identifier: 'assertIsDefined'
                  Identifier: 'declarations'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' typeNode'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' checker'
                        Identifier: 'typeToTypeNode'
                      Identifier: 'type'
                      Identifier: ' enclosingDeclaration'
                      Identifier: ' flags'
                      Identifier: ' /*internalFlags*/ undefined'
                      CallExpression
                        Identifier: ' getNoopSymbolTrackerWithResolver'
                        Identifier: 'context'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' allAccessors'
                    CallExpression
                      Identifier: ' getAllAccessorDeclarations'
                      Identifier: 'declarations'
                      AsExpression
                        Identifier: ' declaration'
                        TypeReference
                          Identifier: ' AccessorDeclaration'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' orderedAccessors'
                    ConditionalExpression
                      PropertyAccessExpression
                        Identifier: ' allAccessors'
                        Identifier: 'secondAccessor'
                      QuestionToken
                      ArrayLiteralExpression
                        PropertyAccessExpression
                          Identifier: 'allAccessors'
                          Identifier: 'firstAccessor'
                        PropertyAccessExpression
                          Identifier: ' allAccessors'
                          Identifier: 'secondAccessor'
                      ColonToken
                      ArrayLiteralExpression
                        PropertyAccessExpression
                          Identifier: 'allAccessors'
                          Identifier: 'firstAccessor'
              IfStatement
                Identifier: 'importAdder'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' importableReference'
                        CallExpression
                          Identifier: ' tryGetAutoImportableReferenceFromTypeNode'
                          Identifier: 'typeNode'
                          Identifier: ' scriptTarget'
                  IfStatement
                    Identifier: 'importableReference'
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    typeNode'
                          EqualsToken
                          PropertyAccessExpression
                            Identifier: ' importableReference'
                            Identifier: 'typeNode'
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    importSymbols'
                          Identifier: 'importAdder'
                          PropertyAccessExpression
                            Identifier: ' importableReference'
                            Identifier: 'symbols'
              ForOfStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' accessor'
                Identifier: ' orderedAccessors'
                Block
                  IfStatement
                    CallExpression
                      Identifier: 'isGetAccessorDeclaration'
                      Identifier: 'accessor'
                    Block
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    addClassElement'
                          CallExpression
                            PropertyAccessExpression
                              Identifier: 'factory'
                              Identifier: 'createGetAccessorDeclaration'
                            Identifier: '
                        modifiers'
                            CallExpression
                              Identifier: '
                        createName'
                              Identifier: 'declarationName'
                            Identifier: '
                        emptyArray'
                            CallExpression
                              Identifier: '
                        createTypeNode'
                              Identifier: 'typeNode'
                            CallExpression
                              Identifier: '
                        createBody'
                              Identifier: 'body'
                              Identifier: ' quotePreference'
                              Identifier: ' ambient'
                    Block
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                    Debug'
                            Identifier: 'assertNode'
                          Identifier: 'accessor'
                          Identifier: ' isSetAccessorDeclaration'
                          StringLiteral
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' parameter'
                            CallExpression
                              Identifier: ' getSetAccessorValueParameter'
                              Identifier: 'accessor'
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' parameterName'
                            ConditionalExpression
                              BinaryExpression
                                Identifier: ' parameter'
                                AmpersandAmpersandToken
                                CallExpression
                                  Identifier: ' isIdentifier'
                                  PropertyAccessExpression
                                    Identifier: 'parameter'
                                    Identifier: 'name'
                              QuestionToken
                              CallExpression
                                Identifier: ' idText'
                                PropertyAccessExpression
                                  Identifier: 'parameter'
                                  Identifier: 'name'
                              ColonToken
                              Identifier: ' undefined'
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    addClassElement'
                          CallExpression
                            PropertyAccessExpression
                              Identifier: 'factory'
                              Identifier: 'createSetAccessorDeclaration'
                            Identifier: '
                        modifiers'
                            CallExpression
                              Identifier: '
                        createName'
                              Identifier: 'declarationName'
                            CallExpression
                              Identifier: '
                        createDummyParameters'
                              NumericLiteral
                              ArrayLiteralExpression
                                Identifier: 'parameterName'
                              ArrayLiteralExpression
                                CallExpression
                                  Identifier: 'createTypeNode'
                                  Identifier: 'typeNode'
                              NumericLiteral
                              FalseKeyword
                            CallExpression
                              Identifier: '
                        createBody'
                              Identifier: 'body'
                              Identifier: ' quotePreference'
                              Identifier: ' ambient'
              BreakStatement
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'MethodSignature'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'MethodDeclaration'
            ExpressionStatement
              CallExpression
                PropertyAccessExpression
                  Identifier: '
            // The signature for the implementation appears as an entry in `signatures` iff
            // there is only one signature.
            // If there are overloads and an implementation signature, it appears as an
            // extra declaration that isn't a signature for `type`.
            // If there is more than one overload but no implementation signature
            // (eg: an abstract method or interface declaration), there is a 1-1
            // correspondence of declarations and signatures.
            Debug'
                  Identifier: 'assertIsDefined'
                Identifier: 'declarations'
            VariableStatement
              VariableDeclarationList
                VariableDeclaration
                  Identifier: ' signatures'
                  ConditionalExpression
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' type'
                        Identifier: 'isUnion'
                    QuestionToken
                    CallExpression
                      Identifier: ' flatMap'
                      PropertyAccessExpression
                        Identifier: 'type'
                        Identifier: 'types'
                      ArrowFunction
                        Parameter
                          Identifier: ' t'
                        EqualsGreaterThanToken
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' t'
                            Identifier: 'getCallSignatures'
                    ColonToken
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' type'
                        Identifier: 'getCallSignatures'
            IfStatement
              PrefixUnaryExpression
                CallExpression
                  Identifier: 'some'
                  Identifier: 'signatures'
              Block
                BreakStatement
            IfStatement
              BinaryExpression
                PropertyAccessExpression
                  Identifier: 'declarations'
                  Identifier: 'length'
                EqualsEqualsEqualsToken
                NumericLiteral
              Block
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
                Debug'
                      Identifier: 'assert'
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: 'signatures'
                        Identifier: 'length'
                      EqualsEqualsEqualsToken
                      NumericLiteral
                    StringLiteral
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' signature'
                      ElementAccessExpression
                        Identifier: ' signatures'
                        NumericLiteral
                ExpressionStatement
                  CallExpression
                    Identifier: '
                outputMethod'
                    Identifier: 'quotePreference'
                    Identifier: ' signature'
                    Identifier: ' modifiers'
                    CallExpression
                      Identifier: ' createName'
                      Identifier: 'declarationName'
                    CallExpression
                      Identifier: ' createBody'
                      Identifier: 'body'
                      Identifier: ' quotePreference'
                      Identifier: ' ambient'
                BreakStatement
            ForOfStatement
              VariableDeclarationList
                VariableDeclaration
                  Identifier: ' signature'
              Identifier: ' signatures'
              Block
                IfStatement
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: 'signature'
                      Identifier: 'declaration'
                    AmpersandAmpersandToken
                    ParenthesizedExpression
                      BinaryExpression
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: 'signature'
                            Identifier: 'declaration'
                          Identifier: 'flags'
                        AmpersandToken
                        PropertyAccessExpression
                          Identifier: ' NodeFlags'
                          Identifier: 'Ambient'
                  Block
                    ContinueStatement
                ExpressionStatement
                  CallExpression
                    Identifier: '
                // Ensure nodes are fresh so they can have different positions when going through formatting.
                outputMethod'
                    Identifier: 'quotePreference'
                    Identifier: ' signature'
                    Identifier: ' modifiers'
                    CallExpression
                      Identifier: ' createName'
                      Identifier: 'declarationName'
            IfStatement
              PrefixUnaryExpression
                Identifier: 'ambient'
              Block
                IfStatement
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: 'declarations'
                      Identifier: 'length'
                    GreaterThanToken
                    PropertyAccessExpression
                      Identifier: ' signatures'
                      Identifier: 'length'
                  Block
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' signature'
                          NonNullExpression
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' checker'
                                Identifier: 'getSignatureFromDeclaration'
                              AsExpression
                                ElementAccessExpression
                                  Identifier: 'declarations'
                                  BinaryExpression
                                    PropertyAccessExpression
                                      Identifier: 'declarations'
                                      Identifier: 'length'
                                    MinusToken
                                    NumericLiteral
                                TypeReference
                                  Identifier: ' SignatureDeclaration'
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                    outputMethod'
                        Identifier: 'quotePreference'
                        Identifier: ' signature'
                        Identifier: ' modifiers'
                        CallExpression
                          Identifier: ' createName'
                          Identifier: 'declarationName'
                        CallExpression
                          Identifier: ' createBody'
                          Identifier: 'body'
                          Identifier: ' quotePreference'
                  Block
                    ExpressionStatement
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                    Debug'
                          Identifier: 'assert'
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: 'declarations'
                            Identifier: 'length'
                          EqualsEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' signatures'
                            Identifier: 'length'
                        StringLiteral
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                    addClassElement'
                        CallExpression
                          Identifier: 'createMethodImplementingSignatures'
                          Identifier: 'checker'
                          Identifier: ' context'
                          Identifier: ' enclosingDeclaration'
                          Identifier: ' signatures'
                          CallExpression
                            Identifier: ' createName'
                            Identifier: 'declarationName'
                          BinaryExpression
                            Identifier: ' optional'
                            AmpersandAmpersandToken
                            PrefixUnaryExpression
                              PrefixUnaryExpression
                                ParenthesizedExpression
                                  BinaryExpression
                                    Identifier: 'preserveOptional'
                                    AmpersandToken
                                    PropertyAccessExpression
                                      Identifier: ' PreserveOptionalFlags'
                                      Identifier: 'Method'
                          Identifier: ' modifiers'
                          Identifier: ' quotePreference'
                          Identifier: ' body'
            BreakStatement
      FunctionDeclaration
        Identifier: ' outputMethod'
        Parameter
          Identifier: 'quotePreference'
          TypeReference
            Identifier: ' QuotePreference'
        Parameter
          Identifier: ' signature'
          TypeReference
            Identifier: ' Signature'
        Parameter
          Identifier: ' modifiers'
          UnionType
            TypeReference
              Identifier: ' NodeArray'
              TypeReference
                Identifier: 'Modifier'
            UndefinedKeyword
        Parameter
          Identifier: ' name'
          TypeReference
            Identifier: ' PropertyName'
        Parameter
          Identifier: ' body'
          QuestionToken
          TypeReference
            Identifier: ' Block'
        VoidKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' method'
                AsExpression
                  CallExpression
                    Identifier: ' createSignatureDeclarationFromSignature'
                    PropertyAccessExpression
                      Identifier: 'SyntaxKind'
                      Identifier: 'MethodDeclaration'
                    Identifier: ' context'
                    Identifier: ' quotePreference'
                    Identifier: ' signature'
                    Identifier: ' body'
                    Identifier: ' name'
                    Identifier: ' modifiers'
                    BinaryExpression
                      Identifier: ' optional'
                      AmpersandAmpersandToken
                      PrefixUnaryExpression
                        PrefixUnaryExpression
                          ParenthesizedExpression
                            BinaryExpression
                              Identifier: 'preserveOptional'
                              AmpersandToken
                              PropertyAccessExpression
                                Identifier: ' PreserveOptionalFlags'
                                Identifier: 'Method'
                    Identifier: ' enclosingDeclaration'
                    Identifier: ' importAdder'
                  TypeReference
                    Identifier: ' MethodDeclaration'
          IfStatement
            Identifier: 'method'
            ExpressionStatement
              CallExpression
                Identifier: ' addClassElement'
                Identifier: 'method'
      FunctionDeclaration
        Identifier: ' createModifiers'
        UnionType
          TypeReference
            Identifier: ' NodeArray'
            TypeReference
              Identifier: 'Modifier'
          UndefinedKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' modifiers'
                UnionType
                  ArrayType
                    TypeReference
                      Identifier: ' Modifier'
                  UndefinedKeyword
          IfStatement
            Identifier: 'modifierFlags'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            modifiers'
                  EqualsToken
                  CallExpression
                    Identifier: ' combine'
                    Identifier: 'modifiers'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' factory'
                        Identifier: 'createModifiersFromModifierFlags'
                      Identifier: 'modifierFlags'
          IfStatement
            CallExpression
              Identifier: 'shouldAddOverrideKeyword'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            modifiers'
                  EqualsToken
                  CallExpression
                    Identifier: ' append'
                    Identifier: 'modifiers'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' factory'
                        Identifier: 'createToken'
                      PropertyAccessExpression
                        Identifier: 'SyntaxKind'
                        Identifier: 'OverrideKeyword'
          ReturnStatement
            BinaryExpression
              Identifier: ' modifiers'
              AmpersandAmpersandToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' factory'
                  Identifier: 'createNodeArray'
                Identifier: 'modifiers'
      FunctionDeclaration
        Identifier: ' shouldAddOverrideKeyword'
        BooleanKeyword
        Block
          ReturnStatement
            PrefixUnaryExpression
              PrefixUnaryExpression
                ParenthesizedExpression
                  BinaryExpression
                    BinaryExpression
                      PropertyAccessExpression
                        CallExpression
                          PropertyAccessExpression
                            PropertyAccessExpression
                              Identifier: 'context'
                              Identifier: 'program'
                            Identifier: 'getCompilerOptions'
                        Identifier: 'noImplicitOverride'
                      AmpersandAmpersandToken
                      Identifier: ' declaration'
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: ' hasAbstractModifier'
                      Identifier: 'declaration'
      FunctionDeclaration
        Identifier: ' createName'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' PropertyName'
        Block
          IfStatement
            BinaryExpression
              CallExpression
                Identifier: 'isIdentifier'
                Identifier: 'node'
              AmpersandAmpersandToken
              BinaryExpression
                PropertyAccessExpression
                  Identifier: ' node'
                  Identifier: 'escapedText'
                EqualsEqualsEqualsToken
                StringLiteral
            Block
              ReturnStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' factory'
                    Identifier: 'createComputedPropertyName'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: 'factory'
                      Identifier: 'createStringLiteral'
                    CallExpression
                      Identifier: 'idText'
                      Identifier: 'node'
                    BinaryExpression
                      Identifier: ' quotePreference'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' QuotePreference'
                        Identifier: 'Single'
          ReturnStatement
            CallExpression
              Identifier: ' getSynthesizedDeepClone'
              Identifier: 'node'
              FalseKeyword
      FunctionDeclaration
        Identifier: ' createBody'
        Parameter
          Identifier: 'block'
          UnionType
            TypeReference
              Identifier: ' Block'
            UndefinedKeyword
        Parameter
          Identifier: ' quotePreference'
          TypeReference
            Identifier: ' QuotePreference'
        Parameter
          Identifier: ' ambient'
          QuestionToken
          BooleanKeyword
        Block
          ReturnStatement
            ConditionalExpression
              Identifier: ' ambient'
              QuestionToken
              Identifier: ' undefined'
              ColonToken
              BinaryExpression
                CallExpression
                  Identifier: '
            getSynthesizedDeepClone'
                  Identifier: 'block'
                  FalseKeyword
                BarBarToken
                CallExpression
                  Identifier: ' createStubbedMethodBody'
                  Identifier: 'quotePreference'
      FunctionDeclaration
        Identifier: ' createTypeNode'
        Parameter
          Identifier: 'typeNode'
          UnionType
            TypeReference
              Identifier: ' TypeNode'
            UndefinedKeyword
        Block
          ReturnStatement
            CallExpression
              Identifier: ' getSynthesizedDeepClone'
              Identifier: 'typeNode'
              FalseKeyword
      FunctionDeclaration
        Identifier: ' createDeclarationName'
        Parameter
          Identifier: 'symbol'
          TypeReference
            Identifier: ' Symbol'
        Parameter
          Identifier: ' declaration'
          UnionType
            TypeReference
              Identifier: ' Declaration'
            UndefinedKeyword
        TypeReference
          Identifier: ' PropertyName'
        Block
          IfStatement
            BinaryExpression
              CallExpression
                Identifier: 'getCheckFlags'
                Identifier: 'symbol'
              AmpersandToken
              PropertyAccessExpression
                Identifier: ' CheckFlags'
                Identifier: 'Mapped'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' nameType'
                    PropertyAccessExpression
                      PropertyAccessExpression
                        ParenthesizedExpression
                          AsExpression
                            Identifier: 'symbol'
                            TypeReference
                              Identifier: ' TransientSymbol'
                        Identifier: 'links'
                      Identifier: 'nameType'
              IfStatement
                BinaryExpression
                  Identifier: 'nameType'
                  AmpersandAmpersandToken
                  CallExpression
                    Identifier: ' isTypeUsableAsPropertyName'
                    Identifier: 'nameType'
                Block
                  ReturnStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' factory'
                        Identifier: 'createIdentifier'
                      CallExpression
                        Identifier: 'unescapeLeadingUnderscores'
                        CallExpression
                          Identifier: 'getPropertyNameFromType'
                          Identifier: 'nameType'
          ReturnStatement
            AsExpression
              CallExpression
                Identifier: ' getSynthesizedDeepClone'
                CallExpression
                  Identifier: 'getNameOfDeclaration'
                  Identifier: 'declaration'
                FalseKeyword
              TypeReference
                Identifier: ' PropertyName'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' createSignatureDeclarationFromSignature'
    Parameter
      Identifier: '
    kind'
      UnionType
        TypeReference
          QualifiedName
            Identifier: ' SyntaxKind'
            Identifier: 'MethodDeclaration'
        TypeReference
          QualifiedName
            Identifier: ' SyntaxKind'
            Identifier: 'FunctionExpression'
        TypeReference
          QualifiedName
            Identifier: ' SyntaxKind'
            Identifier: 'ArrowFunction'
        TypeReference
          QualifiedName
            Identifier: ' SyntaxKind'
            Identifier: 'FunctionDeclaration'
    Parameter
      Identifier: '
    context'
      TypeReference
        Identifier: ' TypeConstructionContext'
    Parameter
      Identifier: '
    quotePreference'
      TypeReference
        Identifier: ' QuotePreference'
    Parameter
      Identifier: '
    signature'
      TypeReference
        Identifier: ' Signature'
    Parameter
      Identifier: '
    body'
      UnionType
        TypeReference
          Identifier: ' Block'
        UndefinedKeyword
    Parameter
      Identifier: '
    name'
      UnionType
        TypeReference
          Identifier: ' PropertyName'
        UndefinedKeyword
    Parameter
      Identifier: '
    modifiers'
      UnionType
        TypeReference
          Identifier: ' NodeArray'
          TypeReference
            Identifier: 'Modifier'
        UndefinedKeyword
    Parameter
      Identifier: '
    optional'
      UnionType
        BooleanKeyword
        UndefinedKeyword
    Parameter
      Identifier: '
    enclosingDeclaration'
      UnionType
        TypeReference
          Identifier: ' Node'
        UndefinedKeyword
    Parameter
      Identifier: '
    importAdder'
      UnionType
        TypeReference
          Identifier: ' ImportAdder'
        UndefinedKeyword
    UnionType
      TypeReference
        Identifier: ' FunctionDeclaration'
      TypeReference
        Identifier: ' MethodDeclaration'
      TypeReference
        Identifier: ' FunctionExpression'
      TypeReference
        Identifier: ' ArrowFunction'
      UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' program'
            PropertyAccessExpression
              Identifier: ' context'
              Identifier: 'program'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' checker'
            CallExpression
              PropertyAccessExpression
                Identifier: ' program'
                Identifier: 'getTypeChecker'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' scriptTarget'
            CallExpression
              Identifier: ' getEmitScriptTarget'
              CallExpression
                PropertyAccessExpression
                  Identifier: 'program'
                  Identifier: 'getCompilerOptions'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' isJs'
            CallExpression
              Identifier: ' isInJSFile'
              Identifier: 'enclosingDeclaration'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' flags'
            BinaryExpression
              BinaryExpression
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: ' NodeBuilderFlags'
                    Identifier: 'NoTruncation'
                  BarToken
                  PropertyAccessExpression
                    Identifier: ' NodeBuilderFlags'
                    Identifier: 'SuppressAnyReturnType'
                BarToken
                PropertyAccessExpression
                  Identifier: ' NodeBuilderFlags'
                  Identifier: 'AllowEmptyTuple'
              BarToken
              ParenthesizedExpression
                ConditionalExpression
                  BinaryExpression
                    Identifier: 'quotePreference'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' QuotePreference'
                      Identifier: 'Single'
                  QuestionToken
                  PropertyAccessExpression
                    Identifier: ' NodeBuilderFlags'
                    Identifier: 'UseSingleQuotesForStringLiteralType'
                  ColonToken
                  PropertyAccessExpression
                    Identifier: ' NodeBuilderFlags'
                    Identifier: 'None'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' signatureDeclaration'
            AsExpression
              CallExpression
                PropertyAccessExpression
                  Identifier: ' checker'
                  Identifier: 'signatureToSignatureDeclaration'
                Identifier: 'signature'
                Identifier: ' kind'
                Identifier: ' enclosingDeclaration'
                Identifier: ' flags'
                PropertyAccessExpression
                  Identifier: ' InternalNodeBuilderFlags'
                  Identifier: 'AllowUnresolvedNames'
                CallExpression
                  Identifier: ' getNoopSymbolTrackerWithResolver'
                  Identifier: 'context'
              UnionType
                TypeReference
                  Identifier: ' ArrowFunction'
                TypeReference
                  Identifier: ' FunctionExpression'
                TypeReference
                  Identifier: ' MethodDeclaration'
                TypeReference
                  Identifier: ' FunctionDeclaration'
      IfStatement
        PrefixUnaryExpression
          Identifier: 'signatureDeclaration'
        Block
          ReturnStatement
            Identifier: ' undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' typeParameters'
            ConditionalExpression
              Identifier: ' isJs'
              QuestionToken
              Identifier: ' undefined'
              ColonToken
              PropertyAccessExpression
                Identifier: ' signatureDeclaration'
                Identifier: 'typeParameters'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' parameters'
            PropertyAccessExpression
              Identifier: ' signatureDeclaration'
              Identifier: 'parameters'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' type'
            ConditionalExpression
              Identifier: ' isJs'
              QuestionToken
              Identifier: ' undefined'
              ColonToken
              CallExpression
                Identifier: ' getSynthesizedDeepClone'
                PropertyAccessExpression
                  Identifier: 'signatureDeclaration'
                  Identifier: 'type'
      IfStatement
        Identifier: 'importAdder'
        Block
          IfStatement
            Identifier: 'typeParameters'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' newTypeParameters'
                    CallExpression
                      Identifier: ' sameMap'
                      Identifier: 'typeParameters'
                      ArrowFunction
                        Parameter
                          Identifier: ' typeParameterDecl'
                        EqualsGreaterThanToken
                        Block
                          VariableStatement
                            VariableDeclarationList
                              VariableDeclaration
                                Identifier: ' constraint'
                                PropertyAccessExpression
                                  Identifier: ' typeParameterDecl'
                                  Identifier: 'constraint'
                          VariableStatement
                            VariableDeclarationList
                              VariableDeclaration
                                Identifier: ' defaultType'
                                PropertyAccessExpression
                                  Identifier: ' typeParameterDecl'
                                  Identifier: 'default'
                          IfStatement
                            Identifier: 'constraint'
                            Block
                              VariableStatement
                                VariableDeclarationList
                                  VariableDeclaration
                                    Identifier: ' importableReference'
                                    CallExpression
                                      Identifier: ' tryGetAutoImportableReferenceFromTypeNode'
                                      Identifier: 'constraint'
                                      Identifier: ' scriptTarget'
                              IfStatement
                                Identifier: 'importableReference'
                                Block
                                  ExpressionStatement
                                    BinaryExpression
                                      Identifier: '
                        constraint'
                                      EqualsToken
                                      PropertyAccessExpression
                                        Identifier: ' importableReference'
                                        Identifier: 'typeNode'
                                  ExpressionStatement
                                    CallExpression
                                      Identifier: '
                        importSymbols'
                                      Identifier: 'importAdder'
                                      PropertyAccessExpression
                                        Identifier: ' importableReference'
                                        Identifier: 'symbols'
                          IfStatement
                            Identifier: 'defaultType'
                            Block
                              VariableStatement
                                VariableDeclarationList
                                  VariableDeclaration
                                    Identifier: ' importableReference'
                                    CallExpression
                                      Identifier: ' tryGetAutoImportableReferenceFromTypeNode'
                                      Identifier: 'defaultType'
                                      Identifier: ' scriptTarget'
                              IfStatement
                                Identifier: 'importableReference'
                                Block
                                  ExpressionStatement
                                    BinaryExpression
                                      Identifier: '
                        defaultType'
                                      EqualsToken
                                      PropertyAccessExpression
                                        Identifier: ' importableReference'
                                        Identifier: 'typeNode'
                                  ExpressionStatement
                                    CallExpression
                                      Identifier: '
                        importSymbols'
                                      Identifier: 'importAdder'
                                      PropertyAccessExpression
                                        Identifier: ' importableReference'
                                        Identifier: 'symbols'
                          ReturnStatement
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' factory'
                                Identifier: 'updateTypeParameterDeclaration'
                              Identifier: '
                    typeParameterDecl'
                              PropertyAccessExpression
                                Identifier: '
                    typeParameterDecl'
                                Identifier: 'modifiers'
                              PropertyAccessExpression
                                Identifier: '
                    typeParameterDecl'
                                Identifier: 'name'
                              Identifier: '
                    constraint'
                              Identifier: '
                    defaultType'
              IfStatement
                BinaryExpression
                  Identifier: 'typeParameters'
                  ExclamationEqualsEqualsToken
                  Identifier: ' newTypeParameters'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                typeParameters'
                      EqualsToken
                      CallExpression
                        Identifier: ' setTextRange'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: 'factory'
                            Identifier: 'createNodeArray'
                          Identifier: 'newTypeParameters'
                          PropertyAccessExpression
                            Identifier: ' typeParameters'
                            Identifier: 'hasTrailingComma'
                        Identifier: ' typeParameters'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' newParameters'
                CallExpression
                  Identifier: ' sameMap'
                  Identifier: 'parameters'
                  ArrowFunction
                    Parameter
                      Identifier: ' parameterDecl'
                    EqualsGreaterThanToken
                    Block
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' type'
                            ConditionalExpression
                              Identifier: ' isJs'
                              QuestionToken
                              Identifier: ' undefined'
                              ColonToken
                              PropertyAccessExpression
                                Identifier: ' parameterDecl'
                                Identifier: 'type'
                      IfStatement
                        Identifier: 'type'
                        Block
                          VariableStatement
                            VariableDeclarationList
                              VariableDeclaration
                                Identifier: ' importableReference'
                                CallExpression
                                  Identifier: ' tryGetAutoImportableReferenceFromTypeNode'
                                  Identifier: 'type'
                                  Identifier: ' scriptTarget'
                          IfStatement
                            Identifier: 'importableReference'
                            Block
                              ExpressionStatement
                                BinaryExpression
                                  Identifier: '
                    type'
                                  EqualsToken
                                  PropertyAccessExpression
                                    Identifier: ' importableReference'
                                    Identifier: 'typeNode'
                              ExpressionStatement
                                CallExpression
                                  Identifier: '
                    importSymbols'
                                  Identifier: 'importAdder'
                                  PropertyAccessExpression
                                    Identifier: ' importableReference'
                                    Identifier: 'symbols'
                      ReturnStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' factory'
                            Identifier: 'updateParameterDeclaration'
                          Identifier: '
                parameterDecl'
                          PropertyAccessExpression
                            Identifier: '
                parameterDecl'
                            Identifier: 'modifiers'
                          PropertyAccessExpression
                            Identifier: '
                parameterDecl'
                            Identifier: 'dotDotDotToken'
                          PropertyAccessExpression
                            Identifier: '
                parameterDecl'
                            Identifier: 'name'
                          ConditionalExpression
                            Identifier: '
                isJs'
                            QuestionToken
                            Identifier: ' undefined'
                            ColonToken
                            PropertyAccessExpression
                              Identifier: ' parameterDecl'
                              Identifier: 'questionToken'
                          Identifier: '
                type'
                          PropertyAccessExpression
                            Identifier: '
                parameterDecl'
                            Identifier: 'initializer'
          IfStatement
            BinaryExpression
              Identifier: 'parameters'
              ExclamationEqualsEqualsToken
              Identifier: ' newParameters'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            parameters'
                  EqualsToken
                  CallExpression
                    Identifier: ' setTextRange'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: 'factory'
                        Identifier: 'createNodeArray'
                      Identifier: 'newParameters'
                      PropertyAccessExpression
                        Identifier: ' parameters'
                        Identifier: 'hasTrailingComma'
                    Identifier: ' parameters'
          IfStatement
            Identifier: 'type'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' importableReference'
                    CallExpression
                      Identifier: ' tryGetAutoImportableReferenceFromTypeNode'
                      Identifier: 'type'
                      Identifier: ' scriptTarget'
              IfStatement
                Identifier: 'importableReference'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                type'
                      EqualsToken
                      PropertyAccessExpression
                        Identifier: ' importableReference'
                        Identifier: 'typeNode'
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                importSymbols'
                      Identifier: 'importAdder'
                      PropertyAccessExpression
                        Identifier: ' importableReference'
                        Identifier: 'symbols'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' questionToken'
            ConditionalExpression
              Identifier: ' optional'
              QuestionToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' factory'
                  Identifier: 'createToken'
                PropertyAccessExpression
                  Identifier: 'SyntaxKind'
                  Identifier: 'QuestionToken'
              ColonToken
              Identifier: ' undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' asteriskToken'
            PropertyAccessExpression
              Identifier: ' signatureDeclaration'
              Identifier: 'asteriskToken'
      IfStatement
        CallExpression
          Identifier: 'isFunctionExpression'
          Identifier: 'signatureDeclaration'
        Block
          ReturnStatement
            CallExpression
              PropertyAccessExpression
                Identifier: ' factory'
                Identifier: 'updateFunctionExpression'
              Identifier: 'signatureDeclaration'
              Identifier: ' modifiers'
              PropertyAccessExpression
                Identifier: ' signatureDeclaration'
                Identifier: 'asteriskToken'
              CallExpression
                Identifier: ' tryCast'
                Identifier: 'name'
                Identifier: ' isIdentifier'
              Identifier: ' typeParameters'
              Identifier: ' parameters'
              Identifier: ' type'
              BinaryExpression
                Identifier: ' body'
                QuestionQuestionToken
                PropertyAccessExpression
                  Identifier: ' signatureDeclaration'
                  Identifier: 'body'
      IfStatement
        CallExpression
          Identifier: 'isArrowFunction'
          Identifier: 'signatureDeclaration'
        Block
          ReturnStatement
            CallExpression
              PropertyAccessExpression
                Identifier: ' factory'
                Identifier: 'updateArrowFunction'
              Identifier: 'signatureDeclaration'
              Identifier: ' modifiers'
              Identifier: ' typeParameters'
              Identifier: ' parameters'
              Identifier: ' type'
              PropertyAccessExpression
                Identifier: ' signatureDeclaration'
                Identifier: 'equalsGreaterThanToken'
              BinaryExpression
                Identifier: ' body'
                QuestionQuestionToken
                PropertyAccessExpression
                  Identifier: ' signatureDeclaration'
                  Identifier: 'body'
      IfStatement
        CallExpression
          Identifier: 'isMethodDeclaration'
          Identifier: 'signatureDeclaration'
        Block
          ReturnStatement
            CallExpression
              PropertyAccessExpression
                Identifier: ' factory'
                Identifier: 'updateMethodDeclaration'
              Identifier: 'signatureDeclaration'
              Identifier: ' modifiers'
              Identifier: ' asteriskToken'
              BinaryExpression
                Identifier: ' name'
                QuestionQuestionToken
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' factory'
                    Identifier: 'createIdentifier'
                  StringLiteral
              Identifier: ' questionToken'
              Identifier: ' typeParameters'
              Identifier: ' parameters'
              Identifier: ' type'
              Identifier: ' body'
      IfStatement
        CallExpression
          Identifier: 'isFunctionDeclaration'
          Identifier: 'signatureDeclaration'
        Block
          ReturnStatement
            CallExpression
              PropertyAccessExpression
                Identifier: ' factory'
                Identifier: 'updateFunctionDeclaration'
              Identifier: 'signatureDeclaration'
              Identifier: ' modifiers'
              PropertyAccessExpression
                Identifier: ' signatureDeclaration'
                Identifier: 'asteriskToken'
              CallExpression
                Identifier: ' tryCast'
                Identifier: 'name'
                Identifier: ' isIdentifier'
              Identifier: ' typeParameters'
              Identifier: ' parameters'
              Identifier: ' type'
              BinaryExpression
                Identifier: ' body'
                QuestionQuestionToken
                PropertyAccessExpression
                  Identifier: ' signatureDeclaration'
                  Identifier: 'body'
      ReturnStatement
        Identifier: ' undefined'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' createSignatureDeclarationFromCallExpression'
    Parameter
      Identifier: '
    kind'
      UnionType
        TypeReference
          QualifiedName
            Identifier: ' SyntaxKind'
            Identifier: 'MethodDeclaration'
        TypeReference
          QualifiedName
            Identifier: ' SyntaxKind'
            Identifier: 'FunctionDeclaration'
        TypeReference
          QualifiedName
            Identifier: ' SyntaxKind'
            Identifier: 'MethodSignature'
    Parameter
      Identifier: '
    context'
      TypeReference
        Identifier: ' CodeFixContextBase'
    Parameter
      Identifier: '
    importAdder'
      TypeReference
        Identifier: ' ImportAdder'
    Parameter
      Identifier: '
    call'
      TypeReference
        Identifier: ' CallExpression'
    Parameter
      Identifier: '
    name'
      UnionType
        TypeReference
          Identifier: ' Identifier'
        TypeReference
          Identifier: ' PrivateIdentifier'
        StringKeyword
    Parameter
      Identifier: '
    modifierFlags'
      TypeReference
        Identifier: ' ModifierFlags'
    Parameter
      Identifier: '
    contextNode'
      TypeReference
        Identifier: ' Node'
    UnionType
      TypeReference
        Identifier: ' MethodDeclaration'
      TypeReference
        Identifier: ' FunctionDeclaration'
      TypeReference
        Identifier: ' MethodSignature'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' quotePreference'
            CallExpression
              Identifier: ' getQuotePreference'
              PropertyAccessExpression
                Identifier: 'context'
                Identifier: 'sourceFile'
              PropertyAccessExpression
                Identifier: ' context'
                Identifier: 'preferences'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' scriptTarget'
            CallExpression
              Identifier: ' getEmitScriptTarget'
              CallExpression
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: 'context'
                    Identifier: 'program'
                  Identifier: 'getCompilerOptions'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' tracker'
            CallExpression
              Identifier: ' getNoopSymbolTrackerWithResolver'
              Identifier: 'context'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' checker'
            CallExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: ' context'
                  Identifier: 'program'
                Identifier: 'getTypeChecker'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' isJs'
            CallExpression
              Identifier: ' isInJSFile'
              Identifier: 'contextNode'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            ObjectBindingPattern
              BindingElement
                Identifier: ' typeArguments'
              BindingElement
                Identifier: ' arguments'
                Identifier: ' args'
              BindingElement
                Identifier: ' parent'
            Identifier: ' call'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' contextualType'
            ConditionalExpression
              Identifier: ' isJs'
              QuestionToken
              Identifier: ' undefined'
              ColonToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' checker'
                  Identifier: 'getContextualType'
                Identifier: 'call'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' names'
            CallExpression
              Identifier: ' map'
              Identifier: 'args'
              ArrowFunction
                Parameter
                  Identifier: ' arg'
                EqualsGreaterThanToken
                ConditionalExpression
                  CallExpression
                    Identifier: ' isIdentifier'
                    Identifier: 'arg'
                  QuestionToken
                  PropertyAccessExpression
                    Identifier: ' arg'
                    Identifier: 'text'
                  ColonToken
                  ConditionalExpression
                    BinaryExpression
                      CallExpression
                        Identifier: ' isPropertyAccessExpression'
                        Identifier: 'arg'
                      AmpersandAmpersandToken
                      CallExpression
                        Identifier: ' isIdentifier'
                        PropertyAccessExpression
                          Identifier: 'arg'
                          Identifier: 'name'
                    QuestionToken
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: ' arg'
                        Identifier: 'name'
                      Identifier: 'text'
                    ColonToken
                    Identifier: ' undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' instanceTypes'
            ConditionalExpression
              Identifier: ' isJs'
              QuestionToken
              ArrayLiteralExpression
              ColonToken
              CallExpression
                Identifier: ' map'
                Identifier: 'args'
                ArrowFunction
                  Parameter
                    Identifier: ' arg'
                  EqualsGreaterThanToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' checker'
                      Identifier: 'getTypeAtLocation'
                    Identifier: 'arg'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            ObjectBindingPattern
              BindingElement
                Identifier: ' argumentTypeNodes'
              BindingElement
                Identifier: ' argumentTypeParameters'
            CallExpression
              Identifier: ' getArgumentTypesAndTypeParameters'
              Identifier: '
        checker'
              Identifier: '
        importAdder'
              Identifier: '
        instanceTypes'
              Identifier: '
        contextNode'
              Identifier: '
        scriptTarget'
              PropertyAccessExpression
                Identifier: '
        NodeBuilderFlags'
                Identifier: 'NoTruncation'
              PropertyAccessExpression
                Identifier: '
        InternalNodeBuilderFlags'
                Identifier: 'AllowUnresolvedNames'
              Identifier: '
        tracker'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' modifiers'
            ConditionalExpression
              Identifier: ' modifierFlags'
              QuestionToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' factory'
                  Identifier: 'createNodeArray'
                CallExpression
                  PropertyAccessExpression
                    Identifier: 'factory'
                    Identifier: 'createModifiersFromModifierFlags'
                  Identifier: 'modifierFlags'
              ColonToken
              Identifier: ' undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' asteriskToken'
            ConditionalExpression
              CallExpression
                Identifier: ' isYieldExpression'
                Identifier: 'parent'
              QuestionToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' factory'
                  Identifier: 'createToken'
                PropertyAccessExpression
                  Identifier: 'SyntaxKind'
                  Identifier: 'AsteriskToken'
              ColonToken
              Identifier: ' undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' typeParameters'
            ConditionalExpression
              Identifier: ' isJs'
              QuestionToken
              Identifier: ' undefined'
              ColonToken
              CallExpression
                Identifier: ' createTypeParametersForArguments'
                Identifier: 'checker'
                Identifier: ' argumentTypeParameters'
                Identifier: ' typeArguments'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' parameters'
            CallExpression
              Identifier: ' createDummyParameters'
              PropertyAccessExpression
                Identifier: 'args'
                Identifier: 'length'
              Identifier: ' names'
              Identifier: ' argumentTypeNodes'
              Identifier: ' /*minArgumentCount*/ undefined'
              Identifier: ' isJs'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' type'
            ConditionalExpression
              BinaryExpression
                Identifier: ' isJs'
                BarBarToken
                BinaryExpression
                  Identifier: ' contextualType'
                  EqualsEqualsEqualsToken
                  Identifier: ' undefined'
              QuestionToken
              Identifier: ' undefined'
              ColonToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' checker'
                  Identifier: 'typeToTypeNode'
                Identifier: 'contextualType'
                Identifier: ' contextNode'
                Identifier: ' /*flags*/ undefined'
                Identifier: ' /*internalFlags*/ undefined'
                Identifier: ' tracker'
      SwitchStatement
        Identifier: 'kind'
        CaseBlock
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'MethodDeclaration'
            ReturnStatement
              CallExpression
                PropertyAccessExpression
                  Identifier: ' factory'
                  Identifier: 'createMethodDeclaration'
                Identifier: '
                modifiers'
                Identifier: '
                asteriskToken'
                Identifier: '
                name'
                Identifier: '
                /*questionToken*/ undefined'
                Identifier: '
                typeParameters'
                Identifier: '
                parameters'
                Identifier: '
                type'
                CallExpression
                  Identifier: '
                createStubbedMethodBody'
                  Identifier: 'quotePreference'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'MethodSignature'
            ReturnStatement
              CallExpression
                PropertyAccessExpression
                  Identifier: ' factory'
                  Identifier: 'createMethodSignature'
                Identifier: '
                modifiers'
                Identifier: '
                name'
                Identifier: '
                /*questionToken*/ undefined'
                Identifier: '
                typeParameters'
                Identifier: '
                parameters'
                ConditionalExpression
                  BinaryExpression
                    Identifier: '
                type'
                    EqualsEqualsEqualsToken
                    Identifier: ' undefined'
                  QuestionToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' factory'
                      Identifier: 'createKeywordTypeNode'
                    PropertyAccessExpression
                      Identifier: 'SyntaxKind'
                      Identifier: 'UnknownKeyword'
                  ColonToken
                  Identifier: ' type'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'FunctionDeclaration'
            ExpressionStatement
              CallExpression
                PropertyAccessExpression
                  Identifier: '
            Debug'
                  Identifier: 'assert'
                BinaryExpression
                  BinaryExpression
                    TypeOfExpression
                      Identifier: ' name'
                    EqualsEqualsEqualsToken
                    StringLiteral
                  BarBarToken
                  CallExpression
                    Identifier: ' isIdentifier'
                    Identifier: 'name'
                StringLiteral
            ReturnStatement
              CallExpression
                PropertyAccessExpression
                  Identifier: ' factory'
                  Identifier: 'createFunctionDeclaration'
                Identifier: '
                modifiers'
                Identifier: '
                asteriskToken'
                Identifier: '
                name'
                Identifier: '
                typeParameters'
                Identifier: '
                parameters'
                Identifier: '
                type'
                CallExpression
                  Identifier: '
                createStubbedBody'
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: 'Diagnostics'
                      Identifier: 'Function_not_implemented'
                    Identifier: 'message'
                  Identifier: ' quotePreference'
          DefaultClause
            ExpressionStatement
              CallExpression
                PropertyAccessExpression
                  Identifier: '
            Debug'
                  Identifier: 'fail'
                StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ArgumentTypeParameterAndConstraint'
    PropertySignature
      Identifier: '
    argumentType'
      TypeReference
        Identifier: ' Type'
    PropertySignature
      Identifier: '
    constraint'
      QuestionToken
      TypeReference
        Identifier: ' TypeNode'
  FunctionDeclaration
    Identifier: ' createTypeParametersForArguments'
    Parameter
      Identifier: 'checker'
      TypeReference
        Identifier: ' TypeChecker'
    Parameter
      Identifier: ' argumentTypeParameters'
      ArrayType
        TupleType
          StringKeyword
          UnionType
            TypeReference
              Identifier: ' ArgumentTypeParameterAndConstraint'
            UndefinedKeyword
    Parameter
      Identifier: ' typeArguments'
      UnionType
        TypeReference
          Identifier: ' NodeArray'
          TypeReference
            Identifier: 'TypeNode'
        UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' usedNames'
            NewExpression
              Identifier: ' Set'
              CallExpression
                PropertyAccessExpression
                  Identifier: 'argumentTypeParameters'
                  Identifier: 'map'
                ArrowFunction
                  Parameter
                    Identifier: 'pair'
                  EqualsGreaterThanToken
                  ElementAccessExpression
                    Identifier: ' pair'
                    NumericLiteral
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' constraintsByName'
            NewExpression
              Identifier: ' Map'
              Identifier: 'argumentTypeParameters'
      IfStatement
        Identifier: 'typeArguments'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' typeArgumentsWithNewTypes'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' typeArguments'
                    Identifier: 'filter'
                  ArrowFunction
                    Parameter
                      Identifier: 'typeArgument'
                    EqualsGreaterThanToken
                    PrefixUnaryExpression
                      CallExpression
                        PropertyAccessExpression
                          Identifier: 'argumentTypeParameters'
                          Identifier: 'some'
                        ArrowFunction
                          Parameter
                            Identifier: 'pair'
                          EqualsGreaterThanToken
                          BinaryExpression
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' checker'
                                Identifier: 'getTypeAtLocation'
                              Identifier: 'typeArgument'
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              ElementAccessExpression
                                Identifier: ' pair'
                                NumericLiteral
                              QuestionDotToken
                              Identifier: 'argumentType'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' targetSize'
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: ' usedNames'
                    Identifier: 'size'
                  PlusToken
                  PropertyAccessExpression
                    Identifier: ' typeArgumentsWithNewTypes'
                    Identifier: 'length'
          ForStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' i'
                NumericLiteral
            BinaryExpression
              PropertyAccessExpression
                Identifier: ' usedNames'
                Identifier: 'size'
              LessThanToken
              Identifier: ' targetSize'
            BinaryExpression
              Identifier: ' i'
              PlusEqualsToken
              NumericLiteral
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            usedNames'
                    Identifier: 'add'
                  CallExpression
                    Identifier: 'createTypeParameterName'
                    Identifier: 'i'
      ReturnStatement
        CallExpression
          Identifier: ' arrayFrom'
          CallExpression
            PropertyAccessExpression
              Identifier: '
        usedNames'
              Identifier: 'values'
          ArrowFunction
            Parameter
              Identifier: '
        usedName'
            EqualsGreaterThanToken
            CallExpression
              PropertyAccessExpression
                Identifier: ' factory'
                Identifier: 'createTypeParameterDeclaration'
              Identifier: '/*modifiers*/ undefined'
              Identifier: ' usedName'
              PropertyAccessExpression
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' constraintsByName'
                    Identifier: 'get'
                  Identifier: 'usedName'
                QuestionDotToken
                Identifier: 'constraint'
  FunctionDeclaration
    Identifier: ' createTypeParameterName'
    Parameter
      Identifier: 'index'
      NumberKeyword
    Block
      ReturnStatement
        ConditionalExpression
          BinaryExpression
            BinaryExpression
              PropertyAccessExpression
                Identifier: ' CharacterCodes'
                Identifier: 'T'
              PlusToken
              Identifier: ' index'
            LessThanEqualsToken
            PropertyAccessExpression
              Identifier: ' CharacterCodes'
              Identifier: 'Z'
          QuestionToken
          CallExpression
            PropertyAccessExpression
              Identifier: ' String'
              Identifier: 'fromCharCode'
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'CharacterCodes'
                Identifier: 'T'
              PlusToken
              Identifier: ' index'
          ColonToken
          TemplateExpression
            TemplateHead
            TemplateSpan
              Identifier: 'index'
              TemplateTail
  FunctionDeclaration
    ExportKeyword
    Identifier: ' typeToAutoImportableTypeNode'
    Parameter
      Identifier: 'checker'
      TypeReference
        Identifier: ' TypeChecker'
    Parameter
      Identifier: ' importAdder'
      TypeReference
        Identifier: ' ImportAdder'
    Parameter
      Identifier: ' type'
      TypeReference
        Identifier: ' Type'
    Parameter
      Identifier: ' contextNode'
      UnionType
        TypeReference
          Identifier: ' Node'
        UndefinedKeyword
    Parameter
      Identifier: ' scriptTarget'
      TypeReference
        Identifier: ' ScriptTarget'
    Parameter
      Identifier: ' flags'
      QuestionToken
      TypeReference
        Identifier: ' NodeBuilderFlags'
    Parameter
      Identifier: ' internalFlags'
      QuestionToken
      TypeReference
        Identifier: ' InternalNodeBuilderFlags'
    Parameter
      Identifier: ' tracker'
      QuestionToken
      TypeReference
        Identifier: ' SymbolTracker'
    UnionType
      TypeReference
        Identifier: ' TypeNode'
      UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' typeNode'
            CallExpression
              PropertyAccessExpression
                Identifier: ' checker'
                Identifier: 'typeToTypeNode'
              Identifier: 'type'
              Identifier: ' contextNode'
              Identifier: ' flags'
              Identifier: ' internalFlags'
              Identifier: ' tracker'
      IfStatement
        PrefixUnaryExpression
          Identifier: 'typeNode'
        Block
          ReturnStatement
            Identifier: ' undefined'
      ReturnStatement
        CallExpression
          Identifier: ' typeNodeToAutoImportableTypeNode'
          Identifier: 'typeNode'
          Identifier: ' importAdder'
          Identifier: ' scriptTarget'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' typeNodeToAutoImportableTypeNode'
    Parameter
      Identifier: 'typeNode'
      TypeReference
        Identifier: ' TypeNode'
    Parameter
      Identifier: ' importAdder'
      TypeReference
        Identifier: ' ImportAdder'
    Parameter
      Identifier: ' scriptTarget'
      TypeReference
        Identifier: ' ScriptTarget'
    UnionType
      TypeReference
        Identifier: ' TypeNode'
      UndefinedKeyword
    Block
      IfStatement
        BinaryExpression
          Identifier: 'typeNode'
          AmpersandAmpersandToken
          CallExpression
            Identifier: ' isImportTypeNode'
            Identifier: 'typeNode'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' importableReference'
                CallExpression
                  Identifier: ' tryGetAutoImportableReferenceFromTypeNode'
                  Identifier: 'typeNode'
                  Identifier: ' scriptTarget'
          IfStatement
            Identifier: 'importableReference'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            importSymbols'
                  Identifier: 'importAdder'
                  PropertyAccessExpression
                    Identifier: ' importableReference'
                    Identifier: 'symbols'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            typeNode'
                  EqualsToken
                  PropertyAccessExpression
                    Identifier: ' importableReference'
                    Identifier: 'typeNode'
      ReturnStatement
        CallExpression
          Identifier: ' getSynthesizedDeepClone'
          Identifier: 'typeNode'
  FunctionDeclaration
    Identifier: ' endOfRequiredTypeParameters'
    Parameter
      Identifier: 'checker'
      TypeReference
        Identifier: ' TypeChecker'
    Parameter
      Identifier: ' type'
      TypeReference
        Identifier: ' GenericType'
    NumberKeyword
    Block
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            Identifier: '
    Debug'
            Identifier: 'assert'
          PropertyAccessExpression
            Identifier: 'type'
            Identifier: 'typeArguments'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' fullTypeArguments'
            PropertyAccessExpression
              Identifier: ' type'
              Identifier: 'typeArguments'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' target'
            PropertyAccessExpression
              Identifier: ' type'
              Identifier: 'target'
      ForStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' cutoff'
            NumericLiteral
        BinaryExpression
          Identifier: ' cutoff'
          LessThanToken
          PropertyAccessExpression
            Identifier: ' fullTypeArguments'
            Identifier: 'length'
        PostfixUnaryExpression
          Identifier: ' cutoff'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' typeArguments'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' fullTypeArguments'
                    Identifier: 'slice'
                  NumericLiteral
                  Identifier: ' cutoff'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' filledIn'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' checker'
                    Identifier: 'fillMissingTypeArguments'
                  Identifier: 'typeArguments'
                  PropertyAccessExpression
                    Identifier: ' target'
                    Identifier: 'typeParameters'
                  Identifier: ' cutoff'
                  FalseKeyword
          IfStatement
            CallExpression
              PropertyAccessExpression
                Identifier: 'filledIn'
                Identifier: 'every'
              ArrowFunction
                Parameter
                  Identifier: 'fill'
                Parameter
                  Identifier: ' i'
                EqualsGreaterThanToken
                BinaryExpression
                  Identifier: ' fill'
                  EqualsEqualsEqualsToken
                  ElementAccessExpression
                    Identifier: ' fullTypeArguments'
                    Identifier: 'i'
            Block
              ReturnStatement
                Identifier: ' cutoff'
      ReturnStatement
        PropertyAccessExpression
          Identifier: ' fullTypeArguments'
          Identifier: 'length'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' typeToMinimizedReferenceType'
    Parameter
      Identifier: 'checker'
      TypeReference
        Identifier: ' TypeChecker'
    Parameter
      Identifier: ' type'
      TypeReference
        Identifier: ' Type'
    Parameter
      Identifier: ' contextNode'
      UnionType
        TypeReference
          Identifier: ' Node'
        UndefinedKeyword
    Parameter
      Identifier: ' flags'
      QuestionToken
      TypeReference
        Identifier: ' NodeBuilderFlags'
    Parameter
      Identifier: ' internalFlags'
      QuestionToken
      TypeReference
        Identifier: ' InternalNodeBuilderFlags'
    Parameter
      Identifier: ' tracker'
      QuestionToken
      TypeReference
        Identifier: ' SymbolTracker'
    UnionType
      TypeReference
        Identifier: ' TypeNode'
      UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' typeNode'
            CallExpression
              PropertyAccessExpression
                Identifier: ' checker'
                Identifier: 'typeToTypeNode'
              Identifier: 'type'
              Identifier: ' contextNode'
              Identifier: ' flags'
              Identifier: ' internalFlags'
              Identifier: ' tracker'
      IfStatement
        PrefixUnaryExpression
          Identifier: 'typeNode'
        Block
          ReturnStatement
            Identifier: ' undefined'
      IfStatement
        CallExpression
          Identifier: 'isTypeReferenceNode'
          Identifier: 'typeNode'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' genericType'
                AsExpression
                  Identifier: ' type'
                  TypeReference
                    Identifier: ' GenericType'
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'genericType'
                Identifier: 'typeArguments'
              AmpersandAmpersandToken
              PropertyAccessExpression
                Identifier: ' typeNode'
                Identifier: 'typeArguments'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' cutoff'
                    CallExpression
                      Identifier: ' endOfRequiredTypeParameters'
                      Identifier: 'checker'
                      Identifier: ' genericType'
              IfStatement
                BinaryExpression
                  Identifier: 'cutoff'
                  LessThanToken
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: ' typeNode'
                      Identifier: 'typeArguments'
                    Identifier: 'length'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' newTypeArguments'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' factory'
                            Identifier: 'createNodeArray'
                          CallExpression
                            PropertyAccessExpression
                              PropertyAccessExpression
                                Identifier: 'typeNode'
                                Identifier: 'typeArguments'
                              Identifier: 'slice'
                            NumericLiteral
                            Identifier: ' cutoff'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                typeNode'
                      EqualsToken
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' factory'
                          Identifier: 'updateTypeReferenceNode'
                        Identifier: 'typeNode'
                        PropertyAccessExpression
                          Identifier: ' typeNode'
                          Identifier: 'typeName'
                        Identifier: ' newTypeArguments'
      ReturnStatement
        Identifier: ' typeNode'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' typePredicateToAutoImportableTypeNode'
    Parameter
      Identifier: 'checker'
      TypeReference
        Identifier: ' TypeChecker'
    Parameter
      Identifier: ' importAdder'
      TypeReference
        Identifier: ' ImportAdder'
    Parameter
      Identifier: ' typePredicate'
      TypeReference
        Identifier: ' TypePredicate'
    Parameter
      Identifier: ' contextNode'
      UnionType
        TypeReference
          Identifier: ' Node'
        UndefinedKeyword
    Parameter
      Identifier: ' scriptTarget'
      TypeReference
        Identifier: ' ScriptTarget'
    Parameter
      Identifier: ' flags'
      QuestionToken
      TypeReference
        Identifier: ' NodeBuilderFlags'
    Parameter
      Identifier: ' internalFlags'
      QuestionToken
      TypeReference
        Identifier: ' InternalNodeBuilderFlags'
    Parameter
      Identifier: ' tracker'
      QuestionToken
      TypeReference
        Identifier: ' SymbolTracker'
    UnionType
      TypeReference
        Identifier: ' TypeNode'
      UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' typePredicateNode'
            CallExpression
              PropertyAccessExpression
                Identifier: ' checker'
                Identifier: 'typePredicateToTypePredicateNode'
              Identifier: 'typePredicate'
              Identifier: ' contextNode'
              Identifier: ' flags'
              Identifier: ' internalFlags'
              Identifier: ' tracker'
      IfStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: 'typePredicateNode'
            QuestionDotToken
            Identifier: 'type'
          AmpersandAmpersandToken
          CallExpression
            Identifier: ' isImportTypeNode'
            PropertyAccessExpression
              Identifier: 'typePredicateNode'
              Identifier: 'type'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' importableReference'
                CallExpression
                  Identifier: ' tryGetAutoImportableReferenceFromTypeNode'
                  PropertyAccessExpression
                    Identifier: 'typePredicateNode'
                    Identifier: 'type'
                  Identifier: ' scriptTarget'
          IfStatement
            Identifier: 'importableReference'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            importSymbols'
                  Identifier: 'importAdder'
                  PropertyAccessExpression
                    Identifier: ' importableReference'
                    Identifier: 'symbols'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            typePredicateNode'
                  EqualsToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' factory'
                      Identifier: 'updateTypePredicateNode'
                    Identifier: 'typePredicateNode'
                    PropertyAccessExpression
                      Identifier: ' typePredicateNode'
                      Identifier: 'assertsModifier'
                    PropertyAccessExpression
                      Identifier: ' typePredicateNode'
                      Identifier: 'parameterName'
                    PropertyAccessExpression
                      Identifier: ' importableReference'
                      Identifier: 'typeNode'
      ReturnStatement
        CallExpression
          Identifier: ' getSynthesizedDeepClone'
          Identifier: 'typePredicateNode'
  FunctionDeclaration
    Identifier: ' typeContainsTypeParameter'
    Parameter
      Identifier: 'type'
      TypeReference
        Identifier: ' Type'
    Block
      IfStatement
        CallExpression
          PropertyAccessExpression
            Identifier: 'type'
            Identifier: 'isUnionOrIntersection'
        Block
          ReturnStatement
            CallExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: ' type'
                  Identifier: 'types'
                Identifier: 'some'
              Identifier: 'typeContainsTypeParameter'
      ReturnStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: ' type'
            Identifier: 'flags'
          AmpersandToken
          PropertyAccessExpression
            Identifier: ' TypeFlags'
            Identifier: 'TypeParameter'
  FunctionDeclaration
    Identifier: ' getArgumentTypesAndTypeParameters'
    Parameter
      Identifier: 'checker'
      TypeReference
        Identifier: ' TypeChecker'
    Parameter
      Identifier: ' importAdder'
      TypeReference
        Identifier: ' ImportAdder'
    Parameter
      Identifier: ' instanceTypes'
      ArrayType
        TypeReference
          Identifier: ' Type'
    Parameter
      Identifier: ' contextNode'
      UnionType
        TypeReference
          Identifier: ' Node'
        UndefinedKeyword
    Parameter
      Identifier: ' scriptTarget'
      TypeReference
        Identifier: ' ScriptTarget'
    Parameter
      Identifier: ' flags'
      QuestionToken
      TypeReference
        Identifier: ' NodeBuilderFlags'
    Parameter
      Identifier: ' internalFlags'
      QuestionToken
      TypeReference
        Identifier: ' InternalNodeBuilderFlags'
    Parameter
      Identifier: ' tracker'
      QuestionToken
      TypeReference
        Identifier: ' SymbolTracker'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' argumentTypeNodes'
            ArrayType
              TypeReference
                Identifier: ' TypeNode'
            ArrayLiteralExpression
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' argumentTypeParameters'
            NewExpression
              Identifier: ' Map'
              StringKeyword
              UnionType
                TypeReference
                  Identifier: ' ArgumentTypeParameterAndConstraint'
                UndefinedKeyword
      ForStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' i'
            NumericLiteral
        BinaryExpression
          Identifier: ' i'
          LessThanToken
          PropertyAccessExpression
            Identifier: ' instanceTypes'
            Identifier: 'length'
        BinaryExpression
          Identifier: ' i'
          PlusEqualsToken
          NumericLiteral
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' instanceType'
                ElementAccessExpression
                  Identifier: ' instanceTypes'
                  Identifier: 'i'
          IfStatement
            BinaryExpression
              CallExpression
                PropertyAccessExpression
                  Identifier: 'instanceType'
                  Identifier: 'isUnionOrIntersection'
              AmpersandAmpersandToken
              CallExpression
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: ' instanceType'
                    Identifier: 'types'
                  Identifier: 'some'
                Identifier: 'typeContainsTypeParameter'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' synthesizedTypeParameterName'
                    CallExpression
                      Identifier: ' createTypeParameterName'
                      Identifier: 'i'
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            argumentTypeNodes'
                    Identifier: 'push'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: 'factory'
                      Identifier: 'createTypeReferenceNode'
                    Identifier: 'synthesizedTypeParameterName'
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            argumentTypeParameters'
                    Identifier: 'set'
                  Identifier: 'synthesizedTypeParameterName'
                  Identifier: ' undefined'
              ContinueStatement
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' widenedInstanceType'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' checker'
                    Identifier: 'getBaseTypeOfLiteralType'
                  Identifier: 'instanceType'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' argumentTypeNode'
                CallExpression
                  Identifier: ' typeToAutoImportableTypeNode'
                  Identifier: 'checker'
                  Identifier: ' importAdder'
                  Identifier: ' widenedInstanceType'
                  Identifier: ' contextNode'
                  Identifier: ' scriptTarget'
                  Identifier: ' flags'
                  Identifier: ' internalFlags'
                  Identifier: ' tracker'
          IfStatement
            PrefixUnaryExpression
              Identifier: 'argumentTypeNode'
            Block
              ContinueStatement
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '

        argumentTypeNodes'
                Identifier: 'push'
              Identifier: 'argumentTypeNode'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' argumentTypeParameter'
                CallExpression
                  Identifier: ' getFirstTypeParameterName'
                  Identifier: 'instanceType'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' instanceTypeConstraint'
                ConditionalExpression
                  BinaryExpression
                    BinaryExpression
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' instanceType'
                          Identifier: 'isTypeParameter'
                      AmpersandAmpersandToken
                      PropertyAccessExpression
                        Identifier: ' instanceType'
                        Identifier: 'constraint'
                    AmpersandAmpersandToken
                    PrefixUnaryExpression
                      CallExpression
                        Identifier: 'isAnonymousObjectConstraintType'
                        PropertyAccessExpression
                          Identifier: 'instanceType'
                          Identifier: 'constraint'
                  QuestionToken
                  CallExpression
                    Identifier: ' typeToAutoImportableTypeNode'
                    Identifier: 'checker'
                    Identifier: ' importAdder'
                    PropertyAccessExpression
                      Identifier: ' instanceType'
                      Identifier: 'constraint'
                    Identifier: ' contextNode'
                    Identifier: ' scriptTarget'
                    Identifier: ' flags'
                    Identifier: ' internalFlags'
                    Identifier: ' tracker'
                  ColonToken
                  Identifier: ' undefined'
          IfStatement
            Identifier: 'argumentTypeParameter'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            argumentTypeParameters'
                    Identifier: 'set'
                  Identifier: 'argumentTypeParameter'
                  ObjectLiteralExpression
                    PropertyAssignment
                      Identifier: ' argumentType'
                      Identifier: ' instanceType'
                    PropertyAssignment
                      Identifier: ' constraint'
                      Identifier: ' instanceTypeConstraint'
      ReturnStatement
        ObjectLiteralExpression
          ShorthandPropertyAssignment
            Identifier: ' argumentTypeNodes'
          PropertyAssignment
            Identifier: ' argumentTypeParameters'
            CallExpression
              Identifier: ' arrayFrom'
              CallExpression
                PropertyAccessExpression
                  Identifier: 'argumentTypeParameters'
                  Identifier: 'entries'
  FunctionDeclaration
    Identifier: ' isAnonymousObjectConstraintType'
    Parameter
      Identifier: 'type'
      TypeReference
        Identifier: ' Type'
    Block
      ReturnStatement
        BinaryExpression
          ParenthesizedExpression
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'type'
                Identifier: 'flags'
              AmpersandToken
              PropertyAccessExpression
                Identifier: ' TypeFlags'
                Identifier: 'Object'
          AmpersandAmpersandToken
          BinaryExpression
            PropertyAccessExpression
              ParenthesizedExpression
                AsExpression
                  Identifier: 'type'
                  TypeReference
                    Identifier: ' ObjectType'
              Identifier: 'objectFlags'
            EqualsEqualsEqualsToken
            PropertyAccessExpression
              Identifier: ' ObjectFlags'
              Identifier: 'Anonymous'
  FunctionDeclaration
    Identifier: ' getFirstTypeParameterName'
    Parameter
      Identifier: 'type'
      TypeReference
        Identifier: ' Type'
    UnionType
      StringKeyword
      UndefinedKeyword
    Block
      IfStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: 'type'
            Identifier: 'flags'
          AmpersandToken
          ParenthesizedExpression
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'TypeFlags'
                Identifier: 'Union'
              BarToken
              PropertyAccessExpression
                Identifier: ' TypeFlags'
                Identifier: 'Intersection'
        Block
          ForOfStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' subType'
            PropertyAccessExpression
              ParenthesizedExpression
                AsExpression
                  Identifier: 'type'
                  UnionType
                    TypeReference
                      Identifier: ' UnionType'
                    TypeReference
                      Identifier: ' IntersectionType'
              Identifier: 'types'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' subTypeName'
                    CallExpression
                      Identifier: ' getFirstTypeParameterName'
                      Identifier: 'subType'
              IfStatement
                Identifier: 'subTypeName'
                Block
                  ReturnStatement
                    Identifier: ' subTypeName'
      ReturnStatement
        ConditionalExpression
          BinaryExpression
            PropertyAccessExpression
              Identifier: ' type'
              Identifier: 'flags'
            AmpersandToken
            PropertyAccessExpression
              Identifier: ' TypeFlags'
              Identifier: 'TypeParameter'
          QuestionToken
          CallExpression
            PropertyAccessExpression
              CallExpression
                PropertyAccessExpression
                  Identifier: ' type'
                  Identifier: 'getSymbol'
              QuestionDotToken
              Identifier: 'getName'
          ColonToken
          Identifier: ' undefined'
  FunctionDeclaration
    Identifier: ' createDummyParameters'
    Parameter
      Identifier: 'argCount'
      NumberKeyword
    Parameter
      Identifier: ' names'
      UnionType
        ArrayType
          ParenthesizedType
            UnionType
              StringKeyword
              UndefinedKeyword
        UndefinedKeyword
    Parameter
      Identifier: ' types'
      UnionType
        ArrayType
          ParenthesizedType
            UnionType
              TypeReference
                Identifier: 'TypeNode'
              UndefinedKeyword
        UndefinedKeyword
    Parameter
      Identifier: ' minArgumentCount'
      UnionType
        NumberKeyword
        UndefinedKeyword
    Parameter
      Identifier: ' inJs'
      BooleanKeyword
    ArrayType
      TypeReference
        Identifier: ' ParameterDeclaration'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' parameters'
            ArrayType
              TypeReference
                Identifier: ' ParameterDeclaration'
            ArrayLiteralExpression
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' parameterNameCounts'
            NewExpression
              Identifier: ' Map'
              StringKeyword
              NumberKeyword
      ForStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' i'
            NumericLiteral
        BinaryExpression
          Identifier: ' i'
          LessThanToken
          Identifier: ' argCount'
        PostfixUnaryExpression
          Identifier: ' i'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' parameterName'
                BinaryExpression
                  ElementAccessExpression
                    Identifier: ' names'
                    QuestionDotToken
                    Identifier: 'i'
                  BarBarToken
                  TemplateExpression
                    TemplateHead
                    TemplateSpan
                      Identifier: 'i'
                      TemplateTail
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' parameterNameCount'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' parameterNameCounts'
                    Identifier: 'get'
                  Identifier: 'parameterName'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        parameterNameCounts'
                Identifier: 'set'
              Identifier: 'parameterName'
              BinaryExpression
                ParenthesizedExpression
                  BinaryExpression
                    Identifier: 'parameterNameCount'
                    BarBarToken
                    NumericLiteral
                PlusToken
                NumericLiteral
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' newParameter'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' factory'
                    Identifier: 'createParameterDeclaration'
                  Identifier: '
            /*modifiers*/ undefined'
                  Identifier: '
            /*dotDotDotToken*/ undefined'
                  BinaryExpression
                    Identifier: '
            /*name*/ parameterName'
                    PlusToken
                    ParenthesizedExpression
                      BinaryExpression
                        Identifier: 'parameterNameCount'
                        BarBarToken
                        StringLiteral
                  ConditionalExpression
                    BinaryExpression
                      BinaryExpression
                        Identifier: '
            /*questionToken*/ minArgumentCount'
                        ExclamationEqualsEqualsToken
                        Identifier: ' undefined'
                      AmpersandAmpersandToken
                      BinaryExpression
                        Identifier: ' i'
                        GreaterThanEqualsToken
                        Identifier: ' minArgumentCount'
                    QuestionToken
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' factory'
                        Identifier: 'createToken'
                      PropertyAccessExpression
                        Identifier: 'SyntaxKind'
                        Identifier: 'QuestionToken'
                    ColonToken
                    Identifier: ' undefined'
                  ConditionalExpression
                    Identifier: '
            /*type*/ inJs'
                    QuestionToken
                    Identifier: ' undefined'
                    ColonToken
                    BinaryExpression
                      ElementAccessExpression
                        Identifier: ' types'
                        QuestionDotToken
                        Identifier: 'i'
                      BarBarToken
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' factory'
                          Identifier: 'createKeywordTypeNode'
                        PropertyAccessExpression
                          Identifier: 'SyntaxKind'
                          Identifier: 'UnknownKeyword'
                  Identifier: '
            /*initializer*/ undefined'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        parameters'
                Identifier: 'push'
              Identifier: 'newParameter'
      ReturnStatement
        Identifier: ' parameters'
  FunctionDeclaration
    Identifier: ' createMethodImplementingSignatures'
    Parameter
      Identifier: '
    checker'
      TypeReference
        Identifier: ' TypeChecker'
    Parameter
      Identifier: '
    context'
      TypeReference
        Identifier: ' TypeConstructionContext'
    Parameter
      Identifier: '
    enclosingDeclaration'
      TypeReference
        Identifier: ' ClassLikeDeclaration'
    Parameter
      Identifier: '
    signatures'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' Signature'
    Parameter
      Identifier: '
    name'
      TypeReference
        Identifier: ' PropertyName'
    Parameter
      Identifier: '
    optional'
      BooleanKeyword
    Parameter
      Identifier: '
    modifiers'
      UnionType
        TypeOperator
          ArrayType
            TypeReference
              Identifier: ' Modifier'
        UndefinedKeyword
    Parameter
      Identifier: '
    quotePreference'
      TypeReference
        Identifier: ' QuotePreference'
    Parameter
      Identifier: '
    body'
      UnionType
        TypeReference
          Identifier: ' Block'
        UndefinedKeyword
    TypeReference
      Identifier: ' MethodDeclaration'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' maxArgsSignature'
            ElementAccessExpression
              Identifier: ' signatures'
              NumericLiteral
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' minArgumentCount'
            PropertyAccessExpression
              ElementAccessExpression
                Identifier: ' signatures'
                NumericLiteral
              Identifier: 'minArgumentCount'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' someSigHasRestParameter'
            FalseKeyword
      ForOfStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' sig'
        Identifier: ' signatures'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        minArgumentCount'
              EqualsToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' Math'
                  Identifier: 'min'
                PropertyAccessExpression
                  Identifier: 'sig'
                  Identifier: 'minArgumentCount'
                Identifier: ' minArgumentCount'
          IfStatement
            CallExpression
              Identifier: 'signatureHasRestParameter'
              Identifier: 'sig'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            someSigHasRestParameter'
                  EqualsToken
                  TrueKeyword
          IfStatement
            BinaryExpression
              BinaryExpression
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: 'sig'
                    Identifier: 'parameters'
                  Identifier: 'length'
                GreaterThanEqualsToken
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: ' maxArgsSignature'
                    Identifier: 'parameters'
                  Identifier: 'length'
              AmpersandAmpersandToken
              ParenthesizedExpression
                BinaryExpression
                  PrefixUnaryExpression
                    CallExpression
                      Identifier: 'signatureHasRestParameter'
                      Identifier: 'sig'
                  BarBarToken
                  CallExpression
                    Identifier: ' signatureHasRestParameter'
                    Identifier: 'maxArgsSignature'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            maxArgsSignature'
                  EqualsToken
                  Identifier: ' sig'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' maxNonRestArgs'
            BinaryExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: ' maxArgsSignature'
                  Identifier: 'parameters'
                Identifier: 'length'
              MinusToken
              ParenthesizedExpression
                ConditionalExpression
                  CallExpression
                    Identifier: 'signatureHasRestParameter'
                    Identifier: 'maxArgsSignature'
                  QuestionToken
                  NumericLiteral
                  ColonToken
                  NumericLiteral
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' maxArgsParameterSymbolNames'
            CallExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: ' maxArgsSignature'
                  Identifier: 'parameters'
                Identifier: 'map'
              ArrowFunction
                Parameter
                  Identifier: 'symbol'
                EqualsGreaterThanToken
                PropertyAccessExpression
                  Identifier: ' symbol'
                  Identifier: 'name'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' parameters'
            CallExpression
              Identifier: ' createDummyParameters'
              Identifier: 'maxNonRestArgs'
              Identifier: ' maxArgsParameterSymbolNames'
              Identifier: ' /*types*/ undefined'
              Identifier: ' minArgumentCount'
              FalseKeyword
      IfStatement
        Identifier: 'someSigHasRestParameter'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' restParameter'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' factory'
                    Identifier: 'createParameterDeclaration'
                  Identifier: '
            /*modifiers*/ undefined'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
            factory'
                      Identifier: 'createToken'
                    PropertyAccessExpression
                      Identifier: 'SyntaxKind'
                      Identifier: 'DotDotDotToken'
                  BinaryExpression
                    ElementAccessExpression
                      Identifier: '
            maxArgsParameterSymbolNames'
                      Identifier: 'maxNonRestArgs'
                    BarBarToken
                    StringLiteral
                  ConditionalExpression
                    BinaryExpression
                      Identifier: '
            /*questionToken*/ maxNonRestArgs'
                      GreaterThanEqualsToken
                      Identifier: ' minArgumentCount'
                    QuestionToken
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' factory'
                        Identifier: 'createToken'
                      PropertyAccessExpression
                        Identifier: 'SyntaxKind'
                        Identifier: 'QuestionToken'
                    ColonToken
                    Identifier: ' undefined'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
            factory'
                      Identifier: 'createArrayTypeNode'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: 'factory'
                        Identifier: 'createKeywordTypeNode'
                      PropertyAccessExpression
                        Identifier: 'SyntaxKind'
                        Identifier: 'UnknownKeyword'
                  Identifier: '
            /*initializer*/ undefined'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        parameters'
                Identifier: 'push'
              Identifier: 'restParameter'
      ReturnStatement
        CallExpression
          Identifier: ' createStubbedMethod'
          Identifier: '
        modifiers'
          Identifier: '
        name'
          Identifier: '
        optional'
          Identifier: '
        /*typeParameters*/ undefined'
          Identifier: '
        parameters'
          CallExpression
            Identifier: '
        getReturnTypeFromSignatures'
            Identifier: 'signatures'
            Identifier: ' checker'
            Identifier: ' context'
            Identifier: ' enclosingDeclaration'
          Identifier: '
        quotePreference'
          Identifier: '
        body'
  FunctionDeclaration
    Identifier: ' getReturnTypeFromSignatures'
    Parameter
      Identifier: 'signatures'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' Signature'
    Parameter
      Identifier: ' checker'
      TypeReference
        Identifier: ' TypeChecker'
    Parameter
      Identifier: ' context'
      TypeReference
        Identifier: ' TypeConstructionContext'
    Parameter
      Identifier: ' enclosingDeclaration'
      TypeReference
        Identifier: ' ClassLikeDeclaration'
    UnionType
      TypeReference
        Identifier: ' TypeNode'
      UndefinedKeyword
    Block
      IfStatement
        CallExpression
          Identifier: 'length'
          Identifier: 'signatures'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' type'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' checker'
                    Identifier: 'getUnionType'
                  CallExpression
                    Identifier: 'map'
                    Identifier: 'signatures'
                    PropertyAccessExpression
                      Identifier: ' checker'
                      Identifier: 'getReturnTypeOfSignature'
          ReturnStatement
            CallExpression
              PropertyAccessExpression
                Identifier: ' checker'
                Identifier: 'typeToTypeNode'
              Identifier: 'type'
              Identifier: ' enclosingDeclaration'
              PropertyAccessExpression
                Identifier: ' NodeBuilderFlags'
                Identifier: 'NoTruncation'
              PropertyAccessExpression
                Identifier: ' InternalNodeBuilderFlags'
                Identifier: 'AllowUnresolvedNames'
              CallExpression
                Identifier: ' getNoopSymbolTrackerWithResolver'
                Identifier: 'context'
  FunctionDeclaration
    Identifier: ' createStubbedMethod'
    Parameter
      Identifier: '
    modifiers'
      UnionType
        TypeOperator
          ArrayType
            TypeReference
              Identifier: ' Modifier'
        UndefinedKeyword
    Parameter
      Identifier: '
    name'
      TypeReference
        Identifier: ' PropertyName'
    Parameter
      Identifier: '
    optional'
      BooleanKeyword
    Parameter
      Identifier: '
    typeParameters'
      UnionType
        TypeOperator
          ArrayType
            TypeReference
              Identifier: ' TypeParameterDeclaration'
        UndefinedKeyword
    Parameter
      Identifier: '
    parameters'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' ParameterDeclaration'
    Parameter
      Identifier: '
    returnType'
      UnionType
        TypeReference
          Identifier: ' TypeNode'
        UndefinedKeyword
    Parameter
      Identifier: '
    quotePreference'
      TypeReference
        Identifier: ' QuotePreference'
    Parameter
      Identifier: '
    body'
      UnionType
        TypeReference
          Identifier: ' Block'
        UndefinedKeyword
    TypeReference
      Identifier: ' MethodDeclaration'
    Block
      ReturnStatement
        CallExpression
          PropertyAccessExpression
            Identifier: ' factory'
            Identifier: 'createMethodDeclaration'
          Identifier: '
        modifiers'
          Identifier: '
        /*asteriskToken*/ undefined'
          Identifier: '
        name'
          ConditionalExpression
            Identifier: '
        optional'
            QuestionToken
            CallExpression
              PropertyAccessExpression
                Identifier: ' factory'
                Identifier: 'createToken'
              PropertyAccessExpression
                Identifier: 'SyntaxKind'
                Identifier: 'QuestionToken'
            ColonToken
            Identifier: ' undefined'
          Identifier: '
        typeParameters'
          Identifier: '
        parameters'
          Identifier: '
        returnType'
          BinaryExpression
            Identifier: '
        body'
            BarBarToken
            CallExpression
              Identifier: ' createStubbedMethodBody'
              Identifier: 'quotePreference'
  FunctionDeclaration
    Identifier: ' createStubbedMethodBody'
    Parameter
      Identifier: 'quotePreference'
      TypeReference
        Identifier: ' QuotePreference'
    Block
      ReturnStatement
        CallExpression
          Identifier: ' createStubbedBody'
          PropertyAccessExpression
            PropertyAccessExpression
              Identifier: 'Diagnostics'
              Identifier: 'Method_not_implemented'
            Identifier: 'message'
          Identifier: ' quotePreference'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' createStubbedBody'
    Parameter
      Identifier: 'text'
      StringKeyword
    Parameter
      Identifier: ' quotePreference'
      TypeReference
        Identifier: ' QuotePreference'
    TypeReference
      Identifier: ' Block'
    Block
      ReturnStatement
        CallExpression
          PropertyAccessExpression
            Identifier: ' factory'
            Identifier: 'createBlock'
          ArrayLiteralExpression
            CallExpression
              PropertyAccessExpression
                Identifier: 'factory'
                Identifier: 'createThrowStatement'
              CallExpression
                PropertyAccessExpression
                  Identifier: '
            factory'
                  Identifier: 'createNewExpression'
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
                factory'
                    Identifier: 'createIdentifier'
                  StringLiteral
                Identifier: '
                /*typeArguments*/ undefined'
                ArrayLiteralExpression
                  CallExpression
                    PropertyAccessExpression
                      Identifier: 'factory'
                      Identifier: 'createStringLiteral'
                    Identifier: 'text'
                    BinaryExpression
                      Identifier: ' /*isSingleQuote*/ quotePreference'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' QuotePreference'
                        Identifier: 'Single'
          TrueKeyword
  FunctionDeclaration
    ExportKeyword
    Identifier: ' setJsonCompilerOptionValues'
    Parameter
      Identifier: '
    changeTracker'
      TypeReference
        QualifiedName
          Identifier: ' textChanges'
          Identifier: 'ChangeTracker'
    Parameter
      Identifier: '
    configFile'
      TypeReference
        Identifier: ' TsConfigSourceFile'
    Parameter
      Identifier: '
    options'
      ArrayType
        TupleType
          StringKeyword
          TypeReference
            Identifier: ' Expression'
    UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' tsconfigObjectLiteral'
            CallExpression
              Identifier: ' getTsConfigObjectLiteralExpression'
              Identifier: 'configFile'
      IfStatement
        PrefixUnaryExpression
          Identifier: 'tsconfigObjectLiteral'
        ReturnStatement
          Identifier: ' undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' compilerOptionsProperty'
            CallExpression
              Identifier: ' findJsonProperty'
              Identifier: 'tsconfigObjectLiteral'
              StringLiteral
      IfStatement
        BinaryExpression
          Identifier: 'compilerOptionsProperty'
          EqualsEqualsEqualsToken
          Identifier: ' undefined'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        changeTracker'
                Identifier: 'insertNodeAtObjectStart'
              Identifier: '
            configFile'
              Identifier: '
            tsconfigObjectLiteral'
              CallExpression
                Identifier: '
            createJsonPropertyAssignment'
                StringLiteral
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
                factory'
                    Identifier: 'createObjectLiteralExpression'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: 'options'
                      Identifier: 'map'
                    ArrowFunction
                      Parameter
                        ArrayBindingPattern
                          BindingElement
                            Identifier: 'optionName'
                          BindingElement
                            Identifier: ' optionValue'
                      EqualsGreaterThanToken
                      CallExpression
                        Identifier: ' createJsonPropertyAssignment'
                        Identifier: 'optionName'
                        Identifier: ' optionValue'
                  TrueKeyword
          ReturnStatement
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' compilerOptions'
            PropertyAccessExpression
              Identifier: ' compilerOptionsProperty'
              Identifier: 'initializer'
      IfStatement
        PrefixUnaryExpression
          CallExpression
            Identifier: 'isObjectLiteralExpression'
            Identifier: 'compilerOptions'
        Block
          ReturnStatement
      ForOfStatement
        VariableDeclarationList
          VariableDeclaration
            ArrayBindingPattern
              BindingElement
                Identifier: 'optionName'
              BindingElement
                Identifier: ' optionValue'
        Identifier: ' options'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' optionProperty'
                CallExpression
                  Identifier: ' findJsonProperty'
                  Identifier: 'compilerOptions'
                  Identifier: ' optionName'
          IfStatement
            BinaryExpression
              Identifier: 'optionProperty'
              EqualsEqualsEqualsToken
              Identifier: ' undefined'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            changeTracker'
                    Identifier: 'insertNodeAtObjectStart'
                  Identifier: 'configFile'
                  Identifier: ' compilerOptions'
                  CallExpression
                    Identifier: ' createJsonPropertyAssignment'
                    Identifier: 'optionName'
                    Identifier: ' optionValue'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            changeTracker'
                    Identifier: 'replaceNode'
                  Identifier: 'configFile'
                  PropertyAccessExpression
                    Identifier: ' optionProperty'
                    Identifier: 'initializer'
                  Identifier: ' optionValue'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' setJsonCompilerOptionValue'
    Parameter
      Identifier: '
    changeTracker'
      TypeReference
        QualifiedName
          Identifier: ' textChanges'
          Identifier: 'ChangeTracker'
    Parameter
      Identifier: '
    configFile'
      TypeReference
        Identifier: ' TsConfigSourceFile'
    Parameter
      Identifier: '
    optionName'
      StringKeyword
    Parameter
      Identifier: '
    optionValue'
      TypeReference
        Identifier: ' Expression'
    VoidKeyword
    Block
      ExpressionStatement
        CallExpression
          Identifier: '
    setJsonCompilerOptionValues'
          Identifier: 'changeTracker'
          Identifier: ' configFile'
          ArrayLiteralExpression
            ArrayLiteralExpression
              Identifier: 'optionName'
              Identifier: ' optionValue'
  FunctionDeclaration
    Identifier: ' createJsonPropertyAssignment'
    Parameter
      Identifier: 'name'
      StringKeyword
    Parameter
      Identifier: ' initializer'
      TypeReference
        Identifier: ' Expression'
    Block
      ReturnStatement
        CallExpression
          PropertyAccessExpression
            Identifier: ' factory'
            Identifier: 'createPropertyAssignment'
          CallExpression
            PropertyAccessExpression
              Identifier: 'factory'
              Identifier: 'createStringLiteral'
            Identifier: 'name'
          Identifier: ' initializer'
  FunctionDeclaration
    Identifier: ' findJsonProperty'
    Parameter
      Identifier: 'obj'
      TypeReference
        Identifier: ' ObjectLiteralExpression'
    Parameter
      Identifier: ' name'
      StringKeyword
    UnionType
      TypeReference
        Identifier: ' PropertyAssignment'
      UndefinedKeyword
    Block
      ReturnStatement
        CallExpression
          Identifier: ' find'
          PropertyAccessExpression
            Identifier: 'obj'
            Identifier: 'properties'
          ArrowFunction
            Parameter
              Identifier: 'p'
            TypePredicate
              Identifier: ' p'
              TypeReference
                Identifier: ' PropertyAssignment'
            EqualsGreaterThanToken
            BinaryExpression
              BinaryExpression
                BinaryExpression
                  CallExpression
                    Identifier: ' isPropertyAssignment'
                    Identifier: 'p'
                  AmpersandAmpersandToken
                  PrefixUnaryExpression
                    PrefixUnaryExpression
                      PropertyAccessExpression
                        Identifier: 'p'
                        Identifier: 'name'
                AmpersandAmpersandToken
                CallExpression
                  Identifier: ' isStringLiteral'
                  PropertyAccessExpression
                    Identifier: 'p'
                    Identifier: 'name'
              AmpersandAmpersandToken
              BinaryExpression
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: ' p'
                    Identifier: 'name'
                  Identifier: 'text'
                EqualsEqualsEqualsToken
                Identifier: ' name'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' tryGetAutoImportableReferenceFromTypeNode'
    Parameter
      Identifier: 'importTypeNode'
      UnionType
        TypeReference
          Identifier: ' TypeNode'
        UndefinedKeyword
    Parameter
      Identifier: ' scriptTarget'
      TypeReference
        Identifier: ' ScriptTarget'
    UnionType
      TypeLiteral
        PropertySignature
          Identifier: '
    typeNode'
          TypeReference
            Identifier: ' TypeNode'
        PropertySignature
          Identifier: '
    symbols'
          ArrayType
            TypeReference
              Identifier: ' Symbol'
      UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' symbols'
            UnionType
              ArrayType
                TypeReference
                  Identifier: ' Symbol'
              UndefinedKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' typeNode'
            CallExpression
              Identifier: ' visitNode'
              Identifier: 'importTypeNode'
              Identifier: ' visit'
              Identifier: ' isTypeNode'
      IfStatement
        BinaryExpression
          Identifier: 'symbols'
          AmpersandAmpersandToken
          Identifier: ' typeNode'
        Block
          ReturnStatement
            ObjectLiteralExpression
              ShorthandPropertyAssignment
                Identifier: ' typeNode'
              ShorthandPropertyAssignment
                Identifier: ' symbols'
      FunctionDeclaration
        Identifier: ' visit'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypeReference
          Identifier: ' Node'
        Block
          IfStatement
            BinaryExpression
              CallExpression
                Identifier: 'isLiteralImportTypeNode'
                Identifier: 'node'
              AmpersandAmpersandToken
              PropertyAccessExpression
                Identifier: ' node'
                Identifier: 'qualifier'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' firstIdentifier'
                    CallExpression
                      Identifier: ' getFirstIdentifier'
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'qualifier'
              IfStatement
                PrefixUnaryExpression
                  PropertyAccessExpression
                    Identifier: 'firstIdentifier'
                    Identifier: 'symbol'
                Block
                  ReturnStatement
                    CallExpression
                      Identifier: ' visitEachChild'
                      Identifier: 'node'
                      Identifier: ' visit'
                      Identifier: ' /*context*/ undefined'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' name'
                    CallExpression
                      Identifier: ' getNameForExportedSymbol'
                      PropertyAccessExpression
                        Identifier: 'firstIdentifier'
                        Identifier: 'symbol'
                      Identifier: ' scriptTarget'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' qualifier'
                    ConditionalExpression
                      BinaryExpression
                        Identifier: ' name'
                        ExclamationEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' firstIdentifier'
                          Identifier: 'text'
                      QuestionToken
                      CallExpression
                        Identifier: ' replaceFirstIdentifierOfEntityName'
                        PropertyAccessExpression
                          Identifier: 'node'
                          Identifier: 'qualifier'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' factory'
                            Identifier: 'createIdentifier'
                          Identifier: 'name'
                      ColonToken
                      PropertyAccessExpression
                        Identifier: ' node'
                        Identifier: 'qualifier'
              ExpressionStatement
                BinaryExpression
                  Identifier: '

            symbols'
                  EqualsToken
                  CallExpression
                    Identifier: ' append'
                    Identifier: 'symbols'
                    PropertyAccessExpression
                      Identifier: ' firstIdentifier'
                      Identifier: 'symbol'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' typeArguments'
                    CallExpression
                      Identifier: ' visitNodes'
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'typeArguments'
                      Identifier: ' visit'
                      Identifier: ' isTypeNode'
              ReturnStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' factory'
                    Identifier: 'createTypeReferenceNode'
                  Identifier: 'qualifier'
                  Identifier: ' typeArguments'
          ReturnStatement
            CallExpression
              Identifier: ' visitEachChild'
              Identifier: 'node'
              Identifier: ' visit'
              Identifier: ' /*context*/ undefined'
  FunctionDeclaration
    Identifier: ' replaceFirstIdentifierOfEntityName'
    Parameter
      Identifier: 'name'
      TypeReference
        Identifier: ' EntityName'
    Parameter
      Identifier: ' newIdentifier'
      TypeReference
        Identifier: ' Identifier'
    TypeReference
      Identifier: ' EntityName'
    Block
      IfStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: 'name'
            Identifier: 'kind'
          EqualsEqualsEqualsToken
          PropertyAccessExpression
            Identifier: ' SyntaxKind'
            Identifier: 'Identifier'
        Block
          ReturnStatement
            Identifier: ' newIdentifier'
      ReturnStatement
        CallExpression
          PropertyAccessExpression
            Identifier: ' factory'
            Identifier: 'createQualifiedName'
          CallExpression
            Identifier: 'replaceFirstIdentifierOfEntityName'
            PropertyAccessExpression
              Identifier: 'name'
              Identifier: 'left'
            Identifier: ' newIdentifier'
          PropertyAccessExpression
            Identifier: ' name'
            Identifier: 'right'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' importSymbols'
    Parameter
      Identifier: 'importAdder'
      TypeReference
        Identifier: ' ImportAdder'
    Parameter
      Identifier: ' symbols'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' Symbol'
    VoidKeyword
    Block
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            Identifier: '
    symbols'
            Identifier: 'forEach'
          ArrowFunction
            Parameter
              Identifier: 's'
            EqualsGreaterThanToken
            CallExpression
              PropertyAccessExpression
                Identifier: ' importAdder'
                Identifier: 'addImportFromExportedSymbol'
              Identifier: 's'
              TrueKeyword
  FunctionDeclaration
    ExportKeyword
    Identifier: ' findAncestorMatchingSpan'
    Parameter
      Identifier: 'sourceFile'
      TypeReference
        Identifier: ' SourceFile'
    Parameter
      Identifier: ' span'
      TypeReference
        Identifier: ' TextSpan'
    TypeReference
      Identifier: ' Node'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' end'
            CallExpression
              Identifier: ' textSpanEnd'
              Identifier: 'span'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' token'
            CallExpression
              Identifier: ' getTokenAtPosition'
              Identifier: 'sourceFile'
              PropertyAccessExpression
                Identifier: ' span'
                Identifier: 'start'
      WhileStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: 'token'
            Identifier: 'end'
          LessThanToken
          Identifier: ' end'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        token'
              EqualsToken
              PropertyAccessExpression
                Identifier: ' token'
                Identifier: 'parent'
      ReturnStatement
        Identifier: ' token'
