SourceFile
  ImportDeclaration
    ImportClause
      NamespaceImport
        Identifier: ' React'
    StringLiteral
  InterfaceDeclaration
    Identifier: ' Props'
    TypeParameter
      Identifier: 'T'
      TypeReference
        Identifier: ' OptionValues'
    PropertySignature
      Identifier: '
    value'
      QuestionToken
      UnionType
        TypeReference
          Identifier: ' Option'
          TypeReference
            Identifier: 'T'
        TypeReference
          Identifier: ' T'
    MethodSignature
      Identifier: '
    onChange'
      QuestionToken
      Parameter
        Identifier: 'value'
        UnionType
          TypeReference
            Identifier: ' Option'
            TypeReference
              Identifier: 'T'
          UndefinedKeyword
      VoidKeyword
  TypeAliasDeclaration
    Identifier: ' ExtractValueType'
    TypeParameter
      Identifier: 'T'
    ConditionalType
      TypeReference
        Identifier: ' T'
      TypeReference
        Identifier: ' ReactSelectProps'
        InferType
          TypeParameter
            Identifier: ' U'
      TypeReference
        Identifier: ' U'
      NeverKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' ReactSingleSelectProps'
    TypeParameter
      Identifier: '
    WrappedProps'
      TypeReference
        Identifier: ' ReactSelectProps'
        AnyKeyword
    TypeReference
      Identifier: ' Overwrite'
      TypeReference
        Identifier: '
    Omit'
        TypeReference
          Identifier: 'WrappedProps'
        LiteralType
          StringLiteral
      TypeReference
        Identifier: '
    Props'
        TypeReference
          Identifier: 'ExtractValueType'
          TypeReference
            Identifier: 'WrappedProps'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' createReactSingleSelect'
    TypeParameter
      Identifier: '
    WrappedProps'
      TypeReference
        Identifier: ' ReactSelectProps'
        AnyKeyword
    Parameter
      Identifier: '
    WrappedComponent'
      TypeReference
        QualifiedName
          Identifier: ' React'
          Identifier: 'ComponentType'
        TypeReference
          Identifier: 'WrappedProps'
    TypeReference
      QualifiedName
        Identifier: ' React'
        Identifier: 'ComponentType'
      TypeReference
        Identifier: 'ReactSingleSelectProps'
        TypeReference
          Identifier: 'WrappedProps'
    Block
      ReturnStatement
        ArrowFunction
          Parameter
            Identifier: 'props'
          EqualsGreaterThanToken
          Block
            ReturnStatement
              ParenthesizedExpression
                JsxSelfClosingElement
                  Identifier: 'ReactSelectClass'
                  TypeReference
                    Identifier: 'ExtractValueType'
                    TypeReference
                      Identifier: 'WrappedProps'
                  JsxAttributes
                    JsxAttribute
                      Identifier: 'props'
                    JsxAttribute
                      Identifier: '
                multi'
                      JsxExpression
                        FalseKeyword
                    JsxAttribute
                      Identifier: '
                autosize'
                      JsxExpression
                        FalseKeyword
                    JsxAttribute
                      Identifier: '
                value'
                      JsxExpression
                        PropertyAccessExpression
                          Identifier: 'props'
                          Identifier: 'value'
                    JsxAttribute
                      Identifier: '
                onChange'
                      JsxExpression
                        ArrowFunction
                          Parameter
                            Identifier: 'value'
                          EqualsGreaterThanToken
                          Block
                            IfStatement
                              PropertyAccessExpression
                                Identifier: 'props'
                                Identifier: 'onChange'
                              Block
                                ExpressionStatement
                                  CallExpression
                                    PropertyAccessExpression
                                      Identifier: '
                        props'
                                      Identifier: 'onChange'
                                    ConditionalExpression
                                      BinaryExpression
                                        Identifier: 'value'
                                        EqualsEqualsEqualsToken
                                        NullKeyword
                                      QuestionToken
                                      Identifier: ' undefined'
                                      ColonToken
                                      Identifier: ' value'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' Omit'
    TypeParameter
      Identifier: 'T'
    TypeParameter
      Identifier: ' K'
      TypeOperator
        AnyKeyword
    ConditionalType
      TypeReference
        Identifier: ' T'
      AnyKeyword
      TypeReference
        Identifier: ' Pick'
        TypeReference
          Identifier: 'T'
        TypeReference
          Identifier: ' Exclude'
          TypeOperator
            TypeReference
              Identifier: ' T'
          TypeReference
            Identifier: ' K'
      NeverKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' Overwrite'
    TypeParameter
      Identifier: 'T'
    TypeParameter
      Identifier: ' U'
    IntersectionType
      TypeReference
        Identifier: ' Omit'
        TypeReference
          Identifier: 'T'
        IntersectionType
          TypeOperator
            TypeReference
              Identifier: ' T'
          TypeOperator
            TypeReference
              Identifier: ' U'
      TypeReference
        Identifier: ' U'
  ClassDeclaration
    DeclareKeyword
    Identifier: ' ReactSelectClass'
    TypeParameter
      Identifier: 'TValue'
      TypeReference
        Identifier: ' OptionValues'
    HeritageClause
      ExpressionWithTypeArguments
        PropertyAccessExpression
          Identifier: ' React'
          Identifier: 'Component'
        TypeReference
          Identifier: 'ReactSelectProps'
          TypeReference
            Identifier: 'TValue'
    MethodDeclaration
      Identifier: '
    focus'
      VoidKeyword
    MethodDeclaration
      Identifier: '
    setValue'
      Parameter
        Identifier: 'value'
        TypeReference
          Identifier: ' Option'
          TypeReference
            Identifier: 'TValue'
      VoidKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' OptionComponentType'
    TypeParameter
      Identifier: 'TValue'
      TypeReference
        Identifier: ' OptionValues'
    TypeReference
      QualifiedName
        Identifier: ' React'
        Identifier: 'ComponentType'
      TypeReference
        Identifier: 'OptionComponentProps'
        TypeReference
          Identifier: 'TValue'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' ValueComponentType'
    TypeParameter
      Identifier: 'TValue'
      TypeReference
        Identifier: ' OptionValues'
    TypeReference
      QualifiedName
        Identifier: '  React'
        Identifier: 'ComponentType'
      TypeReference
        Identifier: 'ValueComponentProps'
        TypeReference
          Identifier: 'TValue'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' HandlerRendererResult'
    UnionType
      TypeReference
        QualifiedName
          Identifier: ' JSX'
          Identifier: 'Element'
      LiteralType
        NullKeyword
      LiteralType
        FalseKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' FocusOptionHandler'
    TypeParameter
      Identifier: 'TValue'
      TypeReference
        Identifier: ' OptionValues'
    FunctionType
      Parameter
        Identifier: 'option'
        TypeReference
          Identifier: ' Option'
          TypeReference
            Identifier: 'TValue'
      VoidKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' SelectValueHandler'
    TypeParameter
      Identifier: 'TValue'
      TypeReference
        Identifier: ' OptionValues'
    FunctionType
      Parameter
        Identifier: 'option'
        TypeReference
          Identifier: ' Option'
          TypeReference
            Identifier: 'TValue'
      VoidKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' ArrowRendererHandler'
    FunctionType
      Parameter
        Identifier: 'props'
        TypeReference
          Identifier: ' ArrowRendererProps'
      TypeReference
        Identifier: ' HandlerRendererResult'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' ClearRendererHandler'
    FunctionType
      TypeReference
        Identifier: ' HandlerRendererResult'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' FilterOptionHandler'
    TypeParameter
      Identifier: 'TValue'
      TypeReference
        Identifier: ' OptionValues'
    FunctionType
      Parameter
        Identifier: 'option'
        TypeReference
          Identifier: ' Option'
          TypeReference
            Identifier: 'TValue'
      Parameter
        Identifier: ' filter'
        StringKeyword
      BooleanKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' FilterOptionsHandler'
    TypeParameter
      Identifier: 'TValue'
      TypeReference
        Identifier: ' OptionValues'
    FunctionType
      Parameter
        Identifier: 'options'
        TypeReference
          Identifier: ' Options'
          TypeReference
            Identifier: 'TValue'
      Parameter
        Identifier: ' filter'
        StringKeyword
      Parameter
        Identifier: ' currentValues'
        TypeReference
          Identifier: ' Options'
          TypeReference
            Identifier: 'TValue'
      TypeReference
        Identifier: ' Options'
        TypeReference
          Identifier: 'TValue'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' InputRendererHandler'
    FunctionType
      Parameter
        Identifier: 'props'
        TypeLiteral
          IndexSignature
            Parameter
              Identifier: 'key'
              StringKeyword
            AnyKeyword
      TypeReference
        Identifier: ' HandlerRendererResult'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' MenuRendererHandler'
    TypeParameter
      Identifier: 'TValue'
      TypeReference
        Identifier: ' OptionValues'
    FunctionType
      Parameter
        Identifier: 'props'
        TypeReference
          Identifier: ' MenuRendererProps'
          TypeReference
            Identifier: 'TValue'
      TypeReference
        Identifier: ' HandlerRendererResult'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' OnCloseHandler'
    FunctionType
      VoidKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' OnInputChangeHandler'
    FunctionType
      Parameter
        Identifier: 'inputValue'
        StringKeyword
      StringKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' OnInputKeyDownHandler'
    TypeReference
      QualifiedName
        Identifier: ' React'
        Identifier: 'KeyboardEventHandler'
      UnionType
        TypeReference
          Identifier: 'HTMLDivElement'
        TypeReference
          Identifier: ' HTMLInputElement'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' OnMenuScrollToBottomHandler'
    FunctionType
      VoidKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' OnOpenHandler'
    FunctionType
      VoidKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' OnFocusHandler'
    TypeReference
      QualifiedName
        Identifier: ' React'
        Identifier: 'FocusEventHandler'
      UnionType
        TypeReference
          Identifier: 'HTMLDivElement'
        TypeReference
          Identifier: ' HTMLInputElement'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' OnBlurHandler'
    TypeReference
      QualifiedName
        Identifier: ' React'
        Identifier: 'FocusEventHandler'
      UnionType
        TypeReference
          Identifier: 'HTMLDivElement'
        TypeReference
          Identifier: ' HTMLInputElement'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' OptionRendererHandler'
    TypeParameter
      Identifier: 'TValue'
      TypeReference
        Identifier: ' OptionValues'
    FunctionType
      Parameter
        Identifier: 'option'
        TypeReference
          Identifier: ' Option'
          TypeReference
            Identifier: 'TValue'
      TypeReference
        Identifier: ' HandlerRendererResult'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' ValueRendererHandler'
    TypeParameter
      Identifier: 'TValue'
      TypeReference
        Identifier: ' OptionValues'
    FunctionType
      Parameter
        Identifier: 'option'
        TypeReference
          Identifier: ' Option'
          TypeReference
            Identifier: 'TValue'
      Parameter
        Identifier: ' index'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' HandlerRendererResult'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' OnValueClickHandler'
    TypeParameter
      Identifier: 'TValue'
      TypeReference
        Identifier: ' OptionValues'
    FunctionType
      Parameter
        Identifier: 'option'
        TypeReference
          Identifier: ' Option'
          TypeReference
            Identifier: 'TValue'
      Parameter
        Identifier: ' event'
        TypeReference
          QualifiedName
            Identifier: ' React'
            Identifier: 'MouseEvent'
          TypeReference
            Identifier: 'HTMLAnchorElement'
      VoidKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' IsOptionUniqueHandler'
    TypeParameter
      Identifier: 'TValue'
      TypeReference
        Identifier: ' OptionValues'
    FunctionType
      Parameter
        Identifier: 'arg'
        TypeLiteral
          PropertySignature
            Identifier: ' option'
            TypeReference
              Identifier: ' Option'
              TypeReference
                Identifier: 'TValue'
          PropertySignature
            Identifier: ' options'
            TypeReference
              Identifier: ' Options'
              TypeReference
                Identifier: 'TValue'
          PropertySignature
            Identifier: ' labelKey'
            StringKeyword
          PropertySignature
            Identifier: ' valueKey'
            StringKeyword
      BooleanKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' IsValidNewOptionHandler'
    FunctionType
      Parameter
        Identifier: 'arg'
        TypeLiteral
          PropertySignature
            Identifier: ' label'
            StringKeyword
      BooleanKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' NewOptionCreatorHandler'
    TypeParameter
      Identifier: 'TValue'
      TypeReference
        Identifier: ' OptionValues'
    FunctionType
      Parameter
        Identifier: 'arg'
        TypeLiteral
          PropertySignature
            Identifier: ' label'
            StringKeyword
          PropertySignature
            Identifier: ' labelKey'
            StringKeyword
          PropertySignature
            Identifier: ' valueKey'
            StringKeyword
      TypeReference
        Identifier: ' Option'
        TypeReference
          Identifier: 'TValue'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' PromptTextCreatorHandler'
    FunctionType
      Parameter
        Identifier: 'filterText'
        StringKeyword
      StringKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' ShouldKeyDownEventCreateNewOptionHandler'
    FunctionType
      Parameter
        Identifier: 'arg'
        TypeLiteral
          PropertySignature
            Identifier: ' keyCode'
            NumberKeyword
      BooleanKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' OnChangeSingleHandler'
    TypeParameter
      Identifier: 'TValue'
      TypeReference
        Identifier: ' OptionValues'
    TypeReference
      Identifier: ' OnChangeHandler'
      TypeReference
        Identifier: 'TValue'
      TypeReference
        Identifier: ' Option'
        TypeReference
          Identifier: 'TValue'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' OnChangeMultipleHandler'
    TypeParameter
      Identifier: 'TValue'
      TypeReference
        Identifier: ' OptionValues'
    TypeReference
      Identifier: ' OnChangeHandler'
      TypeReference
        Identifier: 'TValue'
      TypeReference
        Identifier: ' Options'
        TypeReference
          Identifier: 'TValue'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' OnChangeHandler'
    TypeParameter
      Identifier: 'TValue'
      TypeReference
        Identifier: ' OptionValues'
    TypeParameter
      Identifier: ' TOption'
      UnionType
        TypeReference
          Identifier: ' Option'
          TypeReference
            Identifier: 'TValue'
        TypeReference
          Identifier: ' Options'
          TypeReference
            Identifier: 'TValue'
    FunctionType
      Parameter
        Identifier: 'newValue'
        UnionType
          TypeReference
            Identifier: ' TOption'
          LiteralType
            NullKeyword
      VoidKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' OnNewOptionClickHandler'
    TypeParameter
      Identifier: 'TValue'
      TypeReference
        Identifier: ' OptionValues'
    FunctionType
      Parameter
        Identifier: 'option'
        TypeReference
          Identifier: ' Option'
          TypeReference
            Identifier: 'TValue'
      VoidKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' LoadOptionsHandler'
    TypeParameter
      Identifier: 'TValue'
      TypeReference
        Identifier: ' OptionValues'
    UnionType
      TypeReference
        Identifier: ' LoadOptionsAsyncHandler'
        TypeReference
          Identifier: 'TValue'
      TypeReference
        Identifier: ' LoadOptionsLegacyHandler'
        TypeReference
          Identifier: 'TValue'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' LoadOptionsAsyncHandler'
    TypeParameter
      Identifier: 'TValue'
      TypeReference
        Identifier: ' OptionValues'
    FunctionType
      Parameter
        Identifier: 'input'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          Identifier: 'AutocompleteResult'
          TypeReference
            Identifier: 'TValue'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' LoadOptionsLegacyHandler'
    TypeParameter
      Identifier: 'TValue'
      TypeReference
        Identifier: ' OptionValues'
    FunctionType
      Parameter
        Identifier: 'input'
        StringKeyword
      Parameter
        Identifier: ' callback'
        FunctionType
          Parameter
            Identifier: 'err'
            AnyKeyword
          Parameter
            Identifier: ' result'
            TypeReference
              Identifier: ' AutocompleteResult'
              TypeReference
                Identifier: 'TValue'
          VoidKeyword
      VoidKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' AutocompleteResult'
    TypeParameter
      Identifier: 'TValue'
      TypeReference
        Identifier: ' OptionValues'
    PropertySignature
      Identifier: '
    /** The search-results to be displayed  */
    options'
      TypeReference
        Identifier: ' Options'
        TypeReference
          Identifier: 'TValue'
    PropertySignature
      Identifier: '
    /**
     * Should be set to true, if and only if a longer query with the same prefix
     * would return a subset of the results
     * If set to true, more specific queries will not be sent to the server.
     */
    complete'
      BooleanKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' Options'
    TypeParameter
      Identifier: 'TValue'
      TypeReference
        Identifier: ' OptionValues'
    TypeReference
      Identifier: ' Array'
      TypeReference
        Identifier: 'Option'
        TypeReference
          Identifier: 'TValue'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Option'
    TypeParameter
      Identifier: 'TValue'
      TypeReference
        Identifier: ' OptionValues'
    PropertySignature
      Identifier: '
    /** Text for rendering */
    label'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /** Value for searching */
    value'
      QuestionToken
      TypeReference
        Identifier: ' TValue'
    PropertySignature
      Identifier: '
    /**
     * Allow this option to be cleared
     * @default true
     */
    clearableValue'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Do not allow this option to be selected
     * @default false
     */
    disabled'
      QuestionToken
      BooleanKeyword
    IndexSignature
      Parameter
        Identifier: 'property'
        StringKeyword
      AnyKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' OptionValues'
    UnionType
      StringKeyword
      NumberKeyword
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' MenuRendererProps'
    TypeParameter
      Identifier: 'TValue'
      TypeReference
        Identifier: ' OptionValues'
    PropertySignature
      Identifier: '
    /**
     * The currently focused option; should be visible in the menu by default.
     * default {}
     */
    focusedOption'
      TypeReference
        Identifier: ' Option'
        TypeReference
          Identifier: 'TValue'
    PropertySignature
      Identifier: '

    /**
     * Callback to focus a new option; receives the option as a parameter.
     */
    focusOption'
      TypeReference
        Identifier: ' FocusOptionHandler'
        TypeReference
          Identifier: 'TValue'
    PropertySignature
      Identifier: '

    /**
     * Option labels are accessible with this string key.
     */
    labelKey'
      StringKeyword
    PropertySignature
      Identifier: '

    /**
     * Ordered array of options to render.
     */
    options'
      TypeReference
        Identifier: ' Options'
        TypeReference
          Identifier: 'TValue'
    PropertySignature
      Identifier: '

    /**
     * Callback to select a new option; receives the option as a parameter.
     */
    selectValue'
      TypeReference
        Identifier: ' SelectValueHandler'
        TypeReference
          Identifier: 'TValue'
    PropertySignature
      Identifier: '

    /**
     * Array of currently selected options.
     */
    valueArray'
      TypeReference
        Identifier: ' Options'
        TypeReference
          Identifier: 'TValue'
    PropertySignature
      Identifier: '

    /**
     * Callback to remove selection from option; receives the option as a parameter.
     */
    removeValue'
      TypeReference
        Identifier: ' SelectValueHandler'
        TypeReference
          Identifier: 'TValue'
    PropertySignature
      Identifier: '

    /**
     * function which returns a custom way to render the options in the menu
     */
    optionRenderer'
      TypeReference
        Identifier: ' OptionRendererHandler'
        TypeReference
          Identifier: 'TValue'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' OptionComponentProps'
    TypeParameter
      Identifier: 'TValue'
      TypeReference
        Identifier: ' OptionValues'
    PropertySignature
      Identifier: '
    /**
     * Classname(s) to apply to the option component.
     */
    className'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '

    /**
     * Currently focused option.
     */
    focusOption'
      QuestionToken
      TypeReference
        Identifier: ' Option'
        TypeReference
          Identifier: 'TValue'
    PropertySignature
      Identifier: '

    inputValue'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    instancePrefix'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '

    /**
     * True if this option is disabled.
     */
    isDisabled'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '

    /**
     * True if this option is focused.
     */
    isFocused'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '

    /**
     * True if this option is selected.
     */
    isSelected'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '

    /**
     * Callback to be invoked when this option is focused.
     */
    onFocus'
      QuestionToken
      FunctionType
        Parameter
          Identifier: 'option'
          TypeReference
            Identifier: ' Option'
            TypeReference
              Identifier: 'TValue'
        Parameter
          Identifier: ' event'
          AnyKeyword
        VoidKeyword
    PropertySignature
      Identifier: '

    /**
     * Callback to be invoked when this option is selected.
     */
    onSelect'
      QuestionToken
      FunctionType
        Parameter
          Identifier: 'option'
          TypeReference
            Identifier: ' Option'
            TypeReference
              Identifier: 'TValue'
        Parameter
          Identifier: ' event'
          AnyKeyword
        VoidKeyword
    PropertySignature
      Identifier: '

    /**
     * Option to be rendered by this component.
     */
    option'
      TypeReference
        Identifier: ' Option'
        TypeReference
          Identifier: 'TValue'
    PropertySignature
      Identifier: '

    /**
     * Index of the option being rendered in the list
     */
    optionIndex'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '

    /**
     * Callback to invoke when removing an option from a multi-selection. (Not necessarily the one
     * being rendered)
     */
    removeValue'
      QuestionToken
      FunctionType
        Parameter
          Identifier: 'value'
          UnionType
            TypeReference
              Identifier: ' TValue'
            ArrayType
              TypeReference
                Identifier: ' TValue'
        VoidKeyword
    PropertySignature
      Identifier: '

    /**
     * Callback to invoke to select an option. (Not necessarily the one being rendered)
     */
    selectValue'
      QuestionToken
      FunctionType
        Parameter
          Identifier: 'value'
          UnionType
            TypeReference
              Identifier: ' TValue'
            ArrayType
              TypeReference
                Identifier: ' TValue'
        VoidKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ArrowRendererProps'
    PropertySignature
      Identifier: '
    /**
     * Arrow mouse down event handler.
     */
    onMouseDown'
      TypeReference
        QualifiedName
          Identifier: ' React'
          Identifier: 'MouseEventHandler'
        AnyKeyword
    PropertySignature
      Identifier: '

    /**
     * whether the Select is open or not.
     */
    isOpen'
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ValueComponentProps'
    TypeParameter
      Identifier: 'TValue'
      TypeReference
        Identifier: ' OptionValues'
    PropertySignature
      Identifier: '
    disabled'
      IndexedAccessType
        TypeReference
          Identifier: ' ReactSelectProps'
          TypeReference
            Identifier: 'TValue'
        LiteralType
          StringLiteral
    PropertySignature
      Identifier: '
    id'
      StringKeyword
    PropertySignature
      Identifier: '
    instancePrefix'
      StringKeyword
    PropertySignature
      Identifier: '
    onClick'
      UnionType
        TypeReference
          Identifier: ' OnValueClickHandler'
          TypeReference
            Identifier: 'TValue'
        LiteralType
          NullKeyword
    PropertySignature
      Identifier: '
    onRemove'
      QuestionToken
      TypeReference
        Identifier: ' SelectValueHandler'
        TypeReference
          Identifier: 'TValue'
    PropertySignature
      Identifier: '
    placeholder'
      IndexedAccessType
        TypeReference
          Identifier: ' ReactSelectProps'
          TypeReference
            Identifier: 'TValue'
        LiteralType
          StringLiteral
    PropertySignature
      Identifier: '
    value'
      TypeReference
        Identifier: ' Option'
        TypeReference
          Identifier: 'TValue'
    PropertySignature
      Identifier: '
    values'
      QuestionToken
      TypeReference
        Identifier: ' Array'
        TypeReference
          Identifier: 'Option'
          TypeReference
            Identifier: 'TValue'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ReactSelectProps'
    TypeParameter
      Identifier: 'TValue'
      TypeReference
        Identifier: ' OptionValues'
    HeritageClause
      ExpressionWithTypeArguments
        PropertyAccessExpression
          Identifier: ' React'
          Identifier: 'Props'
        TypeReference
          Identifier: 'ReactSelectClass'
          TypeReference
            Identifier: 'TValue'
    PropertySignature
      Identifier: '
    /**
     * text to display when `allowCreate` is true.
     * @default 'Add "{label}"?'
     */
    addLabelText'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * renders a custom drop-down arrow to be shown in the right-hand side of the select.
     * @default undefined
     */
    arrowRenderer'
      QuestionToken
      UnionType
        TypeReference
          Identifier: ' ArrowRendererHandler'
        LiteralType
          NullKeyword
    PropertySignature
      Identifier: '
    /**
     * blurs the input element after a selection has been made. Handy for lowering the keyboard on mobile devices.
     * @default false
     */
    autoBlur'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * autofocus the component on mount
     * @deprecated. Use autoFocus instead
     * @default false
     */
    autofocus'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * autofocus the component on mount
     * @default false
     */
    autoFocus'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     *  If enabled, the input will expand as the length of its value increases
     */
    autosize'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * whether pressing backspace removes the last item when there is no input value
     * @default true
     */
    backspaceRemoves'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Message to use for screenreaders to press backspace to remove the current item
     * {label} is replaced with the item label
     * @default "Press backspace to remove..."
     */
    backspaceToRemoveMessage'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * CSS className for the outer element
     */
    className'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Prefix prepended to element default className if no className is defined
     */
    classNamePrefix'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * title for the "clear" control when `multi` is true
     * @default "Clear all"
     */
    clearAllText'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Renders a custom clear to be shown in the right-hand side of the select when clearable true
     * @default undefined
     */
    clearRenderer'
      QuestionToken
      TypeReference
        Identifier: ' ClearRendererHandler'
    PropertySignature
      Identifier: '
    /**
     * title for the "clear" control
     * @default "Clear value"
     */
    clearValueText'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * whether to close the menu when a value is selected
     * @default true
     */
    closeOnSelect'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * whether it is possible to reset value. if enabled, an X button will appear at the right side.
     * @default true
     */
    clearable'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * whether backspace removes an item if there is no text input
     * @default true
     */
    deleteRemoves'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * delimiter to use to join multiple values
     * @default ","
     */
    delimiter'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * whether the Select is disabled or not
     * @default false
     */
    disabled'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * whether escape clears the value when the menu is closed
     * @default true
     */
    escapeClearsValue'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * method to filter a single option
     */
    filterOption'
      QuestionToken
      TypeReference
        Identifier: ' FilterOptionHandler'
        TypeReference
          Identifier: 'TValue'
    PropertySignature
      Identifier: '
    /**
     * method to filter the options array
     */
    filterOptions'
      QuestionToken
      TypeReference
        Identifier: ' FilterOptionsHandler'
        TypeReference
          Identifier: 'TValue'
    PropertySignature
      Identifier: '
    /**
     * id for the underlying HTML input element
     * @default undefined
     */
    id'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * whether to strip diacritics when filtering
     * @default true
     */
    ignoreAccents'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * whether to perform case-insensitive filtering
     * @default true
     */
    ignoreCase'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * custom attributes for the Input (in the Select-control) e.g: {'data-foo': 'bar'}
     * @default {}
     */
    inputProps'
      QuestionToken
      TypeLiteral
        IndexSignature
          Parameter
            Identifier: 'key'
            StringKeyword
          AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * renders a custom input
     */
    inputRenderer'
      QuestionToken
      TypeReference
        Identifier: ' InputRendererHandler'
    PropertySignature
      Identifier: '
    /**
     * allows for synchronization of component id's on server and client.
     * @see https://github.com/JedWatson/react-select/pull/1105
     */
    instanceId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * whether the Select is loading externally or not (such as options being loaded).
     * if true, a loading spinner will be shown at the right side.
     * @default false
     */
    isLoading'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * (legacy mode) joins multiple values into a single form field with the delimiter
     * @default false
     */
    joinValues'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * the option property to use for the label
     * @default "label"
     */
    labelKey'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * (any, start) match the start or entire string when filtering
     * @default "any"
     */
    matchPos'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * (any, label, value) which option property to filter on
     * @default "any"
     */
    matchProp'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * buffer of px between the base of the dropdown and the viewport to shift if menu doesnt fit in viewport
     * @default 0
     */
    menuBuffer'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * optional style to apply to the menu container
     */
    menuContainerStyle'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' React'
          Identifier: 'CSSProperties'
    PropertySignature
      Identifier: '
    /**
     * renders a custom menu with options
     */
    menuRenderer'
      QuestionToken
      TypeReference
        Identifier: ' MenuRendererHandler'
        TypeReference
          Identifier: 'TValue'
    PropertySignature
      Identifier: '
    /**
     * optional style to apply to the menu
     */
    menuStyle'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' React'
          Identifier: 'CSSProperties'
    PropertySignature
      Identifier: '
    /**
     * multi-value input
     * @default false
     */
    multi'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * field name, for hidden `<input>` tag
     */
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * placeholder displayed when there are no matching search results or a falsy value to hide it
     * @default "No results found"
     */
    noResultsText'
      QuestionToken
      UnionType
        StringKeyword
        TypeReference
          QualifiedName
            Identifier: ' JSX'
            Identifier: 'Element'
    PropertySignature
      Identifier: '
    /**
     * onBlur handler: function (event) {}
     */
    onBlur'
      QuestionToken
      TypeReference
        Identifier: ' OnBlurHandler'
    PropertySignature
      Identifier: '
    /**
     * whether to clear input on blur or not
     * @default true
     */
    onBlurResetsInput'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * whether the input value should be reset when options are selected.
     * Also input value will be set to empty if 'onSelectResetsInput=true' and
     * Select will get new value that not equal previous value.
     * @default true
     */
    onSelectResetsInput'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * whether to clear input when closing the menu through the arrow
     * @default true
     */
    onCloseResetsInput'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * onChange handler: function (newValue) {}
     */
    onChange'
      QuestionToken
      TypeReference
        Identifier: ' OnChangeHandler'
        TypeReference
          Identifier: 'TValue'
    PropertySignature
      Identifier: '
    /**
     * fires when the menu is closed
     */
    onClose'
      QuestionToken
      TypeReference
        Identifier: ' OnCloseHandler'
    PropertySignature
      Identifier: '
    /**
     * onFocus handler: function (event) {}
     */
    onFocus'
      QuestionToken
      TypeReference
        Identifier: ' OnFocusHandler'
    PropertySignature
      Identifier: '
    /**
     * onInputChange handler: function (inputValue) {}
     */
    onInputChange'
      QuestionToken
      TypeReference
        Identifier: ' OnInputChangeHandler'
    PropertySignature
      Identifier: '
    /**
     * onInputKeyDown handler: function (keyboardEvent) {}
     */
    onInputKeyDown'
      QuestionToken
      TypeReference
        Identifier: ' OnInputKeyDownHandler'
    PropertySignature
      Identifier: '
    /**
     * fires when the menu is scrolled to the bottom; can be used to paginate options
     */
    onMenuScrollToBottom'
      QuestionToken
      TypeReference
        Identifier: ' OnMenuScrollToBottomHandler'
    PropertySignature
      Identifier: '
    /**
     * fires when the menu is opened
     */
    onOpen'
      QuestionToken
      TypeReference
        Identifier: ' OnOpenHandler'
    PropertySignature
      Identifier: '
    /**
     * boolean to enable opening dropdown when focused
     * @default false
     */
    openOnClick'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * open the options menu when the input gets focus (requires searchable = true)
     * @default true
     */
    openOnFocus'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * className to add to each option component
     */
    optionClassName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * option component to render in dropdown
     */
    optionComponent'
      QuestionToken
      TypeReference
        Identifier: ' OptionComponentType'
        TypeReference
          Identifier: 'TValue'
    PropertySignature
      Identifier: '
    /**
     * function which returns a custom way to render the options in the menu
     */
    optionRenderer'
      QuestionToken
      TypeReference
        Identifier: ' OptionRendererHandler'
        TypeReference
          Identifier: 'TValue'
    PropertySignature
      Identifier: '
    /**
     * array of Select options
     * @default false
     */
    options'
      QuestionToken
      TypeReference
        Identifier: ' Options'
        TypeReference
          Identifier: 'TValue'
    PropertySignature
      Identifier: '
    /**
     * number of options to jump when using page up/down keys
     * @default 5
     */
    pageSize'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * field placeholder, displayed when there's no value
     * @default "Select..."
     */
    placeholder'
      QuestionToken
      UnionType
        StringKeyword
        TypeReference
          QualifiedName
            Identifier: ' JSX'
            Identifier: 'Element'
    PropertySignature
      Identifier: '
    /**
     * whether the selected option is removed from the dropdown on multi selects
     * @default true
     */
    removeSelected'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * applies HTML5 required attribute when needed
     * @default false
     */
    required'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * value to use when you clear the control
     */
    resetValue'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * use react-select in right-to-left direction
     * @default false
     */
    rtl'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * whether the viewport will shift to display the entire menu when engaged
     * @default true
     */
    scrollMenuIntoView'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * whether to enable searching feature or not
     * @default true;
     */
    searchable'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * whether to select the currently focused value when the  [tab]  key is pressed
     */
    tabSelectsValue'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * initial field value
     */
    value'
      QuestionToken
      UnionType
        TypeReference
          Identifier: ' Option'
          TypeReference
            Identifier: 'TValue'
        TypeReference
          Identifier: ' Options'
          TypeReference
            Identifier: 'TValue'
        StringKeyword
        ArrayType
          StringKeyword
        NumberKeyword
        ArrayType
          NumberKeyword
        BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * the option property to use for the value
     * @default "value"
     */
    valueKey'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * function which returns a custom way to render the value selected
     * @default false
     */
    valueRenderer'
      QuestionToken
      TypeReference
        Identifier: ' ValueRendererHandler'
        TypeReference
          Identifier: 'TValue'
    PropertySignature
      Identifier: '
    /**
     *  optional style to apply to the control
     */
    style'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' React'
          Identifier: 'CSSProperties'
    PropertySignature
      Identifier: '

    /**
     *  optional tab index of the control
     */
    tabIndex'
      QuestionToken
      UnionType
        StringKeyword
        NumberKeyword
    PropertySignature
      Identifier: '

    /**
     *  value component to render
     */
    valueComponent'
      QuestionToken
      TypeReference
        Identifier: ' ValueComponentType'
        TypeReference
          Identifier: 'TValue'
    PropertySignature
      Identifier: '

    /**
     *  optional style to apply to the component wrapper
     */
    wrapperStyle'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' React'
          Identifier: 'CSSProperties'
    PropertySignature
      Identifier: '

    /**
     * onClick handler for value labels: function (value, event) {}
     */
    onValueClick'
      QuestionToken
      TypeReference
        Identifier: ' OnValueClickHandler'
        TypeReference
          Identifier: 'TValue'
    PropertySignature
      Identifier: '

    /**
     *  pass the value to onChange as a simple value (legacy pre 1.0 mode), defaults to false
     */
    simpleValue'
      QuestionToken
      BooleanKeyword
