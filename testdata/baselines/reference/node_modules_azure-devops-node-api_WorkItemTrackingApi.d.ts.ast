SourceFile
  ImportEqualsDeclaration
    Identifier: ' basem'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' VsoBaseInterfaces'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' TfsCoreInterfaces'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' VSSInterfaces'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' WorkItemTrackingInterfaces'
    ExternalModuleReference
      StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' IWorkItemTrackingApi'
    HeritageClause
      ExpressionWithTypeArguments
        PropertyAccessExpression
          Identifier: ' basem'
          Identifier: 'ClientApiBase'
    MethodSignature
      Identifier: '
    getAccountMyWorkData'
      Parameter
        Identifier: 'queryOption'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'QueryOption'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'AccountMyWorkResult'
    MethodSignature
      Identifier: '
    getRecentActivityData'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'AccountRecentActivityWorkItemModel2'
    MethodSignature
      Identifier: '
    getRecentMentions'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'AccountRecentMentionWorkItemModel'
    MethodSignature
      Identifier: '
    getWorkArtifactLinkTypes'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkArtifactLink'
    MethodSignature
      Identifier: '
    queryWorkItemsForArtifactUris'
      Parameter
        Identifier: 'artifactUriQuery'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'ArtifactUriQuery'
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'ArtifactUriQueryResult'
    MethodSignature
      Identifier: '
    createAttachment'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' contentStream'
        TypeReference
          QualifiedName
            Identifier: ' NodeJS'
            Identifier: 'ReadableStream'
      Parameter
        Identifier: ' fileName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' uploadType'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' areaPath'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'AttachmentReference'
    MethodSignature
      Identifier: '
    getAttachmentContent'
      Parameter
        Identifier: 'id'
        StringKeyword
      Parameter
        Identifier: ' fileName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' download'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    getAttachmentZip'
      Parameter
        Identifier: 'id'
        StringKeyword
      Parameter
        Identifier: ' fileName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' download'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    getClassificationNodes'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' ids'
        ArrayType
          NumberKeyword
      Parameter
        Identifier: ' depth'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' errorPolicy'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'ClassificationNodesErrorPolicy'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItemClassificationNode'
    MethodSignature
      Identifier: '
    getRootNodes'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' depth'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItemClassificationNode'
    MethodSignature
      Identifier: '
    createOrUpdateClassificationNode'
      Parameter
        Identifier: 'postedNode'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemClassificationNode'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' structureGroup'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'TreeStructureGroup'
      Parameter
        Identifier: ' path'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemClassificationNode'
    MethodSignature
      Identifier: '
    deleteClassificationNode'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' structureGroup'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'TreeStructureGroup'
      Parameter
        Identifier: ' path'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' reclassifyId'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getClassificationNode'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' structureGroup'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'TreeStructureGroup'
      Parameter
        Identifier: ' path'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' depth'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemClassificationNode'
    MethodSignature
      Identifier: '
    updateClassificationNode'
      Parameter
        Identifier: 'postedNode'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemClassificationNode'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' structureGroup'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'TreeStructureGroup'
      Parameter
        Identifier: ' path'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemClassificationNode'
    MethodSignature
      Identifier: '
    getEngagedUsers'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' workItemId'
        NumberKeyword
      Parameter
        Identifier: ' commentId'
        NumberKeyword
      Parameter
        Identifier: ' reactionType'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'CommentReactionType'
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' skip'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'VSSInterfaces'
              Identifier: 'IdentityRef'
    MethodSignature
      Identifier: '
    addComment'
      Parameter
        Identifier: 'request'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'CommentCreate'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' workItemId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'Comment'
    MethodSignature
      Identifier: '
    deleteComment'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' workItemId'
        NumberKeyword
      Parameter
        Identifier: ' commentId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getComment'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' workItemId'
        NumberKeyword
      Parameter
        Identifier: ' commentId'
        NumberKeyword
      Parameter
        Identifier: ' includeDeleted'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'CommentExpandOptions'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'Comment'
    MethodSignature
      Identifier: '
    getComments'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' workItemId'
        NumberKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' includeDeleted'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'CommentExpandOptions'
      Parameter
        Identifier: ' order'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'CommentSortOrder'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'CommentList'
    MethodSignature
      Identifier: '
    getCommentsBatch'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' workItemId'
        NumberKeyword
      Parameter
        Identifier: ' ids'
        ArrayType
          NumberKeyword
      Parameter
        Identifier: ' includeDeleted'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'CommentExpandOptions'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'CommentList'
    MethodSignature
      Identifier: '
    updateComment'
      Parameter
        Identifier: 'request'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'CommentUpdate'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' workItemId'
        NumberKeyword
      Parameter
        Identifier: ' commentId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'Comment'
    MethodSignature
      Identifier: '
    createCommentReaction'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' workItemId'
        NumberKeyword
      Parameter
        Identifier: ' commentId'
        NumberKeyword
      Parameter
        Identifier: ' reactionType'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'CommentReactionType'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'CommentReaction'
    MethodSignature
      Identifier: '
    deleteCommentReaction'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' workItemId'
        NumberKeyword
      Parameter
        Identifier: ' commentId'
        NumberKeyword
      Parameter
        Identifier: ' reactionType'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'CommentReactionType'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'CommentReaction'
    MethodSignature
      Identifier: '
    getCommentReactions'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' workItemId'
        NumberKeyword
      Parameter
        Identifier: ' commentId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'CommentReaction'
    MethodSignature
      Identifier: '
    getCommentVersion'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' workItemId'
        NumberKeyword
      Parameter
        Identifier: ' commentId'
        NumberKeyword
      Parameter
        Identifier: ' version'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'CommentVersion'
    MethodSignature
      Identifier: '
    getCommentVersions'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' workItemId'
        NumberKeyword
      Parameter
        Identifier: ' commentId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'CommentVersion'
    MethodSignature
      Identifier: '
    createField'
      Parameter
        Identifier: 'workItemField'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemField'
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemField'
    MethodSignature
      Identifier: '
    deleteField'
      Parameter
        Identifier: 'fieldNameOrRefName'
        StringKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getField'
      Parameter
        Identifier: 'fieldNameOrRefName'
        StringKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemField'
    MethodSignature
      Identifier: '
    getFields'
      Parameter
        Identifier: 'project'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'GetFieldsExpand'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItemField'
    MethodSignature
      Identifier: '
    updateField'
      Parameter
        Identifier: 'payload'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'UpdateWorkItemField'
      Parameter
        Identifier: ' fieldNameOrRefName'
        StringKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemField'
    MethodSignature
      Identifier: '
    migrateProjectsProcess'
      Parameter
        Identifier: 'newProcess'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'ProcessIdModel'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'ProcessMigrationResultModel'
    MethodSignature
      Identifier: '
    createQuery'
      Parameter
        Identifier: 'postedQuery'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'QueryHierarchyItem'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' query'
        StringKeyword
      Parameter
        Identifier: ' validateWiqlOnly'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'QueryHierarchyItem'
    MethodSignature
      Identifier: '
    deleteQuery'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' query'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getQueries'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'QueryExpand'
      Parameter
        Identifier: ' depth'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' includeDeleted'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'QueryHierarchyItem'
    MethodSignature
      Identifier: '
    getQuery'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' query'
        StringKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'QueryExpand'
      Parameter
        Identifier: ' depth'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' includeDeleted'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' useIsoDateFormat'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'QueryHierarchyItem'
    MethodSignature
      Identifier: '
    searchQueries'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' filter'
        StringKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'QueryExpand'
      Parameter
        Identifier: ' includeDeleted'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'QueryHierarchyItemsResult'
    MethodSignature
      Identifier: '
    updateQuery'
      Parameter
        Identifier: 'queryUpdate'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'QueryHierarchyItem'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' query'
        StringKeyword
      Parameter
        Identifier: ' undeleteDescendants'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'QueryHierarchyItem'
    MethodSignature
      Identifier: '
    getQueriesBatch'
      Parameter
        Identifier: 'queryGetRequest'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'QueryBatchGetRequest'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'QueryHierarchyItem'
    MethodSignature
      Identifier: '
    destroyWorkItem'
      Parameter
        Identifier: 'id'
        NumberKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getDeletedWorkItem'
      Parameter
        Identifier: 'id'
        NumberKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemDelete'
    MethodSignature
      Identifier: '
    getDeletedWorkItems'
      Parameter
        Identifier: 'ids'
        ArrayType
          NumberKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItemDeleteReference'
    MethodSignature
      Identifier: '
    getDeletedWorkItemShallowReferences'
      Parameter
        Identifier: 'project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItemDeleteShallowReference'
    MethodSignature
      Identifier: '
    restoreWorkItem'
      Parameter
        Identifier: 'payload'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemDeleteUpdate'
      Parameter
        Identifier: ' id'
        NumberKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemDelete'
    MethodSignature
      Identifier: '
    getRevision'
      Parameter
        Identifier: 'id'
        NumberKeyword
      Parameter
        Identifier: ' revisionNumber'
        NumberKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemExpand'
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItem'
    MethodSignature
      Identifier: '
    getRevisions'
      Parameter
        Identifier: 'id'
        NumberKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' skip'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemExpand'
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItem'
    MethodSignature
      Identifier: '
    sendMail'
      Parameter
        Identifier: 'body'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'SendMailBody'
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    deleteTag'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' tagIdOrName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getTag'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' tagIdOrName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemTagDefinition'
    MethodSignature
      Identifier: '
    getTags'
      Parameter
        Identifier: 'project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItemTagDefinition'
    MethodSignature
      Identifier: '
    updateTag'
      Parameter
        Identifier: 'tagData'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemTagDefinition'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' tagIdOrName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemTagDefinition'
    MethodSignature
      Identifier: '
    createTemplate'
      Parameter
        Identifier: 'template'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemTemplate'
      Parameter
        Identifier: ' teamContext'
        TypeReference
          QualifiedName
            Identifier: ' TfsCoreInterfaces'
            Identifier: 'TeamContext'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemTemplate'
    MethodSignature
      Identifier: '
    getTemplates'
      Parameter
        Identifier: 'teamContext'
        TypeReference
          QualifiedName
            Identifier: ' TfsCoreInterfaces'
            Identifier: 'TeamContext'
      Parameter
        Identifier: ' workitemtypename'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItemTemplateReference'
    MethodSignature
      Identifier: '
    deleteTemplate'
      Parameter
        Identifier: 'teamContext'
        TypeReference
          QualifiedName
            Identifier: ' TfsCoreInterfaces'
            Identifier: 'TeamContext'
      Parameter
        Identifier: ' templateId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getTemplate'
      Parameter
        Identifier: 'teamContext'
        TypeReference
          QualifiedName
            Identifier: ' TfsCoreInterfaces'
            Identifier: 'TeamContext'
      Parameter
        Identifier: ' templateId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemTemplate'
    MethodSignature
      Identifier: '
    replaceTemplate'
      Parameter
        Identifier: 'templateContent'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemTemplate'
      Parameter
        Identifier: ' teamContext'
        TypeReference
          QualifiedName
            Identifier: ' TfsCoreInterfaces'
            Identifier: 'TeamContext'
      Parameter
        Identifier: ' templateId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemTemplate'
    MethodSignature
      Identifier: '
    getUpdate'
      Parameter
        Identifier: 'id'
        NumberKeyword
      Parameter
        Identifier: ' updateNumber'
        NumberKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemUpdate'
    MethodSignature
      Identifier: '
    getUpdates'
      Parameter
        Identifier: 'id'
        NumberKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' skip'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItemUpdate'
    MethodSignature
      Identifier: '
    queryByWiql'
      Parameter
        Identifier: 'wiql'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'Wiql'
      Parameter
        Identifier: ' teamContext'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' TfsCoreInterfaces'
            Identifier: 'TeamContext'
      Parameter
        Identifier: ' timePrecision'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemQueryResult'
    MethodSignature
      Identifier: '
    queryById'
      Parameter
        Identifier: 'id'
        StringKeyword
      Parameter
        Identifier: ' teamContext'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' TfsCoreInterfaces'
            Identifier: 'TeamContext'
      Parameter
        Identifier: ' timePrecision'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemQueryResult'
    MethodSignature
      Identifier: '
    getWorkItemIconJson'
      Parameter
        Identifier: 'icon'
        StringKeyword
      Parameter
        Identifier: ' color'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' v'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemIcon'
    MethodSignature
      Identifier: '
    getWorkItemIcons'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItemIcon'
    MethodSignature
      Identifier: '
    getWorkItemIconSvg'
      Parameter
        Identifier: 'icon'
        StringKeyword
      Parameter
        Identifier: ' color'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' v'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    getWorkItemIconXaml'
      Parameter
        Identifier: 'icon'
        StringKeyword
      Parameter
        Identifier: ' color'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' v'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    getReportingLinksByLinkType'
      Parameter
        Identifier: 'project'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' linkTypes'
        QuestionToken
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' types'
        QuestionToken
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' startDateTime'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'ReportingWorkItemLinksBatch'
    MethodSignature
      Identifier: '
    getRelationType'
      Parameter
        Identifier: 'relation'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemRelationType'
    MethodSignature
      Identifier: '
    getRelationTypes'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItemRelationType'
    MethodSignature
      Identifier: '
    readReportingRevisionsGet'
      Parameter
        Identifier: 'project'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' fields'
        QuestionToken
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' types'
        QuestionToken
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' startDateTime'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' includeIdentityRef'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' includeDeleted'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' includeTagRef'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' includeLatestOnly'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'ReportingRevisionsExpand'
      Parameter
        Identifier: ' includeDiscussionChangesOnly'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' maxPageSize'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'ReportingWorkItemRevisionsBatch'
    MethodSignature
      Identifier: '
    readReportingRevisionsPost'
      Parameter
        Identifier: 'filter'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'ReportingWorkItemRevisionsFilter'
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' startDateTime'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'ReportingRevisionsExpand'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'ReportingWorkItemRevisionsBatch'
    MethodSignature
      Identifier: '
    readReportingDiscussions'
      Parameter
        Identifier: 'project'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' maxPageSize'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'ReportingWorkItemRevisionsBatch'
    MethodSignature
      Identifier: '
    createWorkItem'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' document'
        TypeReference
          QualifiedName
            Identifier: ' VSSInterfaces'
            Identifier: 'JsonPatchDocument'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' type'
        StringKeyword
      Parameter
        Identifier: ' validateOnly'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' bypassRules'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' suppressNotifications'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemExpand'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItem'
    MethodSignature
      Identifier: '
    getWorkItemTemplate'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' type'
        StringKeyword
      Parameter
        Identifier: ' fields'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' asOf'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemExpand'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItem'
    MethodSignature
      Identifier: '
    deleteWorkItem'
      Parameter
        Identifier: 'id'
        NumberKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' destroy'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemDelete'
    MethodSignature
      Identifier: '
    getWorkItem'
      Parameter
        Identifier: 'id'
        NumberKeyword
      Parameter
        Identifier: ' fields'
        QuestionToken
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' asOf'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemExpand'
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItem'
    MethodSignature
      Identifier: '
    getWorkItems'
      Parameter
        Identifier: 'ids'
        ArrayType
          NumberKeyword
      Parameter
        Identifier: ' fields'
        QuestionToken
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' asOf'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemExpand'
      Parameter
        Identifier: ' errorPolicy'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemErrorPolicy'
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItem'
    MethodSignature
      Identifier: '
    updateWorkItem'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' document'
        TypeReference
          QualifiedName
            Identifier: ' VSSInterfaces'
            Identifier: 'JsonPatchDocument'
      Parameter
        Identifier: ' id'
        NumberKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' validateOnly'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' bypassRules'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' suppressNotifications'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemExpand'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItem'
    MethodSignature
      Identifier: '
    getWorkItemsBatch'
      Parameter
        Identifier: 'workItemGetRequest'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemBatchGetRequest'
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItem'
    MethodSignature
      Identifier: '
    getWorkItemStateColors'
      Parameter
        Identifier: 'projectNames'
        ArrayType
          StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'ProjectWorkItemStateColors'
    MethodSignature
      Identifier: '
    getWorkItemNextStatesOnCheckinAction'
      Parameter
        Identifier: 'ids'
        ArrayType
          NumberKeyword
      Parameter
        Identifier: ' action'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItemNextStateOnTransition'
    MethodSignature
      Identifier: '
    getWorkItemTypeCategories'
      Parameter
        Identifier: 'project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItemTypeCategory'
    MethodSignature
      Identifier: '
    getWorkItemTypeCategory'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' category'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemTypeCategory'
    MethodSignature
      Identifier: '
    getWorkItemTypeColors'
      Parameter
        Identifier: 'projectNames'
        ArrayType
          StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeLiteral
            PropertySignature
              Identifier: '
        key'
              StringKeyword
            PropertySignature
              Identifier: '
        value'
              ArrayType
                TypeReference
                  QualifiedName
                    Identifier: ' WorkItemTrackingInterfaces'
                    Identifier: 'WorkItemTypeColor'
    MethodSignature
      Identifier: '
    getWorkItemTypeColorAndIcons'
      Parameter
        Identifier: 'projectNames'
        ArrayType
          StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeLiteral
            PropertySignature
              Identifier: '
        key'
              StringKeyword
            PropertySignature
              Identifier: '
        value'
              ArrayType
                TypeReference
                  QualifiedName
                    Identifier: ' WorkItemTrackingInterfaces'
                    Identifier: 'WorkItemTypeColorAndIcon'
    MethodSignature
      Identifier: '
    getWorkItemType'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' type'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemType'
    MethodSignature
      Identifier: '
    getWorkItemTypes'
      Parameter
        Identifier: 'project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItemType'
    MethodSignature
      Identifier: '
    getWorkItemTypeFieldsWithReferences'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' type'
        StringKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemTypeFieldsExpandLevel'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItemTypeFieldWithReferences'
    MethodSignature
      Identifier: '
    getWorkItemTypeFieldWithReferences'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' type'
        StringKeyword
      Parameter
        Identifier: ' field'
        StringKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemTypeFieldsExpandLevel'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemTypeFieldWithReferences'
    MethodSignature
      Identifier: '
    getWorkItemTypeStates'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' type'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItemStateColor'
    MethodSignature
      Identifier: '
    exportWorkItemTypeDefinition'
      Parameter
        Identifier: 'project'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' type'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' exportGlobalLists'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemTypeTemplate'
    MethodSignature
      Identifier: '
    updateWorkItemTypeDefinition'
      Parameter
        Identifier: 'updateModel'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemTypeTemplateUpdateModel'
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'ProvisioningResult'
  ClassDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' WorkItemTrackingApi'
    HeritageClause
      ExpressionWithTypeArguments
        PropertyAccessExpression
          Identifier: ' basem'
          Identifier: 'ClientApiBase'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' IWorkItemTrackingApi'
    Constructor
      Parameter
        Identifier: 'baseUrl'
        StringKeyword
      Parameter
        Identifier: ' handlers'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' VsoBaseInterfaces'
              Identifier: 'IRequestHandler'
      Parameter
        Identifier: ' options'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' VsoBaseInterfaces'
            Identifier: 'IRequestOptions'
    PropertyDeclaration
      StaticKeyword
      ReadonlyKeyword
      Identifier: ' RESOURCE_AREA_ID'
      StringLiteral
    MethodDeclaration
      Identifier: '
    /**
     * INTERNAL ONLY: USED BY ACCOUNT MY WORK PAGE. This returns Doing, Done, Follows and activity work items details.
     *
     * @param {WorkItemTrackingInterfaces.QueryOption} queryOption
     */
    getAccountMyWorkData'
      Parameter
        Identifier: 'queryOption'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'QueryOption'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'AccountMyWorkResult'
    MethodDeclaration
      Identifier: '
    /**
     * Gets recent work item activities
     *
     */
    getRecentActivityData'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'AccountRecentActivityWorkItemModel2'
    MethodDeclaration
      Identifier: '
    /**
     * INTERNAL ONLY: USED BY ACCOUNT MY WORK PAGE.
     *
     */
    getRecentMentions'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'AccountRecentMentionWorkItemModel'
    MethodDeclaration
      Identifier: '
    /**
     * Get the list of work item tracking outbound artifact link types.
     *
     */
    getWorkArtifactLinkTypes'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkArtifactLink'
    MethodDeclaration
      Identifier: '
    /**
     * Queries work items linked to a given list of artifact URI.
     *
     * @param {WorkItemTrackingInterfaces.ArtifactUriQuery} artifactUriQuery - Defines a list of artifact URI for querying work items.
     * @param {string} project - Project ID or project name
     */
    queryWorkItemsForArtifactUris'
      Parameter
        Identifier: 'artifactUriQuery'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'ArtifactUriQuery'
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'ArtifactUriQueryResult'
    MethodDeclaration
      Identifier: '
    /**
     * Uploads an attachment.
     *
     * @param {NodeJS.ReadableStream} contentStream - Content to upload
     * @param {string} fileName - The name of the file
     * @param {string} uploadType - Attachment upload type: Simple or Chunked
     * @param {string} project - Project ID or project name
     * @param {string} areaPath - Target project Area Path
     */
    createAttachment'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' contentStream'
        TypeReference
          QualifiedName
            Identifier: ' NodeJS'
            Identifier: 'ReadableStream'
      Parameter
        Identifier: ' fileName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' uploadType'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' areaPath'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'AttachmentReference'
    MethodDeclaration
      Identifier: '
    /**
     * Downloads an attachment.
     *
     * @param {string} id - Attachment ID
     * @param {string} fileName - Name of the file
     * @param {string} project - Project ID or project name
     * @param {boolean} download - If set to <c>true</c> always download attachment
     */
    getAttachmentContent'
      Parameter
        Identifier: 'id'
        StringKeyword
      Parameter
        Identifier: ' fileName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' download'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * Downloads an attachment.
     *
     * @param {string} id - Attachment ID
     * @param {string} fileName - Name of the file
     * @param {string} project - Project ID or project name
     * @param {boolean} download - If set to <c>true</c> always download attachment
     */
    getAttachmentZip'
      Parameter
        Identifier: 'id'
        StringKeyword
      Parameter
        Identifier: ' fileName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' download'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * Gets root classification nodes or list of classification nodes for a given list of nodes ids, for a given project. In case ids parameter is supplied you will  get list of classification nodes for those ids. Otherwise you will get root classification nodes for this project.
     *
     * @param {string} project - Project ID or project name
     * @param {number[]} ids - Comma separated integer classification nodes ids. It's not required, if you want root nodes.
     * @param {number} depth - Depth of children to fetch.
     * @param {WorkItemTrackingInterfaces.ClassificationNodesErrorPolicy} errorPolicy - Flag to handle errors in getting some nodes. Possible options are Fail and Omit.
     */
    getClassificationNodes'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' ids'
        ArrayType
          NumberKeyword
      Parameter
        Identifier: ' depth'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' errorPolicy'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'ClassificationNodesErrorPolicy'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItemClassificationNode'
    MethodDeclaration
      Identifier: '
    /**
     * Gets root classification nodes under the project.
     *
     * @param {string} project - Project ID or project name
     * @param {number} depth - Depth of children to fetch.
     */
    getRootNodes'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' depth'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItemClassificationNode'
    MethodDeclaration
      Identifier: '
    /**
     * Create new or update an existing classification node.
     *
     * @param {WorkItemTrackingInterfaces.WorkItemClassificationNode} postedNode - Node to create or update.
     * @param {string} project - Project ID or project name
     * @param {WorkItemTrackingInterfaces.TreeStructureGroup} structureGroup - Structure group of the classification node, area or iteration.
     * @param {string} path - Path of the classification node.
     */
    createOrUpdateClassificationNode'
      Parameter
        Identifier: 'postedNode'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemClassificationNode'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' structureGroup'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'TreeStructureGroup'
      Parameter
        Identifier: ' path'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemClassificationNode'
    MethodDeclaration
      Identifier: '
    /**
     * Delete an existing classification node.
     *
     * @param {string} project - Project ID or project name
     * @param {WorkItemTrackingInterfaces.TreeStructureGroup} structureGroup - Structure group of the classification node, area or iteration.
     * @param {string} path - Path of the classification node.
     * @param {number} reclassifyId - Id of the target classification node for reclassification.
     */
    deleteClassificationNode'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' structureGroup'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'TreeStructureGroup'
      Parameter
        Identifier: ' path'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' reclassifyId'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Gets the classification node for a given node path.
     *
     * @param {string} project - Project ID or project name
     * @param {WorkItemTrackingInterfaces.TreeStructureGroup} structureGroup - Structure group of the classification node, area or iteration.
     * @param {string} path - Path of the classification node.
     * @param {number} depth - Depth of children to fetch.
     */
    getClassificationNode'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' structureGroup'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'TreeStructureGroup'
      Parameter
        Identifier: ' path'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' depth'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemClassificationNode'
    MethodDeclaration
      Identifier: '
    /**
     * Update an existing classification node.
     *
     * @param {WorkItemTrackingInterfaces.WorkItemClassificationNode} postedNode - Node to create or update.
     * @param {string} project - Project ID or project name
     * @param {WorkItemTrackingInterfaces.TreeStructureGroup} structureGroup - Structure group of the classification node, area or iteration.
     * @param {string} path - Path of the classification node.
     */
    updateClassificationNode'
      Parameter
        Identifier: 'postedNode'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemClassificationNode'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' structureGroup'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'TreeStructureGroup'
      Parameter
        Identifier: ' path'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemClassificationNode'
    MethodDeclaration
      Identifier: '
    /**
     * Get users who reacted on the comment.
     *
     * @param {string} project - Project ID or project name
     * @param {number} workItemId - WorkItem ID.
     * @param {number} commentId - Comment ID.
     * @param {WorkItemTrackingInterfaces.CommentReactionType} reactionType - Type of the reaction.
     * @param {number} top
     * @param {number} skip
     */
    getEngagedUsers'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' workItemId'
        NumberKeyword
      Parameter
        Identifier: ' commentId'
        NumberKeyword
      Parameter
        Identifier: ' reactionType'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'CommentReactionType'
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' skip'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'VSSInterfaces'
              Identifier: 'IdentityRef'
    MethodDeclaration
      Identifier: '
    /**
     * Add a comment on a work item.
     *
     * @param {WorkItemTrackingInterfaces.CommentCreate} request - Comment create request.
     * @param {string} project - Project ID or project name
     * @param {number} workItemId - Id of a work item.
     */
    addComment'
      Parameter
        Identifier: 'request'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'CommentCreate'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' workItemId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'Comment'
    MethodDeclaration
      Identifier: '
    /**
     * Delete a comment on a work item.
     *
     * @param {string} project - Project ID or project name
     * @param {number} workItemId - Id of a work item.
     * @param {number} commentId
     */
    deleteComment'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' workItemId'
        NumberKeyword
      Parameter
        Identifier: ' commentId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Returns a work item comment.
     *
     * @param {string} project - Project ID or project name
     * @param {number} workItemId - Id of a work item to get the comment.
     * @param {number} commentId - Id of the comment to return.
     * @param {boolean} includeDeleted - Specify if the deleted comment should be retrieved.
     * @param {WorkItemTrackingInterfaces.CommentExpandOptions} expand - Specifies the additional data retrieval options for work item comments.
     */
    getComment'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' workItemId'
        NumberKeyword
      Parameter
        Identifier: ' commentId'
        NumberKeyword
      Parameter
        Identifier: ' includeDeleted'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'CommentExpandOptions'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'Comment'
    MethodDeclaration
      Identifier: '
    /**
     * Returns a list of work item comments, pageable.
     *
     * @param {string} project - Project ID or project name
     * @param {number} workItemId - Id of a work item to get comments for.
     * @param {number} top - Max number of comments to return.
     * @param {string} continuationToken - Used to query for the next page of comments.
     * @param {boolean} includeDeleted - Specify if the deleted comments should be retrieved.
     * @param {WorkItemTrackingInterfaces.CommentExpandOptions} expand - Specifies the additional data retrieval options for work item comments.
     * @param {WorkItemTrackingInterfaces.CommentSortOrder} order - Order in which the comments should be returned.
     */
    getComments'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' workItemId'
        NumberKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' includeDeleted'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'CommentExpandOptions'
      Parameter
        Identifier: ' order'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'CommentSortOrder'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'CommentList'
    MethodDeclaration
      Identifier: '
    /**
     * Returns a list of work item comments by ids.
     *
     * @param {string} project - Project ID or project name
     * @param {number} workItemId - Id of a work item to get comments for.
     * @param {number[]} ids - Comma-separated list of comment ids to return.
     * @param {boolean} includeDeleted - Specify if the deleted comments should be retrieved.
     * @param {WorkItemTrackingInterfaces.CommentExpandOptions} expand - Specifies the additional data retrieval options for work item comments.
     */
    getCommentsBatch'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' workItemId'
        NumberKeyword
      Parameter
        Identifier: ' ids'
        ArrayType
          NumberKeyword
      Parameter
        Identifier: ' includeDeleted'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'CommentExpandOptions'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'CommentList'
    MethodDeclaration
      Identifier: '
    /**
     * Update a comment on a work item.
     *
     * @param {WorkItemTrackingInterfaces.CommentUpdate} request - Comment update request.
     * @param {string} project - Project ID or project name
     * @param {number} workItemId - Id of a work item.
     * @param {number} commentId
     */
    updateComment'
      Parameter
        Identifier: 'request'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'CommentUpdate'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' workItemId'
        NumberKeyword
      Parameter
        Identifier: ' commentId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'Comment'
    MethodDeclaration
      Identifier: '
    /**
     * Adds a new reaction to a comment.
     *
     * @param {string} project - Project ID or project name
     * @param {number} workItemId - WorkItem ID
     * @param {number} commentId - Comment ID
     * @param {WorkItemTrackingInterfaces.CommentReactionType} reactionType - Type of the reaction
     */
    createCommentReaction'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' workItemId'
        NumberKeyword
      Parameter
        Identifier: ' commentId'
        NumberKeyword
      Parameter
        Identifier: ' reactionType'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'CommentReactionType'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'CommentReaction'
    MethodDeclaration
      Identifier: '
    /**
     * Deletes an existing reaction on a comment.
     *
     * @param {string} project - Project ID or project name
     * @param {number} workItemId - WorkItem ID
     * @param {number} commentId - Comment ID
     * @param {WorkItemTrackingInterfaces.CommentReactionType} reactionType - Type of the reaction
     */
    deleteCommentReaction'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' workItemId'
        NumberKeyword
      Parameter
        Identifier: ' commentId'
        NumberKeyword
      Parameter
        Identifier: ' reactionType'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'CommentReactionType'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'CommentReaction'
    MethodDeclaration
      Identifier: '
    /**
     * Gets reactions of a comment.
     *
     * @param {string} project - Project ID or project name
     * @param {number} workItemId - WorkItem ID
     * @param {number} commentId - Comment ID
     */
    getCommentReactions'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' workItemId'
        NumberKeyword
      Parameter
        Identifier: ' commentId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'CommentReaction'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} workItemId
     * @param {number} commentId
     * @param {number} version
     */
    getCommentVersion'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' workItemId'
        NumberKeyword
      Parameter
        Identifier: ' commentId'
        NumberKeyword
      Parameter
        Identifier: ' version'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'CommentVersion'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} workItemId
     * @param {number} commentId
     */
    getCommentVersions'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' workItemId'
        NumberKeyword
      Parameter
        Identifier: ' commentId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'CommentVersion'
    MethodDeclaration
      Identifier: '
    /**
     * Create a new field.
     *
     * @param {WorkItemTrackingInterfaces.WorkItemField} workItemField - New field definition
     * @param {string} project - Project ID or project name
     */
    createField'
      Parameter
        Identifier: 'workItemField'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemField'
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemField'
    MethodDeclaration
      Identifier: '
    /**
     * Deletes the field. To undelete a filed, see "Update Field" API.
     *
     * @param {string} fieldNameOrRefName - Field simple name or reference name
     * @param {string} project - Project ID or project name
     */
    deleteField'
      Parameter
        Identifier: 'fieldNameOrRefName'
        StringKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Gets information on a specific field.
     *
     * @param {string} fieldNameOrRefName - Field simple name or reference name
     * @param {string} project - Project ID or project name
     */
    getField'
      Parameter
        Identifier: 'fieldNameOrRefName'
        StringKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemField'
    MethodDeclaration
      Identifier: '
    /**
     * Returns information for all fields. The project ID/name parameter is optional.
     *
     * @param {string} project - Project ID or project name
     * @param {WorkItemTrackingInterfaces.GetFieldsExpand} expand - Use ExtensionFields to include extension fields, otherwise exclude them. Unless the feature flag for this parameter is enabled, extension fields are always included.
     */
    getFields'
      Parameter
        Identifier: 'project'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'GetFieldsExpand'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItemField'
    MethodDeclaration
      Identifier: '
    /**
     * Update a field.
     *
     * @param {WorkItemTrackingInterfaces.UpdateWorkItemField} payload - Payload contains desired value of the field's properties
     * @param {string} fieldNameOrRefName - Name/reference name of the field to be updated
     * @param {string} project - Project ID or project name
     */
    updateField'
      Parameter
        Identifier: 'payload'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'UpdateWorkItemField'
      Parameter
        Identifier: ' fieldNameOrRefName'
        StringKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemField'
    MethodDeclaration
      Identifier: '
    /**
     * Migrates a project to a different process within the same OOB type. For example, you can only migrate a project from agile/custom-agile to agile/custom-agile.
     *
     * @param {WorkItemTrackingInterfaces.ProcessIdModel} newProcess
     * @param {string} project - Project ID or project name
     */
    migrateProjectsProcess'
      Parameter
        Identifier: 'newProcess'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'ProcessIdModel'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'ProcessMigrationResultModel'
    MethodDeclaration
      Identifier: '
    /**
     * Creates a query, or moves a query.
     *
     * @param {WorkItemTrackingInterfaces.QueryHierarchyItem} postedQuery - The query to create.
     * @param {string} project - Project ID or project name
     * @param {string} query - The parent id or path under which the query is to be created.
     * @param {boolean} validateWiqlOnly - If you only want to validate your WIQL query without actually creating one, set it to true. Default is false.
     */
    createQuery'
      Parameter
        Identifier: 'postedQuery'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'QueryHierarchyItem'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' query'
        StringKeyword
      Parameter
        Identifier: ' validateWiqlOnly'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'QueryHierarchyItem'
    MethodDeclaration
      Identifier: '
    /**
     * Delete a query or a folder. This deletes any permission change on the deleted query or folder and any of its descendants if it is a folder. It is important to note that the deleted permission changes cannot be recovered upon undeleting the query or folder.
     *
     * @param {string} project - Project ID or project name
     * @param {string} query - ID or path of the query or folder to delete.
     */
    deleteQuery'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' query'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Gets the root queries and their children
     *
     * @param {string} project - Project ID or project name
     * @param {WorkItemTrackingInterfaces.QueryExpand} expand - Include the query string (wiql), clauses, query result columns, and sort options in the results.
     * @param {number} depth - In the folder of queries, return child queries and folders to this depth.
     * @param {boolean} includeDeleted - Include deleted queries and folders
     */
    getQueries'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'QueryExpand'
      Parameter
        Identifier: ' depth'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' includeDeleted'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'QueryHierarchyItem'
    MethodDeclaration
      Identifier: '
    /**
     * Retrieves an individual query and its children
     *
     * @param {string} project - Project ID or project name
     * @param {string} query - ID or path of the query.
     * @param {WorkItemTrackingInterfaces.QueryExpand} expand - Include the query string (wiql), clauses, query result columns, and sort options in the results.
     * @param {number} depth - In the folder of queries, return child queries and folders to this depth.
     * @param {boolean} includeDeleted - Include deleted queries and folders
     * @param {boolean} useIsoDateFormat - DateTime query clauses will be formatted using a ISO 8601 compliant format
     */
    getQuery'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' query'
        StringKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'QueryExpand'
      Parameter
        Identifier: ' depth'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' includeDeleted'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' useIsoDateFormat'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'QueryHierarchyItem'
    MethodDeclaration
      Identifier: '
    /**
     * Searches all queries the user has access to in the current project
     *
     * @param {string} project - Project ID or project name
     * @param {string} filter - The text to filter the queries with.
     * @param {number} top - The number of queries to return (Default is 50 and maximum is 200).
     * @param {WorkItemTrackingInterfaces.QueryExpand} expand
     * @param {boolean} includeDeleted - Include deleted queries and folders
     */
    searchQueries'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' filter'
        StringKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'QueryExpand'
      Parameter
        Identifier: ' includeDeleted'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'QueryHierarchyItemsResult'
    MethodDeclaration
      Identifier: '
    /**
     * Update a query or a folder. This allows you to update, rename and move queries and folders.
     *
     * @param {WorkItemTrackingInterfaces.QueryHierarchyItem} queryUpdate - The query to update.
     * @param {string} project - Project ID or project name
     * @param {string} query - The ID or path for the query to update.
     * @param {boolean} undeleteDescendants - Undelete the children of this folder. It is important to note that this will not bring back the permission changes that were previously applied to the descendants.
     */
    updateQuery'
      Parameter
        Identifier: 'queryUpdate'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'QueryHierarchyItem'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' query'
        StringKeyword
      Parameter
        Identifier: ' undeleteDescendants'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'QueryHierarchyItem'
    MethodDeclaration
      Identifier: '
    /**
     * Gets a list of queries by ids (Maximum 1000)
     *
     * @param {WorkItemTrackingInterfaces.QueryBatchGetRequest} queryGetRequest
     * @param {string} project - Project ID or project name
     */
    getQueriesBatch'
      Parameter
        Identifier: 'queryGetRequest'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'QueryBatchGetRequest'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'QueryHierarchyItem'
    MethodDeclaration
      Identifier: '
    /**
     * Destroys the specified work item permanently from the Recycle Bin. This action can not be undone.
     *
     * @param {number} id - ID of the work item to be destroyed permanently
     * @param {string} project - Project ID or project name
     */
    destroyWorkItem'
      Parameter
        Identifier: 'id'
        NumberKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Gets a deleted work item from Recycle Bin.
     *
     * @param {number} id - ID of the work item to be returned
     * @param {string} project - Project ID or project name
     */
    getDeletedWorkItem'
      Parameter
        Identifier: 'id'
        NumberKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemDelete'
    MethodDeclaration
      Identifier: '
    /**
     * Gets the work items from the recycle bin, whose IDs have been specified in the parameters
     *
     * @param {number[]} ids - Comma separated list of IDs of the deleted work items to be returned
     * @param {string} project - Project ID or project name
     */
    getDeletedWorkItems'
      Parameter
        Identifier: 'ids'
        ArrayType
          NumberKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItemDeleteReference'
    MethodDeclaration
      Identifier: '
    /**
     * Gets a list of the IDs and the URLs of the deleted the work items in the Recycle Bin.
     *
     * @param {string} project - Project ID or project name
     */
    getDeletedWorkItemShallowReferences'
      Parameter
        Identifier: 'project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItemDeleteShallowReference'
    MethodDeclaration
      Identifier: '
    /**
     * Restores the deleted work item from Recycle Bin.
     *
     * @param {WorkItemTrackingInterfaces.WorkItemDeleteUpdate} payload - Paylod with instructions to update the IsDeleted flag to false
     * @param {number} id - ID of the work item to be restored
     * @param {string} project - Project ID or project name
     */
    restoreWorkItem'
      Parameter
        Identifier: 'payload'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemDeleteUpdate'
      Parameter
        Identifier: ' id'
        NumberKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemDelete'
    MethodDeclaration
      Identifier: '
    /**
     * Returns a fully hydrated work item for the requested revision
     *
     * @param {number} id
     * @param {number} revisionNumber
     * @param {WorkItemTrackingInterfaces.WorkItemExpand} expand
     * @param {string} project - Project ID or project name
     */
    getRevision'
      Parameter
        Identifier: 'id'
        NumberKeyword
      Parameter
        Identifier: ' revisionNumber'
        NumberKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemExpand'
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItem'
    MethodDeclaration
      Identifier: '
    /**
     * Returns the list of fully hydrated work item revisions, paged.
     *
     * @param {number} id
     * @param {number} top
     * @param {number} skip
     * @param {WorkItemTrackingInterfaces.WorkItemExpand} expand
     * @param {string} project - Project ID or project name
     */
    getRevisions'
      Parameter
        Identifier: 'id'
        NumberKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' skip'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemExpand'
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItem'
    MethodDeclaration
      Identifier: '
    /**
     * RESTful method to send mail for selected/queried work items.
     *
     * @param {WorkItemTrackingInterfaces.SendMailBody} body
     * @param {string} project - Project ID or project name
     */
    sendMail'
      Parameter
        Identifier: 'body'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'SendMailBody'
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {string} tagIdOrName
     */
    deleteTag'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' tagIdOrName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {string} tagIdOrName
     */
    getTag'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' tagIdOrName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemTagDefinition'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     */
    getTags'
      Parameter
        Identifier: 'project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItemTagDefinition'
    MethodDeclaration
      Identifier: '
    /**
     * @param {WorkItemTrackingInterfaces.WorkItemTagDefinition} tagData
     * @param {string} project - Project ID or project name
     * @param {string} tagIdOrName
     */
    updateTag'
      Parameter
        Identifier: 'tagData'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemTagDefinition'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' tagIdOrName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemTagDefinition'
    MethodDeclaration
      Identifier: '
    /**
     * Creates a template
     *
     * @param {WorkItemTrackingInterfaces.WorkItemTemplate} template - Template contents
     * @param {TfsCoreInterfaces.TeamContext} teamContext - The team context for the operation
     */
    createTemplate'
      Parameter
        Identifier: 'template'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemTemplate'
      Parameter
        Identifier: ' teamContext'
        TypeReference
          QualifiedName
            Identifier: ' TfsCoreInterfaces'
            Identifier: 'TeamContext'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemTemplate'
    MethodDeclaration
      Identifier: '
    /**
     * Gets template
     *
     * @param {TfsCoreInterfaces.TeamContext} teamContext - The team context for the operation
     * @param {string} workitemtypename - Optional, When specified returns templates for given Work item type.
     */
    getTemplates'
      Parameter
        Identifier: 'teamContext'
        TypeReference
          QualifiedName
            Identifier: ' TfsCoreInterfaces'
            Identifier: 'TeamContext'
      Parameter
        Identifier: ' workitemtypename'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItemTemplateReference'
    MethodDeclaration
      Identifier: '
    /**
     * Deletes the template with given id
     *
     * @param {TfsCoreInterfaces.TeamContext} teamContext - The team context for the operation
     * @param {string} templateId - Template id
     */
    deleteTemplate'
      Parameter
        Identifier: 'teamContext'
        TypeReference
          QualifiedName
            Identifier: ' TfsCoreInterfaces'
            Identifier: 'TeamContext'
      Parameter
        Identifier: ' templateId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Gets the template with specified id
     *
     * @param {TfsCoreInterfaces.TeamContext} teamContext - The team context for the operation
     * @param {string} templateId - Template Id
     */
    getTemplate'
      Parameter
        Identifier: 'teamContext'
        TypeReference
          QualifiedName
            Identifier: ' TfsCoreInterfaces'
            Identifier: 'TeamContext'
      Parameter
        Identifier: ' templateId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemTemplate'
    MethodDeclaration
      Identifier: '
    /**
     * Replace template contents
     *
     * @param {WorkItemTrackingInterfaces.WorkItemTemplate} templateContent - Template contents to replace with
     * @param {TfsCoreInterfaces.TeamContext} teamContext - The team context for the operation
     * @param {string} templateId - Template id
     */
    replaceTemplate'
      Parameter
        Identifier: 'templateContent'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemTemplate'
      Parameter
        Identifier: ' teamContext'
        TypeReference
          QualifiedName
            Identifier: ' TfsCoreInterfaces'
            Identifier: 'TeamContext'
      Parameter
        Identifier: ' templateId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemTemplate'
    MethodDeclaration
      Identifier: '
    /**
     * Returns a single update for a work item
     *
     * @param {number} id
     * @param {number} updateNumber
     * @param {string} project - Project ID or project name
     */
    getUpdate'
      Parameter
        Identifier: 'id'
        NumberKeyword
      Parameter
        Identifier: ' updateNumber'
        NumberKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemUpdate'
    MethodDeclaration
      Identifier: '
    /**
     * Returns a the deltas between work item revisions
     *
     * @param {number} id
     * @param {number} top
     * @param {number} skip
     * @param {string} project - Project ID or project name
     */
    getUpdates'
      Parameter
        Identifier: 'id'
        NumberKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' skip'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItemUpdate'
    MethodDeclaration
      Identifier: '
    /**
     * Gets the results of the query given its WIQL.
     *
     * @param {WorkItemTrackingInterfaces.Wiql} wiql - The query containing the WIQL.
     * @param {TfsCoreInterfaces.TeamContext} teamContext - The team context for the operation
     * @param {boolean} timePrecision - Whether or not to use time precision.
     * @param {number} top - The max number of results to return.
     */
    queryByWiql'
      Parameter
        Identifier: 'wiql'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'Wiql'
      Parameter
        Identifier: ' teamContext'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' TfsCoreInterfaces'
            Identifier: 'TeamContext'
      Parameter
        Identifier: ' timePrecision'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemQueryResult'
    MethodDeclaration
      Identifier: '
    /**
     * Gets the results of the query given the query ID.
     *
     * @param {string} id - The query ID.
     * @param {TfsCoreInterfaces.TeamContext} teamContext - The team context for the operation
     * @param {boolean} timePrecision - Whether or not to use time precision.
     * @param {number} top - The max number of results to return.
     */
    queryById'
      Parameter
        Identifier: 'id'
        StringKeyword
      Parameter
        Identifier: ' teamContext'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' TfsCoreInterfaces'
            Identifier: 'TeamContext'
      Parameter
        Identifier: ' timePrecision'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemQueryResult'
    MethodDeclaration
      Identifier: '
    /**
     * Get a work item icon given the friendly name and icon color.
     *
     * @param {string} icon - The name of the icon
     * @param {string} color - The 6-digit hex color for the icon
     * @param {number} v - The version of the icon (used only for cache invalidation)
     */
    getWorkItemIconJson'
      Parameter
        Identifier: 'icon'
        StringKeyword
      Parameter
        Identifier: ' color'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' v'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemIcon'
    MethodDeclaration
      Identifier: '
    /**
     * Get a list of all work item icons.
     *
     */
    getWorkItemIcons'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItemIcon'
    MethodDeclaration
      Identifier: '
    /**
     * Get a work item icon given the friendly name and icon color.
     *
     * @param {string} icon - The name of the icon
     * @param {string} color - The 6-digit hex color for the icon
     * @param {number} v - The version of the icon (used only for cache invalidation)
     */
    getWorkItemIconSvg'
      Parameter
        Identifier: 'icon'
        StringKeyword
      Parameter
        Identifier: ' color'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' v'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * Get a work item icon given the friendly name and icon color.
     *
     * @param {string} icon - The name of the icon
     * @param {string} color - The 6-digit hex color for the icon
     * @param {number} v - The version of the icon (used only for cache invalidation)
     */
    getWorkItemIconXaml'
      Parameter
        Identifier: 'icon'
        StringKeyword
      Parameter
        Identifier: ' color'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' v'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * Get a batch of work item links
     *
     * @param {string} project - Project ID or project name
     * @param {string[]} linkTypes - A list of types to filter the results to specific link types. Omit this parameter to get work item links of all link types.
     * @param {string[]} types - A list of types to filter the results to specific work item types. Omit this parameter to get work item links of all work item types.
     * @param {string} continuationToken - Specifies the continuationToken to start the batch from. Omit this parameter to get the first batch of links.
     * @param {Date} startDateTime - Date/time to use as a starting point for link changes. Only link changes that occurred after that date/time will be returned. Cannot be used in conjunction with 'watermark' parameter.
     */
    getReportingLinksByLinkType'
      Parameter
        Identifier: 'project'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' linkTypes'
        QuestionToken
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' types'
        QuestionToken
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' startDateTime'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'ReportingWorkItemLinksBatch'
    MethodDeclaration
      Identifier: '
    /**
     * Gets the work item relation type definition.
     *
     * @param {string} relation - The relation name
     */
    getRelationType'
      Parameter
        Identifier: 'relation'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemRelationType'
    MethodDeclaration
      Identifier: '
    /**
     * Gets the work item relation types.
     *
     */
    getRelationTypes'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItemRelationType'
    MethodDeclaration
      Identifier: '
    /**
     * Get a batch of work item revisions with the option of including deleted items
     *
     * @param {string} project - Project ID or project name
     * @param {string[]} fields - A list of fields to return in work item revisions. Omit this parameter to get all reportable fields.
     * @param {string[]} types - A list of types to filter the results to specific work item types. Omit this parameter to get work item revisions of all work item types.
     * @param {string} continuationToken - Specifies the watermark to start the batch from. Omit this parameter to get the first batch of revisions.
     * @param {Date} startDateTime - Date/time to use as a starting point for revisions, all revisions will occur after this date/time. Cannot be used in conjunction with 'watermark' parameter.
     * @param {boolean} includeIdentityRef - Return an identity reference instead of a string value for identity fields.
     * @param {boolean} includeDeleted - Specify if the deleted item should be returned.
     * @param {boolean} includeTagRef - Specify if the tag objects should be returned for System.Tags field.
     * @param {boolean} includeLatestOnly - Return only the latest revisions of work items, skipping all historical revisions
     * @param {WorkItemTrackingInterfaces.ReportingRevisionsExpand} expand - Return all the fields in work item revisions, including long text fields which are not returned by default
     * @param {boolean} includeDiscussionChangesOnly - Return only the those revisions of work items, where only history field was changed
     * @param {number} maxPageSize - The maximum number of results to return in this batch
     */
    readReportingRevisionsGet'
      Parameter
        Identifier: 'project'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' fields'
        QuestionToken
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' types'
        QuestionToken
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' startDateTime'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' includeIdentityRef'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' includeDeleted'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' includeTagRef'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' includeLatestOnly'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'ReportingRevisionsExpand'
      Parameter
        Identifier: ' includeDiscussionChangesOnly'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' maxPageSize'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'ReportingWorkItemRevisionsBatch'
    MethodDeclaration
      Identifier: '
    /**
     * Get a batch of work item revisions. This request may be used if your list of fields is large enough that it may run the URL over the length limit.
     *
     * @param {WorkItemTrackingInterfaces.ReportingWorkItemRevisionsFilter} filter - An object that contains request settings: field filter, type filter, identity format
     * @param {string} project - Project ID or project name
     * @param {string} continuationToken - Specifies the watermark to start the batch from. Omit this parameter to get the first batch of revisions.
     * @param {Date} startDateTime - Date/time to use as a starting point for revisions, all revisions will occur after this date/time. Cannot be used in conjunction with 'watermark' parameter.
     * @param {WorkItemTrackingInterfaces.ReportingRevisionsExpand} expand
     */
    readReportingRevisionsPost'
      Parameter
        Identifier: 'filter'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'ReportingWorkItemRevisionsFilter'
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' startDateTime'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'ReportingRevisionsExpand'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'ReportingWorkItemRevisionsBatch'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {string} continuationToken
     * @param {number} maxPageSize
     */
    readReportingDiscussions'
      Parameter
        Identifier: 'project'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' maxPageSize'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'ReportingWorkItemRevisionsBatch'
    MethodDeclaration
      Identifier: '
    /**
     * Creates a single work item.
     *
     * @param {VSSInterfaces.JsonPatchDocument} document - The JSON Patch document representing the work item
     * @param {string} project - Project ID or project name
     * @param {string} type - The work item type of the work item to create
     * @param {boolean} validateOnly - Indicate if you only want to validate the changes without saving the work item
     * @param {boolean} bypassRules - Do not enforce the work item type rules on this update
     * @param {boolean} suppressNotifications - Do not fire any notifications for this change
     * @param {WorkItemTrackingInterfaces.WorkItemExpand} expand - The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }.
     */
    createWorkItem'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' document'
        TypeReference
          QualifiedName
            Identifier: ' VSSInterfaces'
            Identifier: 'JsonPatchDocument'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' type'
        StringKeyword
      Parameter
        Identifier: ' validateOnly'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' bypassRules'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' suppressNotifications'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemExpand'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItem'
    MethodDeclaration
      Identifier: '
    /**
     * Returns a single work item from a template.
     *
     * @param {string} project - Project ID or project name
     * @param {string} type - The work item type name
     * @param {string} fields - Comma-separated list of requested fields
     * @param {Date} asOf - AsOf UTC date time string
     * @param {WorkItemTrackingInterfaces.WorkItemExpand} expand - The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }.
     */
    getWorkItemTemplate'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' type'
        StringKeyword
      Parameter
        Identifier: ' fields'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' asOf'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemExpand'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItem'
    MethodDeclaration
      Identifier: '
    /**
     * Deletes the specified work item and sends it to the Recycle Bin, so that it can be restored back, if required. Optionally, if the destroy parameter has been set to true, it destroys the work item permanently. WARNING: If the destroy parameter is set to true, work items deleted by this command will NOT go to recycle-bin and there is no way to restore/recover them after deletion. It is recommended NOT to use this parameter. If you do, please use this parameter with extreme caution.
     *
     * @param {number} id - ID of the work item to be deleted
     * @param {string} project - Project ID or project name
     * @param {boolean} destroy - Optional parameter, if set to true, the work item is deleted permanently. Please note: the destroy action is PERMANENT and cannot be undone.
     */
    deleteWorkItem'
      Parameter
        Identifier: 'id'
        NumberKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' destroy'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemDelete'
    MethodDeclaration
      Identifier: '
    /**
     * Returns a single work item.
     *
     * @param {number} id - The work item id
     * @param {string[]} fields - Comma-separated list of requested fields
     * @param {Date} asOf - AsOf UTC date time string
     * @param {WorkItemTrackingInterfaces.WorkItemExpand} expand - The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }.
     * @param {string} project - Project ID or project name
     */
    getWorkItem'
      Parameter
        Identifier: 'id'
        NumberKeyword
      Parameter
        Identifier: ' fields'
        QuestionToken
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' asOf'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemExpand'
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItem'
    MethodDeclaration
      Identifier: '
    /**
     * Returns a list of work items (Maximum 200)
     *
     * @param {number[]} ids - The comma-separated list of requested work item ids. (Maximum 200 ids allowed).
     * @param {string[]} fields - Comma-separated list of requested fields
     * @param {Date} asOf - AsOf UTC date time string
     * @param {WorkItemTrackingInterfaces.WorkItemExpand} expand - The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }.
     * @param {WorkItemTrackingInterfaces.WorkItemErrorPolicy} errorPolicy - The flag to control error policy in a bulk get work items request. Possible options are {Fail, Omit}.
     * @param {string} project - Project ID or project name
     */
    getWorkItems'
      Parameter
        Identifier: 'ids'
        ArrayType
          NumberKeyword
      Parameter
        Identifier: ' fields'
        QuestionToken
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' asOf'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemExpand'
      Parameter
        Identifier: ' errorPolicy'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemErrorPolicy'
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItem'
    MethodDeclaration
      Identifier: '
    /**
     * Updates a single work item.
     *
     * @param {VSSInterfaces.JsonPatchDocument} document - The JSON Patch document representing the update
     * @param {number} id - The id of the work item to update
     * @param {string} project - Project ID or project name
     * @param {boolean} validateOnly - Indicate if you only want to validate the changes without saving the work item
     * @param {boolean} bypassRules - Do not enforce the work item type rules on this update
     * @param {boolean} suppressNotifications - Do not fire any notifications for this change
     * @param {WorkItemTrackingInterfaces.WorkItemExpand} expand - The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }.
     */
    updateWorkItem'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' document'
        TypeReference
          QualifiedName
            Identifier: ' VSSInterfaces'
            Identifier: 'JsonPatchDocument'
      Parameter
        Identifier: ' id'
        NumberKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' validateOnly'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' bypassRules'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' suppressNotifications'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemExpand'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItem'
    MethodDeclaration
      Identifier: '
    /**
     * Gets work items for a list of work item ids (Maximum 200)
     *
     * @param {WorkItemTrackingInterfaces.WorkItemBatchGetRequest} workItemGetRequest
     * @param {string} project - Project ID or project name
     */
    getWorkItemsBatch'
      Parameter
        Identifier: 'workItemGetRequest'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemBatchGetRequest'
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItem'
    MethodDeclaration
      Identifier: '
    /**
     * INTERNAL ONLY: It will be used for My account work experience. Get the work item type state color for multiple projects
     *
     * @param {string[]} projectNames
     */
    getWorkItemStateColors'
      Parameter
        Identifier: 'projectNames'
        ArrayType
          StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'ProjectWorkItemStateColors'
    MethodDeclaration
      Identifier: '
    /**
     * Returns the next state on the given work item IDs.
     *
     * @param {number[]} ids - list of work item ids
     * @param {string} action - possible actions. Currently only supports checkin
     */
    getWorkItemNextStatesOnCheckinAction'
      Parameter
        Identifier: 'ids'
        ArrayType
          NumberKeyword
      Parameter
        Identifier: ' action'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItemNextStateOnTransition'
    MethodDeclaration
      Identifier: '
    /**
     * Get all work item type categories.
     *
     * @param {string} project - Project ID or project name
     */
    getWorkItemTypeCategories'
      Parameter
        Identifier: 'project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItemTypeCategory'
    MethodDeclaration
      Identifier: '
    /**
     * Get specific work item type category by name.
     *
     * @param {string} project - Project ID or project name
     * @param {string} category - The category name
     */
    getWorkItemTypeCategory'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' category'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemTypeCategory'
    MethodDeclaration
      Identifier: '
    /**
     * INTERNAL ONLY: It will be used for My account work experience. Get the wit type color for multiple projects
     *
     * @param {string[]} projectNames
     */
    getWorkItemTypeColors'
      Parameter
        Identifier: 'projectNames'
        ArrayType
          StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeLiteral
            PropertySignature
              Identifier: '
        key'
              StringKeyword
            PropertySignature
              Identifier: '
        value'
              ArrayType
                TypeReference
                  QualifiedName
                    Identifier: ' WorkItemTrackingInterfaces'
                    Identifier: 'WorkItemTypeColor'
    MethodDeclaration
      Identifier: '
    /**
     * INTERNAL ONLY: It is used for color and icon providers. Get the wit type color for multiple projects
     *
     * @param {string[]} projectNames
     */
    getWorkItemTypeColorAndIcons'
      Parameter
        Identifier: 'projectNames'
        ArrayType
          StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeLiteral
            PropertySignature
              Identifier: '
        key'
              StringKeyword
            PropertySignature
              Identifier: '
        value'
              ArrayType
                TypeReference
                  QualifiedName
                    Identifier: ' WorkItemTrackingInterfaces'
                    Identifier: 'WorkItemTypeColorAndIcon'
    MethodDeclaration
      Identifier: '
    /**
     * Returns a work item type definition.
     *
     * @param {string} project - Project ID or project name
     * @param {string} type - Work item type name
     */
    getWorkItemType'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' type'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemType'
    MethodDeclaration
      Identifier: '
    /**
     * Returns the list of work item types
     *
     * @param {string} project - Project ID or project name
     */
    getWorkItemTypes'
      Parameter
        Identifier: 'project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItemType'
    MethodDeclaration
      Identifier: '
    /**
     * Get a list of fields for a work item type with detailed references.
     *
     * @param {string} project - Project ID or project name
     * @param {string} type - Work item type.
     * @param {WorkItemTrackingInterfaces.WorkItemTypeFieldsExpandLevel} expand - Expand level for the API response. Properties: to include allowedvalues, default value, isRequired etc. as a part of response; None: to skip these properties.
     */
    getWorkItemTypeFieldsWithReferences'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' type'
        StringKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemTypeFieldsExpandLevel'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItemTypeFieldWithReferences'
    MethodDeclaration
      Identifier: '
    /**
     * Get a field for a work item type with detailed references.
     *
     * @param {string} project - Project ID or project name
     * @param {string} type - Work item type.
     * @param {string} field
     * @param {WorkItemTrackingInterfaces.WorkItemTypeFieldsExpandLevel} expand - Expand level for the API response. Properties: to include allowedvalues, default value, isRequired etc. as a part of response; None: to skip these properties.
     */
    getWorkItemTypeFieldWithReferences'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' type'
        StringKeyword
      Parameter
        Identifier: ' field'
        StringKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemTypeFieldsExpandLevel'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemTypeFieldWithReferences'
    MethodDeclaration
      Identifier: '
    /**
     * Returns the state names and colors for a work item type.
     *
     * @param {string} project - Project ID or project name
     * @param {string} type - The state name
     */
    getWorkItemTypeStates'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' type'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'WorkItemTrackingInterfaces'
              Identifier: 'WorkItemStateColor'
    MethodDeclaration
      Identifier: '
    /**
     * Export work item type
     *
     * @param {string} project - Project ID or project name
     * @param {string} type
     * @param {boolean} exportGlobalLists
     */
    exportWorkItemTypeDefinition'
      Parameter
        Identifier: 'project'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' type'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' exportGlobalLists'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'WorkItemTypeTemplate'
    MethodDeclaration
      Identifier: '
    /**
     * Add/updates a work item type
     *
     * @param {WorkItemTrackingInterfaces.WorkItemTypeTemplateUpdateModel} updateModel
     * @param {string} project - Project ID or project name
     */
    updateWorkItemTypeDefinition'
      Parameter
        Identifier: 'updateModel'
        TypeReference
          QualifiedName
            Identifier: ' WorkItemTrackingInterfaces'
            Identifier: 'WorkItemTypeTemplateUpdateModel'
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'WorkItemTrackingInterfaces'
            Identifier: 'ProvisioningResult'
