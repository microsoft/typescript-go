SourceFile
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: '
    __String'
        ImportSpecifier
          Identifier: '
    AnyImportOrJsDocImport'
        ImportSpecifier
          Identifier: '
    AnyImportOrReExport'
        ImportSpecifier
          Identifier: '
    AssignmentDeclarationKind'
        ImportSpecifier
          Identifier: '
    BinaryExpression'
        ImportSpecifier
          Identifier: '
    BindingElement'
        ImportSpecifier
          Identifier: '
    CallExpression'
        ImportSpecifier
          Identifier: '
    CancellationToken'
        ImportSpecifier
          Identifier: '
    canHaveModifiers'
        ImportSpecifier
          Identifier: '
    canHaveSymbol'
        ImportSpecifier
          Identifier: '
    cast'
        ImportSpecifier
          Identifier: '
    Debug'
        ImportSpecifier
          Identifier: '
    ExportAssignment'
        ImportSpecifier
          Identifier: '
    ExportDeclaration'
        ImportSpecifier
          Identifier: '
    FileReference'
        ImportSpecifier
          Identifier: '
    findAncestor'
        ImportSpecifier
          Identifier: '
    forEach'
        ImportSpecifier
          Identifier: '
    getAssignmentDeclarationKind'
        ImportSpecifier
          Identifier: '
    getFirstIdentifier'
        ImportSpecifier
          Identifier: '
    getNameOfAccessExpression'
        ImportSpecifier
          Identifier: '
    getSourceFileOfNode'
        ImportSpecifier
          Identifier: '
    getSymbolId'
        ImportSpecifier
          Identifier: '
    hasSyntacticModifier'
        ImportSpecifier
          Identifier: '
    Identifier'
        ImportSpecifier
          Identifier: '
    ImportCall'
        ImportSpecifier
          Identifier: '
    ImportClause'
        ImportSpecifier
          Identifier: '
    ImportDeclaration'
        ImportSpecifier
          Identifier: '
    ImportEqualsDeclaration'
        ImportSpecifier
          Identifier: '
    importFromModuleSpecifier'
        ImportSpecifier
          Identifier: '
    ImportSpecifier'
        ImportSpecifier
          Identifier: '
    InternalSymbolName'
        ImportSpecifier
          Identifier: '
    isAccessExpression'
        ImportSpecifier
          Identifier: '
    isBinaryExpression'
        ImportSpecifier
          Identifier: '
    isBindingElement'
        ImportSpecifier
          Identifier: '
    isCatchClause'
        ImportSpecifier
          Identifier: '
    isDefaultImport'
        ImportSpecifier
          Identifier: '
    isExportAssignment'
        ImportSpecifier
          Identifier: '
    isExportDeclaration'
        ImportSpecifier
          Identifier: '
    isExportModifier'
        ImportSpecifier
          Identifier: '
    isExportSpecifier'
        ImportSpecifier
          Identifier: '
    isExternalModuleAugmentation'
        ImportSpecifier
          Identifier: '
    isExternalModuleSymbol'
        ImportSpecifier
          Identifier: '
    isImportCall'
        ImportSpecifier
          Identifier: '
    isImportEqualsDeclaration'
        ImportSpecifier
          Identifier: '
    isImportTypeNode'
        ImportSpecifier
          Identifier: '
    isInJSFile'
        ImportSpecifier
          Identifier: '
    isJSDocCallbackTag'
        ImportSpecifier
          Identifier: '
    isJSDocTypedefTag'
        ImportSpecifier
          Identifier: '
    isModuleExportsAccessExpression'
        ImportSpecifier
          Identifier: '
    isNamedExports'
        ImportSpecifier
          Identifier: '
    isNamespaceExport'
        ImportSpecifier
          Identifier: '
    isPrivateIdentifier'
        ImportSpecifier
          Identifier: '
    isPropertyAccessExpression'
        ImportSpecifier
          Identifier: '
    isShorthandPropertyAssignment'
        ImportSpecifier
          Identifier: '
    isSourceFile'
        ImportSpecifier
          Identifier: '
    isStringLiteral'
        ImportSpecifier
          Identifier: '
    isVariableDeclaration'
        ImportSpecifier
          Identifier: '
    isVariableDeclarationInitializedToBareOrAccessedRequire'
        ImportSpecifier
          Identifier: '
    isVariableStatement'
        ImportSpecifier
          Identifier: '
    JSDocImportTag'
        ImportSpecifier
          Identifier: '
    ModifierFlags'
        ImportSpecifier
          Identifier: '
    ModuleBlock'
        ImportSpecifier
          Identifier: '
    ModuleDeclaration'
        ImportSpecifier
          Identifier: '
    ModuleExportName'
        ImportSpecifier
          Identifier: '
    moduleExportNameTextEscaped'
        ImportSpecifier
          Identifier: '
    NamedImportsOrExports'
        ImportSpecifier
          Identifier: '
    NamespaceImport'
        ImportSpecifier
          Identifier: '
    Node'
        ImportSpecifier
          Identifier: '
    nodeIsSynthesized'
        ImportSpecifier
          Identifier: '
    nodeSeenTracker'
        ImportSpecifier
          Identifier: '
    Program'
        ImportSpecifier
          Identifier: '
    some'
        ImportSpecifier
          Identifier: '
    SourceFile'
        ImportSpecifier
          Identifier: '
    Statement'
        ImportSpecifier
          Identifier: '
    StringLiteral'
        ImportSpecifier
          Identifier: '
    StringLiteralLike'
        ImportSpecifier
          Identifier: '
    Symbol'
        ImportSpecifier
          Identifier: '
    symbolEscapedNameNoDefault'
        ImportSpecifier
          Identifier: '
    SymbolFlags'
        ImportSpecifier
          Identifier: '
    symbolName'
        ImportSpecifier
          Identifier: '
    SyntaxKind'
        ImportSpecifier
          Identifier: '
    tryCast'
        ImportSpecifier
          Identifier: '
    TypeChecker'
        ImportSpecifier
          Identifier: '
    ValidImportTypeNode'
        ImportSpecifier
          Identifier: '
    VariableDeclaration'
        ImportSpecifier
          Identifier: '
    walkUpBindingElementsAndPatterns'
    StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ImportsResult'
    PropertySignature
      Identifier: '
    /** For every import of the symbol, the location and local symbol for the import. */
    importSearches'
      TypeOperator
        ArrayType
          TupleType
            TypeReference
              Identifier: 'ModuleExportName'
            TypeReference
              Identifier: ' Symbol'
    PropertySignature
      Identifier: '
    /** For rename imports/exports `{ foo as bar }`, `foo` is not a local, so it may be added as a reference immediately without further searching. */
    singleReferences'
      TypeOperator
        ArrayType
          ParenthesizedType
            UnionType
              TypeReference
                Identifier: 'Identifier'
              TypeReference
                Identifier: ' StringLiteral'
    PropertySignature
      Identifier: '
    /** List of source files that may (or may not) use the symbol via a namespace. (For UMD modules this is every file.) */
    indirectUsers'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' SourceFile'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' ImportTracker'
    FunctionType
      Parameter
        Identifier: 'exportSymbol'
        TypeReference
          Identifier: ' Symbol'
      Parameter
        Identifier: ' exportInfo'
        TypeReference
          Identifier: ' ExportInfo'
      Parameter
        Identifier: ' isForRename'
        BooleanKeyword
      TypeReference
        Identifier: ' ImportsResult'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' createImportTracker'
    Parameter
      Identifier: 'sourceFiles'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' SourceFile'
    Parameter
      Identifier: ' sourceFilesSet'
      TypeReference
        Identifier: ' ReadonlySet'
        StringKeyword
    Parameter
      Identifier: ' checker'
      TypeReference
        Identifier: ' TypeChecker'
    Parameter
      Identifier: ' cancellationToken'
      UnionType
        TypeReference
          Identifier: ' CancellationToken'
        UndefinedKeyword
    TypeReference
      Identifier: ' ImportTracker'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' allDirectImports'
            CallExpression
              Identifier: ' getDirectImportsMap'
              Identifier: 'sourceFiles'
              Identifier: ' checker'
              Identifier: ' cancellationToken'
      ReturnStatement
        ArrowFunction
          Parameter
            Identifier: 'exportSymbol'
          Parameter
            Identifier: ' exportInfo'
          Parameter
            Identifier: ' isForRename'
          EqualsGreaterThanToken
          Block
            VariableStatement
              VariableDeclarationList
                VariableDeclaration
                  ObjectBindingPattern
                    BindingElement
                      Identifier: ' directImports'
                    BindingElement
                      Identifier: ' indirectUsers'
                  CallExpression
                    Identifier: ' getImportersForExport'
                    Identifier: 'sourceFiles'
                    Identifier: ' sourceFilesSet'
                    Identifier: ' allDirectImports'
                    Identifier: ' exportInfo'
                    Identifier: ' checker'
                    Identifier: ' cancellationToken'
            ReturnStatement
              ObjectLiteralExpression
                ShorthandPropertyAssignment
                  Identifier: ' indirectUsers'
                SpreadAssignment
                  CallExpression
                    Identifier: 'getSearchesFromDirectImports'
                    Identifier: 'directImports'
                    Identifier: ' exportSymbol'
                    PropertyAccessExpression
                      Identifier: ' exportInfo'
                      Identifier: 'exportKind'
                    Identifier: ' checker'
                    Identifier: ' isForRename'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExportInfo'
    PropertySignature
      Identifier: '
    exportingModuleSymbol'
      TypeReference
        Identifier: ' Symbol'
    PropertySignature
      Identifier: '
    exportKind'
      TypeReference
        Identifier: ' ExportKind'
  EnumDeclaration
    ExportKeyword
    ConstKeyword
    Identifier: ' ExportKind'
    EnumMember
      Identifier: '
    Named'
    EnumMember
      Identifier: '
    Default'
    EnumMember
      Identifier: '
    ExportEquals'
  EnumDeclaration
    ExportKeyword
    ConstKeyword
    Identifier: ' ImportExport'
    EnumMember
      Identifier: '
    Import'
    EnumMember
      Identifier: '
    Export'
  InterfaceDeclaration
    Identifier: ' AmbientModuleDeclaration'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' ModuleDeclaration'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      TypeReference
        Identifier: ' ModuleBlock'
  TypeAliasDeclaration
    Identifier: ' SourceFileLike'
    UnionType
      TypeReference
        Identifier: ' SourceFile'
      TypeReference
        Identifier: ' AmbientModuleDeclaration'
  TypeAliasDeclaration
    Identifier: ' Importer'
    UnionType
      TypeReference
        Identifier: ' AnyImportOrReExport'
      TypeReference
        Identifier: ' ValidImportTypeNode'
      TypeReference
        Identifier: ' Identifier'
      TypeReference
        Identifier: ' JSDocImportTag'
  TypeAliasDeclaration
    Identifier: ' ImporterOrCallExpression'
    UnionType
      TypeReference
        Identifier: ' Importer'
      TypeReference
        Identifier: ' CallExpression'
  FunctionDeclaration
    Identifier: ' getImportersForExport'
    Parameter
      Identifier: '
    sourceFiles'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' SourceFile'
    Parameter
      Identifier: '
    sourceFilesSet'
      TypeReference
        Identifier: ' ReadonlySet'
        StringKeyword
    Parameter
      Identifier: '
    allDirectImports'
      TypeReference
        Identifier: ' Map'
        StringKeyword
        ArrayType
          TypeReference
            Identifier: ' ImporterOrCallExpression'
    Parameter
      ObjectBindingPattern
        BindingElement
          Identifier: ' exportingModuleSymbol'
        BindingElement
          Identifier: ' exportKind'
      TypeReference
        Identifier: ' ExportInfo'
    Parameter
      Identifier: '
    checker'
      TypeReference
        Identifier: ' TypeChecker'
    Parameter
      Identifier: '
    cancellationToken'
      UnionType
        TypeReference
          Identifier: ' CancellationToken'
        UndefinedKeyword
    TypeLiteral
      PropertySignature
        Identifier: ' directImports'
        ArrayType
          TypeReference
            Identifier: ' Importer'
      PropertySignature
        Identifier: ' indirectUsers'
        TypeOperator
          ArrayType
            TypeReference
              Identifier: ' SourceFile'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' markSeenDirectImport'
            CallExpression
              Identifier: ' nodeSeenTracker'
              TypeReference
                Identifier: 'ImporterOrCallExpression'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' markSeenIndirectUser'
            CallExpression
              Identifier: ' nodeSeenTracker'
              TypeReference
                Identifier: 'SourceFileLike'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' directImports'
            ArrayType
              TypeReference
                Identifier: ' Importer'
            ArrayLiteralExpression
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' isAvailableThroughGlobal'
            PrefixUnaryExpression
              PrefixUnaryExpression
                PropertyAccessExpression
                  Identifier: 'exportingModuleSymbol'
                  Identifier: 'globalExports'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' indirectUserDeclarations'
            UnionType
              ArrayType
                TypeReference
                  Identifier: ' SourceFileLike'
              UndefinedKeyword
            ConditionalExpression
              Identifier: ' isAvailableThroughGlobal'
              QuestionToken
              Identifier: ' undefined'
              ColonToken
              ArrayLiteralExpression
      ExpressionStatement
        CallExpression
          Identifier: '

    handleDirectImports'
          Identifier: 'exportingModuleSymbol'
      ReturnStatement
        ObjectLiteralExpression
          ShorthandPropertyAssignment
            Identifier: ' directImports'
          PropertyAssignment
            Identifier: ' indirectUsers'
            CallExpression
              Identifier: ' getIndirectUsers'
      FunctionDeclaration
        Identifier: ' getIndirectUsers'
        TypeOperator
          ArrayType
            TypeReference
              Identifier: ' SourceFile'
        Block
          IfStatement
            Identifier: 'isAvailableThroughGlobal'
            Block
              ReturnStatement
                Identifier: ' sourceFiles'
          IfStatement
            PropertyAccessExpression
              Identifier: 'exportingModuleSymbol'
              Identifier: 'declarations'
            Block
              ForOfStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' decl'
                PropertyAccessExpression
                  Identifier: ' exportingModuleSymbol'
                  Identifier: 'declarations'
                Block
                  IfStatement
                    BinaryExpression
                      CallExpression
                        Identifier: 'isExternalModuleAugmentation'
                        Identifier: 'decl'
                      AmpersandAmpersandToken
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' sourceFilesSet'
                          Identifier: 'has'
                        PropertyAccessExpression
                          CallExpression
                            PropertyAccessExpression
                              Identifier: 'decl'
                              Identifier: 'getSourceFile'
                          Identifier: 'fileName'
                    Block
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    addIndirectUser'
                          Identifier: 'decl'
          ReturnStatement
            CallExpression
              PropertyAccessExpression
                NonNullExpression
                  Identifier: ' indirectUserDeclarations'
                Identifier: 'map'
              TypeReference
                Identifier: 'SourceFile'
              Identifier: 'getSourceFileOfNode'
      FunctionDeclaration
        Identifier: ' handleDirectImports'
        Parameter
          Identifier: 'exportingModuleSymbol'
          TypeReference
            Identifier: ' Symbol'
        VoidKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' theseDirectImports'
                CallExpression
                  Identifier: ' getDirectImports'
                  Identifier: 'exportingModuleSymbol'
          IfStatement
            Identifier: 'theseDirectImports'
            Block
              ForOfStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' direct'
                Identifier: ' theseDirectImports'
                Block
                  IfStatement
                    PrefixUnaryExpression
                      CallExpression
                        Identifier: 'markSeenDirectImport'
                        Identifier: 'direct'
                    Block
                      ContinueStatement
                  IfStatement
                    Identifier: 'cancellationToken'
                    ExpressionStatement
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' cancellationToken'
                          Identifier: 'throwIfCancellationRequested'
                  SwitchStatement
                    PropertyAccessExpression
                      Identifier: 'direct'
                      Identifier: 'kind'
                    CaseBlock
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'CallExpression'
                        IfStatement
                          CallExpression
                            Identifier: 'isImportCall'
                            Identifier: 'direct'
                          Block
                            ExpressionStatement
                              CallExpression
                                Identifier: '
                            handleImportCall'
                                Identifier: 'direct'
                            BreakStatement
                        IfStatement
                          PrefixUnaryExpression
                            Identifier: 'isAvailableThroughGlobal'
                          Block
                            VariableStatement
                              VariableDeclarationList
                                VariableDeclaration
                                  Identifier: ' parent'
                                  PropertyAccessExpression
                                    Identifier: ' direct'
                                    Identifier: 'parent'
                            IfStatement
                              BinaryExpression
                                BinaryExpression
                                  Identifier: 'exportKind'
                                  EqualsEqualsEqualsToken
                                  PropertyAccessExpression
                                    Identifier: ' ExportKind'
                                    Identifier: 'ExportEquals'
                                AmpersandAmpersandToken
                                BinaryExpression
                                  PropertyAccessExpression
                                    Identifier: ' parent'
                                    Identifier: 'kind'
                                  EqualsEqualsEqualsToken
                                  PropertyAccessExpression
                                    Identifier: ' SyntaxKind'
                                    Identifier: 'VariableDeclaration'
                              Block
                                VariableStatement
                                  VariableDeclarationList
                                    VariableDeclaration
                                      ObjectBindingPattern
                                        BindingElement
                                          Identifier: ' name'
                                      AsExpression
                                        Identifier: ' parent'
                                        TypeReference
                                          Identifier: ' VariableDeclaration'
                                IfStatement
                                  BinaryExpression
                                    PropertyAccessExpression
                                      Identifier: 'name'
                                      Identifier: 'kind'
                                    EqualsEqualsEqualsToken
                                    PropertyAccessExpression
                                      Identifier: ' SyntaxKind'
                                      Identifier: 'Identifier'
                                  Block
                                    ExpressionStatement
                                      CallExpression
                                        PropertyAccessExpression
                                          Identifier: '
                                    directImports'
                                          Identifier: 'push'
                                        Identifier: 'name'
                                    BreakStatement
                        BreakStatement
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'Identifier'
                        BreakStatement
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'ImportEqualsDeclaration'
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                        handleNamespaceImport'
                            Identifier: 'direct'
                            PropertyAccessExpression
                              Identifier: ' direct'
                              Identifier: 'name'
                            CallExpression
                              Identifier: ' hasSyntacticModifier'
                              Identifier: 'direct'
                              PropertyAccessExpression
                                Identifier: ' ModifierFlags'
                                Identifier: 'Export'
                            FalseKeyword
                        BreakStatement
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'ImportDeclaration'
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'JSDocImportTag'
                        ExpressionStatement
                          CallExpression
                            PropertyAccessExpression
                              Identifier: '
                        directImports'
                              Identifier: 'push'
                            Identifier: 'direct'
                        VariableStatement
                          VariableDeclarationList
                            VariableDeclaration
                              Identifier: ' namedBindings'
                              BinaryExpression
                                PropertyAccessExpression
                                  Identifier: ' direct'
                                  Identifier: 'importClause'
                                AmpersandAmpersandToken
                                PropertyAccessExpression
                                  PropertyAccessExpression
                                    Identifier: ' direct'
                                    Identifier: 'importClause'
                                  Identifier: 'namedBindings'
                        IfStatement
                          BinaryExpression
                            Identifier: 'namedBindings'
                            AmpersandAmpersandToken
                            BinaryExpression
                              PropertyAccessExpression
                                Identifier: ' namedBindings'
                                Identifier: 'kind'
                              EqualsEqualsEqualsToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'NamespaceImport'
                          Block
                            ExpressionStatement
                              CallExpression
                                Identifier: '
                            handleNamespaceImport'
                                Identifier: 'direct'
                                PropertyAccessExpression
                                  Identifier: ' namedBindings'
                                  Identifier: 'name'
                                FalseKeyword
                                TrueKeyword
                          IfStatement
                            BinaryExpression
                              PrefixUnaryExpression
                                Identifier: 'isAvailableThroughGlobal'
                              AmpersandAmpersandToken
                              CallExpression
                                Identifier: ' isDefaultImport'
                                Identifier: 'direct'
                            Block
                              ExpressionStatement
                                CallExpression
                                  Identifier: '
                            addIndirectUser'
                                  CallExpression
                                    Identifier: 'getSourceFileLikeForImportDeclaration'
                                    Identifier: 'direct'
                        BreakStatement
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'ExportDeclaration'
                        IfStatement
                          PrefixUnaryExpression
                            PropertyAccessExpression
                              Identifier: 'direct'
                              Identifier: 'exportClause'
                          Block
                            ExpressionStatement
                              CallExpression
                                Identifier: '
                            // This is `export * from "foo"`, so imports of this module may import the export too.
                            handleDirectImports'
                                CallExpression
                                  Identifier: 'getContainingModuleSymbol'
                                  Identifier: 'direct'
                                  Identifier: ' checker'
                          IfStatement
                            BinaryExpression
                              PropertyAccessExpression
                                PropertyAccessExpression
                                  Identifier: 'direct'
                                  Identifier: 'exportClause'
                                Identifier: 'kind'
                              EqualsEqualsEqualsToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'NamespaceExport'
                            Block
                              ExpressionStatement
                                CallExpression
                                  Identifier: '
                            // `export * as foo from "foo"` add to indirect uses
                            addIndirectUser'
                                  CallExpression
                                    Identifier: 'getSourceFileLikeForImportDeclaration'
                                    Identifier: 'direct'
                                  TrueKeyword
                            Block
                              ExpressionStatement
                                CallExpression
                                  PropertyAccessExpression
                                    Identifier: '
                            // This is `export { foo } from "foo"` and creates an alias symbol, so recursive search will get handle re-exports.
                            directImports'
                                    Identifier: 'push'
                                  Identifier: 'direct'
                        BreakStatement
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'ImportType'
                        IfStatement
                          BinaryExpression
                            BinaryExpression
                              BinaryExpression
                                PrefixUnaryExpression
                                  Identifier: 'isAvailableThroughGlobal'
                                AmpersandAmpersandToken
                                PropertyAccessExpression
                                  Identifier: ' direct'
                                  Identifier: 'isTypeOf'
                              AmpersandAmpersandToken
                              PrefixUnaryExpression
                                PropertyAccessExpression
                                  Identifier: 'direct'
                                  Identifier: 'qualifier'
                            AmpersandAmpersandToken
                            CallExpression
                              Identifier: ' isExported'
                              Identifier: 'direct'
                          Block
                            ExpressionStatement
                              CallExpression
                                Identifier: '
                            addIndirectUser'
                                CallExpression
                                  PropertyAccessExpression
                                    Identifier: 'direct'
                                    Identifier: 'getSourceFile'
                                TrueKeyword
                        ExpressionStatement
                          CallExpression
                            PropertyAccessExpression
                              Identifier: '
                        directImports'
                              Identifier: 'push'
                            Identifier: 'direct'
                        BreakStatement
                      DefaultClause
                        ExpressionStatement
                          CallExpression
                            PropertyAccessExpression
                              Identifier: '
                        Debug'
                              Identifier: 'failBadSyntaxKind'
                            Identifier: 'direct'
                            StringLiteral
      FunctionDeclaration
        Identifier: ' handleImportCall'
        Parameter
          Identifier: 'importCall'
          TypeReference
            Identifier: ' ImportCall'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' top'
                BinaryExpression
                  CallExpression
                    Identifier: ' findAncestor'
                    Identifier: 'importCall'
                    Identifier: ' isAmbientModuleDeclaration'
                  BarBarToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' importCall'
                      Identifier: 'getSourceFile'
          ExpressionStatement
            CallExpression
              Identifier: '
        addIndirectUser'
              Identifier: 'top'
              PrefixUnaryExpression
                PrefixUnaryExpression
                  CallExpression
                    Identifier: 'isExported'
                    Identifier: 'importCall'
                    TrueKeyword
      FunctionDeclaration
        Identifier: ' isExported'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' stopAtAmbientModule'
          FalseKeyword
        Block
          ReturnStatement
            CallExpression
              Identifier: ' findAncestor'
              Identifier: 'node'
              ArrowFunction
                Parameter
                  Identifier: ' node'
                EqualsGreaterThanToken
                Block
                  IfStatement
                    BinaryExpression
                      Identifier: 'stopAtAmbientModule'
                      AmpersandAmpersandToken
                      CallExpression
                        Identifier: ' isAmbientModuleDeclaration'
                        Identifier: 'node'
                    ReturnStatement
                      StringLiteral
                  ReturnStatement
                    BinaryExpression
                      CallExpression
                        Identifier: ' canHaveModifiers'
                        Identifier: 'node'
                      AmpersandAmpersandToken
                      CallExpression
                        Identifier: ' some'
                        PropertyAccessExpression
                          Identifier: 'node'
                          Identifier: 'modifiers'
                        Identifier: ' isExportModifier'
      FunctionDeclaration
        Identifier: ' handleNamespaceImport'
        Parameter
          Identifier: 'importDeclaration'
          TypeReference
            Identifier: ' AnyImportOrJsDocImport'
        Parameter
          Identifier: ' name'
          TypeReference
            Identifier: ' Identifier'
        Parameter
          Identifier: ' isReExport'
          BooleanKeyword
        Parameter
          Identifier: ' alreadyAddedDirect'
          BooleanKeyword
        VoidKeyword
        Block
          IfStatement
            BinaryExpression
              Identifier: 'exportKind'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' ExportKind'
                Identifier: 'ExportEquals'
            Block
              IfStatement
                PrefixUnaryExpression
                  Identifier: 'alreadyAddedDirect'
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' directImports'
                      Identifier: 'push'
                    Identifier: 'importDeclaration'
            IfStatement
              PrefixUnaryExpression
                Identifier: 'isAvailableThroughGlobal'
              Block
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' sourceFileLike'
                      CallExpression
                        Identifier: ' getSourceFileLikeForImportDeclaration'
                        Identifier: 'importDeclaration'
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
            Debug'
                      Identifier: 'assert'
                    BinaryExpression
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: 'sourceFileLike'
                          Identifier: 'kind'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'SourceFile'
                      BarBarToken
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: ' sourceFileLike'
                          Identifier: 'kind'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'ModuleDeclaration'
                IfStatement
                  BinaryExpression
                    Identifier: 'isReExport'
                    BarBarToken
                    CallExpression
                      Identifier: ' findNamespaceReExports'
                      Identifier: 'sourceFileLike'
                      Identifier: ' name'
                      Identifier: ' checker'
                  Block
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                addIndirectUser'
                        Identifier: 'sourceFileLike'
                        TrueKeyword
                  Block
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                addIndirectUser'
                        Identifier: 'sourceFileLike'
      FunctionDeclaration
        Identifier: ' addIndirectUser'
        Parameter
          Identifier: 'sourceFileLike'
          TypeReference
            Identifier: ' SourceFileLike'
        Parameter
          Identifier: ' addTransitiveDependencies'
          FalseKeyword
        VoidKeyword
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        Debug'
                Identifier: 'assert'
              PrefixUnaryExpression
                Identifier: 'isAvailableThroughGlobal'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' isNew'
                CallExpression
                  Identifier: ' markSeenIndirectUser'
                  Identifier: 'sourceFileLike'
          IfStatement
            PrefixUnaryExpression
              Identifier: 'isNew'
            ReturnStatement
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                NonNullExpression
                  Identifier: '
        indirectUserDeclarations'
                Identifier: 'push'
              Identifier: 'sourceFileLike'
          IfStatement
            PrefixUnaryExpression
              Identifier: 'addTransitiveDependencies'
            ReturnStatement
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' moduleSymbol'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' checker'
                    Identifier: 'getMergedSymbol'
                  PropertyAccessExpression
                    Identifier: 'sourceFileLike'
                    Identifier: 'symbol'
          IfStatement
            PrefixUnaryExpression
              Identifier: 'moduleSymbol'
            ReturnStatement
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        Debug'
                Identifier: 'assert'
              PrefixUnaryExpression
                PrefixUnaryExpression
                  ParenthesizedExpression
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: 'moduleSymbol'
                        Identifier: 'flags'
                      AmpersandToken
                      PropertyAccessExpression
                        Identifier: ' SymbolFlags'
                        Identifier: 'Module'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' directImports'
                CallExpression
                  Identifier: ' getDirectImports'
                  Identifier: 'moduleSymbol'
          IfStatement
            Identifier: 'directImports'
            Block
              ForOfStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' directImport'
                Identifier: ' directImports'
                Block
                  IfStatement
                    PrefixUnaryExpression
                      CallExpression
                        Identifier: 'isImportTypeNode'
                        Identifier: 'directImport'
                    Block
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    addIndirectUser'
                          CallExpression
                            Identifier: 'getSourceFileLikeForImportDeclaration'
                            Identifier: 'directImport'
                          TrueKeyword
      FunctionDeclaration
        Identifier: ' getDirectImports'
        Parameter
          Identifier: 'moduleSymbol'
          TypeReference
            Identifier: ' Symbol'
        UnionType
          ArrayType
            TypeReference
              Identifier: ' ImporterOrCallExpression'
          UndefinedKeyword
        Block
          ReturnStatement
            CallExpression
              PropertyAccessExpression
                Identifier: ' allDirectImports'
                Identifier: 'get'
              CallExpression
                PropertyAccessExpression
                  CallExpression
                    Identifier: 'getSymbolId'
                    Identifier: 'moduleSymbol'
                  Identifier: 'toString'
  FunctionDeclaration
    Identifier: ' getSearchesFromDirectImports'
    Parameter
      Identifier: 'directImports'
      ArrayType
        TypeReference
          Identifier: ' Importer'
    Parameter
      Identifier: ' exportSymbol'
      TypeReference
        Identifier: ' Symbol'
    Parameter
      Identifier: ' exportKind'
      TypeReference
        Identifier: ' ExportKind'
    Parameter
      Identifier: ' checker'
      TypeReference
        Identifier: ' TypeChecker'
    Parameter
      Identifier: ' isForRename'
      BooleanKeyword
    TypeReference
      Identifier: ' Pick'
      TypeReference
        Identifier: 'ImportsResult'
      UnionType
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' importSearches'
            ArrayType
              TupleType
                TypeReference
                  Identifier: 'ModuleExportName'
                TypeReference
                  Identifier: ' Symbol'
            ArrayLiteralExpression
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' singleReferences'
            ArrayType
              ParenthesizedType
                UnionType
                  TypeReference
                    Identifier: 'Identifier'
                  TypeReference
                    Identifier: ' StringLiteral'
            ArrayLiteralExpression
      FunctionDeclaration
        Identifier: ' addSearch'
        Parameter
          Identifier: 'location'
          TypeReference
            Identifier: ' ModuleExportName'
        Parameter
          Identifier: ' symbol'
          TypeReference
            Identifier: ' Symbol'
        VoidKeyword
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        importSearches'
                Identifier: 'push'
              ArrayLiteralExpression
                Identifier: 'location'
                Identifier: ' symbol'
      IfStatement
        Identifier: 'directImports'
        Block
          ForOfStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' decl'
            Identifier: ' directImports'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            handleImport'
                  Identifier: 'decl'
      ReturnStatement
        ObjectLiteralExpression
          ShorthandPropertyAssignment
            Identifier: ' importSearches'
          ShorthandPropertyAssignment
            Identifier: ' singleReferences'
      FunctionDeclaration
        Identifier: ' handleImport'
        Parameter
          Identifier: 'decl'
          TypeReference
            Identifier: ' Importer'
        VoidKeyword
        Block
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'decl'
                Identifier: 'kind'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'ImportEqualsDeclaration'
            Block
              IfStatement
                CallExpression
                  Identifier: 'isExternalModuleImportEquals'
                  Identifier: 'decl'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                handleNamespaceImportLike'
                      PropertyAccessExpression
                        Identifier: 'decl'
                        Identifier: 'name'
              ReturnStatement
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'decl'
                Identifier: 'kind'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'Identifier'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            handleNamespaceImportLike'
                  Identifier: 'decl'
              ReturnStatement
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'decl'
                Identifier: 'kind'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'ImportType'
            Block
              IfStatement
                PropertyAccessExpression
                  Identifier: 'decl'
                  Identifier: 'qualifier'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' firstIdentifier'
                        CallExpression
                          Identifier: ' getFirstIdentifier'
                          PropertyAccessExpression
                            Identifier: 'decl'
                            Identifier: 'qualifier'
                  IfStatement
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: 'firstIdentifier'
                        Identifier: 'escapedText'
                      EqualsEqualsEqualsToken
                      CallExpression
                        Identifier: ' symbolName'
                        Identifier: 'exportSymbol'
                    Block
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                    singleReferences'
                            Identifier: 'push'
                          Identifier: 'firstIdentifier'
                IfStatement
                  BinaryExpression
                    Identifier: 'exportKind'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' ExportKind'
                      Identifier: 'ExportEquals'
                  Block
                    ExpressionStatement
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                singleReferences'
                          Identifier: 'push'
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: 'decl'
                            Identifier: 'argument'
                          Identifier: 'literal'
              ReturnStatement
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                NonNullExpression
                  PropertyAccessExpression
                    Identifier: 'decl'
                    Identifier: 'moduleSpecifier'
                Identifier: 'kind'
              ExclamationEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'StringLiteral'
            Block
              ReturnStatement
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'decl'
                Identifier: 'kind'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'ExportDeclaration'
            Block
              IfStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: 'decl'
                    Identifier: 'exportClause'
                  AmpersandAmpersandToken
                  CallExpression
                    Identifier: ' isNamedExports'
                    PropertyAccessExpression
                      Identifier: 'decl'
                      Identifier: 'exportClause'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                searchForNamedImport'
                      PropertyAccessExpression
                        Identifier: 'decl'
                        Identifier: 'exportClause'
              ReturnStatement
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                ObjectBindingPattern
                  BindingElement
                    Identifier: ' name'
                  BindingElement
                    Identifier: ' namedBindings'
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: ' decl'
                    Identifier: 'importClause'
                  BarBarToken
                  ObjectLiteralExpression
                    PropertyAssignment
                      Identifier: ' name'
                      Identifier: ' undefined'
                    PropertyAssignment
                      Identifier: ' namedBindings'
                      Identifier: ' undefined'
          IfStatement
            Identifier: 'namedBindings'
            Block
              SwitchStatement
                PropertyAccessExpression
                  Identifier: 'namedBindings'
                  Identifier: 'kind'
                CaseBlock
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'NamespaceImport'
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                    handleNamespaceImportLike'
                        PropertyAccessExpression
                          Identifier: 'namedBindings'
                          Identifier: 'name'
                    BreakStatement
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'NamedImports'
                    IfStatement
                      BinaryExpression
                        BinaryExpression
                          Identifier: 'exportKind'
                          EqualsEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' ExportKind'
                            Identifier: 'Named'
                        BarBarToken
                        BinaryExpression
                          Identifier: ' exportKind'
                          EqualsEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' ExportKind'
                            Identifier: 'Default'
                      Block
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                        searchForNamedImport'
                            Identifier: 'namedBindings'
                    BreakStatement
                  DefaultClause
                    ExpressionStatement
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                    Debug'
                          Identifier: 'assertNever'
                        Identifier: 'namedBindings'
          IfStatement
            BinaryExpression
              BinaryExpression
                Identifier: 'name'
                AmpersandAmpersandToken
                ParenthesizedExpression
                  BinaryExpression
                    BinaryExpression
                      Identifier: 'exportKind'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' ExportKind'
                        Identifier: 'Default'
                    BarBarToken
                    BinaryExpression
                      Identifier: ' exportKind'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' ExportKind'
                        Identifier: 'ExportEquals'
              AmpersandAmpersandToken
              ParenthesizedExpression
                BinaryExpression
                  PrefixUnaryExpression
                    Identifier: 'isForRename'
                  BarBarToken
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: ' name'
                      Identifier: 'escapedText'
                    EqualsEqualsEqualsToken
                    CallExpression
                      Identifier: ' symbolEscapedNameNoDefault'
                      Identifier: 'exportSymbol'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' defaultImportAlias'
                    NonNullExpression
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' checker'
                          Identifier: 'getSymbolAtLocation'
                        Identifier: 'name'
              ExpressionStatement
                CallExpression
                  Identifier: '
            addSearch'
                  Identifier: 'name'
                  Identifier: ' defaultImportAlias'
      FunctionDeclaration
        Identifier: ' handleNamespaceImportLike'
        Parameter
          Identifier: 'importName'
          TypeReference
            Identifier: ' Identifier'
        VoidKeyword
        Block
          IfStatement
            BinaryExpression
              BinaryExpression
                Identifier: 'exportKind'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' ExportKind'
                  Identifier: 'ExportEquals'
              AmpersandAmpersandToken
              ParenthesizedExpression
                BinaryExpression
                  PrefixUnaryExpression
                    Identifier: 'isForRename'
                  BarBarToken
                  CallExpression
                    Identifier: ' isNameMatch'
                    PropertyAccessExpression
                      Identifier: 'importName'
                      Identifier: 'escapedText'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            addSearch'
                  Identifier: 'importName'
                  NonNullExpression
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' checker'
                        Identifier: 'getSymbolAtLocation'
                      Identifier: 'importName'
      FunctionDeclaration
        Identifier: ' searchForNamedImport'
        Parameter
          Identifier: 'namedBindings'
          UnionType
            TypeReference
              Identifier: ' NamedImportsOrExports'
            UndefinedKeyword
        VoidKeyword
        Block
          IfStatement
            PrefixUnaryExpression
              Identifier: 'namedBindings'
            Block
              ReturnStatement
          ForOfStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' element'
            PropertyAccessExpression
              Identifier: ' namedBindings'
              Identifier: 'elements'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    ObjectBindingPattern
                      BindingElement
                        Identifier: ' name'
                      BindingElement
                        Identifier: ' propertyName'
                    Identifier: ' element'
              IfStatement
                PrefixUnaryExpression
                  CallExpression
                    Identifier: 'isNameMatch'
                    CallExpression
                      Identifier: 'moduleExportNameTextEscaped'
                      BinaryExpression
                        Identifier: 'propertyName'
                        BarBarToken
                        Identifier: ' name'
                Block
                  ContinueStatement
              IfStatement
                Identifier: 'propertyName'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                // This is `import { foo as bar } from "./a"` or `export { foo as bar } from "./a"`. `foo` isn't a local in the file, so just add it as a single reference.
                singleReferences'
                        Identifier: 'push'
                      Identifier: 'propertyName'
                  IfStatement
                    BinaryExpression
                      PrefixUnaryExpression
                        Identifier: 'isForRename'
                      BarBarToken
                      BinaryExpression
                        CallExpression
                          Identifier: ' moduleExportNameTextEscaped'
                          Identifier: 'name'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' exportSymbol'
                          Identifier: 'escapedName'
                    Block
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    // Search locally for `bar`.
                    addSearch'
                          Identifier: 'name'
                          NonNullExpression
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' checker'
                                Identifier: 'getSymbolAtLocation'
                              Identifier: 'name'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' localSymbol'
                        ConditionalExpression
                          BinaryExpression
                            BinaryExpression
                              PropertyAccessExpression
                                Identifier: ' element'
                                Identifier: 'kind'
                              EqualsEqualsEqualsToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'ExportSpecifier'
                            AmpersandAmpersandToken
                            PropertyAccessExpression
                              Identifier: ' element'
                              Identifier: 'propertyName'
                          QuestionToken
                          NonNullExpression
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' checker'
                                Identifier: 'getExportSpecifierLocalTargetSymbol'
                              Identifier: 'element'
                          ColonToken
                          NonNullExpression
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' checker'
                                Identifier: 'getSymbolAtLocation'
                              Identifier: 'name'
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                addSearch'
                      Identifier: 'name'
                      Identifier: ' localSymbol'
      FunctionDeclaration
        Identifier: ' isNameMatch'
        Parameter
          Identifier: 'name'
          TypeReference
            Identifier: ' __String'
        BooleanKeyword
        Block
          ReturnStatement
            BinaryExpression
              BinaryExpression
                Identifier: ' name'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' exportSymbol'
                  Identifier: 'escapedName'
              BarBarToken
              BinaryExpression
                BinaryExpression
                  Identifier: ' exportKind'
                  ExclamationEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' ExportKind'
                    Identifier: 'Named'
                AmpersandAmpersandToken
                BinaryExpression
                  Identifier: ' name'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' InternalSymbolName'
                    Identifier: 'Default'
  FunctionDeclaration
    Identifier: ' findNamespaceReExports'
    Parameter
      Identifier: 'sourceFileLike'
      TypeReference
        Identifier: ' SourceFileLike'
    Parameter
      Identifier: ' name'
      TypeReference
        Identifier: ' Identifier'
    Parameter
      Identifier: ' checker'
      TypeReference
        Identifier: ' TypeChecker'
    BooleanKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' namespaceImportSymbol'
            CallExpression
              PropertyAccessExpression
                Identifier: ' checker'
                Identifier: 'getSymbolAtLocation'
              Identifier: 'name'
      ReturnStatement
        PrefixUnaryExpression
          PrefixUnaryExpression
            CallExpression
              Identifier: 'forEachPossibleImportOrExportStatement'
              Identifier: 'sourceFileLike'
              ArrowFunction
                Parameter
                  Identifier: ' statement'
                EqualsGreaterThanToken
                Block
                  IfStatement
                    PrefixUnaryExpression
                      CallExpression
                        Identifier: 'isExportDeclaration'
                        Identifier: 'statement'
                    ReturnStatement
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        ObjectBindingPattern
                          BindingElement
                            Identifier: ' exportClause'
                          BindingElement
                            Identifier: ' moduleSpecifier'
                        Identifier: ' statement'
                  ReturnStatement
                    BinaryExpression
                      BinaryExpression
                        BinaryExpression
                          PrefixUnaryExpression
                            Identifier: 'moduleSpecifier'
                          AmpersandAmpersandToken
                          Identifier: ' exportClause'
                        AmpersandAmpersandToken
                        CallExpression
                          Identifier: ' isNamedExports'
                          Identifier: 'exportClause'
                      AmpersandAmpersandToken
                      CallExpression
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: '
            exportClause'
                            Identifier: 'elements'
                          Identifier: 'some'
                        ArrowFunction
                          Parameter
                            Identifier: 'element'
                          EqualsGreaterThanToken
                          BinaryExpression
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' checker'
                                Identifier: 'getExportSpecifierLocalTargetSymbol'
                              Identifier: 'element'
                            EqualsEqualsEqualsToken
                            Identifier: ' namespaceImportSymbol'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' ModuleReference'
    UnionType
      TypeLiteral
        PropertySignature
          Identifier: ' kind'
          LiteralType
            StringLiteral
        PropertySignature
          Identifier: ' literal'
          TypeReference
            Identifier: ' StringLiteralLike'
      TypeLiteral
        PropertySignature
          Identifier: ' kind'
          LiteralType
            StringLiteral
        PropertySignature
          Identifier: ' referencingFile'
          TypeReference
            Identifier: ' SourceFile'
        PropertySignature
          Identifier: ' ref'
          TypeReference
            Identifier: ' FileReference'
      TypeLiteral
        PropertySignature
          Identifier: ' kind'
          LiteralType
            StringLiteral
        PropertySignature
          Identifier: ' literal'
          TypeReference
            Identifier: ' StringLiteralLike'
        PropertySignature
          Identifier: ' referencingFile'
          TypeReference
            Identifier: ' SourceFile'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' findModuleReferences'
    Parameter
      Identifier: 'program'
      TypeReference
        Identifier: ' Program'
    Parameter
      Identifier: ' sourceFiles'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' SourceFile'
    Parameter
      Identifier: ' searchModuleSymbol'
      TypeReference
        Identifier: ' Symbol'
    ArrayType
      TypeReference
        Identifier: ' ModuleReference'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' refs'
            ArrayType
              TypeReference
                Identifier: ' ModuleReference'
            ArrayLiteralExpression
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' checker'
            CallExpression
              PropertyAccessExpression
                Identifier: ' program'
                Identifier: 'getTypeChecker'
      ForOfStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' referencingFile'
        Identifier: ' sourceFiles'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' searchSourceFile'
                PropertyAccessExpression
                  Identifier: ' searchModuleSymbol'
                  Identifier: 'valueDeclaration'
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'searchSourceFile'
                QuestionDotToken
                Identifier: 'kind'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'SourceFile'
            Block
              ForOfStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' ref'
                PropertyAccessExpression
                  Identifier: ' referencingFile'
                  Identifier: 'referencedFiles'
                Block
                  IfStatement
                    BinaryExpression
                      CallExpression
                        PropertyAccessExpression
                          Identifier: 'program'
                          Identifier: 'getSourceFileFromReference'
                        Identifier: 'referencingFile'
                        Identifier: ' ref'
                      EqualsEqualsEqualsToken
                      Identifier: ' searchSourceFile'
                    Block
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                    refs'
                            Identifier: 'push'
                          ObjectLiteralExpression
                            PropertyAssignment
                              Identifier: ' kind'
                              StringLiteral
                            ShorthandPropertyAssignment
                              Identifier: ' referencingFile'
                            ShorthandPropertyAssignment
                              Identifier: ' ref'
              ForOfStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' ref'
                PropertyAccessExpression
                  Identifier: ' referencingFile'
                  Identifier: 'typeReferenceDirectives'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' referenced'
                        PropertyAccessExpression
                          CallExpression
                            PropertyAccessExpression
                              Identifier: ' program'
                              Identifier: 'getResolvedTypeReferenceDirectiveFromTypeReferenceDirective'
                            Identifier: 'ref'
                            Identifier: ' referencingFile'
                          QuestionDotToken
                          Identifier: 'resolvedTypeReferenceDirective'
                  IfStatement
                    BinaryExpression
                      BinaryExpression
                        Identifier: 'referenced'
                        ExclamationEqualsEqualsToken
                        Identifier: ' undefined'
                      AmpersandAmpersandToken
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: ' referenced'
                          Identifier: 'resolvedFileName'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          ParenthesizedExpression
                            AsExpression
                              Identifier: 'searchSourceFile'
                              TypeReference
                                Identifier: ' SourceFile'
                          Identifier: 'fileName'
                    Block
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                    refs'
                            Identifier: 'push'
                          ObjectLiteralExpression
                            PropertyAssignment
                              Identifier: ' kind'
                              StringLiteral
                            ShorthandPropertyAssignment
                              Identifier: ' referencingFile'
                            ShorthandPropertyAssignment
                              Identifier: ' ref'
          ExpressionStatement
            CallExpression
              Identifier: '

        forEachImport'
              Identifier: 'referencingFile'
              ArrowFunction
                Parameter
                  Identifier: 'importDecl'
                Parameter
                  Identifier: ' moduleSpecifier'
                EqualsGreaterThanToken
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' moduleSymbol'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' checker'
                            Identifier: 'getSymbolAtLocation'
                          Identifier: 'moduleSpecifier'
                  IfStatement
                    BinaryExpression
                      Identifier: 'moduleSymbol'
                      EqualsEqualsEqualsToken
                      Identifier: ' searchModuleSymbol'
                    Block
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                refs'
                            Identifier: 'push'
                          ConditionalExpression
                            CallExpression
                              Identifier: 'nodeIsSynthesized'
                              Identifier: 'importDecl'
                            QuestionToken
                            ObjectLiteralExpression
                              PropertyAssignment
                                Identifier: ' kind'
                                StringLiteral
                              PropertyAssignment
                                Identifier: ' literal'
                                Identifier: ' moduleSpecifier'
                              ShorthandPropertyAssignment
                                Identifier: ' referencingFile'
                            ColonToken
                            ObjectLiteralExpression
                              PropertyAssignment
                                Identifier: ' kind'
                                StringLiteral
                              PropertyAssignment
                                Identifier: ' literal'
                                Identifier: ' moduleSpecifier'
      ReturnStatement
        Identifier: ' refs'
  FunctionDeclaration
    Identifier: ' getDirectImportsMap'
    Parameter
      Identifier: 'sourceFiles'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' SourceFile'
    Parameter
      Identifier: ' checker'
      TypeReference
        Identifier: ' TypeChecker'
    Parameter
      Identifier: ' cancellationToken'
      UnionType
        TypeReference
          Identifier: ' CancellationToken'
        UndefinedKeyword
    TypeReference
      Identifier: ' Map'
      StringKeyword
      ArrayType
        TypeReference
          Identifier: ' ImporterOrCallExpression'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' map'
            NewExpression
              Identifier: ' Map'
              StringKeyword
              ArrayType
                TypeReference
                  Identifier: ' ImporterOrCallExpression'
      ForOfStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' sourceFile'
        Identifier: ' sourceFiles'
        Block
          IfStatement
            Identifier: 'cancellationToken'
            ExpressionStatement
              CallExpression
                PropertyAccessExpression
                  Identifier: ' cancellationToken'
                  Identifier: 'throwIfCancellationRequested'
          ExpressionStatement
            CallExpression
              Identifier: '
        forEachImport'
              Identifier: 'sourceFile'
              ArrowFunction
                Parameter
                  Identifier: 'importDecl'
                Parameter
                  Identifier: ' moduleSpecifier'
                EqualsGreaterThanToken
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' moduleSymbol'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' checker'
                            Identifier: 'getSymbolAtLocation'
                          Identifier: 'moduleSpecifier'
                  IfStatement
                    Identifier: 'moduleSymbol'
                    Block
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' id'
                            CallExpression
                              PropertyAccessExpression
                                CallExpression
                                  Identifier: ' getSymbolId'
                                  Identifier: 'moduleSymbol'
                                Identifier: 'toString'
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' imports'
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' map'
                                Identifier: 'get'
                              Identifier: 'id'
                      IfStatement
                        PrefixUnaryExpression
                          Identifier: 'imports'
                        Block
                          ExpressionStatement
                            CallExpression
                              PropertyAccessExpression
                                Identifier: '
                    map'
                                Identifier: 'set'
                              Identifier: 'id'
                              BinaryExpression
                                Identifier: ' imports'
                                EqualsToken
                                ArrayLiteralExpression
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                imports'
                            Identifier: 'push'
                          Identifier: 'importDecl'
      ReturnStatement
        Identifier: ' map'
  FunctionDeclaration
    Identifier: ' forEachPossibleImportOrExportStatement'
    TypeParameter
      Identifier: 'T'
    Parameter
      Identifier: 'sourceFileLike'
      TypeReference
        Identifier: ' SourceFileLike'
    Parameter
      Identifier: ' action'
      FunctionType
        Parameter
          Identifier: 'statement'
          TypeReference
            Identifier: ' Statement'
        TypeReference
          Identifier: ' T'
    Block
      ReturnStatement
        CallExpression
          Identifier: ' forEach'
          ConditionalExpression
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'sourceFileLike'
                Identifier: 'kind'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'SourceFile'
            QuestionToken
            PropertyAccessExpression
              Identifier: ' sourceFileLike'
              Identifier: 'statements'
            ColonToken
            PropertyAccessExpression
              NonNullExpression
                PropertyAccessExpression
                  Identifier: ' sourceFileLike'
                  Identifier: 'body'
              Identifier: 'statements'
          ArrowFunction
            Parameter
              Identifier: ' statement'
            EqualsGreaterThanToken
            BinaryExpression
              CallExpression
                Identifier: '
        // TODO: GH#18217
        action'
                Identifier: 'statement'
              BarBarToken
              ParenthesizedExpression
                BinaryExpression
                  CallExpression
                    Identifier: 'isAmbientModuleDeclaration'
                    Identifier: 'statement'
                  AmpersandAmpersandToken
                  CallExpression
                    Identifier: ' forEach'
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: 'statement'
                        Identifier: 'body'
                      AmpersandAmpersandToken
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: ' statement'
                          Identifier: 'body'
                        Identifier: 'statements'
                    Identifier: ' action'
  FunctionDeclaration
    Identifier: ' forEachImport'
    Parameter
      Identifier: 'sourceFile'
      TypeReference
        Identifier: ' SourceFile'
    Parameter
      Identifier: ' action'
      FunctionType
        Parameter
          Identifier: 'importStatement'
          TypeReference
            Identifier: ' ImporterOrCallExpression'
        Parameter
          Identifier: ' imported'
          TypeReference
            Identifier: ' StringLiteralLike'
        VoidKeyword
    VoidKeyword
    Block
      IfStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: 'sourceFile'
            Identifier: 'externalModuleIndicator'
          BarBarToken
          BinaryExpression
            PropertyAccessExpression
              Identifier: ' sourceFile'
              Identifier: 'imports'
            ExclamationEqualsEqualsToken
            Identifier: ' undefined'
        Block
          ForOfStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' i'
            PropertyAccessExpression
              Identifier: ' sourceFile'
              Identifier: 'imports'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            action'
                  CallExpression
                    Identifier: 'importFromModuleSpecifier'
                    Identifier: 'i'
                  Identifier: ' i'
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        forEachPossibleImportOrExportStatement'
              Identifier: 'sourceFile'
              ArrowFunction
                Parameter
                  Identifier: ' statement'
                EqualsGreaterThanToken
                Block
                  SwitchStatement
                    PropertyAccessExpression
                      Identifier: 'statement'
                      Identifier: 'kind'
                    CaseBlock
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'ExportDeclaration'
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'ImportDeclaration'
                        Block
                          VariableStatement
                            VariableDeclarationList
                              VariableDeclaration
                                Identifier: ' decl'
                                AsExpression
                                  Identifier: ' statement'
                                  UnionType
                                    TypeReference
                                      Identifier: ' ImportDeclaration'
                                    TypeReference
                                      Identifier: ' ExportDeclaration'
                          IfStatement
                            BinaryExpression
                              PropertyAccessExpression
                                Identifier: 'decl'
                                Identifier: 'moduleSpecifier'
                              AmpersandAmpersandToken
                              CallExpression
                                Identifier: ' isStringLiteral'
                                PropertyAccessExpression
                                  Identifier: 'decl'
                                  Identifier: 'moduleSpecifier'
                            Block
                              ExpressionStatement
                                CallExpression
                                  Identifier: '
                        action'
                                  Identifier: 'decl'
                                  PropertyAccessExpression
                                    Identifier: ' decl'
                                    Identifier: 'moduleSpecifier'
                          BreakStatement
                      CaseClause
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'ImportEqualsDeclaration'
                        Block
                          VariableStatement
                            VariableDeclarationList
                              VariableDeclaration
                                Identifier: ' decl'
                                AsExpression
                                  Identifier: ' statement'
                                  TypeReference
                                    Identifier: ' ImportEqualsDeclaration'
                          IfStatement
                            CallExpression
                              Identifier: 'isExternalModuleImportEquals'
                              Identifier: 'decl'
                            Block
                              ExpressionStatement
                                CallExpression
                                  Identifier: '
                        action'
                                  Identifier: 'decl'
                                  PropertyAccessExpression
                                    PropertyAccessExpression
                                      Identifier: ' decl'
                                      Identifier: 'moduleReference'
                                    Identifier: 'expression'
                          BreakStatement
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ImportedSymbol'
    PropertySignature
      Identifier: '
    kind'
      TypeReference
        QualifiedName
          Identifier: ' ImportExport'
          Identifier: 'Import'
    PropertySignature
      Identifier: '
    symbol'
      TypeReference
        Identifier: ' Symbol'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExportedSymbol'
    PropertySignature
      Identifier: '
    kind'
      TypeReference
        QualifiedName
          Identifier: ' ImportExport'
          Identifier: 'Export'
    PropertySignature
      Identifier: '
    symbol'
      TypeReference
        Identifier: ' Symbol'
    PropertySignature
      Identifier: '
    exportInfo'
      TypeReference
        Identifier: ' ExportInfo'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getImportOrExportSymbol'
    Parameter
      Identifier: 'node'
      TypeReference
        Identifier: ' Node'
    Parameter
      Identifier: ' symbol'
      TypeReference
        Identifier: ' Symbol'
    Parameter
      Identifier: ' checker'
      TypeReference
        Identifier: ' TypeChecker'
    Parameter
      Identifier: ' comingFromExport'
      BooleanKeyword
    UnionType
      TypeReference
        Identifier: ' ImportedSymbol'
      TypeReference
        Identifier: ' ExportedSymbol'
      UndefinedKeyword
    Block
      ReturnStatement
        ConditionalExpression
          Identifier: ' comingFromExport'
          QuestionToken
          CallExpression
            Identifier: ' getExport'
          ColonToken
          BinaryExpression
            CallExpression
              Identifier: ' getExport'
            BarBarToken
            CallExpression
              Identifier: ' getImport'
      FunctionDeclaration
        Identifier: ' getExport'
        UnionType
          TypeReference
            Identifier: ' ExportedSymbol'
          TypeReference
            Identifier: ' ImportedSymbol'
          UndefinedKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                ObjectBindingPattern
                  BindingElement
                    Identifier: ' parent'
                Identifier: ' node'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' grandparent'
                PropertyAccessExpression
                  Identifier: ' parent'
                  Identifier: 'parent'
          IfStatement
            PropertyAccessExpression
              Identifier: 'symbol'
              Identifier: 'exportSymbol'
            Block
              IfStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: 'parent'
                    Identifier: 'kind'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'PropertyAccessExpression'
                Block
                  ReturnStatement
                    ConditionalExpression
                      BinaryExpression
                        CallExpression
                          PropertyAccessExpression
                            PropertyAccessExpression
                              Identifier: ' symbol'
                              Identifier: 'declarations'
                            QuestionDotToken
                            Identifier: 'some'
                          ArrowFunction
                            Parameter
                              Identifier: 'd'
                            EqualsGreaterThanToken
                            BinaryExpression
                              Identifier: ' d'
                              EqualsEqualsEqualsToken
                              Identifier: ' parent'
                        AmpersandAmpersandToken
                        CallExpression
                          Identifier: ' isBinaryExpression'
                          Identifier: 'grandparent'
                      QuestionToken
                      CallExpression
                        Identifier: ' getSpecialPropertyExport'
                        Identifier: 'grandparent'
                        FalseKeyword
                      ColonToken
                      Identifier: ' undefined'
                Block
                  ReturnStatement
                    CallExpression
                      Identifier: ' exportInfo'
                      PropertyAccessExpression
                        Identifier: 'symbol'
                        Identifier: 'exportSymbol'
                      CallExpression
                        Identifier: ' getExportKindForDeclaration'
                        Identifier: 'parent'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' exportNode'
                    CallExpression
                      Identifier: ' getExportNode'
                      Identifier: 'parent'
                      Identifier: ' node'
              IfStatement
                BinaryExpression
                  Identifier: 'exportNode'
                  AmpersandAmpersandToken
                  CallExpression
                    Identifier: ' hasSyntacticModifier'
                    Identifier: 'exportNode'
                    PropertyAccessExpression
                      Identifier: ' ModifierFlags'
                      Identifier: 'Export'
                Block
                  IfStatement
                    BinaryExpression
                      CallExpression
                        Identifier: 'isImportEqualsDeclaration'
                        Identifier: 'exportNode'
                      AmpersandAmpersandToken
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: ' exportNode'
                          Identifier: 'moduleReference'
                        EqualsEqualsEqualsToken
                        Identifier: ' node'
                    Block
                      IfStatement
                        Identifier: 'comingFromExport'
                        Block
                          ReturnStatement
                            Identifier: ' undefined'
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' lhsSymbol'
                            NonNullExpression
                              CallExpression
                                PropertyAccessExpression
                                  Identifier: ' checker'
                                  Identifier: 'getSymbolAtLocation'
                                PropertyAccessExpression
                                  Identifier: 'exportNode'
                                  Identifier: 'name'
                      ReturnStatement
                        ObjectLiteralExpression
                          PropertyAssignment
                            Identifier: ' kind'
                            PropertyAccessExpression
                              Identifier: ' ImportExport'
                              Identifier: 'Import'
                          PropertyAssignment
                            Identifier: ' symbol'
                            Identifier: ' lhsSymbol'
                    Block
                      ReturnStatement
                        CallExpression
                          Identifier: ' exportInfo'
                          Identifier: 'symbol'
                          CallExpression
                            Identifier: ' getExportKindForDeclaration'
                            Identifier: 'exportNode'
                IfStatement
                  CallExpression
                    Identifier: 'isNamespaceExport'
                    Identifier: 'parent'
                  Block
                    ReturnStatement
                      CallExpression
                        Identifier: ' exportInfo'
                        Identifier: 'symbol'
                        PropertyAccessExpression
                          Identifier: ' ExportKind'
                          Identifier: 'Named'
                  IfStatement
                    CallExpression
                      Identifier: 'isExportAssignment'
                      Identifier: 'parent'
                    Block
                      ReturnStatement
                        CallExpression
                          Identifier: ' getExportAssignmentExport'
                          Identifier: 'parent'
                    IfStatement
                      CallExpression
                        Identifier: 'isExportAssignment'
                        Identifier: 'grandparent'
                      Block
                        ReturnStatement
                          CallExpression
                            Identifier: ' getExportAssignmentExport'
                            Identifier: 'grandparent'
                      IfStatement
                        CallExpression
                          Identifier: 'isBinaryExpression'
                          Identifier: 'parent'
                        Block
                          ReturnStatement
                            CallExpression
                              Identifier: ' getSpecialPropertyExport'
                              Identifier: 'parent'
                              TrueKeyword
                        IfStatement
                          CallExpression
                            Identifier: 'isBinaryExpression'
                            Identifier: 'grandparent'
                          Block
                            ReturnStatement
                              CallExpression
                                Identifier: ' getSpecialPropertyExport'
                                Identifier: 'grandparent'
                                TrueKeyword
                          IfStatement
                            BinaryExpression
                              CallExpression
                                Identifier: 'isJSDocTypedefTag'
                                Identifier: 'parent'
                              BarBarToken
                              CallExpression
                                Identifier: ' isJSDocCallbackTag'
                                Identifier: 'parent'
                            Block
                              ReturnStatement
                                CallExpression
                                  Identifier: ' exportInfo'
                                  Identifier: 'symbol'
                                  PropertyAccessExpression
                                    Identifier: ' ExportKind'
                                    Identifier: 'Named'
          FunctionDeclaration
            Identifier: ' getExportAssignmentExport'
            Parameter
              Identifier: 'ex'
              TypeReference
                Identifier: ' ExportAssignment'
            UnionType
              TypeReference
                Identifier: ' ExportedSymbol'
              UndefinedKeyword
            Block
              IfStatement
                PrefixUnaryExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: 'ex'
                      Identifier: 'symbol'
                    Identifier: 'parent'
                ReturnStatement
                  Identifier: ' undefined'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' exportKind'
                    ConditionalExpression
                      PropertyAccessExpression
                        Identifier: ' ex'
                        Identifier: 'isExportEquals'
                      QuestionToken
                      PropertyAccessExpression
                        Identifier: ' ExportKind'
                        Identifier: 'ExportEquals'
                      ColonToken
                      PropertyAccessExpression
                        Identifier: ' ExportKind'
                        Identifier: 'Default'
              ReturnStatement
                ObjectLiteralExpression
                  PropertyAssignment
                    Identifier: ' kind'
                    PropertyAccessExpression
                      Identifier: ' ImportExport'
                      Identifier: 'Export'
                  ShorthandPropertyAssignment
                    Identifier: ' symbol'
                  PropertyAssignment
                    Identifier: ' exportInfo'
                    ObjectLiteralExpression
                      PropertyAssignment
                        Identifier: ' exportingModuleSymbol'
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: ' ex'
                            Identifier: 'symbol'
                          Identifier: 'parent'
                      ShorthandPropertyAssignment
                        Identifier: ' exportKind'
          FunctionDeclaration
            Identifier: ' getSpecialPropertyExport'
            Parameter
              Identifier: 'node'
              TypeReference
                Identifier: ' BinaryExpression'
            Parameter
              Identifier: ' useLhsSymbol'
              BooleanKeyword
            UnionType
              TypeReference
                Identifier: ' ExportedSymbol'
              UndefinedKeyword
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' kind'
                    TypeReference
                      Identifier: ' ExportKind'
              SwitchStatement
                CallExpression
                  Identifier: 'getAssignmentDeclarationKind'
                  Identifier: 'node'
                CaseBlock
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' AssignmentDeclarationKind'
                      Identifier: 'ExportsProperty'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    kind'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' ExportKind'
                          Identifier: 'Named'
                    BreakStatement
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' AssignmentDeclarationKind'
                      Identifier: 'ModuleExports'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    kind'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' ExportKind'
                          Identifier: 'ExportEquals'
                    BreakStatement
                  DefaultClause
                    ReturnStatement
                      Identifier: ' undefined'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' sym'
                    ConditionalExpression
                      Identifier: ' useLhsSymbol'
                      QuestionToken
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' checker'
                          Identifier: 'getSymbolAtLocation'
                        CallExpression
                          Identifier: 'getNameOfAccessExpression'
                          CallExpression
                            Identifier: 'cast'
                            PropertyAccessExpression
                              Identifier: 'node'
                              Identifier: 'left'
                            Identifier: ' isAccessExpression'
                      ColonToken
                      Identifier: ' symbol'
              ReturnStatement
                BinaryExpression
                  Identifier: ' sym'
                  AmpersandAmpersandToken
                  CallExpression
                    Identifier: ' exportInfo'
                    Identifier: 'sym'
                    Identifier: ' kind'
      FunctionDeclaration
        Identifier: ' getImport'
        UnionType
          TypeReference
            Identifier: ' ImportedSymbol'
          UndefinedKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' isImport'
                CallExpression
                  Identifier: ' isNodeImport'
                  Identifier: 'node'
          IfStatement
            PrefixUnaryExpression
              Identifier: 'isImport'
            ReturnStatement
              Identifier: ' undefined'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' importedSymbol'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' checker'
                    Identifier: 'getImmediateAliasedSymbol'
                  Identifier: 'symbol'
          IfStatement
            PrefixUnaryExpression
              Identifier: 'importedSymbol'
            ReturnStatement
              Identifier: ' undefined'
          ExpressionStatement
            BinaryExpression
              Identifier: '

        // Search on the local symbol in the exporting module, not the exported symbol.
        importedSymbol'
              EqualsToken
              CallExpression
                Identifier: ' skipExportSpecifierSymbol'
                Identifier: 'importedSymbol'
                Identifier: ' checker'
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'importedSymbol'
                Identifier: 'escapedName'
              EqualsEqualsEqualsToken
              StringLiteral
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            importedSymbol'
                  EqualsToken
                  CallExpression
                    Identifier: ' getExportEqualsLocalSymbol'
                    Identifier: 'importedSymbol'
                    Identifier: ' checker'
              IfStatement
                BinaryExpression
                  Identifier: 'importedSymbol'
                  EqualsEqualsEqualsToken
                  Identifier: ' undefined'
                ReturnStatement
                  Identifier: ' undefined'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' importedName'
                CallExpression
                  Identifier: ' symbolEscapedNameNoDefault'
                  Identifier: 'importedSymbol'
          IfStatement
            BinaryExpression
              BinaryExpression
                BinaryExpression
                  Identifier: 'importedName'
                  EqualsEqualsEqualsToken
                  Identifier: ' undefined'
                BarBarToken
                BinaryExpression
                  Identifier: ' importedName'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' InternalSymbolName'
                    Identifier: 'Default'
              BarBarToken
              BinaryExpression
                Identifier: ' importedName'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' symbol'
                  Identifier: 'escapedName'
            Block
              ReturnStatement
                ObjectLiteralExpression
                  PropertyAssignment
                    Identifier: ' kind'
                    PropertyAccessExpression
                      Identifier: ' ImportExport'
                      Identifier: 'Import'
                  PropertyAssignment
                    Identifier: ' symbol'
                    Identifier: ' importedSymbol'
      FunctionDeclaration
        Identifier: ' exportInfo'
        Parameter
          Identifier: 'symbol'
          TypeReference
            Identifier: ' Symbol'
        Parameter
          Identifier: ' kind'
          TypeReference
            Identifier: ' ExportKind'
        UnionType
          TypeReference
            Identifier: ' ExportedSymbol'
          UndefinedKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' exportInfo'
                CallExpression
                  Identifier: ' getExportInfo'
                  Identifier: 'symbol'
                  Identifier: ' kind'
                  Identifier: ' checker'
          ReturnStatement
            BinaryExpression
              Identifier: ' exportInfo'
              AmpersandAmpersandToken
              ObjectLiteralExpression
                PropertyAssignment
                  Identifier: ' kind'
                  PropertyAccessExpression
                    Identifier: ' ImportExport'
                    Identifier: 'Export'
                ShorthandPropertyAssignment
                  Identifier: ' symbol'
                ShorthandPropertyAssignment
                  Identifier: ' exportInfo'
      FunctionDeclaration
        Identifier: ' getExportKindForDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypeReference
          Identifier: ' ExportKind'
        Block
          ReturnStatement
            ConditionalExpression
              CallExpression
                Identifier: ' hasSyntacticModifier'
                Identifier: 'node'
                PropertyAccessExpression
                  Identifier: ' ModifierFlags'
                  Identifier: 'Default'
              QuestionToken
              PropertyAccessExpression
                Identifier: ' ExportKind'
                Identifier: 'Default'
              ColonToken
              PropertyAccessExpression
                Identifier: ' ExportKind'
                Identifier: 'Named'
  FunctionDeclaration
    Identifier: ' getExportEqualsLocalSymbol'
    Parameter
      Identifier: 'importedSymbol'
      TypeReference
        Identifier: ' Symbol'
    Parameter
      Identifier: ' checker'
      TypeReference
        Identifier: ' TypeChecker'
    UnionType
      TypeReference
        Identifier: ' Symbol'
      UndefinedKeyword
    Block
      IfStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: 'importedSymbol'
            Identifier: 'flags'
          AmpersandToken
          PropertyAccessExpression
            Identifier: ' SymbolFlags'
            Identifier: 'Alias'
        Block
          ReturnStatement
            CallExpression
              PropertyAccessExpression
                Identifier: ' checker'
                Identifier: 'getImmediateAliasedSymbol'
              Identifier: 'importedSymbol'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' decl'
            CallExpression
              PropertyAccessExpression
                Identifier: ' Debug'
                Identifier: 'checkDefined'
              PropertyAccessExpression
                Identifier: 'importedSymbol'
                Identifier: 'valueDeclaration'
      IfStatement
        CallExpression
          Identifier: 'isExportAssignment'
          Identifier: 'decl'
        Block
          ReturnStatement
            PropertyAccessExpression
              CallExpression
                Identifier: ' tryCast'
                PropertyAccessExpression
                  Identifier: 'decl'
                  Identifier: 'expression'
                Identifier: ' canHaveSymbol'
              QuestionDotToken
              Identifier: 'symbol'
        IfStatement
          CallExpression
            Identifier: 'isBinaryExpression'
            Identifier: 'decl'
          Block
            ReturnStatement
              PropertyAccessExpression
                CallExpression
                  Identifier: ' tryCast'
                  PropertyAccessExpression
                    Identifier: 'decl'
                    Identifier: 'right'
                  Identifier: ' canHaveSymbol'
                QuestionDotToken
                Identifier: 'symbol'
          IfStatement
            CallExpression
              Identifier: 'isSourceFile'
              Identifier: 'decl'
            Block
              ReturnStatement
                PropertyAccessExpression
                  Identifier: ' decl'
                  Identifier: 'symbol'
      ReturnStatement
        Identifier: ' undefined'
  FunctionDeclaration
    Identifier: ' getExportNode'
    Parameter
      Identifier: 'parent'
      TypeReference
        Identifier: ' Node'
    Parameter
      Identifier: ' node'
      TypeReference
        Identifier: ' Node'
    UnionType
      TypeReference
        Identifier: ' Node'
      UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' declaration'
            ConditionalExpression
              CallExpression
                Identifier: ' isVariableDeclaration'
                Identifier: 'parent'
              QuestionToken
              Identifier: ' parent'
              ColonToken
              ConditionalExpression
                CallExpression
                  Identifier: ' isBindingElement'
                  Identifier: 'parent'
                QuestionToken
                CallExpression
                  Identifier: ' walkUpBindingElementsAndPatterns'
                  Identifier: 'parent'
                ColonToken
                Identifier: ' undefined'
      IfStatement
        Identifier: 'declaration'
        Block
          ReturnStatement
            ConditionalExpression
              BinaryExpression
                PropertyAccessExpression
                  ParenthesizedExpression
                    AsExpression
                      Identifier: 'parent'
                      UnionType
                        TypeReference
                          Identifier: ' VariableDeclaration'
                        TypeReference
                          Identifier: ' BindingElement'
                  Identifier: 'name'
                ExclamationEqualsEqualsToken
                Identifier: ' node'
              QuestionToken
              Identifier: ' undefined'
              ColonToken
              ConditionalExpression
                CallExpression
                  Identifier: '
            isCatchClause'
                  PropertyAccessExpression
                    Identifier: 'declaration'
                    Identifier: 'parent'
                QuestionToken
                Identifier: ' undefined'
                ColonToken
                ConditionalExpression
                  CallExpression
                    Identifier: ' isVariableStatement'
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: 'declaration'
                        Identifier: 'parent'
                      Identifier: 'parent'
                  QuestionToken
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: ' declaration'
                      Identifier: 'parent'
                    Identifier: 'parent'
                  ColonToken
                  Identifier: ' undefined'
        Block
          ReturnStatement
            Identifier: ' parent'
  FunctionDeclaration
    Identifier: ' isNodeImport'
    Parameter
      Identifier: 'node'
      TypeReference
        Identifier: ' Node'
    BooleanKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            ObjectBindingPattern
              BindingElement
                Identifier: ' parent'
            Identifier: ' node'
      SwitchStatement
        PropertyAccessExpression
          Identifier: 'parent'
          Identifier: 'kind'
        CaseBlock
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ImportEqualsDeclaration'
            ReturnStatement
              BinaryExpression
                BinaryExpression
                  PropertyAccessExpression
                    ParenthesizedExpression
                      AsExpression
                        Identifier: 'parent'
                        TypeReference
                          Identifier: ' ImportEqualsDeclaration'
                    Identifier: 'name'
                  EqualsEqualsEqualsToken
                  Identifier: ' node'
                AmpersandAmpersandToken
                CallExpression
                  Identifier: ' isExternalModuleImportEquals'
                  AsExpression
                    Identifier: 'parent'
                    TypeReference
                      Identifier: ' ImportEqualsDeclaration'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ImportSpecifier'
            ReturnStatement
              PrefixUnaryExpression
                PropertyAccessExpression
                  ParenthesizedExpression
                    AsExpression
                      Identifier: 'parent'
                      TypeReference
                        Identifier: ' ImportSpecifier'
                  Identifier: 'propertyName'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ImportClause'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'NamespaceImport'
            ExpressionStatement
              CallExpression
                PropertyAccessExpression
                  Identifier: '
            Debug'
                  Identifier: 'assert'
                BinaryExpression
                  PropertyAccessExpression
                    ParenthesizedExpression
                      AsExpression
                        Identifier: 'parent'
                        UnionType
                          TypeReference
                            Identifier: ' ImportClause'
                          TypeReference
                            Identifier: ' NamespaceImport'
                    Identifier: 'name'
                  EqualsEqualsEqualsToken
                  Identifier: ' node'
            ReturnStatement
              TrueKeyword
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'BindingElement'
            ReturnStatement
              BinaryExpression
                CallExpression
                  Identifier: ' isInJSFile'
                  Identifier: 'node'
                AmpersandAmpersandToken
                CallExpression
                  Identifier: ' isVariableDeclarationInitializedToBareOrAccessedRequire'
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: 'parent'
                      Identifier: 'parent'
                    Identifier: 'parent'
          DefaultClause
            ReturnStatement
              FalseKeyword
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getExportInfo'
    Parameter
      Identifier: 'exportSymbol'
      TypeReference
        Identifier: ' Symbol'
    Parameter
      Identifier: ' exportKind'
      TypeReference
        Identifier: ' ExportKind'
    Parameter
      Identifier: ' checker'
      TypeReference
        Identifier: ' TypeChecker'
    UnionType
      TypeReference
        Identifier: ' ExportInfo'
      UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' moduleSymbol'
            PropertyAccessExpression
              Identifier: ' exportSymbol'
              Identifier: 'parent'
      IfStatement
        PrefixUnaryExpression
          Identifier: 'moduleSymbol'
        ReturnStatement
          Identifier: ' undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' exportingModuleSymbol'
            CallExpression
              PropertyAccessExpression
                Identifier: ' checker'
                Identifier: 'getMergedSymbol'
              Identifier: 'moduleSymbol'
      ReturnStatement
        ConditionalExpression
          CallExpression
            Identifier: ' isExternalModuleSymbol'
            Identifier: 'exportingModuleSymbol'
          QuestionToken
          ObjectLiteralExpression
            ShorthandPropertyAssignment
              Identifier: ' exportingModuleSymbol'
            ShorthandPropertyAssignment
              Identifier: ' exportKind'
          ColonToken
          Identifier: ' undefined'
  FunctionDeclaration
    Identifier: ' skipExportSpecifierSymbol'
    Parameter
      Identifier: 'symbol'
      TypeReference
        Identifier: ' Symbol'
    Parameter
      Identifier: ' checker'
      TypeReference
        Identifier: ' TypeChecker'
    TypeReference
      Identifier: ' Symbol'
    Block
      IfStatement
        PropertyAccessExpression
          Identifier: 'symbol'
          Identifier: 'declarations'
        Block
          ForOfStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' declaration'
            PropertyAccessExpression
              Identifier: ' symbol'
              Identifier: 'declarations'
            Block
              IfStatement
                BinaryExpression
                  BinaryExpression
                    CallExpression
                      Identifier: 'isExportSpecifier'
                      Identifier: 'declaration'
                    AmpersandAmpersandToken
                    PrefixUnaryExpression
                      PropertyAccessExpression
                        Identifier: 'declaration'
                        Identifier: 'propertyName'
                  AmpersandAmpersandToken
                  PrefixUnaryExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: 'declaration'
                          Identifier: 'parent'
                        Identifier: 'parent'
                      Identifier: 'moduleSpecifier'
                Block
                  ReturnStatement
                    BinaryExpression
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' checker'
                          Identifier: 'getExportSpecifierLocalTargetSymbol'
                        Identifier: 'declaration'
                      BarBarToken
                      Identifier: ' symbol'
                IfStatement
                  BinaryExpression
                    BinaryExpression
                      CallExpression
                        Identifier: 'isPropertyAccessExpression'
                        Identifier: 'declaration'
                      AmpersandAmpersandToken
                      CallExpression
                        Identifier: ' isModuleExportsAccessExpression'
                        PropertyAccessExpression
                          Identifier: 'declaration'
                          Identifier: 'expression'
                    AmpersandAmpersandToken
                    PrefixUnaryExpression
                      CallExpression
                        Identifier: 'isPrivateIdentifier'
                        PropertyAccessExpression
                          Identifier: 'declaration'
                          Identifier: 'name'
                  Block
                    ReturnStatement
                      NonNullExpression
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' checker'
                            Identifier: 'getSymbolAtLocation'
                          Identifier: 'declaration'
                  IfStatement
                    BinaryExpression
                      BinaryExpression
                        CallExpression
                          Identifier: '
                isShorthandPropertyAssignment'
                          Identifier: 'declaration'
                        AmpersandAmpersandToken
                        CallExpression
                          Identifier: ' isBinaryExpression'
                          PropertyAccessExpression
                            PropertyAccessExpression
                              Identifier: 'declaration'
                              Identifier: 'parent'
                            Identifier: 'parent'
                      AmpersandAmpersandToken
                      BinaryExpression
                        CallExpression
                          Identifier: ' getAssignmentDeclarationKind'
                          PropertyAccessExpression
                            PropertyAccessExpression
                              Identifier: 'declaration'
                              Identifier: 'parent'
                            Identifier: 'parent'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' AssignmentDeclarationKind'
                          Identifier: 'ModuleExports'
                    Block
                      ReturnStatement
                        NonNullExpression
                          CallExpression
                            PropertyAccessExpression
                              Identifier: ' checker'
                              Identifier: 'getExportSpecifierLocalTargetSymbol'
                            PropertyAccessExpression
                              Identifier: 'declaration'
                              Identifier: 'name'
      ReturnStatement
        Identifier: ' symbol'
  FunctionDeclaration
    Identifier: ' getContainingModuleSymbol'
    Parameter
      Identifier: 'importer'
      TypeReference
        Identifier: ' Importer'
    Parameter
      Identifier: ' checker'
      TypeReference
        Identifier: ' TypeChecker'
    TypeReference
      Identifier: ' Symbol'
    Block
      ReturnStatement
        CallExpression
          PropertyAccessExpression
            Identifier: ' checker'
            Identifier: 'getMergedSymbol'
          PropertyAccessExpression
            CallExpression
              Identifier: 'getSourceFileLikeForImportDeclaration'
              Identifier: 'importer'
            Identifier: 'symbol'
  FunctionDeclaration
    Identifier: ' getSourceFileLikeForImportDeclaration'
    Parameter
      Identifier: 'node'
      TypeReference
        Identifier: ' ImporterOrCallExpression'
    TypeReference
      Identifier: ' SourceFileLike'
    Block
      IfStatement
        BinaryExpression
          BinaryExpression
            PropertyAccessExpression
              Identifier: 'node'
              Identifier: 'kind'
            EqualsEqualsEqualsToken
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'CallExpression'
          BarBarToken
          BinaryExpression
            PropertyAccessExpression
              Identifier: ' node'
              Identifier: 'kind'
            EqualsEqualsEqualsToken
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'JSDocImportTag'
        Block
          ReturnStatement
            CallExpression
              PropertyAccessExpression
                Identifier: ' node'
                Identifier: 'getSourceFile'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            ObjectBindingPattern
              BindingElement
                Identifier: ' parent'
            Identifier: ' node'
      IfStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: 'parent'
            Identifier: 'kind'
          EqualsEqualsEqualsToken
          PropertyAccessExpression
            Identifier: ' SyntaxKind'
            Identifier: 'SourceFile'
        Block
          ReturnStatement
            AsExpression
              Identifier: ' parent'
              TypeReference
                Identifier: ' SourceFile'
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            Identifier: '
    Debug'
            Identifier: 'assert'
          BinaryExpression
            PropertyAccessExpression
              Identifier: 'parent'
              Identifier: 'kind'
            EqualsEqualsEqualsToken
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ModuleBlock'
      ReturnStatement
        CallExpression
          Identifier: ' cast'
          PropertyAccessExpression
            Identifier: 'parent'
            Identifier: 'parent'
          Identifier: ' isAmbientModuleDeclaration'
  FunctionDeclaration
    Identifier: ' isAmbientModuleDeclaration'
    Parameter
      Identifier: 'node'
      TypeReference
        Identifier: ' Node'
    TypePredicate
      Identifier: ' node'
      TypeReference
        Identifier: ' AmbientModuleDeclaration'
    Block
      ReturnStatement
        BinaryExpression
          BinaryExpression
            PropertyAccessExpression
              Identifier: ' node'
              Identifier: 'kind'
            EqualsEqualsEqualsToken
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ModuleDeclaration'
          AmpersandAmpersandToken
          BinaryExpression
            PropertyAccessExpression
              PropertyAccessExpression
                ParenthesizedExpression
                  AsExpression
                    Identifier: 'node'
                    TypeReference
                      Identifier: ' ModuleDeclaration'
                Identifier: 'name'
              Identifier: 'kind'
            EqualsEqualsEqualsToken
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'StringLiteral'
  FunctionDeclaration
    Identifier: ' isExternalModuleImportEquals'
    Parameter
      Identifier: 'eq'
      TypeReference
        Identifier: ' ImportEqualsDeclaration'
    TypePredicate
      Identifier: ' eq'
      IntersectionType
        TypeReference
          Identifier: ' ImportEqualsDeclaration'
        TypeLiteral
          PropertySignature
            Identifier: ' moduleReference'
            TypeLiteral
              PropertySignature
                Identifier: ' expression'
                TypeReference
                  Identifier: ' StringLiteral'
    Block
      ReturnStatement
        BinaryExpression
          BinaryExpression
            PropertyAccessExpression
              PropertyAccessExpression
                Identifier: ' eq'
                Identifier: 'moduleReference'
              Identifier: 'kind'
            EqualsEqualsEqualsToken
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ExternalModuleReference'
          AmpersandAmpersandToken
          BinaryExpression
            PropertyAccessExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: ' eq'
                  Identifier: 'moduleReference'
                Identifier: 'expression'
              Identifier: 'kind'
            EqualsEqualsEqualsToken
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'StringLiteral'
