typeTagForMultipleVariableDeclarations.js(41,7): error TS2304: Cannot find name 'x'.
typeTagForMultipleVariableDeclarations.js(41,10): error TS2304: Cannot find name 'y'.
typeTagForMultipleVariableDeclarations.js(41,13): error TS2304: Cannot find name 'z'.


==== typeTagForMultipleVariableDeclarations.js (3 errors) ====
    // based on code from unifiedjs/unified
    class Node {}
    /**
     * @template {Node | undefined} [ParseTree=undefined]
     *   Output of `parse` (optional).
     * @template {Node | undefined} [HeadTree=undefined]
     *   Input for `run` (optional).
     * @template {Node | undefined} [TailTree=undefined]
     *   Output for `run` (optional).
     * @template {Node | undefined} [CompileTree=undefined]
     *   Input of `stringify` (optional).
     * @template {string | undefined} [CompileResult=undefined]
     *   Output of `stringify` (optional).
     */
    export class Processor {
      /**
       * @overload
       * @param {string | null | undefined} [preset]
       * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}
       *
       * @template {Array<unknown>} [Parameters=[]]
       * @template {Node | string | undefined} [Input=undefined]
       * @template [Output=Input]
       * @overload
       * @param {number} plugin
       * @param {...(Parameters | [boolean])} parameters
       * @returns {Processor}
       *
       * @param {string | number | boolean | null | undefined} value
       *   Usable value.
       * @param {...unknown} parameters
       *   Parameters, when a plugin is given as a usable value.
       * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}
       *   Current processor.
       */
      use(value, ...parameters) {
        return this;
      }
    }
    var p = new Processor();
    p.use(x, y, z);
          ~
!!! error TS2304: Cannot find name 'x'.
             ~
!!! error TS2304: Cannot find name 'y'.
                ~
!!! error TS2304: Cannot find name 'z'.
    