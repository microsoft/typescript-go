SourceFile
  InterfaceDeclaration
    Identifier: ' I1'
    MethodSignature
      Identifier: '
	IM1'
      ArrayType
        VoidKeyword
  ClassDeclaration
    Identifier: ' C1'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' I1'
    MethodDeclaration
      Identifier: ' 
	IM1'
      ArrayType
        VoidKeyword
      Block
        ReturnStatement
          NullKeyword
    MethodDeclaration
      Identifier: '
	C1M1'
      ArrayType
        TypeReference
          Identifier: 'C1'
      Block
        ReturnStatement
          NullKeyword
  ClassDeclaration
    Identifier: ' C2'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' C1'
    MethodDeclaration
      Identifier: '
    C2M1'
      ArrayType
        TypeReference
          Identifier: 'C2'
      Block
        ReturnStatement
          NullKeyword
  ClassDeclaration
    Identifier: ' C3'
    MethodDeclaration
      Identifier: '
    CM3M1'
      Block
        ReturnStatement
          NumericLiteral
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' a1'
        AnyKeyword
        NullKeyword
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' c1'
        TypeReference
          Identifier: ' C1'
        NewExpression
          Identifier: ' C1'
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' i1'
        TypeReference
          Identifier: ' I1'
        Identifier: ' c1'
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' c2'
        TypeReference
          Identifier: ' C2'
        NewExpression
          Identifier: ' C2'
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' c3'
        TypeReference
          Identifier: ' C3'
        NewExpression
          Identifier: ' C3'
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' o1'
        ObjectLiteralExpression
          PropertyAssignment
            Identifier: 'one'
            NumericLiteral
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' f1'
        FunctionExpression
          Block
            ReturnStatement
              NewExpression
                Identifier: ' C1'
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' arr_any'
        ArrayType
          AnyKeyword
        ArrayLiteralExpression
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' arr_i1'
        ArrayType
          TypeReference
            Identifier: ' I1'
        ArrayLiteralExpression
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' arr_c1'
        ArrayType
          TypeReference
            Identifier: ' C1'
        ArrayLiteralExpression
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' arr_c2'
        ArrayType
          TypeReference
            Identifier: ' C2'
        ArrayLiteralExpression
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' arr_i1_2'
        ArrayType
          TypeReference
            Identifier: ' I1'
        ArrayLiteralExpression
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' arr_c1_2'
        ArrayType
          TypeReference
            Identifier: ' C1'
        ArrayLiteralExpression
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' arr_c2_2'
        ArrayType
          TypeReference
            Identifier: ' C2'
        ArrayLiteralExpression
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' arr_c3'
        ArrayType
          TypeReference
            Identifier: ' C3'
        ArrayLiteralExpression
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' i1_error'
        TypeReference
          Identifier: ' I1'
        ArrayLiteralExpression
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' c1_error'
        TypeReference
          Identifier: ' C1'
        ArrayLiteralExpression
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' c2_error'
        TypeReference
          Identifier: ' C2'
        ArrayLiteralExpression
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' c3_error'
        TypeReference
          Identifier: ' C3'
        ArrayLiteralExpression
  ExpressionStatement
    BinaryExpression
      Identifier: ' // should be an error - is


arr_any'
      EqualsToken
      Identifier: ' arr_i1'
  ExpressionStatement
    BinaryExpression
      Identifier: ' // should be ok - is
arr_any'
      EqualsToken
      Identifier: ' arr_c1'
  ExpressionStatement
    BinaryExpression
      Identifier: ' // should be ok - is
arr_any'
      EqualsToken
      Identifier: ' arr_c2'
  ExpressionStatement
    BinaryExpression
      Identifier: ' // should be ok - is
arr_any'
      EqualsToken
      Identifier: ' arr_c3'
  ExpressionStatement
    BinaryExpression
      Identifier: ' // should be ok - is

arr_i1'
      EqualsToken
      Identifier: ' arr_i1'
  ExpressionStatement
    BinaryExpression
      Identifier: ' // should be ok - subtype relationship - is
arr_i1'
      EqualsToken
      Identifier: ' arr_c1'
  ExpressionStatement
    BinaryExpression
      Identifier: ' // should be ok - subtype relationship - is
arr_i1'
      EqualsToken
      Identifier: ' arr_c2'
  ExpressionStatement
    BinaryExpression
      Identifier: ' // should be ok - subtype relationship - is
arr_i1'
      EqualsToken
      Identifier: ' arr_c3'
  ExpressionStatement
    BinaryExpression
      Identifier: ' // should be an error - is

arr_c1'
      EqualsToken
      Identifier: ' arr_c1'
  ExpressionStatement
    BinaryExpression
      Identifier: ' // should be ok - subtype relationship - is
arr_c1'
      EqualsToken
      Identifier: ' arr_c2'
  ExpressionStatement
    BinaryExpression
      Identifier: ' // should be ok - subtype relationship - is
arr_c1'
      EqualsToken
      Identifier: ' arr_i1'
  ExpressionStatement
    BinaryExpression
      Identifier: ' // should be an error - is
arr_c1'
      EqualsToken
      Identifier: ' arr_c3'
  ExpressionStatement
    BinaryExpression
      Identifier: ' // should be an error - is

arr_c2'
      EqualsToken
      Identifier: ' arr_c2'
  ExpressionStatement
    BinaryExpression
      Identifier: ' // should be ok - subtype relationship - is
arr_c2'
      EqualsToken
      Identifier: ' arr_c1'
  ExpressionStatement
    BinaryExpression
      Identifier: ' // should be an error - subtype relationship - is
arr_c2'
      EqualsToken
      Identifier: ' arr_i1'
  ExpressionStatement
    BinaryExpression
      Identifier: ' // should be an error - subtype relationship - is
arr_c2'
      EqualsToken
      Identifier: ' arr_c3'
  ExpressionStatement
    BinaryExpression
      Identifier: ' // should be an error - is

// "clean up bug" occurs at this point
// if you move these three expressions to another file, they raise an error
// something to do with state from the above propagating forward?
arr_c3'
      EqualsToken
      Identifier: ' arr_c2_2'
  ExpressionStatement
    BinaryExpression
      Identifier: ' // should be an error - is
arr_c3'
      EqualsToken
      Identifier: ' arr_c1_2'
  ExpressionStatement
    BinaryExpression
      Identifier: ' // should be an error - is
arr_c3'
      EqualsToken
      Identifier: ' arr_i1_2'
  ExpressionStatement
    BinaryExpression
      Identifier: ' // should be an error - is

arr_any'
      EqualsToken
      Identifier: ' f1'
  ExpressionStatement
    BinaryExpression
      Identifier: ' // should be an error - is
arr_any'
      EqualsToken
      Identifier: ' o1'
  ExpressionStatement
    BinaryExpression
      Identifier: ' // should be an error - is
arr_any'
      EqualsToken
      Identifier: ' a1'
  ExpressionStatement
    BinaryExpression
      Identifier: ' // should be ok - is
arr_any'
      EqualsToken
      Identifier: ' c1'
  ExpressionStatement
    BinaryExpression
      Identifier: ' // should be an error - is
arr_any'
      EqualsToken
      Identifier: ' c2'
  ExpressionStatement
    BinaryExpression
      Identifier: ' // should be an error - is
arr_any'
      EqualsToken
      Identifier: ' c3'
  ExpressionStatement
    BinaryExpression
      Identifier: ' // should be an error - is
arr_any'
      EqualsToken
      Identifier: ' i1'
