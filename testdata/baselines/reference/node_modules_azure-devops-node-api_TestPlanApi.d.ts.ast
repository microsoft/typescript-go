SourceFile
  ImportEqualsDeclaration
    Identifier: ' basem'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' VsoBaseInterfaces'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' TestPlanInterfaces'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' VSSInterfaces'
    ExternalModuleReference
      StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ITestPlanApi'
    HeritageClause
      ExpressionWithTypeArguments
        PropertyAccessExpression
          Identifier: ' basem'
          Identifier: 'ClientApiBase'
    MethodSignature
      Identifier: '
    createTestConfiguration'
      Parameter
        Identifier: 'testConfigurationCreateUpdateParameters'
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'TestConfigurationCreateUpdateParameters'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'TestConfiguration'
    MethodSignature
      Identifier: '
    deleteTestConfguration'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' testConfiguartionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getTestConfigurationById'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' testConfigurationId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'TestConfiguration'
    MethodSignature
      Identifier: '
    getTestConfigurations'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'TestPlanInterfaces'
              Identifier: 'TestConfiguration'
    MethodSignature
      Identifier: '
    updateTestConfiguration'
      Parameter
        Identifier: 'testConfigurationCreateUpdateParameters'
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'TestConfigurationCreateUpdateParameters'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' testConfiguartionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'TestConfiguration'
    MethodSignature
      Identifier: '
    getTestEntityCountByPlanId'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      Parameter
        Identifier: ' states'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' outcome'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'UserFriendlyTestOutcome'
      Parameter
        Identifier: ' configurations'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' testers'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' assignedTo'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' entity'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'TestEntityTypes'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'TestPlanInterfaces'
              Identifier: 'TestEntityCount'
    MethodSignature
      Identifier: '
    createTestPlan'
      Parameter
        Identifier: 'testPlanCreateParams'
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'TestPlanCreateParams'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'TestPlan'
    MethodSignature
      Identifier: '
    deleteTestPlan'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getTestPlanById'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'TestPlan'
    MethodSignature
      Identifier: '
    getTestPlans'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' owner'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' includePlanDetails'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' filterActivePlans'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'TestPlanInterfaces'
              Identifier: 'TestPlan'
    MethodSignature
      Identifier: '
    updateTestPlan'
      Parameter
        Identifier: 'testPlanUpdateParams'
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'TestPlanUpdateParams'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'TestPlan'
    MethodSignature
      Identifier: '
    getSuiteEntries'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' suiteId'
        NumberKeyword
      Parameter
        Identifier: ' suiteEntryType'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'SuiteEntryTypes'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'TestPlanInterfaces'
              Identifier: 'SuiteEntry'
    MethodSignature
      Identifier: '
    reorderSuiteEntries'
      Parameter
        Identifier: 'suiteEntries'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' TestPlanInterfaces'
              Identifier: 'SuiteEntryUpdateParams'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' suiteId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'TestPlanInterfaces'
              Identifier: 'SuiteEntry'
    MethodSignature
      Identifier: '
    createBulkTestSuites'
      Parameter
        Identifier: 'testSuiteCreateParams'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' TestPlanInterfaces'
              Identifier: 'TestSuiteCreateParams'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      Parameter
        Identifier: ' parentSuiteId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'TestPlanInterfaces'
              Identifier: 'TestSuite'
    MethodSignature
      Identifier: '
    createTestSuite'
      Parameter
        Identifier: 'testSuiteCreateParams'
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'TestSuiteCreateParams'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'TestSuite'
    MethodSignature
      Identifier: '
    deleteTestSuite'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      Parameter
        Identifier: ' suiteId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getTestSuiteById'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      Parameter
        Identifier: ' suiteId'
        NumberKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'SuiteExpand'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'TestSuite'
    MethodSignature
      Identifier: '
    getTestSuitesForPlan'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'SuiteExpand'
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' asTreeView'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'TestPlanInterfaces'
              Identifier: 'TestSuite'
    MethodSignature
      Identifier: '
    updateTestSuite'
      Parameter
        Identifier: 'testSuiteUpdateParams'
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'TestSuiteUpdateParams'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      Parameter
        Identifier: ' suiteId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'TestSuite'
    MethodSignature
      Identifier: '
    getSuitesByTestCaseId'
      Parameter
        Identifier: 'testCaseId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'TestPlanInterfaces'
              Identifier: 'TestSuite'
    MethodSignature
      Identifier: '
    addTestCasesToSuite'
      Parameter
        Identifier: 'suiteTestCaseCreateUpdateParameters'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' TestPlanInterfaces'
              Identifier: 'SuiteTestCaseCreateUpdateParameters'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      Parameter
        Identifier: ' suiteId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'TestPlanInterfaces'
              Identifier: 'TestCase'
    MethodSignature
      Identifier: '
    getTestCase'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      Parameter
        Identifier: ' suiteId'
        NumberKeyword
      Parameter
        Identifier: ' testCaseId'
        StringKeyword
      Parameter
        Identifier: ' witFields'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' returnIdentityRef'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'TestPlanInterfaces'
              Identifier: 'TestCase'
    MethodSignature
      Identifier: '
    getTestCaseList'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      Parameter
        Identifier: ' suiteId'
        NumberKeyword
      Parameter
        Identifier: ' testIds'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' configurationIds'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' witFields'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' returnIdentityRef'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' excludeFlags'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'ExcludeFlags'
      Parameter
        Identifier: ' isRecursive'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'TestPlanInterfaces'
              Identifier: 'TestCase'
    MethodSignature
      Identifier: '
    removeTestCasesFromSuite'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      Parameter
        Identifier: ' suiteId'
        NumberKeyword
      Parameter
        Identifier: ' testCaseIds'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    removeTestCasesListFromSuite'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      Parameter
        Identifier: ' suiteId'
        NumberKeyword
      Parameter
        Identifier: ' testIds'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    updateSuiteTestCases'
      Parameter
        Identifier: 'suiteTestCaseCreateUpdateParameters'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' TestPlanInterfaces'
              Identifier: 'SuiteTestCaseCreateUpdateParameters'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      Parameter
        Identifier: ' suiteId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'TestPlanInterfaces'
              Identifier: 'TestCase'
    MethodSignature
      Identifier: '
    cloneTestCase'
      Parameter
        Identifier: 'cloneRequestBody'
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'CloneTestCaseParams'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'CloneTestCaseOperationInformation'
    MethodSignature
      Identifier: '
    getTestCaseCloneInformation'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' cloneOperationId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'CloneTestCaseOperationInformation'
    MethodSignature
      Identifier: '
    exportTestCases'
      Parameter
        Identifier: 'exportTestCaseRequestBody'
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'ExportTestCaseParams'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    deleteTestCase'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' testCaseId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    cloneTestPlan'
      Parameter
        Identifier: 'cloneRequestBody'
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'CloneTestPlanParams'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' deepClone'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'CloneTestPlanOperationInformation'
    MethodSignature
      Identifier: '
    getCloneInformation'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' cloneOperationId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'CloneTestPlanOperationInformation'
    MethodSignature
      Identifier: '
    getPoints'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      Parameter
        Identifier: ' suiteId'
        NumberKeyword
      Parameter
        Identifier: ' pointId'
        StringKeyword
      Parameter
        Identifier: ' returnIdentityRef'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' includePointDetails'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'TestPlanInterfaces'
              Identifier: 'TestPoint'
    MethodSignature
      Identifier: '
    getPointsList'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      Parameter
        Identifier: ' suiteId'
        NumberKeyword
      Parameter
        Identifier: ' testPointIds'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' testCaseId'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' returnIdentityRef'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' includePointDetails'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' isRecursive'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'TestPlanInterfaces'
              Identifier: 'TestPoint'
    MethodSignature
      Identifier: '
    updateTestPoints'
      Parameter
        Identifier: 'testPointUpdateParams'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' TestPlanInterfaces'
              Identifier: 'TestPointUpdateParams'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      Parameter
        Identifier: ' suiteId'
        NumberKeyword
      Parameter
        Identifier: ' includePointDetails'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' returnIdentityRef'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'TestPlanInterfaces'
              Identifier: 'TestPoint'
    MethodSignature
      Identifier: '
    cloneTestSuite'
      Parameter
        Identifier: 'cloneRequestBody'
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'CloneTestSuiteParams'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' deepClone'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'CloneTestSuiteOperationInformation'
    MethodSignature
      Identifier: '
    getSuiteCloneInformation'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' cloneOperationId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'CloneTestSuiteOperationInformation'
    MethodSignature
      Identifier: '
    createTestVariable'
      Parameter
        Identifier: 'testVariableCreateUpdateParameters'
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'TestVariableCreateUpdateParameters'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'TestVariable'
    MethodSignature
      Identifier: '
    deleteTestVariable'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' testVariableId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getTestVariableById'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' testVariableId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'TestVariable'
    MethodSignature
      Identifier: '
    getTestVariables'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'TestPlanInterfaces'
              Identifier: 'TestVariable'
    MethodSignature
      Identifier: '
    updateTestVariable'
      Parameter
        Identifier: 'testVariableCreateUpdateParameters'
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'TestVariableCreateUpdateParameters'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' testVariableId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'TestVariable'
  ClassDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' TestPlanApi'
    HeritageClause
      ExpressionWithTypeArguments
        PropertyAccessExpression
          Identifier: ' basem'
          Identifier: 'ClientApiBase'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' ITestPlanApi'
    Constructor
      Parameter
        Identifier: 'baseUrl'
        StringKeyword
      Parameter
        Identifier: ' handlers'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' VsoBaseInterfaces'
              Identifier: 'IRequestHandler'
      Parameter
        Identifier: ' options'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' VsoBaseInterfaces'
            Identifier: 'IRequestOptions'
    MethodDeclaration
      Identifier: '
    /**
     * Create a test configuration.
     *
     * @param {TestPlanInterfaces.TestConfigurationCreateUpdateParameters} testConfigurationCreateUpdateParameters - TestConfigurationCreateUpdateParameters
     * @param {string} project - Project ID or project name
     */
    createTestConfiguration'
      Parameter
        Identifier: 'testConfigurationCreateUpdateParameters'
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'TestConfigurationCreateUpdateParameters'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'TestConfiguration'
    MethodDeclaration
      Identifier: '
    /**
     * Delete a test configuration by its ID.
     *
     * @param {string} project - Project ID or project name
     * @param {number} testConfiguartionId - ID of the test configuration to delete.
     */
    deleteTestConfguration'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' testConfiguartionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Get a test configuration
     *
     * @param {string} project - Project ID or project name
     * @param {number} testConfigurationId - ID of the test configuration to get.
     */
    getTestConfigurationById'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' testConfigurationId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'TestConfiguration'
    MethodDeclaration
      Identifier: '
    /**
     * Get a list of test configurations.
     *
     * @param {string} project - Project ID or project name
     * @param {string} continuationToken - If the list of configurations returned is not complete, a continuation token to query next batch of configurations is included in the response header as "x-ms-continuationtoken". Omit this parameter to get the first batch of test configurations.
     */
    getTestConfigurations'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'TestPlanInterfaces'
              Identifier: 'TestConfiguration'
    MethodDeclaration
      Identifier: '
    /**
     * Update a test configuration by its ID.
     *
     * @param {TestPlanInterfaces.TestConfigurationCreateUpdateParameters} testConfigurationCreateUpdateParameters - TestConfigurationCreateUpdateParameters
     * @param {string} project - Project ID or project name
     * @param {number} testConfiguartionId - ID of the test configuration to update.
     */
    updateTestConfiguration'
      Parameter
        Identifier: 'testConfigurationCreateUpdateParameters'
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'TestConfigurationCreateUpdateParameters'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' testConfiguartionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'TestConfiguration'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} planId
     * @param {string} states
     * @param {TestPlanInterfaces.UserFriendlyTestOutcome} outcome
     * @param {string} configurations
     * @param {string} testers
     * @param {string} assignedTo
     * @param {TestPlanInterfaces.TestEntityTypes} entity
     */
    getTestEntityCountByPlanId'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      Parameter
        Identifier: ' states'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' outcome'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'UserFriendlyTestOutcome'
      Parameter
        Identifier: ' configurations'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' testers'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' assignedTo'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' entity'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'TestEntityTypes'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'TestPlanInterfaces'
              Identifier: 'TestEntityCount'
    MethodDeclaration
      Identifier: '
    /**
     * Create a test plan.
     *
     * @param {TestPlanInterfaces.TestPlanCreateParams} testPlanCreateParams - A testPlanCreateParams object.TestPlanCreateParams
     * @param {string} project - Project ID or project name
     */
    createTestPlan'
      Parameter
        Identifier: 'testPlanCreateParams'
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'TestPlanCreateParams'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'TestPlan'
    MethodDeclaration
      Identifier: '
    /**
     * Delete a test plan.
     *
     * @param {string} project - Project ID or project name
     * @param {number} planId - ID of the test plan to be deleted.
     */
    deleteTestPlan'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Get a test plan by Id.
     *
     * @param {string} project - Project ID or project name
     * @param {number} planId - ID of the test plan to get.
     */
    getTestPlanById'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'TestPlan'
    MethodDeclaration
      Identifier: '
    /**
     * Get a list of test plans
     *
     * @param {string} project - Project ID or project name
     * @param {string} owner - Filter for test plan by owner ID or name
     * @param {string} continuationToken - If the list of plans returned is not complete, a continuation token to query next batch of plans is included in the response header as "x-ms-continuationtoken". Omit this parameter to get the first batch of test plans.
     * @param {boolean} includePlanDetails - Get all properties of the test plan
     * @param {boolean} filterActivePlans - Get just the active plans
     */
    getTestPlans'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' owner'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' includePlanDetails'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' filterActivePlans'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'TestPlanInterfaces'
              Identifier: 'TestPlan'
    MethodDeclaration
      Identifier: '
    /**
     * Update a test plan.
     *
     * @param {TestPlanInterfaces.TestPlanUpdateParams} testPlanUpdateParams - A testPlanUpdateParams object.TestPlanUpdateParams
     * @param {string} project - Project ID or project name
     * @param {number} planId - ID of the test plan to be updated.
     */
    updateTestPlan'
      Parameter
        Identifier: 'testPlanUpdateParams'
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'TestPlanUpdateParams'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'TestPlan'
    MethodDeclaration
      Identifier: '
    /**
     * Get a list of test suite entries in the test suite.
     *
     * @param {string} project - Project ID or project name
     * @param {number} suiteId - Id of the parent suite.
     * @param {TestPlanInterfaces.SuiteEntryTypes} suiteEntryType
     */
    getSuiteEntries'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' suiteId'
        NumberKeyword
      Parameter
        Identifier: ' suiteEntryType'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'SuiteEntryTypes'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'TestPlanInterfaces'
              Identifier: 'SuiteEntry'
    MethodDeclaration
      Identifier: '
    /**
     * Reorder test suite entries in the test suite.
     *
     * @param {TestPlanInterfaces.SuiteEntryUpdateParams[]} suiteEntries - List of SuiteEntry to reorder.
     * @param {string} project - Project ID or project name
     * @param {number} suiteId - Id of the parent test suite.
     */
    reorderSuiteEntries'
      Parameter
        Identifier: 'suiteEntries'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' TestPlanInterfaces'
              Identifier: 'SuiteEntryUpdateParams'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' suiteId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'TestPlanInterfaces'
              Identifier: 'SuiteEntry'
    MethodDeclaration
      Identifier: '
    /**
     * Create bulk requirement based test suites.
     *
     * @param {TestPlanInterfaces.TestSuiteCreateParams[]} testSuiteCreateParams - Parameters for suite creation
     * @param {string} project - Project ID or project name
     * @param {number} planId - ID of the test plan where requirement based suites need to be created.
     * @param {number} parentSuiteId - ID of the parent suite under which requirement based suites will be created
     */
    createBulkTestSuites'
      Parameter
        Identifier: 'testSuiteCreateParams'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' TestPlanInterfaces'
              Identifier: 'TestSuiteCreateParams'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      Parameter
        Identifier: ' parentSuiteId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'TestPlanInterfaces'
              Identifier: 'TestSuite'
    MethodDeclaration
      Identifier: '
    /**
     * Create test suite.
     *
     * @param {TestPlanInterfaces.TestSuiteCreateParams} testSuiteCreateParams - Parameters for suite creation
     * @param {string} project - Project ID or project name
     * @param {number} planId - ID of the test plan that contains the suites.
     */
    createTestSuite'
      Parameter
        Identifier: 'testSuiteCreateParams'
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'TestSuiteCreateParams'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'TestSuite'
    MethodDeclaration
      Identifier: '
    /**
     * Delete test suite.
     *
     * @param {string} project - Project ID or project name
     * @param {number} planId - ID of the test plan that contains the suite.
     * @param {number} suiteId - ID of the test suite to delete.
     */
    deleteTestSuite'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      Parameter
        Identifier: ' suiteId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Get test suite by suite id.
     *
     * @param {string} project - Project ID or project name
     * @param {number} planId - ID of the test plan that contains the suites.
     * @param {number} suiteId - ID of the suite to get.
     * @param {TestPlanInterfaces.SuiteExpand} expand - Include the children suites and testers details
     */
    getTestSuiteById'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      Parameter
        Identifier: ' suiteId'
        NumberKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'SuiteExpand'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'TestSuite'
    MethodDeclaration
      Identifier: '
    /**
     * Get test suites for plan.
     *
     * @param {string} project - Project ID or project name
     * @param {number} planId - ID of the test plan for which suites are requested.
     * @param {TestPlanInterfaces.SuiteExpand} expand - Include the children suites and testers details.
     * @param {string} continuationToken - If the list of suites returned is not complete, a continuation token to query next batch of suites is included in the response header as "x-ms-continuationtoken". Omit this parameter to get the first batch of test suites.
     * @param {boolean} asTreeView - If the suites returned should be in a tree structure.
     */
    getTestSuitesForPlan'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'SuiteExpand'
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' asTreeView'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'TestPlanInterfaces'
              Identifier: 'TestSuite'
    MethodDeclaration
      Identifier: '
    /**
     * Update test suite.
     *
     * @param {TestPlanInterfaces.TestSuiteUpdateParams} testSuiteUpdateParams - Parameters for suite updation
     * @param {string} project - Project ID or project name
     * @param {number} planId - ID of the test plan that contains the suites.
     * @param {number} suiteId - ID of the parent suite.
     */
    updateTestSuite'
      Parameter
        Identifier: 'testSuiteUpdateParams'
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'TestSuiteUpdateParams'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      Parameter
        Identifier: ' suiteId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'TestSuite'
    MethodDeclaration
      Identifier: '
    /**
     * Find the list of all test suites in which a given test case is present. This is helpful if you need to find out which test suites are using a test case, when you need to make changes to a test case.
     *
     * @param {number} testCaseId - ID of the test case for which suites need to be fetched.
     */
    getSuitesByTestCaseId'
      Parameter
        Identifier: 'testCaseId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'TestPlanInterfaces'
              Identifier: 'TestSuite'
    MethodDeclaration
      Identifier: '
    /**
     * Add test cases to a suite with specified configurations
     *
     * @param {TestPlanInterfaces.SuiteTestCaseCreateUpdateParameters[]} suiteTestCaseCreateUpdateParameters - SuiteTestCaseCreateUpdateParameters object.
     * @param {string} project - Project ID or project name
     * @param {number} planId - ID of the test plan to which test cases are to be added.
     * @param {number} suiteId - ID of the test suite to which test cases are to be added.
     */
    addTestCasesToSuite'
      Parameter
        Identifier: 'suiteTestCaseCreateUpdateParameters'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' TestPlanInterfaces'
              Identifier: 'SuiteTestCaseCreateUpdateParameters'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      Parameter
        Identifier: ' suiteId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'TestPlanInterfaces'
              Identifier: 'TestCase'
    MethodDeclaration
      Identifier: '
    /**
     * Get a particular Test Case from a Suite.
     *
     * @param {string} project - Project ID or project name
     * @param {number} planId - ID of the test plan for which test cases are requested.
     * @param {number} suiteId - ID of the test suite for which test cases are requested.
     * @param {string} testCaseId - Test Case Id to be fetched.
     * @param {string} witFields - Get the list of witFields.
     * @param {boolean} returnIdentityRef - If set to true, returns all identity fields, like AssignedTo, ActivatedBy etc., as IdentityRef objects. If set to false, these fields are returned as unique names in string format. This is false by default.
     */
    getTestCase'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      Parameter
        Identifier: ' suiteId'
        NumberKeyword
      Parameter
        Identifier: ' testCaseId'
        StringKeyword
      Parameter
        Identifier: ' witFields'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' returnIdentityRef'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'TestPlanInterfaces'
              Identifier: 'TestCase'
    MethodDeclaration
      Identifier: '
    /**
     * Get Test Case List return those test cases which have all the configuration Ids as mentioned in the optional parameter. If configuration Ids is null, it return all the test cases
     *
     * @param {string} project - Project ID or project name
     * @param {number} planId - ID of the test plan for which test cases are requested.
     * @param {number} suiteId - ID of the test suite for which test cases are requested.
     * @param {string} testIds - Test Case Ids to be fetched.
     * @param {string} configurationIds - Fetch Test Cases which contains all the configuration Ids specified.
     * @param {string} witFields - Get the list of witFields.
     * @param {string} continuationToken - If the list of test cases returned is not complete, a continuation token to query next batch of test cases is included in the response header as "x-ms-continuationtoken". Omit this parameter to get the first batch of test cases.
     * @param {boolean} returnIdentityRef - If set to true, returns all identity fields, like AssignedTo, ActivatedBy etc., as IdentityRef objects. If set to false, these fields are returned as unique names in string format. This is false by default.
     * @param {boolean} expand - If set to false, will get a smaller payload containing only basic details about the suite test case object
     * @param {TestPlanInterfaces.ExcludeFlags} excludeFlags - Flag to exclude various values from payload. For example to remove point assignments pass exclude = 1. To remove extra information (links, test plan , test suite) pass exclude = 2. To remove both extra information and point assignments pass exclude = 3 (1 + 2).
     * @param {boolean} isRecursive
     */
    getTestCaseList'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      Parameter
        Identifier: ' suiteId'
        NumberKeyword
      Parameter
        Identifier: ' testIds'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' configurationIds'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' witFields'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' returnIdentityRef'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' excludeFlags'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'ExcludeFlags'
      Parameter
        Identifier: ' isRecursive'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'TestPlanInterfaces'
              Identifier: 'TestCase'
    MethodDeclaration
      Identifier: '
    /**
     * Removes test cases from a suite based on the list of test case Ids provided.
     *
     * @param {string} project - Project ID or project name
     * @param {number} planId - ID of the test plan from which test cases are to be removed.
     * @param {number} suiteId - ID of the test suite from which test cases are to be removed.
     * @param {string} testCaseIds - Test Case Ids to be removed.
     */
    removeTestCasesFromSuite'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      Parameter
        Identifier: ' suiteId'
        NumberKeyword
      Parameter
        Identifier: ' testCaseIds'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Removes test cases from a suite based on the list of test case Ids provided. This API can be used to remove a larger number of test cases.
     *
     * @param {string} project - Project ID or project name
     * @param {number} planId - ID of the test plan from which test cases are to be removed.
     * @param {number} suiteId - ID of the test suite from which test cases are to be removed.
     * @param {string} testIds - Comma separated string of Test Case Ids to be removed.
     */
    removeTestCasesListFromSuite'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      Parameter
        Identifier: ' suiteId'
        NumberKeyword
      Parameter
        Identifier: ' testIds'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Update the configurations for test cases
     *
     * @param {TestPlanInterfaces.SuiteTestCaseCreateUpdateParameters[]} suiteTestCaseCreateUpdateParameters - A SuiteTestCaseCreateUpdateParameters object.
     * @param {string} project - Project ID or project name
     * @param {number} planId - ID of the test plan to which test cases are to be updated.
     * @param {number} suiteId - ID of the test suite to which test cases are to be updated.
     */
    updateSuiteTestCases'
      Parameter
        Identifier: 'suiteTestCaseCreateUpdateParameters'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' TestPlanInterfaces'
              Identifier: 'SuiteTestCaseCreateUpdateParameters'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      Parameter
        Identifier: ' suiteId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'TestPlanInterfaces'
              Identifier: 'TestCase'
    MethodDeclaration
      Identifier: '
    /**
     * @param {TestPlanInterfaces.CloneTestCaseParams} cloneRequestBody
     * @param {string} project - Project ID or project name
     */
    cloneTestCase'
      Parameter
        Identifier: 'cloneRequestBody'
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'CloneTestCaseParams'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'CloneTestCaseOperationInformation'
    MethodDeclaration
      Identifier: '
    /**
     * Get clone information.
     *
     * @param {string} project - Project ID or project name
     * @param {number} cloneOperationId - Operation ID returned when we queue a clone operation
     */
    getTestCaseCloneInformation'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' cloneOperationId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'CloneTestCaseOperationInformation'
    MethodDeclaration
      Identifier: '
    /**
     * Exports a set of test cases from a suite to a file. Currently supported  formats: xlsx
     *
     * @param {TestPlanInterfaces.ExportTestCaseParams} exportTestCaseRequestBody - A ExportTestCaseParams object.ExportTestCaseParams
     * @param {string} project - Project ID or project name
     */
    exportTestCases'
      Parameter
        Identifier: 'exportTestCaseRequestBody'
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'ExportTestCaseParams'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * Delete a test case.
     *
     * @param {string} project - Project ID or project name
     * @param {number} testCaseId - Id of test case to be deleted.
     */
    deleteTestCase'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' testCaseId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Clone test plan
     *
     * @param {TestPlanInterfaces.CloneTestPlanParams} cloneRequestBody - Plan Clone Request Body detail TestPlanCloneRequest
     * @param {string} project - Project ID or project name
     * @param {boolean} deepClone - Clones all the associated test cases as well
     */
    cloneTestPlan'
      Parameter
        Identifier: 'cloneRequestBody'
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'CloneTestPlanParams'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' deepClone'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'CloneTestPlanOperationInformation'
    MethodDeclaration
      Identifier: '
    /**
     * Get clone information.
     *
     * @param {string} project - Project ID or project name
     * @param {number} cloneOperationId - Operation ID returned when we queue a clone operation
     */
    getCloneInformation'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' cloneOperationId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'CloneTestPlanOperationInformation'
    MethodDeclaration
      Identifier: '
    /**
     * Get a particular Test Point from a suite.
     *
     * @param {string} project - Project ID or project name
     * @param {number} planId - ID of the test plan for which test points are requested.
     * @param {number} suiteId - ID of the test suite for which test points are requested.
     * @param {string} pointId - ID of test point to be fetched.
     * @param {boolean} returnIdentityRef - If set to true, returns the AssignedTo field in TestCaseReference as IdentityRef object.
     * @param {boolean} includePointDetails - If set to false, will get a smaller payload containing only basic details about the test point object
     */
    getPoints'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      Parameter
        Identifier: ' suiteId'
        NumberKeyword
      Parameter
        Identifier: ' pointId'
        StringKeyword
      Parameter
        Identifier: ' returnIdentityRef'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' includePointDetails'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'TestPlanInterfaces'
              Identifier: 'TestPoint'
    MethodDeclaration
      Identifier: '
    /**
     * Get all the points inside a suite based on some filters
     *
     * @param {string} project - Project ID or project name
     * @param {number} planId - ID of the test plan for which test points are requested.
     * @param {number} suiteId - ID of the test suite for which test points are requested
     * @param {string} testPointIds - ID of test points to fetch.
     * @param {string} testCaseId - Get Test Points for specific test case Ids.
     * @param {string} continuationToken - If the list of test point returned is not complete, a continuation token to query next batch of test points is included in the response header as "x-ms-continuationtoken". Omit this parameter to get the first batch of test points.
     * @param {boolean} returnIdentityRef - If set to true, returns the AssignedTo field in TestCaseReference as IdentityRef object.
     * @param {boolean} includePointDetails - If set to false, will get a smaller payload containing only basic details about the test point object
     * @param {boolean} isRecursive - If set to true, will also fetch test points belonging to child suites recursively.
     */
    getPointsList'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      Parameter
        Identifier: ' suiteId'
        NumberKeyword
      Parameter
        Identifier: ' testPointIds'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' testCaseId'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' returnIdentityRef'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' includePointDetails'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' isRecursive'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'TestPlanInterfaces'
              Identifier: 'TestPoint'
    MethodDeclaration
      Identifier: '
    /**
     * Update Test Points. This is used to Reset test point to active, update the outcome of a test point or update the tester of a test point
     *
     * @param {TestPlanInterfaces.TestPointUpdateParams[]} testPointUpdateParams - A TestPointUpdateParams Object.
     * @param {string} project - Project ID or project name
     * @param {number} planId - ID of the test plan for which test points are requested.
     * @param {number} suiteId - ID of the test suite for which test points are requested.
     * @param {boolean} includePointDetails - If set to false, will get a smaller payload containing only basic details about the test point object
     * @param {boolean} returnIdentityRef - If set to true, returns the AssignedTo field in TestCaseReference as IdentityRef object.
     */
    updateTestPoints'
      Parameter
        Identifier: 'testPointUpdateParams'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' TestPlanInterfaces'
              Identifier: 'TestPointUpdateParams'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' planId'
        NumberKeyword
      Parameter
        Identifier: ' suiteId'
        NumberKeyword
      Parameter
        Identifier: ' includePointDetails'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' returnIdentityRef'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'TestPlanInterfaces'
              Identifier: 'TestPoint'
    MethodDeclaration
      Identifier: '
    /**
     * Clone test suite
     *
     * @param {TestPlanInterfaces.CloneTestSuiteParams} cloneRequestBody - Suite Clone Request Body detail TestSuiteCloneRequest
     * @param {string} project - Project ID or project name
     * @param {boolean} deepClone - Clones all the associated test cases as well
     */
    cloneTestSuite'
      Parameter
        Identifier: 'cloneRequestBody'
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'CloneTestSuiteParams'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' deepClone'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'CloneTestSuiteOperationInformation'
    MethodDeclaration
      Identifier: '
    /**
     * Get clone information.
     *
     * @param {string} project - Project ID or project name
     * @param {number} cloneOperationId - Operation ID returned when we queue a clone operation
     */
    getSuiteCloneInformation'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' cloneOperationId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'CloneTestSuiteOperationInformation'
    MethodDeclaration
      Identifier: '
    /**
     * Create a test variable.
     *
     * @param {TestPlanInterfaces.TestVariableCreateUpdateParameters} testVariableCreateUpdateParameters - TestVariableCreateUpdateParameters
     * @param {string} project - Project ID or project name
     */
    createTestVariable'
      Parameter
        Identifier: 'testVariableCreateUpdateParameters'
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'TestVariableCreateUpdateParameters'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'TestVariable'
    MethodDeclaration
      Identifier: '
    /**
     * Delete a test variable by its ID.
     *
     * @param {string} project - Project ID or project name
     * @param {number} testVariableId - ID of the test variable to delete.
     */
    deleteTestVariable'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' testVariableId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Get a test variable by its ID.
     *
     * @param {string} project - Project ID or project name
     * @param {number} testVariableId - ID of the test variable to get.
     */
    getTestVariableById'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' testVariableId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'TestVariable'
    MethodDeclaration
      Identifier: '
    /**
     * Get a list of test variables.
     *
     * @param {string} project - Project ID or project name
     * @param {string} continuationToken - If the list of variables returned is not complete, a continuation token to query next batch of variables is included in the response header as "x-ms-continuationtoken". Omit this parameter to get the first batch of test variables.
     */
    getTestVariables'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'TestPlanInterfaces'
              Identifier: 'TestVariable'
    MethodDeclaration
      Identifier: '
    /**
     * Update a test variable by its ID.
     *
     * @param {TestPlanInterfaces.TestVariableCreateUpdateParameters} testVariableCreateUpdateParameters - TestVariableCreateUpdateParameters
     * @param {string} project - Project ID or project name
     * @param {number} testVariableId - ID of the test variable to update.
     */
    updateTestVariable'
      Parameter
        Identifier: 'testVariableCreateUpdateParameters'
        TypeReference
          QualifiedName
            Identifier: ' TestPlanInterfaces'
            Identifier: 'TestVariableCreateUpdateParameters'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' testVariableId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'TestPlanInterfaces'
            Identifier: 'TestVariable'
