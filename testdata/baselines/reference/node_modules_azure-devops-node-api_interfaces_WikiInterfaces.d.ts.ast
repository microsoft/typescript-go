SourceFile
  ImportEqualsDeclaration
    Identifier: ' GitInterfaces'
    ExternalModuleReference
      StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Wiki'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' WikiCreateParameters'
    PropertySignature
      Identifier: '
    /**
     * The head commit associated with the git repository backing up the wiki.
     */
    headCommit'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The ID of the wiki which is same as the ID of the Git repository that it is backed by.
     */
    id'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The git repository that backs up the wiki.
     */
    repository'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' GitInterfaces'
          Identifier: 'GitRepository'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WikiAttachment'
    PropertySignature
      Identifier: '
    /**
     * Name of the wiki attachment file.
     */
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Path of the wiki attachment file.
     */
    path'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WikiAttachmentResponse'
    PropertySignature
      Identifier: '
    /**
     * Defines properties for wiki attachment file.
     */
    attachment'
      QuestionToken
      TypeReference
        Identifier: ' WikiAttachment'
    PropertySignature
      Identifier: '
    /**
     * Contains the list of ETag values from the response header of the attachments API call. The first item in the list contains the version of the wiki attachment.
     */
    eTag'
      QuestionToken
      ArrayType
        StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WikiCreateBaseParameters'
    PropertySignature
      Identifier: '
    /**
     * Folder path inside repository which is shown as Wiki. Not required for ProjectWiki type.
     */
    mappedPath'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Wiki name.
     */
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * ID of the project in which the wiki is to be created.
     */
    projectId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * ID of the git repository that backs up the wiki. Not required for ProjectWiki type.
     */
    repositoryId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Type of the wiki.
     */
    type'
      QuestionToken
      TypeReference
        Identifier: ' WikiType'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WikiCreateParameters'
    PropertySignature
      Identifier: '
    /**
     * Wiki name.
     */
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * ID of the project in which the wiki is to be created.
     */
    projectId'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WikiCreateParametersV2'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' WikiCreateBaseParameters'
    PropertySignature
      Identifier: '
    /**
     * Version of the wiki. Not required for ProjectWiki type.
     */
    version'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' GitInterfaces'
          Identifier: 'GitVersionDescriptor'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WikiPage'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' WikiPageCreateOrUpdateParameters'
    PropertySignature
      Identifier: '
    /**
     * Path of the git item corresponding to the wiki page stored in the backing Git repository.
     */
    gitItemPath'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * When present, permanent identifier for the wiki page
     */
    id'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * True if a page is non-conforming, i.e. 1) if the name doesn't match page naming standards. 2) if the page does not have a valid entry in the appropriate order file.
     */
    isNonConformant'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * True if this page has subpages under its path.
     */
    isParentPage'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Order of the wiki page, relative to other pages in the same hierarchy level.
     */
    order'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Path of the wiki page.
     */
    path'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Remote web url to the wiki page.
     */
    remoteUrl'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * List of subpages of the current page.
     */
    subPages'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' WikiPage'
    PropertySignature
      Identifier: '
    /**
     * REST url for this wiki page.
     */
    url'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WikiPageCreateOrUpdateParameters'
    PropertySignature
      Identifier: '
    /**
     * Content of the wiki page.
     */
    content'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WikiPageDetail'
    PropertySignature
      Identifier: '
    /**
     * When present, permanent identifier for the wiki page
     */
    id'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Path of the wiki page.
     */
    path'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Path of the wiki page.
     */
    viewStats'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' WikiPageStat'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WikiPageMove'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' WikiPageMoveParameters'
    PropertySignature
      Identifier: '
    /**
     * Resultant page of this page move operation.
     */
    page'
      QuestionToken
      TypeReference
        Identifier: ' WikiPage'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WikiPageMoveParameters'
    PropertySignature
      Identifier: '
    /**
     * New order of the wiki page.
     */
    newOrder'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * New path of the wiki page.
     */
    newPath'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Current path of the wiki page.
     */
    path'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WikiPageMoveResponse'
    PropertySignature
      Identifier: '
    /**
     * Contains the list of ETag values from the response header of the page move API call. The first item in the list contains the version of the wiki page subject to page move.
     */
    eTag'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Defines properties for wiki page move.
     */
    pageMove'
      QuestionToken
      TypeReference
        Identifier: ' WikiPageMove'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WikiPageResponse'
    PropertySignature
      Identifier: '
    /**
     * Contains the list of ETag values from the response header of the pages API call. The first item in the list contains the version of the wiki page.
     */
    eTag'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Defines properties for wiki page.
     */
    page'
      QuestionToken
      TypeReference
        Identifier: ' WikiPage'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WikiPagesBatchRequest'
    PropertySignature
      Identifier: '
    /**
     * If the list of page data returned is not complete, a continuation token to query next batch of pages is included in the response header as "x-ms-continuationtoken". Omit this parameter to get the first batch of Wiki Page Data.
     */
    continuationToken'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * last N days from the current day for which page views is to be returned. It's inclusive of current day.
     */
    pageViewsForDays'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Total count of pages on a wiki to return.
     */
    top'
      QuestionToken
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WikiPageStat'
    PropertySignature
      Identifier: '
    /**
     * the count of the stat for the Day
     */
    count'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Day of the stat
     */
    day'
      QuestionToken
      TypeReference
        Identifier: ' Date'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WikiPageViewStats'
    PropertySignature
      Identifier: '
    /**
     * Wiki page view count.
     */
    count'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Wiki page last viewed time.
     */
    lastViewedTime'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * Wiki page path.
     */
    path'
      QuestionToken
      StringKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' WikiType'
    EnumMember
      Identifier: '
    /**
     * Indicates that the wiki is provisioned for the team project
     */
    ProjectWiki'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Indicates that the wiki is published from a git repository
     */
    CodeWiki'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WikiUpdatedNotificationMessage'
    PropertySignature
      Identifier: '
    /**
     * Collection host Id for which the wikis are updated.
     */
    collectionId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Project Id for which the wikis are updated.
     */
    projectId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Repository Id associated with the particular wiki which is added, updated or deleted.
     */
    repositoryId'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WikiUpdateParameters'
    PropertySignature
      Identifier: '
    /**
     * Name for wiki.
     */
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Versions of the wiki.
     */
    versions'
      QuestionToken
      ArrayType
        TypeReference
          QualifiedName
            Identifier: ' GitInterfaces'
            Identifier: 'GitVersionDescriptor'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WikiV2'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' WikiCreateBaseParameters'
    PropertySignature
      Identifier: '
    /**
     * ID of the wiki.
     */
    id'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Is wiki repository disabled
     */
    isDisabled'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Properties of the wiki.
     */
    properties'
      QuestionToken
      TypeLiteral
        IndexSignature
          Parameter
            Identifier: 'key'
            StringKeyword
          StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Remote web url to the wiki.
     */
    remoteUrl'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * REST url for this wiki.
     */
    url'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Versions of the wiki.
     */
    versions'
      QuestionToken
      ArrayType
        TypeReference
          QualifiedName
            Identifier: ' GitInterfaces'
            Identifier: 'GitVersionDescriptor'
  VariableStatement
    ExportKeyword
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' TypeInfo'
        TypeLiteral
          PropertySignature
            Identifier: '
    Wiki'
            AnyKeyword
          PropertySignature
            Identifier: '
    WikiCreateBaseParameters'
            AnyKeyword
          PropertySignature
            Identifier: '
    WikiCreateParametersV2'
            AnyKeyword
          PropertySignature
            Identifier: '
    WikiPageDetail'
            AnyKeyword
          PropertySignature
            Identifier: '
    WikiPageStat'
            AnyKeyword
          PropertySignature
            Identifier: '
    WikiPageViewStats'
            AnyKeyword
          PropertySignature
            Identifier: '
    WikiType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            projectWiki'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            codeWiki'
                    NumberKeyword
          PropertySignature
            Identifier: '
    WikiUpdateParameters'
            AnyKeyword
          PropertySignature
            Identifier: '
    WikiV2'
            AnyKeyword
