SourceFile
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: '
    addEmitHelpers'
        ImportSpecifier
          Identifier: '
    addRange'
        ImportSpecifier
          Identifier: '
    append'
        ImportSpecifier
          Identifier: '
    arrayFrom'
        ImportSpecifier
          Identifier: '
    BindingElement'
        ImportSpecifier
          Identifier: '
    Block'
        ImportSpecifier
          Identifier: '
    Bundle'
        ImportSpecifier
          Identifier: '
    CaseOrDefaultClause'
        ImportSpecifier
          Identifier: '
    chainBundle'
        ImportSpecifier
          Identifier: '
    ClassDeclaration'
        ImportSpecifier
          Identifier: '
    Debug'
        ImportSpecifier
          Identifier: '
    EmitFlags'
        ImportSpecifier
          Identifier: '
    ExportAssignment'
        ImportSpecifier
          Identifier: '
    ExportSpecifier'
        ImportSpecifier
          Identifier: '
    Expression'
        ImportSpecifier
          Identifier: '
    firstOrUndefined'
        ImportSpecifier
          Identifier: '
    ForOfStatement'
        ImportSpecifier
          Identifier: '
    ForStatement'
        ImportSpecifier
          Identifier: '
    GeneratedIdentifierFlags'
        ImportSpecifier
          Identifier: '
    getEmitFlags'
        ImportSpecifier
          Identifier: '
    hasSyntacticModifier'
        ImportSpecifier
          Identifier: '
    Identifier'
        ImportSpecifier
          Identifier: '
    IdentifierNameMap'
        ImportSpecifier
          Identifier: '
    isArray'
        ImportSpecifier
          Identifier: '
    isBindingPattern'
        ImportSpecifier
          Identifier: '
    isBlock'
        ImportSpecifier
          Identifier: '
    isCaseClause'
        ImportSpecifier
          Identifier: '
    isCustomPrologue'
        ImportSpecifier
          Identifier: '
    isExpression'
        ImportSpecifier
          Identifier: '
    isGeneratedIdentifier'
        ImportSpecifier
          Identifier: '
    isIdentifier'
        ImportSpecifier
          Identifier: '
    isLocalName'
        ImportSpecifier
          Identifier: '
    isNamedEvaluation'
        ImportSpecifier
          Identifier: '
    isOmittedExpression'
        ImportSpecifier
          Identifier: '
    isPrologueDirective'
        ImportSpecifier
          Identifier: '
    isSourceFile'
        ImportSpecifier
          Identifier: '
    isStatement'
        ImportSpecifier
          Identifier: '
    isVariableDeclarationList'
        ImportSpecifier
          Identifier: '
    isVariableStatement'
        ImportSpecifier
          Identifier: '
    ModifierFlags'
        ImportSpecifier
          Identifier: '
    Node'
        ImportSpecifier
          Identifier: '
    NodeFlags'
        ImportSpecifier
          Identifier: '
    setCommentRange'
        ImportSpecifier
          Identifier: '
    setEmitFlags'
        ImportSpecifier
          Identifier: '
    setOriginalNode'
        ImportSpecifier
          Identifier: '
    setSourceMapRange'
        ImportSpecifier
          Identifier: '
    setTextRange'
        ImportSpecifier
          Identifier: '
    skipOuterExpressions'
        ImportSpecifier
          Identifier: '
    SourceFile'
        ImportSpecifier
          Identifier: '
    Statement'
        ImportSpecifier
          Identifier: '
    SwitchStatement'
        ImportSpecifier
          Identifier: '
    SyntaxKind'
        ImportSpecifier
          Identifier: '
    TransformationContext'
        ImportSpecifier
          Identifier: '
    TransformFlags'
        ImportSpecifier
          Identifier: '
    transformNamedEvaluation'
        ImportSpecifier
          Identifier: '
    VariableDeclaration'
        ImportSpecifier
          Identifier: '
    VariableDeclarationList'
        ImportSpecifier
          Identifier: '
    VariableStatement'
        ImportSpecifier
          Identifier: '
    visitArray'
        ImportSpecifier
          Identifier: '
    visitEachChild'
        ImportSpecifier
          Identifier: '
    visitNode'
        ImportSpecifier
          Identifier: '
    visitNodes'
        ImportSpecifier
          Identifier: '
    VisitResult'
    StringLiteral
  EnumDeclaration
    ConstKeyword
    Identifier: ' UsingKind'
    EnumMember
      Identifier: '
    None'
    EnumMember
      Identifier: '
    Sync'
    EnumMember
      Identifier: '
    Async'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' transformESNext'
    Parameter
      Identifier: 'context'
      TypeReference
        Identifier: ' TransformationContext'
    FunctionType
      Parameter
        Identifier: 'x'
        UnionType
          TypeReference
            Identifier: ' SourceFile'
          TypeReference
            Identifier: ' Bundle'
      UnionType
        TypeReference
          Identifier: ' SourceFile'
        TypeReference
          Identifier: ' Bundle'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            ObjectBindingPattern
              BindingElement
                Identifier: '
        factory'
              BindingElement
                Identifier: '
        getEmitHelperFactory'
                Identifier: ' emitHelpers'
              BindingElement
                Identifier: '
        hoistVariableDeclaration'
              BindingElement
                Identifier: '
        startLexicalEnvironment'
              BindingElement
                Identifier: '
        endLexicalEnvironment'
            Identifier: ' context'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' exportBindings'
            TypeReference
              Identifier: ' IdentifierNameMap'
              TypeReference
                Identifier: 'ExportSpecifier'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' exportVars'
            ArrayType
              TypeReference
                Identifier: ' VariableDeclaration'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' defaultExportBinding'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' exportEqualsBinding'
            UnionType
              TypeReference
                Identifier: ' Identifier'
              UndefinedKeyword
      ReturnStatement
        CallExpression
          Identifier: ' chainBundle'
          Identifier: 'context'
          Identifier: ' transformSourceFile'
      FunctionDeclaration
        Identifier: ' transformSourceFile'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' SourceFile'
        Block
          IfStatement
            PropertyAccessExpression
              Identifier: 'node'
              Identifier: 'isDeclarationFile'
            Block
              ReturnStatement
                Identifier: ' node'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' visited'
                CallExpression
                  Identifier: ' visitNode'
                  Identifier: 'node'
                  Identifier: ' visitor'
                  Identifier: ' isSourceFile'
          ExpressionStatement
            CallExpression
              Identifier: '
        addEmitHelpers'
              Identifier: 'visited'
              CallExpression
                PropertyAccessExpression
                  Identifier: ' context'
                  Identifier: 'readEmitHelpers'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        exportVars'
              EqualsToken
              NonNullExpression
                Identifier: ' undefined'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        exportBindings'
              EqualsToken
              NonNullExpression
                Identifier: ' undefined'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        defaultExportBinding'
              EqualsToken
              Identifier: ' undefined'
          ReturnStatement
            Identifier: ' visited'
      FunctionDeclaration
        Identifier: ' visitor'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypeReference
          Identifier: ' VisitResult'
          TypeReference
            Identifier: 'Node'
        Block
          IfStatement
            BinaryExpression
              ParenthesizedExpression
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'transformFlags'
                  AmpersandToken
                  PropertyAccessExpression
                    Identifier: ' TransformFlags'
                    Identifier: 'ContainsESNext'
              EqualsEqualsEqualsToken
              NumericLiteral
            Block
              ReturnStatement
                Identifier: ' node'
          SwitchStatement
            PropertyAccessExpression
              Identifier: 'node'
              Identifier: 'kind'
            CaseBlock
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'SourceFile'
                ReturnStatement
                  CallExpression
                    Identifier: ' visitSourceFile'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' SourceFile'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'Block'
                ReturnStatement
                  CallExpression
                    Identifier: ' visitBlock'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' Block'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ForStatement'
                ReturnStatement
                  CallExpression
                    Identifier: ' visitForStatement'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' ForStatement'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ForOfStatement'
                ReturnStatement
                  CallExpression
                    Identifier: ' visitForOfStatement'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' ForOfStatement'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'SwitchStatement'
                ReturnStatement
                  CallExpression
                    Identifier: ' visitSwitchStatement'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' SwitchStatement'
              DefaultClause
                ReturnStatement
                  CallExpression
                    Identifier: ' visitEachChild'
                    Identifier: 'node'
                    Identifier: ' visitor'
                    Identifier: ' context'
      FunctionDeclaration
        Identifier: ' visitSourceFile'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' SourceFile'
        TypeReference
          Identifier: ' SourceFile'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' usingKind'
                CallExpression
                  Identifier: ' getUsingKindOfStatements'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'statements'
          IfStatement
            Identifier: 'usingKind'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            // Imports and exports must stay at the top level. This means we must hoist all imports, exports, and
            // top-level function declarations and bindings out of the `try` statements we generate. For example:
            //
            // given:
            //
            //  import { w } from "mod";
            //  const x = expr1;
            //  using y = expr2;
            //  const z = expr3;
            //  export function f() {
            //    console.log(z);
            //  }
            //
            // produces:
            //
            //  import { x } from "mod";        // <-- preserved
            //  const x = expr1;                // <-- preserved
            //  var y, z;                       // <-- hoisted
            //  export function f() {           // <-- hoisted
            //    console.log(z);
            //  }
            //  const env_1 = { stack: [], error: void 0, hasError: false };
            //  try {
            //    y = __addDisposableResource(env_1, expr2, false);
            //    z = expr3;
            //  }
            //  catch (e_1) {
            //    env_1.error = e_1;
            //    env_1.hasError = true;
            //  }
            //  finally {
            //    __disposeResource(env_1);
            //  }
            //
            // In this transformation, we hoist `y`, `z`, and `f` to a new outer statement list while moving all other
            // statements in the source file into the `try` block, which is the same approach we use for System module
            // emit. Unlike System module emit, we attempt to preserve all statements prior to the first top-level
            // `using` to isolate the complexity of the transformed output to only where it is necessary.
            startLexicalEnvironment'
              ExpressionStatement
                BinaryExpression
                  Identifier: '

            exportBindings'
                  EqualsToken
                  NewExpression
                    Identifier: ' IdentifierNameMap'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            exportVars'
                  EqualsToken
                  ArrayLiteralExpression
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' prologueCount'
                    CallExpression
                      Identifier: ' countPrologueStatements'
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'statements'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' topLevelStatements'
                    ArrayType
                      TypeReference
                        Identifier: ' Statement'
                    ArrayLiteralExpression
              ExpressionStatement
                CallExpression
                  Identifier: '
            addRange'
                  Identifier: 'topLevelStatements'
                  CallExpression
                    Identifier: ' visitArray'
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'statements'
                    Identifier: ' visitor'
                    Identifier: ' isStatement'
                    NumericLiteral
                    Identifier: ' prologueCount'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' pos'
                    Identifier: ' prologueCount'
              WhileStatement
                BinaryExpression
                  Identifier: 'pos'
                  LessThanToken
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: ' node'
                      Identifier: 'statements'
                    Identifier: 'length'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' statement'
                        ElementAccessExpression
                          PropertyAccessExpression
                            Identifier: ' node'
                            Identifier: 'statements'
                          Identifier: 'pos'
                  IfStatement
                    BinaryExpression
                      CallExpression
                        Identifier: 'getUsingKind'
                        Identifier: 'statement'
                      ExclamationEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' UsingKind'
                        Identifier: 'None'
                    Block
                      IfStatement
                        BinaryExpression
                          Identifier: 'pos'
                          GreaterThanToken
                          Identifier: ' prologueCount'
                        Block
                          ExpressionStatement
                            CallExpression
                              Identifier: '
                        addRange'
                              Identifier: 'topLevelStatements'
                              CallExpression
                                Identifier: ' visitNodes'
                                PropertyAccessExpression
                                  Identifier: 'node'
                                  Identifier: 'statements'
                                Identifier: ' visitor'
                                Identifier: ' isStatement'
                                Identifier: ' prologueCount'
                                BinaryExpression
                                  Identifier: ' pos'
                                  MinusToken
                                  Identifier: ' prologueCount'
                      BreakStatement
                  ExpressionStatement
                    PostfixUnaryExpression
                      Identifier: '
                pos'
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '

            Debug'
                    Identifier: 'assert'
                  BinaryExpression
                    Identifier: 'pos'
                    LessThanToken
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: ' node'
                        Identifier: 'statements'
                      Identifier: 'length'
                  StringLiteral
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' envBinding'
                    CallExpression
                      Identifier: ' createEnvBinding'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' bodyStatements'
                    CallExpression
                      Identifier: ' transformUsingDeclarations'
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'statements'
                      Identifier: ' pos'
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: ' node'
                          Identifier: 'statements'
                        Identifier: 'length'
                      Identifier: ' envBinding'
                      Identifier: ' topLevelStatements'
              IfStatement
                PropertyAccessExpression
                  Identifier: 'exportBindings'
                  Identifier: 'size'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                append'
                      Identifier: '
                    topLevelStatements'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                    factory'
                          Identifier: 'createExportDeclaration'
                        Identifier: '
                        /*modifiers*/ undefined'
                        FalseKeyword
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                        factory'
                            Identifier: 'createNamedExports'
                          CallExpression
                            Identifier: 'arrayFrom'
                            CallExpression
                              PropertyAccessExpression
                                Identifier: 'exportBindings'
                                Identifier: 'values'
              ExpressionStatement
                CallExpression
                  Identifier: '

            addRange'
                  Identifier: 'topLevelStatements'
                  CallExpression
                    Identifier: ' endLexicalEnvironment'
              IfStatement
                PropertyAccessExpression
                  Identifier: 'exportVars'
                  Identifier: 'length'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                topLevelStatements'
                        Identifier: 'push'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: 'factory'
                          Identifier: 'createVariableStatement'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                    factory'
                            Identifier: 'createModifiersFromModifierFlags'
                          PropertyAccessExpression
                            Identifier: 'ModifierFlags'
                            Identifier: 'Export'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                    factory'
                            Identifier: 'createVariableDeclarationList'
                          Identifier: '
                        exportVars'
                          PropertyAccessExpression
                            Identifier: '
                        NodeFlags'
                            Identifier: 'Let'
              ExpressionStatement
                CallExpression
                  Identifier: '
            addRange'
                  Identifier: 'topLevelStatements'
                  CallExpression
                    Identifier: ' createDownlevelUsingStatements'
                    Identifier: 'bodyStatements'
                    Identifier: ' envBinding'
                    BinaryExpression
                      Identifier: ' usingKind'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' UsingKind'
                        Identifier: 'Async'
              IfStatement
                Identifier: 'exportEqualsBinding'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                topLevelStatements'
                        Identifier: 'push'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: 'factory'
                          Identifier: 'createExportAssignment'
                        Identifier: '
                    /*modifiers*/ undefined'
                        TrueKeyword
                        Identifier: '
                    exportEqualsBinding'
              ReturnStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' factory'
                    Identifier: 'updateSourceFile'
                  Identifier: 'node'
                  Identifier: ' topLevelStatements'
          ReturnStatement
            CallExpression
              Identifier: ' visitEachChild'
              Identifier: 'node'
              Identifier: ' visitor'
              Identifier: ' context'
      FunctionDeclaration
        Identifier: ' visitBlock'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Block'
        TypeReference
          Identifier: ' VisitResult'
          TypeReference
            Identifier: 'Statement'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' usingKind'
                CallExpression
                  Identifier: ' getUsingKindOfStatements'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'statements'
          IfStatement
            Identifier: 'usingKind'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' prologueCount'
                    CallExpression
                      Identifier: ' countPrologueStatements'
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'statements'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' envBinding'
                    CallExpression
                      Identifier: ' createEnvBinding'
              ReturnStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' factory'
                    Identifier: 'updateBlock'
                  Identifier: '
                node'
                  ArrayLiteralExpression
                    SpreadElement
                      CallExpression
                        Identifier: 'visitArray'
                        PropertyAccessExpression
                          Identifier: 'node'
                          Identifier: 'statements'
                        Identifier: ' visitor'
                        Identifier: ' isStatement'
                        NumericLiteral
                        Identifier: ' prologueCount'
                    SpreadElement
                      CallExpression
                        Identifier: 'createDownlevelUsingStatements'
                        CallExpression
                          Identifier: '
                        transformUsingDeclarations'
                          PropertyAccessExpression
                            Identifier: 'node'
                            Identifier: 'statements'
                          Identifier: ' prologueCount'
                          PropertyAccessExpression
                            PropertyAccessExpression
                              Identifier: ' node'
                              Identifier: 'statements'
                            Identifier: 'length'
                          Identifier: ' envBinding'
                          Identifier: ' /*topLevelStatements*/ undefined'
                        Identifier: '
                        envBinding'
                        BinaryExpression
                          Identifier: '
                        usingKind'
                          EqualsEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' UsingKind'
                            Identifier: 'Async'
          ReturnStatement
            CallExpression
              Identifier: ' visitEachChild'
              Identifier: 'node'
              Identifier: ' visitor'
              Identifier: ' context'
      FunctionDeclaration
        Identifier: ' visitForStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' ForStatement'
        TypeReference
          Identifier: ' VisitResult'
          TypeReference
            Identifier: 'Statement'
        Block
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'initializer'
              AmpersandAmpersandToken
              CallExpression
                Identifier: ' isUsingVariableDeclarationList'
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'initializer'
            Block
              ReturnStatement
                CallExpression
                  Identifier: ' visitNode'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
                factory'
                      Identifier: 'createBlock'
                    ArrayLiteralExpression
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                    factory'
                          Identifier: 'createVariableStatement'
                        Identifier: '/*modifiers*/ undefined'
                        PropertyAccessExpression
                          Identifier: ' node'
                          Identifier: 'initializer'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                    factory'
                          Identifier: 'updateForStatement'
                        Identifier: '
                        node'
                        Identifier: '
                        /*initializer*/ undefined'
                        PropertyAccessExpression
                          Identifier: '
                        node'
                          Identifier: 'condition'
                        PropertyAccessExpression
                          Identifier: '
                        node'
                          Identifier: 'incrementor'
                        PropertyAccessExpression
                          Identifier: '
                        node'
                          Identifier: 'statement'
                  Identifier: '
                visitor'
                  Identifier: '
                isStatement'
          ReturnStatement
            CallExpression
              Identifier: ' visitEachChild'
              Identifier: 'node'
              Identifier: ' visitor'
              Identifier: ' context'
      FunctionDeclaration
        Identifier: ' visitForOfStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' ForOfStatement'
        Block
          IfStatement
            CallExpression
              Identifier: 'isUsingVariableDeclarationList'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'initializer'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' forInitializer'
                    PropertyAccessExpression
                      Identifier: ' node'
                      Identifier: 'initializer'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' forDecl'
                    BinaryExpression
                      CallExpression
                        Identifier: ' firstOrUndefined'
                        PropertyAccessExpression
                          Identifier: 'forInitializer'
                          Identifier: 'declarations'
                      BarBarToken
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' factory'
                          Identifier: 'createVariableDeclaration'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: 'factory'
                            Identifier: 'createTempVariable'
                          Identifier: '/*recordTempVariable*/ undefined'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' isAwaitUsing'
                    BinaryExpression
                      CallExpression
                        Identifier: ' getUsingKindOfVariableDeclarationList'
                        Identifier: 'forInitializer'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' UsingKind'
                        Identifier: 'Async'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' temp'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' factory'
                        Identifier: 'getGeneratedNameForNode'
                      PropertyAccessExpression
                        Identifier: 'forDecl'
                        Identifier: 'name'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' usingVar'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' factory'
                        Identifier: 'updateVariableDeclaration'
                      Identifier: 'forDecl'
                      PropertyAccessExpression
                        Identifier: ' forDecl'
                        Identifier: 'name'
                      Identifier: ' /*exclamationToken*/ undefined'
                      Identifier: ' /*type*/ undefined'
                      Identifier: ' temp'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' usingVarList'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' factory'
                        Identifier: 'createVariableDeclarationList'
                      ArrayLiteralExpression
                        Identifier: 'usingVar'
                      ConditionalExpression
                        Identifier: ' isAwaitUsing'
                        QuestionToken
                        PropertyAccessExpression
                          Identifier: ' NodeFlags'
                          Identifier: 'AwaitUsing'
                        ColonToken
                        PropertyAccessExpression
                          Identifier: ' NodeFlags'
                          Identifier: 'Using'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' usingVarStatement'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' factory'
                        Identifier: 'createVariableStatement'
                      Identifier: '/*modifiers*/ undefined'
                      Identifier: ' usingVarList'
              ReturnStatement
                CallExpression
                  Identifier: ' visitNode'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
                factory'
                      Identifier: 'updateForOfStatement'
                    Identifier: '
                    node'
                    PropertyAccessExpression
                      Identifier: '
                    node'
                      Identifier: 'awaitModifier'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                    factory'
                        Identifier: 'createVariableDeclarationList'
                      ArrayLiteralExpression
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                        factory'
                            Identifier: 'createVariableDeclaration'
                          Identifier: 'temp'
                      PropertyAccessExpression
                        Identifier: ' NodeFlags'
                        Identifier: 'Const'
                    PropertyAccessExpression
                      Identifier: '
                    node'
                      Identifier: 'expression'
                    ConditionalExpression
                      CallExpression
                        Identifier: '
                    isBlock'
                        PropertyAccessExpression
                          Identifier: 'node'
                          Identifier: 'statement'
                      QuestionToken
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                        factory'
                          Identifier: 'updateBlock'
                        PropertyAccessExpression
                          Identifier: 'node'
                          Identifier: 'statement'
                        ArrayLiteralExpression
                          Identifier: '
                            usingVarStatement'
                          SpreadElement
                            PropertyAccessExpression
                              PropertyAccessExpression
                                Identifier: 'node'
                                Identifier: 'statement'
                              Identifier: 'statements'
                      ColonToken
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                        factory'
                          Identifier: 'createBlock'
                        ArrayLiteralExpression
                          Identifier: '
                            usingVarStatement'
                          PropertyAccessExpression
                            Identifier: '
                            node'
                            Identifier: 'statement'
                        TrueKeyword
                  Identifier: '
                visitor'
                  Identifier: '
                isStatement'
          ReturnStatement
            CallExpression
              Identifier: ' visitEachChild'
              Identifier: 'node'
              Identifier: ' visitor'
              Identifier: ' context'
      FunctionDeclaration
        Identifier: ' visitCaseOrDefaultClause'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' CaseOrDefaultClause'
        Parameter
          Identifier: ' envBinding'
          TypeReference
            Identifier: ' Identifier'
        Block
          IfStatement
            BinaryExpression
              CallExpression
                Identifier: 'getUsingKindOfStatements'
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'statements'
              ExclamationEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' UsingKind'
                Identifier: 'None'
            Block
              IfStatement
                CallExpression
                  Identifier: 'isCaseClause'
                  Identifier: 'node'
                Block
                  ReturnStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' factory'
                        Identifier: 'updateCaseClause'
                      Identifier: '
                    node'
                      CallExpression
                        Identifier: '
                    visitNode'
                        PropertyAccessExpression
                          Identifier: 'node'
                          Identifier: 'expression'
                        Identifier: ' visitor'
                        Identifier: ' isExpression'
                      CallExpression
                        Identifier: '
                    transformUsingDeclarations'
                        PropertyAccessExpression
                          Identifier: 'node'
                          Identifier: 'statements'
                        NumericLiteral
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: ' node'
                            Identifier: 'statements'
                          Identifier: 'length'
                        Identifier: ' envBinding'
                        Identifier: ' /*topLevelStatements*/ undefined'
                Block
                  ReturnStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' factory'
                        Identifier: 'updateDefaultClause'
                      Identifier: '
                    node'
                      CallExpression
                        Identifier: '
                    transformUsingDeclarations'
                        PropertyAccessExpression
                          Identifier: 'node'
                          Identifier: 'statements'
                        NumericLiteral
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: ' node'
                            Identifier: 'statements'
                          Identifier: 'length'
                        Identifier: ' envBinding'
                        Identifier: ' /*topLevelStatements*/ undefined'
          ReturnStatement
            CallExpression
              Identifier: ' visitEachChild'
              Identifier: 'node'
              Identifier: ' visitor'
              Identifier: ' context'
      FunctionDeclaration
        Identifier: ' visitSwitchStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' SwitchStatement'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' usingKind'
                CallExpression
                  Identifier: ' getUsingKindOfCaseOrDefaultClauses'
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'caseBlock'
                    Identifier: 'clauses'
          IfStatement
            Identifier: 'usingKind'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' envBinding'
                    CallExpression
                      Identifier: ' createEnvBinding'
              ReturnStatement
                CallExpression
                  Identifier: ' createDownlevelUsingStatements'
                  ArrayLiteralExpression
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                    factory'
                        Identifier: 'updateSwitchStatement'
                      Identifier: '
                        node'
                      CallExpression
                        Identifier: '
                        visitNode'
                        PropertyAccessExpression
                          Identifier: 'node'
                          Identifier: 'expression'
                        Identifier: ' visitor'
                        Identifier: ' isExpression'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                        factory'
                          Identifier: 'updateCaseBlock'
                        PropertyAccessExpression
                          Identifier: '
                            node'
                          Identifier: 'caseBlock'
                        CallExpression
                          PropertyAccessExpression
                            PropertyAccessExpression
                              PropertyAccessExpression
                                Identifier: '
                            node'
                                Identifier: 'caseBlock'
                              Identifier: 'clauses'
                            Identifier: 'map'
                          ArrowFunction
                            Parameter
                              Identifier: 'clause'
                            EqualsGreaterThanToken
                            CallExpression
                              Identifier: ' visitCaseOrDefaultClause'
                              Identifier: 'clause'
                              Identifier: ' envBinding'
                  Identifier: '
                envBinding'
                  BinaryExpression
                    Identifier: '
                usingKind'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' UsingKind'
                      Identifier: 'Async'
          ReturnStatement
            CallExpression
              Identifier: ' visitEachChild'
              Identifier: 'node'
              Identifier: ' visitor'
              Identifier: ' context'
      FunctionDeclaration
        Identifier: ' transformUsingDeclarations'
        Parameter
          Identifier: 'statementsIn'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Statement'
        Parameter
          Identifier: ' start'
          NumberKeyword
        Parameter
          Identifier: ' end'
          NumberKeyword
        Parameter
          Identifier: ' envBinding'
          TypeReference
            Identifier: ' Identifier'
        Parameter
          Identifier: ' topLevelStatements'
          UnionType
            ArrayType
              TypeReference
                Identifier: ' Statement'
            UndefinedKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' statements'
                ArrayType
                  TypeReference
                    Identifier: ' Statement'
                ArrayLiteralExpression
          ForStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' i'
                Identifier: ' start'
            BinaryExpression
              Identifier: ' i'
              LessThanToken
              Identifier: ' end'
            PostfixUnaryExpression
              Identifier: ' i'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' statement'
                    ElementAccessExpression
                      Identifier: ' statementsIn'
                      Identifier: 'i'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' usingKind'
                    CallExpression
                      Identifier: ' getUsingKind'
                      Identifier: 'statement'
              IfStatement
                Identifier: 'usingKind'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                Debug'
                        Identifier: 'assertNode'
                      Identifier: 'statement'
                      Identifier: ' isVariableStatement'
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' declarations'
                        ArrayType
                          TypeReference
                            Identifier: ' VariableDeclaration'
                        ArrayLiteralExpression
                  ForOfStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' declaration'
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: ' statement'
                        Identifier: 'declarationList'
                      Identifier: 'declarations'
                    Block
                      IfStatement
                        PrefixUnaryExpression
                          CallExpression
                            Identifier: 'isIdentifier'
                            PropertyAccessExpression
                              Identifier: 'declaration'
                              Identifier: 'name'
                        Block
                          ExpressionStatement
                            BinaryExpression
                              PropertyAccessExpression
                                Identifier: '
                        // Since binding patterns are a grammar error, we reset `declarations` so we don't process this as a `using`.
                        declarations'
                                Identifier: 'length'
                              EqualsToken
                              NumericLiteral
                          BreakStatement
                      IfStatement
                        CallExpression
                          Identifier: 'isNamedEvaluation'
                          Identifier: 'declaration'
                        Block
                          ExpressionStatement
                            BinaryExpression
                              Identifier: '
                        declaration'
                              EqualsToken
                              CallExpression
                                Identifier: ' transformNamedEvaluation'
                                Identifier: 'context'
                                Identifier: ' declaration'
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' initializer'
                            BinaryExpression
                              CallExpression
                                Identifier: ' visitNode'
                                PropertyAccessExpression
                                  Identifier: 'declaration'
                                  Identifier: 'initializer'
                                Identifier: ' visitor'
                                Identifier: ' isExpression'
                              QuestionQuestionToken
                              CallExpression
                                PropertyAccessExpression
                                  Identifier: ' factory'
                                  Identifier: 'createVoidZero'
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                    declarations'
                            Identifier: 'push'
                          CallExpression
                            PropertyAccessExpression
                              Identifier: 'factory'
                              Identifier: 'updateVariableDeclaration'
                            Identifier: '
                        declaration'
                            PropertyAccessExpression
                              Identifier: '
                        declaration'
                              Identifier: 'name'
                            Identifier: '
                        /*exclamationToken*/ undefined'
                            Identifier: '
                        /*type*/ undefined'
                            CallExpression
                              PropertyAccessExpression
                                CallExpression
                                  Identifier: '
                        emitHelpers'
                                Identifier: 'createAddDisposableResourceHelper'
                              Identifier: '
                            envBinding'
                              Identifier: '
                            initializer'
                              BinaryExpression
                                Identifier: '
                            usingKind'
                                EqualsEqualsEqualsToken
                                PropertyAccessExpression
                                  Identifier: ' UsingKind'
                                  Identifier: 'Async'
                  IfStatement
                    PropertyAccessExpression
                      Identifier: 'declarations'
                      Identifier: 'length'
                    Block
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' varList'
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' factory'
                                Identifier: 'createVariableDeclarationList'
                              Identifier: 'declarations'
                              PropertyAccessExpression
                                Identifier: ' NodeFlags'
                                Identifier: 'Const'
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    setOriginalNode'
                          Identifier: 'varList'
                          PropertyAccessExpression
                            Identifier: ' statement'
                            Identifier: 'declarationList'
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    setTextRange'
                          Identifier: 'varList'
                          PropertyAccessExpression
                            Identifier: ' statement'
                            Identifier: 'declarationList'
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    hoistOrAppendNode'
                          CallExpression
                            PropertyAccessExpression
                              Identifier: 'factory'
                              Identifier: 'updateVariableStatement'
                            Identifier: 'statement'
                            Identifier: ' /*modifiers*/ undefined'
                            Identifier: ' varList'
                      ContinueStatement
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' result'
                    CallExpression
                      Identifier: ' visitor'
                      Identifier: 'statement'
              IfStatement
                CallExpression
                  Identifier: 'isArray'
                  Identifier: 'result'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                result'
                        Identifier: 'forEach'
                      Identifier: 'hoistOrAppendNode'
                IfStatement
                  Identifier: 'result'
                  Block
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                hoistOrAppendNode'
                        Identifier: 'result'
          ReturnStatement
            Identifier: ' statements'
          FunctionDeclaration
            Identifier: ' hoistOrAppendNode'
            Parameter
              Identifier: 'node'
              TypeReference
                Identifier: ' Node'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            Debug'
                    Identifier: 'assertNode'
                  Identifier: 'node'
                  Identifier: ' isStatement'
              ExpressionStatement
                CallExpression
                  Identifier: '
            append'
                  Identifier: 'statements'
                  CallExpression
                    Identifier: ' hoist'
                    Identifier: 'node'
          FunctionDeclaration
            Identifier: ' hoist'
            Parameter
              Identifier: 'node'
              TypeReference
                Identifier: ' Statement'
            Block
              IfStatement
                PrefixUnaryExpression
                  Identifier: 'topLevelStatements'
                ReturnStatement
                  Identifier: ' node'
              SwitchStatement
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'kind'
                CaseBlock
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'ImportDeclaration'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'ImportEqualsDeclaration'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'ExportDeclaration'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'FunctionDeclaration'
                    ReturnStatement
                      CallExpression
                        Identifier: ' hoistImportOrExportOrHoistedDeclaration'
                        Identifier: 'node'
                        Identifier: ' topLevelStatements'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'ExportAssignment'
                    ReturnStatement
                      CallExpression
                        Identifier: ' hoistExportAssignment'
                        AsExpression
                          Identifier: 'node'
                          TypeReference
                            Identifier: ' ExportAssignment'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'ClassDeclaration'
                    ReturnStatement
                      CallExpression
                        Identifier: ' hoistClassDeclaration'
                        AsExpression
                          Identifier: 'node'
                          TypeReference
                            Identifier: ' ClassDeclaration'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'VariableStatement'
                    ReturnStatement
                      CallExpression
                        Identifier: ' hoistVariableStatement'
                        AsExpression
                          Identifier: 'node'
                          TypeReference
                            Identifier: ' VariableStatement'
              ReturnStatement
                Identifier: ' node'
      FunctionDeclaration
        Identifier: ' hoistImportOrExportOrHoistedDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Statement'
        Parameter
          Identifier: ' topLevelStatements'
          ArrayType
            TypeReference
              Identifier: ' Statement'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        // NOTE: `node` has already been visited
        topLevelStatements'
                Identifier: 'push'
              Identifier: 'node'
          ReturnStatement
            Identifier: ' undefined'
      FunctionDeclaration
        Identifier: ' hoistExportAssignment'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' ExportAssignment'
        Block
          ReturnStatement
            ConditionalExpression
              PropertyAccessExpression
                Identifier: ' node'
                Identifier: 'isExportEquals'
              QuestionToken
              CallExpression
                Identifier: ' hoistExportEquals'
                Identifier: 'node'
              ColonToken
              CallExpression
                Identifier: ' hoistExportDefault'
                Identifier: 'node'
      FunctionDeclaration
        Identifier: ' hoistExportDefault'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' ExportAssignment'
        Block
          IfStatement
            Identifier: 'defaultExportBinding'
            Block
              ReturnStatement
                Identifier: ' node'
          ExpressionStatement
            BinaryExpression
              Identifier: '

        // given:
        //
        //   export default expr;
        //
        // produces:
        //
        //   // top level
        //   var default_1;
        //   export { default_1 as default };
        //
        //   // body
        //   default_1 = expr;

        defaultExportBinding'
              EqualsToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' factory'
                  Identifier: 'createUniqueName'
                StringLiteral
                BinaryExpression
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: ' GeneratedIdentifierFlags'
                      Identifier: 'ReservedInNestedScopes'
                    BarToken
                    PropertyAccessExpression
                      Identifier: ' GeneratedIdentifierFlags'
                      Identifier: 'FileLevel'
                  BarToken
                  PropertyAccessExpression
                    Identifier: ' GeneratedIdentifierFlags'
                    Identifier: 'Optimistic'
          ExpressionStatement
            CallExpression
              Identifier: '
        hoistBindingIdentifier'
              Identifier: 'defaultExportBinding'
              TrueKeyword
              StringLiteral
              Identifier: ' node'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' expression'
                PropertyAccessExpression
                  Identifier: ' node'
                  Identifier: 'expression'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' innerExpression'
                CallExpression
                  Identifier: ' skipOuterExpressions'
                  Identifier: 'expression'
          IfStatement
            CallExpression
              Identifier: 'isNamedEvaluation'
              Identifier: 'innerExpression'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            innerExpression'
                  EqualsToken
                  CallExpression
                    Identifier: ' transformNamedEvaluation'
                    Identifier: 'context'
                    Identifier: ' innerExpression'
                    FalseKeyword
                    StringLiteral
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            expression'
                  EqualsToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' factory'
                      Identifier: 'restoreOuterExpressions'
                    Identifier: 'expression'
                    Identifier: ' innerExpression'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' assignment'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' factory'
                    Identifier: 'createAssignment'
                  Identifier: 'defaultExportBinding'
                  Identifier: ' expression'
          ReturnStatement
            CallExpression
              PropertyAccessExpression
                Identifier: ' factory'
                Identifier: 'createExpressionStatement'
              Identifier: 'assignment'
      FunctionDeclaration
        Identifier: ' hoistExportEquals'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' ExportAssignment'
        Block
          IfStatement
            Identifier: 'exportEqualsBinding'
            Block
              ReturnStatement
                Identifier: ' node'
          ExpressionStatement
            BinaryExpression
              Identifier: '

        // given:
        //
        //   export = expr;
        //
        // produces:
        //
        //   // top level
        //   var default_1;
        //
        //   try {
        //       // body
        //       default_1 = expr;
        //   } ...
        //
        //   // top level suffix
        //   export = default_1;

        exportEqualsBinding'
              EqualsToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' factory'
                  Identifier: 'createUniqueName'
                StringLiteral
                BinaryExpression
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: ' GeneratedIdentifierFlags'
                      Identifier: 'ReservedInNestedScopes'
                    BarToken
                    PropertyAccessExpression
                      Identifier: ' GeneratedIdentifierFlags'
                      Identifier: 'FileLevel'
                  BarToken
                  PropertyAccessExpression
                    Identifier: ' GeneratedIdentifierFlags'
                    Identifier: 'Optimistic'
          ExpressionStatement
            CallExpression
              Identifier: '
        hoistVariableDeclaration'
              Identifier: 'exportEqualsBinding'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' assignment'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' factory'
                    Identifier: 'createAssignment'
                  Identifier: 'exportEqualsBinding'
                  PropertyAccessExpression
                    Identifier: ' node'
                    Identifier: 'expression'
          ReturnStatement
            CallExpression
              PropertyAccessExpression
                Identifier: ' factory'
                Identifier: 'createExpressionStatement'
              Identifier: 'assignment'
      FunctionDeclaration
        Identifier: ' hoistClassDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' ClassDeclaration'
        Block
          IfStatement
            BinaryExpression
              PrefixUnaryExpression
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'name'
              AmpersandAmpersandToken
              Identifier: ' defaultExportBinding'
            Block
              ReturnStatement
                Identifier: ' node'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' isExported'
                CallExpression
                  Identifier: ' hasSyntacticModifier'
                  Identifier: 'node'
                  PropertyAccessExpression
                    Identifier: ' ModifierFlags'
                    Identifier: 'Export'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' isDefault'
                CallExpression
                  Identifier: ' hasSyntacticModifier'
                  Identifier: 'node'
                  PropertyAccessExpression
                    Identifier: ' ModifierFlags'
                    Identifier: 'Default'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' expression'
                TypeReference
                  Identifier: ' Expression'
                CallExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: ' factory'
                      Identifier: 'converters'
                    Identifier: 'convertToClassExpression'
                  Identifier: 'node'
          IfStatement
            PropertyAccessExpression
              Identifier: 'node'
              Identifier: 'name'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            // given:
            //
            //  using x = expr;
            //  class C {}
            //
            // produces:
            //
            //  var x, C;
            //  const env_1 = { ... };
            //  try {
            //    x = __addDisposableResource(env_1, expr, false);
            //    C = class {};
            //  }
            //  catch (e_1) {
            //    env_1.error = e_1;
            //    env_1.hasError = true;
            //  }
            //  finally {
            //    __disposeResources(env_1);
            //  }
            //
            // If the class is exported, we also produce an `export { C };`
            hoistBindingIdentifier'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: 'factory'
                      Identifier: 'getLocalName'
                    Identifier: 'node'
                  BinaryExpression
                    Identifier: ' isExported'
                    AmpersandAmpersandToken
                    PrefixUnaryExpression
                      Identifier: 'isDefault'
                  Identifier: ' /*exportAlias*/ undefined'
                  Identifier: ' node'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            expression'
                  EqualsToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' factory'
                      Identifier: 'createAssignment'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: 'factory'
                        Identifier: 'getDeclarationName'
                      Identifier: 'node'
                    Identifier: ' expression'
              IfStatement
                CallExpression
                  Identifier: 'isNamedEvaluation'
                  Identifier: 'expression'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                expression'
                      EqualsToken
                      CallExpression
                        Identifier: ' transformNamedEvaluation'
                        Identifier: 'context'
                        Identifier: ' expression'
                        FalseKeyword
              ExpressionStatement
                CallExpression
                  Identifier: '
            setOriginalNode'
                  Identifier: 'expression'
                  Identifier: ' node'
              ExpressionStatement
                CallExpression
                  Identifier: '
            setSourceMapRange'
                  Identifier: 'expression'
                  Identifier: ' node'
              ExpressionStatement
                CallExpression
                  Identifier: '
            setCommentRange'
                  Identifier: 'expression'
                  Identifier: ' node'
          IfStatement
            BinaryExpression
              Identifier: 'isDefault'
              AmpersandAmpersandToken
              PrefixUnaryExpression
                Identifier: 'defaultExportBinding'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            // In the case of a default export, we create a temporary variable that we export as the default and then
            // assign to that variable.
            //
            // given:
            //
            //  using x = expr;
            //  export default class C {}
            //
            // produces:
            //
            //  export { default_1 as default };
            //  var x, C, default_1;
            //  const env_1 = { ... };
            //  try {
            //    x = __addDisposableResource(env_1, expr, false);
            //    default_1 = C = class {};
            //  }
            //  catch (e_1) {
            //    env_1.error = e_1;
            //    env_1.hasError = true;
            //  }
            //  finally {
            //    __disposeResources(env_1);
            //  }
            //
            // Though we will never reassign `default_1`, this most closely matches the specified runtime semantics.
            defaultExportBinding'
                  EqualsToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' factory'
                      Identifier: 'createUniqueName'
                    StringLiteral
                    BinaryExpression
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: ' GeneratedIdentifierFlags'
                          Identifier: 'ReservedInNestedScopes'
                        BarToken
                        PropertyAccessExpression
                          Identifier: ' GeneratedIdentifierFlags'
                          Identifier: 'FileLevel'
                      BarToken
                      PropertyAccessExpression
                        Identifier: ' GeneratedIdentifierFlags'
                        Identifier: 'Optimistic'
              ExpressionStatement
                CallExpression
                  Identifier: '
            hoistBindingIdentifier'
                  Identifier: 'defaultExportBinding'
                  TrueKeyword
                  StringLiteral
                  Identifier: ' node'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            expression'
                  EqualsToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' factory'
                      Identifier: 'createAssignment'
                    Identifier: 'defaultExportBinding'
                    Identifier: ' expression'
              IfStatement
                CallExpression
                  Identifier: 'isNamedEvaluation'
                  Identifier: 'expression'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                expression'
                      EqualsToken
                      CallExpression
                        Identifier: ' transformNamedEvaluation'
                        Identifier: 'context'
                        Identifier: ' expression'
                        FalseKeyword
                        StringLiteral
              ExpressionStatement
                CallExpression
                  Identifier: '
            setOriginalNode'
                  Identifier: 'expression'
                  Identifier: ' node'
          ReturnStatement
            CallExpression
              PropertyAccessExpression
                Identifier: ' factory'
                Identifier: 'createExpressionStatement'
              Identifier: 'expression'
      FunctionDeclaration
        Identifier: ' hoistVariableStatement'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' VariableStatement'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' expressions'
                UnionType
                  ArrayType
                    TypeReference
                      Identifier: ' Expression'
                  UndefinedKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' isExported'
                CallExpression
                  Identifier: ' hasSyntacticModifier'
                  Identifier: 'node'
                  PropertyAccessExpression
                    Identifier: ' ModifierFlags'
                    Identifier: 'Export'
          ForOfStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' variable'
            PropertyAccessExpression
              PropertyAccessExpression
                Identifier: ' node'
                Identifier: 'declarationList'
              Identifier: 'declarations'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            hoistBindingElement'
                  Identifier: 'variable'
                  Identifier: ' isExported'
                  Identifier: ' variable'
              IfStatement
                PropertyAccessExpression
                  Identifier: 'variable'
                  Identifier: 'initializer'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                expressions'
                      EqualsToken
                      CallExpression
                        Identifier: ' append'
                        Identifier: 'expressions'
                        CallExpression
                          Identifier: ' hoistInitializedVariable'
                          Identifier: 'variable'
          IfStatement
            Identifier: 'expressions'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' statement'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' factory'
                        Identifier: 'createExpressionStatement'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: 'factory'
                          Identifier: 'inlineExpressions'
                        Identifier: 'expressions'
              ExpressionStatement
                CallExpression
                  Identifier: '
            setOriginalNode'
                  Identifier: 'statement'
                  Identifier: ' node'
              ExpressionStatement
                CallExpression
                  Identifier: '
            setCommentRange'
                  Identifier: 'statement'
                  Identifier: ' node'
              ExpressionStatement
                CallExpression
                  Identifier: '
            setSourceMapRange'
                  Identifier: 'statement'
                  Identifier: ' node'
              ReturnStatement
                Identifier: ' statement'
          ReturnStatement
            Identifier: ' undefined'
      FunctionDeclaration
        Identifier: ' hoistInitializedVariable'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' VariableDeclaration'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        // NOTE: `node` has already been visited
        Debug'
                Identifier: 'assertIsDefined'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'initializer'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' target'
                TypeReference
                  Identifier: ' Expression'
          IfStatement
            CallExpression
              Identifier: 'isIdentifier'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'name'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            target'
                  EqualsToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' factory'
                      Identifier: 'cloneNode'
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'name'
              ExpressionStatement
                CallExpression
                  Identifier: '
            setEmitFlags'
                  Identifier: 'target'
                  BinaryExpression
                    CallExpression
                      Identifier: ' getEmitFlags'
                      Identifier: 'target'
                    AmpersandToken
                    PrefixUnaryExpression
                      ParenthesizedExpression
                        BinaryExpression
                          BinaryExpression
                            PropertyAccessExpression
                              Identifier: 'EmitFlags'
                              Identifier: 'LocalName'
                            BarToken
                            PropertyAccessExpression
                              Identifier: ' EmitFlags'
                              Identifier: 'ExportName'
                          BarToken
                          PropertyAccessExpression
                            Identifier: ' EmitFlags'
                            Identifier: 'InternalName'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            target'
                  EqualsToken
                  CallExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: ' factory'
                        Identifier: 'converters'
                      Identifier: 'convertToAssignmentPattern'
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'name'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' assignment'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' factory'
                    Identifier: 'createAssignment'
                  Identifier: 'target'
                  PropertyAccessExpression
                    Identifier: ' node'
                    Identifier: 'initializer'
          ExpressionStatement
            CallExpression
              Identifier: '
        setOriginalNode'
              Identifier: 'assignment'
              Identifier: ' node'
          ExpressionStatement
            CallExpression
              Identifier: '
        setCommentRange'
              Identifier: 'assignment'
              Identifier: ' node'
          ExpressionStatement
            CallExpression
              Identifier: '
        setSourceMapRange'
              Identifier: 'assignment'
              Identifier: ' node'
          ReturnStatement
            Identifier: ' assignment'
      FunctionDeclaration
        Identifier: ' hoistBindingElement'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' VariableDeclaration'
            TypeReference
              Identifier: ' BindingElement'
        Parameter
          Identifier: ' isExportedDeclaration'
          BooleanKeyword
        Parameter
          Identifier: ' original'
          UnionType
            TypeReference
              Identifier: ' Node'
            UndefinedKeyword
        Block
          IfStatement
            CallExpression
              Identifier: 'isBindingPattern'
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'name'
            Block
              ForOfStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' element'
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: ' node'
                    Identifier: 'name'
                  Identifier: 'elements'
                Block
                  IfStatement
                    PrefixUnaryExpression
                      CallExpression
                        Identifier: 'isOmittedExpression'
                        Identifier: 'element'
                    Block
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    hoistBindingElement'
                          Identifier: 'element'
                          Identifier: ' isExportedDeclaration'
                          Identifier: ' original'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            hoistBindingIdentifier'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'name'
                  Identifier: ' isExportedDeclaration'
                  Identifier: ' /*exportAlias*/ undefined'
                  Identifier: ' original'
      FunctionDeclaration
        Identifier: ' hoistBindingIdentifier'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Identifier'
        Parameter
          Identifier: ' isExport'
          BooleanKeyword
        Parameter
          Identifier: ' exportAlias'
          UnionType
            StringKeyword
            TypeReference
              Identifier: ' Identifier'
            UndefinedKeyword
        Parameter
          Identifier: ' original'
          UnionType
            TypeReference
              Identifier: ' Node'
            UndefinedKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' name'
                ConditionalExpression
                  CallExpression
                    Identifier: ' isGeneratedIdentifier'
                    Identifier: 'node'
                  QuestionToken
                  Identifier: ' node'
                  ColonToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' factory'
                      Identifier: 'cloneNode'
                    Identifier: 'node'
          IfStatement
            Identifier: 'isExport'
            Block
              IfStatement
                BinaryExpression
                  BinaryExpression
                    Identifier: 'exportAlias'
                    EqualsEqualsEqualsToken
                    Identifier: ' undefined'
                  AmpersandAmpersandToken
                  PrefixUnaryExpression
                    CallExpression
                      Identifier: 'isLocalName'
                      Identifier: 'name'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' varDecl'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' factory'
                            Identifier: 'createVariableDeclaration'
                          Identifier: 'name'
                  IfStatement
                    Identifier: 'original'
                    Block
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    setOriginalNode'
                          Identifier: 'varDecl'
                          Identifier: ' original'
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                exportVars'
                        Identifier: 'push'
                      Identifier: 'varDecl'
                  ReturnStatement
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' localName'
                    ConditionalExpression
                      BinaryExpression
                        Identifier: ' exportAlias'
                        ExclamationEqualsEqualsToken
                        Identifier: ' undefined'
                      QuestionToken
                      Identifier: ' name'
                      ColonToken
                      Identifier: ' undefined'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' exportName'
                    ConditionalExpression
                      BinaryExpression
                        Identifier: ' exportAlias'
                        ExclamationEqualsEqualsToken
                        Identifier: ' undefined'
                      QuestionToken
                      Identifier: ' exportAlias'
                      ColonToken
                      Identifier: ' name'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' specifier'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' factory'
                        Identifier: 'createExportSpecifier'
                      FalseKeyword
                      Identifier: ' localName'
                      Identifier: ' exportName'
              IfStatement
                Identifier: 'original'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                setOriginalNode'
                      Identifier: 'specifier'
                      Identifier: ' original'
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            exportBindings'
                    Identifier: 'set'
                  Identifier: 'name'
                  Identifier: ' specifier'
          ExpressionStatement
            CallExpression
              Identifier: '
        hoistVariableDeclaration'
              Identifier: 'name'
      FunctionDeclaration
        Identifier: ' createEnvBinding'
        Block
          ReturnStatement
            CallExpression
              PropertyAccessExpression
                Identifier: ' factory'
                Identifier: 'createUniqueName'
              StringLiteral
      FunctionDeclaration
        Identifier: ' createDownlevelUsingStatements'
        Parameter
          Identifier: 'bodyStatements'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Statement'
        Parameter
          Identifier: ' envBinding'
          TypeReference
            Identifier: ' Identifier'
        Parameter
          Identifier: ' async'
          BooleanKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' statements'
                ArrayType
                  TypeReference
                    Identifier: ' Statement'
                ArrayLiteralExpression
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' envObject'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' factory'
                    Identifier: 'createObjectLiteralExpression'
                  ArrayLiteralExpression
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
            factory'
                        Identifier: 'createPropertyAssignment'
                      StringLiteral
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' factory'
                          Identifier: 'createArrayLiteralExpression'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
            factory'
                        Identifier: 'createPropertyAssignment'
                      StringLiteral
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' factory'
                          Identifier: 'createVoidZero'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
            factory'
                        Identifier: 'createPropertyAssignment'
                      StringLiteral
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' factory'
                          Identifier: 'createFalse'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' envVar'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' factory'
                    Identifier: 'createVariableDeclaration'
                  Identifier: 'envBinding'
                  Identifier: ' /*exclamationToken*/ undefined'
                  Identifier: ' /*type*/ undefined'
                  Identifier: ' envObject'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' envVarList'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' factory'
                    Identifier: 'createVariableDeclarationList'
                  ArrayLiteralExpression
                    Identifier: 'envVar'
                  PropertyAccessExpression
                    Identifier: ' NodeFlags'
                    Identifier: 'Const'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' envVarStatement'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' factory'
                    Identifier: 'createVariableStatement'
                  Identifier: '/*modifiers*/ undefined'
                  Identifier: ' envVarList'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        statements'
                Identifier: 'push'
              Identifier: 'envVarStatement'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' tryBlock'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' factory'
                    Identifier: 'createBlock'
                  Identifier: 'bodyStatements'
                  TrueKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' bodyCatchBinding'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' factory'
                    Identifier: 'createUniqueName'
                  StringLiteral
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' catchClause'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' factory'
                    Identifier: 'createCatchClause'
                  Identifier: '
            bodyCatchBinding'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
            factory'
                      Identifier: 'createBlock'
                    ArrayLiteralExpression
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                factory'
                          Identifier: 'createExpressionStatement'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                    factory'
                            Identifier: 'createAssignment'
                          CallExpression
                            PropertyAccessExpression
                              Identifier: '
                        factory'
                              Identifier: 'createPropertyAccessExpression'
                            Identifier: 'envBinding'
                            StringLiteral
                          Identifier: '
                        bodyCatchBinding'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                factory'
                          Identifier: 'createExpressionStatement'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                    factory'
                            Identifier: 'createAssignment'
                          CallExpression
                            PropertyAccessExpression
                              Identifier: '
                        factory'
                              Identifier: 'createPropertyAccessExpression'
                            Identifier: 'envBinding'
                            StringLiteral
                          CallExpression
                            PropertyAccessExpression
                              Identifier: '
                        factory'
                              Identifier: 'createTrue'
                    TrueKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' finallyBlock'
                TypeReference
                  Identifier: ' Block'
          IfStatement
            Identifier: 'async'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' result'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' factory'
                        Identifier: 'createUniqueName'
                      StringLiteral
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            finallyBlock'
                  EqualsToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' factory'
                      Identifier: 'createBlock'
                    ArrayLiteralExpression
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                factory'
                          Identifier: 'createVariableStatement'
                        Identifier: '
                    /*modifiers*/ undefined'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                    factory'
                            Identifier: 'createVariableDeclarationList'
                          ArrayLiteralExpression
                            CallExpression
                              PropertyAccessExpression
                                Identifier: '
                        factory'
                                Identifier: 'createVariableDeclaration'
                              Identifier: '
                            result'
                              Identifier: '
                            /*exclamationToken*/ undefined'
                              Identifier: '
                            /*type*/ undefined'
                              CallExpression
                                PropertyAccessExpression
                                  CallExpression
                                    Identifier: '
                            emitHelpers'
                                  Identifier: 'createDisposeResourcesHelper'
                                Identifier: 'envBinding'
                          PropertyAccessExpression
                            Identifier: ' NodeFlags'
                            Identifier: 'Const'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                factory'
                          Identifier: 'createIfStatement'
                        Identifier: 'result'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' factory'
                            Identifier: 'createExpressionStatement'
                          CallExpression
                            PropertyAccessExpression
                              Identifier: 'factory'
                              Identifier: 'createAwaitExpression'
                            Identifier: 'result'
                    TrueKeyword
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            finallyBlock'
                  EqualsToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' factory'
                      Identifier: 'createBlock'
                    ArrayLiteralExpression
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                factory'
                          Identifier: 'createExpressionStatement'
                        CallExpression
                          PropertyAccessExpression
                            CallExpression
                              Identifier: '
                    emitHelpers'
                            Identifier: 'createDisposeResourcesHelper'
                          Identifier: 'envBinding'
                    TrueKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' tryStatement'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' factory'
                    Identifier: 'createTryStatement'
                  Identifier: 'tryBlock'
                  Identifier: ' catchClause'
                  Identifier: ' finallyBlock'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        statements'
                Identifier: 'push'
              Identifier: 'tryStatement'
          ReturnStatement
            Identifier: ' statements'
  FunctionDeclaration
    Identifier: ' countPrologueStatements'
    Parameter
      Identifier: 'statements'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' Statement'
    Block
      ForStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' i'
            NumericLiteral
        BinaryExpression
          Identifier: ' i'
          LessThanToken
          PropertyAccessExpression
            Identifier: ' statements'
            Identifier: 'length'
        PostfixUnaryExpression
          Identifier: ' i'
        Block
          IfStatement
            BinaryExpression
              PrefixUnaryExpression
                CallExpression
                  Identifier: 'isPrologueDirective'
                  ElementAccessExpression
                    Identifier: 'statements'
                    Identifier: 'i'
              AmpersandAmpersandToken
              PrefixUnaryExpression
                CallExpression
                  Identifier: 'isCustomPrologue'
                  ElementAccessExpression
                    Identifier: 'statements'
                    Identifier: 'i'
            Block
              ReturnStatement
                Identifier: ' i'
      ReturnStatement
        NumericLiteral
  FunctionDeclaration
    Identifier: ' isUsingVariableDeclarationList'
    Parameter
      Identifier: 'node'
      TypeReference
        Identifier: ' Node'
    TypePredicate
      Identifier: ' node'
      IntersectionType
        TypeReference
          Identifier: ' VariableDeclarationList'
        TypeLiteral
          PropertySignature
            Identifier: ' _usingBrand'
            AnyKeyword
    Block
      ReturnStatement
        BinaryExpression
          CallExpression
            Identifier: ' isVariableDeclarationList'
            Identifier: 'node'
          AmpersandAmpersandToken
          BinaryExpression
            CallExpression
              Identifier: ' getUsingKindOfVariableDeclarationList'
              Identifier: 'node'
            ExclamationEqualsEqualsToken
            PropertyAccessExpression
              Identifier: ' UsingKind'
              Identifier: 'None'
  FunctionDeclaration
    Identifier: ' getUsingKindOfVariableDeclarationList'
    Parameter
      Identifier: 'node'
      TypeReference
        Identifier: ' VariableDeclarationList'
    Block
      ReturnStatement
        ConditionalExpression
          BinaryExpression
            ParenthesizedExpression
              BinaryExpression
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'flags'
                AmpersandToken
                PropertyAccessExpression
                  Identifier: ' NodeFlags'
                  Identifier: 'BlockScoped'
            EqualsEqualsEqualsToken
            PropertyAccessExpression
              Identifier: ' NodeFlags'
              Identifier: 'AwaitUsing'
          QuestionToken
          PropertyAccessExpression
            Identifier: ' UsingKind'
            Identifier: 'Async'
          ColonToken
          ConditionalExpression
            BinaryExpression
              ParenthesizedExpression
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'flags'
                  AmpersandToken
                  PropertyAccessExpression
                    Identifier: ' NodeFlags'
                    Identifier: 'BlockScoped'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' NodeFlags'
                Identifier: 'Using'
            QuestionToken
            PropertyAccessExpression
              Identifier: ' UsingKind'
              Identifier: 'Sync'
            ColonToken
            PropertyAccessExpression
              Identifier: '
        UsingKind'
              Identifier: 'None'
  FunctionDeclaration
    Identifier: ' getUsingKindOfVariableStatement'
    Parameter
      Identifier: 'node'
      TypeReference
        Identifier: ' VariableStatement'
    Block
      ReturnStatement
        CallExpression
          Identifier: ' getUsingKindOfVariableDeclarationList'
          PropertyAccessExpression
            Identifier: 'node'
            Identifier: 'declarationList'
  FunctionDeclaration
    Identifier: ' getUsingKind'
    Parameter
      Identifier: 'statement'
      TypeReference
        Identifier: ' Statement'
    TypeReference
      Identifier: ' UsingKind'
    Block
      ReturnStatement
        ConditionalExpression
          CallExpression
            Identifier: ' isVariableStatement'
            Identifier: 'statement'
          QuestionToken
          CallExpression
            Identifier: ' getUsingKindOfVariableStatement'
            Identifier: 'statement'
          ColonToken
          PropertyAccessExpression
            Identifier: ' UsingKind'
            Identifier: 'None'
  FunctionDeclaration
    Identifier: ' getUsingKindOfStatements'
    Parameter
      Identifier: 'statements'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' Statement'
    TypeReference
      Identifier: ' UsingKind'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' result'
            PropertyAccessExpression
              Identifier: ' UsingKind'
              Identifier: 'None'
      ForOfStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' statement'
        Identifier: ' statements'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' usingKind'
                CallExpression
                  Identifier: ' getUsingKind'
                  Identifier: 'statement'
          IfStatement
            BinaryExpression
              Identifier: 'usingKind'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' UsingKind'
                Identifier: 'Async'
            ReturnStatement
              PropertyAccessExpression
                Identifier: ' UsingKind'
                Identifier: 'Async'
          IfStatement
            BinaryExpression
              Identifier: 'usingKind'
              GreaterThanToken
              Identifier: ' result'
            ExpressionStatement
              BinaryExpression
                Identifier: ' result'
                EqualsToken
                Identifier: ' usingKind'
      ReturnStatement
        Identifier: ' result'
  FunctionDeclaration
    Identifier: ' getUsingKindOfCaseOrDefaultClauses'
    Parameter
      Identifier: 'clauses'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' CaseOrDefaultClause'
    TypeReference
      Identifier: ' UsingKind'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' result'
            PropertyAccessExpression
              Identifier: ' UsingKind'
              Identifier: 'None'
      ForOfStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' clause'
        Identifier: ' clauses'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' usingKind'
                CallExpression
                  Identifier: ' getUsingKindOfStatements'
                  PropertyAccessExpression
                    Identifier: 'clause'
                    Identifier: 'statements'
          IfStatement
            BinaryExpression
              Identifier: 'usingKind'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' UsingKind'
                Identifier: 'Async'
            ReturnStatement
              PropertyAccessExpression
                Identifier: ' UsingKind'
                Identifier: 'Async'
          IfStatement
            BinaryExpression
              Identifier: 'usingKind'
              GreaterThanToken
              Identifier: ' result'
            ExpressionStatement
              BinaryExpression
                Identifier: ' result'
                EqualsToken
                Identifier: ' usingKind'
      ReturnStatement
        Identifier: ' result'
