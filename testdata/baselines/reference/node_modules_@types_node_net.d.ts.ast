SourceFile
  ModuleDeclaration
    DeclareKeyword
    StringLiteral
    ModuleBlock
      ImportDeclaration
        ImportClause
          NamespaceImport
            Identifier: ' stream'
        StringLiteral
      ImportDeclaration
        ImportClause
          NamedImports
            ImportSpecifier
              Identifier: ' Abortable'
            ImportSpecifier
              Identifier: ' EventEmitter'
        StringLiteral
      ImportDeclaration
        ImportClause
          NamespaceImport
            Identifier: ' dns'
        StringLiteral
      TypeAliasDeclaration
        Identifier: ' LookupFunction'
        FunctionType
          Parameter
            Identifier: '
        hostname'
            StringKeyword
          Parameter
            Identifier: '
        options'
            TypeReference
              QualifiedName
                Identifier: ' dns'
                Identifier: 'LookupOptions'
          Parameter
            Identifier: '
        callback'
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    QualifiedName
                      Identifier: ' NodeJS'
                      Identifier: 'ErrnoException'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' address'
                UnionType
                  StringKeyword
                  ArrayType
                    TypeReference
                      QualifiedName
                        Identifier: ' dns'
                        Identifier: 'LookupAddress'
              Parameter
                Identifier: ' family'
                QuestionToken
                NumberKeyword
              VoidKeyword
          VoidKeyword
      InterfaceDeclaration
        Identifier: ' AddressInfo'
        PropertySignature
          Identifier: '
        address'
          StringKeyword
        PropertySignature
          Identifier: '
        family'
          StringKeyword
        PropertySignature
          Identifier: '
        port'
          NumberKeyword
      InterfaceDeclaration
        Identifier: ' SocketConstructorOpts'
        PropertySignature
          Identifier: '
        fd'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        allowHalfOpen'
          QuestionToken
          UnionType
            BooleanKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        readable'
          QuestionToken
          UnionType
            BooleanKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        writable'
          QuestionToken
          UnionType
            BooleanKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        signal'
          QuestionToken
          TypeReference
            Identifier: ' AbortSignal'
      InterfaceDeclaration
        Identifier: ' OnReadOpts'
        PropertySignature
          Identifier: '
        buffer'
          UnionType
            TypeReference
              Identifier: ' Uint8Array'
            ParenthesizedType
              FunctionType
                TypeReference
                  Identifier: ' Uint8Array'
        MethodSignature
          Identifier: '
        /**
         * This function is called for every chunk of incoming data.
         * Two arguments are passed to it: the number of bytes written to buffer and a reference to buffer.
         * Return false from this function to implicitly pause() the socket.
         */
        callback'
          Parameter
            Identifier: 'bytesWritten'
            NumberKeyword
          Parameter
            Identifier: ' buf'
            TypeReference
              Identifier: ' Uint8Array'
          BooleanKeyword
      InterfaceDeclaration
        Identifier: ' ConnectOpts'
        PropertySignature
          Identifier: '
        /**
         * If specified, incoming data is stored in a single buffer and passed to the supplied callback when data arrives on the socket.
         * Note: this will cause the streaming functionality to not provide any data, however events like 'error', 'end', and 'close' will
         * still be emitted as normal and methods like pause() and resume() will also behave as expected.
         */
        onread'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' OnReadOpts'
            UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' TcpSocketConnectOpts'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ConnectOpts'
        PropertySignature
          Identifier: '
        port'
          NumberKeyword
        PropertySignature
          Identifier: '
        host'
          QuestionToken
          UnionType
            StringKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        localAddress'
          QuestionToken
          UnionType
            StringKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        localPort'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        hints'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        family'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        lookup'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' LookupFunction'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        noDelay'
          QuestionToken
          UnionType
            BooleanKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        keepAlive'
          QuestionToken
          UnionType
            BooleanKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        keepAliveInitialDelay'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * @since v18.13.0
         */
        autoSelectFamily'
          QuestionToken
          UnionType
            BooleanKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * @since v18.13.0
         */
        autoSelectFamilyAttemptTimeout'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' IpcSocketConnectOpts'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' ConnectOpts'
        PropertySignature
          Identifier: '
        path'
          StringKeyword
      TypeAliasDeclaration
        Identifier: ' SocketConnectOpts'
        UnionType
          TypeReference
            Identifier: ' TcpSocketConnectOpts'
          TypeReference
            Identifier: ' IpcSocketConnectOpts'
      TypeAliasDeclaration
        Identifier: ' SocketReadyState'
        UnionType
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
      ClassDeclaration
        Identifier: ' Socket'
        HeritageClause
          ExpressionWithTypeArguments
            PropertyAccessExpression
              Identifier: ' stream'
              Identifier: 'Duplex'
        Constructor
          Parameter
            Identifier: 'options'
            QuestionToken
            TypeReference
              Identifier: ' SocketConstructorOpts'
        MethodDeclaration
          Identifier: '
        /**
         * Destroys the socket after all data is written. If the `finish` event was already emitted the socket is destroyed immediately.
         * If the socket is still writable it implicitly calls `socket.end()`.
         * @since v0.3.4
         */
        destroySoon'
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Sends data on the socket. The second parameter specifies the encoding in the
         * case of a string. It defaults to UTF8 encoding.
         *
         * Returns `true` if the entire data was flushed successfully to the kernel
         * buffer. Returns `false` if all or part of the data was queued in user memory.`'drain'` will be emitted when the buffer is again free.
         *
         * The optional `callback` parameter will be executed when the data is finally
         * written out, which may not be immediately.
         *
         * See `Writable` stream `write()` method for more
         * information.
         * @since v0.1.90
         * @param [encoding='utf8'] Only used when data is `string`.
         */
        write'
          Parameter
            Identifier: 'buffer'
            UnionType
              TypeReference
                Identifier: ' Uint8Array'
              StringKeyword
          Parameter
            Identifier: ' cb'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                QuestionToken
                TypeReference
                  Identifier: ' Error'
              VoidKeyword
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        write'
          Parameter
            Identifier: 'str'
            UnionType
              TypeReference
                Identifier: ' Uint8Array'
              StringKeyword
          Parameter
            Identifier: ' encoding'
            QuestionToken
            TypeReference
              Identifier: ' BufferEncoding'
          Parameter
            Identifier: ' cb'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                QuestionToken
                TypeReference
                  Identifier: ' Error'
              VoidKeyword
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Initiate a connection on a given socket.
         *
         * Possible signatures:
         *
         * * `socket.connect(options[, connectListener])`
         * * `socket.connect(path[, connectListener])` for `IPC` connections.
         * * `socket.connect(port[, host][, connectListener])` for TCP connections.
         * * Returns: `net.Socket` The socket itself.
         *
         * This function is asynchronous. When the connection is established, the `'connect'` event will be emitted. If there is a problem connecting,
         * instead of a `'connect'` event, an `'error'` event will be emitted with
         * the error passed to the `'error'` listener.
         * The last parameter `connectListener`, if supplied, will be added as a listener
         * for the `'connect'` event **once**.
         *
         * This function should only be used for reconnecting a socket after`'close'` has been emitted or otherwise it may lead to undefined
         * behavior.
         */
        connect'
          Parameter
            Identifier: 'options'
            TypeReference
              Identifier: ' SocketConnectOpts'
          Parameter
            Identifier: ' connectionListener'
            QuestionToken
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        connect'
          Parameter
            Identifier: 'port'
            NumberKeyword
          Parameter
            Identifier: ' host'
            StringKeyword
          Parameter
            Identifier: ' connectionListener'
            QuestionToken
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        connect'
          Parameter
            Identifier: 'port'
            NumberKeyword
          Parameter
            Identifier: ' connectionListener'
            QuestionToken
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        connect'
          Parameter
            Identifier: 'path'
            StringKeyword
          Parameter
            Identifier: ' connectionListener'
            QuestionToken
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Set the encoding for the socket as a `Readable Stream`. See `readable.setEncoding()` for more information.
         * @since v0.1.90
         * @return The socket itself.
         */
        setEncoding'
          Parameter
            Identifier: 'encoding'
            QuestionToken
            TypeReference
              Identifier: ' BufferEncoding'
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Pauses the reading of data. That is, `'data'` events will not be emitted.
         * Useful to throttle back an upload.
         * @return The socket itself.
         */
        pause'
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Close the TCP connection by sending an RST packet and destroy the stream.
         * If this TCP socket is in connecting status, it will send an RST packet and destroy this TCP socket once it is connected.
         * Otherwise, it will call `socket.destroy` with an `ERR_SOCKET_CLOSED` Error.
         * If this is not a TCP socket (for example, a pipe), calling this method will immediately throw an `ERR_INVALID_HANDLE_TYPE` Error.
         * @since v18.3.0, v16.17.0
         */
        resetAndDestroy'
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Resumes reading after a call to `socket.pause()`.
         * @return The socket itself.
         */
        resume'
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Sets the socket to timeout after `timeout` milliseconds of inactivity on
         * the socket. By default `net.Socket` do not have a timeout.
         *
         * When an idle timeout is triggered the socket will receive a `'timeout'` event but the connection will not be severed. The user must manually call `socket.end()` or `socket.destroy()` to
         * end the connection.
         *
         * ```js
         * socket.setTimeout(3000);
         * socket.on('timeout', () => {
         *   console.log('socket timeout');
         *   socket.end();
         * });
         * ```
         *
         * If `timeout` is 0, then the existing idle timeout is disabled.
         *
         * The optional `callback` parameter will be added as a one-time listener for the `'timeout'` event.
         * @since v0.1.90
         * @return The socket itself.
         */
        setTimeout'
          Parameter
            Identifier: 'timeout'
            NumberKeyword
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Enable/disable the use of Nagle's algorithm.
         *
         * When a TCP connection is created, it will have Nagle's algorithm enabled.
         *
         * Nagle's algorithm delays data before it is sent via the network. It attempts
         * to optimize throughput at the expense of latency.
         *
         * Passing `true` for `noDelay` or not passing an argument will disable Nagle's
         * algorithm for the socket. Passing `false` for `noDelay` will enable Nagle's
         * algorithm.
         * @since v0.1.90
         * @param [noDelay=true]
         * @return The socket itself.
         */
        setNoDelay'
          Parameter
            Identifier: 'noDelay'
            QuestionToken
            BooleanKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Enable/disable keep-alive functionality, and optionally set the initial
         * delay before the first keepalive probe is sent on an idle socket.
         *
         * Set `initialDelay` (in milliseconds) to set the delay between the last
         * data packet received and the first keepalive probe. Setting `0` for`initialDelay` will leave the value unchanged from the default
         * (or previous) setting.
         *
         * Enabling the keep-alive functionality will set the following socket options:
         *
         * * `SO_KEEPALIVE=1`
         * * `TCP_KEEPIDLE=initialDelay`
         * * `TCP_KEEPCNT=10`
         * * `TCP_KEEPINTVL=1`
         * @since v0.1.92
         * @param [enable=false]
         * @param [initialDelay=0]
         * @return The socket itself.
         */
        setKeepAlive'
          Parameter
            Identifier: 'enable'
            QuestionToken
            BooleanKeyword
          Parameter
            Identifier: ' initialDelay'
            QuestionToken
            NumberKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Returns the bound `address`, the address `family` name and `port` of the
         * socket as reported by the operating system:`{ port: 12346, family: 'IPv4', address: '127.0.0.1' }`
         * @since v0.1.90
         */
        address'
          UnionType
            TypeReference
              Identifier: ' AddressInfo'
            TypeLiteral
        MethodDeclaration
          Identifier: '
        /**
         * Calling `unref()` on a socket will allow the program to exit if this is the only
         * active socket in the event system. If the socket is already `unref`ed calling`unref()` again will have no effect.
         * @since v0.9.1
         * @return The socket itself.
         */
        unref'
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Opposite of `unref()`, calling `ref()` on a previously `unref`ed socket will _not_ let the program exit if it's the only socket left (the default behavior).
         * If the socket is `ref`ed calling `ref` again will have no effect.
         * @since v0.9.1
         * @return The socket itself.
         */
        ref'
          ThisType
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' autoSelectFamilyAttemptedAddresses'
          ArrayType
            StringKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' bufferSize'
          NumberKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' bytesRead'
          NumberKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' bytesWritten'
          NumberKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' connecting'
          BooleanKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' pending'
          BooleanKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' destroyed'
          BooleanKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' localAddress'
          QuestionToken
          StringKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' localPort'
          QuestionToken
          NumberKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' localFamily'
          QuestionToken
          StringKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' readyState'
          TypeReference
            Identifier: ' SocketReadyState'
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' remoteAddress'
          QuestionToken
          UnionType
            StringKeyword
            UndefinedKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' remoteFamily'
          QuestionToken
          UnionType
            StringKeyword
            UndefinedKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' remotePort'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' timeout'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Half-closes the socket. i.e., it sends a FIN packet. It is possible the
         * server will still send some data.
         *
         * See `writable.end()` for further details.
         * @since v0.1.90
         * @param [encoding='utf8'] Only used when data is `string`.
         * @param callback Optional callback for when the socket is finished.
         * @return The socket itself.
         */
        end'
          Parameter
            Identifier: 'callback'
            QuestionToken
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        end'
          Parameter
            Identifier: 'buffer'
            UnionType
              TypeReference
                Identifier: ' Uint8Array'
              StringKeyword
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        end'
          Parameter
            Identifier: 'str'
            UnionType
              TypeReference
                Identifier: ' Uint8Array'
              StringKeyword
          Parameter
            Identifier: ' encoding'
            QuestionToken
            TypeReference
              Identifier: ' BufferEncoding'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * events.EventEmitter
         *   1. close
         *   2. connect
         *   3. connectionAttempt
         *   4. connectionAttemptFailed
         *   5. connectionAttemptTimeout
         *   6. data
         *   7. drain
         *   8. end
         *   9. error
         *   10. lookup
         *   11. ready
         *   12. timeout
         */
        addListener'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'hadError'
                BooleanKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'ip'
                StringKeyword
              Parameter
                Identifier: ' port'
                NumberKeyword
              Parameter
                Identifier: ' family'
                NumberKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: '
            event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            listener'
            FunctionType
              Parameter
                Identifier: 'ip'
                StringKeyword
              Parameter
                Identifier: ' port'
                NumberKeyword
              Parameter
                Identifier: ' family'
                NumberKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: '
            event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            listener'
            FunctionType
              Parameter
                Identifier: 'ip'
                StringKeyword
              Parameter
                Identifier: ' port'
                NumberKeyword
              Parameter
                Identifier: ' family'
                NumberKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'data'
                TypeReference
                  Identifier: ' Buffer'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'err'
                TypeReference
                  Identifier: ' Error'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: '
            event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            listener'
            FunctionType
              Parameter
                Identifier: 'err'
                TypeReference
                  Identifier: ' Error'
              Parameter
                Identifier: ' address'
                StringKeyword
              Parameter
                Identifier: ' family'
                UnionType
                  StringKeyword
                  NumberKeyword
              Parameter
                Identifier: ' host'
                StringKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            UnionType
              StringKeyword
              SymbolKeyword
          Parameter
            DotDotDotToken
            Identifier: 'args'
            ArrayType
              AnyKeyword
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' hadError'
            BooleanKeyword
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' ip'
            StringKeyword
          Parameter
            Identifier: ' port'
            NumberKeyword
          Parameter
            Identifier: ' family'
            NumberKeyword
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' ip'
            StringKeyword
          Parameter
            Identifier: ' port'
            NumberKeyword
          Parameter
            Identifier: ' family'
            NumberKeyword
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' ip'
            StringKeyword
          Parameter
            Identifier: ' port'
            NumberKeyword
          Parameter
            Identifier: ' family'
            NumberKeyword
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' data'
            TypeReference
              Identifier: ' Buffer'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' err'
            TypeReference
              Identifier: ' Error'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' err'
            TypeReference
              Identifier: ' Error'
          Parameter
            Identifier: ' address'
            StringKeyword
          Parameter
            Identifier: ' family'
            UnionType
              StringKeyword
              NumberKeyword
          Parameter
            Identifier: ' host'
            StringKeyword
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'hadError'
                BooleanKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'ip'
                StringKeyword
              Parameter
                Identifier: ' port'
                NumberKeyword
              Parameter
                Identifier: ' family'
                NumberKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'ip'
                StringKeyword
              Parameter
                Identifier: ' port'
                NumberKeyword
              Parameter
                Identifier: ' family'
                NumberKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'ip'
                StringKeyword
              Parameter
                Identifier: ' port'
                NumberKeyword
              Parameter
                Identifier: ' family'
                NumberKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'data'
                TypeReference
                  Identifier: ' Buffer'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'err'
                TypeReference
                  Identifier: ' Error'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: '
            event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            listener'
            FunctionType
              Parameter
                Identifier: 'err'
                TypeReference
                  Identifier: ' Error'
              Parameter
                Identifier: ' address'
                StringKeyword
              Parameter
                Identifier: ' family'
                UnionType
                  StringKeyword
                  NumberKeyword
              Parameter
                Identifier: ' host'
                StringKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'hadError'
                BooleanKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'ip'
                StringKeyword
              Parameter
                Identifier: ' port'
                NumberKeyword
              Parameter
                Identifier: ' family'
                NumberKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'ip'
                StringKeyword
              Parameter
                Identifier: ' port'
                NumberKeyword
              Parameter
                Identifier: ' family'
                NumberKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'ip'
                StringKeyword
              Parameter
                Identifier: ' port'
                NumberKeyword
              Parameter
                Identifier: ' family'
                NumberKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'data'
                TypeReference
                  Identifier: ' Buffer'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'err'
                TypeReference
                  Identifier: ' Error'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: '
            event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            listener'
            FunctionType
              Parameter
                Identifier: 'err'
                TypeReference
                  Identifier: ' Error'
              Parameter
                Identifier: ' address'
                StringKeyword
              Parameter
                Identifier: ' family'
                UnionType
                  StringKeyword
                  NumberKeyword
              Parameter
                Identifier: ' host'
                StringKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'hadError'
                BooleanKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'ip'
                StringKeyword
              Parameter
                Identifier: ' port'
                NumberKeyword
              Parameter
                Identifier: ' family'
                NumberKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: '
            event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            listener'
            FunctionType
              Parameter
                Identifier: 'ip'
                StringKeyword
              Parameter
                Identifier: ' port'
                NumberKeyword
              Parameter
                Identifier: ' family'
                NumberKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: '
            event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            listener'
            FunctionType
              Parameter
                Identifier: 'ip'
                StringKeyword
              Parameter
                Identifier: ' port'
                NumberKeyword
              Parameter
                Identifier: ' family'
                NumberKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'data'
                TypeReference
                  Identifier: ' Buffer'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'err'
                TypeReference
                  Identifier: ' Error'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: '
            event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            listener'
            FunctionType
              Parameter
                Identifier: 'err'
                TypeReference
                  Identifier: ' Error'
              Parameter
                Identifier: ' address'
                StringKeyword
              Parameter
                Identifier: ' family'
                UnionType
                  StringKeyword
                  NumberKeyword
              Parameter
                Identifier: ' host'
                StringKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'hadError'
                BooleanKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: '
            event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            listener'
            FunctionType
              Parameter
                Identifier: 'ip'
                StringKeyword
              Parameter
                Identifier: ' port'
                NumberKeyword
              Parameter
                Identifier: ' family'
                NumberKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: '
            event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            listener'
            FunctionType
              Parameter
                Identifier: 'ip'
                StringKeyword
              Parameter
                Identifier: ' port'
                NumberKeyword
              Parameter
                Identifier: ' family'
                NumberKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: '
            event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            listener'
            FunctionType
              Parameter
                Identifier: 'ip'
                StringKeyword
              Parameter
                Identifier: ' port'
                NumberKeyword
              Parameter
                Identifier: ' family'
                NumberKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'data'
                TypeReference
                  Identifier: ' Buffer'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'err'
                TypeReference
                  Identifier: ' Error'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: '
            event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            listener'
            FunctionType
              Parameter
                Identifier: 'err'
                TypeReference
                  Identifier: ' Error'
              Parameter
                Identifier: ' address'
                StringKeyword
              Parameter
                Identifier: ' family'
                UnionType
                  StringKeyword
                  NumberKeyword
              Parameter
                Identifier: ' host'
                StringKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
      InterfaceDeclaration
        Identifier: ' ListenOptions'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Abortable'
        PropertySignature
          Identifier: '
        port'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        host'
          QuestionToken
          UnionType
            StringKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        backlog'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        path'
          QuestionToken
          UnionType
            StringKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        exclusive'
          QuestionToken
          UnionType
            BooleanKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        readableAll'
          QuestionToken
          UnionType
            BooleanKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        writableAll'
          QuestionToken
          UnionType
            BooleanKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * @default false
         */
        ipv6Only'
          QuestionToken
          UnionType
            BooleanKeyword
            UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' ServerOpts'
        PropertySignature
          Identifier: '
        /**
         * Indicates whether half-opened TCP connections are allowed.
         * @default false
         */
        allowHalfOpen'
          QuestionToken
          UnionType
            BooleanKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * Indicates whether the socket should be paused on incoming connections.
         * @default false
         */
        pauseOnConnect'
          QuestionToken
          UnionType
            BooleanKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * If set to `true`, it disables the use of Nagle's algorithm immediately after a new incoming connection is received.
         * @default false
         * @since v16.5.0
         */
        noDelay'
          QuestionToken
          UnionType
            BooleanKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * If set to `true`, it enables keep-alive functionality on the socket immediately after a new incoming connection is received,
         * similarly on what is done in `socket.setKeepAlive([enable][, initialDelay])`.
         * @default false
         * @since v16.5.0
         */
        keepAlive'
          QuestionToken
          UnionType
            BooleanKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * If set to a positive number, it sets the initial delay before the first keepalive probe is sent on an idle socket.
         * @default 0
         * @since v16.5.0
         */
        keepAliveInitialDelay'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' DropArgument'
        PropertySignature
          Identifier: '
        localAddress'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        localPort'
          QuestionToken
          NumberKeyword
        PropertySignature
          Identifier: '
        localFamily'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        remoteAddress'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
        remotePort'
          QuestionToken
          NumberKeyword
        PropertySignature
          Identifier: '
        remoteFamily'
          QuestionToken
          StringKeyword
      ClassDeclaration
        Identifier: ' Server'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' EventEmitter'
        Constructor
          Parameter
            Identifier: 'connectionListener'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'socket'
                TypeReference
                  Identifier: ' Socket'
              VoidKeyword
        Constructor
          Parameter
            Identifier: 'options'
            QuestionToken
            TypeReference
              Identifier: ' ServerOpts'
          Parameter
            Identifier: ' connectionListener'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'socket'
                TypeReference
                  Identifier: ' Socket'
              VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Start a server listening for connections. A `net.Server` can be a TCP or
         * an `IPC` server depending on what it listens to.
         *
         * Possible signatures:
         *
         * * `server.listen(handle[, backlog][, callback])`
         * * `server.listen(options[, callback])`
         * * `server.listen(path[, backlog][, callback])` for `IPC` servers
         * * `server.listen([port[, host[, backlog]]][, callback])` for TCP servers
         *
         * This function is asynchronous. When the server starts listening, the `'listening'` event will be emitted. The last parameter `callback`will be added as a listener for the `'listening'`
         * event.
         *
         * All `listen()` methods can take a `backlog` parameter to specify the maximum
         * length of the queue of pending connections. The actual length will be determined
         * by the OS through sysctl settings such as `tcp_max_syn_backlog` and `somaxconn` on Linux. The default value of this parameter is 511 (not 512).
         *
         * All {@link Socket} are set to `SO_REUSEADDR` (see [`socket(7)`](https://man7.org/linux/man-pages/man7/socket.7.html) for
         * details).
         *
         * The `server.listen()` method can be called again if and only if there was an
         * error during the first `server.listen()` call or `server.close()` has been
         * called. Otherwise, an `ERR_SERVER_ALREADY_LISTEN` error will be thrown.
         *
         * One of the most common errors raised when listening is `EADDRINUSE`.
         * This happens when another server is already listening on the requested`port`/`path`/`handle`. One way to handle this would be to retry
         * after a certain amount of time:
         *
         * ```js
         * server.on('error', (e) => {
         *   if (e.code === 'EADDRINUSE') {
         *     console.error('Address in use, retrying...');
         *     setTimeout(() => {
         *       server.close();
         *       server.listen(PORT, HOST);
         *     }, 1000);
         *   }
         * });
         * ```
         */
        listen'
          Parameter
            Identifier: 'port'
            QuestionToken
            NumberKeyword
          Parameter
            Identifier: ' hostname'
            QuestionToken
            StringKeyword
          Parameter
            Identifier: ' backlog'
            QuestionToken
            NumberKeyword
          Parameter
            Identifier: ' listeningListener'
            QuestionToken
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        listen'
          Parameter
            Identifier: 'port'
            QuestionToken
            NumberKeyword
          Parameter
            Identifier: ' hostname'
            QuestionToken
            StringKeyword
          Parameter
            Identifier: ' listeningListener'
            QuestionToken
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        listen'
          Parameter
            Identifier: 'port'
            QuestionToken
            NumberKeyword
          Parameter
            Identifier: ' backlog'
            QuestionToken
            NumberKeyword
          Parameter
            Identifier: ' listeningListener'
            QuestionToken
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        listen'
          Parameter
            Identifier: 'port'
            QuestionToken
            NumberKeyword
          Parameter
            Identifier: ' listeningListener'
            QuestionToken
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        listen'
          Parameter
            Identifier: 'path'
            StringKeyword
          Parameter
            Identifier: ' backlog'
            QuestionToken
            NumberKeyword
          Parameter
            Identifier: ' listeningListener'
            QuestionToken
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        listen'
          Parameter
            Identifier: 'path'
            StringKeyword
          Parameter
            Identifier: ' listeningListener'
            QuestionToken
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        listen'
          Parameter
            Identifier: 'options'
            TypeReference
              Identifier: ' ListenOptions'
          Parameter
            Identifier: ' listeningListener'
            QuestionToken
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        listen'
          Parameter
            Identifier: 'handle'
            AnyKeyword
          Parameter
            Identifier: ' backlog'
            QuestionToken
            NumberKeyword
          Parameter
            Identifier: ' listeningListener'
            QuestionToken
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        listen'
          Parameter
            Identifier: 'handle'
            AnyKeyword
          Parameter
            Identifier: ' listeningListener'
            QuestionToken
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Stops the server from accepting new connections and keeps existing
         * connections. This function is asynchronous, the server is finally closed
         * when all connections are ended and the server emits a `'close'` event.
         * The optional `callback` will be called once the `'close'` event occurs. Unlike
         * that event, it will be called with an `Error` as its only argument if the server
         * was not open when it was closed.
         * @since v0.1.90
         * @param callback Called when the server is closed.
         */
        close'
          Parameter
            Identifier: 'callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                QuestionToken
                TypeReference
                  Identifier: ' Error'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Returns the bound `address`, the address `family` name, and `port` of the server
         * as reported by the operating system if listening on an IP socket
         * (useful to find which port was assigned when getting an OS-assigned address):`{ port: 12346, family: 'IPv4', address: '127.0.0.1' }`.
         *
         * For a server listening on a pipe or Unix domain socket, the name is returned
         * as a string.
         *
         * ```js
         * const server = net.createServer((socket) => {
         *   socket.end('goodbye\n');
         * }).on('error', (err) => {
         *   // Handle errors here.
         *   throw err;
         * });
         *
         * // Grab an arbitrary unused port.
         * server.listen(() => {
         *   console.log('opened server on', server.address());
         * });
         * ```
         *
         * `server.address()` returns `null` before the `'listening'` event has been
         * emitted or after calling `server.close()`.
         * @since v0.1.90
         */
        address'
          UnionType
            TypeReference
              Identifier: ' AddressInfo'
            StringKeyword
            LiteralType
              NullKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Asynchronously get the number of concurrent connections on the server. Works
         * when sockets were sent to forks.
         *
         * Callback should take two arguments `err` and `count`.
         * @since v0.9.7
         */
        getConnections'
          Parameter
            Identifier: 'cb'
            FunctionType
              Parameter
                Identifier: 'error'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' count'
                NumberKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Opposite of `unref()`, calling `ref()` on a previously `unref`ed server will _not_ let the program exit if it's the only server left (the default behavior).
         * If the server is `ref`ed calling `ref()` again will have no effect.
         * @since v0.9.1
         */
        ref'
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Calling `unref()` on a server will allow the program to exit if this is the only
         * active server in the event system. If the server is already `unref`ed calling`unref()` again will have no effect.
         * @since v0.9.1
         */
        unref'
          ThisType
        PropertyDeclaration
          Identifier: '
        /**
         * Set this property to reject connections when the server's connection count gets
         * high.
         *
         * It is not recommended to use this option once a socket has been sent to a child
         * with `child_process.fork()`.
         * @since v0.2.0
         */
        maxConnections'
          NumberKeyword
        PropertyDeclaration
          Identifier: '
        connections'
          NumberKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' listening'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        /**
         * events.EventEmitter
         *   1. close
         *   2. connection
         *   3. error
         *   4. listening
         *   5. drop
         */
        addListener'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'socket'
                TypeReference
                  Identifier: ' Socket'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'err'
                TypeReference
                  Identifier: ' Error'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'data'
                QuestionToken
                TypeReference
                  Identifier: ' DropArgument'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            UnionType
              StringKeyword
              SymbolKeyword
          Parameter
            DotDotDotToken
            Identifier: 'args'
            ArrayType
              AnyKeyword
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' socket'
            TypeReference
              Identifier: ' Socket'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' err'
            TypeReference
              Identifier: ' Error'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' data'
            QuestionToken
            TypeReference
              Identifier: ' DropArgument'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'socket'
                TypeReference
                  Identifier: ' Socket'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'err'
                TypeReference
                  Identifier: ' Error'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'data'
                QuestionToken
                TypeReference
                  Identifier: ' DropArgument'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'socket'
                TypeReference
                  Identifier: ' Socket'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'err'
                TypeReference
                  Identifier: ' Error'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'data'
                QuestionToken
                TypeReference
                  Identifier: ' DropArgument'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'socket'
                TypeReference
                  Identifier: ' Socket'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'err'
                TypeReference
                  Identifier: ' Error'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'data'
                QuestionToken
                TypeReference
                  Identifier: ' DropArgument'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'socket'
                TypeReference
                  Identifier: ' Socket'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'err'
                TypeReference
                  Identifier: ' Error'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'data'
                QuestionToken
                TypeReference
                  Identifier: ' DropArgument'
              VoidKeyword
          ThisType
        MethodDeclaration
          ComputedPropertyName
            PropertyAccessExpression
              Identifier: 'Symbol'
              Identifier: 'asyncDispose'
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
      TypeAliasDeclaration
        Identifier: ' IPVersion'
        UnionType
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
      ClassDeclaration
        Identifier: ' BlockList'
        MethodDeclaration
          Identifier: '
        /**
         * Adds a rule to block the given IP address.
         * @since v15.0.0, v14.18.0
         * @param address An IPv4 or IPv6 address.
         * @param [type='ipv4'] Either `'ipv4'` or `'ipv6'`.
         */
        addAddress'
          Parameter
            Identifier: 'address'
            StringKeyword
          Parameter
            Identifier: ' type'
            QuestionToken
            TypeReference
              Identifier: ' IPVersion'
          VoidKeyword
        MethodDeclaration
          Identifier: '
        addAddress'
          Parameter
            Identifier: 'address'
            TypeReference
              Identifier: ' SocketAddress'
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Adds a rule to block a range of IP addresses from `start` (inclusive) to`end` (inclusive).
         * @since v15.0.0, v14.18.0
         * @param start The starting IPv4 or IPv6 address in the range.
         * @param end The ending IPv4 or IPv6 address in the range.
         * @param [type='ipv4'] Either `'ipv4'` or `'ipv6'`.
         */
        addRange'
          Parameter
            Identifier: 'start'
            StringKeyword
          Parameter
            Identifier: ' end'
            StringKeyword
          Parameter
            Identifier: ' type'
            QuestionToken
            TypeReference
              Identifier: ' IPVersion'
          VoidKeyword
        MethodDeclaration
          Identifier: '
        addRange'
          Parameter
            Identifier: 'start'
            TypeReference
              Identifier: ' SocketAddress'
          Parameter
            Identifier: ' end'
            TypeReference
              Identifier: ' SocketAddress'
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Adds a rule to block a range of IP addresses specified as a subnet mask.
         * @since v15.0.0, v14.18.0
         * @param net The network IPv4 or IPv6 address.
         * @param prefix The number of CIDR prefix bits. For IPv4, this must be a value between `0` and `32`. For IPv6, this must be between `0` and `128`.
         * @param [type='ipv4'] Either `'ipv4'` or `'ipv6'`.
         */
        addSubnet'
          Parameter
            Identifier: 'net'
            TypeReference
              Identifier: ' SocketAddress'
          Parameter
            Identifier: ' prefix'
            NumberKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        addSubnet'
          Parameter
            Identifier: 'net'
            StringKeyword
          Parameter
            Identifier: ' prefix'
            NumberKeyword
          Parameter
            Identifier: ' type'
            QuestionToken
            TypeReference
              Identifier: ' IPVersion'
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Returns `true` if the given IP address matches any of the rules added to the`BlockList`.
         *
         * ```js
         * const blockList = new net.BlockList();
         * blockList.addAddress('123.123.123.123');
         * blockList.addRange('10.0.0.1', '10.0.0.10');
         * blockList.addSubnet('8592:757c:efae:4e45::', 64, 'ipv6');
         *
         * console.log(blockList.check('123.123.123.123'));  // Prints: true
         * console.log(blockList.check('10.0.0.3'));  // Prints: true
         * console.log(blockList.check('222.111.111.222'));  // Prints: false
         *
         * // IPv6 notation for IPv4 addresses works:
         * console.log(blockList.check('::ffff:7b7b:7b7b', 'ipv6')); // Prints: true
         * console.log(blockList.check('::ffff:123.123.123.123', 'ipv6')); // Prints: true
         * ```
         * @since v15.0.0, v14.18.0
         * @param address The IP address to check
         * @param [type='ipv4'] Either `'ipv4'` or `'ipv6'`.
         */
        check'
          Parameter
            Identifier: 'address'
            TypeReference
              Identifier: ' SocketAddress'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        check'
          Parameter
            Identifier: 'address'
            StringKeyword
          Parameter
            Identifier: ' type'
            QuestionToken
            TypeReference
              Identifier: ' IPVersion'
          BooleanKeyword
        PropertyDeclaration
          Identifier: '
        /**
         * The list of rules added to the blocklist.
         * @since v15.0.0, v14.18.0
         */
        rules'
          TypeOperator
            ArrayType
              StringKeyword
      InterfaceDeclaration
        Identifier: ' TcpNetConnectOpts'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' TcpSocketConnectOpts'
          ExpressionWithTypeArguments
            Identifier: ' SocketConstructorOpts'
        PropertySignature
          Identifier: '
        timeout'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' IpcNetConnectOpts'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' IpcSocketConnectOpts'
          ExpressionWithTypeArguments
            Identifier: ' SocketConstructorOpts'
        PropertySignature
          Identifier: '
        timeout'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
      TypeAliasDeclaration
        Identifier: ' NetConnectOpts'
        UnionType
          TypeReference
            Identifier: ' TcpNetConnectOpts'
          TypeReference
            Identifier: ' IpcNetConnectOpts'
      FunctionDeclaration
        Identifier: ' createServer'
        Parameter
          Identifier: 'connectionListener'
          QuestionToken
          FunctionType
            Parameter
              Identifier: 'socket'
              TypeReference
                Identifier: ' Socket'
            VoidKeyword
        TypeReference
          Identifier: ' Server'
      FunctionDeclaration
        Identifier: ' createServer'
        Parameter
          Identifier: 'options'
          QuestionToken
          TypeReference
            Identifier: ' ServerOpts'
        Parameter
          Identifier: ' connectionListener'
          QuestionToken
          FunctionType
            Parameter
              Identifier: 'socket'
              TypeReference
                Identifier: ' Socket'
            VoidKeyword
        TypeReference
          Identifier: ' Server'
      FunctionDeclaration
        Identifier: ' connect'
        Parameter
          Identifier: 'options'
          TypeReference
            Identifier: ' NetConnectOpts'
        Parameter
          Identifier: ' connectionListener'
          QuestionToken
          FunctionType
            VoidKeyword
        TypeReference
          Identifier: ' Socket'
      FunctionDeclaration
        Identifier: ' connect'
        Parameter
          Identifier: 'port'
          NumberKeyword
        Parameter
          Identifier: ' host'
          QuestionToken
          StringKeyword
        Parameter
          Identifier: ' connectionListener'
          QuestionToken
          FunctionType
            VoidKeyword
        TypeReference
          Identifier: ' Socket'
      FunctionDeclaration
        Identifier: ' connect'
        Parameter
          Identifier: 'path'
          StringKeyword
        Parameter
          Identifier: ' connectionListener'
          QuestionToken
          FunctionType
            VoidKeyword
        TypeReference
          Identifier: ' Socket'
      FunctionDeclaration
        Identifier: ' createConnection'
        Parameter
          Identifier: 'options'
          TypeReference
            Identifier: ' NetConnectOpts'
        Parameter
          Identifier: ' connectionListener'
          QuestionToken
          FunctionType
            VoidKeyword
        TypeReference
          Identifier: ' Socket'
      FunctionDeclaration
        Identifier: ' createConnection'
        Parameter
          Identifier: 'port'
          NumberKeyword
        Parameter
          Identifier: ' host'
          QuestionToken
          StringKeyword
        Parameter
          Identifier: ' connectionListener'
          QuestionToken
          FunctionType
            VoidKeyword
        TypeReference
          Identifier: ' Socket'
      FunctionDeclaration
        Identifier: ' createConnection'
        Parameter
          Identifier: 'path'
          StringKeyword
        Parameter
          Identifier: ' connectionListener'
          QuestionToken
          FunctionType
            VoidKeyword
        TypeReference
          Identifier: ' Socket'
      FunctionDeclaration
        Identifier: ' getDefaultAutoSelectFamily'
        BooleanKeyword
      FunctionDeclaration
        Identifier: ' setDefaultAutoSelectFamily'
        Parameter
          Identifier: 'value'
          BooleanKeyword
        VoidKeyword
      FunctionDeclaration
        Identifier: ' getDefaultAutoSelectFamilyAttemptTimeout'
        NumberKeyword
      FunctionDeclaration
        Identifier: ' setDefaultAutoSelectFamilyAttemptTimeout'
        Parameter
          Identifier: 'value'
          NumberKeyword
        VoidKeyword
      FunctionDeclaration
        Identifier: ' isIP'
        Parameter
          Identifier: 'input'
          StringKeyword
        NumberKeyword
      FunctionDeclaration
        Identifier: ' isIPv4'
        Parameter
          Identifier: 'input'
          StringKeyword
        BooleanKeyword
      FunctionDeclaration
        Identifier: ' isIPv6'
        Parameter
          Identifier: 'input'
          StringKeyword
        BooleanKeyword
      InterfaceDeclaration
        Identifier: ' SocketAddressInitOptions'
        PropertySignature
          Identifier: '
        /**
         * The network address as either an IPv4 or IPv6 string.
         * @default 127.0.0.1
         */
        address'
          QuestionToken
          UnionType
            StringKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * @default `'ipv4'`
         */
        family'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' IPVersion'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * An IPv6 flow-label used only if `family` is `'ipv6'`.
         * @default 0
         */
        flowlabel'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * An IP port.
         * @default 0
         */
        port'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
      ClassDeclaration
        Identifier: ' SocketAddress'
        Constructor
          Parameter
            Identifier: 'options'
            TypeReference
              Identifier: ' SocketAddressInitOptions'
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' address'
          StringKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' family'
          TypeReference
            Identifier: ' IPVersion'
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' port'
          NumberKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' flowlabel'
          NumberKeyword
  ModuleDeclaration
    DeclareKeyword
    StringLiteral
    ModuleBlock
      ExportDeclaration
        StringLiteral
