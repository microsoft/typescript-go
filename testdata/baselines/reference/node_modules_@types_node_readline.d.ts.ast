SourceFile
  ModuleDeclaration
    DeclareKeyword
    StringLiteral
    ModuleBlock
      ImportDeclaration
        ImportClause
          NamedImports
            ImportSpecifier
              Identifier: ' Abortable'
            ImportSpecifier
              Identifier: ' EventEmitter'
        StringLiteral
      ImportDeclaration
        ImportClause
          NamespaceImport
            Identifier: ' promises'
        StringLiteral
      ExportDeclaration
        NamedExports
          ExportSpecifier
            Identifier: ' promises'
      InterfaceDeclaration
        ExportKeyword
        Identifier: ' Key'
        PropertySignature
          Identifier: '
        sequence'
          QuestionToken
          UnionType
            StringKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        name'
          QuestionToken
          UnionType
            StringKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        ctrl'
          QuestionToken
          UnionType
            BooleanKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        meta'
          QuestionToken
          UnionType
            BooleanKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        shift'
          QuestionToken
          UnionType
            BooleanKeyword
            UndefinedKeyword
      ClassDeclaration
        ExportKeyword
        Identifier: ' Interface'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' EventEmitter'
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' terminal'
          BooleanKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' line'
          StringKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' cursor'
          NumberKeyword
        Constructor
          ProtectedKeyword
          Parameter
            Identifier: '
            input'
            TypeReference
              QualifiedName
                Identifier: ' NodeJS'
                Identifier: 'ReadableStream'
          Parameter
            Identifier: '
            output'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' NodeJS'
                Identifier: 'WritableStream'
          Parameter
            Identifier: '
            completer'
            QuestionToken
            UnionType
              TypeReference
                Identifier: ' Completer'
              TypeReference
                Identifier: ' AsyncCompleter'
          Parameter
            Identifier: '
            terminal'
            QuestionToken
            BooleanKeyword
        Constructor
          ProtectedKeyword
          Parameter
            Identifier: 'options'
            TypeReference
              Identifier: ' ReadLineOptions'
        MethodDeclaration
          Identifier: '
        /**
         * The `rl.getPrompt()` method returns the current prompt used by `rl.prompt()`.
         * @since v15.3.0, v14.17.0
         * @return the current prompt string
         */
        getPrompt'
          StringKeyword
        MethodDeclaration
          Identifier: '
        /**
         * The `rl.setPrompt()` method sets the prompt that will be written to `output` whenever `rl.prompt()` is called.
         * @since v0.1.98
         */
        setPrompt'
          Parameter
            Identifier: 'prompt'
            StringKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * The `rl.prompt()` method writes the `Interface` instances configured`prompt` to a new line in `output` in order to provide a user with a new
         * location at which to provide input.
         *
         * When called, `rl.prompt()` will resume the `input` stream if it has been
         * paused.
         *
         * If the `Interface` was created with `output` set to `null` or `undefined` the prompt is not written.
         * @since v0.1.98
         * @param preserveCursor If `true`, prevents the cursor placement from being reset to `0`.
         */
        prompt'
          Parameter
            Identifier: 'preserveCursor'
            QuestionToken
            BooleanKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * The `rl.question()` method displays the `query` by writing it to the `output`,
         * waits for user input to be provided on `input`, then invokes the `callback` function passing the provided input as the first argument.
         *
         * When called, `rl.question()` will resume the `input` stream if it has been
         * paused.
         *
         * If the `Interface` was created with `output` set to `null` or `undefined` the `query` is not written.
         *
         * The `callback` function passed to `rl.question()` does not follow the typical
         * pattern of accepting an `Error` object or `null` as the first argument.
         * The `callback` is called with the provided answer as the only argument.
         *
         * An error will be thrown if calling `rl.question()` after `rl.close()`.
         *
         * Example usage:
         *
         * ```js
         * rl.question('What is your favorite food? ', (answer) => {
         *   console.log(`Oh, so your favorite food is ${answer}`);
         * });
         * ```
         *
         * Using an `AbortController` to cancel a question.
         *
         * ```js
         * const ac = new AbortController();
         * const signal = ac.signal;
         *
         * rl.question('What is your favorite food? ', { signal }, (answer) => {
         *   console.log(`Oh, so your favorite food is ${answer}`);
         * });
         *
         * signal.addEventListener('abort', () => {
         *   console.log('The food question timed out');
         * }, { once: true });
         *
         * setTimeout(() => ac.abort(), 10000);
         * ```
         * @since v0.3.3
         * @param query A statement or query to write to `output`, prepended to the prompt.
         * @param callback A callback function that is invoked with the user's input in response to the `query`.
         */
        question'
          Parameter
            Identifier: 'query'
            StringKeyword
          Parameter
            Identifier: ' callback'
            FunctionType
              Parameter
                Identifier: 'answer'
                StringKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        question'
          Parameter
            Identifier: 'query'
            StringKeyword
          Parameter
            Identifier: ' options'
            TypeReference
              Identifier: ' Abortable'
          Parameter
            Identifier: ' callback'
            FunctionType
              Parameter
                Identifier: 'answer'
                StringKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * The `rl.pause()` method pauses the `input` stream, allowing it to be resumed
         * later if necessary.
         *
         * Calling `rl.pause()` does not immediately pause other events (including `'line'`) from being emitted by the `Interface` instance.
         * @since v0.3.4
         */
        pause'
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * The `rl.resume()` method resumes the `input` stream if it has been paused.
         * @since v0.3.4
         */
        resume'
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * The `rl.close()` method closes the `Interface` instance and
         * relinquishes control over the `input` and `output` streams. When called,
         * the `'close'` event will be emitted.
         *
         * Calling `rl.close()` does not immediately stop other events (including `'line'`)
         * from being emitted by the `Interface` instance.
         * @since v0.1.98
         */
        close'
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * The `rl.write()` method will write either `data` or a key sequence identified
         * by `key` to the `output`. The `key` argument is supported only if `output` is
         * a `TTY` text terminal. See `TTY keybindings` for a list of key
         * combinations.
         *
         * If `key` is specified, `data` is ignored.
         *
         * When called, `rl.write()` will resume the `input` stream if it has been
         * paused.
         *
         * If the `Interface` was created with `output` set to `null` or `undefined` the `data` and `key` are not written.
         *
         * ```js
         * rl.write('Delete this!');
         * // Simulate Ctrl+U to delete the line written previously
         * rl.write(null, { ctrl: true, name: 'u' });
         * ```
         *
         * The `rl.write()` method will write the data to the `readline` `Interface`'s `input` _as if it were provided by the user_.
         * @since v0.1.98
         */
        write'
          Parameter
            Identifier: 'data'
            UnionType
              StringKeyword
              TypeReference
                Identifier: ' Buffer'
          Parameter
            Identifier: ' key'
            QuestionToken
            TypeReference
              Identifier: ' Key'
          VoidKeyword
        MethodDeclaration
          Identifier: '
        write'
          Parameter
            Identifier: 'data'
            UnionType
              UndefinedKeyword
              LiteralType
                NullKeyword
              StringKeyword
              TypeReference
                Identifier: ' Buffer'
          Parameter
            Identifier: ' key'
            TypeReference
              Identifier: ' Key'
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Returns the real position of the cursor in relation to the input
         * prompt + string. Long input (wrapping) strings, as well as multiple
         * line prompts are included in the calculations.
         * @since v13.5.0, v12.16.0
         */
        getCursorPos'
          TypeReference
            Identifier: ' CursorPos'
        MethodDeclaration
          Identifier: '
        /**
         * events.EventEmitter
         * 1. close
         * 2. line
         * 3. pause
         * 4. resume
         * 5. SIGCONT
         * 6. SIGINT
         * 7. SIGTSTP
         * 8. history
         */
        addListener'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'input'
                StringKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'history'
                ArrayType
                  StringKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            UnionType
              StringKeyword
              SymbolKeyword
          Parameter
            DotDotDotToken
            Identifier: 'args'
            ArrayType
              AnyKeyword
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' input'
            StringKeyword
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' history'
            ArrayType
              StringKeyword
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'input'
                StringKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'history'
                ArrayType
                  StringKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'input'
                StringKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'history'
                ArrayType
                  StringKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'input'
                StringKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'history'
                ArrayType
                  StringKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'input'
                StringKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'history'
                ArrayType
                  StringKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          ComputedPropertyName
            PropertyAccessExpression
              Identifier: 'Symbol'
              Identifier: 'asyncIterator'
          TypeReference
            Identifier: ' AsyncIterableIterator'
            StringKeyword
      TypeAliasDeclaration
        ExportKeyword
        Identifier: ' ReadLine'
        TypeReference
          Identifier: ' Interface'
      TypeAliasDeclaration
        ExportKeyword
        Identifier: ' Completer'
        FunctionType
          Parameter
            Identifier: 'line'
            StringKeyword
          TypeReference
            Identifier: ' CompleterResult'
      TypeAliasDeclaration
        ExportKeyword
        Identifier: ' AsyncCompleter'
        FunctionType
          Parameter
            Identifier: '
        line'
            StringKeyword
          Parameter
            Identifier: '
        callback'
            FunctionType
              Parameter
                Identifier: 'err'
                QuestionToken
                UnionType
                  LiteralType
                    NullKeyword
                  TypeReference
                    Identifier: ' Error'
              Parameter
                Identifier: ' result'
                QuestionToken
                TypeReference
                  Identifier: ' CompleterResult'
              VoidKeyword
          VoidKeyword
      TypeAliasDeclaration
        ExportKeyword
        Identifier: ' CompleterResult'
        TupleType
          ArrayType
            StringKeyword
          StringKeyword
      InterfaceDeclaration
        ExportKeyword
        Identifier: ' ReadLineOptions'
        PropertySignature
          Identifier: '
        input'
          TypeReference
            QualifiedName
              Identifier: ' NodeJS'
              Identifier: 'ReadableStream'
        PropertySignature
          Identifier: '
        output'
          QuestionToken
          UnionType
            TypeReference
              QualifiedName
                Identifier: ' NodeJS'
                Identifier: 'WritableStream'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        completer'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' Completer'
            TypeReference
              Identifier: ' AsyncCompleter'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        terminal'
          QuestionToken
          UnionType
            BooleanKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         *  Initial list of history lines. This option makes sense
         * only if `terminal` is set to `true` by the user or by an internal `output`
         * check, otherwise the history caching mechanism is not initialized at all.
         * @default []
         */
        history'
          QuestionToken
          UnionType
            ArrayType
              StringKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        historySize'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        prompt'
          QuestionToken
          UnionType
            StringKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        crlfDelay'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * If `true`, when a new input line added
         * to the history list duplicates an older one, this removes the older line
         * from the list.
         * @default false
         */
        removeHistoryDuplicates'
          QuestionToken
          UnionType
            BooleanKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        escapeCodeTimeout'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        tabSize'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
      FunctionDeclaration
        ExportKeyword
        Identifier: ' createInterface'
        Parameter
          Identifier: '
        input'
          TypeReference
            QualifiedName
              Identifier: ' NodeJS'
              Identifier: 'ReadableStream'
        Parameter
          Identifier: '
        output'
          QuestionToken
          TypeReference
            QualifiedName
              Identifier: ' NodeJS'
              Identifier: 'WritableStream'
        Parameter
          Identifier: '
        completer'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' Completer'
            TypeReference
              Identifier: ' AsyncCompleter'
        Parameter
          Identifier: '
        terminal'
          QuestionToken
          BooleanKeyword
        TypeReference
          Identifier: ' Interface'
      FunctionDeclaration
        ExportKeyword
        Identifier: ' createInterface'
        Parameter
          Identifier: 'options'
          TypeReference
            Identifier: ' ReadLineOptions'
        TypeReference
          Identifier: ' Interface'
      FunctionDeclaration
        ExportKeyword
        Identifier: ' emitKeypressEvents'
        Parameter
          Identifier: 'stream'
          TypeReference
            QualifiedName
              Identifier: ' NodeJS'
              Identifier: 'ReadableStream'
        Parameter
          Identifier: ' readlineInterface'
          QuestionToken
          TypeReference
            Identifier: ' Interface'
        VoidKeyword
      TypeAliasDeclaration
        ExportKeyword
        Identifier: ' Direction'
        UnionType
          LiteralType
            PrefixUnaryExpression
              NumericLiteral
          LiteralType
            NumericLiteral
          LiteralType
            NumericLiteral
      InterfaceDeclaration
        ExportKeyword
        Identifier: ' CursorPos'
        PropertySignature
          Identifier: '
        rows'
          NumberKeyword
        PropertySignature
          Identifier: '
        cols'
          NumberKeyword
      FunctionDeclaration
        ExportKeyword
        Identifier: ' clearLine'
        Parameter
          Identifier: 'stream'
          TypeReference
            QualifiedName
              Identifier: ' NodeJS'
              Identifier: 'WritableStream'
        Parameter
          Identifier: ' dir'
          TypeReference
            Identifier: ' Direction'
        Parameter
          Identifier: ' callback'
          QuestionToken
          FunctionType
            VoidKeyword
        BooleanKeyword
      FunctionDeclaration
        ExportKeyword
        Identifier: ' clearScreenDown'
        Parameter
          Identifier: 'stream'
          TypeReference
            QualifiedName
              Identifier: ' NodeJS'
              Identifier: 'WritableStream'
        Parameter
          Identifier: ' callback'
          QuestionToken
          FunctionType
            VoidKeyword
        BooleanKeyword
      FunctionDeclaration
        ExportKeyword
        Identifier: ' cursorTo'
        Parameter
          Identifier: 'stream'
          TypeReference
            QualifiedName
              Identifier: ' NodeJS'
              Identifier: 'WritableStream'
        Parameter
          Identifier: ' x'
          NumberKeyword
        Parameter
          Identifier: ' y'
          QuestionToken
          NumberKeyword
        Parameter
          Identifier: ' callback'
          QuestionToken
          FunctionType
            VoidKeyword
        BooleanKeyword
      FunctionDeclaration
        ExportKeyword
        Identifier: ' moveCursor'
        Parameter
          Identifier: 'stream'
          TypeReference
            QualifiedName
              Identifier: ' NodeJS'
              Identifier: 'WritableStream'
        Parameter
          Identifier: ' dx'
          NumberKeyword
        Parameter
          Identifier: ' dy'
          NumberKeyword
        Parameter
          Identifier: ' callback'
          QuestionToken
          FunctionType
            VoidKeyword
        BooleanKeyword
  ModuleDeclaration
    DeclareKeyword
    StringLiteral
    ModuleBlock
      ExportDeclaration
        StringLiteral
