SourceFile
  ExportDeclaration
    NamedExports
  TypeAliasDeclaration
    Identifier: ' __Event'
    ConditionalType
      TypeQuery
        Identifier: ' globalThis'
      TypeLiteral
        PropertySignature
          Identifier: ' onmessage'
          AnyKeyword
        PropertySignature
          Identifier: ' Event'
          AnyKeyword
      TypeLiteral
      TypeLiteral
        PropertySignature
          ReadonlyKeyword
          Identifier: ' bubbles'
          BooleanKeyword
        PropertySignature
          Identifier: '
        /** Alias for event.stopPropagation(). This is not used in Node.js and is provided purely for completeness. */
        cancelBubble'
          FunctionType
            VoidKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' cancelable'
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' composed'
          BooleanKeyword
        MethodSignature
          Identifier: '
        /** Returns an array containing the current EventTarget as the only entry or empty if the event is not being dispatched. This is not used in Node.js and is provided purely for completeness. */
        composedPath'
          TupleType
            OptionalType
              TypeReference
                Identifier: 'EventTarget'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' currentTarget'
          UnionType
            TypeReference
              Identifier: ' EventTarget'
            LiteralType
              NullKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' defaultPrevented'
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' eventPhase'
          UnionType
            LiteralType
              NumericLiteral
            LiteralType
              NumericLiteral
        PropertySignature
          ReadonlyKeyword
          Identifier: ' isTrusted'
          BooleanKeyword
        MethodSignature
          Identifier: '
        /** Sets the `defaultPrevented` property to `true` if `cancelable` is `true`. */
        preventDefault'
          VoidKeyword
        PropertySignature
          Identifier: '
        /** This is not used in Node.js and is provided purely for completeness. */
        returnValue'
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' srcElement'
          UnionType
            TypeReference
              Identifier: ' EventTarget'
            LiteralType
              NullKeyword
        MethodSignature
          Identifier: '
        /** Stops the invocation of event listeners after the current one completes. */
        stopImmediatePropagation'
          VoidKeyword
        MethodSignature
          Identifier: '
        /** This is not used in Node.js and is provided purely for completeness. */
        stopPropagation'
          VoidKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' target'
          UnionType
            TypeReference
              Identifier: ' EventTarget'
            LiteralType
              NullKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' timeStamp'
          NumberKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' type'
          StringKeyword
  TypeAliasDeclaration
    Identifier: ' __EventTarget'
    ConditionalType
      TypeQuery
        Identifier: ' globalThis'
      TypeLiteral
        PropertySignature
          Identifier: ' onmessage'
          AnyKeyword
        PropertySignature
          Identifier: ' EventTarget'
          AnyKeyword
      TypeLiteral
      TypeLiteral
        MethodSignature
          Identifier: '
        /**
         * Adds a new handler for the `type` event. Any given `listener` is added only once per `type` and per `capture` option value.
         *
         * If the `once` option is true, the `listener` is removed after the next time a `type` event is dispatched.
         *
         * The `capture` option is not used by Node.js in any functional way other than tracking registered event listeners per the `EventTarget` specification.
         * Specifically, the `capture` option is used as part of the key when registering a `listener`.
         * Any individual `listener` may be added once with `capture = false`, and once with `capture = true`.
         */
        addEventListener'
          Parameter
            Identifier: '
            type'
            StringKeyword
          Parameter
            Identifier: '
            listener'
            UnionType
              TypeReference
                Identifier: ' EventListener'
              TypeReference
                Identifier: ' EventListenerObject'
          Parameter
            Identifier: '
            options'
            QuestionToken
            UnionType
              TypeReference
                Identifier: ' AddEventListenerOptions'
              BooleanKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        /** Dispatches a synthetic event event to target and returns true if either event's cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise. */
        dispatchEvent'
          Parameter
            Identifier: 'event'
            TypeReference
              Identifier: ' Event'
          BooleanKeyword
        MethodSignature
          Identifier: '
        /** Removes the event listener in target's event listener list with the same type, callback, and options. */
        removeEventListener'
          Parameter
            Identifier: '
            type'
            StringKeyword
          Parameter
            Identifier: '
            listener'
            UnionType
              TypeReference
                Identifier: ' EventListener'
              TypeReference
                Identifier: ' EventListenerObject'
          Parameter
            Identifier: '
            options'
            QuestionToken
            UnionType
              TypeReference
                Identifier: ' EventListenerOptions'
              BooleanKeyword
          VoidKeyword
  InterfaceDeclaration
    Identifier: ' EventInit'
    PropertySignature
      Identifier: '
    bubbles'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    cancelable'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    composed'
      QuestionToken
      BooleanKeyword
  InterfaceDeclaration
    Identifier: ' EventListenerOptions'
    PropertySignature
      Identifier: '
    /** Not directly used by Node.js. Added for API completeness. Default: `false`. */
    capture'
      QuestionToken
      BooleanKeyword
  InterfaceDeclaration
    Identifier: ' AddEventListenerOptions'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' EventListenerOptions'
    PropertySignature
      Identifier: '
    /** When `true`, the listener is automatically removed when it is first invoked. Default: `false`. */
    once'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /** When `true`, serves as a hint that the listener will not call the `Event` object's `preventDefault()` method. Default: false. */
    passive'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /** The listener will be removed when the given AbortSignal object's `abort()` method is called. */
    signal'
      QuestionToken
      TypeReference
        Identifier: ' AbortSignal'
  InterfaceDeclaration
    Identifier: ' EventListener'
    CallSignature
      Parameter
        Identifier: 'evt'
        TypeReference
          Identifier: ' Event'
      VoidKeyword
  InterfaceDeclaration
    Identifier: ' EventListenerObject'
    MethodSignature
      Identifier: '
    handleEvent'
      Parameter
        Identifier: 'object'
        TypeReference
          Identifier: ' Event'
      VoidKeyword
  ImportDeclaration
    ImportClause
      NamedImports
    StringLiteral
  ModuleDeclaration
    DeclareKeyword
    Identifier: ' global'
    ModuleBlock
      InterfaceDeclaration
        Identifier: ' Event'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' __Event'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' Event'
            ConditionalType
              TypeQuery
                Identifier: ' globalThis'
              TypeLiteral
                PropertySignature
                  Identifier: ' onmessage'
                  AnyKeyword
                PropertySignature
                  Identifier: ' Event'
                  InferType
                    TypeParameter
                      Identifier: ' T'
              TypeReference
                Identifier: ' T'
              TypeLiteral
                PropertySignature
                  Identifier: '
            prototype'
                  TypeReference
                    Identifier: ' __Event'
                ConstructSignature
                  Parameter
                    Identifier: 'type'
                    StringKeyword
                  Parameter
                    Identifier: ' eventInitDict'
                    QuestionToken
                    TypeReference
                      Identifier: ' EventInit'
                  TypeReference
                    Identifier: ' __Event'
      InterfaceDeclaration
        Identifier: ' EventTarget'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' __EventTarget'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' EventTarget'
            ConditionalType
              TypeQuery
                Identifier: ' globalThis'
              TypeLiteral
                PropertySignature
                  Identifier: ' onmessage'
                  AnyKeyword
                PropertySignature
                  Identifier: ' EventTarget'
                  InferType
                    TypeParameter
                      Identifier: ' T'
              TypeReference
                Identifier: ' T'
              TypeLiteral
                PropertySignature
                  Identifier: '
            prototype'
                  TypeReference
                    Identifier: ' __EventTarget'
                ConstructSignature
                  TypeReference
                    Identifier: ' __EventTarget'
