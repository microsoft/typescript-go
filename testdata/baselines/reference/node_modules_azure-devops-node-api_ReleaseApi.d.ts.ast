SourceFile
  ImportEqualsDeclaration
    Identifier: ' basem'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' VsoBaseInterfaces'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' FormInputInterfaces'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' ReleaseInterfaces'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' VSSInterfaces'
    ExternalModuleReference
      StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' IReleaseApi'
    HeritageClause
      ExpressionWithTypeArguments
        PropertyAccessExpression
          Identifier: ' basem'
          Identifier: 'ClientApiBase'
    MethodSignature
      Identifier: '
    getAgentArtifactDefinitions'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'AgentArtifactDefinition'
    MethodSignature
      Identifier: '
    getApprovals'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' assignedToFilter'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' statusFilter'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ApprovalStatus'
      Parameter
        Identifier: ' releaseIdsFilter'
        QuestionToken
        ArrayType
          NumberKeyword
      Parameter
        Identifier: ' typeFilter'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ApprovalType'
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' queryOrder'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseQueryOrder'
      Parameter
        Identifier: ' includeMyGroupApprovals'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'ReleaseApproval'
    MethodSignature
      Identifier: '
    getApprovalHistory'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' approvalStepId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ReleaseApproval'
    MethodSignature
      Identifier: '
    getApproval'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' approvalId'
        NumberKeyword
      Parameter
        Identifier: ' includeHistory'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ReleaseApproval'
    MethodSignature
      Identifier: '
    updateReleaseApproval'
      Parameter
        Identifier: 'approval'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseApproval'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' approvalId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ReleaseApproval'
    MethodSignature
      Identifier: '
    updateReleaseApprovals'
      Parameter
        Identifier: 'approvals'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' ReleaseInterfaces'
              Identifier: 'ReleaseApproval'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'ReleaseApproval'
    MethodSignature
      Identifier: '
    getTaskAttachmentContent'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' environmentId'
        NumberKeyword
      Parameter
        Identifier: ' attemptId'
        NumberKeyword
      Parameter
        Identifier: ' timelineId'
        StringKeyword
      Parameter
        Identifier: ' recordId'
        StringKeyword
      Parameter
        Identifier: ' type'
        StringKeyword
      Parameter
        Identifier: ' name'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    getReleaseTaskAttachmentContent'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' environmentId'
        NumberKeyword
      Parameter
        Identifier: ' attemptId'
        NumberKeyword
      Parameter
        Identifier: ' planId'
        StringKeyword
      Parameter
        Identifier: ' timelineId'
        StringKeyword
      Parameter
        Identifier: ' recordId'
        StringKeyword
      Parameter
        Identifier: ' type'
        StringKeyword
      Parameter
        Identifier: ' name'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    getTaskAttachments'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' environmentId'
        NumberKeyword
      Parameter
        Identifier: ' attemptId'
        NumberKeyword
      Parameter
        Identifier: ' timelineId'
        StringKeyword
      Parameter
        Identifier: ' type'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'ReleaseTaskAttachment'
    MethodSignature
      Identifier: '
    getReleaseTaskAttachments'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' environmentId'
        NumberKeyword
      Parameter
        Identifier: ' attemptId'
        NumberKeyword
      Parameter
        Identifier: ' planId'
        StringKeyword
      Parameter
        Identifier: ' type'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'ReleaseTaskAttachment'
    MethodSignature
      Identifier: '
    getAutoTriggerIssues'
      Parameter
        Identifier: 'artifactType'
        StringKeyword
      Parameter
        Identifier: ' sourceId'
        StringKeyword
      Parameter
        Identifier: ' artifactVersionId'
        StringKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'AutoTriggerIssue'
    MethodSignature
      Identifier: '
    getDeploymentBadge'
      Parameter
        Identifier: 'projectId'
        StringKeyword
      Parameter
        Identifier: ' releaseDefinitionId'
        NumberKeyword
      Parameter
        Identifier: ' environmentId'
        NumberKeyword
      Parameter
        Identifier: ' branchName'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        StringKeyword
    MethodSignature
      Identifier: '
    getReleaseChanges'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' baseReleaseId'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' artifactAlias'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'Change'
    MethodSignature
      Identifier: '
    getDefinitionEnvironments'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' taskGroupId'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' propertyFilters'
        QuestionToken
        ArrayType
          StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'DefinitionEnvironmentReference'
    MethodSignature
      Identifier: '
    createReleaseDefinition'
      Parameter
        Identifier: 'releaseDefinition'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseDefinition'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ReleaseDefinition'
    MethodSignature
      Identifier: '
    deleteReleaseDefinition'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' definitionId'
        NumberKeyword
      Parameter
        Identifier: ' comment'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' forceDelete'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getReleaseDefinition'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' definitionId'
        NumberKeyword
      Parameter
        Identifier: ' propertyFilters'
        QuestionToken
        ArrayType
          StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ReleaseDefinition'
    MethodSignature
      Identifier: '
    getReleaseDefinitionRevision'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' definitionId'
        NumberKeyword
      Parameter
        Identifier: ' revision'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    getReleaseDefinitions'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' searchText'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseDefinitionExpands'
      Parameter
        Identifier: ' artifactType'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' artifactSourceId'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' queryOrder'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseDefinitionQueryOrder'
      Parameter
        Identifier: ' path'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' isExactNameMatch'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' tagFilter'
        QuestionToken
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' propertyFilters'
        QuestionToken
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' definitionIdFilter'
        QuestionToken
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' isDeleted'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' searchTextContainsFolderName'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'ReleaseDefinition'
    MethodSignature
      Identifier: '
    undeleteReleaseDefinition'
      Parameter
        Identifier: 'releaseDefinitionUndeleteParameter'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseDefinitionUndeleteParameter'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' definitionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ReleaseDefinition'
    MethodSignature
      Identifier: '
    updateReleaseDefinition'
      Parameter
        Identifier: 'releaseDefinition'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseDefinition'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ReleaseDefinition'
    MethodSignature
      Identifier: '
    getDeployments'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' definitionId'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' definitionEnvironmentId'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' createdBy'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' minModifiedTime'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' maxModifiedTime'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' deploymentStatus'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'DeploymentStatus'
      Parameter
        Identifier: ' operationStatus'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'DeploymentOperationStatus'
      Parameter
        Identifier: ' latestAttemptsOnly'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' queryOrder'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseQueryOrder'
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' createdFor'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' minStartedTime'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' maxStartedTime'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' sourceBranch'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'Deployment'
    MethodSignature
      Identifier: '
    getDeploymentsForMultipleEnvironments'
      Parameter
        Identifier: 'queryParameters'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'DeploymentQueryParameters'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'Deployment'
    MethodSignature
      Identifier: '
    getReleaseEnvironment'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' environmentId'
        NumberKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseEnvironmentExpands'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ReleaseEnvironment'
    MethodSignature
      Identifier: '
    updateReleaseEnvironment'
      Parameter
        Identifier: 'environmentUpdateData'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseEnvironmentUpdateMetadata'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' environmentId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ReleaseEnvironment'
    MethodSignature
      Identifier: '
    createDefinitionEnvironmentTemplate'
      Parameter
        Identifier: 'template'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseDefinitionEnvironmentTemplate'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ReleaseDefinitionEnvironmentTemplate'
    MethodSignature
      Identifier: '
    deleteDefinitionEnvironmentTemplate'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' templateId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getDefinitionEnvironmentTemplate'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' templateId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ReleaseDefinitionEnvironmentTemplate'
    MethodSignature
      Identifier: '
    listDefinitionEnvironmentTemplates'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' isDeleted'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'ReleaseDefinitionEnvironmentTemplate'
    MethodSignature
      Identifier: '
    undeleteReleaseDefinitionEnvironmentTemplate'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' templateId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ReleaseDefinitionEnvironmentTemplate'
    MethodSignature
      Identifier: '
    createFavorites'
      Parameter
        Identifier: 'favoriteItems'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' ReleaseInterfaces'
              Identifier: 'FavoriteItem'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' scope'
        StringKeyword
      Parameter
        Identifier: ' identityId'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'FavoriteItem'
    MethodSignature
      Identifier: '
    deleteFavorites'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' scope'
        StringKeyword
      Parameter
        Identifier: ' identityId'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' favoriteItemIds'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getFavorites'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' scope'
        StringKeyword
      Parameter
        Identifier: ' identityId'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'FavoriteItem'
    MethodSignature
      Identifier: '
    getFlightAssignments'
      Parameter
        Identifier: 'flightName'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          StringKeyword
    MethodSignature
      Identifier: '
    createFolder'
      Parameter
        Identifier: 'folder'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'Folder'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' path'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'Folder'
    MethodSignature
      Identifier: '
    deleteFolder'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' path'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getFolders'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' path'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' queryOrder'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'FolderPathQueryOrder'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'Folder'
    MethodSignature
      Identifier: '
    updateFolder'
      Parameter
        Identifier: 'folder'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'Folder'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' path'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'Folder'
    MethodSignature
      Identifier: '
    updateGates'
      Parameter
        Identifier: 'gateUpdateMetadata'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'GateUpdateMetadata'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' gateStepId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ReleaseGates'
    MethodSignature
      Identifier: '
    getReleaseHistory'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'ReleaseRevision'
    MethodSignature
      Identifier: '
    getInputValues'
      Parameter
        Identifier: 'query'
        TypeReference
          QualifiedName
            Identifier: ' FormInputInterfaces'
            Identifier: 'InputValuesQuery'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'FormInputInterfaces'
            Identifier: 'InputValuesQuery'
    MethodSignature
      Identifier: '
    getIssues'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' buildId'
        NumberKeyword
      Parameter
        Identifier: ' sourceId'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'AutoTriggerIssue'
    MethodSignature
      Identifier: '
    getGateLog'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' environmentId'
        NumberKeyword
      Parameter
        Identifier: ' gateId'
        NumberKeyword
      Parameter
        Identifier: ' taskId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    getLogs'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    getLog'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' environmentId'
        NumberKeyword
      Parameter
        Identifier: ' taskId'
        NumberKeyword
      Parameter
        Identifier: ' attemptId'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    getTaskLog2'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' environmentId'
        NumberKeyword
      Parameter
        Identifier: ' attemptId'
        NumberKeyword
      Parameter
        Identifier: ' timelineId'
        StringKeyword
      Parameter
        Identifier: ' taskId'
        NumberKeyword
      Parameter
        Identifier: ' startLine'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' endLine'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    getTaskLog'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' environmentId'
        NumberKeyword
      Parameter
        Identifier: ' releaseDeployPhaseId'
        NumberKeyword
      Parameter
        Identifier: ' taskId'
        NumberKeyword
      Parameter
        Identifier: ' startLine'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' endLine'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    getManualIntervention'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' manualInterventionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ManualIntervention'
    MethodSignature
      Identifier: '
    getManualInterventions'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'ManualIntervention'
    MethodSignature
      Identifier: '
    updateManualIntervention'
      Parameter
        Identifier: 'manualInterventionUpdateMetadata'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ManualInterventionUpdateMetadata'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' manualInterventionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ManualIntervention'
    MethodSignature
      Identifier: '
    getMetrics'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' minMetricsTime'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'Metric'
    MethodSignature
      Identifier: '
    getOrgPipelineReleaseSettings'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'OrgPipelineReleaseSettings'
    MethodSignature
      Identifier: '
    updateOrgPipelineReleaseSettings'
      Parameter
        Identifier: 'newSettings'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'OrgPipelineReleaseSettingsUpdateParameters'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'OrgPipelineReleaseSettings'
    MethodSignature
      Identifier: '
    getPipelineReleaseSettings'
      Parameter
        Identifier: 'project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ProjectPipelineReleaseSettings'
    MethodSignature
      Identifier: '
    updatePipelineReleaseSettings'
      Parameter
        Identifier: 'newSettings'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ProjectPipelineReleaseSettingsUpdateParameters'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ProjectPipelineReleaseSettings'
    MethodSignature
      Identifier: '
    getReleaseProjects'
      Parameter
        Identifier: 'artifactType'
        StringKeyword
      Parameter
        Identifier: ' artifactSourceId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'ProjectReference'
    MethodSignature
      Identifier: '
    getReleases'
      Parameter
        Identifier: 'project'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' definitionId'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' definitionEnvironmentId'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' searchText'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' createdBy'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' statusFilter'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseStatus'
      Parameter
        Identifier: ' environmentStatusFilter'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' minCreatedTime'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' maxCreatedTime'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' queryOrder'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseQueryOrder'
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseExpands'
      Parameter
        Identifier: ' artifactTypeId'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' sourceId'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' artifactVersionId'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' sourceBranchFilter'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' isDeleted'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' tagFilter'
        QuestionToken
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' propertyFilters'
        QuestionToken
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' releaseIdFilter'
        QuestionToken
        ArrayType
          NumberKeyword
      Parameter
        Identifier: ' path'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'Release'
    MethodSignature
      Identifier: '
    createRelease'
      Parameter
        Identifier: 'releaseStartMetadata'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseStartMetadata'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'Release'
    MethodSignature
      Identifier: '
    deleteRelease'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' comment'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getRelease'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' approvalFilters'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ApprovalFilters'
      Parameter
        Identifier: ' propertyFilters'
        QuestionToken
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'SingleReleaseExpands'
      Parameter
        Identifier: ' topGateRecords'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'Release'
    MethodSignature
      Identifier: '
    getReleaseDefinitionSummary'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' definitionId'
        NumberKeyword
      Parameter
        Identifier: ' releaseCount'
        NumberKeyword
      Parameter
        Identifier: ' includeArtifact'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' definitionEnvironmentIdsFilter'
        QuestionToken
        ArrayType
          NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ReleaseDefinitionSummary'
    MethodSignature
      Identifier: '
    getReleaseRevision'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' definitionSnapshotRevision'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    undeleteRelease'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' comment'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    updateRelease'
      Parameter
        Identifier: 'release'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'Release'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'Release'
    MethodSignature
      Identifier: '
    updateReleaseResource'
      Parameter
        Identifier: 'releaseUpdateMetadata'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseUpdateMetadata'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'Release'
    MethodSignature
      Identifier: '
    getReleaseSettings'
      Parameter
        Identifier: 'project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ReleaseSettings'
    MethodSignature
      Identifier: '
    updateReleaseSettings'
      Parameter
        Identifier: 'releaseSettings'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseSettings'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ReleaseSettings'
    MethodSignature
      Identifier: '
    getDefinitionRevision'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' definitionId'
        NumberKeyword
      Parameter
        Identifier: ' revision'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    getReleaseDefinitionHistory'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' definitionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'ReleaseDefinitionRevision'
    MethodSignature
      Identifier: '
    getSummaryMailSections'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'SummaryMailSection'
    MethodSignature
      Identifier: '
    sendSummaryMail'
      Parameter
        Identifier: 'mailMessage'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'MailMessage'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getSourceBranches'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' definitionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          StringKeyword
    MethodSignature
      Identifier: '
    addDefinitionTag'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseDefinitionId'
        NumberKeyword
      Parameter
        Identifier: ' tag'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          StringKeyword
    MethodSignature
      Identifier: '
    addDefinitionTags'
      Parameter
        Identifier: 'tags'
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' releaseDefinitionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          StringKeyword
    MethodSignature
      Identifier: '
    deleteDefinitionTag'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseDefinitionId'
        NumberKeyword
      Parameter
        Identifier: ' tag'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          StringKeyword
    MethodSignature
      Identifier: '
    getDefinitionTags'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseDefinitionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          StringKeyword
    MethodSignature
      Identifier: '
    addReleaseTag'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' tag'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          StringKeyword
    MethodSignature
      Identifier: '
    addReleaseTags'
      Parameter
        Identifier: 'tags'
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          StringKeyword
    MethodSignature
      Identifier: '
    deleteReleaseTag'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' tag'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          StringKeyword
    MethodSignature
      Identifier: '
    getReleaseTags'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          StringKeyword
    MethodSignature
      Identifier: '
    getTags'
      Parameter
        Identifier: 'project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          StringKeyword
    MethodSignature
      Identifier: '
    getTasksForTaskGroup'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' environmentId'
        NumberKeyword
      Parameter
        Identifier: ' releaseDeployPhaseId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'ReleaseTask'
    MethodSignature
      Identifier: '
    getTasks2'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' environmentId'
        NumberKeyword
      Parameter
        Identifier: ' attemptId'
        NumberKeyword
      Parameter
        Identifier: ' timelineId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'ReleaseTask'
    MethodSignature
      Identifier: '
    getTasks'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' environmentId'
        NumberKeyword
      Parameter
        Identifier: ' attemptId'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'ReleaseTask'
    MethodSignature
      Identifier: '
    getArtifactTypeDefinitions'
      Parameter
        Identifier: 'project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'ArtifactTypeDefinition'
    MethodSignature
      Identifier: '
    getArtifactVersions'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseDefinitionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ArtifactVersionQueryResult'
    MethodSignature
      Identifier: '
    getArtifactVersionsForSources'
      Parameter
        Identifier: 'artifacts'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' ReleaseInterfaces'
              Identifier: 'Artifact'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ArtifactVersionQueryResult'
    MethodSignature
      Identifier: '
    getReleaseWorkItemsRefs'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' baseReleaseId'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' artifactAlias'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'ReleaseWorkItemRef'
  ClassDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' ReleaseApi'
    HeritageClause
      ExpressionWithTypeArguments
        PropertyAccessExpression
          Identifier: ' basem'
          Identifier: 'ClientApiBase'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' IReleaseApi'
    Constructor
      Parameter
        Identifier: 'baseUrl'
        StringKeyword
      Parameter
        Identifier: ' handlers'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' VsoBaseInterfaces'
              Identifier: 'IRequestHandler'
      Parameter
        Identifier: ' options'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' VsoBaseInterfaces'
            Identifier: 'IRequestOptions'
    PropertyDeclaration
      StaticKeyword
      ReadonlyKeyword
      Identifier: ' RESOURCE_AREA_ID'
      StringLiteral
    MethodDeclaration
      Identifier: '
    /**
     * Returns the artifact details that automation agent requires
     *
     * @param {string} project - Project ID or project name
     * @param {number} releaseId
     */
    getAgentArtifactDefinitions'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'AgentArtifactDefinition'
    MethodDeclaration
      Identifier: '
    /**
     * Get a list of approvals
     *
     * @param {string} project - Project ID or project name
     * @param {string} assignedToFilter - Approvals assigned to this user.
     * @param {ReleaseInterfaces.ApprovalStatus} statusFilter - Approvals with this status. Default is 'pending'.
     * @param {number[]} releaseIdsFilter - Approvals for release id(s) mentioned in the filter. Multiple releases can be mentioned by separating them with ',' e.g. releaseIdsFilter=1,2,3,4.
     * @param {ReleaseInterfaces.ApprovalType} typeFilter - Approval with this type.
     * @param {number} top - Number of approvals to get. Default is 50.
     * @param {number} continuationToken - Gets the approvals after the continuation token provided.
     * @param {ReleaseInterfaces.ReleaseQueryOrder} queryOrder - Gets the results in the defined order of created approvals. Default is 'descending'.
     * @param {boolean} includeMyGroupApprovals - 'true' to include my group approvals. Default is 'false'.
     */
    getApprovals'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' assignedToFilter'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' statusFilter'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ApprovalStatus'
      Parameter
        Identifier: ' releaseIdsFilter'
        QuestionToken
        ArrayType
          NumberKeyword
      Parameter
        Identifier: ' typeFilter'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ApprovalType'
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' queryOrder'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseQueryOrder'
      Parameter
        Identifier: ' includeMyGroupApprovals'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'ReleaseApproval'
    MethodDeclaration
      Identifier: '
    /**
     * Get approval history.
     *
     * @param {string} project - Project ID or project name
     * @param {number} approvalStepId - Id of the approval.
     */
    getApprovalHistory'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' approvalStepId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ReleaseApproval'
    MethodDeclaration
      Identifier: '
    /**
     * Get an approval.
     *
     * @param {string} project - Project ID or project name
     * @param {number} approvalId - Id of the approval.
     * @param {boolean} includeHistory - 'true' to include history of the approval. Default is 'false'.
     */
    getApproval'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' approvalId'
        NumberKeyword
      Parameter
        Identifier: ' includeHistory'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ReleaseApproval'
    MethodDeclaration
      Identifier: '
    /**
     * Update status of an approval
     *
     * @param {ReleaseInterfaces.ReleaseApproval} approval - ReleaseApproval object having status, approver and comments.
     * @param {string} project - Project ID or project name
     * @param {number} approvalId - Id of the approval.
     */
    updateReleaseApproval'
      Parameter
        Identifier: 'approval'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseApproval'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' approvalId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ReleaseApproval'
    MethodDeclaration
      Identifier: '
    /**
     * @param {ReleaseInterfaces.ReleaseApproval[]} approvals
     * @param {string} project - Project ID or project name
     */
    updateReleaseApprovals'
      Parameter
        Identifier: 'approvals'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' ReleaseInterfaces'
              Identifier: 'ReleaseApproval'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'ReleaseApproval'
    MethodDeclaration
      Identifier: '
    /**
     * Get a task attachment.
     *
     * @param {string} project - Project ID or project name
     * @param {number} releaseId - Id of the release.
     * @param {number} environmentId - Id of the release environment.
     * @param {number} attemptId - Attempt number of deployment.
     * @param {string} timelineId - Timeline Id of the task.
     * @param {string} recordId - Record Id of attachment.
     * @param {string} type - Type of the attachment.
     * @param {string} name - Name of the attachment.
     */
    getTaskAttachmentContent'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' environmentId'
        NumberKeyword
      Parameter
        Identifier: ' attemptId'
        NumberKeyword
      Parameter
        Identifier: ' timelineId'
        StringKeyword
      Parameter
        Identifier: ' recordId'
        StringKeyword
      Parameter
        Identifier: ' type'
        StringKeyword
      Parameter
        Identifier: ' name'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * Get a release task attachment.
     *
     * @param {string} project - Project ID or project name
     * @param {number} releaseId - Id of the release.
     * @param {number} environmentId - Id of the release environment.
     * @param {number} attemptId - Attempt number of deployment.
     * @param {string} planId - Plan Id of the deploy phase.
     * @param {string} timelineId - Timeline Id of the task.
     * @param {string} recordId - Record Id of attachment.
     * @param {string} type - Type of the attachment.
     * @param {string} name - Name of the attachment.
     */
    getReleaseTaskAttachmentContent'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' environmentId'
        NumberKeyword
      Parameter
        Identifier: ' attemptId'
        NumberKeyword
      Parameter
        Identifier: ' planId'
        StringKeyword
      Parameter
        Identifier: ' timelineId'
        StringKeyword
      Parameter
        Identifier: ' recordId'
        StringKeyword
      Parameter
        Identifier: ' type'
        StringKeyword
      Parameter
        Identifier: ' name'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * Get the task attachments.
     *
     * @param {string} project - Project ID or project name
     * @param {number} releaseId - Id of the release.
     * @param {number} environmentId - Id of the release environment.
     * @param {number} attemptId - Attempt number of deployment.
     * @param {string} timelineId - Timeline Id of the task.
     * @param {string} type - Type of the attachment.
     */
    getTaskAttachments'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' environmentId'
        NumberKeyword
      Parameter
        Identifier: ' attemptId'
        NumberKeyword
      Parameter
        Identifier: ' timelineId'
        StringKeyword
      Parameter
        Identifier: ' type'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'ReleaseTaskAttachment'
    MethodDeclaration
      Identifier: '
    /**
     * Get the release task attachments.
     *
     * @param {string} project - Project ID or project name
     * @param {number} releaseId - Id of the release.
     * @param {number} environmentId - Id of the release environment.
     * @param {number} attemptId - Attempt number of deployment.
     * @param {string} planId - Plan Id of the deploy phase.
     * @param {string} type - Type of the attachment.
     */
    getReleaseTaskAttachments'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' environmentId'
        NumberKeyword
      Parameter
        Identifier: ' attemptId'
        NumberKeyword
      Parameter
        Identifier: ' planId'
        StringKeyword
      Parameter
        Identifier: ' type'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'ReleaseTaskAttachment'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} artifactType
     * @param {string} sourceId
     * @param {string} artifactVersionId
     * @param {string} project - Project ID or project name
     */
    getAutoTriggerIssues'
      Parameter
        Identifier: 'artifactType'
        StringKeyword
      Parameter
        Identifier: ' sourceId'
        StringKeyword
      Parameter
        Identifier: ' artifactVersionId'
        StringKeyword
      Parameter
        Identifier: ' project'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'AutoTriggerIssue'
    MethodDeclaration
      Identifier: '
    /**
     * Gets a badge that indicates the status of the most recent deployment for an environment.
     *
     * @param {string} projectId - The ID of the Project.
     * @param {number} releaseDefinitionId - The ID of the Release Definition.
     * @param {number} environmentId - The ID of the Environment.
     * @param {string} branchName - The name of the branch.
     */
    getDeploymentBadge'
      Parameter
        Identifier: 'projectId'
        StringKeyword
      Parameter
        Identifier: ' releaseDefinitionId'
        NumberKeyword
      Parameter
        Identifier: ' environmentId'
        NumberKeyword
      Parameter
        Identifier: ' branchName'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        StringKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} releaseId
     * @param {number} baseReleaseId
     * @param {number} top
     * @param {string} artifactAlias
     */
    getReleaseChanges'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' baseReleaseId'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' artifactAlias'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'Change'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {string} taskGroupId
     * @param {string[]} propertyFilters
     */
    getDefinitionEnvironments'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' taskGroupId'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' propertyFilters'
        QuestionToken
        ArrayType
          StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'DefinitionEnvironmentReference'
    MethodDeclaration
      Identifier: '
    /**
     * Create a release definition
     *
     * @param {ReleaseInterfaces.ReleaseDefinition} releaseDefinition - release definition object to create.
     * @param {string} project - Project ID or project name
     */
    createReleaseDefinition'
      Parameter
        Identifier: 'releaseDefinition'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseDefinition'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ReleaseDefinition'
    MethodDeclaration
      Identifier: '
    /**
     * Delete a release definition.
     *
     * @param {string} project - Project ID or project name
     * @param {number} definitionId - Id of the release definition.
     * @param {string} comment - Comment for deleting a release definition.
     * @param {boolean} forceDelete - 'true' to automatically cancel any in-progress release deployments and proceed with release definition deletion . Default is 'false'.
     */
    deleteReleaseDefinition'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' definitionId'
        NumberKeyword
      Parameter
        Identifier: ' comment'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' forceDelete'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Get a release definition.
     *
     * @param {string} project - Project ID or project name
     * @param {number} definitionId - Id of the release definition.
     * @param {string[]} propertyFilters - A comma-delimited list of extended properties to be retrieved. If set, the returned Release Definition will contain values for the specified property Ids (if they exist). If not set, properties will not be included.
     */
    getReleaseDefinition'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' definitionId'
        NumberKeyword
      Parameter
        Identifier: ' propertyFilters'
        QuestionToken
        ArrayType
          StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ReleaseDefinition'
    MethodDeclaration
      Identifier: '
    /**
     * Get release definition of a given revision.
     *
     * @param {string} project - Project ID or project name
     * @param {number} definitionId - Id of the release definition.
     * @param {number} revision - Revision number of the release definition.
     */
    getReleaseDefinitionRevision'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' definitionId'
        NumberKeyword
      Parameter
        Identifier: ' revision'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * Get a list of release definitions.
     *
     * @param {string} project - Project ID or project name
     * @param {string} searchText - Get release definitions with names containing searchText.
     * @param {ReleaseInterfaces.ReleaseDefinitionExpands} expand - The properties that should be expanded in the list of Release definitions.
     * @param {string} artifactType - Release definitions with given artifactType will be returned. Values can be Build, Jenkins, GitHub, Nuget, Team Build (external), ExternalTFSBuild, Git, TFVC, ExternalTfsXamlBuild.
     * @param {string} artifactSourceId - Release definitions with given artifactSourceId will be returned. e.g. For build it would be {projectGuid}:{BuildDefinitionId}, for Jenkins it would be {JenkinsConnectionId}:{JenkinsDefinitionId}, for TfsOnPrem it would be {TfsOnPremConnectionId}:{ProjectName}:{TfsOnPremDefinitionId}. For third-party artifacts e.g. TeamCity, BitBucket you may refer 'uniqueSourceIdentifier' inside vss-extension.json at https://github.com/Microsoft/vsts-rm-extensions/blob/master/Extensions.
     * @param {number} top - Number of release definitions to get.
     * @param {string} continuationToken - Gets the release definitions after the continuation token provided.
     * @param {ReleaseInterfaces.ReleaseDefinitionQueryOrder} queryOrder - Gets the results in the defined order. Default is 'IdAscending'.
     * @param {string} path - Gets the release definitions under the specified path.
     * @param {boolean} isExactNameMatch - 'true'to gets the release definitions with exact match as specified in searchText. Default is 'false'.
     * @param {string[]} tagFilter - A comma-delimited list of tags. Only release definitions with these tags will be returned.
     * @param {string[]} propertyFilters - A comma-delimited list of extended properties to be retrieved. If set, the returned Release Definitions will contain values for the specified property Ids (if they exist). If not set, properties will not be included. Note that this will not filter out any Release Definition from results irrespective of whether it has property set or not.
     * @param {string[]} definitionIdFilter - A comma-delimited list of release definitions to retrieve.
     * @param {boolean} isDeleted - 'true' to get release definitions that has been deleted. Default is 'false'
     * @param {boolean} searchTextContainsFolderName - 'true' to get the release definitions under the folder with name as specified in searchText. Default is 'false'.
     */
    getReleaseDefinitions'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' searchText'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseDefinitionExpands'
      Parameter
        Identifier: ' artifactType'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' artifactSourceId'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' queryOrder'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseDefinitionQueryOrder'
      Parameter
        Identifier: ' path'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' isExactNameMatch'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' tagFilter'
        QuestionToken
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' propertyFilters'
        QuestionToken
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' definitionIdFilter'
        QuestionToken
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' isDeleted'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' searchTextContainsFolderName'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'ReleaseDefinition'
    MethodDeclaration
      Identifier: '
    /**
     * Undelete a release definition.
     *
     * @param {ReleaseInterfaces.ReleaseDefinitionUndeleteParameter} releaseDefinitionUndeleteParameter - Object for undelete release definition.
     * @param {string} project - Project ID or project name
     * @param {number} definitionId - Id of the release definition to be undeleted
     */
    undeleteReleaseDefinition'
      Parameter
        Identifier: 'releaseDefinitionUndeleteParameter'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseDefinitionUndeleteParameter'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' definitionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ReleaseDefinition'
    MethodDeclaration
      Identifier: '
    /**
     * Update a release definition.
     *
     * @param {ReleaseInterfaces.ReleaseDefinition} releaseDefinition - Release definition object to update.
     * @param {string} project - Project ID or project name
     */
    updateReleaseDefinition'
      Parameter
        Identifier: 'releaseDefinition'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseDefinition'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ReleaseDefinition'
    MethodDeclaration
      Identifier: '
    /**
     * Get a list of deployments
     *
     * @param {string} project - Project ID or project name
     * @param {number} definitionId - List the deployments for a given definition id.
     * @param {number} definitionEnvironmentId - List the deployments for a given definition environment id.
     * @param {string} createdBy - List the deployments for which deployments are created as identity specified.
     * @param {Date} minModifiedTime - List the deployments with LastModified time >= minModifiedTime.
     * @param {Date} maxModifiedTime - List the deployments with LastModified time <= maxModifiedTime.
     * @param {ReleaseInterfaces.DeploymentStatus} deploymentStatus - List the deployments with given deployment status. Defult is 'All'.
     * @param {ReleaseInterfaces.DeploymentOperationStatus} operationStatus - List the deployments with given operation status. Default is 'All'.
     * @param {boolean} latestAttemptsOnly - 'true' to include deployments with latest attempt only. Default is 'false'.
     * @param {ReleaseInterfaces.ReleaseQueryOrder} queryOrder - List the deployments with given query order. Default is 'Descending'.
     * @param {number} top - List the deployments with given top. Default top is '50' and Max top is '100'.
     * @param {number} continuationToken - List the deployments with deployment id >= continuationToken.
     * @param {string} createdFor - List the deployments for which deployments are requested as identity specified.
     * @param {Date} minStartedTime - List the deployments with StartedOn time >= minStartedTime.
     * @param {Date} maxStartedTime - List the deployments with StartedOn time <= maxStartedTime.
     * @param {string} sourceBranch - List the deployments that are deployed from given branch name.
     */
    getDeployments'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' definitionId'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' definitionEnvironmentId'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' createdBy'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' minModifiedTime'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' maxModifiedTime'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' deploymentStatus'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'DeploymentStatus'
      Parameter
        Identifier: ' operationStatus'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'DeploymentOperationStatus'
      Parameter
        Identifier: ' latestAttemptsOnly'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' queryOrder'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseQueryOrder'
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' createdFor'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' minStartedTime'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' maxStartedTime'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' sourceBranch'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'Deployment'
    MethodDeclaration
      Identifier: '
    /**
     * @param {ReleaseInterfaces.DeploymentQueryParameters} queryParameters
     * @param {string} project - Project ID or project name
     */
    getDeploymentsForMultipleEnvironments'
      Parameter
        Identifier: 'queryParameters'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'DeploymentQueryParameters'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'Deployment'
    MethodDeclaration
      Identifier: '
    /**
     * Get a release environment.
     *
     * @param {string} project - Project ID or project name
     * @param {number} releaseId - Id of the release.
     * @param {number} environmentId - Id of the release environment.
     * @param {ReleaseInterfaces.ReleaseEnvironmentExpands} expand - A property that should be expanded in the environment.
     */
    getReleaseEnvironment'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' environmentId'
        NumberKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseEnvironmentExpands'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ReleaseEnvironment'
    MethodDeclaration
      Identifier: '
    /**
     * Update the status of a release environment
     *
     * @param {ReleaseInterfaces.ReleaseEnvironmentUpdateMetadata} environmentUpdateData - Environment update meta data.
     * @param {string} project - Project ID or project name
     * @param {number} releaseId - Id of the release.
     * @param {number} environmentId - Id of release environment.
     */
    updateReleaseEnvironment'
      Parameter
        Identifier: 'environmentUpdateData'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseEnvironmentUpdateMetadata'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' environmentId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ReleaseEnvironment'
    MethodDeclaration
      Identifier: '
    /**
     * Creates a definition environment template
     *
     * @param {ReleaseInterfaces.ReleaseDefinitionEnvironmentTemplate} template - Definition environment template to create
     * @param {string} project - Project ID or project name
     */
    createDefinitionEnvironmentTemplate'
      Parameter
        Identifier: 'template'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseDefinitionEnvironmentTemplate'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ReleaseDefinitionEnvironmentTemplate'
    MethodDeclaration
      Identifier: '
    /**
     * Delete a definition environment template
     *
     * @param {string} project - Project ID or project name
     * @param {string} templateId - Id of the definition environment template
     */
    deleteDefinitionEnvironmentTemplate'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' templateId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Gets a definition environment template
     *
     * @param {string} project - Project ID or project name
     * @param {string} templateId - Id of the definition environment template
     */
    getDefinitionEnvironmentTemplate'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' templateId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ReleaseDefinitionEnvironmentTemplate'
    MethodDeclaration
      Identifier: '
    /**
     * Gets a list of definition environment templates
     *
     * @param {string} project - Project ID or project name
     * @param {boolean} isDeleted - 'true' to get definition environment templates that have been deleted. Default is 'false'
     */
    listDefinitionEnvironmentTemplates'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' isDeleted'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'ReleaseDefinitionEnvironmentTemplate'
    MethodDeclaration
      Identifier: '
    /**
     * Undelete a release definition environment template.
     *
     * @param {string} project - Project ID or project name
     * @param {string} templateId - Id of the definition environment template to be undeleted
     */
    undeleteReleaseDefinitionEnvironmentTemplate'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' templateId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ReleaseDefinitionEnvironmentTemplate'
    MethodDeclaration
      Identifier: '
    /**
     * @param {ReleaseInterfaces.FavoriteItem[]} favoriteItems
     * @param {string} project - Project ID or project name
     * @param {string} scope
     * @param {string} identityId
     */
    createFavorites'
      Parameter
        Identifier: 'favoriteItems'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' ReleaseInterfaces'
              Identifier: 'FavoriteItem'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' scope'
        StringKeyword
      Parameter
        Identifier: ' identityId'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'FavoriteItem'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {string} scope
     * @param {string} identityId
     * @param {string} favoriteItemIds
     */
    deleteFavorites'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' scope'
        StringKeyword
      Parameter
        Identifier: ' identityId'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' favoriteItemIds'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {string} scope
     * @param {string} identityId
     */
    getFavorites'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' scope'
        StringKeyword
      Parameter
        Identifier: ' identityId'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'FavoriteItem'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} flightName
     */
    getFlightAssignments'
      Parameter
        Identifier: 'flightName'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          StringKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Creates a new folder.
     *
     * @param {ReleaseInterfaces.Folder} folder - folder.
     * @param {string} project - Project ID or project name
     * @param {string} path - Path of the folder.
     */
    createFolder'
      Parameter
        Identifier: 'folder'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'Folder'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' path'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'Folder'
    MethodDeclaration
      Identifier: '
    /**
     * Deletes a definition folder for given folder name and path and all it's existing definitions.
     *
     * @param {string} project - Project ID or project name
     * @param {string} path - Path of the folder to delete.
     */
    deleteFolder'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' path'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Gets folders.
     *
     * @param {string} project - Project ID or project name
     * @param {string} path - Path of the folder.
     * @param {ReleaseInterfaces.FolderPathQueryOrder} queryOrder - Gets the results in the defined order. Default is 'None'.
     */
    getFolders'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' path'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' queryOrder'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'FolderPathQueryOrder'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'Folder'
    MethodDeclaration
      Identifier: '
    /**
     * Updates an existing folder at given existing path.
     *
     * @param {ReleaseInterfaces.Folder} folder - folder.
     * @param {string} project - Project ID or project name
     * @param {string} path - Path of the folder to update.
     */
    updateFolder'
      Parameter
        Identifier: 'folder'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'Folder'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' path'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'Folder'
    MethodDeclaration
      Identifier: '
    /**
     * Updates the gate for a deployment.
     *
     * @param {ReleaseInterfaces.GateUpdateMetadata} gateUpdateMetadata - Metadata to patch the Release Gates.
     * @param {string} project - Project ID or project name
     * @param {number} gateStepId - Gate step Id.
     */
    updateGates'
      Parameter
        Identifier: 'gateUpdateMetadata'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'GateUpdateMetadata'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' gateStepId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ReleaseGates'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} releaseId
     */
    getReleaseHistory'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'ReleaseRevision'
    MethodDeclaration
      Identifier: '
    /**
     * @param {FormInputInterfaces.InputValuesQuery} query
     * @param {string} project - Project ID or project name
     */
    getInputValues'
      Parameter
        Identifier: 'query'
        TypeReference
          QualifiedName
            Identifier: ' FormInputInterfaces'
            Identifier: 'InputValuesQuery'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'FormInputInterfaces'
            Identifier: 'InputValuesQuery'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} buildId
     * @param {string} sourceId
     */
    getIssues'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' buildId'
        NumberKeyword
      Parameter
        Identifier: ' sourceId'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'AutoTriggerIssue'
    MethodDeclaration
      Identifier: '
    /**
     * Gets gate logs
     *
     * @param {string} project - Project ID or project name
     * @param {number} releaseId - Id of the release.
     * @param {number} environmentId - Id of release environment.
     * @param {number} gateId - Id of the gate.
     * @param {number} taskId - ReleaseTask Id for the log.
     */
    getGateLog'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' environmentId'
        NumberKeyword
      Parameter
        Identifier: ' gateId'
        NumberKeyword
      Parameter
        Identifier: ' taskId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * Get logs for a release Id.
     *
     * @param {string} project - Project ID or project name
     * @param {number} releaseId - Id of the release.
     */
    getLogs'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * Gets logs
     *
     * @param {string} project - Project ID or project name
     * @param {number} releaseId - Id of the release.
     * @param {number} environmentId - Id of release environment.
     * @param {number} taskId - ReleaseTask Id for the log.
     * @param {number} attemptId - Id of the attempt.
     */
    getLog'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' environmentId'
        NumberKeyword
      Parameter
        Identifier: ' taskId'
        NumberKeyword
      Parameter
        Identifier: ' attemptId'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * Gets the task log of a release as a plain text file.
     *
     * @param {string} project - Project ID or project name
     * @param {number} releaseId - Id of the release.
     * @param {number} environmentId - Id of release environment.
     * @param {number} attemptId
     * @param {string} timelineId
     * @param {number} taskId - ReleaseTask Id for the log.
     * @param {number} startLine - Starting line number for logs
     * @param {number} endLine - Ending line number for logs
     */
    getTaskLog2'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' environmentId'
        NumberKeyword
      Parameter
        Identifier: ' attemptId'
        NumberKeyword
      Parameter
        Identifier: ' timelineId'
        StringKeyword
      Parameter
        Identifier: ' taskId'
        NumberKeyword
      Parameter
        Identifier: ' startLine'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' endLine'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * Gets the task log of a release as a plain text file.
     *
     * @param {string} project - Project ID or project name
     * @param {number} releaseId - Id of the release.
     * @param {number} environmentId - Id of release environment.
     * @param {number} releaseDeployPhaseId - Release deploy phase Id.
     * @param {number} taskId - ReleaseTask Id for the log.
     * @param {number} startLine - Starting line number for logs
     * @param {number} endLine - Ending line number for logs
     */
    getTaskLog'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' environmentId'
        NumberKeyword
      Parameter
        Identifier: ' releaseDeployPhaseId'
        NumberKeyword
      Parameter
        Identifier: ' taskId'
        NumberKeyword
      Parameter
        Identifier: ' startLine'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' endLine'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * Get manual intervention for a given release and manual intervention id.
     *
     * @param {string} project - Project ID or project name
     * @param {number} releaseId - Id of the release.
     * @param {number} manualInterventionId - Id of the manual intervention.
     */
    getManualIntervention'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' manualInterventionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ManualIntervention'
    MethodDeclaration
      Identifier: '
    /**
     * List all manual interventions for a given release.
     *
     * @param {string} project - Project ID or project name
     * @param {number} releaseId - Id of the release.
     */
    getManualInterventions'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'ManualIntervention'
    MethodDeclaration
      Identifier: '
    /**
     * Update manual intervention.
     *
     * @param {ReleaseInterfaces.ManualInterventionUpdateMetadata} manualInterventionUpdateMetadata - Meta data to update manual intervention.
     * @param {string} project - Project ID or project name
     * @param {number} releaseId - Id of the release.
     * @param {number} manualInterventionId - Id of the manual intervention.
     */
    updateManualIntervention'
      Parameter
        Identifier: 'manualInterventionUpdateMetadata'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ManualInterventionUpdateMetadata'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' manualInterventionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ManualIntervention'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {Date} minMetricsTime
     */
    getMetrics'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' minMetricsTime'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'Metric'
    MethodDeclaration
      Identifier: '
    /**
     * Gets Org pipeline release settings
     *
     */
    getOrgPipelineReleaseSettings'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'OrgPipelineReleaseSettings'
    MethodDeclaration
      Identifier: '
    /**
     * Updates Org pipeline release settings
     *
     * @param {ReleaseInterfaces.OrgPipelineReleaseSettingsUpdateParameters} newSettings
     */
    updateOrgPipelineReleaseSettings'
      Parameter
        Identifier: 'newSettings'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'OrgPipelineReleaseSettingsUpdateParameters'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'OrgPipelineReleaseSettings'
    MethodDeclaration
      Identifier: '
    /**
     * Gets pipeline release settings
     *
     * @param {string} project - Project ID or project name
     */
    getPipelineReleaseSettings'
      Parameter
        Identifier: 'project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ProjectPipelineReleaseSettings'
    MethodDeclaration
      Identifier: '
    /**
     * Updates pipeline release settings
     *
     * @param {ReleaseInterfaces.ProjectPipelineReleaseSettingsUpdateParameters} newSettings
     * @param {string} project - Project ID or project name
     */
    updatePipelineReleaseSettings'
      Parameter
        Identifier: 'newSettings'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ProjectPipelineReleaseSettingsUpdateParameters'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ProjectPipelineReleaseSettings'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} artifactType
     * @param {string} artifactSourceId
     */
    getReleaseProjects'
      Parameter
        Identifier: 'artifactType'
        StringKeyword
      Parameter
        Identifier: ' artifactSourceId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'ProjectReference'
    MethodDeclaration
      Identifier: '
    /**
     * Get a list of releases
     *
     * @param {string} project - Project ID or project name
     * @param {number} definitionId - Releases from this release definition Id.
     * @param {number} definitionEnvironmentId
     * @param {string} searchText - Releases with names containing searchText.
     * @param {string} createdBy - Releases created by this user.
     * @param {ReleaseInterfaces.ReleaseStatus} statusFilter - Releases that have this status.
     * @param {number} environmentStatusFilter
     * @param {Date} minCreatedTime - Releases that were created after this time.
     * @param {Date} maxCreatedTime - Releases that were created before this time.
     * @param {ReleaseInterfaces.ReleaseQueryOrder} queryOrder - Gets the results in the defined order of created date for releases. Default is descending.
     * @param {number} top - Number of releases to get. Default is 50.
     * @param {number} continuationToken - Gets the releases after the continuation token provided.
     * @param {ReleaseInterfaces.ReleaseExpands} expand - The property that should be expanded in the list of releases.
     * @param {string} artifactTypeId - Releases with given artifactTypeId will be returned. Values can be Build, Jenkins, GitHub, Nuget, Team Build (external), ExternalTFSBuild, Git, TFVC, ExternalTfsXamlBuild.
     * @param {string} sourceId - Unique identifier of the artifact used. e.g. For build it would be {projectGuid}:{BuildDefinitionId}, for Jenkins it would be {JenkinsConnectionId}:{JenkinsDefinitionId}, for TfsOnPrem it would be {TfsOnPremConnectionId}:{ProjectName}:{TfsOnPremDefinitionId}. For third-party artifacts e.g. TeamCity, BitBucket you may refer 'uniqueSourceIdentifier' inside vss-extension.json https://github.com/Microsoft/vsts-rm-extensions/blob/master/Extensions.
     * @param {string} artifactVersionId - Releases with given artifactVersionId will be returned. E.g. in case of Build artifactType, it is buildId.
     * @param {string} sourceBranchFilter - Releases with given sourceBranchFilter will be returned.
     * @param {boolean} isDeleted - Gets the soft deleted releases, if true.
     * @param {string[]} tagFilter - A comma-delimited list of tags. Only releases with these tags will be returned.
     * @param {string[]} propertyFilters - A comma-delimited list of extended properties to be retrieved. If set, the returned Releases will contain values for the specified property Ids (if they exist). If not set, properties will not be included. Note that this will not filter out any Release from results irrespective of whether it has property set or not.
     * @param {number[]} releaseIdFilter - A comma-delimited list of releases Ids. Only releases with these Ids will be returned.
     * @param {string} path - Releases under this folder path will be returned
     */
    getReleases'
      Parameter
        Identifier: 'project'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' definitionId'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' definitionEnvironmentId'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' searchText'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' createdBy'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' statusFilter'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseStatus'
      Parameter
        Identifier: ' environmentStatusFilter'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' minCreatedTime'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' maxCreatedTime'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' queryOrder'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseQueryOrder'
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseExpands'
      Parameter
        Identifier: ' artifactTypeId'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' sourceId'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' artifactVersionId'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' sourceBranchFilter'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' isDeleted'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' tagFilter'
        QuestionToken
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' propertyFilters'
        QuestionToken
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' releaseIdFilter'
        QuestionToken
        ArrayType
          NumberKeyword
      Parameter
        Identifier: ' path'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'Release'
    MethodDeclaration
      Identifier: '
    /**
     * Create a release.
     *
     * @param {ReleaseInterfaces.ReleaseStartMetadata} releaseStartMetadata - Metadata to create a release.
     * @param {string} project - Project ID or project name
     */
    createRelease'
      Parameter
        Identifier: 'releaseStartMetadata'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseStartMetadata'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'Release'
    MethodDeclaration
      Identifier: '
    /**
     * Soft delete a release
     *
     * @param {string} project - Project ID or project name
     * @param {number} releaseId - Id of the release.
     * @param {string} comment - Comment for deleting a release.
     */
    deleteRelease'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' comment'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Get a Release
     *
     * @param {string} project - Project ID or project name
     * @param {number} releaseId - Id of the release.
     * @param {ReleaseInterfaces.ApprovalFilters} approvalFilters - A filter which would allow fetching approval steps selectively based on whether it is automated, or manual. This would also decide whether we should fetch pre and post approval snapshots. Assumes All by default
     * @param {string[]} propertyFilters - A comma-delimited list of extended properties to be retrieved. If set, the returned Release will contain values for the specified property Ids (if they exist). If not set, properties will not be included.
     * @param {ReleaseInterfaces.SingleReleaseExpands} expand - A property that should be expanded in the release.
     * @param {number} topGateRecords - Number of release gate records to get. Default is 5.
     */
    getRelease'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' approvalFilters'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ApprovalFilters'
      Parameter
        Identifier: ' propertyFilters'
        QuestionToken
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' expand'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'SingleReleaseExpands'
      Parameter
        Identifier: ' topGateRecords'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'Release'
    MethodDeclaration
      Identifier: '
    /**
     * Get release summary of a given definition Id.
     *
     * @param {string} project - Project ID or project name
     * @param {number} definitionId - Id of the definition to get release summary.
     * @param {number} releaseCount - Count of releases to be included in summary.
     * @param {boolean} includeArtifact - Include artifact details.Default is 'false'.
     * @param {number[]} definitionEnvironmentIdsFilter
     */
    getReleaseDefinitionSummary'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' definitionId'
        NumberKeyword
      Parameter
        Identifier: ' releaseCount'
        NumberKeyword
      Parameter
        Identifier: ' includeArtifact'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' definitionEnvironmentIdsFilter'
        QuestionToken
        ArrayType
          NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ReleaseDefinitionSummary'
    MethodDeclaration
      Identifier: '
    /**
     * Get release for a given revision number.
     *
     * @param {string} project - Project ID or project name
     * @param {number} releaseId - Id of the release.
     * @param {number} definitionSnapshotRevision - Definition snapshot revision number.
     */
    getReleaseRevision'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' definitionSnapshotRevision'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * Undelete a soft deleted release.
     *
     * @param {string} project - Project ID or project name
     * @param {number} releaseId - Id of release to be undeleted.
     * @param {string} comment - Any comment for undeleting.
     */
    undeleteRelease'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' comment'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Update a complete release object.
     *
     * @param {ReleaseInterfaces.Release} release - Release object for update.
     * @param {string} project - Project ID or project name
     * @param {number} releaseId - Id of the release to update.
     */
    updateRelease'
      Parameter
        Identifier: 'release'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'Release'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'Release'
    MethodDeclaration
      Identifier: '
    /**
     * Update few properties of a release.
     *
     * @param {ReleaseInterfaces.ReleaseUpdateMetadata} releaseUpdateMetadata - Properties of release to update.
     * @param {string} project - Project ID or project name
     * @param {number} releaseId - Id of the release to update.
     */
    updateReleaseResource'
      Parameter
        Identifier: 'releaseUpdateMetadata'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseUpdateMetadata'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'Release'
    MethodDeclaration
      Identifier: '
    /**
     * Gets the release settings
     *
     * @param {string} project - Project ID or project name
     */
    getReleaseSettings'
      Parameter
        Identifier: 'project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ReleaseSettings'
    MethodDeclaration
      Identifier: '
    /**
     * Updates the release settings
     *
     * @param {ReleaseInterfaces.ReleaseSettings} releaseSettings
     * @param {string} project - Project ID or project name
     */
    updateReleaseSettings'
      Parameter
        Identifier: 'releaseSettings'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'ReleaseSettings'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ReleaseSettings'
    MethodDeclaration
      Identifier: '
    /**
     * Get release definition for a given definitionId and revision
     *
     * @param {string} project - Project ID or project name
     * @param {number} definitionId - Id of the definition.
     * @param {number} revision - Id of the revision.
     */
    getDefinitionRevision'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' definitionId'
        NumberKeyword
      Parameter
        Identifier: ' revision'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * Get revision history for a release definition
     *
     * @param {string} project - Project ID or project name
     * @param {number} definitionId - Id of the definition.
     */
    getReleaseDefinitionHistory'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' definitionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'ReleaseDefinitionRevision'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} releaseId
     */
    getSummaryMailSections'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'SummaryMailSection'
    MethodDeclaration
      Identifier: '
    /**
     * @param {ReleaseInterfaces.MailMessage} mailMessage
     * @param {string} project - Project ID or project name
     * @param {number} releaseId
     */
    sendSummaryMail'
      Parameter
        Identifier: 'mailMessage'
        TypeReference
          QualifiedName
            Identifier: ' ReleaseInterfaces'
            Identifier: 'MailMessage'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} definitionId
     */
    getSourceBranches'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' definitionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          StringKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Adds a tag to a definition
     *
     * @param {string} project - Project ID or project name
     * @param {number} releaseDefinitionId
     * @param {string} tag
     */
    addDefinitionTag'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseDefinitionId'
        NumberKeyword
      Parameter
        Identifier: ' tag'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          StringKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Adds multiple tags to a definition
     *
     * @param {string[]} tags
     * @param {string} project - Project ID or project name
     * @param {number} releaseDefinitionId
     */
    addDefinitionTags'
      Parameter
        Identifier: 'tags'
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' releaseDefinitionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          StringKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Deletes a tag from a definition
     *
     * @param {string} project - Project ID or project name
     * @param {number} releaseDefinitionId
     * @param {string} tag
     */
    deleteDefinitionTag'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseDefinitionId'
        NumberKeyword
      Parameter
        Identifier: ' tag'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          StringKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Gets the tags for a definition
     *
     * @param {string} project - Project ID or project name
     * @param {number} releaseDefinitionId
     */
    getDefinitionTags'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseDefinitionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          StringKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Adds a tag to a releaseId
     *
     * @param {string} project - Project ID or project name
     * @param {number} releaseId
     * @param {string} tag
     */
    addReleaseTag'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' tag'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          StringKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Adds tag to a release
     *
     * @param {string[]} tags
     * @param {string} project - Project ID or project name
     * @param {number} releaseId
     */
    addReleaseTags'
      Parameter
        Identifier: 'tags'
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          StringKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Deletes a tag from a release
     *
     * @param {string} project - Project ID or project name
     * @param {number} releaseId
     * @param {string} tag
     */
    deleteReleaseTag'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' tag'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          StringKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Gets the tags for a release
     *
     * @param {string} project - Project ID or project name
     * @param {number} releaseId
     */
    getReleaseTags'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          StringKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     */
    getTags'
      Parameter
        Identifier: 'project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          StringKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} releaseId
     * @param {number} environmentId
     * @param {number} releaseDeployPhaseId
     */
    getTasksForTaskGroup'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' environmentId'
        NumberKeyword
      Parameter
        Identifier: ' releaseDeployPhaseId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'ReleaseTask'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} releaseId
     * @param {number} environmentId
     * @param {number} attemptId
     * @param {string} timelineId
     */
    getTasks2'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' environmentId'
        NumberKeyword
      Parameter
        Identifier: ' attemptId'
        NumberKeyword
      Parameter
        Identifier: ' timelineId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'ReleaseTask'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} releaseId
     * @param {number} environmentId
     * @param {number} attemptId
     */
    getTasks'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' environmentId'
        NumberKeyword
      Parameter
        Identifier: ' attemptId'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'ReleaseTask'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     */
    getArtifactTypeDefinitions'
      Parameter
        Identifier: 'project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'ArtifactTypeDefinition'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} releaseDefinitionId
     */
    getArtifactVersions'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseDefinitionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ArtifactVersionQueryResult'
    MethodDeclaration
      Identifier: '
    /**
     * @param {ReleaseInterfaces.Artifact[]} artifacts
     * @param {string} project - Project ID or project name
     */
    getArtifactVersionsForSources'
      Parameter
        Identifier: 'artifacts'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' ReleaseInterfaces'
              Identifier: 'Artifact'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ReleaseInterfaces'
            Identifier: 'ArtifactVersionQueryResult'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} releaseId
     * @param {number} baseReleaseId
     * @param {number} top
     * @param {string} artifactAlias
     */
    getReleaseWorkItemsRefs'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' baseReleaseId'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' artifactAlias'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ReleaseInterfaces'
              Identifier: 'ReleaseWorkItemRef'
