SourceFile
  ImportEqualsDeclaration
    Identifier: ' basem'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' VsoBaseInterfaces'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' Contracts'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' VSSInterfaces'
    ExternalModuleReference
      StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ITestResultsApi'
    HeritageClause
      ExpressionWithTypeArguments
        PropertyAccessExpression
          Identifier: ' basem'
          Identifier: 'ClientApiBase'
    MethodSignature
      Identifier: '
    createTestIterationResultAttachment'
      Parameter
        Identifier: 'attachmentRequestModel'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestAttachmentRequestModel'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testCaseResultId'
        NumberKeyword
      Parameter
        Identifier: ' iterationId'
        NumberKeyword
      Parameter
        Identifier: ' actionPath'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestAttachmentReference'
    MethodSignature
      Identifier: '
    createTestResultAttachment'
      Parameter
        Identifier: 'attachmentRequestModel'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestAttachmentRequestModel'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testCaseResultId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestAttachmentReference'
    MethodSignature
      Identifier: '
    createTestSubResultAttachment'
      Parameter
        Identifier: 'attachmentRequestModel'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestAttachmentRequestModel'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testCaseResultId'
        NumberKeyword
      Parameter
        Identifier: ' testSubResultId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestAttachmentReference'
    MethodSignature
      Identifier: '
    deleteTestResultAttachment'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testCaseResultId'
        NumberKeyword
      Parameter
        Identifier: ' attachmentId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getTestIterationAttachmentContent'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testCaseResultId'
        NumberKeyword
      Parameter
        Identifier: ' attachmentId'
        NumberKeyword
      Parameter
        Identifier: ' iterationId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    getTestIterationAttachmentZip'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testCaseResultId'
        NumberKeyword
      Parameter
        Identifier: ' attachmentId'
        NumberKeyword
      Parameter
        Identifier: ' iterationId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    getTestResultAttachmentContent'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testCaseResultId'
        NumberKeyword
      Parameter
        Identifier: ' attachmentId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    getTestResultAttachments'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testCaseResultId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestAttachment'
    MethodSignature
      Identifier: '
    getTestResultAttachmentZip'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testCaseResultId'
        NumberKeyword
      Parameter
        Identifier: ' attachmentId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    getTestSubResultAttachmentContent'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testCaseResultId'
        NumberKeyword
      Parameter
        Identifier: ' attachmentId'
        NumberKeyword
      Parameter
        Identifier: ' testSubResultId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    getTestSubResultAttachments'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testCaseResultId'
        NumberKeyword
      Parameter
        Identifier: ' testSubResultId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestAttachment'
    MethodSignature
      Identifier: '
    getTestSubResultAttachmentZip'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testCaseResultId'
        NumberKeyword
      Parameter
        Identifier: ' attachmentId'
        NumberKeyword
      Parameter
        Identifier: ' testSubResultId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    createTestRunAttachment'
      Parameter
        Identifier: 'attachmentRequestModel'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestAttachmentRequestModel'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestAttachmentReference'
    MethodSignature
      Identifier: '
    deleteTestRunAttachment'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' attachmentId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getTestRunAttachmentContent'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' attachmentId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    getTestRunAttachments'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestAttachment'
    MethodSignature
      Identifier: '
    getTestRunAttachmentZip'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' attachmentId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    getBugsLinkedToTestResult'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testCaseResultId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'WorkItemReference'
    MethodSignature
      Identifier: '
    fetchSourceCodeCoverageReport'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' buildId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'SourceViewBuildCoverage'
    MethodSignature
      Identifier: '
    getBuildCodeCoverage'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' buildId'
        NumberKeyword
      Parameter
        Identifier: ' flags'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'BuildCoverage'
    MethodSignature
      Identifier: '
    getCodeCoverageSummary'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' buildId'
        NumberKeyword
      Parameter
        Identifier: ' deltaBuildId'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'CodeCoverageSummary'
    MethodSignature
      Identifier: '
    updateCodeCoverageSummary'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' buildId'
        NumberKeyword
      Parameter
        Identifier: ' coverageData'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'CodeCoverageData'
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getTestRunCodeCoverage'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' flags'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestRunCoverage'
    MethodSignature
      Identifier: '
    addCustomFields'
      Parameter
        Identifier: 'newFields'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' Contracts'
              Identifier: 'CustomTestFieldDefinition'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'CustomTestFieldDefinition'
    MethodSignature
      Identifier: '
    queryCustomFields'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' scopeFilter'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'CustomTestFieldScope'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'CustomTestFieldDefinition'
    MethodSignature
      Identifier: '
    getFileLevelCodeCoverage'
      Parameter
        Identifier: 'fileCoverageRequest'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'FileCoverageRequest'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    getFlakyTestResultsByBuildDefinitionId'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' buildDefinitionId'
        NumberKeyword
      Parameter
        Identifier: ' minBuildCreatedDate'
        TypeReference
          Identifier: ' Date'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestCaseResult'
    MethodSignature
      Identifier: '
    getFlakyTestResultsByTestRun'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestCaseResult'
    MethodSignature
      Identifier: '
    queryTestResultHistory'
      Parameter
        Identifier: 'filter'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'ResultsFilter'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestResultHistory'
    MethodSignature
      Identifier: '
    getTestRunMessageLogs'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestMessageLogDetails'
    MethodSignature
      Identifier: '
    getTestPipelineMetrics'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' pipelineId'
        NumberKeyword
      Parameter
        Identifier: ' stageName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' phaseName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' jobName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' metricNames'
        QuestionToken
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' Contracts'
              Identifier: 'Metrics'
      Parameter
        Identifier: ' groupByNode'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'PipelineTestMetrics'
    MethodSignature
      Identifier: '
    getTestResultDetailsForBuild'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' buildId'
        NumberKeyword
      Parameter
        Identifier: ' publishContext'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' groupBy'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' filter'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' orderby'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' shouldIncludeResults'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' queryRunSummaryForInProgress'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestResultsDetails'
    MethodSignature
      Identifier: '
    getTestResultDetailsForRelease'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' releaseEnvId'
        NumberKeyword
      Parameter
        Identifier: ' publishContext'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' groupBy'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' filter'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' orderby'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' shouldIncludeResults'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' queryRunSummaryForInProgress'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestResultsDetails'
    MethodSignature
      Identifier: '
    publishTestResultDocument'
      Parameter
        Identifier: 'document'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestResultDocument'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestResultDocument'
    MethodSignature
      Identifier: '
    getResultGroupsByBuild'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' buildId'
        NumberKeyword
      Parameter
        Identifier: ' publishContext'
        StringKeyword
      Parameter
        Identifier: ' fields'
        QuestionToken
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'FieldDetailsForTestResults'
    MethodSignature
      Identifier: '
    getResultGroupsByRelease'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' publishContext'
        StringKeyword
      Parameter
        Identifier: ' releaseEnvId'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' fields'
        QuestionToken
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'FieldDetailsForTestResults'
    MethodSignature
      Identifier: '
    queryTestResultsMetaData'
      Parameter
        Identifier: 'testCaseReferenceIds'
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' detailsToInclude'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'ResultMetaDataDetails'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestResultMetaData'
    MethodSignature
      Identifier: '
    updateTestResultsMetaData'
      Parameter
        Identifier: 'testResultMetaDataUpdateInput'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestResultMetaDataUpdateInput'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' testCaseReferenceId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestResultMetaData'
    MethodSignature
      Identifier: '
    getTestResultsByQuery'
      Parameter
        Identifier: 'query'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestResultsQuery'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestResultsQuery'
    MethodSignature
      Identifier: '
    getTestResultsByQueryWiql'
      Parameter
        Identifier: 'queryModel'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'QueryModel'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' includeResultDetails'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' includeIterationDetails'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' skip'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestCaseResult'
    MethodSignature
      Identifier: '
    addTestResultsToTestRun'
      Parameter
        Identifier: 'results'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' Contracts'
              Identifier: 'TestCaseResult'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestCaseResult'
    MethodSignature
      Identifier: '
    getTestResultById'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testResultId'
        NumberKeyword
      Parameter
        Identifier: ' detailsToInclude'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'ResultDetails'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestCaseResult'
    MethodSignature
      Identifier: '
    getTestResults'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' detailsToInclude'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'ResultDetails'
      Parameter
        Identifier: ' skip'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' outcomes'
        QuestionToken
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' Contracts'
              Identifier: 'TestOutcome'
      Parameter
        Identifier: ' newTestsOnly'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestCaseResult'
    MethodSignature
      Identifier: '
    updateTestResults'
      Parameter
        Identifier: 'results'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' Contracts'
              Identifier: 'TestCaseResult'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestCaseResult'
    MethodSignature
      Identifier: '
    getTestResultsByBuild'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' buildId'
        NumberKeyword
      Parameter
        Identifier: ' publishContext'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' outcomes'
        QuestionToken
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' Contracts'
              Identifier: 'TestOutcome'
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'ShallowTestCaseResult'
    MethodSignature
      Identifier: '
    getTestResultsByPipeline'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' pipelineId'
        NumberKeyword
      Parameter
        Identifier: ' stageName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' phaseName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' jobName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' outcomes'
        QuestionToken
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' Contracts'
              Identifier: 'TestOutcome'
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'ShallowTestCaseResult'
    MethodSignature
      Identifier: '
    getTestResultsByRelease'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' releaseEnvid'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' publishContext'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' outcomes'
        QuestionToken
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' Contracts'
              Identifier: 'TestOutcome'
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'ShallowTestCaseResult'
    MethodSignature
      Identifier: '
    testResultsGroupDetails'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' pipelineId'
        NumberKeyword
      Parameter
        Identifier: ' stageName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' phaseName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' jobName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' shouldIncludeFailedAndAbortedResults'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' queryGroupSummaryForInProgress'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestResultsDetails'
    MethodSignature
      Identifier: '
    queryTestResultsReportForBuild'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' buildId'
        NumberKeyword
      Parameter
        Identifier: ' publishContext'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' includeFailureDetails'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' buildToCompare'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'BuildReference'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestResultSummary'
    MethodSignature
      Identifier: '
    queryTestResultsReportForPipeline'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' pipelineId'
        NumberKeyword
      Parameter
        Identifier: ' stageName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' phaseName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' jobName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' includeFailureDetails'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestResultSummary'
    MethodSignature
      Identifier: '
    queryTestResultsReportForRelease'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' releaseEnvId'
        NumberKeyword
      Parameter
        Identifier: ' publishContext'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' includeFailureDetails'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' releaseToCompare'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'ReleaseReference'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestResultSummary'
    MethodSignature
      Identifier: '
    queryTestResultsSummaryForReleases'
      Parameter
        Identifier: 'releases'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' Contracts'
              Identifier: 'ReleaseReference'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestResultSummary'
    MethodSignature
      Identifier: '
    queryTestSummaryByRequirement'
      Parameter
        Identifier: 'resultsContext'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestResultsContext'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' workItemIds'
        QuestionToken
        ArrayType
          NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestSummaryForWorkItem'
    MethodSignature
      Identifier: '
    queryResultTrendForBuild'
      Parameter
        Identifier: 'filter'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestResultTrendFilter'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'AggregatedDataForResultTrend'
    MethodSignature
      Identifier: '
    queryResultTrendForRelease'
      Parameter
        Identifier: 'filter'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestResultTrendFilter'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'AggregatedDataForResultTrend'
    MethodSignature
      Identifier: '
    createTestRun'
      Parameter
        Identifier: 'testRun'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'RunCreateModel'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestRun'
    MethodSignature
      Identifier: '
    deleteTestRun'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getTestRunById'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' includeDetails'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' includeTags'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestRun'
    MethodSignature
      Identifier: '
    getTestRuns'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' buildUri'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' owner'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' tmiRunId'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' planId'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' includeRunDetails'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' automated'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' skip'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestRun'
    MethodSignature
      Identifier: '
    queryTestRuns'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' minLastUpdatedDate'
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' maxLastUpdatedDate'
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' state'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestRunState'
      Parameter
        Identifier: ' planIds'
        QuestionToken
        ArrayType
          NumberKeyword
      Parameter
        Identifier: ' isAutomated'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' publishContext'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestRunPublishContext'
      Parameter
        Identifier: ' buildIds'
        QuestionToken
        ArrayType
          NumberKeyword
      Parameter
        Identifier: ' buildDefIds'
        QuestionToken
        ArrayType
          NumberKeyword
      Parameter
        Identifier: ' branchName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' releaseIds'
        QuestionToken
        ArrayType
          NumberKeyword
      Parameter
        Identifier: ' releaseDefIds'
        QuestionToken
        ArrayType
          NumberKeyword
      Parameter
        Identifier: ' releaseEnvIds'
        QuestionToken
        ArrayType
          NumberKeyword
      Parameter
        Identifier: ' releaseEnvDefIds'
        QuestionToken
        ArrayType
          NumberKeyword
      Parameter
        Identifier: ' runTitle'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestRun'
    MethodSignature
      Identifier: '
    updateTestRun'
      Parameter
        Identifier: 'runUpdateModel'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'RunUpdateModel'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestRun'
    MethodSignature
      Identifier: '
    getTestRunSummaryByOutcome'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestRunStatistic'
    MethodSignature
      Identifier: '
    getTestResultsSettings'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' settingsType'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestResultsSettingsType'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestResultsSettings'
    MethodSignature
      Identifier: '
    updatePipelinesTestSettings'
      Parameter
        Identifier: 'testResultsUpdateSettings'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestResultsUpdateSettings'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestResultsSettings'
    MethodSignature
      Identifier: '
    getSimilarTestResults'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testResultId'
        NumberKeyword
      Parameter
        Identifier: ' testSubResultId'
        NumberKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestCaseResult'
    MethodSignature
      Identifier: '
    getTestRunStatistics'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestRunStatistic'
    MethodSignature
      Identifier: '
    getCoverageStatusBadge'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' definition'
        StringKeyword
      Parameter
        Identifier: ' branchName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' label'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        StringKeyword
    MethodSignature
      Identifier: '
    getTestTagsForBuild'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' buildId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestTag'
    MethodSignature
      Identifier: '
    getTestTagsForRelease'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' releaseEnvId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestTag'
    MethodSignature
      Identifier: '
    updateTestRunTags'
      Parameter
        Identifier: 'testTagsUpdateModel'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestTagsUpdateModel'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestTag'
    MethodSignature
      Identifier: '
    getTestTagSummaryForBuild'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' buildId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestTagSummary'
    MethodSignature
      Identifier: '
    getTestTagSummaryForRelease'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' releaseEnvId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestTagSummary'
    MethodSignature
      Identifier: '
    createBuildAttachmentInLogStore'
      Parameter
        Identifier: 'attachmentRequestModel'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestAttachmentRequestModel'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' buildId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    createTestRunLogStoreAttachment'
      Parameter
        Identifier: 'attachmentRequestModel'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestAttachmentRequestModel'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestLogStoreAttachmentReference'
    MethodSignature
      Identifier: '
    deleteTestRunLogStoreAttachment'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' filename'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getTestRunLogStoreAttachmentContent'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' filename'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    getTestRunLogStoreAttachments'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestLogStoreAttachment'
    MethodSignature
      Identifier: '
    getTestRunLogStoreAttachmentZip'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' filename'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodSignature
      Identifier: '
    createFailureType'
      Parameter
        Identifier: 'testResultFailureType'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestResultFailureTypeRequestModel'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestResultFailureType'
    MethodSignature
      Identifier: '
    deleteFailureType'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' failureTypeId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getFailureTypes'
      Parameter
        Identifier: 'project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestResultFailureType'
    MethodSignature
      Identifier: '
    queryTestHistory'
      Parameter
        Identifier: 'filter'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestHistoryQuery'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestHistoryQuery'
    MethodSignature
      Identifier: '
    getTestLogsForBuild'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' buildId'
        NumberKeyword
      Parameter
        Identifier: ' type'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestLogType'
      Parameter
        Identifier: ' directoryPath'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' fileNamePrefix'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' fetchMetaData'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestLog'
    MethodSignature
      Identifier: '
    getTestResultLogs'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' resultId'
        NumberKeyword
      Parameter
        Identifier: ' type'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestLogType'
      Parameter
        Identifier: ' directoryPath'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' fileNamePrefix'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' fetchMetaData'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestLog'
    MethodSignature
      Identifier: '
    getTestSubResultLogs'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' resultId'
        NumberKeyword
      Parameter
        Identifier: ' subResultId'
        NumberKeyword
      Parameter
        Identifier: ' type'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestLogType'
      Parameter
        Identifier: ' directoryPath'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' fileNamePrefix'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' fetchMetaData'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestLog'
    MethodSignature
      Identifier: '
    getTestRunLogs'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' type'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestLogType'
      Parameter
        Identifier: ' directoryPath'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' fileNamePrefix'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' fetchMetaData'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestLog'
    MethodSignature
      Identifier: '
    getTestLogStoreEndpointDetailsForBuildLog'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' build'
        NumberKeyword
      Parameter
        Identifier: ' type'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestLogType'
      Parameter
        Identifier: ' filePath'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestLogStoreEndpointDetails'
    MethodSignature
      Identifier: '
    testLogStoreEndpointDetailsForBuild'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' buildId'
        NumberKeyword
      Parameter
        Identifier: ' testLogStoreOperationType'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestLogStoreOperationType'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestLogStoreEndpointDetails'
    MethodSignature
      Identifier: '
    getTestLogStoreEndpointDetailsForResultLog'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' resultId'
        NumberKeyword
      Parameter
        Identifier: ' type'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestLogType'
      Parameter
        Identifier: ' filePath'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestLogStoreEndpointDetails'
    MethodSignature
      Identifier: '
    getTestLogStoreEndpointDetailsForSubResultLog'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' resultId'
        NumberKeyword
      Parameter
        Identifier: ' subResultId'
        NumberKeyword
      Parameter
        Identifier: ' type'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestLogType'
      Parameter
        Identifier: ' filePath'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestLogStoreEndpointDetails'
    MethodSignature
      Identifier: '
    testLogStoreEndpointDetailsForResult'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' resultId'
        NumberKeyword
      Parameter
        Identifier: ' subResultId'
        NumberKeyword
      Parameter
        Identifier: ' filePath'
        StringKeyword
      Parameter
        Identifier: ' type'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestLogType'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestLogStoreEndpointDetails'
    MethodSignature
      Identifier: '
    getTestLogStoreEndpointDetailsForRunLog'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' type'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestLogType'
      Parameter
        Identifier: ' filePath'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestLogStoreEndpointDetails'
    MethodSignature
      Identifier: '
    testLogStoreEndpointDetailsForRun'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testLogStoreOperationType'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestLogStoreOperationType'
      Parameter
        Identifier: ' filePath'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' type'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestLogType'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestLogStoreEndpointDetails'
    MethodSignature
      Identifier: '
    getTestRunsBySessionId'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' sessionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          NumberKeyword
    MethodSignature
      Identifier: '
    createTestSession'
      Parameter
        Identifier: 'session'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestResultsSession'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        NumberKeyword
    MethodSignature
      Identifier: '
    getTestSession'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' buildId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestResultsSession'
    MethodSignature
      Identifier: '
    getTestSessionLayout'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' sessionId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          AnyKeyword
    MethodSignature
      Identifier: '
    createEnvironment'
      Parameter
        Identifier: 'environments'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' Contracts'
              Identifier: 'TestSessionEnvironment'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    createNotification'
      Parameter
        Identifier: 'notifications'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' Contracts'
              Identifier: 'TestSessionNotification'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' sessionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          NumberKeyword
    MethodSignature
      Identifier: '
    getSessionNotifications'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' sessionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestSessionNotification'
    MethodSignature
      Identifier: '
    addTestResultsToTestRunSession'
      Parameter
        Identifier: 'results'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' Contracts'
              Identifier: 'TestCaseResult'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestCaseResult'
    MethodSignature
      Identifier: '
    getTestSessionResults'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' detailsToInclude'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'ResultDetails'
      Parameter
        Identifier: ' skip'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' outcomes'
        QuestionToken
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' Contracts'
              Identifier: 'TestOutcome'
      Parameter
        Identifier: ' newTestsOnly'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestCaseResult'
    MethodSignature
      Identifier: '
    updateTestResultsToTestRunSession'
      Parameter
        Identifier: 'results'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' Contracts'
              Identifier: 'TestCaseResult'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          NumberKeyword
    MethodSignature
      Identifier: '
    createTestSettings'
      Parameter
        Identifier: 'testSettings'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestSettings'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        NumberKeyword
    MethodSignature
      Identifier: '
    deleteTestSettings'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' testSettingsId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getTestSettingsById'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' testSettingsId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestSettings'
    MethodSignature
      Identifier: '
    addWorkItemToTestLinks'
      Parameter
        Identifier: 'workItemToTestLinks'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'WorkItemToTestLinks'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'WorkItemToTestLinks'
    MethodSignature
      Identifier: '
    deleteTestMethodToWorkItemLink'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' testName'
        StringKeyword
      Parameter
        Identifier: ' workItemId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        BooleanKeyword
    MethodSignature
      Identifier: '
    queryTestMethodLinkedWorkItems'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' testName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestToWorkItemLinks'
    MethodSignature
      Identifier: '
    getTestResultWorkItemsById'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testCaseResultId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'WorkItemReference'
    MethodSignature
      Identifier: '
    queryTestResultWorkItems'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' workItemCategory'
        StringKeyword
      Parameter
        Identifier: ' automatedTestName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' testCaseId'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' maxCompleteDate'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' days'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' workItemCount'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'WorkItemReference'
  ClassDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' TestResultsApi'
    HeritageClause
      ExpressionWithTypeArguments
        PropertyAccessExpression
          Identifier: ' basem'
          Identifier: 'ClientApiBase'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' ITestResultsApi'
    Constructor
      Parameter
        Identifier: 'baseUrl'
        StringKeyword
      Parameter
        Identifier: ' handlers'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' VsoBaseInterfaces'
              Identifier: 'IRequestHandler'
      Parameter
        Identifier: ' options'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' VsoBaseInterfaces'
            Identifier: 'IRequestOptions'
    PropertyDeclaration
      StaticKeyword
      ReadonlyKeyword
      Identifier: ' RESOURCE_AREA_ID'
      StringLiteral
    MethodDeclaration
      Identifier: '
    /**
     * @param {Contracts.TestAttachmentRequestModel} attachmentRequestModel
     * @param {string} project - Project ID or project name
     * @param {number} runId
     * @param {number} testCaseResultId
     * @param {number} iterationId
     * @param {string} actionPath
     */
    createTestIterationResultAttachment'
      Parameter
        Identifier: 'attachmentRequestModel'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestAttachmentRequestModel'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testCaseResultId'
        NumberKeyword
      Parameter
        Identifier: ' iterationId'
        NumberKeyword
      Parameter
        Identifier: ' actionPath'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestAttachmentReference'
    MethodDeclaration
      Identifier: '
    /**
     * @param {Contracts.TestAttachmentRequestModel} attachmentRequestModel
     * @param {string} project - Project ID or project name
     * @param {number} runId
     * @param {number} testCaseResultId
     */
    createTestResultAttachment'
      Parameter
        Identifier: 'attachmentRequestModel'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestAttachmentRequestModel'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testCaseResultId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestAttachmentReference'
    MethodDeclaration
      Identifier: '
    /**
     * @param {Contracts.TestAttachmentRequestModel} attachmentRequestModel
     * @param {string} project - Project ID or project name
     * @param {number} runId
     * @param {number} testCaseResultId
     * @param {number} testSubResultId
     */
    createTestSubResultAttachment'
      Parameter
        Identifier: 'attachmentRequestModel'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestAttachmentRequestModel'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testCaseResultId'
        NumberKeyword
      Parameter
        Identifier: ' testSubResultId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestAttachmentReference'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} runId
     * @param {number} testCaseResultId
     * @param {number} attachmentId
     */
    deleteTestResultAttachment'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testCaseResultId'
        NumberKeyword
      Parameter
        Identifier: ' attachmentId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Returns a test iteration attachment
     *
     * @param {string} project - Project ID or project name
     * @param {number} runId
     * @param {number} testCaseResultId
     * @param {number} attachmentId
     * @param {number} iterationId
     */
    getTestIterationAttachmentContent'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testCaseResultId'
        NumberKeyword
      Parameter
        Identifier: ' attachmentId'
        NumberKeyword
      Parameter
        Identifier: ' iterationId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * Returns a test iteration attachment
     *
     * @param {string} project - Project ID or project name
     * @param {number} runId
     * @param {number} testCaseResultId
     * @param {number} attachmentId
     * @param {number} iterationId
     */
    getTestIterationAttachmentZip'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testCaseResultId'
        NumberKeyword
      Parameter
        Identifier: ' attachmentId'
        NumberKeyword
      Parameter
        Identifier: ' iterationId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * Returns a test result attachment
     *
     * @param {string} project - Project ID or project name
     * @param {number} runId
     * @param {number} testCaseResultId
     * @param {number} attachmentId
     */
    getTestResultAttachmentContent'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testCaseResultId'
        NumberKeyword
      Parameter
        Identifier: ' attachmentId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} runId
     * @param {number} testCaseResultId
     */
    getTestResultAttachments'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testCaseResultId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestAttachment'
    MethodDeclaration
      Identifier: '
    /**
     * Returns a test result attachment
     *
     * @param {string} project - Project ID or project name
     * @param {number} runId
     * @param {number} testCaseResultId
     * @param {number} attachmentId
     */
    getTestResultAttachmentZip'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testCaseResultId'
        NumberKeyword
      Parameter
        Identifier: ' attachmentId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * Returns a test sub result attachment
     *
     * @param {string} project - Project ID or project name
     * @param {number} runId
     * @param {number} testCaseResultId
     * @param {number} attachmentId
     * @param {number} testSubResultId
     */
    getTestSubResultAttachmentContent'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testCaseResultId'
        NumberKeyword
      Parameter
        Identifier: ' attachmentId'
        NumberKeyword
      Parameter
        Identifier: ' testSubResultId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * Returns attachment references for test sub result.
     *
     * @param {string} project - Project ID or project name
     * @param {number} runId
     * @param {number} testCaseResultId
     * @param {number} testSubResultId
     */
    getTestSubResultAttachments'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testCaseResultId'
        NumberKeyword
      Parameter
        Identifier: ' testSubResultId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestAttachment'
    MethodDeclaration
      Identifier: '
    /**
     * Returns a test sub result attachment
     *
     * @param {string} project - Project ID or project name
     * @param {number} runId
     * @param {number} testCaseResultId
     * @param {number} attachmentId
     * @param {number} testSubResultId
     */
    getTestSubResultAttachmentZip'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testCaseResultId'
        NumberKeyword
      Parameter
        Identifier: ' attachmentId'
        NumberKeyword
      Parameter
        Identifier: ' testSubResultId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * @param {Contracts.TestAttachmentRequestModel} attachmentRequestModel
     * @param {string} project - Project ID or project name
     * @param {number} runId
     */
    createTestRunAttachment'
      Parameter
        Identifier: 'attachmentRequestModel'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestAttachmentRequestModel'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestAttachmentReference'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} runId
     * @param {number} attachmentId
     */
    deleteTestRunAttachment'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' attachmentId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Returns a test run attachment
     *
     * @param {string} project - Project ID or project name
     * @param {number} runId
     * @param {number} attachmentId
     */
    getTestRunAttachmentContent'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' attachmentId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} runId
     */
    getTestRunAttachments'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestAttachment'
    MethodDeclaration
      Identifier: '
    /**
     * Returns a test run attachment
     *
     * @param {string} project - Project ID or project name
     * @param {number} runId
     * @param {number} attachmentId
     */
    getTestRunAttachmentZip'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' attachmentId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} runId
     * @param {number} testCaseResultId
     */
    getBugsLinkedToTestResult'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testCaseResultId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'WorkItemReference'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} buildId
     */
    fetchSourceCodeCoverageReport'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' buildId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'SourceViewBuildCoverage'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} buildId
     * @param {number} flags
     */
    getBuildCodeCoverage'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' buildId'
        NumberKeyword
      Parameter
        Identifier: ' flags'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'BuildCoverage'
    MethodDeclaration
      Identifier: '
    /**
     * http://(tfsserver):8080/tfs/DefaultCollection/_apis/test/CodeCoverage?buildId=10&deltaBuildId=9 Request: build id and delta build id (optional)
     *
     * @param {string} project - Project ID or project name
     * @param {number} buildId
     * @param {number} deltaBuildId
     */
    getCodeCoverageSummary'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' buildId'
        NumberKeyword
      Parameter
        Identifier: ' deltaBuildId'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'CodeCoverageSummary'
    MethodDeclaration
      Identifier: '
    /**
     * http://(tfsserver):8080/tfs/DefaultCollection/_apis/test/CodeCoverage?buildId=10 Request: Json of code coverage summary
     *
     * @param {string} project - Project ID or project name
     * @param {number} buildId
     * @param {Contracts.CodeCoverageData} coverageData
     */
    updateCodeCoverageSummary'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' buildId'
        NumberKeyword
      Parameter
        Identifier: ' coverageData'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'CodeCoverageData'
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} runId
     * @param {number} flags
     */
    getTestRunCodeCoverage'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' flags'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestRunCoverage'
    MethodDeclaration
      Identifier: '
    /**
     * @param {Contracts.CustomTestFieldDefinition[]} newFields
     * @param {string} project - Project ID or project name
     */
    addCustomFields'
      Parameter
        Identifier: 'newFields'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' Contracts'
              Identifier: 'CustomTestFieldDefinition'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'CustomTestFieldDefinition'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {Contracts.CustomTestFieldScope} scopeFilter
     */
    queryCustomFields'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' scopeFilter'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'CustomTestFieldScope'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'CustomTestFieldDefinition'
    MethodDeclaration
      Identifier: '
    /**
     * Get file coverage for the specified file
     *
     * @param {Contracts.FileCoverageRequest} fileCoverageRequest - File details with pull request iteration context
     * @param {string} project - Project ID or project name
     */
    getFileLevelCodeCoverage'
      Parameter
        Identifier: 'fileCoverageRequest'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'FileCoverageRequest'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} buildDefinitionId
     * @param {Date} minBuildCreatedDate
     */
    getFlakyTestResultsByBuildDefinitionId'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' buildDefinitionId'
        NumberKeyword
      Parameter
        Identifier: ' minBuildCreatedDate'
        TypeReference
          Identifier: ' Date'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestCaseResult'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} runId
     */
    getFlakyTestResultsByTestRun'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestCaseResult'
    MethodDeclaration
      Identifier: '
    /**
     * @param {Contracts.ResultsFilter} filter
     * @param {string} project - Project ID or project name
     */
    queryTestResultHistory'
      Parameter
        Identifier: 'filter'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'ResultsFilter'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestResultHistory'
    MethodDeclaration
      Identifier: '
    /**
     * Get test run message logs
     *
     * @param {string} project - Project ID or project name
     * @param {number} runId - ID of the run to get.
     */
    getTestRunMessageLogs'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestMessageLogDetails'
    MethodDeclaration
      Identifier: '
    /**
     * Get summary of test results.
     *
     * @param {string} project - Project ID or project name
     * @param {number} pipelineId - Pipeline Id. This is same as build Id.
     * @param {string} stageName - Name of the stage. Maximum supported length for name is 256 character.
     * @param {string} phaseName - Name of the phase. Maximum supported length for name is 256 character.
     * @param {string} jobName - Matrixing in YAML generates copies of a job with different inputs in matrix. JobName is the name of those input. Maximum supported length for name is 256 character.
     * @param {Contracts.Metrics[]} metricNames
     * @param {boolean} groupByNode - Group summary for each node of the pipleine heirarchy
     */
    getTestPipelineMetrics'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' pipelineId'
        NumberKeyword
      Parameter
        Identifier: ' stageName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' phaseName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' jobName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' metricNames'
        QuestionToken
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' Contracts'
              Identifier: 'Metrics'
      Parameter
        Identifier: ' groupByNode'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'PipelineTestMetrics'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} buildId
     * @param {string} publishContext
     * @param {string} groupBy
     * @param {string} filter
     * @param {string} orderby
     * @param {boolean} shouldIncludeResults
     * @param {boolean} queryRunSummaryForInProgress
     */
    getTestResultDetailsForBuild'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' buildId'
        NumberKeyword
      Parameter
        Identifier: ' publishContext'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' groupBy'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' filter'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' orderby'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' shouldIncludeResults'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' queryRunSummaryForInProgress'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestResultsDetails'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} releaseId
     * @param {number} releaseEnvId
     * @param {string} publishContext
     * @param {string} groupBy
     * @param {string} filter
     * @param {string} orderby
     * @param {boolean} shouldIncludeResults
     * @param {boolean} queryRunSummaryForInProgress
     */
    getTestResultDetailsForRelease'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' releaseEnvId'
        NumberKeyword
      Parameter
        Identifier: ' publishContext'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' groupBy'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' filter'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' orderby'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' shouldIncludeResults'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' queryRunSummaryForInProgress'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestResultsDetails'
    MethodDeclaration
      Identifier: '
    /**
     * @param {Contracts.TestResultDocument} document
     * @param {string} project - Project ID or project name
     * @param {number} runId
     */
    publishTestResultDocument'
      Parameter
        Identifier: 'document'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestResultDocument'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestResultDocument'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} buildId
     * @param {string} publishContext
     * @param {string[]} fields
     * @param {string} continuationToken
     */
    getResultGroupsByBuild'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' buildId'
        NumberKeyword
      Parameter
        Identifier: ' publishContext'
        StringKeyword
      Parameter
        Identifier: ' fields'
        QuestionToken
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'FieldDetailsForTestResults'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} releaseId
     * @param {string} publishContext
     * @param {number} releaseEnvId
     * @param {string[]} fields
     * @param {string} continuationToken
     */
    getResultGroupsByRelease'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' publishContext'
        StringKeyword
      Parameter
        Identifier: ' releaseEnvId'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' fields'
        QuestionToken
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'FieldDetailsForTestResults'
    MethodDeclaration
      Identifier: '
    /**
     * Get list of test Result meta data details for corresponding testcasereferenceId
     *
     * @param {string[]} testCaseReferenceIds - TestCaseReference Ids of the test Result to be queried, comma separated list of valid ids (limit no. of ids 200).
     * @param {string} project - Project ID or project name
     * @param {Contracts.ResultMetaDataDetails} detailsToInclude - Details to include with test results metadata. Default is None. Other values are FlakyIdentifiers.
     */
    queryTestResultsMetaData'
      Parameter
        Identifier: 'testCaseReferenceIds'
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' detailsToInclude'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'ResultMetaDataDetails'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestResultMetaData'
    MethodDeclaration
      Identifier: '
    /**
     * Update properties of test result meta data
     *
     * @param {Contracts.TestResultMetaDataUpdateInput} testResultMetaDataUpdateInput - TestResultMetaData update input TestResultMetaDataUpdateInput
     * @param {string} project - Project ID or project name
     * @param {number} testCaseReferenceId - TestCaseReference Id of Test Result to be updated.
     */
    updateTestResultsMetaData'
      Parameter
        Identifier: 'testResultMetaDataUpdateInput'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestResultMetaDataUpdateInput'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' testCaseReferenceId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestResultMetaData'
    MethodDeclaration
      Identifier: '
    /**
     * @param {Contracts.TestResultsQuery} query
     * @param {string} project - Project ID or project name
     */
    getTestResultsByQuery'
      Parameter
        Identifier: 'query'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestResultsQuery'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestResultsQuery'
    MethodDeclaration
      Identifier: '
    /**
     * @param {Contracts.QueryModel} queryModel
     * @param {string} project - Project ID or project name
     * @param {boolean} includeResultDetails
     * @param {boolean} includeIterationDetails
     * @param {number} skip
     * @param {number} top
     */
    getTestResultsByQueryWiql'
      Parameter
        Identifier: 'queryModel'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'QueryModel'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' includeResultDetails'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' includeIterationDetails'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' skip'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestCaseResult'
    MethodDeclaration
      Identifier: '
    /**
     * @param {Contracts.TestCaseResult[]} results
     * @param {string} project - Project ID or project name
     * @param {number} runId
     */
    addTestResultsToTestRun'
      Parameter
        Identifier: 'results'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' Contracts'
              Identifier: 'TestCaseResult'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestCaseResult'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} runId
     * @param {number} testResultId
     * @param {Contracts.ResultDetails} detailsToInclude
     */
    getTestResultById'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testResultId'
        NumberKeyword
      Parameter
        Identifier: ' detailsToInclude'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'ResultDetails'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestCaseResult'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} runId
     * @param {Contracts.ResultDetails} detailsToInclude
     * @param {number} skip
     * @param {number} top
     * @param {Contracts.TestOutcome[]} outcomes
     * @param {boolean} newTestsOnly
     */
    getTestResults'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' detailsToInclude'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'ResultDetails'
      Parameter
        Identifier: ' skip'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' outcomes'
        QuestionToken
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' Contracts'
              Identifier: 'TestOutcome'
      Parameter
        Identifier: ' newTestsOnly'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestCaseResult'
    MethodDeclaration
      Identifier: '
    /**
     * @param {Contracts.TestCaseResult[]} results
     * @param {string} project - Project ID or project name
     * @param {number} runId
     */
    updateTestResults'
      Parameter
        Identifier: 'results'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' Contracts'
              Identifier: 'TestCaseResult'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestCaseResult'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} buildId
     * @param {string} publishContext
     * @param {Contracts.TestOutcome[]} outcomes
     * @param {number} top
     * @param {string} continuationToken
     */
    getTestResultsByBuild'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' buildId'
        NumberKeyword
      Parameter
        Identifier: ' publishContext'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' outcomes'
        QuestionToken
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' Contracts'
              Identifier: 'TestOutcome'
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'ShallowTestCaseResult'
    MethodDeclaration
      Identifier: '
    /**
     * Get a list of results.
     *
     * @param {string} project - Project ID or project name
     * @param {number} pipelineId - Pipeline Id. This is same as build Id.
     * @param {string} stageName - Name of the stage. Maximum supported length for name is 256 character.
     * @param {string} phaseName - Name of the phase. Maximum supported length for name is 256 character.
     * @param {string} jobName - Matrixing in YAML generates copies of a job with different inputs in matrix. JobName is the name of those input. Maximum supported length for name is 256 character.
     * @param {Contracts.TestOutcome[]} outcomes - List of outcome of results
     * @param {number} top - Maximum number of results to return
     * @param {String} continuationToken - Header to pass the continuationToken
     */
    getTestResultsByPipeline'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' pipelineId'
        NumberKeyword
      Parameter
        Identifier: ' stageName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' phaseName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' jobName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' outcomes'
        QuestionToken
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' Contracts'
              Identifier: 'TestOutcome'
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'ShallowTestCaseResult'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} releaseId
     * @param {number} releaseEnvid
     * @param {string} publishContext
     * @param {Contracts.TestOutcome[]} outcomes
     * @param {number} top
     * @param {string} continuationToken
     */
    getTestResultsByRelease'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' releaseEnvid'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' publishContext'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' outcomes'
        QuestionToken
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' Contracts'
              Identifier: 'TestOutcome'
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'ShallowTestCaseResult'
    MethodDeclaration
      Identifier: '
    /**
     * Get all the available groups details and for these groups get failed and aborted results.
     *
     * @param {string} project - Project ID or project name
     * @param {number} pipelineId - Pipeline Id. This is same as build Id.
     * @param {string} stageName - Name of the stage. Maximum supported length for name is 256 character.
     * @param {string} phaseName - Name of the phase. Maximum supported length for name is 256 character.
     * @param {string} jobName - Matrixing in YAML generates copies of a job with different inputs in matrix. JobName is the name of those input. Maximum supported length for name is 256 character.
     * @param {boolean} shouldIncludeFailedAndAbortedResults - If true, it will return Ids of failed and aborted results for each test group
     * @param {boolean} queryGroupSummaryForInProgress - If true, it will calculate summary for InProgress runs as well.
     */
    testResultsGroupDetails'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' pipelineId'
        NumberKeyword
      Parameter
        Identifier: ' stageName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' phaseName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' jobName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' shouldIncludeFailedAndAbortedResults'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' queryGroupSummaryForInProgress'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestResultsDetails'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} buildId
     * @param {string} publishContext
     * @param {boolean} includeFailureDetails
     * @param {Contracts.BuildReference} buildToCompare
     */
    queryTestResultsReportForBuild'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' buildId'
        NumberKeyword
      Parameter
        Identifier: ' publishContext'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' includeFailureDetails'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' buildToCompare'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'BuildReference'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestResultSummary'
    MethodDeclaration
      Identifier: '
    /**
     * Get summary of test results.
     *
     * @param {string} project - Project ID or project name
     * @param {number} pipelineId - Pipeline Id. This is same as build Id.
     * @param {string} stageName - Name of the stage. Maximum supported length for name is 256 character.
     * @param {string} phaseName - Name of the phase. Maximum supported length for name is 256 character.
     * @param {string} jobName - Matrixing in YAML generates copies of a job with different inputs in matrix. JobName is the name of those input. Maximum supported length for name is 256 character.
     * @param {boolean} includeFailureDetails - If true returns failure insights
     */
    queryTestResultsReportForPipeline'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' pipelineId'
        NumberKeyword
      Parameter
        Identifier: ' stageName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' phaseName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' jobName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' includeFailureDetails'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestResultSummary'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} releaseId
     * @param {number} releaseEnvId
     * @param {string} publishContext
     * @param {boolean} includeFailureDetails
     * @param {Contracts.ReleaseReference} releaseToCompare
     */
    queryTestResultsReportForRelease'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' releaseEnvId'
        NumberKeyword
      Parameter
        Identifier: ' publishContext'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' includeFailureDetails'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' releaseToCompare'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'ReleaseReference'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestResultSummary'
    MethodDeclaration
      Identifier: '
    /**
     * @param {Contracts.ReleaseReference[]} releases
     * @param {string} project - Project ID or project name
     */
    queryTestResultsSummaryForReleases'
      Parameter
        Identifier: 'releases'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' Contracts'
              Identifier: 'ReleaseReference'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestResultSummary'
    MethodDeclaration
      Identifier: '
    /**
     * @param {Contracts.TestResultsContext} resultsContext
     * @param {string} project - Project ID or project name
     * @param {number[]} workItemIds
     */
    queryTestSummaryByRequirement'
      Parameter
        Identifier: 'resultsContext'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestResultsContext'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' workItemIds'
        QuestionToken
        ArrayType
          NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestSummaryForWorkItem'
    MethodDeclaration
      Identifier: '
    /**
     * @param {Contracts.TestResultTrendFilter} filter
     * @param {string} project - Project ID or project name
     */
    queryResultTrendForBuild'
      Parameter
        Identifier: 'filter'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestResultTrendFilter'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'AggregatedDataForResultTrend'
    MethodDeclaration
      Identifier: '
    /**
     * @param {Contracts.TestResultTrendFilter} filter
     * @param {string} project - Project ID or project name
     */
    queryResultTrendForRelease'
      Parameter
        Identifier: 'filter'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestResultTrendFilter'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'AggregatedDataForResultTrend'
    MethodDeclaration
      Identifier: '
    /**
     * @param {Contracts.RunCreateModel} testRun
     * @param {string} project - Project ID or project name
     */
    createTestRun'
      Parameter
        Identifier: 'testRun'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'RunCreateModel'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestRun'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} runId
     */
    deleteTestRun'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} runId
     * @param {boolean} includeDetails
     * @param {boolean} includeTags
     */
    getTestRunById'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' includeDetails'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' includeTags'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestRun'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {string} buildUri
     * @param {string} owner
     * @param {string} tmiRunId
     * @param {number} planId
     * @param {boolean} includeRunDetails
     * @param {boolean} automated
     * @param {number} skip
     * @param {number} top
     */
    getTestRuns'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' buildUri'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' owner'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' tmiRunId'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' planId'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' includeRunDetails'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' automated'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' skip'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestRun'
    MethodDeclaration
      Identifier: '
    /**
     * Query Test Runs based on filters. Mandatory fields are minLastUpdatedDate and maxLastUpdatedDate.
     *
     * @param {string} project - Project ID or project name
     * @param {Date} minLastUpdatedDate - Minimum Last Modified Date of run to be queried (Mandatory).
     * @param {Date} maxLastUpdatedDate - Maximum Last Modified Date of run to be queried (Mandatory, difference between min and max date can be atmost 7 days).
     * @param {Contracts.TestRunState} state - Current state of the Runs to be queried.
     * @param {number[]} planIds - Plan Ids of the Runs to be queried, comma separated list of valid ids.
     * @param {boolean} isAutomated - Automation type of the Runs to be queried.
     * @param {Contracts.TestRunPublishContext} publishContext - PublishContext of the Runs to be queried.
     * @param {number[]} buildIds - Build Ids of the Runs to be queried, comma separated list of valid ids.
     * @param {number[]} buildDefIds - Build Definition Ids of the Runs to be queried, comma separated list of valid ids.
     * @param {string} branchName - Source Branch name of the Runs to be queried.
     * @param {number[]} releaseIds - Release Ids of the Runs to be queried, comma separated list of valid ids.
     * @param {number[]} releaseDefIds - Release Definition Ids of the Runs to be queried, comma separated list of valid ids.
     * @param {number[]} releaseEnvIds - Release Environment Ids of the Runs to be queried, comma separated list of valid ids.
     * @param {number[]} releaseEnvDefIds - Release Environment Definition Ids of the Runs to be queried, comma separated list of valid ids.
     * @param {string} runTitle - Run Title of the Runs to be queried.
     * @param {number} top - Number of runs to be queried. Limit is 100
     * @param {string} continuationToken - continuationToken received from previous batch or null for first batch. It is not supposed to be created (or altered, if received from last batch) by user.
     */
    queryTestRuns'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' minLastUpdatedDate'
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' maxLastUpdatedDate'
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' state'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestRunState'
      Parameter
        Identifier: ' planIds'
        QuestionToken
        ArrayType
          NumberKeyword
      Parameter
        Identifier: ' isAutomated'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' publishContext'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestRunPublishContext'
      Parameter
        Identifier: ' buildIds'
        QuestionToken
        ArrayType
          NumberKeyword
      Parameter
        Identifier: ' buildDefIds'
        QuestionToken
        ArrayType
          NumberKeyword
      Parameter
        Identifier: ' branchName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' releaseIds'
        QuestionToken
        ArrayType
          NumberKeyword
      Parameter
        Identifier: ' releaseDefIds'
        QuestionToken
        ArrayType
          NumberKeyword
      Parameter
        Identifier: ' releaseEnvIds'
        QuestionToken
        ArrayType
          NumberKeyword
      Parameter
        Identifier: ' releaseEnvDefIds'
        QuestionToken
        ArrayType
          NumberKeyword
      Parameter
        Identifier: ' runTitle'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestRun'
    MethodDeclaration
      Identifier: '
    /**
     * @param {Contracts.RunUpdateModel} runUpdateModel
     * @param {string} project - Project ID or project name
     * @param {number} runId
     */
    updateTestRun'
      Parameter
        Identifier: 'runUpdateModel'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'RunUpdateModel'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestRun'
    MethodDeclaration
      Identifier: '
    /**
     * Get test run summary, used when we want to get summary of a run by outcome. Test run should be in completed state.
     *
     * @param {string} project - Project ID or project name
     * @param {number} runId - ID of the run to get.
     */
    getTestRunSummaryByOutcome'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestRunStatistic'
    MethodDeclaration
      Identifier: '
    /**
     * Get TestResultsSettings data
     *
     * @param {string} project - Project ID or project name
     * @param {Contracts.TestResultsSettingsType} settingsType
     */
    getTestResultsSettings'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' settingsType'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestResultsSettingsType'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestResultsSettings'
    MethodDeclaration
      Identifier: '
    /**
     * Update project settings of test results
     *
     * @param {Contracts.TestResultsUpdateSettings} testResultsUpdateSettings
     * @param {string} project - Project ID or project name
     */
    updatePipelinesTestSettings'
      Parameter
        Identifier: 'testResultsUpdateSettings'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestResultsUpdateSettings'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestResultsSettings'
    MethodDeclaration
      Identifier: '
    /**
     * Gets the list of results whose failure matches with the provided one.
     *
     * @param {string} project - Project ID or project name
     * @param {number} runId - id of test run
     * @param {number} testResultId - id of test result inside a test run
     * @param {number} testSubResultId - id of subresult inside a test result
     * @param {number} top - Maximum number of results to return
     * @param {String} continuationToken - Header to pass the continuationToken
     */
    getSimilarTestResults'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testResultId'
        NumberKeyword
      Parameter
        Identifier: ' testSubResultId'
        NumberKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestCaseResult'
    MethodDeclaration
      Identifier: '
    /**
     * Get test run statistics , used when we want to get summary of a run by outcome.
     *
     * @param {string} project - Project ID or project name
     * @param {number} runId - ID of the run to get.
     */
    getTestRunStatistics'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestRunStatistic'
    MethodDeclaration
      Identifier: '
    /**
     * <p>Gets the coverage status for the last successful build of a definition, optionally scoped to a specific branch</p>
     *
     * @param {string} project - Project ID or project name
     * @param {string} definition - The ID or name of the definition.
     * @param {string} branchName - The branch name.
     * @param {string} label - The String to replace the default text on the left side of the badge.
     */
    getCoverageStatusBadge'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' definition'
        StringKeyword
      Parameter
        Identifier: ' branchName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' label'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        StringKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Get all the tags in a build.
     *
     * @param {string} project - Project ID or project name
     * @param {number} buildId - Build ID
     */
    getTestTagsForBuild'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' buildId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestTag'
    MethodDeclaration
      Identifier: '
    /**
     * Get all the tags in a release.
     *
     * @param {string} project - Project ID or project name
     * @param {number} releaseId - Release ID
     * @param {number} releaseEnvId - Release environment ID
     */
    getTestTagsForRelease'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' releaseEnvId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestTag'
    MethodDeclaration
      Identifier: '
    /**
     * Update tags of a run, Tags can be Added and Deleted
     *
     * @param {Contracts.TestTagsUpdateModel} testTagsUpdateModel - TestTagsUpdateModel
     * @param {string} project - Project ID or project name
     * @param {number} runId - RunId of the run
     */
    updateTestRunTags'
      Parameter
        Identifier: 'testTagsUpdateModel'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestTagsUpdateModel'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestTag'
    MethodDeclaration
      Identifier: '
    /**
     * Get all the tags in a build.
     *
     * @param {string} project - Project ID or project name
     * @param {number} buildId - Build ID
     */
    getTestTagSummaryForBuild'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' buildId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestTagSummary'
    MethodDeclaration
      Identifier: '
    /**
     * Get all the tags in a release.
     *
     * @param {string} project - Project ID or project name
     * @param {number} releaseId - Release ID
     * @param {number} releaseEnvId - Release environment ID
     */
    getTestTagSummaryForRelease'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' releaseId'
        NumberKeyword
      Parameter
        Identifier: ' releaseEnvId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestTagSummary'
    MethodDeclaration
      Identifier: '
    /**
     * Creates an attachment in the LogStore for the specified buildId.
     *
     * @param {Contracts.TestAttachmentRequestModel} attachmentRequestModel - Contains attachment info like stream, filename, comment, attachmentType
     * @param {string} project - Project ID or project name
     * @param {number} buildId - BuildId
     */
    createBuildAttachmentInLogStore'
      Parameter
        Identifier: 'attachmentRequestModel'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestAttachmentRequestModel'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' buildId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Creates an attachment in the LogStore for the specified runId.
     *
     * @param {Contracts.TestAttachmentRequestModel} attachmentRequestModel - Contains attachment info like stream, filename, comment, attachmentType
     * @param {string} project - Project ID or project name
     * @param {number} runId - Test RunId
     */
    createTestRunLogStoreAttachment'
      Parameter
        Identifier: 'attachmentRequestModel'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestAttachmentRequestModel'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestLogStoreAttachmentReference'
    MethodDeclaration
      Identifier: '
    /**
     * Deletes the attachment with the specified filename for the specified runId from the LogStore.
     *
     * @param {string} project - Project ID or project name
     * @param {number} runId - Test RunId
     * @param {string} filename - Attachment FileName
     */
    deleteTestRunLogStoreAttachment'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' filename'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Returns the attachment with the specified filename for the specified runId from the LogStore.
     *
     * @param {string} project - Project ID or project name
     * @param {number} runId - Test RunId
     * @param {string} filename - Attachment FileName
     */
    getTestRunLogStoreAttachmentContent'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' filename'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * Returns a list of attachments for the specified runId from the LogStore.
     *
     * @param {string} project - Project ID or project name
     * @param {number} runId - Test RunId
     */
    getTestRunLogStoreAttachments'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestLogStoreAttachment'
    MethodDeclaration
      Identifier: '
    /**
     * Returns the attachment with the specified filename for the specified runId from the LogStore.
     *
     * @param {string} project - Project ID or project name
     * @param {number} runId - Test RunId
     * @param {string} filename - Attachment FileName
     */
    getTestRunLogStoreAttachmentZip'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' filename'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NodeJS'
            Identifier: 'ReadableStream'
    MethodDeclaration
      Identifier: '
    /**
     * Creates a new test failure type
     *
     * @param {Contracts.TestResultFailureTypeRequestModel} testResultFailureType
     * @param {string} project - Project ID or project name
     */
    createFailureType'
      Parameter
        Identifier: 'testResultFailureType'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestResultFailureTypeRequestModel'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestResultFailureType'
    MethodDeclaration
      Identifier: '
    /**
     * Deletes a test failure type with specified failureTypeId
     *
     * @param {string} project - Project ID or project name
     * @param {number} failureTypeId
     */
    deleteFailureType'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' failureTypeId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Returns the list of test failure types.
     *
     * @param {string} project - Project ID or project name
     */
    getFailureTypes'
      Parameter
        Identifier: 'project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestResultFailureType'
    MethodDeclaration
      Identifier: '
    /**
     * Get history of a test method using TestHistoryQuery
     *
     * @param {Contracts.TestHistoryQuery} filter - TestHistoryQuery to get history
     * @param {string} project - Project ID or project name
     */
    queryTestHistory'
      Parameter
        Identifier: 'filter'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestHistoryQuery'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestHistoryQuery'
    MethodDeclaration
      Identifier: '
    /**
     * Get list of build attachments reference
     *
     * @param {string} project - Project ID or project name
     * @param {number} buildId - Id of the build to get
     * @param {Contracts.TestLogType} type - type of the attachment to get
     * @param {string} directoryPath - directory path for which attachments are needed
     * @param {string} fileNamePrefix - file name prefix to filter the list of attachment
     * @param {boolean} fetchMetaData - Default is false, set if metadata is needed
     * @param {number} top - Number of test attachments reference to return
     * @param {String} continuationToken - Header to pass the continuationToken
     */
    getTestLogsForBuild'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' buildId'
        NumberKeyword
      Parameter
        Identifier: ' type'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestLogType'
      Parameter
        Identifier: ' directoryPath'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' fileNamePrefix'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' fetchMetaData'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestLog'
    MethodDeclaration
      Identifier: '
    /**
     * Get list of test result attachments reference
     *
     * @param {string} project - Project ID or project name
     * @param {number} runId - Id of the test run that contains the result
     * @param {number} resultId - Id of the test result
     * @param {Contracts.TestLogType} type - type of attachments to get
     * @param {string} directoryPath - directory path of attachments to get
     * @param {string} fileNamePrefix - file name prefix to filter the list of attachment
     * @param {boolean} fetchMetaData - Default is false, set if metadata is needed
     * @param {number} top - Numbe of attachments reference to return
     * @param {String} continuationToken - Header to pass the continuationToken
     */
    getTestResultLogs'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' resultId'
        NumberKeyword
      Parameter
        Identifier: ' type'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestLogType'
      Parameter
        Identifier: ' directoryPath'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' fileNamePrefix'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' fetchMetaData'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestLog'
    MethodDeclaration
      Identifier: '
    /**
     * Get list of test subresult attachments reference
     *
     * @param {string} project - Project ID or project name
     * @param {number} runId - Id of the test run that contains the results
     * @param {number} resultId - Id of the test result that contains subresult
     * @param {number} subResultId - Id of the test subresult
     * @param {Contracts.TestLogType} type - type of the attachments to get
     * @param {string} directoryPath - directory path of the attachment to get
     * @param {string} fileNamePrefix - file name prefix to filter the list of attachments
     * @param {boolean} fetchMetaData - Default is false, set if metadata is needed
     * @param {number} top - Number of attachments reference to return
     * @param {String} continuationToken - Header to pass the continuationToken
     */
    getTestSubResultLogs'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' resultId'
        NumberKeyword
      Parameter
        Identifier: ' subResultId'
        NumberKeyword
      Parameter
        Identifier: ' type'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestLogType'
      Parameter
        Identifier: ' directoryPath'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' fileNamePrefix'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' fetchMetaData'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestLog'
    MethodDeclaration
      Identifier: '
    /**
     * Get list of test run attachments reference
     *
     * @param {string} project - Project ID or project name
     * @param {number} runId - Id of the test run
     * @param {Contracts.TestLogType} type - type of the attachments to get
     * @param {string} directoryPath - directory path for which attachments are needed
     * @param {string} fileNamePrefix - file name prefix to filter the list of attachment
     * @param {boolean} fetchMetaData - Default is false, set if metadata is needed
     * @param {number} top - Number of attachments reference to return
     * @param {String} continuationToken - Header to pass the continuationToken
     */
    getTestRunLogs'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' type'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestLogType'
      Parameter
        Identifier: ' directoryPath'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' fileNamePrefix'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' fetchMetaData'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        TypeReference
          Identifier: ' String'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestLog'
    MethodDeclaration
      Identifier: '
    /**
     * Get SAS Uri of a build attachment
     *
     * @param {string} project - Project ID or project name
     * @param {number} build - Id of the build to get
     * @param {Contracts.TestLogType} type - type of the file
     * @param {string} filePath - filePath for which sas uri is needed
     */
    getTestLogStoreEndpointDetailsForBuildLog'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' build'
        NumberKeyword
      Parameter
        Identifier: ' type'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestLogType'
      Parameter
        Identifier: ' filePath'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestLogStoreEndpointDetails'
    MethodDeclaration
      Identifier: '
    /**
     * Create and Get sas uri of the build container
     *
     * @param {string} project - Project ID or project name
     * @param {number} buildId - Id of the build to get
     * @param {Contracts.TestLogStoreOperationType} testLogStoreOperationType - Type of operation to perform using sas uri
     */
    testLogStoreEndpointDetailsForBuild'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' buildId'
        NumberKeyword
      Parameter
        Identifier: ' testLogStoreOperationType'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestLogStoreOperationType'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestLogStoreEndpointDetails'
    MethodDeclaration
      Identifier: '
    /**
     * Get SAS Uri of a test results attachment
     *
     * @param {string} project - Project ID or project name
     * @param {number} runId - Id of the test run that contains result
     * @param {number} resultId - Id of the test result whose files need to be downloaded
     * @param {Contracts.TestLogType} type - type of the file
     * @param {string} filePath - filePath for which sas uri is needed
     */
    getTestLogStoreEndpointDetailsForResultLog'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' resultId'
        NumberKeyword
      Parameter
        Identifier: ' type'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestLogType'
      Parameter
        Identifier: ' filePath'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestLogStoreEndpointDetails'
    MethodDeclaration
      Identifier: '
    /**
     * Get SAS Uri of a test subresults attachment
     *
     * @param {string} project - Project ID or project name
     * @param {number} runId - Id of the test run that contains result
     * @param {number} resultId - Id of the test result that contains subresult
     * @param {number} subResultId - Id of the test subresult whose file sas uri is needed
     * @param {Contracts.TestLogType} type - type of the file
     * @param {string} filePath - filePath for which sas uri is needed
     */
    getTestLogStoreEndpointDetailsForSubResultLog'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' resultId'
        NumberKeyword
      Parameter
        Identifier: ' subResultId'
        NumberKeyword
      Parameter
        Identifier: ' type'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestLogType'
      Parameter
        Identifier: ' filePath'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestLogStoreEndpointDetails'
    MethodDeclaration
      Identifier: '
    /**
     * Create empty file for a result and Get Sas uri for the file
     *
     * @param {string} project - Project ID or project name
     * @param {number} runId - Id of the test run that contains the result
     * @param {number} resultId - Id of the test results that contains sub result
     * @param {number} subResultId - Id of the test sub result whose file sas uri is needed
     * @param {string} filePath - file path inside the sub result for which sas uri is needed
     * @param {Contracts.TestLogType} type - Type of the file for download
     */
    testLogStoreEndpointDetailsForResult'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' resultId'
        NumberKeyword
      Parameter
        Identifier: ' subResultId'
        NumberKeyword
      Parameter
        Identifier: ' filePath'
        StringKeyword
      Parameter
        Identifier: ' type'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestLogType'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestLogStoreEndpointDetails'
    MethodDeclaration
      Identifier: '
    /**
     * Get SAS Uri of a test run attachment
     *
     * @param {string} project - Project ID or project name
     * @param {number} runId - Id of the test run whose file has to be downloaded
     * @param {Contracts.TestLogType} type - type of the file
     * @param {string} filePath - filePath for which sas uri is needed
     */
    getTestLogStoreEndpointDetailsForRunLog'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' type'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestLogType'
      Parameter
        Identifier: ' filePath'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestLogStoreEndpointDetails'
    MethodDeclaration
      Identifier: '
    /**
     * Create empty file for a run and Get Sas uri for the file
     *
     * @param {string} project - Project ID or project name
     * @param {number} runId - Id of the run to get endpoint details
     * @param {Contracts.TestLogStoreOperationType} testLogStoreOperationType - Type of operation to perform using sas uri
     * @param {string} filePath - file path to create an empty file
     * @param {Contracts.TestLogType} type - Default is GeneralAttachment, type of empty file to be created
     */
    testLogStoreEndpointDetailsForRun'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testLogStoreOperationType'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestLogStoreOperationType'
      Parameter
        Identifier: ' filePath'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' type'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestLogType'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestLogStoreEndpointDetails'
    MethodDeclaration
      Identifier: '
    /**
     * Retrieves Test runs associated to a session
     *
     * @param {string} project - Project ID or project name
     * @param {number} sessionId - Id of TestResults session to obtain Test Runs for.
     */
    getTestRunsBySessionId'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' sessionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          NumberKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Creates TestResultsSession object in TCM data store
     *
     * @param {Contracts.TestResultsSession} session - Received session object.
     * @param {string} project - Project ID or project name
     */
    createTestSession'
      Parameter
        Identifier: 'session'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestResultsSession'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        NumberKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Retrieves TestResultsSession metadata object in TCM data store
     *
     * @param {string} project - Project ID or project name
     * @param {number} buildId
     */
    getTestSession'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' buildId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestResultsSession'
    MethodDeclaration
      Identifier: '
    /**
     * Retrieves TestResultsSession Layout object in TCM data store
     *
     * @param {string} project - Project ID or project name
     * @param {string} sessionId
     */
    getTestSessionLayout'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' sessionId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          AnyKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Creates Environment object in TCM data store
     *
     * @param {Contracts.TestSessionEnvironment[]} environments - Received Environment object.
     * @param {string} project - Project ID or project name
     */
    createEnvironment'
      Parameter
        Identifier: 'environments'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' Contracts'
              Identifier: 'TestSessionEnvironment'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Creates Notification object in TCM data store for a given session
     *
     * @param {Contracts.TestSessionNotification[]} notifications - Notification(s) to add for the specified sessionId
     * @param {string} project - Project ID or project name
     * @param {number} sessionId - ID of Session to add Notification
     */
    createNotification'
      Parameter
        Identifier: 'notifications'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' Contracts'
              Identifier: 'TestSessionNotification'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' sessionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          NumberKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Retrieves TestResultsSession Notification objects in TCM data store
     *
     * @param {string} project - Project ID or project name
     * @param {number} sessionId - Id of TestResults session to obtain Notifications for.
     */
    getSessionNotifications'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' sessionId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestSessionNotification'
    MethodDeclaration
      Identifier: '
    /**
     * Add Test Results to test run session
     *
     * @param {Contracts.TestCaseResult[]} results
     * @param {string} project - Project ID or project name
     * @param {number} runId - RunId of test run
     */
    addTestResultsToTestRunSession'
      Parameter
        Identifier: 'results'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' Contracts'
              Identifier: 'TestCaseResult'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestCaseResult'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} runId
     * @param {Contracts.ResultDetails} detailsToInclude
     * @param {number} skip
     * @param {number} top
     * @param {Contracts.TestOutcome[]} outcomes
     * @param {boolean} newTestsOnly
     */
    getTestSessionResults'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' detailsToInclude'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'ResultDetails'
      Parameter
        Identifier: ' skip'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' outcomes'
        QuestionToken
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' Contracts'
              Identifier: 'TestOutcome'
      Parameter
        Identifier: ' newTestsOnly'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'TestCaseResult'
    MethodDeclaration
      Identifier: '
    /**
     * Creates TestResultsMRX objects in TCM data store for existing test results
     *
     * @param {Contracts.TestCaseResult[]} results - Results object with only test results MRX properties and existing testResultId
     * @param {string} project - Project ID or project name
     * @param {number} runId - RunId of test run
     */
    updateTestResultsToTestRunSession'
      Parameter
        Identifier: 'results'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' Contracts'
              Identifier: 'TestCaseResult'
      Parameter
        Identifier: ' project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          NumberKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {Contracts.TestSettings} testSettings
     * @param {string} project - Project ID or project name
     */
    createTestSettings'
      Parameter
        Identifier: 'testSettings'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'TestSettings'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        NumberKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} testSettingsId
     */
    deleteTestSettings'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' testSettingsId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} testSettingsId
     */
    getTestSettingsById'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' testSettingsId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestSettings'
    MethodDeclaration
      Identifier: '
    /**
     * @param {Contracts.WorkItemToTestLinks} workItemToTestLinks
     * @param {string} project - Project ID or project name
     */
    addWorkItemToTestLinks'
      Parameter
        Identifier: 'workItemToTestLinks'
        TypeReference
          QualifiedName
            Identifier: ' Contracts'
            Identifier: 'WorkItemToTestLinks'
      Parameter
        Identifier: ' project'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'WorkItemToTestLinks'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {string} testName
     * @param {number} workItemId
     */
    deleteTestMethodToWorkItemLink'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' testName'
        StringKeyword
      Parameter
        Identifier: ' workItemId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        BooleanKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {string} testName
     */
    queryTestMethodLinkedWorkItems'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' testName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'Contracts'
            Identifier: 'TestToWorkItemLinks'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} project - Project ID or project name
     * @param {number} runId
     * @param {number} testCaseResultId
     */
    getTestResultWorkItemsById'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' runId'
        NumberKeyword
      Parameter
        Identifier: ' testCaseResultId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'WorkItemReference'
    MethodDeclaration
      Identifier: '
    /**
     * Query Test Result WorkItems based on filter
     *
     * @param {string} project - Project ID or project name
     * @param {string} workItemCategory - can take values Microsoft.BugCategory or all(for getting all workitems)
     * @param {string} automatedTestName
     * @param {number} testCaseId
     * @param {Date} maxCompleteDate
     * @param {number} days
     * @param {number} workItemCount
     */
    queryTestResultWorkItems'
      Parameter
        Identifier: 'project'
        StringKeyword
      Parameter
        Identifier: ' workItemCategory'
        StringKeyword
      Parameter
        Identifier: ' automatedTestName'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' testCaseId'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' maxCompleteDate'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' days'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' workItemCount'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'Contracts'
              Identifier: 'WorkItemReference'
