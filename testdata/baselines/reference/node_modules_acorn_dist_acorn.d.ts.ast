SourceFile
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Node'
    PropertySignature
      Identifier: '
  start'
      NumberKeyword
    PropertySignature
      Identifier: '
  end'
      NumberKeyword
    PropertySignature
      Identifier: '
  type'
      StringKeyword
    PropertySignature
      Identifier: '
  range'
      QuestionToken
      TupleType
        NumberKeyword
        NumberKeyword
    PropertySignature
      Identifier: '
  loc'
      QuestionToken
      UnionType
        TypeReference
          Identifier: ' SourceLocation'
        LiteralType
          NullKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SourceLocation'
    PropertySignature
      Identifier: '
  source'
      QuestionToken
      UnionType
        StringKeyword
        LiteralType
          NullKeyword
    PropertySignature
      Identifier: '
  start'
      TypeReference
        Identifier: ' Position'
    PropertySignature
      Identifier: '
  end'
      TypeReference
        Identifier: ' Position'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Position'
    PropertySignature
      Identifier: '
  /** 1-based */
  line'
      NumberKeyword
    PropertySignature
      Identifier: '
  /** 0-based */
  column'
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Identifier'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  name'
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Literal'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  value'
      QuestionToken
      UnionType
        StringKeyword
        BooleanKeyword
        LiteralType
          NullKeyword
        NumberKeyword
        TypeReference
          Identifier: ' RegExp'
        BigIntKeyword
    PropertySignature
      Identifier: '
  raw'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
  regex'
      QuestionToken
      TypeLiteral
        PropertySignature
          Identifier: '
    pattern'
          StringKeyword
        PropertySignature
          Identifier: '
    flags'
          StringKeyword
    PropertySignature
      Identifier: '
  bigint'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Program'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  body'
      TypeReference
        Identifier: ' Array'
        UnionType
          TypeReference
            Identifier: 'Statement'
          TypeReference
            Identifier: ' ModuleDeclaration'
    PropertySignature
      Identifier: '
  sourceType'
      UnionType
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Function'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  id'
      QuestionToken
      UnionType
        TypeReference
          Identifier: ' Identifier'
        LiteralType
          NullKeyword
    PropertySignature
      Identifier: '
  params'
      TypeReference
        Identifier: ' Array'
        TypeReference
          Identifier: 'Pattern'
    PropertySignature
      Identifier: '
  body'
      UnionType
        TypeReference
          Identifier: ' BlockStatement'
        TypeReference
          Identifier: ' Expression'
    PropertySignature
      Identifier: '
  generator'
      BooleanKeyword
    PropertySignature
      Identifier: '
  expression'
      BooleanKeyword
    PropertySignature
      Identifier: '
  async'
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExpressionStatement'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  expression'
      UnionType
        TypeReference
          Identifier: ' Expression'
        TypeReference
          Identifier: ' Literal'
    PropertySignature
      Identifier: '
  directive'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' BlockStatement'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  body'
      TypeReference
        Identifier: ' Array'
        TypeReference
          Identifier: 'Statement'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' EmptyStatement'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' DebuggerStatement'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WithStatement'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  object'
      TypeReference
        Identifier: ' Expression'
    PropertySignature
      Identifier: '
  body'
      TypeReference
        Identifier: ' Statement'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ReturnStatement'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  argument'
      QuestionToken
      UnionType
        TypeReference
          Identifier: ' Expression'
        LiteralType
          NullKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' LabeledStatement'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  label'
      TypeReference
        Identifier: ' Identifier'
    PropertySignature
      Identifier: '
  body'
      TypeReference
        Identifier: ' Statement'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' BreakStatement'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  label'
      QuestionToken
      UnionType
        TypeReference
          Identifier: ' Identifier'
        LiteralType
          NullKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ContinueStatement'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  label'
      QuestionToken
      UnionType
        TypeReference
          Identifier: ' Identifier'
        LiteralType
          NullKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' IfStatement'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  test'
      TypeReference
        Identifier: ' Expression'
    PropertySignature
      Identifier: '
  consequent'
      TypeReference
        Identifier: ' Statement'
    PropertySignature
      Identifier: '
  alternate'
      QuestionToken
      UnionType
        TypeReference
          Identifier: ' Statement'
        LiteralType
          NullKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SwitchStatement'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  discriminant'
      TypeReference
        Identifier: ' Expression'
    PropertySignature
      Identifier: '
  cases'
      TypeReference
        Identifier: ' Array'
        TypeReference
          Identifier: 'SwitchCase'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SwitchCase'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  test'
      QuestionToken
      UnionType
        TypeReference
          Identifier: ' Expression'
        LiteralType
          NullKeyword
    PropertySignature
      Identifier: '
  consequent'
      TypeReference
        Identifier: ' Array'
        TypeReference
          Identifier: 'Statement'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ThrowStatement'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  argument'
      TypeReference
        Identifier: ' Expression'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TryStatement'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  block'
      TypeReference
        Identifier: ' BlockStatement'
    PropertySignature
      Identifier: '
  handler'
      QuestionToken
      UnionType
        TypeReference
          Identifier: ' CatchClause'
        LiteralType
          NullKeyword
    PropertySignature
      Identifier: '
  finalizer'
      QuestionToken
      UnionType
        TypeReference
          Identifier: ' BlockStatement'
        LiteralType
          NullKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CatchClause'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  param'
      QuestionToken
      UnionType
        TypeReference
          Identifier: ' Pattern'
        LiteralType
          NullKeyword
    PropertySignature
      Identifier: '
  body'
      TypeReference
        Identifier: ' BlockStatement'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WhileStatement'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  test'
      TypeReference
        Identifier: ' Expression'
    PropertySignature
      Identifier: '
  body'
      TypeReference
        Identifier: ' Statement'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' DoWhileStatement'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  body'
      TypeReference
        Identifier: ' Statement'
    PropertySignature
      Identifier: '
  test'
      TypeReference
        Identifier: ' Expression'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ForStatement'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  init'
      QuestionToken
      UnionType
        TypeReference
          Identifier: ' VariableDeclaration'
        TypeReference
          Identifier: ' Expression'
        LiteralType
          NullKeyword
    PropertySignature
      Identifier: '
  test'
      QuestionToken
      UnionType
        TypeReference
          Identifier: ' Expression'
        LiteralType
          NullKeyword
    PropertySignature
      Identifier: '
  update'
      QuestionToken
      UnionType
        TypeReference
          Identifier: ' Expression'
        LiteralType
          NullKeyword
    PropertySignature
      Identifier: '
  body'
      TypeReference
        Identifier: ' Statement'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ForInStatement'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  left'
      UnionType
        TypeReference
          Identifier: ' VariableDeclaration'
        TypeReference
          Identifier: ' Pattern'
    PropertySignature
      Identifier: '
  right'
      TypeReference
        Identifier: ' Expression'
    PropertySignature
      Identifier: '
  body'
      TypeReference
        Identifier: ' Statement'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' FunctionDeclaration'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Function'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  id'
      TypeReference
        Identifier: ' Identifier'
    PropertySignature
      Identifier: '
  body'
      TypeReference
        Identifier: ' BlockStatement'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' VariableDeclaration'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  declarations'
      TypeReference
        Identifier: ' Array'
        TypeReference
          Identifier: 'VariableDeclarator'
    PropertySignature
      Identifier: '
  kind'
      UnionType
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' VariableDeclarator'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  id'
      TypeReference
        Identifier: ' Pattern'
    PropertySignature
      Identifier: '
  init'
      QuestionToken
      UnionType
        TypeReference
          Identifier: ' Expression'
        LiteralType
          NullKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ThisExpression'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ArrayExpression'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  elements'
      TypeReference
        Identifier: ' Array'
        UnionType
          TypeReference
            Identifier: 'Expression'
          TypeReference
            Identifier: ' SpreadElement'
          LiteralType
            NullKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ObjectExpression'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  properties'
      TypeReference
        Identifier: ' Array'
        UnionType
          TypeReference
            Identifier: 'Property'
          TypeReference
            Identifier: ' SpreadElement'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Property'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  key'
      TypeReference
        Identifier: ' Expression'
    PropertySignature
      Identifier: '
  value'
      TypeReference
        Identifier: ' Expression'
    PropertySignature
      Identifier: '
  kind'
      UnionType
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
    PropertySignature
      Identifier: '
  method'
      BooleanKeyword
    PropertySignature
      Identifier: '
  shorthand'
      BooleanKeyword
    PropertySignature
      Identifier: '
  computed'
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' FunctionExpression'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Function'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  body'
      TypeReference
        Identifier: ' BlockStatement'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' UnaryExpression'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  operator'
      TypeReference
        Identifier: ' UnaryOperator'
    PropertySignature
      Identifier: '
  prefix'
      BooleanKeyword
    PropertySignature
      Identifier: '
  argument'
      TypeReference
        Identifier: ' Expression'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' UnaryOperator'
    UnionType
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' UpdateExpression'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  operator'
      TypeReference
        Identifier: ' UpdateOperator'
    PropertySignature
      Identifier: '
  argument'
      TypeReference
        Identifier: ' Expression'
    PropertySignature
      Identifier: '
  prefix'
      BooleanKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' UpdateOperator'
    UnionType
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' BinaryExpression'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  operator'
      TypeReference
        Identifier: ' BinaryOperator'
    PropertySignature
      Identifier: '
  left'
      UnionType
        TypeReference
          Identifier: ' Expression'
        TypeReference
          Identifier: ' PrivateIdentifier'
    PropertySignature
      Identifier: '
  right'
      TypeReference
        Identifier: ' Expression'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' BinaryOperator'
    UnionType
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' AssignmentExpression'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  operator'
      TypeReference
        Identifier: ' AssignmentOperator'
    PropertySignature
      Identifier: '
  left'
      TypeReference
        Identifier: ' Pattern'
    PropertySignature
      Identifier: '
  right'
      TypeReference
        Identifier: ' Expression'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' AssignmentOperator'
    UnionType
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' LogicalExpression'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  operator'
      TypeReference
        Identifier: ' LogicalOperator'
    PropertySignature
      Identifier: '
  left'
      TypeReference
        Identifier: ' Expression'
    PropertySignature
      Identifier: '
  right'
      TypeReference
        Identifier: ' Expression'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' LogicalOperator'
    UnionType
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' MemberExpression'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  object'
      UnionType
        TypeReference
          Identifier: ' Expression'
        TypeReference
          Identifier: ' Super'
    PropertySignature
      Identifier: '
  property'
      UnionType
        TypeReference
          Identifier: ' Expression'
        TypeReference
          Identifier: ' PrivateIdentifier'
    PropertySignature
      Identifier: '
  computed'
      BooleanKeyword
    PropertySignature
      Identifier: '
  optional'
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ConditionalExpression'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  test'
      TypeReference
        Identifier: ' Expression'
    PropertySignature
      Identifier: '
  alternate'
      TypeReference
        Identifier: ' Expression'
    PropertySignature
      Identifier: '
  consequent'
      TypeReference
        Identifier: ' Expression'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CallExpression'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  callee'
      UnionType
        TypeReference
          Identifier: ' Expression'
        TypeReference
          Identifier: ' Super'
    PropertySignature
      Identifier: '
  arguments'
      TypeReference
        Identifier: ' Array'
        UnionType
          TypeReference
            Identifier: 'Expression'
          TypeReference
            Identifier: ' SpreadElement'
    PropertySignature
      Identifier: '
  optional'
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' NewExpression'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  callee'
      TypeReference
        Identifier: ' Expression'
    PropertySignature
      Identifier: '
  arguments'
      TypeReference
        Identifier: ' Array'
        UnionType
          TypeReference
            Identifier: 'Expression'
          TypeReference
            Identifier: ' SpreadElement'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SequenceExpression'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  expressions'
      TypeReference
        Identifier: ' Array'
        TypeReference
          Identifier: 'Expression'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ForOfStatement'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  left'
      UnionType
        TypeReference
          Identifier: ' VariableDeclaration'
        TypeReference
          Identifier: ' Pattern'
    PropertySignature
      Identifier: '
  right'
      TypeReference
        Identifier: ' Expression'
    PropertySignature
      Identifier: '
  body'
      TypeReference
        Identifier: ' Statement'
    PropertySignature
      Identifier: '
  await'
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Super'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SpreadElement'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  argument'
      TypeReference
        Identifier: ' Expression'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ArrowFunctionExpression'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Function'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' YieldExpression'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  argument'
      QuestionToken
      UnionType
        TypeReference
          Identifier: ' Expression'
        LiteralType
          NullKeyword
    PropertySignature
      Identifier: '
  delegate'
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TemplateLiteral'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  quasis'
      TypeReference
        Identifier: ' Array'
        TypeReference
          Identifier: 'TemplateElement'
    PropertySignature
      Identifier: '
  expressions'
      TypeReference
        Identifier: ' Array'
        TypeReference
          Identifier: 'Expression'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TaggedTemplateExpression'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  tag'
      TypeReference
        Identifier: ' Expression'
    PropertySignature
      Identifier: '
  quasi'
      TypeReference
        Identifier: ' TemplateLiteral'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TemplateElement'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  tail'
      BooleanKeyword
    PropertySignature
      Identifier: '
  value'
      TypeLiteral
        PropertySignature
          Identifier: '
    cooked'
          QuestionToken
          UnionType
            StringKeyword
            LiteralType
              NullKeyword
        PropertySignature
          Identifier: '
    raw'
          StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' AssignmentProperty'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  key'
      TypeReference
        Identifier: ' Expression'
    PropertySignature
      Identifier: '
  value'
      TypeReference
        Identifier: ' Pattern'
    PropertySignature
      Identifier: '
  kind'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  method'
      LiteralType
        FalseKeyword
    PropertySignature
      Identifier: '
  shorthand'
      BooleanKeyword
    PropertySignature
      Identifier: '
  computed'
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ObjectPattern'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  properties'
      TypeReference
        Identifier: ' Array'
        UnionType
          TypeReference
            Identifier: 'AssignmentProperty'
          TypeReference
            Identifier: ' RestElement'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ArrayPattern'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  elements'
      TypeReference
        Identifier: ' Array'
        UnionType
          TypeReference
            Identifier: 'Pattern'
          LiteralType
            NullKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' RestElement'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  argument'
      TypeReference
        Identifier: ' Pattern'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' AssignmentPattern'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  left'
      TypeReference
        Identifier: ' Pattern'
    PropertySignature
      Identifier: '
  right'
      TypeReference
        Identifier: ' Expression'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Class'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  id'
      QuestionToken
      UnionType
        TypeReference
          Identifier: ' Identifier'
        LiteralType
          NullKeyword
    PropertySignature
      Identifier: '
  superClass'
      QuestionToken
      UnionType
        TypeReference
          Identifier: ' Expression'
        LiteralType
          NullKeyword
    PropertySignature
      Identifier: '
  body'
      TypeReference
        Identifier: ' ClassBody'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ClassBody'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  body'
      TypeReference
        Identifier: ' Array'
        UnionType
          TypeReference
            Identifier: 'MethodDefinition'
          TypeReference
            Identifier: ' PropertyDefinition'
          TypeReference
            Identifier: ' StaticBlock'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' MethodDefinition'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  key'
      UnionType
        TypeReference
          Identifier: ' Expression'
        TypeReference
          Identifier: ' PrivateIdentifier'
    PropertySignature
      Identifier: '
  value'
      TypeReference
        Identifier: ' FunctionExpression'
    PropertySignature
      Identifier: '
  kind'
      UnionType
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
    PropertySignature
      Identifier: '
  computed'
      BooleanKeyword
    PropertySignature
      Identifier: '
  static'
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ClassDeclaration'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Class'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  id'
      TypeReference
        Identifier: ' Identifier'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ClassExpression'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Class'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' MetaProperty'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  meta'
      TypeReference
        Identifier: ' Identifier'
    PropertySignature
      Identifier: '
  property'
      TypeReference
        Identifier: ' Identifier'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ImportDeclaration'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  specifiers'
      TypeReference
        Identifier: ' Array'
        UnionType
          TypeReference
            Identifier: 'ImportSpecifier'
          TypeReference
            Identifier: ' ImportDefaultSpecifier'
          TypeReference
            Identifier: ' ImportNamespaceSpecifier'
    PropertySignature
      Identifier: '
  source'
      TypeReference
        Identifier: ' Literal'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ImportSpecifier'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  imported'
      UnionType
        TypeReference
          Identifier: ' Identifier'
        TypeReference
          Identifier: ' Literal'
    PropertySignature
      Identifier: '
  local'
      TypeReference
        Identifier: ' Identifier'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ImportDefaultSpecifier'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  local'
      TypeReference
        Identifier: ' Identifier'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ImportNamespaceSpecifier'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  local'
      TypeReference
        Identifier: ' Identifier'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExportNamedDeclaration'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  declaration'
      QuestionToken
      UnionType
        TypeReference
          Identifier: ' Declaration'
        LiteralType
          NullKeyword
    PropertySignature
      Identifier: '
  specifiers'
      TypeReference
        Identifier: ' Array'
        TypeReference
          Identifier: 'ExportSpecifier'
    PropertySignature
      Identifier: '
  source'
      QuestionToken
      UnionType
        TypeReference
          Identifier: ' Literal'
        LiteralType
          NullKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExportSpecifier'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  exported'
      UnionType
        TypeReference
          Identifier: ' Identifier'
        TypeReference
          Identifier: ' Literal'
    PropertySignature
      Identifier: '
  local'
      UnionType
        TypeReference
          Identifier: ' Identifier'
        TypeReference
          Identifier: ' Literal'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' AnonymousFunctionDeclaration'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Function'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  id'
      LiteralType
        NullKeyword
    PropertySignature
      Identifier: '
  body'
      TypeReference
        Identifier: ' BlockStatement'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' AnonymousClassDeclaration'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Class'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  id'
      LiteralType
        NullKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExportDefaultDeclaration'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  declaration'
      UnionType
        TypeReference
          Identifier: ' AnonymousFunctionDeclaration'
        TypeReference
          Identifier: ' FunctionDeclaration'
        TypeReference
          Identifier: ' AnonymousClassDeclaration'
        TypeReference
          Identifier: ' ClassDeclaration'
        TypeReference
          Identifier: ' Expression'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExportAllDeclaration'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  source'
      TypeReference
        Identifier: ' Literal'
    PropertySignature
      Identifier: '
  exported'
      QuestionToken
      UnionType
        TypeReference
          Identifier: ' Identifier'
        TypeReference
          Identifier: ' Literal'
        LiteralType
          NullKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' AwaitExpression'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  argument'
      TypeReference
        Identifier: ' Expression'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ChainExpression'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  expression'
      UnionType
        TypeReference
          Identifier: ' MemberExpression'
        TypeReference
          Identifier: ' CallExpression'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ImportExpression'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  source'
      TypeReference
        Identifier: ' Expression'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ParenthesizedExpression'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  expression'
      TypeReference
        Identifier: ' Expression'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' PropertyDefinition'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  key'
      UnionType
        TypeReference
          Identifier: ' Expression'
        TypeReference
          Identifier: ' PrivateIdentifier'
    PropertySignature
      Identifier: '
  value'
      QuestionToken
      UnionType
        TypeReference
          Identifier: ' Expression'
        LiteralType
          NullKeyword
    PropertySignature
      Identifier: '
  computed'
      BooleanKeyword
    PropertySignature
      Identifier: '
  static'
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' PrivateIdentifier'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  name'
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' StaticBlock'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Node'
    PropertySignature
      Identifier: '
  type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
  body'
      TypeReference
        Identifier: ' Array'
        TypeReference
          Identifier: 'Statement'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' Statement'
    UnionType
      TypeReference
        Identifier: ' ExpressionStatement'
      TypeReference
        Identifier: ' BlockStatement'
      TypeReference
        Identifier: ' EmptyStatement'
      TypeReference
        Identifier: ' DebuggerStatement'
      TypeReference
        Identifier: ' WithStatement'
      TypeReference
        Identifier: ' ReturnStatement'
      TypeReference
        Identifier: ' LabeledStatement'
      TypeReference
        Identifier: ' BreakStatement'
      TypeReference
        Identifier: ' ContinueStatement'
      TypeReference
        Identifier: ' IfStatement'
      TypeReference
        Identifier: ' SwitchStatement'
      TypeReference
        Identifier: ' ThrowStatement'
      TypeReference
        Identifier: ' TryStatement'
      TypeReference
        Identifier: ' WhileStatement'
      TypeReference
        Identifier: ' DoWhileStatement'
      TypeReference
        Identifier: ' ForStatement'
      TypeReference
        Identifier: ' ForInStatement'
      TypeReference
        Identifier: ' ForOfStatement'
      TypeReference
        Identifier: ' Declaration'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' Declaration'
    UnionType
      TypeReference
        Identifier: ' FunctionDeclaration'
      TypeReference
        Identifier: ' VariableDeclaration'
      TypeReference
        Identifier: ' ClassDeclaration'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' Expression'
    UnionType
      TypeReference
        Identifier: ' Identifier'
      TypeReference
        Identifier: ' Literal'
      TypeReference
        Identifier: ' ThisExpression'
      TypeReference
        Identifier: ' ArrayExpression'
      TypeReference
        Identifier: ' ObjectExpression'
      TypeReference
        Identifier: ' FunctionExpression'
      TypeReference
        Identifier: ' UnaryExpression'
      TypeReference
        Identifier: ' UpdateExpression'
      TypeReference
        Identifier: ' BinaryExpression'
      TypeReference
        Identifier: ' AssignmentExpression'
      TypeReference
        Identifier: ' LogicalExpression'
      TypeReference
        Identifier: ' MemberExpression'
      TypeReference
        Identifier: ' ConditionalExpression'
      TypeReference
        Identifier: ' CallExpression'
      TypeReference
        Identifier: ' NewExpression'
      TypeReference
        Identifier: ' SequenceExpression'
      TypeReference
        Identifier: ' ArrowFunctionExpression'
      TypeReference
        Identifier: ' YieldExpression'
      TypeReference
        Identifier: ' TemplateLiteral'
      TypeReference
        Identifier: ' TaggedTemplateExpression'
      TypeReference
        Identifier: ' ClassExpression'
      TypeReference
        Identifier: ' MetaProperty'
      TypeReference
        Identifier: ' AwaitExpression'
      TypeReference
        Identifier: ' ChainExpression'
      TypeReference
        Identifier: ' ImportExpression'
      TypeReference
        Identifier: ' ParenthesizedExpression'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' Pattern'
    UnionType
      TypeReference
        Identifier: ' Identifier'
      TypeReference
        Identifier: ' MemberExpression'
      TypeReference
        Identifier: ' ObjectPattern'
      TypeReference
        Identifier: ' ArrayPattern'
      TypeReference
        Identifier: ' RestElement'
      TypeReference
        Identifier: ' AssignmentPattern'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' ModuleDeclaration'
    UnionType
      TypeReference
        Identifier: ' ImportDeclaration'
      TypeReference
        Identifier: ' ExportNamedDeclaration'
      TypeReference
        Identifier: ' ExportDefaultDeclaration'
      TypeReference
        Identifier: ' ExportAllDeclaration'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' AnyNode'
    UnionType
      TypeReference
        Identifier: ' Statement'
      TypeReference
        Identifier: ' Expression'
      TypeReference
        Identifier: ' Declaration'
      TypeReference
        Identifier: ' ModuleDeclaration'
      TypeReference
        Identifier: ' Literal'
      TypeReference
        Identifier: ' Program'
      TypeReference
        Identifier: ' SwitchCase'
      TypeReference
        Identifier: ' CatchClause'
      TypeReference
        Identifier: ' Property'
      TypeReference
        Identifier: ' Super'
      TypeReference
        Identifier: ' SpreadElement'
      TypeReference
        Identifier: ' TemplateElement'
      TypeReference
        Identifier: ' AssignmentProperty'
      TypeReference
        Identifier: ' ObjectPattern'
      TypeReference
        Identifier: ' ArrayPattern'
      TypeReference
        Identifier: ' RestElement'
      TypeReference
        Identifier: ' AssignmentPattern'
      TypeReference
        Identifier: ' ClassBody'
      TypeReference
        Identifier: ' MethodDefinition'
      TypeReference
        Identifier: ' MetaProperty'
      TypeReference
        Identifier: ' ImportSpecifier'
      TypeReference
        Identifier: ' ImportDefaultSpecifier'
      TypeReference
        Identifier: ' ImportNamespaceSpecifier'
      TypeReference
        Identifier: ' ExportSpecifier'
      TypeReference
        Identifier: ' AnonymousFunctionDeclaration'
      TypeReference
        Identifier: ' AnonymousClassDeclaration'
      TypeReference
        Identifier: ' PropertyDefinition'
      TypeReference
        Identifier: ' PrivateIdentifier'
      TypeReference
        Identifier: ' StaticBlock'
      TypeReference
        Identifier: ' VariableDeclarator'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' parse'
    Parameter
      Identifier: 'input'
      StringKeyword
    Parameter
      Identifier: ' options'
      TypeReference
        Identifier: ' Options'
    TypeReference
      Identifier: ' Program'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' parseExpressionAt'
    Parameter
      Identifier: 'input'
      StringKeyword
    Parameter
      Identifier: ' pos'
      NumberKeyword
    Parameter
      Identifier: ' options'
      TypeReference
        Identifier: ' Options'
    TypeReference
      Identifier: ' Expression'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' tokenizer'
    Parameter
      Identifier: 'input'
      StringKeyword
    Parameter
      Identifier: ' options'
      TypeReference
        Identifier: ' Options'
    TypeLiteral
      MethodSignature
        Identifier: '
  getToken'
        TypeReference
          Identifier: ' Token'
      MethodSignature
        ComputedPropertyName
          PropertyAccessExpression
            Identifier: 'Symbol'
            Identifier: 'iterator'
        TypeReference
          Identifier: ' Iterator'
          TypeReference
            Identifier: 'Token'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' ecmaVersion'
    UnionType
      LiteralType
        NumericLiteral
      LiteralType
        NumericLiteral
      LiteralType
        NumericLiteral
      LiteralType
        NumericLiteral
      LiteralType
        NumericLiteral
      LiteralType
        NumericLiteral
      LiteralType
        NumericLiteral
      LiteralType
        NumericLiteral
      LiteralType
        NumericLiteral
      LiteralType
        NumericLiteral
      LiteralType
        NumericLiteral
      LiteralType
        NumericLiteral
      LiteralType
        NumericLiteral
      LiteralType
        NumericLiteral
      LiteralType
        NumericLiteral
      LiteralType
        NumericLiteral
      LiteralType
        NumericLiteral
      LiteralType
        NumericLiteral
      LiteralType
        NumericLiteral
      LiteralType
        NumericLiteral
      LiteralType
        NumericLiteral
      LiteralType
        NumericLiteral
      LiteralType
        NumericLiteral
      LiteralType
        NumericLiteral
      LiteralType
        StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Options'
    PropertySignature
      Identifier: '
  /**
   * `ecmaVersion` indicates the ECMAScript version to parse. Can be a
   * number, either in year (`2022`) or plain version number (`6`) form,
   * or `"latest"` (the latest the library supports). This influences
   * support for strict mode, the set of reserved words, and support for
   * new syntax features.
   */
  ecmaVersion'
      TypeReference
        Identifier: ' ecmaVersion'
    PropertySignature
      Identifier: '

  /**
   * `sourceType` indicates the mode the code should be parsed in.
   * Can be either `"script"` or `"module"`. This influences global
   * strict mode and parsing of `import` and `export` declarations.
   */
  sourceType'
      QuestionToken
      UnionType
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
    PropertySignature
      Identifier: '

  /**
   * a callback that will be called when a semicolon is automatically inserted.
   * @param lastTokEnd the position of the comma as an offset
   * @param lastTokEndLoc location if {@link locations} is enabled
   */
  onInsertedSemicolon'
      QuestionToken
      FunctionType
        Parameter
          Identifier: 'lastTokEnd'
          NumberKeyword
        Parameter
          Identifier: ' lastTokEndLoc'
          QuestionToken
          TypeReference
            Identifier: ' Position'
        VoidKeyword
    PropertySignature
      Identifier: '

  /**
   * similar to `onInsertedSemicolon`, but for trailing commas
   * @param lastTokEnd the position of the comma as an offset
   * @param lastTokEndLoc location if `locations` is enabled
   */
  onTrailingComma'
      QuestionToken
      FunctionType
        Parameter
          Identifier: 'lastTokEnd'
          NumberKeyword
        Parameter
          Identifier: ' lastTokEndLoc'
          QuestionToken
          TypeReference
            Identifier: ' Position'
        VoidKeyword
    PropertySignature
      Identifier: '

  /**
   * By default, reserved words are only enforced if ecmaVersion >= 5.
   * Set `allowReserved` to a boolean value to explicitly turn this on
   * an off. When this option has the value "never", reserved words
   * and keywords can also not be used as property names.
   */
  allowReserved'
      QuestionToken
      UnionType
        BooleanKeyword
        LiteralType
          StringLiteral
    PropertySignature
      Identifier: '

  /** 
   * When enabled, a return at the top level is not considered an error.
   */
  allowReturnOutsideFunction'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '

  /**
   * When enabled, import/export statements are not constrained to
   * appearing at the top of the program, and an import.meta expression
   * in a script isn't considered an error.
   */
  allowImportExportEverywhere'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '

  /**
   * By default, `await` identifiers are allowed to appear at the top-level scope only if {@link ecmaVersion} >= 2022.
   * When enabled, await identifiers are allowed to appear at the top-level scope,
   * but they are still not allowed in non-async functions.
   */
  allowAwaitOutsideFunction'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '

  /**
   * When enabled, super identifiers are not constrained to
   * appearing in methods and do not raise an error when they appear elsewhere.
   */
  allowSuperOutsideMethod'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '

  /**
   * When enabled, hashbang directive in the beginning of file is
   * allowed and treated as a line comment. Enabled by default when
   * {@link ecmaVersion} >= 2023.
   */
  allowHashBang'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '

  /**
   * By default, the parser will verify that private properties are
   * only used in places where they are valid and have been declared.
   * Set this to false to turn such checks off.
   */
  checkPrivateFields'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '

  /**
   * When `locations` is on, `loc` properties holding objects with
   * `start` and `end` properties as {@link Position} objects will be attached to the
   * nodes.
   */
  locations'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '

  /**
   * a callback that will cause Acorn to call that export function with object in the same
   * format as tokens returned from `tokenizer().getToken()`. Note
   * that you are not allowed to call the parser from the
   * callback—that will corrupt its internal state.
   */
  onToken'
      QuestionToken
      UnionType
        ParenthesizedType
          FunctionType
            Parameter
              Identifier: 'token'
              TypeReference
                Identifier: ' Token'
            VoidKeyword
        ArrayType
          TypeReference
            Identifier: ' Token'
    PropertySignature
      Identifier: '


  /**
   * This takes a export function or an array.
   * 
   * When a export function is passed, Acorn will call that export function with `(block, text, start,
   * end)` parameters whenever a comment is skipped. `block` is a
   * boolean indicating whether this is a block (`/* *\/`) comment,
   * `text` is the content of the comment, and `start` and `end` are
   * character offsets that denote the start and end of the comment.
   * When the {@link locations} option is on, two more parameters are
   * passed, the full locations of {@link Position} export type of the start and
   * end of the comments.
   * 
   * When a array is passed, each found comment of {@link Comment} export type is pushed to the array.
   * 
   * Note that you are not allowed to call the
   * parser from the callback—that will corrupt its internal state.
   */
  onComment'
      QuestionToken
      UnionType
        ParenthesizedType
          FunctionType
            Parameter
              Identifier: '
    isBlock'
              BooleanKeyword
            Parameter
              Identifier: ' text'
              StringKeyword
            Parameter
              Identifier: ' start'
              NumberKeyword
            Parameter
              Identifier: ' end'
              NumberKeyword
            Parameter
              Identifier: ' startLoc'
              QuestionToken
              TypeReference
                Identifier: ' Position'
            Parameter
              Identifier: '
    endLoc'
              QuestionToken
              TypeReference
                Identifier: ' Position'
            VoidKeyword
        ArrayType
          TypeReference
            Identifier: ' Comment'
    PropertySignature
      Identifier: '

  /**
   * Nodes have their start and end characters offsets recorded in
   * `start` and `end` properties (directly on the node, rather than
   * the `loc` object, which holds line/column data. To also add a
   * [semi-standardized][range] `range` property holding a `[start,
   * end]` array with the same numbers, set the `ranges` option to
   * `true`.
   */
  ranges'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '

  /**
   * It is possible to parse multiple files into a single AST by
   * passing the tree produced by parsing the first file as
   * `program` option in subsequent parses. This will add the
   * toplevel forms of the parsed file to the `Program` (top) node
   * of an existing parse tree.
   */
  program'
      QuestionToken
      TypeReference
        Identifier: ' Node'
    PropertySignature
      Identifier: '

  /**
   * When {@link locations} is on, you can pass this to record the source
   * file in every node's `loc` object.
   */
  sourceFile'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '

  /**
   * This value, if given, is stored in every node, whether {@link locations} is on or off.
   */
  directSourceFile'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '

  /**
   * When enabled, parenthesized expressions are represented by
   * (non-standard) ParenthesizedExpression nodes
   */
  preserveParens'
      QuestionToken
      BooleanKeyword
  ClassDeclaration
    ExportKeyword
    Identifier: ' Parser'
    PropertyDeclaration
      Identifier: '
  options'
      TypeReference
        Identifier: ' Options'
    PropertyDeclaration
      Identifier: '
  input'
      StringKeyword
    Constructor
      ProtectedKeyword
      Parameter
        Identifier: 'options'
        TypeReference
          Identifier: ' Options'
      Parameter
        Identifier: ' input'
        StringKeyword
      Parameter
        Identifier: ' startPos'
        QuestionToken
        NumberKeyword
    MethodDeclaration
      Identifier: '
  parse'
      TypeReference
        Identifier: ' Program'
    MethodDeclaration
      StaticKeyword
      Identifier: ' parse'
      Parameter
        Identifier: 'input'
        StringKeyword
      Parameter
        Identifier: ' options'
        TypeReference
          Identifier: ' Options'
      TypeReference
        Identifier: ' Program'
    MethodDeclaration
      StaticKeyword
      Identifier: ' parseExpressionAt'
      Parameter
        Identifier: 'input'
        StringKeyword
      Parameter
        Identifier: ' pos'
        NumberKeyword
      Parameter
        Identifier: ' options'
        TypeReference
          Identifier: ' Options'
      TypeReference
        Identifier: ' Expression'
    MethodDeclaration
      StaticKeyword
      Identifier: ' tokenizer'
      Parameter
        Identifier: 'input'
        StringKeyword
      Parameter
        Identifier: ' options'
        TypeReference
          Identifier: ' Options'
      TypeLiteral
        MethodSignature
          Identifier: '
    getToken'
          TypeReference
            Identifier: ' Token'
        MethodSignature
          ComputedPropertyName
            PropertyAccessExpression
              Identifier: 'Symbol'
              Identifier: 'iterator'
          TypeReference
            Identifier: ' Iterator'
            TypeReference
              Identifier: 'Token'
    MethodDeclaration
      StaticKeyword
      Identifier: ' extend'
      Parameter
        DotDotDotToken
        Identifier: 'plugins'
        ArrayType
          ParenthesizedType
            FunctionType
              Parameter
                Identifier: 'BaseParser'
                TypeQuery
                  Identifier: ' Parser'
              TypeQuery
                Identifier: ' Parser'
      TypeQuery
        Identifier: ' Parser'
  VariableStatement
    ExportKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' defaultOptions'
        TypeReference
          Identifier: ' Options'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getLineInfo'
    Parameter
      Identifier: 'input'
      StringKeyword
    Parameter
      Identifier: ' offset'
      NumberKeyword
    TypeReference
      Identifier: ' Position'
  ClassDeclaration
    ExportKeyword
    Identifier: ' TokenType'
    PropertyDeclaration
      Identifier: '
  label'
      StringKeyword
    PropertyDeclaration
      Identifier: '
  keyword'
      UnionType
        StringKeyword
        UndefinedKeyword
  VariableStatement
    ExportKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' tokTypes'
        TypeLiteral
          PropertySignature
            Identifier: '
  num'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  regexp'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  string'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  name'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  privateId'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  eof'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '

  bracketL'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  bracketR'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  braceL'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  braceR'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  parenL'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  parenR'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  comma'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  semi'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  colon'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  dot'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  question'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  questionDot'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  arrow'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  template'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  invalidTemplate'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  ellipsis'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  backQuote'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  dollarBraceL'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '

  eq'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  assign'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  incDec'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  prefix'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  logicalOR'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  logicalAND'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  bitwiseOR'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  bitwiseXOR'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  bitwiseAND'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  equality'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  relational'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  bitShift'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  plusMin'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  modulo'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  star'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  slash'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  starstar'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  coalesce'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '

  _break'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _case'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _catch'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _continue'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _debugger'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _default'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _do'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _else'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _finally'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _for'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _function'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _if'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _return'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _switch'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _throw'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _try'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _var'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _const'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _while'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _with'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _new'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _this'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _super'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _class'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _extends'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _export'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _import'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _null'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _true'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _false'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _in'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _instanceof'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _typeof'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _void'
            TypeReference
              Identifier: ' TokenType'
          PropertySignature
            Identifier: '
  _delete'
            TypeReference
              Identifier: ' TokenType'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Comment'
    PropertySignature
      Identifier: '
  type'
      UnionType
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
    PropertySignature
      Identifier: '
  value'
      StringKeyword
    PropertySignature
      Identifier: '
  start'
      NumberKeyword
    PropertySignature
      Identifier: '
  end'
      NumberKeyword
    PropertySignature
      Identifier: '
  loc'
      QuestionToken
      TypeReference
        Identifier: ' SourceLocation'
    PropertySignature
      Identifier: '
  range'
      QuestionToken
      TupleType
        NumberKeyword
        NumberKeyword
  ClassDeclaration
    ExportKeyword
    Identifier: ' Token'
    PropertyDeclaration
      Identifier: '
  type'
      TypeReference
        Identifier: ' TokenType'
    PropertyDeclaration
      Identifier: '
  start'
      NumberKeyword
    PropertyDeclaration
      Identifier: '
  end'
      NumberKeyword
    PropertyDeclaration
      Identifier: '
  loc'
      QuestionToken
      TypeReference
        Identifier: ' SourceLocation'
    PropertyDeclaration
      Identifier: '
  range'
      QuestionToken
      TupleType
        NumberKeyword
        NumberKeyword
  VariableStatement
    ExportKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' version'
        StringKeyword
