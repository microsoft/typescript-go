SourceFile
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' File'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' SpecIterableIterator'
    StringLiteral
  TypeAliasDeclaration
    DeclareKeyword
    Identifier: ' FormDataEntryValue'
    UnionType
      StringKeyword
      TypeReference
        Identifier: ' File'
  ClassDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' FormData'
    MethodDeclaration
      Identifier: '
  /**
   * Appends a new value onto an existing key inside a FormData object,
   * or adds the key if it does not already exist.
   *
   * The difference between `set()` and `append()` is that if the specified key already exists, `set()` will overwrite all existing values with the new one, whereas `append()` will append the new value onto the end of the existing set of values.
   *
   * @param name The name of the field whose data is contained in `value`.
   * @param value The field's value. This can be [`Blob`](https://developer.mozilla.org/en-US/docs/Web/API/Blob)
    or [`File`](https://developer.mozilla.org/en-US/docs/Web/API/File). If none of these are specified the value is converted to a string.
   * @param fileName The filename reported to the server, when a Blob or File is passed as the second parameter. The default filename for Blob objects is "blob". The default filename for File objects is the file's filename.
   */
  append'
      Parameter
        Identifier: 'name'
        StringKeyword
      Parameter
        Identifier: ' value'
        UnknownKeyword
      Parameter
        Identifier: ' fileName'
        QuestionToken
        StringKeyword
      VoidKeyword
    MethodDeclaration
      Identifier: '

  /**
   * Set a new value for an existing key inside FormData,
   * or add the new field if it does not already exist.
   *
   * @param name The name of the field whose data is contained in `value`.
   * @param value The field's value. This can be [`Blob`](https://developer.mozilla.org/en-US/docs/Web/API/Blob)
    or [`File`](https://developer.mozilla.org/en-US/docs/Web/API/File). If none of these are specified the value is converted to a string.
   * @param fileName The filename reported to the server, when a Blob or File is passed as the second parameter. The default filename for Blob objects is "blob". The default filename for File objects is the file's filename.
   *
   */
  set'
      Parameter
        Identifier: 'name'
        StringKeyword
      Parameter
        Identifier: ' value'
        UnknownKeyword
      Parameter
        Identifier: ' fileName'
        QuestionToken
        StringKeyword
      VoidKeyword
    MethodDeclaration
      Identifier: '

  /**
   * Returns the first value associated with a given key from within a `FormData` object.
   * If you expect multiple values and want all of them, use the `getAll()` method instead.
   *
   * @param {string} name A name of the value you want to retrieve.
   *
   * @returns A `FormDataEntryValue` containing the value. If the key doesn't exist, the method returns null.
   */
  get'
      Parameter
        Identifier: 'name'
        StringKeyword
      UnionType
        TypeReference
          Identifier: ' FormDataEntryValue'
        LiteralType
          NullKeyword
    MethodDeclaration
      Identifier: '

  /**
   * Returns all the values associated with a given key from within a `FormData` object.
   *
   * @param {string} name A name of the value you want to retrieve.
   *
   * @returns An array of `FormDataEntryValue` whose key matches the value passed in the `name` parameter. If the key doesn't exist, the method returns an empty list.
   */
  getAll'
      Parameter
        Identifier: 'name'
        StringKeyword
      ArrayType
        TypeReference
          Identifier: ' FormDataEntryValue'
    MethodDeclaration
      Identifier: '

  /**
   * Returns a boolean stating whether a `FormData` object contains a certain key.
   *
   * @param name A string representing the name of the key you want to test for.
   *
   * @return A boolean value.
   */
  has'
      Parameter
        Identifier: 'name'
        StringKeyword
      BooleanKeyword
    MethodDeclaration
      Identifier: '

  /**
   * Deletes a key and its value(s) from a `FormData` object.
   *
   * @param name The name of the key you want to delete.
   */
  delete'
      Parameter
        Identifier: 'name'
        StringKeyword
      VoidKeyword
    PropertyDeclaration
      Identifier: '

  /**
   * Executes given callback function for each field of the FormData instance
   */
  forEach'
      FunctionType
        Parameter
          Identifier: '
    callbackfn'
          FunctionType
            Parameter
              Identifier: 'value'
              TypeReference
                Identifier: ' FormDataEntryValue'
            Parameter
              Identifier: ' key'
              StringKeyword
            Parameter
              Identifier: ' iterable'
              TypeReference
                Identifier: ' FormData'
            VoidKeyword
        Parameter
          Identifier: '
    thisArg'
          QuestionToken
          UnknownKeyword
        VoidKeyword
    PropertyDeclaration
      Identifier: '

  /**
   * Returns an [`iterator`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols) allowing to go through all keys contained in this `FormData` object.
   * Each key is a `string`.
   */
  keys'
      FunctionType
        TypeReference
          Identifier: ' SpecIterableIterator'
          StringKeyword
    PropertyDeclaration
      Identifier: '

  /**
   * Returns an [`iterator`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols) allowing to go through all values contained in this object `FormData` object.
   * Each value is a [`FormDataValue`](https://developer.mozilla.org/en-US/docs/Web/API/FormDataEntryValue).
   */
  values'
      FunctionType
        TypeReference
          Identifier: ' SpecIterableIterator'
          TypeReference
            Identifier: 'FormDataEntryValue'
    PropertyDeclaration
      Identifier: '

  /**
   * Returns an [`iterator`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols) allowing to go through the `FormData` key/value pairs.
   * The key of each pair is a string; the value is a [`FormDataValue`](https://developer.mozilla.org/en-US/docs/Web/API/FormDataEntryValue).
   */
  entries'
      FunctionType
        TypeReference
          Identifier: ' SpecIterableIterator'
          TupleType
            StringKeyword
            TypeReference
              Identifier: ' FormDataEntryValue'
    PropertyDeclaration
      ComputedPropertyName
        PropertyAccessExpression
          Identifier: 'Symbol'
          Identifier: 'iterator'
      FunctionType
        TypeReference
          Identifier: ' SpecIterableIterator'
          TupleType
            StringKeyword
            TypeReference
              Identifier: ' FormDataEntryValue'
    PropertyDeclaration
      ReadonlyKeyword
      ComputedPropertyName
        PropertyAccessExpression
          Identifier: 'Symbol'
          Identifier: 'toStringTag'
      StringKeyword
