SourceFile
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: '
    __String'
        ImportSpecifier
          Identifier: '
    ANONYMOUS'
        ImportSpecifier
          Identifier: '
    ApplicableRefactorInfo'
        ImportSpecifier
          Identifier: '
    arrayFrom'
        ImportSpecifier
          Identifier: '
    assertType'
        ImportSpecifier
          Identifier: '
    BindingElement'
        ImportSpecifier
          Identifier: '
    Block'
        ImportSpecifier
          Identifier: '
    BreakStatement'
        ImportSpecifier
          Identifier: '
    CancellationToken'
        ImportSpecifier
          Identifier: '
    canHaveModifiers'
        ImportSpecifier
          Identifier: '
    CharacterCodes'
        ImportSpecifier
          Identifier: '
    ClassElement'
        ImportSpecifier
          Identifier: '
    ClassLikeDeclaration'
        ImportSpecifier
          Identifier: '
    codefix'
        ImportSpecifier
          Identifier: '
    compareProperties'
        ImportSpecifier
          Identifier: '
    compareStringsCaseSensitive'
        ImportSpecifier
          Identifier: '
    compareValues'
        ImportSpecifier
          Identifier: '
    contains'
        ImportSpecifier
          Identifier: '
    ContinueStatement'
        ImportSpecifier
          Identifier: '
    createDiagnosticForNode'
        ImportSpecifier
          Identifier: '
    createFileDiagnostic'
        ImportSpecifier
          Identifier: '
    Debug'
        ImportSpecifier
          Identifier: '
    Declaration'
        ImportSpecifier
          Identifier: '
    Diagnostic'
        ImportSpecifier
          Identifier: '
    DiagnosticCategory'
        ImportSpecifier
          Identifier: '
    DiagnosticMessage'
        ImportSpecifier
          Identifier: '
    Diagnostics'
        ImportSpecifier
          Identifier: '
    EmitFlags'
        ImportSpecifier
          Identifier: '
    emptyArray'
        ImportSpecifier
          Identifier: '
    EntityName'
        ImportSpecifier
          Identifier: '
    Expression'
        ImportSpecifier
          Identifier: '
    ExpressionStatement'
        ImportSpecifier
          Identifier: '
    factory'
        ImportSpecifier
          Identifier: '
    find'
        ImportSpecifier
          Identifier: '
    findAncestor'
        ImportSpecifier
          Identifier: '
    findFirstNonJsxWhitespaceToken'
        ImportSpecifier
          Identifier: '
    findTokenOnLeftOfPosition'
        ImportSpecifier
          Identifier: '
    first'
        ImportSpecifier
          Identifier: '
    firstOrUndefined'
        ImportSpecifier
          Identifier: '
    forEachChild'
        ImportSpecifier
          Identifier: '
    formatStringFromArgs'
        ImportSpecifier
          Identifier: '
    FunctionDeclaration'
        ImportSpecifier
          Identifier: '
    FunctionLikeDeclaration'
        ImportSpecifier
          Identifier: '
    getContainingClass'
        ImportSpecifier
          Identifier: '
    getContainingFunction'
        ImportSpecifier
          Identifier: '
    getEffectiveTypeParameterDeclarations'
        ImportSpecifier
          Identifier: '
    getEmitScriptTarget'
        ImportSpecifier
          Identifier: '
    getEnclosingBlockScopeContainer'
        ImportSpecifier
          Identifier: '
    getLineAndCharacterOfPosition'
        ImportSpecifier
          Identifier: '
    getLocaleSpecificMessage'
        ImportSpecifier
          Identifier: '
    getModifiers'
        ImportSpecifier
          Identifier: '
    getNodeId'
        ImportSpecifier
          Identifier: '
    getParentNodeInSpan'
        ImportSpecifier
          Identifier: '
    getRefactorContextSpan'
        ImportSpecifier
          Identifier: '
    getRenameLocation'
        ImportSpecifier
          Identifier: '
    getSymbolId'
        ImportSpecifier
          Identifier: '
    getSynthesizedDeepClone'
        ImportSpecifier
          Identifier: '
    getThisContainer'
        ImportSpecifier
          Identifier: '
    getUniqueName'
        ImportSpecifier
          Identifier: '
    hasEffectiveModifier'
        ImportSpecifier
          Identifier: '
    hasSyntacticModifier'
        ImportSpecifier
          Identifier: '
    Identifier'
        ImportSpecifier
          Identifier: '
    InternalNodeBuilderFlags'
        ImportSpecifier
          Identifier: '
    isArray'
        ImportSpecifier
          Identifier: '
    isArrowFunction'
        ImportSpecifier
          Identifier: '
    isAssignmentExpression'
        ImportSpecifier
          Identifier: '
    isBinaryExpression'
        ImportSpecifier
          Identifier: '
    isBlock'
        ImportSpecifier
          Identifier: '
    isBlockLike'
        ImportSpecifier
          Identifier: '
    isBlockScope'
        ImportSpecifier
          Identifier: '
    isCaseClause'
        ImportSpecifier
          Identifier: '
    isClassLike'
        ImportSpecifier
          Identifier: '
    isConstructorDeclaration'
        ImportSpecifier
          Identifier: '
    isDeclaration'
        ImportSpecifier
          Identifier: '
    isDeclarationWithTypeParameters'
        ImportSpecifier
          Identifier: '
    isElementAccessExpression'
        ImportSpecifier
          Identifier: '
    isExpression'
        ImportSpecifier
          Identifier: '
    isExpressionNode'
        ImportSpecifier
          Identifier: '
    isExpressionStatement'
        ImportSpecifier
          Identifier: '
    isFunctionBody'
        ImportSpecifier
          Identifier: '
    isFunctionExpression'
        ImportSpecifier
          Identifier: '
    isFunctionLike'
        ImportSpecifier
          Identifier: '
    isFunctionLikeDeclaration'
        ImportSpecifier
          Identifier: '
    isIdentifier'
        ImportSpecifier
          Identifier: '
    isInJSFile'
        ImportSpecifier
          Identifier: '
    isIterationStatement'
        ImportSpecifier
          Identifier: '
    isJsxAttribute'
        ImportSpecifier
          Identifier: '
    isJsxElement'
        ImportSpecifier
          Identifier: '
    isJsxFragment'
        ImportSpecifier
          Identifier: '
    isJsxSelfClosingElement'
        ImportSpecifier
          Identifier: '
    isModuleBlock'
        ImportSpecifier
          Identifier: '
    isParenthesizedTypeNode'
        ImportSpecifier
          Identifier: '
    isPartOfTypeNode'
        ImportSpecifier
          Identifier: '
    isPropertyAccessExpression'
        ImportSpecifier
          Identifier: '
    isPropertyDeclaration'
        ImportSpecifier
          Identifier: '
    isQualifiedName'
        ImportSpecifier
          Identifier: '
    isReturnStatement'
        ImportSpecifier
          Identifier: '
    isShorthandPropertyAssignment'
        ImportSpecifier
          Identifier: '
    isSourceFile'
        ImportSpecifier
          Identifier: '
    isStatement'
        ImportSpecifier
          Identifier: '
    isStatic'
        ImportSpecifier
          Identifier: '
    isStringLiteral'
        ImportSpecifier
          Identifier: '
    isSwitchStatement'
        ImportSpecifier
          Identifier: '
    isThis'
        ImportSpecifier
          Identifier: '
    isUnaryExpressionWithWrite'
        ImportSpecifier
          Identifier: '
    isUnionTypeNode'
        ImportSpecifier
          Identifier: '
    isVariableDeclaration'
        ImportSpecifier
          Identifier: '
    isVariableDeclarationList'
        ImportSpecifier
          Identifier: '
    isVariableStatement'
        ImportSpecifier
          Identifier: '
    LabeledStatement'
        ImportSpecifier
          Identifier: '
    last'
        ImportSpecifier
          Identifier: '
    map'
        ImportSpecifier
          Identifier: '
    mapDefined'
        ImportSpecifier
          Identifier: '
    MethodDeclaration'
        ImportSpecifier
          Identifier: '
    Modifier'
        ImportSpecifier
          Identifier: '
    ModifierFlags'
        ImportSpecifier
          Identifier: '
    ModuleBlock'
        ImportSpecifier
          Identifier: '
    NamedDeclaration'
        ImportSpecifier
          Identifier: '
    Node'
        ImportSpecifier
          Identifier: '
    NodeBuilderFlags'
        ImportSpecifier
          Identifier: '
    NodeFlags'
        ImportSpecifier
          Identifier: '
    ObjectLiteralElementLike'
        ImportSpecifier
          Identifier: '
    ParameterDeclaration'
        ImportSpecifier
          Identifier: '
    positionIsSynthesized'
        ImportSpecifier
          Identifier: '
    PropertyAccessExpression'
        ImportSpecifier
          Identifier: '
    rangeContainsStartEnd'
        ImportSpecifier
          Identifier: '
    RefactorActionInfo'
        ImportSpecifier
          Identifier: '
    RefactorContext'
        ImportSpecifier
          Identifier: '
    RefactorEditInfo'
        ImportSpecifier
          Identifier: '
    setEmitFlags'
        ImportSpecifier
          Identifier: '
    ShorthandPropertyAssignment'
        ImportSpecifier
          Identifier: '
    SignatureKind'
        ImportSpecifier
          Identifier: '
    singleOrUndefined'
        ImportSpecifier
          Identifier: '
    skipParentheses'
        ImportSpecifier
          Identifier: '
    SourceFile'
        ImportSpecifier
          Identifier: '
    Statement'
        ImportSpecifier
          Identifier: '
    StringLiteral'
        ImportSpecifier
          Identifier: '
    suppressLeadingAndTrailingTrivia'
        ImportSpecifier
          Identifier: '
    Symbol'
        ImportSpecifier
          Identifier: '
    SymbolFlags'
        ImportSpecifier
          Identifier: '
    SyntaxKind'
        ImportSpecifier
          Identifier: '
    textChanges'
        ImportSpecifier
          Identifier: '
    TextRange'
        ImportSpecifier
          Identifier: '
    TextSpan'
        ImportSpecifier
          Identifier: '
    textSpanEnd'
        ImportSpecifier
          Identifier: '
    TryStatement'
        ImportSpecifier
          Identifier: '
    Type'
        ImportSpecifier
          Identifier: '
    TypeChecker'
        ImportSpecifier
          Identifier: '
    TypeElement'
        ImportSpecifier
          Identifier: '
    TypeFlags'
        ImportSpecifier
          Identifier: '
    TypeLiteralNode'
        ImportSpecifier
          Identifier: '
    TypeNode'
        ImportSpecifier
          Identifier: '
    TypeParameter'
        ImportSpecifier
          Identifier: '
    TypeParameterDeclaration'
        ImportSpecifier
          Identifier: '
    VariableDeclaration'
        ImportSpecifier
          Identifier: '
    visitEachChild'
        ImportSpecifier
          Identifier: '
    visitNode'
        ImportSpecifier
          Identifier: '
    visitNodes'
        ImportSpecifier
          Identifier: '
    VisitResult'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: '
    getIdentifierForNode'
        ImportSpecifier
          Identifier: '
    refactorKindBeginsWith'
        ImportSpecifier
          Identifier: '
    registerRefactor'
    StringLiteral
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' refactorName'
        StringLiteral
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' extractConstantAction'
        ObjectLiteralExpression
          PropertyAssignment
            Identifier: '
    name'
            StringLiteral
          PropertyAssignment
            Identifier: '
    description'
            CallExpression
              Identifier: ' getLocaleSpecificMessage'
              PropertyAccessExpression
                Identifier: 'Diagnostics'
                Identifier: 'Extract_constant'
          PropertyAssignment
            Identifier: '
    kind'
            StringLiteral
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' extractFunctionAction'
        ObjectLiteralExpression
          PropertyAssignment
            Identifier: '
    name'
            StringLiteral
          PropertyAssignment
            Identifier: '
    description'
            CallExpression
              Identifier: ' getLocaleSpecificMessage'
              PropertyAccessExpression
                Identifier: 'Diagnostics'
                Identifier: 'Extract_function'
          PropertyAssignment
            Identifier: '
    kind'
            StringLiteral
  ExpressionStatement
    CallExpression
      Identifier: '
registerRefactor'
      Identifier: 'refactorName'
      ObjectLiteralExpression
        PropertyAssignment
          Identifier: '
    kinds'
          ArrayLiteralExpression
            PropertyAccessExpression
              Identifier: '
        extractConstantAction'
              Identifier: 'kind'
            PropertyAccessExpression
              Identifier: '
        extractFunctionAction'
              Identifier: 'kind'
        PropertyAssignment
          Identifier: '
    getEditsForAction'
          Identifier: ' getRefactorEditsToExtractSymbol'
        PropertyAssignment
          Identifier: '
    getAvailableActions'
          Identifier: ' getRefactorActionsToExtractSymbol'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getRefactorActionsToExtractSymbol'
    Parameter
      Identifier: 'context'
      TypeReference
        Identifier: ' RefactorContext'
    TypeOperator
      ArrayType
        TypeReference
          Identifier: ' ApplicableRefactorInfo'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' requestedRefactor'
            PropertyAccessExpression
              Identifier: ' context'
              Identifier: 'kind'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' rangeToExtract'
            CallExpression
              Identifier: ' getRangeToExtract'
              PropertyAccessExpression
                Identifier: 'context'
                Identifier: 'file'
              CallExpression
                Identifier: ' getRefactorContextSpan'
                Identifier: 'context'
              BinaryExpression
                PropertyAccessExpression
                  Identifier: ' context'
                  Identifier: 'triggerReason'
                EqualsEqualsEqualsToken
                StringLiteral
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' targetRange'
            PropertyAccessExpression
              Identifier: ' rangeToExtract'
              Identifier: 'targetRange'
      IfStatement
        BinaryExpression
          Identifier: 'targetRange'
          EqualsEqualsEqualsToken
          Identifier: ' undefined'
        Block
          IfStatement
            BinaryExpression
              BinaryExpression
                PrefixUnaryExpression
                  PropertyAccessExpression
                    Identifier: 'rangeToExtract'
                    Identifier: 'errors'
                BarBarToken
                BinaryExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: ' rangeToExtract'
                      Identifier: 'errors'
                    Identifier: 'length'
                  EqualsEqualsEqualsToken
                  NumericLiteral
              BarBarToken
              PrefixUnaryExpression
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: 'context'
                    Identifier: 'preferences'
                  Identifier: 'provideRefactorNotApplicableReason'
            Block
              ReturnStatement
                Identifier: ' emptyArray'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' errors'
                ArrayLiteralExpression
          IfStatement
            CallExpression
              Identifier: 'refactorKindBeginsWith'
              PropertyAccessExpression
                Identifier: 'extractFunctionAction'
                Identifier: 'kind'
              Identifier: ' requestedRefactor'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            errors'
                    Identifier: 'push'
                  ObjectLiteralExpression
                    PropertyAssignment
                      Identifier: '
                name'
                      Identifier: ' refactorName'
                    PropertyAssignment
                      Identifier: '
                description'
                      PropertyAccessExpression
                        Identifier: ' extractFunctionAction'
                        Identifier: 'description'
                    PropertyAssignment
                      Identifier: '
                actions'
                      ArrayLiteralExpression
                        ObjectLiteralExpression
                          SpreadAssignment
                            Identifier: 'extractFunctionAction'
                          PropertyAssignment
                            Identifier: ' notApplicableReason'
                            CallExpression
                              Identifier: ' getStringError'
                              PropertyAccessExpression
                                Identifier: 'rangeToExtract'
                                Identifier: 'errors'
          IfStatement
            CallExpression
              Identifier: 'refactorKindBeginsWith'
              PropertyAccessExpression
                Identifier: 'extractConstantAction'
                Identifier: 'kind'
              Identifier: ' requestedRefactor'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            errors'
                    Identifier: 'push'
                  ObjectLiteralExpression
                    PropertyAssignment
                      Identifier: '
                name'
                      Identifier: ' refactorName'
                    PropertyAssignment
                      Identifier: '
                description'
                      PropertyAccessExpression
                        Identifier: ' extractConstantAction'
                        Identifier: 'description'
                    PropertyAssignment
                      Identifier: '
                actions'
                      ArrayLiteralExpression
                        ObjectLiteralExpression
                          SpreadAssignment
                            Identifier: 'extractConstantAction'
                          PropertyAssignment
                            Identifier: ' notApplicableReason'
                            CallExpression
                              Identifier: ' getStringError'
                              PropertyAccessExpression
                                Identifier: 'rangeToExtract'
                                Identifier: 'errors'
          ReturnStatement
            Identifier: ' errors'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            ObjectBindingPattern
              BindingElement
                Identifier: ' affectedTextRange'
              BindingElement
                Identifier: ' extractions'
            CallExpression
              Identifier: ' getPossibleExtractions'
              Identifier: 'targetRange'
              Identifier: ' context'
      IfStatement
        BinaryExpression
          Identifier: 'extractions'
          EqualsEqualsEqualsToken
          Identifier: ' undefined'
        Block
          ReturnStatement
            Identifier: ' emptyArray'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' functionActions'
            ArrayType
              TypeReference
                Identifier: ' RefactorActionInfo'
            ArrayLiteralExpression
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' usedFunctionNames'
            NewExpression
              Identifier: ' Map'
              StringKeyword
              BooleanKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' innermostErrorFunctionAction'
            UnionType
              TypeReference
                Identifier: ' RefactorActionInfo'
              UndefinedKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' constantActions'
            ArrayType
              TypeReference
                Identifier: ' RefactorActionInfo'
            ArrayLiteralExpression
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' usedConstantNames'
            NewExpression
              Identifier: ' Map'
              StringKeyword
              BooleanKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' innermostErrorConstantAction'
            UnionType
              TypeReference
                Identifier: ' RefactorActionInfo'
              UndefinedKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' i'
            NumericLiteral
      ForOfStatement
        VariableDeclarationList
          VariableDeclaration
            ObjectBindingPattern
              BindingElement
                Identifier: ' functionExtraction'
              BindingElement
                Identifier: ' constantExtraction'
        Identifier: ' extractions'
        Block
          IfStatement
            CallExpression
              Identifier: 'refactorKindBeginsWith'
              PropertyAccessExpression
                Identifier: 'extractFunctionAction'
                Identifier: 'kind'
              Identifier: ' requestedRefactor'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' description'
                    PropertyAccessExpression
                      Identifier: ' functionExtraction'
                      Identifier: 'description'
              IfStatement
                BinaryExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: 'functionExtraction'
                      Identifier: 'errors'
                    Identifier: 'length'
                  EqualsEqualsEqualsToken
                  NumericLiteral
                Block
                  IfStatement
                    PrefixUnaryExpression
                      CallExpression
                        PropertyAccessExpression
                          Identifier: 'usedFunctionNames'
                          Identifier: 'has'
                        Identifier: 'description'
                    Block
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                    usedFunctionNames'
                            Identifier: 'set'
                          Identifier: 'description'
                          TrueKeyword
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                    functionActions'
                            Identifier: 'push'
                          ObjectLiteralExpression
                            ShorthandPropertyAssignment
                              Identifier: '
                        description'
                            PropertyAssignment
                              Identifier: '
                        name'
                              TemplateExpression
                                TemplateHead
                                TemplateSpan
                                  Identifier: 'i'
                                  TemplateTail
                            PropertyAssignment
                              Identifier: '
                        kind'
                              PropertyAccessExpression
                                Identifier: ' extractFunctionAction'
                                Identifier: 'kind'
                            PropertyAssignment
                              Identifier: '
                        range'
                              ObjectLiteralExpression
                                PropertyAssignment
                                  Identifier: '
                            start'
                                  ObjectLiteralExpression
                                    PropertyAssignment
                                      Identifier: ' line'
                                      PropertyAccessExpression
                                        CallExpression
                                          Identifier: ' getLineAndCharacterOfPosition'
                                          PropertyAccessExpression
                                            Identifier: 'context'
                                            Identifier: 'file'
                                          PropertyAccessExpression
                                            Identifier: ' affectedTextRange'
                                            Identifier: 'pos'
                                        Identifier: 'line'
                                    PropertyAssignment
                                      Identifier: ' offset'
                                      PropertyAccessExpression
                                        CallExpression
                                          Identifier: ' getLineAndCharacterOfPosition'
                                          PropertyAccessExpression
                                            Identifier: 'context'
                                            Identifier: 'file'
                                          PropertyAccessExpression
                                            Identifier: ' affectedTextRange'
                                            Identifier: 'pos'
                                        Identifier: 'character'
                                PropertyAssignment
                                  Identifier: '
                            end'
                                  ObjectLiteralExpression
                                    PropertyAssignment
                                      Identifier: ' line'
                                      PropertyAccessExpression
                                        CallExpression
                                          Identifier: ' getLineAndCharacterOfPosition'
                                          PropertyAccessExpression
                                            Identifier: 'context'
                                            Identifier: 'file'
                                          PropertyAccessExpression
                                            Identifier: ' affectedTextRange'
                                            Identifier: 'end'
                                        Identifier: 'line'
                                    PropertyAssignment
                                      Identifier: ' offset'
                                      PropertyAccessExpression
                                        CallExpression
                                          Identifier: ' getLineAndCharacterOfPosition'
                                          PropertyAccessExpression
                                            Identifier: 'context'
                                            Identifier: 'file'
                                          PropertyAccessExpression
                                            Identifier: ' affectedTextRange'
                                            Identifier: 'end'
                                        Identifier: 'character'
                IfStatement
                  PrefixUnaryExpression
                    Identifier: 'innermostErrorFunctionAction'
                  Block
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                innermostErrorFunctionAction'
                        EqualsToken
                        ObjectLiteralExpression
                          ShorthandPropertyAssignment
                            Identifier: '
                    description'
                          PropertyAssignment
                            Identifier: '
                    name'
                            TemplateExpression
                              TemplateHead
                              TemplateSpan
                                Identifier: 'i'
                                TemplateTail
                          PropertyAssignment
                            Identifier: '
                    notApplicableReason'
                            CallExpression
                              Identifier: ' getStringError'
                              PropertyAccessExpression
                                Identifier: 'functionExtraction'
                                Identifier: 'errors'
                          PropertyAssignment
                            Identifier: '
                    kind'
                            PropertyAccessExpression
                              Identifier: ' extractFunctionAction'
                              Identifier: 'kind'
          IfStatement
            CallExpression
              Identifier: 'refactorKindBeginsWith'
              PropertyAccessExpression
                Identifier: 'extractConstantAction'
                Identifier: 'kind'
              Identifier: ' requestedRefactor'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' description'
                    PropertyAccessExpression
                      Identifier: ' constantExtraction'
                      Identifier: 'description'
              IfStatement
                BinaryExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: 'constantExtraction'
                      Identifier: 'errors'
                    Identifier: 'length'
                  EqualsEqualsEqualsToken
                  NumericLiteral
                Block
                  IfStatement
                    PrefixUnaryExpression
                      CallExpression
                        PropertyAccessExpression
                          Identifier: 'usedConstantNames'
                          Identifier: 'has'
                        Identifier: 'description'
                    Block
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                    usedConstantNames'
                            Identifier: 'set'
                          Identifier: 'description'
                          TrueKeyword
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                    constantActions'
                            Identifier: 'push'
                          ObjectLiteralExpression
                            ShorthandPropertyAssignment
                              Identifier: '
                        description'
                            PropertyAssignment
                              Identifier: '
                        name'
                              TemplateExpression
                                TemplateHead
                                TemplateSpan
                                  Identifier: 'i'
                                  TemplateTail
                            PropertyAssignment
                              Identifier: '
                        kind'
                              PropertyAccessExpression
                                Identifier: ' extractConstantAction'
                                Identifier: 'kind'
                            PropertyAssignment
                              Identifier: '
                        range'
                              ObjectLiteralExpression
                                PropertyAssignment
                                  Identifier: '
                            start'
                                  ObjectLiteralExpression
                                    PropertyAssignment
                                      Identifier: ' line'
                                      PropertyAccessExpression
                                        CallExpression
                                          Identifier: ' getLineAndCharacterOfPosition'
                                          PropertyAccessExpression
                                            Identifier: 'context'
                                            Identifier: 'file'
                                          PropertyAccessExpression
                                            Identifier: ' affectedTextRange'
                                            Identifier: 'pos'
                                        Identifier: 'line'
                                    PropertyAssignment
                                      Identifier: ' offset'
                                      PropertyAccessExpression
                                        CallExpression
                                          Identifier: ' getLineAndCharacterOfPosition'
                                          PropertyAccessExpression
                                            Identifier: 'context'
                                            Identifier: 'file'
                                          PropertyAccessExpression
                                            Identifier: ' affectedTextRange'
                                            Identifier: 'pos'
                                        Identifier: 'character'
                                PropertyAssignment
                                  Identifier: '
                            end'
                                  ObjectLiteralExpression
                                    PropertyAssignment
                                      Identifier: ' line'
                                      PropertyAccessExpression
                                        CallExpression
                                          Identifier: ' getLineAndCharacterOfPosition'
                                          PropertyAccessExpression
                                            Identifier: 'context'
                                            Identifier: 'file'
                                          PropertyAccessExpression
                                            Identifier: ' affectedTextRange'
                                            Identifier: 'end'
                                        Identifier: 'line'
                                    PropertyAssignment
                                      Identifier: ' offset'
                                      PropertyAccessExpression
                                        CallExpression
                                          Identifier: ' getLineAndCharacterOfPosition'
                                          PropertyAccessExpression
                                            Identifier: 'context'
                                            Identifier: 'file'
                                          PropertyAccessExpression
                                            Identifier: ' affectedTextRange'
                                            Identifier: 'end'
                                        Identifier: 'character'
                IfStatement
                  PrefixUnaryExpression
                    Identifier: 'innermostErrorConstantAction'
                  Block
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                innermostErrorConstantAction'
                        EqualsToken
                        ObjectLiteralExpression
                          ShorthandPropertyAssignment
                            Identifier: '
                    description'
                          PropertyAssignment
                            Identifier: '
                    name'
                            TemplateExpression
                              TemplateHead
                              TemplateSpan
                                Identifier: 'i'
                                TemplateTail
                          PropertyAssignment
                            Identifier: '
                    notApplicableReason'
                            CallExpression
                              Identifier: ' getStringError'
                              PropertyAccessExpression
                                Identifier: 'constantExtraction'
                                Identifier: 'errors'
                          PropertyAssignment
                            Identifier: '
                    kind'
                            PropertyAccessExpression
                              Identifier: ' extractConstantAction'
                              Identifier: 'kind'
          ExpressionStatement
            PostfixUnaryExpression
              Identifier: '

        // *do* increment i anyway because we'll look for the i-th scope
        // later when actually doing the refactoring if the user requests it
        i'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' infos'
            ArrayType
              TypeReference
                Identifier: ' ApplicableRefactorInfo'
            ArrayLiteralExpression
      IfStatement
        PropertyAccessExpression
          Identifier: 'functionActions'
          Identifier: 'length'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        infos'
                Identifier: 'push'
              ObjectLiteralExpression
                PropertyAssignment
                  Identifier: '
            name'
                  Identifier: ' refactorName'
                PropertyAssignment
                  Identifier: '
            description'
                  CallExpression
                    Identifier: ' getLocaleSpecificMessage'
                    PropertyAccessExpression
                      Identifier: 'Diagnostics'
                      Identifier: 'Extract_function'
                PropertyAssignment
                  Identifier: '
            actions'
                  Identifier: ' functionActions'
        IfStatement
          BinaryExpression
            PropertyAccessExpression
              PropertyAccessExpression
                Identifier: 'context'
                Identifier: 'preferences'
              Identifier: 'provideRefactorNotApplicableReason'
            AmpersandAmpersandToken
            Identifier: ' innermostErrorFunctionAction'
          Block
            ExpressionStatement
              CallExpression
                PropertyAccessExpression
                  Identifier: '
        infos'
                  Identifier: 'push'
                ObjectLiteralExpression
                  PropertyAssignment
                    Identifier: '
            name'
                    Identifier: ' refactorName'
                  PropertyAssignment
                    Identifier: '
            description'
                    CallExpression
                      Identifier: ' getLocaleSpecificMessage'
                      PropertyAccessExpression
                        Identifier: 'Diagnostics'
                        Identifier: 'Extract_function'
                  PropertyAssignment
                    Identifier: '
            actions'
                    ArrayLiteralExpression
                      Identifier: 'innermostErrorFunctionAction'
      IfStatement
        PropertyAccessExpression
          Identifier: 'constantActions'
          Identifier: 'length'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        infos'
                Identifier: 'push'
              ObjectLiteralExpression
                PropertyAssignment
                  Identifier: '
            name'
                  Identifier: ' refactorName'
                PropertyAssignment
                  Identifier: '
            description'
                  CallExpression
                    Identifier: ' getLocaleSpecificMessage'
                    PropertyAccessExpression
                      Identifier: 'Diagnostics'
                      Identifier: 'Extract_constant'
                PropertyAssignment
                  Identifier: '
            actions'
                  Identifier: ' constantActions'
        IfStatement
          BinaryExpression
            PropertyAccessExpression
              PropertyAccessExpression
                Identifier: 'context'
                Identifier: 'preferences'
              Identifier: 'provideRefactorNotApplicableReason'
            AmpersandAmpersandToken
            Identifier: ' innermostErrorConstantAction'
          Block
            ExpressionStatement
              CallExpression
                PropertyAccessExpression
                  Identifier: '
        infos'
                  Identifier: 'push'
                ObjectLiteralExpression
                  PropertyAssignment
                    Identifier: '
            name'
                    Identifier: ' refactorName'
                  PropertyAssignment
                    Identifier: '
            description'
                    CallExpression
                      Identifier: ' getLocaleSpecificMessage'
                      PropertyAccessExpression
                        Identifier: 'Diagnostics'
                        Identifier: 'Extract_constant'
                  PropertyAssignment
                    Identifier: '
            actions'
                    ArrayLiteralExpression
                      Identifier: 'innermostErrorConstantAction'
      ReturnStatement
        ConditionalExpression
          PropertyAccessExpression
            Identifier: ' infos'
            Identifier: 'length'
          QuestionToken
          Identifier: ' infos'
          ColonToken
          Identifier: ' emptyArray'
      FunctionDeclaration
        Identifier: ' getStringError'
        Parameter
          Identifier: 'errors'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Diagnostic'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' error'
                PropertyAccessExpression
                  ElementAccessExpression
                    Identifier: ' errors'
                    NumericLiteral
                  Identifier: 'messageText'
          IfStatement
            BinaryExpression
              TypeOfExpression
                Identifier: ' error'
              ExclamationEqualsEqualsToken
              StringLiteral
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            error'
                  EqualsToken
                  PropertyAccessExpression
                    Identifier: ' error'
                    Identifier: 'messageText'
          ReturnStatement
            Identifier: ' error'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getRefactorEditsToExtractSymbol'
    Parameter
      Identifier: 'context'
      TypeReference
        Identifier: ' RefactorContext'
    Parameter
      Identifier: ' actionName'
      StringKeyword
    UnionType
      TypeReference
        Identifier: ' RefactorEditInfo'
      UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' rangeToExtract'
            CallExpression
              Identifier: ' getRangeToExtract'
              PropertyAccessExpression
                Identifier: 'context'
                Identifier: 'file'
              CallExpression
                Identifier: ' getRefactorContextSpan'
                Identifier: 'context'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' targetRange'
            NonNullExpression
              PropertyAccessExpression
                Identifier: ' rangeToExtract'
                Identifier: 'targetRange'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' parsedFunctionIndexMatch'
            CallExpression
              PropertyAccessExpression
                RegularExpressionLiteral
                Identifier: 'exec'
              Identifier: 'actionName'
      IfStatement
        Identifier: 'parsedFunctionIndexMatch'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' index'
                PrefixUnaryExpression
                  ElementAccessExpression
                    Identifier: 'parsedFunctionIndexMatch'
                    NumericLiteral
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        Debug'
                Identifier: 'assert'
              CallExpression
                Identifier: 'isFinite'
                Identifier: 'index'
              StringLiteral
          ReturnStatement
            CallExpression
              Identifier: ' getFunctionExtractionAtIndex'
              Identifier: 'targetRange'
              Identifier: ' context'
              Identifier: ' index'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' parsedConstantIndexMatch'
            CallExpression
              PropertyAccessExpression
                RegularExpressionLiteral
                Identifier: 'exec'
              Identifier: 'actionName'
      IfStatement
        Identifier: 'parsedConstantIndexMatch'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' index'
                PrefixUnaryExpression
                  ElementAccessExpression
                    Identifier: 'parsedConstantIndexMatch'
                    NumericLiteral
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        Debug'
                Identifier: 'assert'
              CallExpression
                Identifier: 'isFinite'
                Identifier: 'index'
              StringLiteral
          ReturnStatement
            CallExpression
              Identifier: ' getConstantExtractionAtIndex'
              Identifier: 'targetRange'
              Identifier: ' context'
              Identifier: ' index'
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            Identifier: '

    Debug'
            Identifier: 'fail'
          StringLiteral
  ModuleDeclaration
    ExportKeyword
    Identifier: ' Messages'
    ModuleBlock
      FunctionDeclaration
        Identifier: ' createMessage'
        Parameter
          Identifier: 'message'
          StringKeyword
        TypeReference
          Identifier: ' DiagnosticMessage'
        Block
          ReturnStatement
            ObjectLiteralExpression
              ShorthandPropertyAssignment
                Identifier: ' message'
              PropertyAssignment
                Identifier: ' code'
                NumericLiteral
              PropertyAssignment
                Identifier: ' category'
                PropertyAccessExpression
                  Identifier: ' DiagnosticCategory'
                  Identifier: 'Message'
              PropertyAssignment
                Identifier: ' key'
                Identifier: ' message'
      VariableStatement
        ExportKeyword
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' cannotExtractRange'
            TypeReference
              Identifier: ' DiagnosticMessage'
            CallExpression
              Identifier: ' createMessage'
              StringLiteral
      VariableStatement
        ExportKeyword
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' cannotExtractImport'
            TypeReference
              Identifier: ' DiagnosticMessage'
            CallExpression
              Identifier: ' createMessage'
              StringLiteral
      VariableStatement
        ExportKeyword
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' cannotExtractSuper'
            TypeReference
              Identifier: ' DiagnosticMessage'
            CallExpression
              Identifier: ' createMessage'
              StringLiteral
      VariableStatement
        ExportKeyword
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' cannotExtractJSDoc'
            TypeReference
              Identifier: ' DiagnosticMessage'
            CallExpression
              Identifier: ' createMessage'
              StringLiteral
      VariableStatement
        ExportKeyword
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' cannotExtractEmpty'
            TypeReference
              Identifier: ' DiagnosticMessage'
            CallExpression
              Identifier: ' createMessage'
              StringLiteral
      VariableStatement
        ExportKeyword
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' expressionExpected'
            TypeReference
              Identifier: ' DiagnosticMessage'
            CallExpression
              Identifier: ' createMessage'
              StringLiteral
      VariableStatement
        ExportKeyword
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' uselessConstantType'
            TypeReference
              Identifier: ' DiagnosticMessage'
            CallExpression
              Identifier: ' createMessage'
              StringLiteral
      VariableStatement
        ExportKeyword
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' statementOrExpressionExpected'
            TypeReference
              Identifier: ' DiagnosticMessage'
            CallExpression
              Identifier: ' createMessage'
              StringLiteral
      VariableStatement
        ExportKeyword
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' cannotExtractRangeContainingConditionalBreakOrContinueStatements'
            TypeReference
              Identifier: ' DiagnosticMessage'
            CallExpression
              Identifier: ' createMessage'
              StringLiteral
      VariableStatement
        ExportKeyword
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' cannotExtractRangeContainingConditionalReturnStatement'
            TypeReference
              Identifier: ' DiagnosticMessage'
            CallExpression
              Identifier: ' createMessage'
              StringLiteral
      VariableStatement
        ExportKeyword
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' cannotExtractRangeContainingLabeledBreakOrContinueStatementWithTargetOutsideOfTheRange'
            TypeReference
              Identifier: ' DiagnosticMessage'
            CallExpression
              Identifier: ' createMessage'
              StringLiteral
      VariableStatement
        ExportKeyword
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' cannotExtractRangeThatContainsWritesToReferencesLocatedOutsideOfTheTargetRangeInGenerators'
            TypeReference
              Identifier: ' DiagnosticMessage'
            CallExpression
              Identifier: ' createMessage'
              StringLiteral
      VariableStatement
        ExportKeyword
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' typeWillNotBeVisibleInTheNewScope'
            TypeReference
              Identifier: ' DiagnosticMessage'
            CallExpression
              Identifier: ' createMessage'
              StringLiteral
      VariableStatement
        ExportKeyword
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' functionWillNotBeVisibleInTheNewScope'
            TypeReference
              Identifier: ' DiagnosticMessage'
            CallExpression
              Identifier: ' createMessage'
              StringLiteral
      VariableStatement
        ExportKeyword
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' cannotExtractIdentifier'
            TypeReference
              Identifier: ' DiagnosticMessage'
            CallExpression
              Identifier: ' createMessage'
              StringLiteral
      VariableStatement
        ExportKeyword
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' cannotExtractExportedEntity'
            TypeReference
              Identifier: ' DiagnosticMessage'
            CallExpression
              Identifier: ' createMessage'
              StringLiteral
      VariableStatement
        ExportKeyword
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' cannotWriteInExpression'
            TypeReference
              Identifier: ' DiagnosticMessage'
            CallExpression
              Identifier: ' createMessage'
              StringLiteral
      VariableStatement
        ExportKeyword
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' cannotExtractReadonlyPropertyInitializerOutsideConstructor'
            TypeReference
              Identifier: ' DiagnosticMessage'
            CallExpression
              Identifier: ' createMessage'
              StringLiteral
      VariableStatement
        ExportKeyword
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' cannotExtractAmbientBlock'
            TypeReference
              Identifier: ' DiagnosticMessage'
            CallExpression
              Identifier: ' createMessage'
              StringLiteral
      VariableStatement
        ExportKeyword
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' cannotAccessVariablesFromNestedScopes'
            TypeReference
              Identifier: ' DiagnosticMessage'
            CallExpression
              Identifier: ' createMessage'
              StringLiteral
      VariableStatement
        ExportKeyword
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' cannotExtractToJSClass'
            TypeReference
              Identifier: ' DiagnosticMessage'
            CallExpression
              Identifier: ' createMessage'
              StringLiteral
      VariableStatement
        ExportKeyword
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' cannotExtractToExpressionArrowFunction'
            TypeReference
              Identifier: ' DiagnosticMessage'
            CallExpression
              Identifier: ' createMessage'
              StringLiteral
      VariableStatement
        ExportKeyword
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' cannotExtractFunctionsContainingThisToMethod'
            TypeReference
              Identifier: ' DiagnosticMessage'
            CallExpression
              Identifier: ' createMessage'
              StringLiteral
  EnumDeclaration
    ExportKeyword
    Identifier: ' RangeFacts'
    EnumMember
      Identifier: '
    None'
      NumericLiteral
    EnumMember
      Identifier: '
    HasReturn'
      BinaryExpression
        NumericLiteral
        LessThanLessThanToken
        NumericLiteral
    EnumMember
      Identifier: '
    IsGenerator'
      BinaryExpression
        NumericLiteral
        LessThanLessThanToken
        NumericLiteral
    EnumMember
      Identifier: '
    IsAsyncFunction'
      BinaryExpression
        NumericLiteral
        LessThanLessThanToken
        NumericLiteral
    EnumMember
      Identifier: '
    UsesThis'
      BinaryExpression
        NumericLiteral
        LessThanLessThanToken
        NumericLiteral
    EnumMember
      Identifier: '
    UsesThisInFunction'
      BinaryExpression
        NumericLiteral
        LessThanLessThanToken
        NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The range is in a function which needs the 'static' modifier in a class
     */
    InStaticRegion'
      BinaryExpression
        NumericLiteral
        LessThanLessThanToken
        NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TargetRange'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' range'
      UnionType
        TypeReference
          Identifier: ' Expression'
        ArrayType
          TypeReference
            Identifier: ' Statement'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' facts'
      TypeReference
        Identifier: ' RangeFacts'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' thisNode'
      UnionType
        TypeReference
          Identifier: ' Node'
        UndefinedKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' RangeToExtract'
    UnionType
      TypeLiteral
        PropertySignature
          ReadonlyKeyword
          Identifier: ' targetRange'
          QuestionToken
          NeverKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' errors'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' Diagnostic'
      TypeLiteral
        PropertySignature
          ReadonlyKeyword
          Identifier: ' targetRange'
          TypeReference
            Identifier: ' TargetRange'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' errors'
          QuestionToken
          NeverKeyword
  TypeAliasDeclaration
    Identifier: ' Scope'
    UnionType
      TypeReference
        Identifier: ' FunctionLikeDeclaration'
      TypeReference
        Identifier: ' SourceFile'
      TypeReference
        Identifier: ' ModuleBlock'
      TypeReference
        Identifier: ' ClassLikeDeclaration'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getRangeToExtract'
    Parameter
      Identifier: 'sourceFile'
      TypeReference
        Identifier: ' SourceFile'
    Parameter
      Identifier: ' span'
      TypeReference
        Identifier: ' TextSpan'
    Parameter
      Identifier: ' invoked'
      TrueKeyword
    TypeReference
      Identifier: ' RangeToExtract'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            ObjectBindingPattern
              BindingElement
                Identifier: ' length'
            Identifier: ' span'
      IfStatement
        BinaryExpression
          BinaryExpression
            Identifier: 'length'
            EqualsEqualsEqualsToken
            NumericLiteral
          AmpersandAmpersandToken
          PrefixUnaryExpression
            Identifier: 'invoked'
        Block
          ReturnStatement
            ObjectLiteralExpression
              PropertyAssignment
                Identifier: ' errors'
                ArrayLiteralExpression
                  CallExpression
                    Identifier: 'createFileDiagnostic'
                    Identifier: 'sourceFile'
                    PropertyAccessExpression
                      Identifier: ' span'
                      Identifier: 'start'
                    Identifier: ' length'
                    PropertyAccessExpression
                      Identifier: ' Messages'
                      Identifier: 'cannotExtractEmpty'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' cursorRequest'
            BinaryExpression
              BinaryExpression
                Identifier: ' length'
                EqualsEqualsEqualsToken
                NumericLiteral
              AmpersandAmpersandToken
              Identifier: ' invoked'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' startToken'
            CallExpression
              Identifier: ' findFirstNonJsxWhitespaceToken'
              Identifier: 'sourceFile'
              PropertyAccessExpression
                Identifier: ' span'
                Identifier: 'start'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' endToken'
            CallExpression
              Identifier: ' findTokenOnLeftOfPosition'
              Identifier: 'sourceFile'
              CallExpression
                Identifier: ' textSpanEnd'
                Identifier: 'span'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' adjustedSpan'
            ConditionalExpression
              BinaryExpression
                BinaryExpression
                  Identifier: ' startToken'
                  AmpersandAmpersandToken
                  Identifier: ' endToken'
                AmpersandAmpersandToken
                Identifier: ' invoked'
              QuestionToken
              CallExpression
                Identifier: ' getAdjustedSpanFromNodes'
                Identifier: 'startToken'
                Identifier: ' endToken'
                Identifier: ' sourceFile'
              ColonToken
              Identifier: ' span'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' start'
            ConditionalExpression
              Identifier: ' cursorRequest'
              QuestionToken
              CallExpression
                Identifier: ' getExtractableParent'
                Identifier: 'startToken'
              ColonToken
              CallExpression
                Identifier: ' getParentNodeInSpan'
                Identifier: 'startToken'
                Identifier: ' sourceFile'
                Identifier: ' adjustedSpan'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' end'
            ConditionalExpression
              Identifier: ' cursorRequest'
              QuestionToken
              Identifier: ' start'
              ColonToken
              CallExpression
                Identifier: ' getParentNodeInSpan'
                Identifier: 'endToken'
                Identifier: ' sourceFile'
                Identifier: ' adjustedSpan'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' rangeFacts'
            PropertyAccessExpression
              Identifier: ' RangeFacts'
              Identifier: 'None'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' thisNode'
            UnionType
              TypeReference
                Identifier: ' Node'
              UndefinedKeyword
      IfStatement
        BinaryExpression
          PrefixUnaryExpression
            Identifier: 'start'
          BarBarToken
          PrefixUnaryExpression
            Identifier: 'end'
        Block
          ReturnStatement
            ObjectLiteralExpression
              PropertyAssignment
                Identifier: ' errors'
                ArrayLiteralExpression
                  CallExpression
                    Identifier: 'createFileDiagnostic'
                    Identifier: 'sourceFile'
                    PropertyAccessExpression
                      Identifier: ' span'
                      Identifier: 'start'
                    Identifier: ' length'
                    PropertyAccessExpression
                      Identifier: ' Messages'
                      Identifier: 'cannotExtractRange'
      IfStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: 'start'
            Identifier: 'flags'
          AmpersandToken
          PropertyAccessExpression
            Identifier: ' NodeFlags'
            Identifier: 'JSDoc'
        Block
          ReturnStatement
            ObjectLiteralExpression
              PropertyAssignment
                Identifier: ' errors'
                ArrayLiteralExpression
                  CallExpression
                    Identifier: 'createFileDiagnostic'
                    Identifier: 'sourceFile'
                    PropertyAccessExpression
                      Identifier: ' span'
                      Identifier: 'start'
                    Identifier: ' length'
                    PropertyAccessExpression
                      Identifier: ' Messages'
                      Identifier: 'cannotExtractJSDoc'
      IfStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: 'start'
            Identifier: 'parent'
          ExclamationEqualsEqualsToken
          PropertyAccessExpression
            Identifier: ' end'
            Identifier: 'parent'
        Block
          ReturnStatement
            ObjectLiteralExpression
              PropertyAssignment
                Identifier: ' errors'
                ArrayLiteralExpression
                  CallExpression
                    Identifier: 'createFileDiagnostic'
                    Identifier: 'sourceFile'
                    PropertyAccessExpression
                      Identifier: ' span'
                      Identifier: 'start'
                    Identifier: ' length'
                    PropertyAccessExpression
                      Identifier: ' Messages'
                      Identifier: 'cannotExtractRange'
      IfStatement
        BinaryExpression
          Identifier: 'start'
          ExclamationEqualsEqualsToken
          Identifier: ' end'
        Block
          IfStatement
            PrefixUnaryExpression
              CallExpression
                Identifier: 'isBlockLike'
                PropertyAccessExpression
                  Identifier: 'start'
                  Identifier: 'parent'
            Block
              ReturnStatement
                ObjectLiteralExpression
                  PropertyAssignment
                    Identifier: ' errors'
                    ArrayLiteralExpression
                      CallExpression
                        Identifier: 'createFileDiagnostic'
                        Identifier: 'sourceFile'
                        PropertyAccessExpression
                          Identifier: ' span'
                          Identifier: 'start'
                        Identifier: ' length'
                        PropertyAccessExpression
                          Identifier: ' Messages'
                          Identifier: 'cannotExtractRange'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' statements'
                ArrayType
                  TypeReference
                    Identifier: ' Statement'
                ArrayLiteralExpression
          ForOfStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' statement'
            PropertyAccessExpression
              PropertyAccessExpression
                Identifier: ' start'
                Identifier: 'parent'
              Identifier: 'statements'
            Block
              IfStatement
                BinaryExpression
                  BinaryExpression
                    Identifier: 'statement'
                    EqualsEqualsEqualsToken
                    Identifier: ' start'
                  BarBarToken
                  PropertyAccessExpression
                    Identifier: ' statements'
                    Identifier: 'length'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' errors'
                        CallExpression
                          Identifier: ' checkNode'
                          Identifier: 'statement'
                  IfStatement
                    Identifier: 'errors'
                    Block
                      ReturnStatement
                        ObjectLiteralExpression
                          ShorthandPropertyAssignment
                            Identifier: ' errors'
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                statements'
                        Identifier: 'push'
                      Identifier: 'statement'
              IfStatement
                BinaryExpression
                  Identifier: 'statement'
                  EqualsEqualsEqualsToken
                  Identifier: ' end'
                Block
                  BreakStatement
          IfStatement
            PrefixUnaryExpression
              PropertyAccessExpression
                Identifier: 'statements'
                Identifier: 'length'
            Block
              ReturnStatement
                ObjectLiteralExpression
                  PropertyAssignment
                    Identifier: ' errors'
                    ArrayLiteralExpression
                      CallExpression
                        Identifier: 'createFileDiagnostic'
                        Identifier: 'sourceFile'
                        PropertyAccessExpression
                          Identifier: ' span'
                          Identifier: 'start'
                        Identifier: ' length'
                        PropertyAccessExpression
                          Identifier: ' Messages'
                          Identifier: 'cannotExtractRange'
          ReturnStatement
            ObjectLiteralExpression
              PropertyAssignment
                Identifier: ' targetRange'
                ObjectLiteralExpression
                  PropertyAssignment
                    Identifier: ' range'
                    Identifier: ' statements'
                  PropertyAssignment
                    Identifier: ' facts'
                    Identifier: ' rangeFacts'
                  ShorthandPropertyAssignment
                    Identifier: ' thisNode'
      IfStatement
        BinaryExpression
          CallExpression
            Identifier: 'isReturnStatement'
            Identifier: 'start'
          AmpersandAmpersandToken
          PrefixUnaryExpression
            PropertyAccessExpression
              Identifier: 'start'
              Identifier: 'expression'
        Block
          ReturnStatement
            ObjectLiteralExpression
              PropertyAssignment
                Identifier: ' errors'
                ArrayLiteralExpression
                  CallExpression
                    Identifier: 'createFileDiagnostic'
                    Identifier: 'sourceFile'
                    PropertyAccessExpression
                      Identifier: ' span'
                      Identifier: 'start'
                    Identifier: ' length'
                    PropertyAccessExpression
                      Identifier: ' Messages'
                      Identifier: 'cannotExtractRange'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' node'
            CallExpression
              Identifier: ' refineNode'
              Identifier: 'start'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' errors'
            BinaryExpression
              CallExpression
                Identifier: ' checkRootNode'
                Identifier: 'node'
              BarBarToken
              CallExpression
                Identifier: ' checkNode'
                Identifier: 'node'
      IfStatement
        Identifier: 'errors'
        Block
          ReturnStatement
            ObjectLiteralExpression
              ShorthandPropertyAssignment
                Identifier: ' errors'
      ReturnStatement
        ObjectLiteralExpression
          PropertyAssignment
            Identifier: ' targetRange'
            ObjectLiteralExpression
              PropertyAssignment
                Identifier: ' range'
                NonNullExpression
                  CallExpression
                    Identifier: ' getStatementOrExpressionRange'
                    Identifier: 'node'
              PropertyAssignment
                Identifier: ' facts'
                Identifier: ' rangeFacts'
              ShorthandPropertyAssignment
                Identifier: ' thisNode'
      FunctionDeclaration
        Identifier: ' refineNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypeReference
          Identifier: ' Node'
        Block
          IfStatement
            CallExpression
              Identifier: 'isReturnStatement'
              Identifier: 'node'
            Block
              IfStatement
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'expression'
                Block
                  ReturnStatement
                    PropertyAccessExpression
                      Identifier: ' node'
                      Identifier: 'expression'
            IfStatement
              BinaryExpression
                CallExpression
                  Identifier: 'isVariableStatement'
                  Identifier: 'node'
                BarBarToken
                CallExpression
                  Identifier: ' isVariableDeclarationList'
                  Identifier: 'node'
              Block
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' declarations'
                      ConditionalExpression
                        CallExpression
                          Identifier: ' isVariableStatement'
                          Identifier: 'node'
                        QuestionToken
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: ' node'
                            Identifier: 'declarationList'
                          Identifier: 'declarations'
                        ColonToken
                        PropertyAccessExpression
                          Identifier: ' node'
                          Identifier: 'declarations'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' numInitializers'
                      NumericLiteral
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' lastInitializer'
                      UnionType
                        TypeReference
                          Identifier: ' Expression'
                        UndefinedKeyword
                ForOfStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' declaration'
                  Identifier: ' declarations'
                  Block
                    IfStatement
                      PropertyAccessExpression
                        Identifier: 'declaration'
                        Identifier: 'initializer'
                      Block
                        ExpressionStatement
                          PostfixUnaryExpression
                            Identifier: '
                    numInitializers'
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                    lastInitializer'
                            EqualsToken
                            PropertyAccessExpression
                              Identifier: ' declaration'
                              Identifier: 'initializer'
                IfStatement
                  BinaryExpression
                    Identifier: 'numInitializers'
                    EqualsEqualsEqualsToken
                    NumericLiteral
                  Block
                    ReturnStatement
                      NonNullExpression
                        Identifier: ' lastInitializer'
              IfStatement
                CallExpression
                  Identifier: 'isVariableDeclaration'
                  Identifier: 'node'
                Block
                  IfStatement
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'initializer'
                    Block
                      ReturnStatement
                        PropertyAccessExpression
                          Identifier: ' node'
                          Identifier: 'initializer'
          ReturnStatement
            Identifier: ' node'
      FunctionDeclaration
        Identifier: ' checkRootNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        UnionType
          ArrayType
            TypeReference
              Identifier: ' Diagnostic'
          UndefinedKeyword
        Block
          IfStatement
            CallExpression
              Identifier: 'isIdentifier'
              ConditionalExpression
                CallExpression
                  Identifier: 'isExpressionStatement'
                  Identifier: 'node'
                QuestionToken
                PropertyAccessExpression
                  Identifier: ' node'
                  Identifier: 'expression'
                ColonToken
                Identifier: ' node'
            Block
              ReturnStatement
                ArrayLiteralExpression
                  CallExpression
                    Identifier: 'createDiagnosticForNode'
                    Identifier: 'node'
                    PropertyAccessExpression
                      Identifier: ' Messages'
                      Identifier: 'cannotExtractIdentifier'
          ReturnStatement
            Identifier: ' undefined'
      FunctionDeclaration
        Identifier: ' checkForStaticContext'
        Parameter
          Identifier: 'nodeToCheck'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' containingClass'
          TypeReference
            Identifier: ' Node'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' current'
                TypeReference
                  Identifier: ' Node'
                Identifier: ' nodeToCheck'
          WhileStatement
            BinaryExpression
              Identifier: 'current'
              ExclamationEqualsEqualsToken
              Identifier: ' containingClass'
            Block
              IfStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: 'current'
                    Identifier: 'kind'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'PropertyDeclaration'
                Block
                  IfStatement
                    CallExpression
                      Identifier: 'isStatic'
                      Identifier: 'current'
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    rangeFacts'
                          BarEqualsToken
                          PropertyAccessExpression
                            Identifier: ' RangeFacts'
                            Identifier: 'InStaticRegion'
                  BreakStatement
                IfStatement
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: 'current'
                      Identifier: 'kind'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'Parameter'
                  Block
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' ctorOrMethod'
                          NonNullExpression
                            CallExpression
                              Identifier: ' getContainingFunction'
                              Identifier: 'current'
                    IfStatement
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: 'ctorOrMethod'
                          Identifier: 'kind'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'Constructor'
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                    rangeFacts'
                            BarEqualsToken
                            PropertyAccessExpression
                              Identifier: ' RangeFacts'
                              Identifier: 'InStaticRegion'
                    BreakStatement
                  IfStatement
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: 'current'
                        Identifier: 'kind'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'MethodDeclaration'
                    Block
                      IfStatement
                        CallExpression
                          Identifier: 'isStatic'
                          Identifier: 'current'
                        Block
                          ExpressionStatement
                            BinaryExpression
                              Identifier: '
                    rangeFacts'
                              BarEqualsToken
                              PropertyAccessExpression
                                Identifier: ' RangeFacts'
                                Identifier: 'InStaticRegion'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            current'
                  EqualsToken
                  PropertyAccessExpression
                    Identifier: ' current'
                    Identifier: 'parent'
      FunctionDeclaration
        Identifier: ' checkNode'
        Parameter
          Identifier: 'nodeToCheck'
          TypeReference
            Identifier: ' Node'
        UnionType
          ArrayType
            TypeReference
              Identifier: ' Diagnostic'
          UndefinedKeyword
        Block
          EnumDeclaration
            ConstKeyword
            Identifier: ' PermittedJumps'
            EnumMember
              Identifier: '
            None'
              NumericLiteral
            EnumMember
              Identifier: '
            Break'
              BinaryExpression
                NumericLiteral
                LessThanLessThanToken
                NumericLiteral
            EnumMember
              Identifier: '
            Continue'
              BinaryExpression
                NumericLiteral
                LessThanLessThanToken
                NumericLiteral
            EnumMember
              Identifier: '
            Return'
              BinaryExpression
                NumericLiteral
                LessThanLessThanToken
                NumericLiteral
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '

        // We believe it's true because the node is from the (unmodified) tree.
        Debug'
                Identifier: 'assert'
              BinaryExpression
                PropertyAccessExpression
                  Identifier: 'nodeToCheck'
                  Identifier: 'pos'
                LessThanEqualsToken
                PropertyAccessExpression
                  Identifier: ' nodeToCheck'
                  Identifier: 'end'
              StringLiteral
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '

        // For understanding how skipTrivia functioned:
        Debug'
                Identifier: 'assert'
              PrefixUnaryExpression
                CallExpression
                  Identifier: 'positionIsSynthesized'
                  PropertyAccessExpression
                    Identifier: 'nodeToCheck'
                    Identifier: 'pos'
              StringLiteral
          IfStatement
            BinaryExpression
              BinaryExpression
                PrefixUnaryExpression
                  CallExpression
                    Identifier: 'isStatement'
                    Identifier: 'nodeToCheck'
                AmpersandAmpersandToken
                PrefixUnaryExpression
                  ParenthesizedExpression
                    BinaryExpression
                      CallExpression
                        Identifier: 'isExpressionNode'
                        Identifier: 'nodeToCheck'
                      AmpersandAmpersandToken
                      CallExpression
                        Identifier: ' isExtractableExpression'
                        Identifier: 'nodeToCheck'
              AmpersandAmpersandToken
              PrefixUnaryExpression
                CallExpression
                  Identifier: 'isStringLiteralJsxAttribute'
                  Identifier: 'nodeToCheck'
            Block
              ReturnStatement
                ArrayLiteralExpression
                  CallExpression
                    Identifier: 'createDiagnosticForNode'
                    Identifier: 'nodeToCheck'
                    PropertyAccessExpression
                      Identifier: ' Messages'
                      Identifier: 'statementOrExpressionExpected'
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'nodeToCheck'
                Identifier: 'flags'
              AmpersandToken
              PropertyAccessExpression
                Identifier: ' NodeFlags'
                Identifier: 'Ambient'
            Block
              ReturnStatement
                ArrayLiteralExpression
                  CallExpression
                    Identifier: 'createDiagnosticForNode'
                    Identifier: 'nodeToCheck'
                    PropertyAccessExpression
                      Identifier: ' Messages'
                      Identifier: 'cannotExtractAmbientBlock'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' containingClass'
                CallExpression
                  Identifier: ' getContainingClass'
                  Identifier: 'nodeToCheck'
          IfStatement
            Identifier: 'containingClass'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            checkForStaticContext'
                  Identifier: 'nodeToCheck'
                  Identifier: ' containingClass'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' errors'
                UnionType
                  ArrayType
                    TypeReference
                      Identifier: ' Diagnostic'
                  UndefinedKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' permittedJumps'
                PropertyAccessExpression
                  Identifier: ' PermittedJumps'
                  Identifier: 'Return'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' seenLabels'
                ArrayType
                  TypeReference
                    Identifier: ' __String'
          ExpressionStatement
            CallExpression
              Identifier: '

        visit'
              Identifier: 'nodeToCheck'
          IfStatement
            BinaryExpression
              Identifier: 'rangeFacts'
              AmpersandToken
              PropertyAccessExpression
                Identifier: ' RangeFacts'
                Identifier: 'UsesThis'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' container'
                    CallExpression
                      Identifier: ' getThisContainer'
                      Identifier: 'nodeToCheck'
                      FalseKeyword
                      FalseKeyword
              IfStatement
                BinaryExpression
                  BinaryExpression
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: '
                container'
                        Identifier: 'kind'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'FunctionDeclaration'
                    BarBarToken
                    ParenthesizedExpression
                      BinaryExpression
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: 'container'
                            Identifier: 'kind'
                          EqualsEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' SyntaxKind'
                            Identifier: 'MethodDeclaration'
                        AmpersandAmpersandToken
                        BinaryExpression
                          PropertyAccessExpression
                            PropertyAccessExpression
                              Identifier: ' container'
                              Identifier: 'parent'
                            Identifier: 'kind'
                          EqualsEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' SyntaxKind'
                            Identifier: 'ObjectLiteralExpression'
                  BarBarToken
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: '
                container'
                      Identifier: 'kind'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'FunctionExpression'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                rangeFacts'
                      BarEqualsToken
                      PropertyAccessExpression
                        Identifier: ' RangeFacts'
                        Identifier: 'UsesThisInFunction'
          ReturnStatement
            Identifier: ' errors'
          FunctionDeclaration
            Identifier: ' visit'
            Parameter
              Identifier: 'node'
              TypeReference
                Identifier: ' Node'
            Block
              IfStatement
                Identifier: 'errors'
                Block
                  ReturnStatement
                    TrueKeyword
              IfStatement
                CallExpression
                  Identifier: 'isDeclaration'
                  Identifier: 'node'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' declaringNode'
                        ConditionalExpression
                          ParenthesizedExpression
                            BinaryExpression
                              PropertyAccessExpression
                                Identifier: 'node'
                                Identifier: 'kind'
                              EqualsEqualsEqualsToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'VariableDeclaration'
                          QuestionToken
                          PropertyAccessExpression
                            PropertyAccessExpression
                              Identifier: ' node'
                              Identifier: 'parent'
                            Identifier: 'parent'
                          ColonToken
                          Identifier: ' node'
                  IfStatement
                    CallExpression
                      Identifier: 'hasSyntacticModifier'
                      Identifier: 'declaringNode'
                      PropertyAccessExpression
                        Identifier: ' ModifierFlags'
                        Identifier: 'Export'
                    Block
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            ParenthesizedExpression
                              BinaryExpression
                                Identifier: 'errors'
                                BarBarEqualsToken
                                ArrayLiteralExpression
                            Identifier: 'push'
                          CallExpression
                            Identifier: 'createDiagnosticForNode'
                            Identifier: 'node'
                            PropertyAccessExpression
                              Identifier: ' Messages'
                              Identifier: 'cannotExtractExportedEntity'
                      ReturnStatement
                        TrueKeyword
              SwitchStatement
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'kind'
                CaseBlock
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'ImportDeclaration'
                    ExpressionStatement
                      CallExpression
                        PropertyAccessExpression
                          ParenthesizedExpression
                            BinaryExpression
                              Identifier: 'errors'
                              BarBarEqualsToken
                              ArrayLiteralExpression
                          Identifier: 'push'
                        CallExpression
                          Identifier: 'createDiagnosticForNode'
                          Identifier: 'node'
                          PropertyAccessExpression
                            Identifier: ' Messages'
                            Identifier: 'cannotExtractImport'
                    ReturnStatement
                      TrueKeyword
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'ExportAssignment'
                    ExpressionStatement
                      CallExpression
                        PropertyAccessExpression
                          ParenthesizedExpression
                            BinaryExpression
                              Identifier: 'errors'
                              BarBarEqualsToken
                              ArrayLiteralExpression
                          Identifier: 'push'
                        CallExpression
                          Identifier: 'createDiagnosticForNode'
                          Identifier: 'node'
                          PropertyAccessExpression
                            Identifier: ' Messages'
                            Identifier: 'cannotExtractExportedEntity'
                    ReturnStatement
                      TrueKeyword
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'SuperKeyword'
                    IfStatement
                      BinaryExpression
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: 'node'
                            Identifier: 'parent'
                          Identifier: 'kind'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'CallExpression'
                      Block
                        VariableStatement
                          VariableDeclarationList
                            VariableDeclaration
                              Identifier: ' containingClass'
                              CallExpression
                                Identifier: ' getContainingClass'
                                Identifier: 'node'
                        IfStatement
                          BinaryExpression
                            BinaryExpression
                              BinaryExpression
                                Identifier: 'containingClass'
                                EqualsEqualsEqualsToken
                                Identifier: ' undefined'
                              BarBarToken
                              BinaryExpression
                                PropertyAccessExpression
                                  Identifier: ' containingClass'
                                  Identifier: 'pos'
                                LessThanToken
                                PropertyAccessExpression
                                  Identifier: ' span'
                                  Identifier: 'start'
                            BarBarToken
                            BinaryExpression
                              PropertyAccessExpression
                                Identifier: ' containingClass'
                                Identifier: 'end'
                              GreaterThanEqualsToken
                              ParenthesizedExpression
                                BinaryExpression
                                  PropertyAccessExpression
                                    Identifier: 'span'
                                    Identifier: 'start'
                                  PlusToken
                                  PropertyAccessExpression
                                    Identifier: ' span'
                                    Identifier: 'length'
                          Block
                            ExpressionStatement
                              CallExpression
                                PropertyAccessExpression
                                  ParenthesizedExpression
                                    BinaryExpression
                                      Identifier: 'errors'
                                      BarBarEqualsToken
                                      ArrayLiteralExpression
                                  Identifier: 'push'
                                CallExpression
                                  Identifier: 'createDiagnosticForNode'
                                  Identifier: 'node'
                                  PropertyAccessExpression
                                    Identifier: ' Messages'
                                    Identifier: 'cannotExtractSuper'
                            ReturnStatement
                              TrueKeyword
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        rangeFacts'
                            BarEqualsToken
                            PropertyAccessExpression
                              Identifier: ' RangeFacts'
                              Identifier: 'UsesThis'
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        thisNode'
                            EqualsToken
                            Identifier: ' node'
                    BreakStatement
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'ArrowFunction'
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                    // check if arrow function uses this
                    forEachChild'
                        Identifier: 'node'
                        FunctionExpression
                          Identifier: ' check'
                          Parameter
                            Identifier: 'n'
                          Block
                            IfStatement
                              CallExpression
                                Identifier: 'isThis'
                                Identifier: 'n'
                              Block
                                ExpressionStatement
                                  BinaryExpression
                                    Identifier: '
                            rangeFacts'
                                    BarEqualsToken
                                    PropertyAccessExpression
                                      Identifier: ' RangeFacts'
                                      Identifier: 'UsesThis'
                                ExpressionStatement
                                  BinaryExpression
                                    Identifier: '
                            thisNode'
                                    EqualsToken
                                    Identifier: ' node'
                              IfStatement
                                BinaryExpression
                                  CallExpression
                                    Identifier: 'isClassLike'
                                    Identifier: 'n'
                                  BarBarToken
                                  ParenthesizedExpression
                                    BinaryExpression
                                      CallExpression
                                        Identifier: 'isFunctionLike'
                                        Identifier: 'n'
                                      AmpersandAmpersandToken
                                      PrefixUnaryExpression
                                        CallExpression
                                          Identifier: 'isArrowFunction'
                                          Identifier: 'n'
                                Block
                                  ReturnStatement
                                    FalseKeyword
                                Block
                                  ExpressionStatement
                                    CallExpression
                                      Identifier: '
                            forEachChild'
                                      Identifier: 'n'
                                      Identifier: ' check'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'ClassDeclaration'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'FunctionDeclaration'
                    IfStatement
                      BinaryExpression
                        CallExpression
                          Identifier: 'isSourceFile'
                          PropertyAccessExpression
                            Identifier: 'node'
                            Identifier: 'parent'
                        AmpersandAmpersandToken
                        BinaryExpression
                          PropertyAccessExpression
                            PropertyAccessExpression
                              Identifier: ' node'
                              Identifier: 'parent'
                            Identifier: 'externalModuleIndicator'
                          EqualsEqualsEqualsToken
                          Identifier: ' undefined'
                      Block
                        ExpressionStatement
                          CallExpression
                            PropertyAccessExpression
                              ParenthesizedExpression
                                BinaryExpression
                                  Identifier: 'errors'
                                  BarBarEqualsToken
                                  ArrayLiteralExpression
                              Identifier: 'push'
                            CallExpression
                              Identifier: 'createDiagnosticForNode'
                              Identifier: 'node'
                              PropertyAccessExpression
                                Identifier: ' Messages'
                                Identifier: 'functionWillNotBeVisibleInTheNewScope'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'ClassExpression'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'FunctionExpression'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'MethodDeclaration'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'Constructor'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'GetAccessor'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'SetAccessor'
                    ReturnStatement
                      FalseKeyword
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' savedPermittedJumps'
                    Identifier: ' permittedJumps'
              SwitchStatement
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'kind'
                CaseBlock
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'IfStatement'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    permittedJumps'
                        AmpersandEqualsToken
                        PrefixUnaryExpression
                          PropertyAccessExpression
                            Identifier: 'PermittedJumps'
                            Identifier: 'Return'
                    BreakStatement
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'TryStatement'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    // forbid all jumps inside try blocks
                    permittedJumps'
                        EqualsToken
                        PropertyAccessExpression
                          Identifier: ' PermittedJumps'
                          Identifier: 'None'
                    BreakStatement
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'Block'
                    IfStatement
                      BinaryExpression
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: 'node'
                            Identifier: 'parent'
                          AmpersandAmpersandToken
                          BinaryExpression
                            PropertyAccessExpression
                              PropertyAccessExpression
                                Identifier: ' node'
                                Identifier: 'parent'
                              Identifier: 'kind'
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' SyntaxKind'
                              Identifier: 'TryStatement'
                        AmpersandAmpersandToken
                        BinaryExpression
                          PropertyAccessExpression
                            ParenthesizedExpression
                              AsExpression
                                PropertyAccessExpression
                                  Identifier: 'node'
                                  Identifier: 'parent'
                                TypeReference
                                  Identifier: ' TryStatement'
                            Identifier: 'finallyBlock'
                          EqualsEqualsEqualsToken
                          Identifier: ' node'
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        // allow unconditional returns from finally blocks
                        permittedJumps'
                            EqualsToken
                            PropertyAccessExpression
                              Identifier: ' PermittedJumps'
                              Identifier: 'Return'
                    BreakStatement
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'DefaultClause'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'CaseClause'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    // allow unlabeled break inside case clauses
                    permittedJumps'
                        BarEqualsToken
                        PropertyAccessExpression
                          Identifier: ' PermittedJumps'
                          Identifier: 'Break'
                    BreakStatement
                  DefaultClause
                    IfStatement
                      CallExpression
                        Identifier: 'isIterationStatement'
                        Identifier: 'node'
                        FalseKeyword
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        // allow unlabeled break/continue inside loops
                        permittedJumps'
                            BarEqualsToken
                            BinaryExpression
                              PropertyAccessExpression
                                Identifier: ' PermittedJumps'
                                Identifier: 'Break'
                              BarToken
                              PropertyAccessExpression
                                Identifier: ' PermittedJumps'
                                Identifier: 'Continue'
                    BreakStatement
              SwitchStatement
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'kind'
                CaseBlock
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'ThisType'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'ThisKeyword'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    rangeFacts'
                        BarEqualsToken
                        PropertyAccessExpression
                          Identifier: ' RangeFacts'
                          Identifier: 'UsesThis'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    thisNode'
                        EqualsToken
                        Identifier: ' node'
                    BreakStatement
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'LabeledStatement'
                    Block
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' label'
                            PropertyAccessExpression
                              ParenthesizedExpression
                                AsExpression
                                  Identifier: 'node'
                                  TypeReference
                                    Identifier: ' LabeledStatement'
                              Identifier: 'label'
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            ParenthesizedExpression
                              BinaryExpression
                                Identifier: 'seenLabels'
                                BarBarToken
                                ParenthesizedExpression
                                  BinaryExpression
                                    Identifier: 'seenLabels'
                                    EqualsToken
                                    ArrayLiteralExpression
                            Identifier: 'push'
                          PropertyAccessExpression
                            Identifier: 'label'
                            Identifier: 'escapedText'
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    forEachChild'
                          Identifier: 'node'
                          Identifier: ' visit'
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                    seenLabels'
                            Identifier: 'pop'
                      BreakStatement
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'BreakStatement'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'ContinueStatement'
                    Block
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' label'
                            PropertyAccessExpression
                              ParenthesizedExpression
                                AsExpression
                                  Identifier: 'node'
                                  UnionType
                                    TypeReference
                                      Identifier: ' BreakStatement'
                                    TypeReference
                                      Identifier: ' ContinueStatement'
                              Identifier: 'label'
                      IfStatement
                        Identifier: 'label'
                        Block
                          IfStatement
                            PrefixUnaryExpression
                              CallExpression
                                Identifier: 'contains'
                                Identifier: 'seenLabels'
                                PropertyAccessExpression
                                  Identifier: ' label'
                                  Identifier: 'escapedText'
                            Block
                              ExpressionStatement
                                CallExpression
                                  PropertyAccessExpression
                                    ParenthesizedExpression
                                      BinaryExpression
                                        Identifier: 'errors'
                                        BarBarEqualsToken
                                        ArrayLiteralExpression
                                    Identifier: 'push'
                                  CallExpression
                                    Identifier: 'createDiagnosticForNode'
                                    Identifier: 'node'
                                    PropertyAccessExpression
                                      Identifier: ' Messages'
                                      Identifier: 'cannotExtractRangeContainingLabeledBreakOrContinueStatementWithTargetOutsideOfTheRange'
                        Block
                          IfStatement
                            PrefixUnaryExpression
                              ParenthesizedExpression
                                BinaryExpression
                                  Identifier: 'permittedJumps'
                                  AmpersandToken
                                  ParenthesizedExpression
                                    ConditionalExpression
                                      BinaryExpression
                                        PropertyAccessExpression
                                          Identifier: 'node'
                                          Identifier: 'kind'
                                        EqualsEqualsEqualsToken
                                        PropertyAccessExpression
                                          Identifier: ' SyntaxKind'
                                          Identifier: 'BreakStatement'
                                      QuestionToken
                                      PropertyAccessExpression
                                        Identifier: ' PermittedJumps'
                                        Identifier: 'Break'
                                      ColonToken
                                      PropertyAccessExpression
                                        Identifier: ' PermittedJumps'
                                        Identifier: 'Continue'
                            Block
                              ExpressionStatement
                                CallExpression
                                  PropertyAccessExpression
                                    ParenthesizedExpression
                                      BinaryExpression
                                        Identifier: 'errors'
                                        BarBarEqualsToken
                                        ArrayLiteralExpression
                                    Identifier: 'push'
                                  CallExpression
                                    Identifier: 'createDiagnosticForNode'
                                    Identifier: 'node'
                                    PropertyAccessExpression
                                      Identifier: ' Messages'
                                      Identifier: 'cannotExtractRangeContainingConditionalBreakOrContinueStatements'
                      BreakStatement
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'AwaitExpression'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    rangeFacts'
                        BarEqualsToken
                        PropertyAccessExpression
                          Identifier: ' RangeFacts'
                          Identifier: 'IsAsyncFunction'
                    BreakStatement
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'YieldExpression'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    rangeFacts'
                        BarEqualsToken
                        PropertyAccessExpression
                          Identifier: ' RangeFacts'
                          Identifier: 'IsGenerator'
                    BreakStatement
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'ReturnStatement'
                    IfStatement
                      BinaryExpression
                        Identifier: 'permittedJumps'
                        AmpersandToken
                        PropertyAccessExpression
                          Identifier: ' PermittedJumps'
                          Identifier: 'Return'
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                        rangeFacts'
                            BarEqualsToken
                            PropertyAccessExpression
                              Identifier: ' RangeFacts'
                              Identifier: 'HasReturn'
                      Block
                        ExpressionStatement
                          CallExpression
                            PropertyAccessExpression
                              ParenthesizedExpression
                                BinaryExpression
                                  Identifier: 'errors'
                                  BarBarEqualsToken
                                  ArrayLiteralExpression
                              Identifier: 'push'
                            CallExpression
                              Identifier: 'createDiagnosticForNode'
                              Identifier: 'node'
                              PropertyAccessExpression
                                Identifier: ' Messages'
                                Identifier: 'cannotExtractRangeContainingConditionalReturnStatement'
                    BreakStatement
                  DefaultClause
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                    forEachChild'
                        Identifier: 'node'
                        Identifier: ' visit'
                    BreakStatement
              ExpressionStatement
                BinaryExpression
                  Identifier: '

            permittedJumps'
                  EqualsToken
                  Identifier: ' savedPermittedJumps'
  FunctionDeclaration
    Identifier: ' getAdjustedSpanFromNodes'
    Parameter
      Identifier: 'startNode'
      TypeReference
        Identifier: ' Node'
    Parameter
      Identifier: ' endNode'
      TypeReference
        Identifier: ' Node'
    Parameter
      Identifier: ' sourceFile'
      TypeReference
        Identifier: ' SourceFile'
    TypeReference
      Identifier: ' TextSpan'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' start'
            CallExpression
              PropertyAccessExpression
                Identifier: ' startNode'
                Identifier: 'getStart'
              Identifier: 'sourceFile'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' end'
            CallExpression
              PropertyAccessExpression
                Identifier: ' endNode'
                Identifier: 'getEnd'
      IfStatement
        BinaryExpression
          CallExpression
            PropertyAccessExpression
              PropertyAccessExpression
                Identifier: 'sourceFile'
                Identifier: 'text'
              Identifier: 'charCodeAt'
            Identifier: 'end'
          EqualsEqualsEqualsToken
          PropertyAccessExpression
            Identifier: ' CharacterCodes'
            Identifier: 'semicolon'
        Block
          ExpressionStatement
            PostfixUnaryExpression
              Identifier: '
        end'
      ReturnStatement
        ObjectLiteralExpression
          ShorthandPropertyAssignment
            Identifier: ' start'
          PropertyAssignment
            Identifier: ' length'
            BinaryExpression
              Identifier: ' end'
              MinusToken
              Identifier: ' start'
  FunctionDeclaration
    Identifier: ' getStatementOrExpressionRange'
    Parameter
      Identifier: 'node'
      TypeReference
        Identifier: ' Node'
    UnionType
      ArrayType
        TypeReference
          Identifier: ' Statement'
      TypeReference
        Identifier: ' Expression'
      UndefinedKeyword
    Block
      IfStatement
        CallExpression
          Identifier: 'isStatement'
          Identifier: 'node'
        Block
          ReturnStatement
            ArrayLiteralExpression
              Identifier: 'node'
      IfStatement
        CallExpression
          Identifier: 'isExpressionNode'
          Identifier: 'node'
        Block
          ReturnStatement
            ConditionalExpression
              CallExpression
                Identifier: ' isExpressionStatement'
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'parent'
              QuestionToken
              ArrayLiteralExpression
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'parent'
              ColonToken
              AsExpression
                Identifier: ' node'
                TypeReference
                  Identifier: ' Expression'
      IfStatement
        CallExpression
          Identifier: 'isStringLiteralJsxAttribute'
          Identifier: 'node'
        Block
          ReturnStatement
            Identifier: ' node'
      ReturnStatement
        Identifier: ' undefined'
  FunctionDeclaration
    Identifier: ' isScope'
    Parameter
      Identifier: 'node'
      TypeReference
        Identifier: ' Node'
    TypePredicate
      Identifier: ' node'
      TypeReference
        Identifier: ' Scope'
    Block
      ReturnStatement
        ConditionalExpression
          CallExpression
            Identifier: ' isArrowFunction'
            Identifier: 'node'
          QuestionToken
          CallExpression
            Identifier: ' isFunctionBody'
            PropertyAccessExpression
              Identifier: 'node'
              Identifier: 'body'
          ColonToken
          BinaryExpression
            BinaryExpression
              BinaryExpression
                CallExpression
                  Identifier: '
        isFunctionLikeDeclaration'
                  Identifier: 'node'
                BarBarToken
                CallExpression
                  Identifier: ' isSourceFile'
                  Identifier: 'node'
              BarBarToken
              CallExpression
                Identifier: ' isModuleBlock'
                Identifier: 'node'
            BarBarToken
            CallExpression
              Identifier: ' isClassLike'
              Identifier: 'node'
  FunctionDeclaration
    Identifier: ' collectEnclosingScopes'
    Parameter
      Identifier: 'range'
      TypeReference
        Identifier: ' TargetRange'
    ArrayType
      TypeReference
        Identifier: ' Scope'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' current'
            TypeReference
              Identifier: ' Node'
            ConditionalExpression
              CallExpression
                Identifier: ' isReadonlyArray'
                PropertyAccessExpression
                  Identifier: 'range'
                  Identifier: 'range'
              QuestionToken
              CallExpression
                Identifier: ' first'
                PropertyAccessExpression
                  Identifier: 'range'
                  Identifier: 'range'
              ColonToken
              PropertyAccessExpression
                Identifier: ' range'
                Identifier: 'range'
      IfStatement
        BinaryExpression
          BinaryExpression
            PropertyAccessExpression
              Identifier: 'range'
              Identifier: 'facts'
            AmpersandToken
            PropertyAccessExpression
              Identifier: ' RangeFacts'
              Identifier: 'UsesThis'
          AmpersandAmpersandToken
          PrefixUnaryExpression
            ParenthesizedExpression
              BinaryExpression
                PropertyAccessExpression
                  Identifier: 'range'
                  Identifier: 'facts'
                AmpersandToken
                PropertyAccessExpression
                  Identifier: ' RangeFacts'
                  Identifier: 'UsesThisInFunction'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' containingClass'
                CallExpression
                  Identifier: ' getContainingClass'
                  Identifier: 'current'
          IfStatement
            Identifier: 'containingClass'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' containingFunction'
                    CallExpression
                      Identifier: ' findAncestor'
                      Identifier: 'current'
                      Identifier: ' isFunctionLikeDeclaration'
              ReturnStatement
                ConditionalExpression
                  Identifier: ' containingFunction'
                  QuestionToken
                  ArrayLiteralExpression
                    Identifier: 'containingFunction'
                    Identifier: ' containingClass'
                  ColonToken
                  ArrayLiteralExpression
                    Identifier: 'containingClass'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' scopes'
            ArrayType
              TypeReference
                Identifier: ' Scope'
            ArrayLiteralExpression
      WhileStatement
        TrueKeyword
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        current'
              EqualsToken
              PropertyAccessExpression
                Identifier: ' current'
                Identifier: 'parent'
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'current'
                Identifier: 'kind'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'Parameter'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            // Skip all the way to the outer scope of the function that declared this parameter
            current'
                  EqualsToken
                  PropertyAccessExpression
                    NonNullExpression
                      CallExpression
                        Identifier: ' findAncestor'
                        Identifier: 'current'
                        ArrowFunction
                          Parameter
                            Identifier: ' parent'
                          EqualsGreaterThanToken
                          CallExpression
                            Identifier: ' isFunctionLikeDeclaration'
                            Identifier: 'parent'
                    Identifier: 'parent'
          IfStatement
            CallExpression
              Identifier: 'isScope'
              Identifier: 'current'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            scopes'
                    Identifier: 'push'
                  Identifier: 'current'
              IfStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: 'current'
                    Identifier: 'kind'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'SourceFile'
                Block
                  ReturnStatement
                    Identifier: ' scopes'
  FunctionDeclaration
    Identifier: ' getFunctionExtractionAtIndex'
    Parameter
      Identifier: 'targetRange'
      TypeReference
        Identifier: ' TargetRange'
    Parameter
      Identifier: ' context'
      TypeReference
        Identifier: ' RefactorContext'
    Parameter
      Identifier: ' requestedChangesIndex'
      NumberKeyword
    TypeReference
      Identifier: ' RefactorEditInfo'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            ObjectBindingPattern
              BindingElement
                Identifier: ' scopes'
              BindingElement
                Identifier: ' readsAndWrites'
                ObjectBindingPattern
                  BindingElement
                    Identifier: ' target'
                  BindingElement
                    Identifier: ' usagesPerScope'
                  BindingElement
                    Identifier: ' functionErrorsPerScope'
                  BindingElement
                    Identifier: ' exposedVariableDeclarations'
            CallExpression
              Identifier: ' getPossibleExtractionsWorker'
              Identifier: 'targetRange'
              Identifier: ' context'
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            Identifier: '
    Debug'
            Identifier: 'assert'
          PrefixUnaryExpression
            PropertyAccessExpression
              ElementAccessExpression
                Identifier: 'functionErrorsPerScope'
                Identifier: 'requestedChangesIndex'
              Identifier: 'length'
          StringLiteral
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            NonNullExpression
              PropertyAccessExpression
                Identifier: '
    context'
                Identifier: 'cancellationToken'
            Identifier: 'throwIfCancellationRequested'
      ReturnStatement
        CallExpression
          Identifier: ' extractFunctionInScope'
          Identifier: 'target'
          ElementAccessExpression
            Identifier: ' scopes'
            Identifier: 'requestedChangesIndex'
          ElementAccessExpression
            Identifier: ' usagesPerScope'
            Identifier: 'requestedChangesIndex'
          Identifier: ' exposedVariableDeclarations'
          Identifier: ' targetRange'
          Identifier: ' context'
  FunctionDeclaration
    Identifier: ' getConstantExtractionAtIndex'
    Parameter
      Identifier: 'targetRange'
      TypeReference
        Identifier: ' TargetRange'
    Parameter
      Identifier: ' context'
      TypeReference
        Identifier: ' RefactorContext'
    Parameter
      Identifier: ' requestedChangesIndex'
      NumberKeyword
    TypeReference
      Identifier: ' RefactorEditInfo'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            ObjectBindingPattern
              BindingElement
                Identifier: ' scopes'
              BindingElement
                Identifier: ' readsAndWrites'
                ObjectBindingPattern
                  BindingElement
                    Identifier: ' target'
                  BindingElement
                    Identifier: ' usagesPerScope'
                  BindingElement
                    Identifier: ' constantErrorsPerScope'
                  BindingElement
                    Identifier: ' exposedVariableDeclarations'
            CallExpression
              Identifier: ' getPossibleExtractionsWorker'
              Identifier: 'targetRange'
              Identifier: ' context'
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            Identifier: '
    Debug'
            Identifier: 'assert'
          PrefixUnaryExpression
            PropertyAccessExpression
              ElementAccessExpression
                Identifier: 'constantErrorsPerScope'
                Identifier: 'requestedChangesIndex'
              Identifier: 'length'
          StringLiteral
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            Identifier: '
    Debug'
            Identifier: 'assert'
          BinaryExpression
            PropertyAccessExpression
              Identifier: 'exposedVariableDeclarations'
              Identifier: 'length'
            EqualsEqualsEqualsToken
            NumericLiteral
          StringLiteral
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            NonNullExpression
              PropertyAccessExpression
                Identifier: '
    context'
                Identifier: 'cancellationToken'
            Identifier: 'throwIfCancellationRequested'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' expression'
            ConditionalExpression
              CallExpression
                Identifier: ' isExpression'
                Identifier: 'target'
              QuestionToken
              Identifier: ' target'
              ColonToken
              PropertyAccessExpression
                ParenthesizedExpression
                  AsExpression
                    ElementAccessExpression
                      PropertyAccessExpression
                        Identifier: 'target'
                        Identifier: 'statements'
                      NumericLiteral
                    TypeReference
                      Identifier: ' ExpressionStatement'
                Identifier: 'expression'
      ReturnStatement
        CallExpression
          Identifier: ' extractConstantInScope'
          Identifier: 'expression'
          ElementAccessExpression
            Identifier: ' scopes'
            Identifier: 'requestedChangesIndex'
          ElementAccessExpression
            Identifier: ' usagesPerScope'
            Identifier: 'requestedChangesIndex'
          PropertyAccessExpression
            Identifier: ' targetRange'
            Identifier: 'facts'
          Identifier: ' context'
  InterfaceDeclaration
    Identifier: ' Extraction'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' description'
      StringKeyword
    PropertySignature
      ReadonlyKeyword
      Identifier: ' errors'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' Diagnostic'
  InterfaceDeclaration
    Identifier: ' ScopeExtractions'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' functionExtraction'
      TypeReference
        Identifier: ' Extraction'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' constantExtraction'
      TypeReference
        Identifier: ' Extraction'
  FunctionDeclaration
    Identifier: ' getPossibleExtractions'
    Parameter
      Identifier: 'targetRange'
      TypeReference
        Identifier: ' TargetRange'
    Parameter
      Identifier: ' context'
      TypeReference
        Identifier: ' RefactorContext'
    TypeLiteral
      PropertySignature
        ReadonlyKeyword
        Identifier: ' affectedTextRange'
        TypeReference
          Identifier: ' TextRange'
      PropertySignature
        ReadonlyKeyword
        Identifier: ' extractions'
        UnionType
          ArrayType
            TypeReference
              Identifier: ' ScopeExtractions'
          UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            ObjectBindingPattern
              BindingElement
                Identifier: ' scopes'
              BindingElement
                Identifier: ' affectedTextRange'
              BindingElement
                Identifier: ' readsAndWrites'
                ObjectBindingPattern
                  BindingElement
                    Identifier: ' functionErrorsPerScope'
                  BindingElement
                    Identifier: ' constantErrorsPerScope'
            CallExpression
              Identifier: ' getPossibleExtractionsWorker'
              Identifier: 'targetRange'
              Identifier: ' context'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' extractions'
            CallExpression
              PropertyAccessExpression
                Identifier: ' scopes'
                Identifier: 'map'
              ArrowFunction
                Parameter
                  Identifier: 'scope'
                Parameter
                  Identifier: ' i'
                TypeReference
                  Identifier: ' ScopeExtractions'
                EqualsGreaterThanToken
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' functionDescriptionPart'
                        CallExpression
                          Identifier: ' getDescriptionForFunctionInScope'
                          Identifier: 'scope'
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' constantDescriptionPart'
                        CallExpression
                          Identifier: ' getDescriptionForConstantInScope'
                          Identifier: 'scope'
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' scopeDescription'
                        ConditionalExpression
                          CallExpression
                            Identifier: ' isFunctionLikeDeclaration'
                            Identifier: 'scope'
                          QuestionToken
                          CallExpression
                            Identifier: ' getDescriptionForFunctionLikeDeclaration'
                            Identifier: 'scope'
                          ColonToken
                          ConditionalExpression
                            CallExpression
                              Identifier: ' isClassLike'
                              Identifier: 'scope'
                            QuestionToken
                            CallExpression
                              Identifier: ' getDescriptionForClassLikeDeclaration'
                              Identifier: 'scope'
                            ColonToken
                            CallExpression
                              Identifier: ' getDescriptionForModuleLikeDeclaration'
                              Identifier: 'scope'
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' functionDescription'
                        StringKeyword
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' constantDescription'
                        StringKeyword
                  IfStatement
                    BinaryExpression
                      Identifier: 'scopeDescription'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' SpecialScope'
                        Identifier: 'Global'
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
            functionDescription'
                          EqualsToken
                          CallExpression
                            Identifier: ' formatStringFromArgs'
                            CallExpression
                              Identifier: 'getLocaleSpecificMessage'
                              PropertyAccessExpression
                                Identifier: 'Diagnostics'
                                Identifier: 'Extract_to_0_in_1_scope'
                            ArrayLiteralExpression
                              Identifier: 'functionDescriptionPart'
                              StringLiteral
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
            constantDescription'
                          EqualsToken
                          CallExpression
                            Identifier: ' formatStringFromArgs'
                            CallExpression
                              Identifier: 'getLocaleSpecificMessage'
                              PropertyAccessExpression
                                Identifier: 'Diagnostics'
                                Identifier: 'Extract_to_0_in_1_scope'
                            ArrayLiteralExpression
                              Identifier: 'constantDescriptionPart'
                              StringLiteral
                    IfStatement
                      BinaryExpression
                        Identifier: 'scopeDescription'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' SpecialScope'
                          Identifier: 'Module'
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
            functionDescription'
                            EqualsToken
                            CallExpression
                              Identifier: ' formatStringFromArgs'
                              CallExpression
                                Identifier: 'getLocaleSpecificMessage'
                                PropertyAccessExpression
                                  Identifier: 'Diagnostics'
                                  Identifier: 'Extract_to_0_in_1_scope'
                              ArrayLiteralExpression
                                Identifier: 'functionDescriptionPart'
                                StringLiteral
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
            constantDescription'
                            EqualsToken
                            CallExpression
                              Identifier: ' formatStringFromArgs'
                              CallExpression
                                Identifier: 'getLocaleSpecificMessage'
                                PropertyAccessExpression
                                  Identifier: 'Diagnostics'
                                  Identifier: 'Extract_to_0_in_1_scope'
                              ArrayLiteralExpression
                                Identifier: 'constantDescriptionPart'
                                StringLiteral
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
            functionDescription'
                            EqualsToken
                            CallExpression
                              Identifier: ' formatStringFromArgs'
                              CallExpression
                                Identifier: 'getLocaleSpecificMessage'
                                PropertyAccessExpression
                                  Identifier: 'Diagnostics'
                                  Identifier: 'Extract_to_0_in_1'
                              ArrayLiteralExpression
                                Identifier: 'functionDescriptionPart'
                                Identifier: ' scopeDescription'
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
            constantDescription'
                            EqualsToken
                            CallExpression
                              Identifier: ' formatStringFromArgs'
                              CallExpression
                                Identifier: 'getLocaleSpecificMessage'
                                PropertyAccessExpression
                                  Identifier: 'Diagnostics'
                                  Identifier: 'Extract_to_0_in_1'
                              ArrayLiteralExpression
                                Identifier: 'constantDescriptionPart'
                                Identifier: ' scopeDescription'
                  IfStatement
                    BinaryExpression
                      BinaryExpression
                        Identifier: 'i'
                        EqualsEqualsEqualsToken
                        NumericLiteral
                      AmpersandAmpersandToken
                      PrefixUnaryExpression
                        CallExpression
                          Identifier: 'isClassLike'
                          Identifier: 'scope'
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
            constantDescription'
                          EqualsToken
                          CallExpression
                            Identifier: ' formatStringFromArgs'
                            CallExpression
                              Identifier: 'getLocaleSpecificMessage'
                              PropertyAccessExpression
                                Identifier: 'Diagnostics'
                                Identifier: 'Extract_to_0_in_enclosing_scope'
                            ArrayLiteralExpression
                              Identifier: 'constantDescriptionPart'
                  ReturnStatement
                    ObjectLiteralExpression
                      PropertyAssignment
                        Identifier: '
            functionExtraction'
                        ObjectLiteralExpression
                          PropertyAssignment
                            Identifier: '
                description'
                            Identifier: ' functionDescription'
                          PropertyAssignment
                            Identifier: '
                errors'
                            ElementAccessExpression
                              Identifier: ' functionErrorsPerScope'
                              Identifier: 'i'
                      PropertyAssignment
                        Identifier: '
            constantExtraction'
                        ObjectLiteralExpression
                          PropertyAssignment
                            Identifier: '
                description'
                            Identifier: ' constantDescription'
                          PropertyAssignment
                            Identifier: '
                errors'
                            ElementAccessExpression
                              Identifier: ' constantErrorsPerScope'
                              Identifier: 'i'
      ReturnStatement
        ObjectLiteralExpression
          ShorthandPropertyAssignment
            Identifier: ' affectedTextRange'
          ShorthandPropertyAssignment
            Identifier: ' extractions'
  FunctionDeclaration
    Identifier: ' getPossibleExtractionsWorker'
    Parameter
      Identifier: 'targetRange'
      TypeReference
        Identifier: ' TargetRange'
    Parameter
      Identifier: ' context'
      TypeReference
        Identifier: ' RefactorContext'
    TypeLiteral
      PropertySignature
        ReadonlyKeyword
        Identifier: ' scopes'
        ArrayType
          TypeReference
            Identifier: ' Scope'
      PropertySignature
        ReadonlyKeyword
        Identifier: ' affectedTextRange'
        TypeReference
          Identifier: ' TextRange'
      PropertySignature
        ReadonlyKeyword
        Identifier: ' readsAndWrites'
        TypeReference
          Identifier: ' ReadsAndWrites'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            ObjectBindingPattern
              BindingElement
                Identifier: ' file'
                Identifier: ' sourceFile'
            Identifier: ' context'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' scopes'
            CallExpression
              Identifier: ' collectEnclosingScopes'
              Identifier: 'targetRange'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' enclosingTextRange'
            CallExpression
              Identifier: ' getEnclosingTextRange'
              Identifier: 'targetRange'
              Identifier: ' sourceFile'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' readsAndWrites'
            CallExpression
              Identifier: ' collectReadsAndWrites'
              Identifier: '
        targetRange'
              Identifier: '
        scopes'
              Identifier: '
        enclosingTextRange'
              Identifier: '
        sourceFile'
              CallExpression
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: '
        context'
                    Identifier: 'program'
                  Identifier: 'getTypeChecker'
              NonNullExpression
                PropertyAccessExpression
                  Identifier: '
        context'
                  Identifier: 'cancellationToken'
      ReturnStatement
        ObjectLiteralExpression
          ShorthandPropertyAssignment
            Identifier: ' scopes'
          PropertyAssignment
            Identifier: ' affectedTextRange'
            Identifier: ' enclosingTextRange'
          ShorthandPropertyAssignment
            Identifier: ' readsAndWrites'
  FunctionDeclaration
    Identifier: ' getDescriptionForFunctionInScope'
    Parameter
      Identifier: 'scope'
      TypeReference
        Identifier: ' Scope'
    StringKeyword
    Block
      ReturnStatement
        ConditionalExpression
          CallExpression
            Identifier: ' isFunctionLikeDeclaration'
            Identifier: 'scope'
          QuestionToken
          StringLiteral
          ColonToken
          ConditionalExpression
            CallExpression
              Identifier: ' isClassLike'
              Identifier: 'scope'
            QuestionToken
            StringLiteral
            ColonToken
            StringLiteral
  FunctionDeclaration
    Identifier: ' getDescriptionForConstantInScope'
    Parameter
      Identifier: 'scope'
      TypeReference
        Identifier: ' Scope'
    StringKeyword
    Block
      ReturnStatement
        ConditionalExpression
          CallExpression
            Identifier: ' isClassLike'
            Identifier: 'scope'
          QuestionToken
          StringLiteral
          ColonToken
          StringLiteral
  FunctionDeclaration
    Identifier: ' getDescriptionForFunctionLikeDeclaration'
    Parameter
      Identifier: 'scope'
      TypeReference
        Identifier: ' FunctionLikeDeclaration'
    StringKeyword
    Block
      SwitchStatement
        PropertyAccessExpression
          Identifier: 'scope'
          Identifier: 'kind'
        CaseBlock
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'Constructor'
            ReturnStatement
              StringLiteral
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'FunctionExpression'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'FunctionDeclaration'
            ReturnStatement
              ConditionalExpression
                PropertyAccessExpression
                  Identifier: ' scope'
                  Identifier: 'name'
                QuestionToken
                TemplateExpression
                  TemplateHead
                  TemplateSpan
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: 'scope'
                        Identifier: 'name'
                      Identifier: 'text'
                    TemplateTail
                ColonToken
                Identifier: ' ANONYMOUS'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ArrowFunction'
            ReturnStatement
              StringLiteral
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'MethodDeclaration'
            ReturnStatement
              TemplateExpression
                TemplateHead
                TemplateSpan
                  CallExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: 'scope'
                        Identifier: 'name'
                      Identifier: 'getText'
                  TemplateTail
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'GetAccessor'
            ReturnStatement
              TemplateExpression
                TemplateHead
                TemplateSpan
                  CallExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: 'scope'
                        Identifier: 'name'
                      Identifier: 'getText'
                  TemplateTail
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'SetAccessor'
            ReturnStatement
              TemplateExpression
                TemplateHead
                TemplateSpan
                  CallExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: 'scope'
                        Identifier: 'name'
                      Identifier: 'getText'
                  TemplateTail
          DefaultClause
            ExpressionStatement
              CallExpression
                PropertyAccessExpression
                  Identifier: '
            Debug'
                  Identifier: 'assertNever'
                Identifier: 'scope'
                TemplateExpression
                  TemplateHead
                  TemplateSpan
                    PropertyAccessExpression
                      ParenthesizedExpression
                        AsExpression
                          Identifier: 'scope'
                          TypeReference
                            Identifier: ' FunctionLikeDeclaration'
                      Identifier: 'kind'
                    TemplateTail
  FunctionDeclaration
    Identifier: ' getDescriptionForClassLikeDeclaration'
    Parameter
      Identifier: 'scope'
      TypeReference
        Identifier: ' ClassLikeDeclaration'
    StringKeyword
    Block
      ReturnStatement
        ConditionalExpression
          BinaryExpression
            PropertyAccessExpression
              Identifier: ' scope'
              Identifier: 'kind'
            EqualsEqualsEqualsToken
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ClassDeclaration'
          QuestionToken
          ConditionalExpression
            PropertyAccessExpression
              Identifier: ' scope'
              Identifier: 'name'
            QuestionToken
            TemplateExpression
              TemplateHead
              TemplateSpan
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: 'scope'
                    Identifier: 'name'
                  Identifier: 'text'
                TemplateTail
            ColonToken
            StringLiteral
          ColonToken
          ConditionalExpression
            PropertyAccessExpression
              Identifier: ' scope'
              Identifier: 'name'
            QuestionToken
            TemplateExpression
              TemplateHead
              TemplateSpan
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: 'scope'
                    Identifier: 'name'
                  Identifier: 'text'
                TemplateTail
            ColonToken
            StringLiteral
  FunctionDeclaration
    Identifier: ' getDescriptionForModuleLikeDeclaration'
    Parameter
      Identifier: 'scope'
      UnionType
        TypeReference
          Identifier: ' SourceFile'
        TypeReference
          Identifier: ' ModuleBlock'
    UnionType
      StringKeyword
      TypeReference
        Identifier: ' SpecialScope'
    Block
      ReturnStatement
        ConditionalExpression
          BinaryExpression
            PropertyAccessExpression
              Identifier: ' scope'
              Identifier: 'kind'
            EqualsEqualsEqualsToken
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ModuleBlock'
          QuestionToken
          TemplateExpression
            TemplateHead
            TemplateSpan
              CallExpression
                PropertyAccessExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: 'scope'
                      Identifier: 'parent'
                    Identifier: 'name'
                  Identifier: 'getText'
              TemplateTail
          ColonToken
          ConditionalExpression
            PropertyAccessExpression
              Identifier: ' scope'
              Identifier: 'externalModuleIndicator'
            QuestionToken
            PropertyAccessExpression
              Identifier: ' SpecialScope'
              Identifier: 'Module'
            ColonToken
            PropertyAccessExpression
              Identifier: ' SpecialScope'
              Identifier: 'Global'
  EnumDeclaration
    ConstKeyword
    Identifier: ' SpecialScope'
    EnumMember
      Identifier: '
    Module'
    EnumMember
      Identifier: '
    Global'
  FunctionDeclaration
    Identifier: ' extractFunctionInScope'
    Parameter
      Identifier: '
    node'
      UnionType
        TypeReference
          Identifier: ' Statement'
        TypeReference
          Identifier: ' Expression'
        TypeReference
          Identifier: ' Block'
    Parameter
      Identifier: '
    scope'
      TypeReference
        Identifier: ' Scope'
    Parameter
      ObjectBindingPattern
        BindingElement
          Identifier: ' usages'
          Identifier: ' usagesInScope'
        BindingElement
          Identifier: ' typeParameterUsages'
        BindingElement
          Identifier: ' substitutions'
      TypeReference
        Identifier: ' ScopeUsages'
    Parameter
      Identifier: '
    exposedVariableDeclarations'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' VariableDeclaration'
    Parameter
      Identifier: '
    range'
      TypeReference
        Identifier: ' TargetRange'
    Parameter
      Identifier: '
    context'
      TypeReference
        Identifier: ' RefactorContext'
    TypeReference
      Identifier: ' RefactorEditInfo'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' checker'
            CallExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: ' context'
                  Identifier: 'program'
                Identifier: 'getTypeChecker'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' scriptTarget'
            CallExpression
              Identifier: ' getEmitScriptTarget'
              CallExpression
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: 'context'
                    Identifier: 'program'
                  Identifier: 'getCompilerOptions'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' importAdder'
            CallExpression
              PropertyAccessExpression
                Identifier: ' codefix'
                Identifier: 'createImportAdder'
              PropertyAccessExpression
                Identifier: 'context'
                Identifier: 'file'
              PropertyAccessExpression
                Identifier: ' context'
                Identifier: 'program'
              PropertyAccessExpression
                Identifier: ' context'
                Identifier: 'preferences'
              PropertyAccessExpression
                Identifier: ' context'
                Identifier: 'host'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' file'
            CallExpression
              PropertyAccessExpression
                Identifier: ' scope'
                Identifier: 'getSourceFile'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' functionNameText'
            CallExpression
              Identifier: ' getUniqueName'
              ConditionalExpression
                CallExpression
                  Identifier: 'isClassLike'
                  Identifier: 'scope'
                QuestionToken
                StringLiteral
                ColonToken
                StringLiteral
              Identifier: ' file'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' isJS'
            CallExpression
              Identifier: ' isInJSFile'
              Identifier: 'scope'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' functionName'
            CallExpression
              PropertyAccessExpression
                Identifier: ' factory'
                Identifier: 'createIdentifier'
              Identifier: 'functionNameText'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' returnType'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' parameters'
            ArrayType
              TypeReference
                Identifier: ' ParameterDeclaration'
            ArrayLiteralExpression
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' callArguments'
            ArrayType
              TypeReference
                Identifier: ' Identifier'
            ArrayLiteralExpression
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' writes'
            UnionType
              ArrayType
                TypeReference
                  Identifier: ' UsageEntry'
              UndefinedKeyword
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            Identifier: '
    usagesInScope'
            Identifier: 'forEach'
          ArrowFunction
            Parameter
              Identifier: 'usage'
            Parameter
              Identifier: ' name'
            EqualsGreaterThanToken
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' typeNode'
                    UnionType
                      TypeReference
                        Identifier: ' TypeNode'
                      UndefinedKeyword
              IfStatement
                PrefixUnaryExpression
                  Identifier: 'isJS'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' type'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' checker'
                            Identifier: 'getTypeOfSymbolAtLocation'
                          PropertyAccessExpression
                            Identifier: 'usage'
                            Identifier: 'symbol'
                          PropertyAccessExpression
                            Identifier: ' usage'
                            Identifier: 'node'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
            // Widen the type so we don't emit nonsense annotations like "function fn(x: 3) {"
            type'
                      EqualsToken
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' checker'
                          Identifier: 'getBaseTypeOfLiteralType'
                        Identifier: 'type'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
            typeNode'
                      EqualsToken
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' codefix'
                          Identifier: 'typeToAutoImportableTypeNode'
                        Identifier: 'checker'
                        Identifier: ' importAdder'
                        Identifier: ' type'
                        Identifier: ' scope'
                        Identifier: ' scriptTarget'
                        PropertyAccessExpression
                          Identifier: ' NodeBuilderFlags'
                          Identifier: 'NoTruncation'
                        PropertyAccessExpression
                          Identifier: ' InternalNodeBuilderFlags'
                          Identifier: 'AllowUnresolvedNames'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' paramDecl'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' factory'
                        Identifier: 'createParameterDeclaration'
                      Identifier: '
            /*modifiers*/ undefined'
                      Identifier: '
            /*dotDotDotToken*/ undefined'
                      Identifier: '
            /*name*/ name'
                      Identifier: '
            /*questionToken*/ undefined'
                      Identifier: '
            typeNode'
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
        parameters'
                    Identifier: 'push'
                  Identifier: 'paramDecl'
              IfStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: 'usage'
                    Identifier: 'usage'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' Usage'
                    Identifier: 'Write'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        ParenthesizedExpression
                          BinaryExpression
                            Identifier: 'writes'
                            BarBarToken
                            ParenthesizedExpression
                              BinaryExpression
                                Identifier: 'writes'
                                EqualsToken
                                ArrayLiteralExpression
                        Identifier: 'push'
                      Identifier: 'usage'
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
        callArguments'
                    Identifier: 'push'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: 'factory'
                      Identifier: 'createIdentifier'
                    Identifier: 'name'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' typeParametersAndDeclarations'
            CallExpression
              Identifier: ' arrayFrom'
              CallExpression
                PropertyAccessExpression
                  Identifier: 'typeParameterUsages'
                  Identifier: 'values'
              ArrowFunction
                Parameter
                  Identifier: ' type'
                EqualsGreaterThanToken
                ParenthesizedExpression
                  ObjectLiteralExpression
                    ShorthandPropertyAssignment
                      Identifier: ' type'
                    PropertyAssignment
                      Identifier: ' declaration'
                      CallExpression
                        Identifier: ' getFirstDeclarationBeforePosition'
                        Identifier: 'type'
                        PropertyAccessExpression
                          Identifier: ' context'
                          Identifier: 'startPosition'
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            Identifier: '
    typeParametersAndDeclarations'
            Identifier: 'sort'
          Identifier: 'compareTypesByDeclarationOrder'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' typeParameters'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeParameterDeclaration'
              UndefinedKeyword
            ConditionalExpression
              BinaryExpression
                PropertyAccessExpression
                  Identifier: ' typeParametersAndDeclarations'
                  Identifier: 'length'
                EqualsEqualsEqualsToken
                NumericLiteral
              QuestionToken
              Identifier: ' undefined'
              ColonToken
              CallExpression
                Identifier: ' mapDefined'
                Identifier: 'typeParametersAndDeclarations'
                ArrowFunction
                  Parameter
                    ObjectBindingPattern
                      BindingElement
                        Identifier: ' declaration'
                  EqualsGreaterThanToken
                  AsExpression
                    Identifier: ' declaration'
                    TypeReference
                      Identifier: ' TypeParameterDeclaration'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' callTypeArguments'
            UnionType
              TypeOperator
                ArrayType
                  TypeReference
                    Identifier: ' TypeNode'
              UndefinedKeyword
            ConditionalExpression
              BinaryExpression
                Identifier: ' typeParameters'
                ExclamationEqualsEqualsToken
                Identifier: ' undefined'
              QuestionToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' typeParameters'
                  Identifier: 'map'
                ArrowFunction
                  Parameter
                    Identifier: 'decl'
                  EqualsGreaterThanToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' factory'
                      Identifier: 'createTypeReferenceNode'
                    PropertyAccessExpression
                      Identifier: 'decl'
                      Identifier: 'name'
                    Identifier: ' /*typeArguments*/ undefined'
              ColonToken
              Identifier: ' undefined'
      IfStatement
        BinaryExpression
          CallExpression
            Identifier: 'isExpression'
            Identifier: 'node'
          AmpersandAmpersandToken
          PrefixUnaryExpression
            Identifier: 'isJS'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' contextualType'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' checker'
                    Identifier: 'getContextualType'
                  Identifier: 'node'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        returnType'
              EqualsToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' checker'
                  Identifier: 'typeToTypeNode'
                NonNullExpression
                  Identifier: 'contextualType'
                Identifier: ' scope'
                PropertyAccessExpression
                  Identifier: ' NodeBuilderFlags'
                  Identifier: 'NoTruncation'
                PropertyAccessExpression
                  Identifier: ' InternalNodeBuilderFlags'
                  Identifier: 'AllowUnresolvedNames'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            ObjectBindingPattern
              BindingElement
                Identifier: ' body'
              BindingElement
                Identifier: ' returnValueProperty'
            CallExpression
              Identifier: ' transformFunctionBody'
              Identifier: 'node'
              Identifier: ' exposedVariableDeclarations'
              Identifier: ' writes'
              Identifier: ' substitutions'
              PrefixUnaryExpression
                PrefixUnaryExpression
                  ParenthesizedExpression
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: 'range'
                        Identifier: 'facts'
                      AmpersandToken
                      PropertyAccessExpression
                        Identifier: ' RangeFacts'
                        Identifier: 'HasReturn'
      ExpressionStatement
        CallExpression
          Identifier: '
    suppressLeadingAndTrailingTrivia'
          Identifier: 'body'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' newFunction'
            UnionType
              TypeReference
                Identifier: ' MethodDeclaration'
              TypeReference
                Identifier: ' FunctionDeclaration'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' callThis'
            PrefixUnaryExpression
              PrefixUnaryExpression
                ParenthesizedExpression
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: 'range'
                      Identifier: 'facts'
                    AmpersandToken
                    PropertyAccessExpression
                      Identifier: ' RangeFacts'
                      Identifier: 'UsesThisInFunction'
      IfStatement
        CallExpression
          Identifier: 'isClassLike'
          Identifier: 'scope'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' modifiers'
                ArrayType
                  TypeReference
                    Identifier: ' Modifier'
                ConditionalExpression
                  Identifier: ' isJS'
                  QuestionToken
                  ArrayLiteralExpression
                  ColonToken
                  ArrayLiteralExpression
                    CallExpression
                      PropertyAccessExpression
                        Identifier: 'factory'
                        Identifier: 'createModifier'
                      PropertyAccessExpression
                        Identifier: 'SyntaxKind'
                        Identifier: 'PrivateKeyword'
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'range'
                Identifier: 'facts'
              AmpersandToken
              PropertyAccessExpression
                Identifier: ' RangeFacts'
                Identifier: 'InStaticRegion'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            modifiers'
                    Identifier: 'push'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: 'factory'
                      Identifier: 'createModifier'
                    PropertyAccessExpression
                      Identifier: 'SyntaxKind'
                      Identifier: 'StaticKeyword'
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'range'
                Identifier: 'facts'
              AmpersandToken
              PropertyAccessExpression
                Identifier: ' RangeFacts'
                Identifier: 'IsAsyncFunction'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            modifiers'
                    Identifier: 'push'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: 'factory'
                      Identifier: 'createModifier'
                    PropertyAccessExpression
                      Identifier: 'SyntaxKind'
                      Identifier: 'AsyncKeyword'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        newFunction'
              EqualsToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' factory'
                  Identifier: 'createMethodDeclaration'
                ConditionalExpression
                  PropertyAccessExpression
                    Identifier: '
            modifiers'
                    Identifier: 'length'
                  QuestionToken
                  Identifier: ' modifiers'
                  ColonToken
                  Identifier: ' undefined'
                ConditionalExpression
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: '
            range'
                      Identifier: 'facts'
                    AmpersandToken
                    PropertyAccessExpression
                      Identifier: ' RangeFacts'
                      Identifier: 'IsGenerator'
                  QuestionToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' factory'
                      Identifier: 'createToken'
                    PropertyAccessExpression
                      Identifier: 'SyntaxKind'
                      Identifier: 'AsteriskToken'
                  ColonToken
                  Identifier: ' undefined'
                Identifier: '
            functionName'
                Identifier: '
            /*questionToken*/ undefined'
                Identifier: '
            typeParameters'
                Identifier: '
            parameters'
                Identifier: '
            returnType'
                Identifier: '
            body'
        Block
          IfStatement
            Identifier: 'callThis'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            parameters'
                    Identifier: 'unshift'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
                factory'
                      Identifier: 'createParameterDeclaration'
                    Identifier: '
                    /*modifiers*/ undefined'
                    Identifier: '
                    /*dotDotDotToken*/ undefined'
                    StringLiteral
                    Identifier: '
                    /*questionToken*/ undefined'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                    checker'
                        Identifier: 'typeToTypeNode'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                        checker'
                          Identifier: 'getTypeAtLocation'
                        NonNullExpression
                          PropertyAccessExpression
                            Identifier: 'range'
                            Identifier: 'thisNode'
                      Identifier: '
                        scope'
                      PropertyAccessExpression
                        Identifier: '
                        NodeBuilderFlags'
                        Identifier: 'NoTruncation'
                      PropertyAccessExpression
                        Identifier: '
                        InternalNodeBuilderFlags'
                        Identifier: 'AllowUnresolvedNames'
                    Identifier: '
                    /*initializer*/ undefined'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        newFunction'
              EqualsToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' factory'
                  Identifier: 'createFunctionDeclaration'
                ConditionalExpression
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: '
            range'
                      Identifier: 'facts'
                    AmpersandToken
                    PropertyAccessExpression
                      Identifier: ' RangeFacts'
                      Identifier: 'IsAsyncFunction'
                  QuestionToken
                  ArrayLiteralExpression
                    CallExpression
                      PropertyAccessExpression
                        Identifier: 'factory'
                        Identifier: 'createToken'
                      PropertyAccessExpression
                        Identifier: 'SyntaxKind'
                        Identifier: 'AsyncKeyword'
                  ColonToken
                  Identifier: ' undefined'
                ConditionalExpression
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: '
            range'
                      Identifier: 'facts'
                    AmpersandToken
                    PropertyAccessExpression
                      Identifier: ' RangeFacts'
                      Identifier: 'IsGenerator'
                  QuestionToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' factory'
                      Identifier: 'createToken'
                    PropertyAccessExpression
                      Identifier: 'SyntaxKind'
                      Identifier: 'AsteriskToken'
                  ColonToken
                  Identifier: ' undefined'
                Identifier: '
            functionName'
                Identifier: '
            typeParameters'
                Identifier: '
            parameters'
                Identifier: '
            returnType'
                Identifier: '
            body'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' changeTracker'
            CallExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: ' textChanges'
                  Identifier: 'ChangeTracker'
                Identifier: 'fromContext'
              Identifier: 'context'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' minInsertionPos'
            PropertyAccessExpression
              ParenthesizedExpression
                ConditionalExpression
                  CallExpression
                    Identifier: 'isReadonlyArray'
                    PropertyAccessExpression
                      Identifier: 'range'
                      Identifier: 'range'
                  QuestionToken
                  CallExpression
                    Identifier: ' last'
                    PropertyAccessExpression
                      Identifier: 'range'
                      Identifier: 'range'
                  ColonToken
                  PropertyAccessExpression
                    Identifier: ' range'
                    Identifier: 'range'
              Identifier: 'end'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' nodeToInsertBefore'
            CallExpression
              Identifier: ' getNodeToInsertFunctionBefore'
              Identifier: 'minInsertionPos'
              Identifier: ' scope'
      IfStatement
        Identifier: 'nodeToInsertBefore'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        changeTracker'
                Identifier: 'insertNodeBefore'
              PropertyAccessExpression
                Identifier: 'context'
                Identifier: 'file'
              Identifier: ' nodeToInsertBefore'
              Identifier: ' newFunction'
              TrueKeyword
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        changeTracker'
                Identifier: 'insertNodeAtEndOfScope'
              PropertyAccessExpression
                Identifier: 'context'
                Identifier: 'file'
              Identifier: ' scope'
              Identifier: ' newFunction'
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            Identifier: '
    importAdder'
            Identifier: 'writeFixes'
          Identifier: 'changeTracker'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' newNodes'
            ArrayType
              TypeReference
                Identifier: ' Node'
            ArrayLiteralExpression
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' called'
            CallExpression
              Identifier: ' getCalledExpression'
              Identifier: 'scope'
              Identifier: ' range'
              Identifier: ' functionNameText'
      IfStatement
        Identifier: 'callThis'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        callArguments'
                Identifier: 'unshift'
              CallExpression
                PropertyAccessExpression
                  Identifier: 'factory'
                  Identifier: 'createIdentifier'
                StringLiteral
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' call'
            TypeReference
              Identifier: ' Expression'
            CallExpression
              PropertyAccessExpression
                Identifier: ' factory'
                Identifier: 'createCallExpression'
              ConditionalExpression
                Identifier: '
        callThis'
                QuestionToken
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' factory'
                    Identifier: 'createPropertyAccessExpression'
                  Identifier: '
            called'
                  StringLiteral
                ColonToken
                Identifier: ' called'
              Identifier: '
        callTypeArguments'
              Identifier: ' // Note that no attempt is made to take advantage of type argument inference
        callArguments'
      IfStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: 'range'
            Identifier: 'facts'
          AmpersandToken
          PropertyAccessExpression
            Identifier: ' RangeFacts'
            Identifier: 'IsGenerator'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        call'
              EqualsToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' factory'
                  Identifier: 'createYieldExpression'
                CallExpression
                  PropertyAccessExpression
                    Identifier: 'factory'
                    Identifier: 'createToken'
                  PropertyAccessExpression
                    Identifier: 'SyntaxKind'
                    Identifier: 'AsteriskToken'
                Identifier: ' call'
      IfStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: 'range'
            Identifier: 'facts'
          AmpersandToken
          PropertyAccessExpression
            Identifier: ' RangeFacts'
            Identifier: 'IsAsyncFunction'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        call'
              EqualsToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' factory'
                  Identifier: 'createAwaitExpression'
                Identifier: 'call'
      IfStatement
        CallExpression
          Identifier: 'isInJSXContent'
          Identifier: 'node'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        call'
              EqualsToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' factory'
                  Identifier: 'createJsxExpression'
                Identifier: '/*dotDotDotToken*/ undefined'
                Identifier: ' call'
      IfStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: 'exposedVariableDeclarations'
            Identifier: 'length'
          AmpersandAmpersandToken
          PrefixUnaryExpression
            Identifier: 'writes'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        // No need to mix declarations and writes.

        // How could any variables be exposed if there's a return statement?
        Debug'
                Identifier: 'assert'
              PrefixUnaryExpression
                Identifier: 'returnValueProperty'
              StringLiteral
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        Debug'
                Identifier: 'assert'
              PrefixUnaryExpression
                ParenthesizedExpression
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: 'range'
                      Identifier: 'facts'
                    AmpersandToken
                    PropertyAccessExpression
                      Identifier: ' RangeFacts'
                      Identifier: 'HasReturn'
              StringLiteral
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'exposedVariableDeclarations'
                Identifier: 'length'
              EqualsEqualsEqualsToken
              NumericLiteral
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' variableDeclaration'
                    ElementAccessExpression
                      Identifier: ' exposedVariableDeclarations'
                      NumericLiteral
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            newNodes'
                    Identifier: 'push'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: 'factory'
                      Identifier: 'createVariableStatement'
                    Identifier: '
                /*modifiers*/ undefined'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                factory'
                        Identifier: 'createVariableDeclarationList'
                      ArrayLiteralExpression
                        CallExpression
                          PropertyAccessExpression
                            Identifier: 'factory'
                            Identifier: 'createVariableDeclaration'
                          CallExpression
                            Identifier: 'getSynthesizedDeepClone'
                            PropertyAccessExpression
                              Identifier: 'variableDeclaration'
                              Identifier: 'name'
                          Identifier: ' /*exclamationToken*/ undefined'
                          CallExpression
                            Identifier: ' /*type*/ getSynthesizedDeepClone'
                            PropertyAccessExpression
                              Identifier: 'variableDeclaration'
                              Identifier: 'type'
                          Identifier: ' /*initializer*/ call'
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: '
                    variableDeclaration'
                          Identifier: 'parent'
                        Identifier: 'flags'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' bindingElements'
                    ArrayType
                      TypeReference
                        Identifier: ' BindingElement'
                    ArrayLiteralExpression
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' typeElements'
                    ArrayType
                      TypeReference
                        Identifier: ' TypeElement'
                    ArrayLiteralExpression
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' commonNodeFlags'
                    PropertyAccessExpression
                      PropertyAccessExpression
                        ElementAccessExpression
                          Identifier: ' exposedVariableDeclarations'
                          NumericLiteral
                        Identifier: 'parent'
                      Identifier: 'flags'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' sawExplicitType'
                    FalseKeyword
              ForOfStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' variableDeclaration'
                Identifier: ' exposedVariableDeclarations'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                bindingElements'
                        Identifier: 'push'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: 'factory'
                          Identifier: 'createBindingElement'
                        Identifier: '
                    /*dotDotDotToken*/ undefined'
                        Identifier: '
                    /*propertyName*/ undefined'
                        CallExpression
                          Identifier: '
                    /*name*/ getSynthesizedDeepClone'
                          PropertyAccessExpression
                            Identifier: 'variableDeclaration'
                            Identifier: 'name'
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' variableType'
                        UnionType
                          TypeReference
                            Identifier: ' TypeNode'
                          UndefinedKeyword
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' checker'
                            Identifier: 'typeToTypeNode'
                          CallExpression
                            PropertyAccessExpression
                              Identifier: '
                    checker'
                              Identifier: 'getBaseTypeOfLiteralType'
                            CallExpression
                              PropertyAccessExpression
                                Identifier: 'checker'
                                Identifier: 'getTypeAtLocation'
                              Identifier: 'variableDeclaration'
                          Identifier: '
                    scope'
                          PropertyAccessExpression
                            Identifier: '
                    NodeBuilderFlags'
                            Identifier: 'NoTruncation'
                          PropertyAccessExpression
                            Identifier: '
                    InternalNodeBuilderFlags'
                            Identifier: 'AllowUnresolvedNames'
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '

                typeElements'
                        Identifier: 'push'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: 'factory'
                          Identifier: 'createPropertySignature'
                        Identifier: '
                    /*modifiers*/ undefined'
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: '
                    /*name*/ variableDeclaration'
                            Identifier: 'symbol'
                          Identifier: 'name'
                        Identifier: '
                    /*questionToken*/ undefined'
                        Identifier: '
                    /*type*/ variableType'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                sawExplicitType'
                      EqualsToken
                      BinaryExpression
                        Identifier: ' sawExplicitType'
                        BarBarToken
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: ' variableDeclaration'
                            Identifier: 'type'
                          ExclamationEqualsEqualsToken
                          Identifier: ' undefined'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                commonNodeFlags'
                      EqualsToken
                      BinaryExpression
                        Identifier: ' commonNodeFlags'
                        AmpersandToken
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: ' variableDeclaration'
                            Identifier: 'parent'
                          Identifier: 'flags'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' typeLiteral'
                    UnionType
                      TypeReference
                        Identifier: ' TypeLiteralNode'
                      UndefinedKeyword
                    ConditionalExpression
                      Identifier: ' sawExplicitType'
                      QuestionToken
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' factory'
                          Identifier: 'createTypeLiteralNode'
                        Identifier: 'typeElements'
                      ColonToken
                      Identifier: ' undefined'
              IfStatement
                Identifier: 'typeLiteral'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                setEmitFlags'
                      Identifier: 'typeLiteral'
                      PropertyAccessExpression
                        Identifier: ' EmitFlags'
                        Identifier: 'SingleLine'
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '

            newNodes'
                    Identifier: 'push'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: 'factory'
                      Identifier: 'createVariableStatement'
                    Identifier: '
                /*modifiers*/ undefined'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                factory'
                        Identifier: 'createVariableDeclarationList'
                      ArrayLiteralExpression
                        CallExpression
                          PropertyAccessExpression
                            Identifier: 'factory'
                            Identifier: 'createVariableDeclaration'
                          CallExpression
                            PropertyAccessExpression
                              Identifier: '
                        factory'
                              Identifier: 'createObjectBindingPattern'
                            Identifier: 'bindingElements'
                          Identifier: '
                        /*exclamationToken*/ undefined'
                          Identifier: '
                        /*type*/ typeLiteral'
                          Identifier: '
                        /*initializer*/ call'
                      Identifier: '
                    commonNodeFlags'
        IfStatement
          BinaryExpression
            PropertyAccessExpression
              Identifier: 'exposedVariableDeclarations'
              Identifier: 'length'
            BarBarToken
            Identifier: ' writes'
          Block
            IfStatement
              PropertyAccessExpression
                Identifier: 'exposedVariableDeclarations'
                Identifier: 'length'
              Block
                ForOfStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' variableDeclaration'
                  Identifier: ' exposedVariableDeclarations'
                  Block
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' flags'
                          TypeReference
                            Identifier: ' NodeFlags'
                          PropertyAccessExpression
                            PropertyAccessExpression
                              Identifier: ' variableDeclaration'
                              Identifier: 'parent'
                            Identifier: 'flags'
                    IfStatement
                      BinaryExpression
                        Identifier: 'flags'
                        AmpersandToken
                        PropertyAccessExpression
                          Identifier: ' NodeFlags'
                          Identifier: 'Const'
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                    flags'
                            EqualsToken
                            BinaryExpression
                              ParenthesizedExpression
                                BinaryExpression
                                  Identifier: 'flags'
                                  AmpersandToken
                                  PrefixUnaryExpression
                                    PropertyAccessExpression
                                      Identifier: 'NodeFlags'
                                      Identifier: 'Const'
                              BarToken
                              PropertyAccessExpression
                                Identifier: ' NodeFlags'
                                Identifier: 'Let'
                    ExpressionStatement
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '

                newNodes'
                          Identifier: 'push'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: 'factory'
                            Identifier: 'createVariableStatement'
                          Identifier: '
                    /*modifiers*/ undefined'
                          CallExpression
                            PropertyAccessExpression
                              Identifier: '
                    factory'
                              Identifier: 'createVariableDeclarationList'
                            ArrayLiteralExpression
                              CallExpression
                                PropertyAccessExpression
                                  Identifier: 'factory'
                                  Identifier: 'createVariableDeclaration'
                                PropertyAccessExpression
                                  PropertyAccessExpression
                                    Identifier: 'variableDeclaration'
                                    Identifier: 'symbol'
                                  Identifier: 'name'
                                Identifier: ' /*exclamationToken*/ undefined'
                                CallExpression
                                  Identifier: ' getTypeDeepCloneUnionUndefined'
                                  PropertyAccessExpression
                                    Identifier: 'variableDeclaration'
                                    Identifier: 'type'
                            Identifier: '
                        flags'
            IfStatement
              Identifier: 'returnValueProperty'
              Block
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
            // has both writes and return, need to create variable declaration to hold return value;
            newNodes'
                      Identifier: 'push'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: 'factory'
                        Identifier: 'createVariableStatement'
                      Identifier: '
                /*modifiers*/ undefined'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                factory'
                          Identifier: 'createVariableDeclarationList'
                        ArrayLiteralExpression
                          CallExpression
                            PropertyAccessExpression
                              Identifier: 'factory'
                              Identifier: 'createVariableDeclaration'
                            Identifier: 'returnValueProperty'
                            Identifier: ' /*exclamationToken*/ undefined'
                            CallExpression
                              Identifier: ' getTypeDeepCloneUnionUndefined'
                              Identifier: 'returnType'
                        PropertyAccessExpression
                          Identifier: '
                    NodeFlags'
                          Identifier: 'Let'
            VariableStatement
              VariableDeclarationList
                VariableDeclaration
                  Identifier: ' assignments'
                  CallExpression
                    Identifier: ' getPropertyAssignmentsForWritesAndVariableDeclarations'
                    Identifier: 'exposedVariableDeclarations'
                    Identifier: ' writes'
            IfStatement
              Identifier: 'returnValueProperty'
              Block
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
            assignments'
                      Identifier: 'unshift'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: 'factory'
                        Identifier: 'createShorthandPropertyAssignment'
                      Identifier: 'returnValueProperty'
            IfStatement
              BinaryExpression
                PropertyAccessExpression
                  Identifier: 'assignments'
                  Identifier: 'length'
                EqualsEqualsEqualsToken
                NumericLiteral
              Block
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
            // We would only have introduced a return value property if there had been
            // other assignments to make.
            Debug'
                      Identifier: 'assert'
                    PrefixUnaryExpression
                      Identifier: 'returnValueProperty'
                    StringLiteral
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '

            newNodes'
                      Identifier: 'push'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: 'factory'
                        Identifier: 'createExpressionStatement'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: 'factory'
                          Identifier: 'createAssignment'
                        PropertyAccessExpression
                          ElementAccessExpression
                            Identifier: 'assignments'
                            NumericLiteral
                          Identifier: 'name'
                        Identifier: ' call'
                IfStatement
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: 'range'
                      Identifier: 'facts'
                    AmpersandToken
                    PropertyAccessExpression
                      Identifier: ' RangeFacts'
                      Identifier: 'HasReturn'
                  Block
                    ExpressionStatement
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                newNodes'
                          Identifier: 'push'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: 'factory'
                            Identifier: 'createReturnStatement'
              Block
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
            // emit e.g.
            //   { a, b, __return } = newFunction(a, b);
            //   return __return;
            newNodes'
                      Identifier: 'push'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: 'factory'
                        Identifier: 'createExpressionStatement'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: 'factory'
                          Identifier: 'createAssignment'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: 'factory'
                            Identifier: 'createObjectLiteralExpression'
                          Identifier: 'assignments'
                        Identifier: ' call'
                IfStatement
                  Identifier: 'returnValueProperty'
                  Block
                    ExpressionStatement
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                newNodes'
                          Identifier: 'push'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: 'factory'
                            Identifier: 'createReturnStatement'
                          CallExpression
                            PropertyAccessExpression
                              Identifier: 'factory'
                              Identifier: 'createIdentifier'
                            Identifier: 'returnValueProperty'
          Block
            IfStatement
              BinaryExpression
                PropertyAccessExpression
                  Identifier: 'range'
                  Identifier: 'facts'
                AmpersandToken
                PropertyAccessExpression
                  Identifier: ' RangeFacts'
                  Identifier: 'HasReturn'
              Block
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
            newNodes'
                      Identifier: 'push'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: 'factory'
                        Identifier: 'createReturnStatement'
                      Identifier: 'call'
              IfStatement
                CallExpression
                  Identifier: 'isReadonlyArray'
                  PropertyAccessExpression
                    Identifier: 'range'
                    Identifier: 'range'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
            newNodes'
                        Identifier: 'push'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: 'factory'
                          Identifier: 'createExpressionStatement'
                        Identifier: 'call'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
            newNodes'
                        Identifier: 'push'
                      Identifier: 'call'
      IfStatement
        CallExpression
          Identifier: 'isReadonlyArray'
          PropertyAccessExpression
            Identifier: 'range'
            Identifier: 'range'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        changeTracker'
                Identifier: 'replaceNodeRangeWithNodes'
              PropertyAccessExpression
                Identifier: 'context'
                Identifier: 'file'
              CallExpression
                Identifier: ' first'
                PropertyAccessExpression
                  Identifier: 'range'
                  Identifier: 'range'
              CallExpression
                Identifier: ' last'
                PropertyAccessExpression
                  Identifier: 'range'
                  Identifier: 'range'
              Identifier: ' newNodes'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        changeTracker'
                Identifier: 'replaceNodeWithNodes'
              PropertyAccessExpression
                Identifier: 'context'
                Identifier: 'file'
              PropertyAccessExpression
                Identifier: ' range'
                Identifier: 'range'
              Identifier: ' newNodes'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' edits'
            CallExpression
              PropertyAccessExpression
                Identifier: ' changeTracker'
                Identifier: 'getChanges'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' renameRange'
            ConditionalExpression
              CallExpression
                Identifier: ' isReadonlyArray'
                PropertyAccessExpression
                  Identifier: 'range'
                  Identifier: 'range'
              QuestionToken
              CallExpression
                Identifier: ' first'
                PropertyAccessExpression
                  Identifier: 'range'
                  Identifier: 'range'
              ColonToken
              PropertyAccessExpression
                Identifier: ' range'
                Identifier: 'range'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' renameFilename'
            PropertyAccessExpression
              CallExpression
                PropertyAccessExpression
                  Identifier: ' renameRange'
                  Identifier: 'getSourceFile'
              Identifier: 'fileName'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' renameLocation'
            CallExpression
              Identifier: ' getRenameLocation'
              Identifier: 'edits'
              Identifier: ' renameFilename'
              Identifier: ' functionNameText'
              FalseKeyword
      ReturnStatement
        ObjectLiteralExpression
          ShorthandPropertyAssignment
            Identifier: ' renameFilename'
          ShorthandPropertyAssignment
            Identifier: ' renameLocation'
          ShorthandPropertyAssignment
            Identifier: ' edits'
      FunctionDeclaration
        Identifier: ' getTypeDeepCloneUnionUndefined'
        Parameter
          Identifier: 'typeNode'
          UnionType
            TypeReference
              Identifier: ' TypeNode'
            UndefinedKeyword
        UnionType
          TypeReference
            Identifier: ' TypeNode'
          UndefinedKeyword
        Block
          IfStatement
            BinaryExpression
              Identifier: 'typeNode'
              EqualsEqualsEqualsToken
              Identifier: ' undefined'
            Block
              ReturnStatement
                Identifier: ' undefined'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' clone'
                CallExpression
                  Identifier: ' getSynthesizedDeepClone'
                  Identifier: 'typeNode'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' withoutParens'
                Identifier: ' clone'
          WhileStatement
            CallExpression
              Identifier: 'isParenthesizedTypeNode'
              Identifier: 'withoutParens'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            withoutParens'
                  EqualsToken
                  PropertyAccessExpression
                    Identifier: ' withoutParens'
                    Identifier: 'type'
          ReturnStatement
            ConditionalExpression
              BinaryExpression
                CallExpression
                  Identifier: ' isUnionTypeNode'
                  Identifier: 'withoutParens'
                AmpersandAmpersandToken
                CallExpression
                  Identifier: ' find'
                  PropertyAccessExpression
                    Identifier: 'withoutParens'
                    Identifier: 'types'
                  ArrowFunction
                    Parameter
                      Identifier: ' t'
                    EqualsGreaterThanToken
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: ' t'
                        Identifier: 'kind'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'UndefinedKeyword'
              QuestionToken
              Identifier: ' clone'
              ColonToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' factory'
                  Identifier: 'createUnionTypeNode'
                ArrayLiteralExpression
                  Identifier: 'clone'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' factory'
                      Identifier: 'createKeywordTypeNode'
                    PropertyAccessExpression
                      Identifier: 'SyntaxKind'
                      Identifier: 'UndefinedKeyword'
  FunctionDeclaration
    Identifier: ' extractConstantInScope'
    Parameter
      Identifier: '
    node'
      TypeReference
        Identifier: ' Expression'
    Parameter
      Identifier: '
    scope'
      TypeReference
        Identifier: ' Scope'
    Parameter
      ObjectBindingPattern
        BindingElement
          Identifier: ' substitutions'
      TypeReference
        Identifier: ' ScopeUsages'
    Parameter
      Identifier: '
    rangeFacts'
      TypeReference
        Identifier: ' RangeFacts'
    Parameter
      Identifier: '
    context'
      TypeReference
        Identifier: ' RefactorContext'
    TypeReference
      Identifier: ' RefactorEditInfo'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' checker'
            CallExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: ' context'
                  Identifier: 'program'
                Identifier: 'getTypeChecker'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' file'
            CallExpression
              PropertyAccessExpression
                Identifier: ' scope'
                Identifier: 'getSourceFile'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' localNameText'
            CallExpression
              Identifier: ' getIdentifierForNode'
              Identifier: 'node'
              Identifier: ' scope'
              Identifier: ' checker'
              Identifier: ' file'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' isJS'
            CallExpression
              Identifier: ' isInJSFile'
              Identifier: 'scope'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' variableType'
            ConditionalExpression
              BinaryExpression
                Identifier: ' isJS'
                BarBarToken
                PrefixUnaryExpression
                  CallExpression
                    PropertyAccessExpression
                      Identifier: 'checker'
                      Identifier: 'isContextSensitive'
                    Identifier: 'node'
              QuestionToken
              Identifier: ' undefined'
              ColonToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' checker'
                  Identifier: 'typeToTypeNode'
                NonNullExpression
                  CallExpression
                    PropertyAccessExpression
                      Identifier: 'checker'
                      Identifier: 'getContextualType'
                    Identifier: 'node'
                Identifier: ' scope'
                PropertyAccessExpression
                  Identifier: ' NodeBuilderFlags'
                  Identifier: 'NoTruncation'
                PropertyAccessExpression
                  Identifier: ' InternalNodeBuilderFlags'
                  Identifier: 'AllowUnresolvedNames'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' initializer'
            CallExpression
              Identifier: ' transformConstantInitializer'
              CallExpression
                Identifier: 'skipParentheses'
                Identifier: 'node'
              Identifier: ' substitutions'
      ExpressionStatement
        ParenthesizedExpression
          BinaryExpression
            ObjectLiteralExpression
              ShorthandPropertyAssignment
                Identifier: ' variableType'
              ShorthandPropertyAssignment
                Identifier: ' initializer'
            EqualsToken
            CallExpression
              Identifier: ' transformFunctionInitializerAndType'
              Identifier: 'variableType'
              Identifier: ' initializer'
      ExpressionStatement
        CallExpression
          Identifier: '

    suppressLeadingAndTrailingTrivia'
          Identifier: 'initializer'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' changeTracker'
            CallExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: ' textChanges'
                  Identifier: 'ChangeTracker'
                Identifier: 'fromContext'
              Identifier: 'context'
      IfStatement
        CallExpression
          Identifier: 'isClassLike'
          Identifier: 'scope'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        Debug'
                Identifier: 'assert'
              PrefixUnaryExpression
                Identifier: 'isJS'
              StringLiteral
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' modifiers'
                ArrayType
                  TypeReference
                    Identifier: ' Modifier'
                ArrayLiteralExpression
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        modifiers'
                Identifier: 'push'
              CallExpression
                PropertyAccessExpression
                  Identifier: 'factory'
                  Identifier: 'createModifier'
                PropertyAccessExpression
                  Identifier: 'SyntaxKind'
                  Identifier: 'PrivateKeyword'
          IfStatement
            BinaryExpression
              Identifier: 'rangeFacts'
              AmpersandToken
              PropertyAccessExpression
                Identifier: ' RangeFacts'
                Identifier: 'InStaticRegion'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            modifiers'
                    Identifier: 'push'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: 'factory'
                      Identifier: 'createModifier'
                    PropertyAccessExpression
                      Identifier: 'SyntaxKind'
                      Identifier: 'StaticKeyword'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        modifiers'
                Identifier: 'push'
              CallExpression
                PropertyAccessExpression
                  Identifier: 'factory'
                  Identifier: 'createModifier'
                PropertyAccessExpression
                  Identifier: 'SyntaxKind'
                  Identifier: 'ReadonlyKeyword'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' newVariable'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' factory'
                    Identifier: 'createPropertyDeclaration'
                  Identifier: '
            modifiers'
                  Identifier: '
            localNameText'
                  Identifier: '
            /*questionOrExclamationToken*/ undefined'
                  Identifier: '
            variableType'
                  Identifier: '
            initializer'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' localReference'
                TypeReference
                  Identifier: ' Expression'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' factory'
                    Identifier: 'createPropertyAccessExpression'
                  ConditionalExpression
                    BinaryExpression
                      Identifier: '
            rangeFacts'
                      AmpersandToken
                      PropertyAccessExpression
                        Identifier: ' RangeFacts'
                        Identifier: 'InStaticRegion'
                    QuestionToken
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' factory'
                        Identifier: 'createIdentifier'
                      CallExpression
                        PropertyAccessExpression
                          NonNullExpression
                            PropertyAccessExpression
                              Identifier: 'scope'
                              Identifier: 'name'
                          Identifier: 'getText'
                    ColonToken
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' factory'
                        Identifier: 'createThis'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
            factory'
                      Identifier: 'createIdentifier'
                    Identifier: 'localNameText'
          IfStatement
            CallExpression
              Identifier: 'isInJSXContent'
              Identifier: 'node'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            localReference'
                  EqualsToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' factory'
                      Identifier: 'createJsxExpression'
                    Identifier: '/*dotDotDotToken*/ undefined'
                    Identifier: ' localReference'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' maxInsertionPos'
                PropertyAccessExpression
                  Identifier: ' node'
                  Identifier: 'pos'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' nodeToInsertBefore'
                CallExpression
                  Identifier: ' getNodeToInsertPropertyBefore'
                  Identifier: 'maxInsertionPos'
                  Identifier: ' scope'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        changeTracker'
                Identifier: 'insertNodeBefore'
              PropertyAccessExpression
                Identifier: 'context'
                Identifier: 'file'
              Identifier: ' nodeToInsertBefore'
              Identifier: ' newVariable'
              TrueKeyword
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '

        // Consume
        changeTracker'
                Identifier: 'replaceNode'
              PropertyAccessExpression
                Identifier: 'context'
                Identifier: 'file'
              Identifier: ' node'
              Identifier: ' localReference'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' newVariableDeclaration'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' factory'
                    Identifier: 'createVariableDeclaration'
                  Identifier: 'localNameText'
                  Identifier: ' /*exclamationToken*/ undefined'
                  Identifier: ' variableType'
                  Identifier: ' initializer'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' oldVariableDeclaration'
                CallExpression
                  Identifier: ' getContainingVariableDeclarationIfInList'
                  Identifier: 'node'
                  Identifier: ' scope'
          IfStatement
            Identifier: 'oldVariableDeclaration'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            // Declare
            // CONSIDER: could detect that each is on a separate line (See `extractConstant_VariableList_MultipleLines` in `extractConstants.ts`)
            changeTracker'
                    Identifier: 'insertNodeBefore'
                  PropertyAccessExpression
                    Identifier: 'context'
                    Identifier: 'file'
                  Identifier: ' oldVariableDeclaration'
                  Identifier: ' newVariableDeclaration'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' localReference'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' factory'
                        Identifier: 'createIdentifier'
                      Identifier: 'localNameText'
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            changeTracker'
                    Identifier: 'replaceNode'
                  PropertyAccessExpression
                    Identifier: 'context'
                    Identifier: 'file'
                  Identifier: ' node'
                  Identifier: ' localReference'
            IfStatement
              BinaryExpression
                BinaryExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'parent'
                    Identifier: 'kind'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'ExpressionStatement'
                AmpersandAmpersandToken
                BinaryExpression
                  Identifier: ' scope'
                  EqualsEqualsEqualsToken
                  CallExpression
                    Identifier: ' findAncestor'
                    Identifier: 'node'
                    Identifier: ' isScope'
              Block
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' newVariableStatement'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' factory'
                          Identifier: 'createVariableStatement'
                        Identifier: '
                /*modifiers*/ undefined'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                factory'
                            Identifier: 'createVariableDeclarationList'
                          ArrayLiteralExpression
                            Identifier: 'newVariableDeclaration'
                          PropertyAccessExpression
                            Identifier: ' NodeFlags'
                            Identifier: 'Const'
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
            changeTracker'
                      Identifier: 'replaceNode'
                    PropertyAccessExpression
                      Identifier: 'context'
                      Identifier: 'file'
                    PropertyAccessExpression
                      Identifier: ' node'
                      Identifier: 'parent'
                    Identifier: ' newVariableStatement'
              Block
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' newVariableStatement'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' factory'
                          Identifier: 'createVariableStatement'
                        Identifier: '
                /*modifiers*/ undefined'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                factory'
                            Identifier: 'createVariableDeclarationList'
                          ArrayLiteralExpression
                            Identifier: 'newVariableDeclaration'
                          PropertyAccessExpression
                            Identifier: ' NodeFlags'
                            Identifier: 'Const'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' nodeToInsertBefore'
                      CallExpression
                        Identifier: ' getNodeToInsertConstantBefore'
                        Identifier: 'node'
                        Identifier: ' scope'
                IfStatement
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: 'nodeToInsertBefore'
                      Identifier: 'pos'
                    EqualsEqualsEqualsToken
                    NumericLiteral
                  Block
                    ExpressionStatement
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                changeTracker'
                          Identifier: 'insertNodeAtTopOfFile'
                        PropertyAccessExpression
                          Identifier: 'context'
                          Identifier: 'file'
                        Identifier: ' newVariableStatement'
                        FalseKeyword
                  Block
                    ExpressionStatement
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                changeTracker'
                          Identifier: 'insertNodeBefore'
                        PropertyAccessExpression
                          Identifier: 'context'
                          Identifier: 'file'
                        Identifier: ' nodeToInsertBefore'
                        Identifier: ' newVariableStatement'
                        FalseKeyword
                IfStatement
                  BinaryExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'parent'
                      Identifier: 'kind'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'ExpressionStatement'
                  Block
                    ExpressionStatement
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                // If the parent is an expression statement, delete it.
                changeTracker'
                          Identifier: 'delete'
                        PropertyAccessExpression
                          Identifier: 'context'
                          Identifier: 'file'
                        PropertyAccessExpression
                          Identifier: ' node'
                          Identifier: 'parent'
                  Block
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' localReference'
                          TypeReference
                            Identifier: ' Expression'
                          CallExpression
                            PropertyAccessExpression
                              Identifier: ' factory'
                              Identifier: 'createIdentifier'
                            Identifier: 'localNameText'
                    IfStatement
                      CallExpression
                        Identifier: 'isInJSXContent'
                        Identifier: 'node'
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                    localReference'
                            EqualsToken
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' factory'
                                Identifier: 'createJsxExpression'
                              Identifier: '/*dotDotDotToken*/ undefined'
                              Identifier: ' localReference'
                    ExpressionStatement
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                changeTracker'
                          Identifier: 'replaceNode'
                        PropertyAccessExpression
                          Identifier: 'context'
                          Identifier: 'file'
                        Identifier: ' node'
                        Identifier: ' localReference'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' edits'
            CallExpression
              PropertyAccessExpression
                Identifier: ' changeTracker'
                Identifier: 'getChanges'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' renameFilename'
            PropertyAccessExpression
              CallExpression
                PropertyAccessExpression
                  Identifier: ' node'
                  Identifier: 'getSourceFile'
              Identifier: 'fileName'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' renameLocation'
            CallExpression
              Identifier: ' getRenameLocation'
              Identifier: 'edits'
              Identifier: ' renameFilename'
              Identifier: ' localNameText'
              TrueKeyword
      ReturnStatement
        ObjectLiteralExpression
          ShorthandPropertyAssignment
            Identifier: ' renameFilename'
          ShorthandPropertyAssignment
            Identifier: ' renameLocation'
          ShorthandPropertyAssignment
            Identifier: ' edits'
      FunctionDeclaration
        Identifier: ' transformFunctionInitializerAndType'
        Parameter
          Identifier: 'variableType'
          UnionType
            TypeReference
              Identifier: ' TypeNode'
            UndefinedKeyword
        Parameter
          Identifier: ' initializer'
          TypeReference
            Identifier: ' Expression'
        TypeLiteral
          PropertySignature
            Identifier: ' variableType'
            UnionType
              TypeReference
                Identifier: ' TypeNode'
              UndefinedKeyword
          PropertySignature
            Identifier: ' initializer'
            TypeReference
              Identifier: ' Expression'
        Block
          IfStatement
            BinaryExpression
              Identifier: 'variableType'
              EqualsEqualsEqualsToken
              Identifier: ' undefined'
            ReturnStatement
              ObjectLiteralExpression
                ShorthandPropertyAssignment
                  Identifier: ' variableType'
                ShorthandPropertyAssignment
                  Identifier: ' initializer'
          IfStatement
            BinaryExpression
              BinaryExpression
                PrefixUnaryExpression
                  CallExpression
                    Identifier: 'isFunctionExpression'
                    Identifier: 'initializer'
                AmpersandAmpersandToken
                PrefixUnaryExpression
                  CallExpression
                    Identifier: 'isArrowFunction'
                    Identifier: 'initializer'
              BarBarToken
              PrefixUnaryExpression
                PrefixUnaryExpression
                  PropertyAccessExpression
                    Identifier: 'initializer'
                    Identifier: 'typeParameters'
            ReturnStatement
              ObjectLiteralExpression
                ShorthandPropertyAssignment
                  Identifier: ' variableType'
                ShorthandPropertyAssignment
                  Identifier: ' initializer'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' functionType'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' checker'
                    Identifier: 'getTypeAtLocation'
                  Identifier: 'node'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' functionSignature'
                CallExpression
                  Identifier: ' singleOrUndefined'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: 'checker'
                      Identifier: 'getSignaturesOfType'
                    Identifier: 'functionType'
                    PropertyAccessExpression
                      Identifier: ' SignatureKind'
                      Identifier: 'Call'
          IfStatement
            PrefixUnaryExpression
              Identifier: 'functionSignature'
            ReturnStatement
              ObjectLiteralExpression
                ShorthandPropertyAssignment
                  Identifier: ' variableType'
                ShorthandPropertyAssignment
                  Identifier: ' initializer'
          IfStatement
            PrefixUnaryExpression
              PrefixUnaryExpression
                CallExpression
                  PropertyAccessExpression
                    Identifier: 'functionSignature'
                    Identifier: 'getTypeParameters'
            ReturnStatement
              ObjectLiteralExpression
                ShorthandPropertyAssignment
                  Identifier: ' variableType'
                ShorthandPropertyAssignment
                  Identifier: ' initializer'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' parameters'
                ArrayType
                  TypeReference
                    Identifier: ' ParameterDeclaration'
                ArrayLiteralExpression
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' hasAny'
                FalseKeyword
          ForOfStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' p'
            PropertyAccessExpression
              Identifier: ' initializer'
              Identifier: 'parameters'
            Block
              IfStatement
                PropertyAccessExpression
                  Identifier: 'p'
                  Identifier: 'type'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                parameters'
                        Identifier: 'push'
                      Identifier: 'p'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' paramType'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' checker'
                            Identifier: 'getTypeAtLocation'
                          Identifier: 'p'
                  IfStatement
                    BinaryExpression
                      Identifier: 'paramType'
                      EqualsEqualsEqualsToken
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' checker'
                          Identifier: 'getAnyType'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: ' hasAny'
                        EqualsToken
                        TrueKeyword
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '

                parameters'
                        Identifier: 'push'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: 'factory'
                          Identifier: 'updateParameterDeclaration'
                        Identifier: 'p'
                        PropertyAccessExpression
                          Identifier: ' p'
                          Identifier: 'modifiers'
                        PropertyAccessExpression
                          Identifier: ' p'
                          Identifier: 'dotDotDotToken'
                        PropertyAccessExpression
                          Identifier: ' p'
                          Identifier: 'name'
                        PropertyAccessExpression
                          Identifier: ' p'
                          Identifier: 'questionToken'
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: ' p'
                            Identifier: 'type'
                          BarBarToken
                          CallExpression
                            PropertyAccessExpression
                              Identifier: ' checker'
                              Identifier: 'typeToTypeNode'
                            Identifier: 'paramType'
                            Identifier: ' scope'
                            PropertyAccessExpression
                              Identifier: ' NodeBuilderFlags'
                              Identifier: 'NoTruncation'
                            PropertyAccessExpression
                              Identifier: ' InternalNodeBuilderFlags'
                              Identifier: 'AllowUnresolvedNames'
                        PropertyAccessExpression
                          Identifier: ' p'
                          Identifier: 'initializer'
          IfStatement
            Identifier: 'hasAny'
            ReturnStatement
              ObjectLiteralExpression
                ShorthandPropertyAssignment
                  Identifier: ' variableType'
                ShorthandPropertyAssignment
                  Identifier: ' initializer'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        variableType'
              EqualsToken
              Identifier: ' undefined'
          IfStatement
            CallExpression
              Identifier: 'isArrowFunction'
              Identifier: 'initializer'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            initializer'
                  EqualsToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' factory'
                      Identifier: 'updateArrowFunction'
                    Identifier: 'initializer'
                    ConditionalExpression
                      CallExpression
                        Identifier: ' canHaveModifiers'
                        Identifier: 'node'
                      QuestionToken
                      CallExpression
                        Identifier: ' getModifiers'
                        Identifier: 'node'
                      ColonToken
                      Identifier: ' undefined'
                    PropertyAccessExpression
                      Identifier: ' initializer'
                      Identifier: 'typeParameters'
                    Identifier: ' parameters'
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: ' initializer'
                        Identifier: 'type'
                      BarBarToken
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' checker'
                          Identifier: 'typeToTypeNode'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: 'functionSignature'
                            Identifier: 'getReturnType'
                        Identifier: ' scope'
                        PropertyAccessExpression
                          Identifier: ' NodeBuilderFlags'
                          Identifier: 'NoTruncation'
                        PropertyAccessExpression
                          Identifier: ' InternalNodeBuilderFlags'
                          Identifier: 'AllowUnresolvedNames'
                    PropertyAccessExpression
                      Identifier: ' initializer'
                      Identifier: 'equalsGreaterThanToken'
                    PropertyAccessExpression
                      Identifier: ' initializer'
                      Identifier: 'body'
            Block
              IfStatement
                BinaryExpression
                  Identifier: 'functionSignature'
                  AmpersandAmpersandToken
                  PrefixUnaryExpression
                    PrefixUnaryExpression
                      PropertyAccessExpression
                        Identifier: 'functionSignature'
                        Identifier: 'thisParameter'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' firstParameter'
                        CallExpression
                          Identifier: ' firstOrUndefined'
                          Identifier: 'parameters'
                  IfStatement
                    ParenthesizedExpression
                      BinaryExpression
                        PrefixUnaryExpression
                          Identifier: 'firstParameter'
                        BarBarToken
                        ParenthesizedExpression
                          BinaryExpression
                            CallExpression
                              Identifier: 'isIdentifier'
                              PropertyAccessExpression
                                Identifier: 'firstParameter'
                                Identifier: 'name'
                            AmpersandAmpersandToken
                            BinaryExpression
                              PropertyAccessExpression
                                PropertyAccessExpression
                                  Identifier: ' firstParameter'
                                  Identifier: 'name'
                                Identifier: 'escapedText'
                              ExclamationEqualsEqualsToken
                              StringLiteral
                    Block
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' thisType'
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' checker'
                                Identifier: 'getTypeOfSymbolAtLocation'
                              PropertyAccessExpression
                                Identifier: 'functionSignature'
                                Identifier: 'thisParameter'
                              Identifier: ' node'
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                    parameters'
                            Identifier: 'splice'
                          NumericLiteral
                          NumericLiteral
                          CallExpression
                            PropertyAccessExpression
                              Identifier: '
                        factory'
                              Identifier: 'createParameterDeclaration'
                            Identifier: '
                            /*modifiers*/ undefined'
                            Identifier: '
                            /*dotDotDotToken*/ undefined'
                            StringLiteral
                            Identifier: '
                            /*questionToken*/ undefined'
                            CallExpression
                              PropertyAccessExpression
                                Identifier: '
                            checker'
                                Identifier: 'typeToTypeNode'
                              Identifier: 'thisType'
                              Identifier: ' scope'
                              PropertyAccessExpression
                                Identifier: ' NodeBuilderFlags'
                                Identifier: 'NoTruncation'
                              PropertyAccessExpression
                                Identifier: ' InternalNodeBuilderFlags'
                                Identifier: 'AllowUnresolvedNames'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            initializer'
                  EqualsToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' factory'
                      Identifier: 'updateFunctionExpression'
                    Identifier: 'initializer'
                    ConditionalExpression
                      CallExpression
                        Identifier: ' canHaveModifiers'
                        Identifier: 'node'
                      QuestionToken
                      CallExpression
                        Identifier: ' getModifiers'
                        Identifier: 'node'
                      ColonToken
                      Identifier: ' undefined'
                    PropertyAccessExpression
                      Identifier: ' initializer'
                      Identifier: 'asteriskToken'
                    PropertyAccessExpression
                      Identifier: ' initializer'
                      Identifier: 'name'
                    PropertyAccessExpression
                      Identifier: ' initializer'
                      Identifier: 'typeParameters'
                    Identifier: ' parameters'
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: ' initializer'
                        Identifier: 'type'
                      BarBarToken
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' checker'
                          Identifier: 'typeToTypeNode'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: 'functionSignature'
                            Identifier: 'getReturnType'
                        Identifier: ' scope'
                        PropertyAccessExpression
                          Identifier: ' NodeBuilderFlags'
                          Identifier: 'NoTruncation'
                    PropertyAccessExpression
                      Identifier: ' initializer'
                      Identifier: 'body'
          ReturnStatement
            ObjectLiteralExpression
              ShorthandPropertyAssignment
                Identifier: ' variableType'
              ShorthandPropertyAssignment
                Identifier: ' initializer'
  FunctionDeclaration
    Identifier: ' getContainingVariableDeclarationIfInList'
    Parameter
      Identifier: 'node'
      TypeReference
        Identifier: ' Node'
    Parameter
      Identifier: ' scope'
      TypeReference
        Identifier: ' Scope'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' prevNode'
      WhileStatement
        BinaryExpression
          BinaryExpression
            Identifier: 'node'
            ExclamationEqualsEqualsToken
            Identifier: ' undefined'
          AmpersandAmpersandToken
          BinaryExpression
            Identifier: ' node'
            ExclamationEqualsEqualsToken
            Identifier: ' scope'
        Block
          IfStatement
            BinaryExpression
              BinaryExpression
                BinaryExpression
                  CallExpression
                    Identifier: '
            isVariableDeclaration'
                    Identifier: 'node'
                  AmpersandAmpersandToken
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: '
            node'
                      Identifier: 'initializer'
                    EqualsEqualsEqualsToken
                    Identifier: ' prevNode'
                AmpersandAmpersandToken
                CallExpression
                  Identifier: '
            isVariableDeclarationList'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'parent'
              AmpersandAmpersandToken
              BinaryExpression
                PropertyAccessExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: '
            node'
                      Identifier: 'parent'
                    Identifier: 'declarations'
                  Identifier: 'length'
                GreaterThanToken
                NumericLiteral
            Block
              ReturnStatement
                Identifier: ' node'
          ExpressionStatement
            BinaryExpression
              Identifier: '

        prevNode'
              EqualsToken
              Identifier: ' node'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        node'
              EqualsToken
              PropertyAccessExpression
                Identifier: ' node'
                Identifier: 'parent'
  FunctionDeclaration
    Identifier: ' getFirstDeclarationBeforePosition'
    Parameter
      Identifier: 'type'
      TypeReference
        Identifier: ' Type'
    Parameter
      Identifier: ' position'
      NumberKeyword
    UnionType
      TypeReference
        Identifier: ' Declaration'
      UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' firstDeclaration'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' symbol'
            PropertyAccessExpression
              Identifier: ' type'
              Identifier: 'symbol'
      IfStatement
        BinaryExpression
          Identifier: 'symbol'
          AmpersandAmpersandToken
          PropertyAccessExpression
            Identifier: ' symbol'
            Identifier: 'declarations'
        Block
          ForOfStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' declaration'
            PropertyAccessExpression
              Identifier: ' symbol'
              Identifier: 'declarations'
            Block
              IfStatement
                BinaryExpression
                  ParenthesizedExpression
                    BinaryExpression
                      BinaryExpression
                        Identifier: 'firstDeclaration'
                        EqualsEqualsEqualsToken
                        Identifier: ' undefined'
                      BarBarToken
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: ' declaration'
                          Identifier: 'pos'
                        LessThanToken
                        PropertyAccessExpression
                          Identifier: ' firstDeclaration'
                          Identifier: 'pos'
                  AmpersandAmpersandToken
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: ' declaration'
                      Identifier: 'pos'
                    LessThanToken
                    Identifier: ' position'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                firstDeclaration'
                      EqualsToken
                      Identifier: ' declaration'
      ReturnStatement
        Identifier: ' firstDeclaration'
  FunctionDeclaration
    Identifier: ' compareTypesByDeclarationOrder'
    Parameter
      ObjectBindingPattern
        BindingElement
          Identifier: ' type'
          Identifier: ' type1'
        BindingElement
          Identifier: ' declaration'
          Identifier: ' declaration1'
      TypeLiteral
        PropertySignature
          Identifier: ' type'
          TypeReference
            Identifier: ' Type'
        PropertySignature
          Identifier: ' declaration'
          QuestionToken
          TypeReference
            Identifier: ' Declaration'
    Parameter
      ObjectBindingPattern
        BindingElement
          Identifier: ' type'
          Identifier: ' type2'
        BindingElement
          Identifier: ' declaration'
          Identifier: ' declaration2'
      TypeLiteral
        PropertySignature
          Identifier: ' type'
          TypeReference
            Identifier: ' Type'
        PropertySignature
          Identifier: ' declaration'
          QuestionToken
          TypeReference
            Identifier: ' Declaration'
    Block
      ReturnStatement
        BinaryExpression
          BinaryExpression
            CallExpression
              Identifier: ' compareProperties'
              Identifier: 'declaration1'
              Identifier: ' declaration2'
              StringLiteral
              Identifier: ' compareValues'
            BarBarToken
            CallExpression
              Identifier: ' compareStringsCaseSensitive'
              ConditionalExpression
                PropertyAccessExpression
                  Identifier: '
            type1'
                  Identifier: 'symbol'
                QuestionToken
                CallExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: ' type1'
                      Identifier: 'symbol'
                    Identifier: 'getName'
                ColonToken
                StringLiteral
              ConditionalExpression
                PropertyAccessExpression
                  Identifier: '
            type2'
                  Identifier: 'symbol'
                QuestionToken
                CallExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: ' type2'
                      Identifier: 'symbol'
                    Identifier: 'getName'
                ColonToken
                StringLiteral
          BarBarToken
          CallExpression
            Identifier: ' compareValues'
            PropertyAccessExpression
              Identifier: 'type1'
              Identifier: 'id'
            PropertyAccessExpression
              Identifier: ' type2'
              Identifier: 'id'
  FunctionDeclaration
    Identifier: ' getCalledExpression'
    Parameter
      Identifier: 'scope'
      TypeReference
        Identifier: ' Node'
    Parameter
      Identifier: ' range'
      TypeReference
        Identifier: ' TargetRange'
    Parameter
      Identifier: ' functionNameText'
      StringKeyword
    TypeReference
      Identifier: ' Expression'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' functionReference'
            CallExpression
              PropertyAccessExpression
                Identifier: ' factory'
                Identifier: 'createIdentifier'
              Identifier: 'functionNameText'
      IfStatement
        CallExpression
          Identifier: 'isClassLike'
          Identifier: 'scope'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' lhs'
                ConditionalExpression
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: ' range'
                      Identifier: 'facts'
                    AmpersandToken
                    PropertyAccessExpression
                      Identifier: ' RangeFacts'
                      Identifier: 'InStaticRegion'
                  QuestionToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' factory'
                      Identifier: 'createIdentifier'
                    PropertyAccessExpression
                      NonNullExpression
                        PropertyAccessExpression
                          Identifier: 'scope'
                          Identifier: 'name'
                      Identifier: 'text'
                  ColonToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' factory'
                      Identifier: 'createThis'
          ReturnStatement
            CallExpression
              PropertyAccessExpression
                Identifier: ' factory'
                Identifier: 'createPropertyAccessExpression'
              Identifier: 'lhs'
              Identifier: ' functionReference'
        Block
          ReturnStatement
            Identifier: ' functionReference'
  FunctionDeclaration
    Identifier: ' transformFunctionBody'
    Parameter
      Identifier: 'body'
      TypeReference
        Identifier: ' Node'
    Parameter
      Identifier: ' exposedVariableDeclarations'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' VariableDeclaration'
    Parameter
      Identifier: ' writes'
      UnionType
        TypeOperator
          ArrayType
            TypeReference
              Identifier: ' UsageEntry'
        UndefinedKeyword
    Parameter
      Identifier: ' substitutions'
      TypeReference
        Identifier: ' ReadonlyMap'
        StringKeyword
        TypeReference
          Identifier: ' Node'
    Parameter
      Identifier: ' hasReturn'
      BooleanKeyword
    TypeLiteral
      PropertySignature
        Identifier: ' body'
        TypeReference
          Identifier: ' Block'
      PropertySignature
        Identifier: ' returnValueProperty'
        UnionType
          StringKeyword
          UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' hasWritesOrVariableDeclarations'
            BinaryExpression
              BinaryExpression
                Identifier: ' writes'
                ExclamationEqualsEqualsToken
                Identifier: ' undefined'
              BarBarToken
              BinaryExpression
                PropertyAccessExpression
                  Identifier: ' exposedVariableDeclarations'
                  Identifier: 'length'
                GreaterThanToken
                NumericLiteral
      IfStatement
        BinaryExpression
          BinaryExpression
            CallExpression
              Identifier: 'isBlock'
              Identifier: 'body'
            AmpersandAmpersandToken
            PrefixUnaryExpression
              Identifier: 'hasWritesOrVariableDeclarations'
          AmpersandAmpersandToken
          BinaryExpression
            PropertyAccessExpression
              Identifier: ' substitutions'
              Identifier: 'size'
            EqualsEqualsEqualsToken
            NumericLiteral
        Block
          ReturnStatement
            ObjectLiteralExpression
              PropertyAssignment
                Identifier: ' body'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' factory'
                    Identifier: 'createBlock'
                  PropertyAccessExpression
                    Identifier: 'body'
                    Identifier: 'statements'
                  TrueKeyword
              PropertyAssignment
                Identifier: ' returnValueProperty'
                Identifier: ' undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' returnValueProperty'
            UnionType
              StringKeyword
              UndefinedKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' ignoreReturns'
            FalseKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' statements'
            CallExpression
              PropertyAccessExpression
                Identifier: ' factory'
                Identifier: 'createNodeArray'
              ConditionalExpression
                CallExpression
                  Identifier: 'isBlock'
                  Identifier: 'body'
                QuestionToken
                CallExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: ' body'
                      Identifier: 'statements'
                    Identifier: 'slice'
                  NumericLiteral
                ColonToken
                ArrayLiteralExpression
                  ConditionalExpression
                    CallExpression
                      Identifier: 'isStatement'
                      Identifier: 'body'
                    QuestionToken
                    Identifier: ' body'
                    ColonToken
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' factory'
                        Identifier: 'createReturnStatement'
                      CallExpression
                        Identifier: 'skipParentheses'
                        AsExpression
                          Identifier: 'body'
                          TypeReference
                            Identifier: ' Expression'
      IfStatement
        BinaryExpression
          Identifier: 'hasWritesOrVariableDeclarations'
          BarBarToken
          PropertyAccessExpression
            Identifier: ' substitutions'
            Identifier: 'size'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' rewrittenStatements'
                CallExpression
                  PropertyAccessExpression
                    CallExpression
                      Identifier: ' visitNodes'
                      Identifier: 'statements'
                      Identifier: ' visitor'
                      Identifier: ' isStatement'
                    Identifier: 'slice'
          IfStatement
            BinaryExpression
              BinaryExpression
                Identifier: 'hasWritesOrVariableDeclarations'
                AmpersandAmpersandToken
                PrefixUnaryExpression
                  Identifier: 'hasReturn'
              AmpersandAmpersandToken
              CallExpression
                Identifier: ' isStatement'
                Identifier: 'body'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' assignments'
                    CallExpression
                      Identifier: ' getPropertyAssignmentsForWritesAndVariableDeclarations'
                      Identifier: 'exposedVariableDeclarations'
                      Identifier: ' writes'
              IfStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: 'assignments'
                    Identifier: 'length'
                  EqualsEqualsEqualsToken
                  NumericLiteral
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                rewrittenStatements'
                        Identifier: 'push'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: 'factory'
                          Identifier: 'createReturnStatement'
                        PropertyAccessExpression
                          ElementAccessExpression
                            Identifier: 'assignments'
                            NumericLiteral
                          Identifier: 'name'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                rewrittenStatements'
                        Identifier: 'push'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: 'factory'
                          Identifier: 'createReturnStatement'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: 'factory'
                            Identifier: 'createObjectLiteralExpression'
                          Identifier: 'assignments'
          ReturnStatement
            ObjectLiteralExpression
              PropertyAssignment
                Identifier: ' body'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' factory'
                    Identifier: 'createBlock'
                  Identifier: 'rewrittenStatements'
                  TrueKeyword
              ShorthandPropertyAssignment
                Identifier: ' returnValueProperty'
        Block
          ReturnStatement
            ObjectLiteralExpression
              PropertyAssignment
                Identifier: ' body'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' factory'
                    Identifier: 'createBlock'
                  Identifier: 'statements'
                  TrueKeyword
              PropertyAssignment
                Identifier: ' returnValueProperty'
                Identifier: ' undefined'
      FunctionDeclaration
        Identifier: ' visitor'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypeReference
          Identifier: ' VisitResult'
          TypeReference
            Identifier: 'Node'
        Block
          IfStatement
            BinaryExpression
              BinaryExpression
                PrefixUnaryExpression
                  Identifier: 'ignoreReturns'
                AmpersandAmpersandToken
                CallExpression
                  Identifier: ' isReturnStatement'
                  Identifier: 'node'
              AmpersandAmpersandToken
              Identifier: ' hasWritesOrVariableDeclarations'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' assignments'
                    ArrayType
                      TypeReference
                        Identifier: ' ObjectLiteralElementLike'
                    CallExpression
                      Identifier: ' getPropertyAssignmentsForWritesAndVariableDeclarations'
                      Identifier: 'exposedVariableDeclarations'
                      Identifier: ' writes'
              IfStatement
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'expression'
                Block
                  IfStatement
                    PrefixUnaryExpression
                      Identifier: 'returnValueProperty'
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    returnValueProperty'
                          EqualsToken
                          StringLiteral
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                assignments'
                        Identifier: 'unshift'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: 'factory'
                          Identifier: 'createPropertyAssignment'
                        Identifier: 'returnValueProperty'
                        CallExpression
                          Identifier: ' visitNode'
                          PropertyAccessExpression
                            Identifier: 'node'
                            Identifier: 'expression'
                          Identifier: ' visitor'
                          Identifier: ' isExpression'
              IfStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: 'assignments'
                    Identifier: 'length'
                  EqualsEqualsEqualsToken
                  NumericLiteral
                Block
                  ReturnStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' factory'
                        Identifier: 'createReturnStatement'
                      AsExpression
                        PropertyAccessExpression
                          ElementAccessExpression
                            Identifier: 'assignments'
                            NumericLiteral
                          Identifier: 'name'
                        TypeReference
                          Identifier: ' Expression'
                Block
                  ReturnStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' factory'
                        Identifier: 'createReturnStatement'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: 'factory'
                          Identifier: 'createObjectLiteralExpression'
                        Identifier: 'assignments'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' oldIgnoreReturns'
                    Identifier: ' ignoreReturns'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            ignoreReturns'
                  EqualsToken
                  BinaryExpression
                    BinaryExpression
                      Identifier: ' ignoreReturns'
                      BarBarToken
                      CallExpression
                        Identifier: ' isFunctionLikeDeclaration'
                        Identifier: 'node'
                    BarBarToken
                    CallExpression
                      Identifier: ' isClassLike'
                      Identifier: 'node'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' substitution'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' substitutions'
                        Identifier: 'get'
                      CallExpression
                        PropertyAccessExpression
                          CallExpression
                            Identifier: 'getNodeId'
                            Identifier: 'node'
                          Identifier: 'toString'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' result'
                    ConditionalExpression
                      Identifier: ' substitution'
                      QuestionToken
                      CallExpression
                        Identifier: ' getSynthesizedDeepClone'
                        Identifier: 'substitution'
                      ColonToken
                      CallExpression
                        Identifier: ' visitEachChild'
                        Identifier: 'node'
                        Identifier: ' visitor'
                        Identifier: ' /*context*/ undefined'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            ignoreReturns'
                  EqualsToken
                  Identifier: ' oldIgnoreReturns'
              ReturnStatement
                Identifier: ' result'
  FunctionDeclaration
    Identifier: ' transformConstantInitializer'
    Parameter
      Identifier: 'initializer'
      TypeReference
        Identifier: ' Expression'
    Parameter
      Identifier: ' substitutions'
      TypeReference
        Identifier: ' ReadonlyMap'
        StringKeyword
        TypeReference
          Identifier: ' Node'
    TypeReference
      Identifier: ' Expression'
    Block
      ReturnStatement
        ConditionalExpression
          PropertyAccessExpression
            Identifier: ' substitutions'
            Identifier: 'size'
          QuestionToken
          AsExpression
            CallExpression
              Identifier: ' visitor'
              Identifier: 'initializer'
            TypeReference
              Identifier: ' Expression'
          ColonToken
          Identifier: ' initializer'
      FunctionDeclaration
        Identifier: ' visitor'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        TypeReference
          Identifier: ' VisitResult'
          TypeReference
            Identifier: 'Node'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' substitution'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' substitutions'
                    Identifier: 'get'
                  CallExpression
                    PropertyAccessExpression
                      CallExpression
                        Identifier: 'getNodeId'
                        Identifier: 'node'
                      Identifier: 'toString'
          ReturnStatement
            ConditionalExpression
              Identifier: ' substitution'
              QuestionToken
              CallExpression
                Identifier: ' getSynthesizedDeepClone'
                Identifier: 'substitution'
              ColonToken
              CallExpression
                Identifier: ' visitEachChild'
                Identifier: 'node'
                Identifier: ' visitor'
                Identifier: ' /*context*/ undefined'
  FunctionDeclaration
    Identifier: ' getStatementsOrClassElements'
    Parameter
      Identifier: 'scope'
      TypeReference
        Identifier: ' Scope'
    UnionType
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' Statement'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' ClassElement'
    Block
      IfStatement
        CallExpression
          Identifier: 'isFunctionLikeDeclaration'
          Identifier: 'scope'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' body'
                NonNullExpression
                  PropertyAccessExpression
                    Identifier: ' scope'
                    Identifier: 'body'
          IfStatement
            CallExpression
              Identifier: 'isBlock'
              Identifier: 'body'
            Block
              ReturnStatement
                PropertyAccessExpression
                  Identifier: ' body'
                  Identifier: 'statements'
        IfStatement
          BinaryExpression
            CallExpression
              Identifier: 'isModuleBlock'
              Identifier: 'scope'
            BarBarToken
            CallExpression
              Identifier: ' isSourceFile'
              Identifier: 'scope'
          Block
            ReturnStatement
              PropertyAccessExpression
                Identifier: ' scope'
                Identifier: 'statements'
          IfStatement
            CallExpression
              Identifier: 'isClassLike'
              Identifier: 'scope'
            Block
              ReturnStatement
                PropertyAccessExpression
                  Identifier: ' scope'
                  Identifier: 'members'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
        assertType'
                  NeverKeyword
                  Identifier: 'scope'
      ReturnStatement
        Identifier: ' emptyArray'
  FunctionDeclaration
    Identifier: ' getNodeToInsertFunctionBefore'
    Parameter
      Identifier: 'minPos'
      NumberKeyword
    Parameter
      Identifier: ' scope'
      TypeReference
        Identifier: ' Scope'
    UnionType
      TypeReference
        Identifier: ' Statement'
      TypeReference
        Identifier: ' ClassElement'
      UndefinedKeyword
    Block
      ReturnStatement
        CallExpression
          Identifier: ' find'
          UnionType
            TypeReference
              Identifier: 'Statement'
            TypeReference
              Identifier: ' ClassElement'
          CallExpression
            Identifier: 'getStatementsOrClassElements'
            Identifier: 'scope'
          ArrowFunction
            Parameter
              Identifier: ' child'
            EqualsGreaterThanToken
            BinaryExpression
              BinaryExpression
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: ' child'
                    Identifier: 'pos'
                  GreaterThanEqualsToken
                  Identifier: ' minPos'
                AmpersandAmpersandToken
                CallExpression
                  Identifier: ' isFunctionLikeDeclaration'
                  Identifier: 'child'
              AmpersandAmpersandToken
              PrefixUnaryExpression
                CallExpression
                  Identifier: 'isConstructorDeclaration'
                  Identifier: 'child'
  FunctionDeclaration
    Identifier: ' getNodeToInsertPropertyBefore'
    Parameter
      Identifier: 'maxPos'
      NumberKeyword
    Parameter
      Identifier: ' scope'
      TypeReference
        Identifier: ' ClassLikeDeclaration'
    TypeReference
      Identifier: ' ClassElement'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' members'
            PropertyAccessExpression
              Identifier: ' scope'
              Identifier: 'members'
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            Identifier: '
    Debug'
            Identifier: 'assert'
          BinaryExpression
            PropertyAccessExpression
              Identifier: 'members'
              Identifier: 'length'
            GreaterThanToken
            NumericLiteral
          StringLiteral
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' prevMember'
            UnionType
              TypeReference
                Identifier: ' ClassElement'
              UndefinedKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' allProperties'
            TrueKeyword
      ForOfStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' member'
        Identifier: ' members'
        Block
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'member'
                Identifier: 'pos'
              GreaterThanToken
              Identifier: ' maxPos'
            Block
              ReturnStatement
                BinaryExpression
                  Identifier: ' prevMember'
                  BarBarToken
                  ElementAccessExpression
                    Identifier: ' members'
                    NumericLiteral
          IfStatement
            BinaryExpression
              Identifier: 'allProperties'
              AmpersandAmpersandToken
              PrefixUnaryExpression
                CallExpression
                  Identifier: 'isPropertyDeclaration'
                  Identifier: 'member'
            Block
              IfStatement
                BinaryExpression
                  Identifier: 'prevMember'
                  ExclamationEqualsEqualsToken
                  Identifier: ' undefined'
                Block
                  ReturnStatement
                    Identifier: ' member'
              ExpressionStatement
                BinaryExpression
                  Identifier: '

            allProperties'
                  EqualsToken
                  FalseKeyword
          ExpressionStatement
            BinaryExpression
              Identifier: '
        prevMember'
              EqualsToken
              Identifier: ' member'
      IfStatement
        BinaryExpression
          Identifier: 'prevMember'
          EqualsEqualsEqualsToken
          Identifier: ' undefined'
        ReturnStatement
          CallExpression
            PropertyAccessExpression
              Identifier: ' Debug'
              Identifier: 'fail'
      ReturnStatement
        Identifier: ' prevMember'
  FunctionDeclaration
    Identifier: ' getNodeToInsertConstantBefore'
    Parameter
      Identifier: 'node'
      TypeReference
        Identifier: ' Node'
    Parameter
      Identifier: ' scope'
      TypeReference
        Identifier: ' Scope'
    TypeReference
      Identifier: ' Statement'
    Block
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            Identifier: '
    Debug'
            Identifier: 'assert'
          PrefixUnaryExpression
            CallExpression
              Identifier: 'isClassLike'
              Identifier: 'scope'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' prevScope'
            UnionType
              TypeReference
                Identifier: ' Scope'
              UndefinedKeyword
      ForStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' curr'
            Identifier: ' node'
        BinaryExpression
          Identifier: ' curr'
          ExclamationEqualsEqualsToken
          Identifier: ' scope'
        BinaryExpression
          Identifier: ' curr'
          EqualsToken
          PropertyAccessExpression
            Identifier: ' curr'
            Identifier: 'parent'
        Block
          IfStatement
            CallExpression
              Identifier: 'isScope'
              Identifier: 'curr'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            prevScope'
                  EqualsToken
                  Identifier: ' curr'
      ForStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' curr'
            PropertyAccessExpression
              ParenthesizedExpression
                BinaryExpression
                  Identifier: 'prevScope'
                  BarBarToken
                  Identifier: ' node'
              Identifier: 'parent'
        BinaryExpression
          Identifier: ' curr'
          EqualsToken
          PropertyAccessExpression
            Identifier: ' curr'
            Identifier: 'parent'
        Block
          IfStatement
            CallExpression
              Identifier: 'isBlockLike'
              Identifier: 'curr'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' prevStatement'
                    UnionType
                      TypeReference
                        Identifier: ' Statement'
                      UndefinedKeyword
              ForOfStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' statement'
                PropertyAccessExpression
                  Identifier: ' curr'
                  Identifier: 'statements'
                Block
                  IfStatement
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: 'statement'
                        Identifier: 'pos'
                      GreaterThanToken
                      PropertyAccessExpression
                        Identifier: ' node'
                        Identifier: 'pos'
                    Block
                      BreakStatement
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                prevStatement'
                      EqualsToken
                      Identifier: ' statement'
              IfStatement
                BinaryExpression
                  PrefixUnaryExpression
                    Identifier: 'prevStatement'
                  AmpersandAmpersandToken
                  CallExpression
                    Identifier: ' isCaseClause'
                    Identifier: 'curr'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                // We must have been in the expression of the case clause.
                Debug'
                        Identifier: 'assert'
                      CallExpression
                        Identifier: 'isSwitchStatement'
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: 'curr'
                            Identifier: 'parent'
                          Identifier: 'parent'
                      StringLiteral
                  ReturnStatement
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: ' curr'
                        Identifier: 'parent'
                      Identifier: 'parent'
              ReturnStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' Debug'
                    Identifier: 'checkDefined'
                  Identifier: 'prevStatement'
                  StringLiteral
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '

        Debug'
                Identifier: 'assert'
              BinaryExpression
                Identifier: 'curr'
                ExclamationEqualsEqualsToken
                Identifier: ' scope'
              StringLiteral
  FunctionDeclaration
    Identifier: ' getPropertyAssignmentsForWritesAndVariableDeclarations'
    Parameter
      Identifier: '
    exposedVariableDeclarations'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' VariableDeclaration'
    Parameter
      Identifier: '
    writes'
      UnionType
        TypeOperator
          ArrayType
            TypeReference
              Identifier: ' UsageEntry'
        UndefinedKeyword
    ArrayType
      TypeReference
        Identifier: ' ShorthandPropertyAssignment'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' variableAssignments'
            CallExpression
              Identifier: ' map'
              Identifier: 'exposedVariableDeclarations'
              ArrowFunction
                Parameter
                  Identifier: ' v'
                EqualsGreaterThanToken
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' factory'
                    Identifier: 'createShorthandPropertyAssignment'
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: 'v'
                      Identifier: 'symbol'
                    Identifier: 'name'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' writeAssignments'
            CallExpression
              Identifier: ' map'
              Identifier: 'writes'
              ArrowFunction
                Parameter
                  Identifier: ' w'
                EqualsGreaterThanToken
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' factory'
                    Identifier: 'createShorthandPropertyAssignment'
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: 'w'
                      Identifier: 'symbol'
                    Identifier: 'name'
      ReturnStatement
        ConditionalExpression
          BinaryExpression
            Identifier: ' variableAssignments'
            EqualsEqualsEqualsToken
            Identifier: ' undefined'
          QuestionToken
          NonNullExpression
            Identifier: ' writeAssignments'
          ColonToken
          ConditionalExpression
            BinaryExpression
              Identifier: ' writeAssignments'
              EqualsEqualsEqualsToken
              Identifier: ' undefined'
            QuestionToken
            Identifier: ' variableAssignments'
            ColonToken
            CallExpression
              PropertyAccessExpression
                Identifier: ' variableAssignments'
                Identifier: 'concat'
              Identifier: 'writeAssignments'
  FunctionDeclaration
    Identifier: ' isReadonlyArray'
    Parameter
      Identifier: 'v'
      AnyKeyword
    TypePredicate
      Identifier: ' v'
      TypeOperator
        ArrayType
          AnyKeyword
    Block
      ReturnStatement
        CallExpression
          Identifier: ' isArray'
          Identifier: 'v'
  FunctionDeclaration
    Identifier: ' getEnclosingTextRange'
    Parameter
      Identifier: 'targetRange'
      TypeReference
        Identifier: ' TargetRange'
    Parameter
      Identifier: ' sourceFile'
      TypeReference
        Identifier: ' SourceFile'
    TypeReference
      Identifier: ' TextRange'
    Block
      ReturnStatement
        ConditionalExpression
          CallExpression
            Identifier: ' isReadonlyArray'
            PropertyAccessExpression
              Identifier: 'targetRange'
              Identifier: 'range'
          QuestionToken
          ObjectLiteralExpression
            PropertyAssignment
              Identifier: ' pos'
              CallExpression
                PropertyAccessExpression
                  CallExpression
                    Identifier: ' first'
                    PropertyAccessExpression
                      Identifier: 'targetRange'
                      Identifier: 'range'
                  Identifier: 'getStart'
                Identifier: 'sourceFile'
            PropertyAssignment
              Identifier: ' end'
              CallExpression
                PropertyAccessExpression
                  CallExpression
                    Identifier: ' last'
                    PropertyAccessExpression
                      Identifier: 'targetRange'
                      Identifier: 'range'
                  Identifier: 'getEnd'
          ColonToken
          PropertyAccessExpression
            Identifier: ' targetRange'
            Identifier: 'range'
  EnumDeclaration
    ConstKeyword
    Identifier: ' Usage'
    EnumMember
      Identifier: '
    // value should be passed to extracted method
    Read'
      NumericLiteral
    EnumMember
      Identifier: '
    // value should be passed to extracted method and propagated back
    Write'
      NumericLiteral
  InterfaceDeclaration
    Identifier: ' UsageEntry'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' usage'
      TypeReference
        Identifier: ' Usage'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' symbol'
      TypeReference
        Identifier: ' Symbol'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' node'
      TypeReference
        Identifier: ' Node'
  InterfaceDeclaration
    Identifier: ' ScopeUsages'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' usages'
      TypeReference
        Identifier: ' Map'
        StringKeyword
        TypeReference
          Identifier: ' UsageEntry'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' typeParameterUsages'
      TypeReference
        Identifier: ' Map'
        StringKeyword
        TypeReference
          Identifier: ' TypeParameter'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' substitutions'
      TypeReference
        Identifier: ' Map'
        StringKeyword
        TypeReference
          Identifier: ' Node'
  InterfaceDeclaration
    Identifier: ' ReadsAndWrites'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' target'
      UnionType
        TypeReference
          Identifier: ' Expression'
        TypeReference
          Identifier: ' Block'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' usagesPerScope'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' ScopeUsages'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' functionErrorsPerScope'
      TypeOperator
        ArrayType
          ParenthesizedType
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' Diagnostic'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' constantErrorsPerScope'
      TypeOperator
        ArrayType
          ParenthesizedType
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' Diagnostic'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' exposedVariableDeclarations'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' VariableDeclaration'
  FunctionDeclaration
    Identifier: ' collectReadsAndWrites'
    Parameter
      Identifier: '
    targetRange'
      TypeReference
        Identifier: ' TargetRange'
    Parameter
      Identifier: '
    scopes'
      ArrayType
        TypeReference
          Identifier: ' Scope'
    Parameter
      Identifier: '
    enclosingTextRange'
      TypeReference
        Identifier: ' TextRange'
    Parameter
      Identifier: '
    sourceFile'
      TypeReference
        Identifier: ' SourceFile'
    Parameter
      Identifier: '
    checker'
      TypeReference
        Identifier: ' TypeChecker'
    Parameter
      Identifier: '
    cancellationToken'
      TypeReference
        Identifier: ' CancellationToken'
    TypeReference
      Identifier: ' ReadsAndWrites'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' allTypeParameterUsages'
            NewExpression
              Identifier: ' Map'
              StringKeyword
              TypeReference
                Identifier: ' TypeParameter'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' usagesPerScope'
            ArrayType
              TypeReference
                Identifier: ' ScopeUsages'
            ArrayLiteralExpression
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' substitutionsPerScope'
            ArrayType
              TypeReference
                Identifier: ' Map'
                StringKeyword
                TypeReference
                  Identifier: ' Node'
            ArrayLiteralExpression
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' functionErrorsPerScope'
            ArrayType
              ArrayType
                TypeReference
                  Identifier: ' Diagnostic'
            ArrayLiteralExpression
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' constantErrorsPerScope'
            ArrayType
              ArrayType
                TypeReference
                  Identifier: ' Diagnostic'
            ArrayLiteralExpression
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' visibleDeclarationsInExtractedRange'
            ArrayType
              TypeReference
                Identifier: ' NamedDeclaration'
            ArrayLiteralExpression
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' exposedVariableSymbolSet'
            NewExpression
              Identifier: ' Map'
              StringKeyword
              LiteralType
                TrueKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' exposedVariableDeclarations'
            ArrayType
              TypeReference
                Identifier: ' VariableDeclaration'
            ArrayLiteralExpression
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' firstExposedNonVariableDeclaration'
            UnionType
              TypeReference
                Identifier: ' NamedDeclaration'
              UndefinedKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' expression'
            ConditionalExpression
              PrefixUnaryExpression
                CallExpression
                  Identifier: 'isReadonlyArray'
                  PropertyAccessExpression
                    Identifier: 'targetRange'
                    Identifier: 'range'
              QuestionToken
              PropertyAccessExpression
                Identifier: ' targetRange'
                Identifier: 'range'
              ColonToken
              ConditionalExpression
                BinaryExpression
                  BinaryExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: ' targetRange'
                        Identifier: 'range'
                      Identifier: 'length'
                    EqualsEqualsEqualsToken
                    NumericLiteral
                  AmpersandAmpersandToken
                  CallExpression
                    Identifier: ' isExpressionStatement'
                    ElementAccessExpression
                      PropertyAccessExpression
                        Identifier: 'targetRange'
                        Identifier: 'range'
                      NumericLiteral
                QuestionToken
                PropertyAccessExpression
                  ElementAccessExpression
                    PropertyAccessExpression
                      Identifier: ' targetRange'
                      Identifier: 'range'
                    NumericLiteral
                  Identifier: 'expression'
                ColonToken
                Identifier: ' undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' expressionDiagnostic'
            UnionType
              TypeReference
                Identifier: ' Diagnostic'
              UndefinedKeyword
      IfStatement
        BinaryExpression
          Identifier: 'expression'
          EqualsEqualsEqualsToken
          Identifier: ' undefined'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' statements'
                AsExpression
                  PropertyAccessExpression
                    Identifier: ' targetRange'
                    Identifier: 'range'
                  TypeOperator
                    ArrayType
                      TypeReference
                        Identifier: ' Statement'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' start'
                CallExpression
                  PropertyAccessExpression
                    CallExpression
                      Identifier: ' first'
                      Identifier: 'statements'
                    Identifier: 'getStart'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' end'
                PropertyAccessExpression
                  CallExpression
                    Identifier: ' last'
                    Identifier: 'statements'
                  Identifier: 'end'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        expressionDiagnostic'
              EqualsToken
              CallExpression
                Identifier: ' createFileDiagnostic'
                Identifier: 'sourceFile'
                Identifier: ' start'
                BinaryExpression
                  Identifier: ' end'
                  MinusToken
                  Identifier: ' start'
                PropertyAccessExpression
                  Identifier: ' Messages'
                  Identifier: 'expressionExpected'
        IfStatement
          BinaryExpression
            PropertyAccessExpression
              CallExpression
                PropertyAccessExpression
                  Identifier: 'checker'
                  Identifier: 'getTypeAtLocation'
                Identifier: 'expression'
              Identifier: 'flags'
            AmpersandToken
            ParenthesizedExpression
              BinaryExpression
                PropertyAccessExpression
                  Identifier: 'TypeFlags'
                  Identifier: 'Void'
                BarToken
                PropertyAccessExpression
                  Identifier: ' TypeFlags'
                  Identifier: 'Never'
          Block
            ExpressionStatement
              BinaryExpression
                Identifier: '
        expressionDiagnostic'
                EqualsToken
                CallExpression
                  Identifier: ' createDiagnosticForNode'
                  Identifier: 'expression'
                  PropertyAccessExpression
                    Identifier: ' Messages'
                    Identifier: 'uselessConstantType'
      ForOfStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' scope'
        Identifier: ' scopes'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        usagesPerScope'
                Identifier: 'push'
              ObjectLiteralExpression
                PropertyAssignment
                  Identifier: ' usages'
                  NewExpression
                    Identifier: ' Map'
                    StringKeyword
                    TypeReference
                      Identifier: ' UsageEntry'
                PropertyAssignment
                  Identifier: ' typeParameterUsages'
                  NewExpression
                    Identifier: ' Map'
                    StringKeyword
                    TypeReference
                      Identifier: ' TypeParameter'
                PropertyAssignment
                  Identifier: ' substitutions'
                  NewExpression
                    Identifier: ' Map'
                    StringKeyword
                    TypeReference
                      Identifier: ' Expression'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        substitutionsPerScope'
                Identifier: 'push'
              NewExpression
                Identifier: ' Map'
                StringKeyword
                TypeReference
                  Identifier: ' Expression'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '

        functionErrorsPerScope'
                Identifier: 'push'
              ArrayLiteralExpression
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' constantErrors'
                ArrayLiteralExpression
          IfStatement
            Identifier: 'expressionDiagnostic'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            constantErrors'
                    Identifier: 'push'
                  Identifier: 'expressionDiagnostic'
          IfStatement
            BinaryExpression
              CallExpression
                Identifier: 'isClassLike'
                Identifier: 'scope'
              AmpersandAmpersandToken
              CallExpression
                Identifier: ' isInJSFile'
                Identifier: 'scope'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            constantErrors'
                    Identifier: 'push'
                  CallExpression
                    Identifier: 'createDiagnosticForNode'
                    Identifier: 'scope'
                    PropertyAccessExpression
                      Identifier: ' Messages'
                      Identifier: 'cannotExtractToJSClass'
          IfStatement
            BinaryExpression
              CallExpression
                Identifier: 'isArrowFunction'
                Identifier: 'scope'
              AmpersandAmpersandToken
              PrefixUnaryExpression
                CallExpression
                  Identifier: 'isBlock'
                  PropertyAccessExpression
                    Identifier: 'scope'
                    Identifier: 'body'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            // TODO (https://github.com/Microsoft/TypeScript/issues/18924): allow this
            constantErrors'
                    Identifier: 'push'
                  CallExpression
                    Identifier: 'createDiagnosticForNode'
                    Identifier: 'scope'
                    PropertyAccessExpression
                      Identifier: ' Messages'
                      Identifier: 'cannotExtractToExpressionArrowFunction'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        constantErrorsPerScope'
                Identifier: 'push'
              Identifier: 'constantErrors'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' seenUsages'
            NewExpression
              Identifier: ' Map'
              StringKeyword
              TypeReference
                Identifier: ' Usage'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' target'
            ConditionalExpression
              CallExpression
                Identifier: ' isReadonlyArray'
                PropertyAccessExpression
                  Identifier: 'targetRange'
                  Identifier: 'range'
              QuestionToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' factory'
                  Identifier: 'createBlock'
                PropertyAccessExpression
                  Identifier: 'targetRange'
                  Identifier: 'range'
              ColonToken
              PropertyAccessExpression
                Identifier: ' targetRange'
                Identifier: 'range'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' unmodifiedNode'
            ConditionalExpression
              CallExpression
                Identifier: ' isReadonlyArray'
                PropertyAccessExpression
                  Identifier: 'targetRange'
                  Identifier: 'range'
              QuestionToken
              CallExpression
                Identifier: ' first'
                PropertyAccessExpression
                  Identifier: 'targetRange'
                  Identifier: 'range'
              ColonToken
              PropertyAccessExpression
                Identifier: ' targetRange'
                Identifier: 'range'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' inGenericContext'
            CallExpression
              Identifier: ' isInGenericContext'
              Identifier: 'unmodifiedNode'
      ExpressionStatement
        CallExpression
          Identifier: '

    collectUsages'
          Identifier: 'target'
      IfStatement
        BinaryExpression
          BinaryExpression
            Identifier: 'inGenericContext'
            AmpersandAmpersandToken
            PrefixUnaryExpression
              CallExpression
                Identifier: 'isReadonlyArray'
                PropertyAccessExpression
                  Identifier: 'targetRange'
                  Identifier: 'range'
          AmpersandAmpersandToken
          PrefixUnaryExpression
            CallExpression
              Identifier: 'isJsxAttribute'
              PropertyAccessExpression
                Identifier: 'targetRange'
                Identifier: 'range'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' contextualType'
                NonNullExpression
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' checker'
                      Identifier: 'getContextualType'
                    PropertyAccessExpression
                      Identifier: 'targetRange'
                      Identifier: 'range'
          ExpressionStatement
            CallExpression
              Identifier: ' // TODO: GH#18217
        recordTypeParameterUsages'
              Identifier: 'contextualType'
      IfStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: 'allTypeParameterUsages'
            Identifier: 'size'
          GreaterThanToken
          NumericLiteral
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' seenTypeParameterUsages'
                NewExpression
                  Identifier: ' Map'
                  StringKeyword
                  TypeReference
                    Identifier: ' TypeParameter'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' i'
                NumericLiteral
          ForStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' curr'
                TypeReference
                  Identifier: ' Node'
                Identifier: ' unmodifiedNode'
            BinaryExpression
              BinaryExpression
                Identifier: ' curr'
                ExclamationEqualsEqualsToken
                Identifier: ' undefined'
              AmpersandAmpersandToken
              BinaryExpression
                Identifier: ' i'
                LessThanToken
                PropertyAccessExpression
                  Identifier: ' scopes'
                  Identifier: 'length'
            BinaryExpression
              Identifier: ' curr'
              EqualsToken
              PropertyAccessExpression
                Identifier: ' curr'
                Identifier: 'parent'
            Block
              IfStatement
                BinaryExpression
                  Identifier: 'curr'
                  EqualsEqualsEqualsToken
                  ElementAccessExpression
                    Identifier: ' scopes'
                    Identifier: 'i'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                // Copy current contents of seenTypeParameterUsages into scope.
                seenTypeParameterUsages'
                        Identifier: 'forEach'
                      ArrowFunction
                        Parameter
                          Identifier: 'typeParameter'
                        Parameter
                          Identifier: ' id'
                        EqualsGreaterThanToken
                        Block
                          ExpressionStatement
                            CallExpression
                              PropertyAccessExpression
                                PropertyAccessExpression
                                  ElementAccessExpression
                                    Identifier: '
                    usagesPerScope'
                                    Identifier: 'i'
                                  Identifier: 'typeParameterUsages'
                                Identifier: 'set'
                              Identifier: 'id'
                              Identifier: ' typeParameter'
                  ExpressionStatement
                    PostfixUnaryExpression
                      Identifier: '

                i'
              IfStatement
                CallExpression
                  Identifier: 'isDeclarationWithTypeParameters'
                  Identifier: 'curr'
                Block
                  ForOfStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' typeParameterDecl'
                    CallExpression
                      Identifier: ' getEffectiveTypeParameterDeclarations'
                      Identifier: 'curr'
                    Block
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' typeParameter'
                            AsExpression
                              CallExpression
                                PropertyAccessExpression
                                  Identifier: ' checker'
                                  Identifier: 'getTypeAtLocation'
                                Identifier: 'typeParameterDecl'
                              TypeReference
                                Identifier: ' TypeParameter'
                      IfStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: 'allTypeParameterUsages'
                            Identifier: 'has'
                          CallExpression
                            PropertyAccessExpression
                              PropertyAccessExpression
                                Identifier: 'typeParameter'
                                Identifier: 'id'
                              Identifier: 'toString'
                        Block
                          ExpressionStatement
                            CallExpression
                              PropertyAccessExpression
                                Identifier: '
                        seenTypeParameterUsages'
                                Identifier: 'set'
                              CallExpression
                                PropertyAccessExpression
                                  PropertyAccessExpression
                                    Identifier: 'typeParameter'
                                    Identifier: 'id'
                                  Identifier: 'toString'
                              Identifier: ' typeParameter'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '

        // If we didn't get through all the scopes, then there were some that weren't in our
        // parent chain (impossible at time of writing).  A conservative solution would be to
        // copy allTypeParameterUsages into all remaining scopes.
        Debug'
                Identifier: 'assert'
              BinaryExpression
                Identifier: 'i'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' scopes'
                  Identifier: 'length'
              StringLiteral
      IfStatement
        PropertyAccessExpression
          Identifier: 'visibleDeclarationsInExtractedRange'
          Identifier: 'length'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' containingLexicalScopeOfExtraction'
                ConditionalExpression
                  CallExpression
                    Identifier: ' isBlockScope'
                    ElementAccessExpression
                      Identifier: 'scopes'
                      NumericLiteral
                    PropertyAccessExpression
                      ElementAccessExpression
                        Identifier: ' scopes'
                        NumericLiteral
                      Identifier: 'parent'
                  QuestionToken
                  ElementAccessExpression
                    Identifier: ' scopes'
                    NumericLiteral
                  ColonToken
                  CallExpression
                    Identifier: ' getEnclosingBlockScopeContainer'
                    ElementAccessExpression
                      Identifier: 'scopes'
                      NumericLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
        forEachChild'
              Identifier: 'containingLexicalScopeOfExtraction'
              Identifier: ' checkForUsedDeclarations'
      ForStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' i'
            NumericLiteral
        BinaryExpression
          Identifier: ' i'
          LessThanToken
          PropertyAccessExpression
            Identifier: ' scopes'
            Identifier: 'length'
        PostfixUnaryExpression
          Identifier: ' i'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' scopeUsages'
                ElementAccessExpression
                  Identifier: ' usagesPerScope'
                  Identifier: 'i'
          IfStatement
            BinaryExpression
              BinaryExpression
                Identifier: 'i'
                GreaterThanToken
                NumericLiteral
              AmpersandAmpersandToken
              ParenthesizedExpression
                BinaryExpression
                  BinaryExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: 'scopeUsages'
                        Identifier: 'usages'
                      Identifier: 'size'
                    GreaterThanToken
                    NumericLiteral
                  BarBarToken
                  BinaryExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: ' scopeUsages'
                        Identifier: 'typeParameterUsages'
                      Identifier: 'size'
                    GreaterThanToken
                    NumericLiteral
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' errorNode'
                    ConditionalExpression
                      CallExpression
                        Identifier: ' isReadonlyArray'
                        PropertyAccessExpression
                          Identifier: 'targetRange'
                          Identifier: 'range'
                      QuestionToken
                      ElementAccessExpression
                        PropertyAccessExpression
                          Identifier: ' targetRange'
                          Identifier: 'range'
                        NumericLiteral
                      ColonToken
                      PropertyAccessExpression
                        Identifier: ' targetRange'
                        Identifier: 'range'
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    ElementAccessExpression
                      Identifier: '
            constantErrorsPerScope'
                      Identifier: 'i'
                    Identifier: 'push'
                  CallExpression
                    Identifier: 'createDiagnosticForNode'
                    Identifier: 'errorNode'
                    PropertyAccessExpression
                      Identifier: ' Messages'
                      Identifier: 'cannotAccessVariablesFromNestedScopes'
          IfStatement
            BinaryExpression
              BinaryExpression
                PropertyAccessExpression
                  Identifier: 'targetRange'
                  Identifier: 'facts'
                AmpersandToken
                PropertyAccessExpression
                  Identifier: ' RangeFacts'
                  Identifier: 'UsesThisInFunction'
              AmpersandAmpersandToken
              CallExpression
                Identifier: ' isClassLike'
                ElementAccessExpression
                  Identifier: 'scopes'
                  Identifier: 'i'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    ElementAccessExpression
                      Identifier: '
            functionErrorsPerScope'
                      Identifier: 'i'
                    Identifier: 'push'
                  CallExpression
                    Identifier: 'createDiagnosticForNode'
                    NonNullExpression
                      PropertyAccessExpression
                        Identifier: 'targetRange'
                        Identifier: 'thisNode'
                    PropertyAccessExpression
                      Identifier: ' Messages'
                      Identifier: 'cannotExtractFunctionsContainingThisToMethod'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' hasWrite'
                FalseKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' readonlyClassPropertyWrite'
                UnionType
                  TypeReference
                    Identifier: ' Declaration'
                  UndefinedKeyword
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  ElementAccessExpression
                    Identifier: '
        usagesPerScope'
                    Identifier: 'i'
                  Identifier: 'usages'
                Identifier: 'forEach'
              ArrowFunction
                Parameter
                  Identifier: 'value'
                EqualsGreaterThanToken
                Block
                  IfStatement
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: 'value'
                        Identifier: 'usage'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' Usage'
                        Identifier: 'Write'
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                hasWrite'
                          EqualsToken
                          TrueKeyword
                      IfStatement
                        BinaryExpression
                          BinaryExpression
                            BinaryExpression
                              PropertyAccessExpression
                                PropertyAccessExpression
                                  Identifier: '
                    value'
                                  Identifier: 'symbol'
                                Identifier: 'flags'
                              AmpersandToken
                              PropertyAccessExpression
                                Identifier: ' SymbolFlags'
                                Identifier: 'ClassMember'
                            AmpersandAmpersandToken
                            PropertyAccessExpression
                              PropertyAccessExpression
                                Identifier: '
                    value'
                                Identifier: 'symbol'
                              Identifier: 'valueDeclaration'
                          AmpersandAmpersandToken
                          CallExpression
                            Identifier: '
                    hasEffectiveModifier'
                            PropertyAccessExpression
                              PropertyAccessExpression
                                Identifier: 'value'
                                Identifier: 'symbol'
                              Identifier: 'valueDeclaration'
                            PropertyAccessExpression
                              Identifier: ' ModifierFlags'
                              Identifier: 'Readonly'
                        Block
                          ExpressionStatement
                            BinaryExpression
                              Identifier: '
                    readonlyClassPropertyWrite'
                              EqualsToken
                              PropertyAccessExpression
                                PropertyAccessExpression
                                  Identifier: ' value'
                                  Identifier: 'symbol'
                                Identifier: 'valueDeclaration'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '

        // If an expression was extracted, then there shouldn't have been any variable declarations.
        Debug'
                Identifier: 'assert'
              BinaryExpression
                CallExpression
                  Identifier: 'isReadonlyArray'
                  PropertyAccessExpression
                    Identifier: 'targetRange'
                    Identifier: 'range'
                BarBarToken
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: ' exposedVariableDeclarations'
                    Identifier: 'length'
                  EqualsEqualsEqualsToken
                  NumericLiteral
              StringLiteral
          IfStatement
            BinaryExpression
              Identifier: 'hasWrite'
              AmpersandAmpersandToken
              PrefixUnaryExpression
                CallExpression
                  Identifier: 'isReadonlyArray'
                  PropertyAccessExpression
                    Identifier: 'targetRange'
                    Identifier: 'range'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' diag'
                    CallExpression
                      Identifier: ' createDiagnosticForNode'
                      PropertyAccessExpression
                        Identifier: 'targetRange'
                        Identifier: 'range'
                      PropertyAccessExpression
                        Identifier: ' Messages'
                        Identifier: 'cannotWriteInExpression'
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    ElementAccessExpression
                      Identifier: '
            functionErrorsPerScope'
                      Identifier: 'i'
                    Identifier: 'push'
                  Identifier: 'diag'
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    ElementAccessExpression
                      Identifier: '
            constantErrorsPerScope'
                      Identifier: 'i'
                    Identifier: 'push'
                  Identifier: 'diag'
            IfStatement
              BinaryExpression
                Identifier: 'readonlyClassPropertyWrite'
                AmpersandAmpersandToken
                BinaryExpression
                  Identifier: ' i'
                  GreaterThanToken
                  NumericLiteral
              Block
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' diag'
                      CallExpression
                        Identifier: ' createDiagnosticForNode'
                        Identifier: 'readonlyClassPropertyWrite'
                        PropertyAccessExpression
                          Identifier: ' Messages'
                          Identifier: 'cannotExtractReadonlyPropertyInitializerOutsideConstructor'
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      ElementAccessExpression
                        Identifier: '
            functionErrorsPerScope'
                        Identifier: 'i'
                      Identifier: 'push'
                    Identifier: 'diag'
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      ElementAccessExpression
                        Identifier: '
            constantErrorsPerScope'
                        Identifier: 'i'
                      Identifier: 'push'
                    Identifier: 'diag'
              IfStatement
                Identifier: 'firstExposedNonVariableDeclaration'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' diag'
                        CallExpression
                          Identifier: ' createDiagnosticForNode'
                          Identifier: 'firstExposedNonVariableDeclaration'
                          PropertyAccessExpression
                            Identifier: ' Messages'
                            Identifier: 'cannotExtractExportedEntity'
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        ElementAccessExpression
                          Identifier: '
            functionErrorsPerScope'
                          Identifier: 'i'
                        Identifier: 'push'
                      Identifier: 'diag'
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        ElementAccessExpression
                          Identifier: '
            constantErrorsPerScope'
                          Identifier: 'i'
                        Identifier: 'push'
                      Identifier: 'diag'
      ReturnStatement
        ObjectLiteralExpression
          ShorthandPropertyAssignment
            Identifier: ' target'
          ShorthandPropertyAssignment
            Identifier: ' usagesPerScope'
          ShorthandPropertyAssignment
            Identifier: ' functionErrorsPerScope'
          ShorthandPropertyAssignment
            Identifier: ' constantErrorsPerScope'
          ShorthandPropertyAssignment
            Identifier: ' exposedVariableDeclarations'
      FunctionDeclaration
        Identifier: ' isInGenericContext'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        Block
          ReturnStatement
            PrefixUnaryExpression
              PrefixUnaryExpression
                CallExpression
                  Identifier: 'findAncestor'
                  Identifier: 'node'
                  ArrowFunction
                    Parameter
                      Identifier: ' n'
                    EqualsGreaterThanToken
                    BinaryExpression
                      CallExpression
                        Identifier: ' isDeclarationWithTypeParameters'
                        Identifier: 'n'
                      AmpersandAmpersandToken
                      BinaryExpression
                        PropertyAccessExpression
                          CallExpression
                            Identifier: ' getEffectiveTypeParameterDeclarations'
                            Identifier: 'n'
                          Identifier: 'length'
                        ExclamationEqualsEqualsToken
                        NumericLiteral
      FunctionDeclaration
        Identifier: ' recordTypeParameterUsages'
        Parameter
          Identifier: 'type'
          TypeReference
            Identifier: ' Type'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' symbolWalker'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' checker'
                    Identifier: 'getSymbolWalker'
                  ArrowFunction
                    EqualsGreaterThanToken
                    ParenthesizedExpression
                      BinaryExpression
                        CallExpression
                          PropertyAccessExpression
                            Identifier: 'cancellationToken'
                            Identifier: 'throwIfCancellationRequested'
                        CommaToken
                        TrueKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                ObjectBindingPattern
                  BindingElement
                    Identifier: ' visitedTypes'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' symbolWalker'
                    Identifier: 'walkType'
                  Identifier: 'type'
          ForOfStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' visitedType'
            Identifier: ' visitedTypes'
            Block
              IfStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: 'visitedType'
                    Identifier: 'isTypeParameter'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                allTypeParameterUsages'
                        Identifier: 'set'
                      CallExpression
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: 'visitedType'
                            Identifier: 'id'
                          Identifier: 'toString'
                      Identifier: ' visitedType'
      FunctionDeclaration
        Identifier: ' collectUsages'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' valueUsage'
          PropertyAccessExpression
            Identifier: ' Usage'
            Identifier: 'Read'
        Block
          IfStatement
            Identifier: 'inGenericContext'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' type'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' checker'
                        Identifier: 'getTypeAtLocation'
                      Identifier: 'node'
              ExpressionStatement
                CallExpression
                  Identifier: '
            recordTypeParameterUsages'
                  Identifier: 'type'
          IfStatement
            BinaryExpression
              CallExpression
                Identifier: 'isDeclaration'
                Identifier: 'node'
              AmpersandAmpersandToken
              PropertyAccessExpression
                Identifier: ' node'
                Identifier: 'symbol'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            visibleDeclarationsInExtractedRange'
                    Identifier: 'push'
                  Identifier: 'node'
          IfStatement
            CallExpression
              Identifier: 'isAssignmentExpression'
              Identifier: 'node'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            // use 'write' as default usage for values
            collectUsages'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'left'
                  PropertyAccessExpression
                    Identifier: ' Usage'
                    Identifier: 'Write'
              ExpressionStatement
                CallExpression
                  Identifier: '
            collectUsages'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'right'
            IfStatement
              CallExpression
                Identifier: 'isUnaryExpressionWithWrite'
                Identifier: 'node'
              Block
                ExpressionStatement
                  CallExpression
                    Identifier: '
            collectUsages'
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'operand'
                    PropertyAccessExpression
                      Identifier: ' Usage'
                      Identifier: 'Write'
              IfStatement
                BinaryExpression
                  CallExpression
                    Identifier: 'isPropertyAccessExpression'
                    Identifier: 'node'
                  BarBarToken
                  CallExpression
                    Identifier: ' isElementAccessExpression'
                    Identifier: 'node'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
            // use 'write' as default usage for values
            forEachChild'
                      Identifier: 'node'
                      Identifier: ' collectUsages'
                IfStatement
                  CallExpression
                    Identifier: 'isIdentifier'
                    Identifier: 'node'
                  Block
                    IfStatement
                      PrefixUnaryExpression
                        PropertyAccessExpression
                          Identifier: 'node'
                          Identifier: 'parent'
                      Block
                        ReturnStatement
                    IfStatement
                      BinaryExpression
                        CallExpression
                          Identifier: 'isQualifiedName'
                          PropertyAccessExpression
                            Identifier: 'node'
                            Identifier: 'parent'
                        AmpersandAmpersandToken
                        BinaryExpression
                          Identifier: ' node'
                          ExclamationEqualsEqualsToken
                          PropertyAccessExpression
                            PropertyAccessExpression
                              Identifier: ' node'
                              Identifier: 'parent'
                            Identifier: 'left'
                      Block
                        ReturnStatement
                    IfStatement
                      BinaryExpression
                        CallExpression
                          Identifier: 'isPropertyAccessExpression'
                          PropertyAccessExpression
                            Identifier: 'node'
                            Identifier: 'parent'
                        AmpersandAmpersandToken
                        BinaryExpression
                          Identifier: ' node'
                          ExclamationEqualsEqualsToken
                          PropertyAccessExpression
                            PropertyAccessExpression
                              Identifier: ' node'
                              Identifier: 'parent'
                            Identifier: 'expression'
                      Block
                        ReturnStatement
                    ExpressionStatement
                      CallExpression
                        Identifier: '
            recordUsage'
                        Identifier: 'node'
                        Identifier: ' valueUsage'
                        CallExpression
                          Identifier: ' /*isTypeNode*/ isPartOfTypeNode'
                          Identifier: 'node'
                  Block
                    ExpressionStatement
                      CallExpression
                        Identifier: '
            forEachChild'
                        Identifier: 'node'
                        Identifier: ' collectUsages'
      FunctionDeclaration
        Identifier: ' recordUsage'
        Parameter
          Identifier: 'n'
          TypeReference
            Identifier: ' Identifier'
        Parameter
          Identifier: ' usage'
          TypeReference
            Identifier: ' Usage'
        Parameter
          Identifier: ' isTypeNode'
          BooleanKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' symbolId'
                CallExpression
                  Identifier: ' recordUsagebySymbol'
                  Identifier: 'n'
                  Identifier: ' usage'
                  Identifier: ' isTypeNode'
          IfStatement
            Identifier: 'symbolId'
            Block
              ForStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' i'
                    NumericLiteral
                BinaryExpression
                  Identifier: ' i'
                  LessThanToken
                  PropertyAccessExpression
                    Identifier: ' scopes'
                    Identifier: 'length'
                PostfixUnaryExpression
                  Identifier: ' i'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' substitution'
                        CallExpression
                          PropertyAccessExpression
                            ElementAccessExpression
                              Identifier: ' substitutionsPerScope'
                              Identifier: 'i'
                            Identifier: 'get'
                          Identifier: 'symbolId'
                  IfStatement
                    Identifier: 'substitution'
                    Block
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            PropertyAccessExpression
                              ElementAccessExpression
                                Identifier: '
                    usagesPerScope'
                                Identifier: 'i'
                              Identifier: 'substitutions'
                            Identifier: 'set'
                          CallExpression
                            PropertyAccessExpression
                              CallExpression
                                Identifier: 'getNodeId'
                                Identifier: 'n'
                              Identifier: 'toString'
                          Identifier: ' substitution'
      FunctionDeclaration
        Identifier: ' recordUsagebySymbol'
        Parameter
          Identifier: 'identifier'
          TypeReference
            Identifier: ' Identifier'
        Parameter
          Identifier: ' usage'
          TypeReference
            Identifier: ' Usage'
        Parameter
          Identifier: ' isTypeName'
          BooleanKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' symbol'
                CallExpression
                  Identifier: ' getSymbolReferencedByIdentifier'
                  Identifier: 'identifier'
          IfStatement
            PrefixUnaryExpression
              Identifier: 'symbol'
            Block
              ReturnStatement
                Identifier: ' undefined'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' symbolId'
                CallExpression
                  PropertyAccessExpression
                    CallExpression
                      Identifier: ' getSymbolId'
                      Identifier: 'symbol'
                    Identifier: 'toString'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' lastUsage'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' seenUsages'
                    Identifier: 'get'
                  Identifier: 'symbolId'
          IfStatement
            BinaryExpression
              Identifier: 'lastUsage'
              AmpersandAmpersandToken
              BinaryExpression
                Identifier: ' lastUsage'
                GreaterThanEqualsToken
                Identifier: ' usage'
            Block
              ReturnStatement
                Identifier: ' symbolId'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '

        seenUsages'
                Identifier: 'set'
              Identifier: 'symbolId'
              Identifier: ' usage'
          IfStatement
            Identifier: 'lastUsage'
            Block
              ForOfStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' perScope'
                Identifier: ' usagesPerScope'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' prevEntry'
                        CallExpression
                          PropertyAccessExpression
                            PropertyAccessExpression
                              Identifier: ' perScope'
                              Identifier: 'usages'
                            Identifier: 'get'
                          PropertyAccessExpression
                            Identifier: 'identifier'
                            Identifier: 'text'
                  IfStatement
                    Identifier: 'prevEntry'
                    Block
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            PropertyAccessExpression
                              Identifier: '
                    perScope'
                              Identifier: 'usages'
                            Identifier: 'set'
                          PropertyAccessExpression
                            Identifier: 'identifier'
                            Identifier: 'text'
                          ObjectLiteralExpression
                            ShorthandPropertyAssignment
                              Identifier: ' usage'
                            ShorthandPropertyAssignment
                              Identifier: ' symbol'
                            PropertyAssignment
                              Identifier: ' node'
                              Identifier: ' identifier'
              ReturnStatement
                Identifier: ' symbolId'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' decls'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' symbol'
                    Identifier: 'getDeclarations'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' declInFile'
                BinaryExpression
                  Identifier: ' decls'
                  AmpersandAmpersandToken
                  CallExpression
                    Identifier: ' find'
                    Identifier: 'decls'
                    ArrowFunction
                      Parameter
                        Identifier: ' d'
                      EqualsGreaterThanToken
                      BinaryExpression
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' d'
                            Identifier: 'getSourceFile'
                        EqualsEqualsEqualsToken
                        Identifier: ' sourceFile'
          IfStatement
            PrefixUnaryExpression
              Identifier: 'declInFile'
            Block
              ReturnStatement
                Identifier: ' undefined'
          IfStatement
            CallExpression
              Identifier: 'rangeContainsStartEnd'
              Identifier: 'enclosingTextRange'
              CallExpression
                PropertyAccessExpression
                  Identifier: ' declInFile'
                  Identifier: 'getStart'
              PropertyAccessExpression
                Identifier: ' declInFile'
                Identifier: 'end'
            Block
              ReturnStatement
                Identifier: ' undefined'
          IfStatement
            BinaryExpression
              BinaryExpression
                PropertyAccessExpression
                  Identifier: 'targetRange'
                  Identifier: 'facts'
                AmpersandToken
                PropertyAccessExpression
                  Identifier: ' RangeFacts'
                  Identifier: 'IsGenerator'
              AmpersandAmpersandToken
              BinaryExpression
                Identifier: ' usage'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' Usage'
                  Identifier: 'Write'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' diag'
                    CallExpression
                      Identifier: ' createDiagnosticForNode'
                      Identifier: 'identifier'
                      PropertyAccessExpression
                        Identifier: ' Messages'
                        Identifier: 'cannotExtractRangeThatContainsWritesToReferencesLocatedOutsideOfTheTargetRangeInGenerators'
              ForOfStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' errors'
                Identifier: ' functionErrorsPerScope'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                errors'
                        Identifier: 'push'
                      Identifier: 'diag'
              ForOfStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' errors'
                Identifier: ' constantErrorsPerScope'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                errors'
                        Identifier: 'push'
                      Identifier: 'diag'
          ForStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' i'
                NumericLiteral
            BinaryExpression
              Identifier: ' i'
              LessThanToken
              PropertyAccessExpression
                Identifier: ' scopes'
                Identifier: 'length'
            PostfixUnaryExpression
              Identifier: ' i'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' scope'
                    ElementAccessExpression
                      Identifier: ' scopes'
                      Identifier: 'i'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' resolvedSymbol'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' checker'
                        Identifier: 'resolveName'
                      PropertyAccessExpression
                        Identifier: 'symbol'
                        Identifier: 'name'
                      Identifier: ' scope'
                      PropertyAccessExpression
                        Identifier: ' symbol'
                        Identifier: 'flags'
                      FalseKeyword
              IfStatement
                BinaryExpression
                  Identifier: 'resolvedSymbol'
                  EqualsEqualsEqualsToken
                  Identifier: ' symbol'
                Block
                  ContinueStatement
              IfStatement
                PrefixUnaryExpression
                  CallExpression
                    PropertyAccessExpression
                      ElementAccessExpression
                        Identifier: 'substitutionsPerScope'
                        Identifier: 'i'
                      Identifier: 'has'
                    Identifier: 'symbolId'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' substitution'
                        CallExpression
                          Identifier: ' tryReplaceWithQualifiedNameOrPropertyAccess'
                          BinaryExpression
                            PropertyAccessExpression
                              Identifier: 'symbol'
                              Identifier: 'exportSymbol'
                            BarBarToken
                            Identifier: ' symbol'
                          Identifier: ' scope'
                          Identifier: ' isTypeName'
                  IfStatement
                    Identifier: 'substitution'
                    Block
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            ElementAccessExpression
                              Identifier: '
                    substitutionsPerScope'
                              Identifier: 'i'
                            Identifier: 'set'
                          Identifier: 'symbolId'
                          Identifier: ' substitution'
                    IfStatement
                      Identifier: 'isTypeName'
                      Block
                        IfStatement
                          PrefixUnaryExpression
                            ParenthesizedExpression
                              BinaryExpression
                                PropertyAccessExpression
                                  Identifier: 'symbol'
                                  Identifier: 'flags'
                                AmpersandToken
                                PropertyAccessExpression
                                  Identifier: ' SymbolFlags'
                                  Identifier: 'TypeParameter'
                          Block
                            VariableStatement
                              VariableDeclarationList
                                VariableDeclaration
                                  Identifier: ' diag'
                                  CallExpression
                                    Identifier: ' createDiagnosticForNode'
                                    Identifier: 'identifier'
                                    PropertyAccessExpression
                                      Identifier: ' Messages'
                                      Identifier: 'typeWillNotBeVisibleInTheNewScope'
                            ExpressionStatement
                              CallExpression
                                PropertyAccessExpression
                                  ElementAccessExpression
                                    Identifier: '
                        functionErrorsPerScope'
                                    Identifier: 'i'
                                  Identifier: 'push'
                                Identifier: 'diag'
                            ExpressionStatement
                              CallExpression
                                PropertyAccessExpression
                                  ElementAccessExpression
                                    Identifier: '
                        constantErrorsPerScope'
                                    Identifier: 'i'
                                  Identifier: 'push'
                                Identifier: 'diag'
                      Block
                        ExpressionStatement
                          CallExpression
                            PropertyAccessExpression
                              PropertyAccessExpression
                                ElementAccessExpression
                                  Identifier: '
                    usagesPerScope'
                                  Identifier: 'i'
                                Identifier: 'usages'
                              Identifier: 'set'
                            PropertyAccessExpression
                              Identifier: 'identifier'
                              Identifier: 'text'
                            ObjectLiteralExpression
                              ShorthandPropertyAssignment
                                Identifier: ' usage'
                              ShorthandPropertyAssignment
                                Identifier: ' symbol'
                              PropertyAssignment
                                Identifier: ' node'
                                Identifier: ' identifier'
          ReturnStatement
            Identifier: ' symbolId'
      FunctionDeclaration
        Identifier: ' checkForUsedDeclarations'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        Block
          IfStatement
            BinaryExpression
              BinaryExpression
                Identifier: 'node'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' targetRange'
                  Identifier: 'range'
              BarBarToken
              ParenthesizedExpression
                BinaryExpression
                  CallExpression
                    Identifier: 'isReadonlyArray'
                    PropertyAccessExpression
                      Identifier: 'targetRange'
                      Identifier: 'range'
                  AmpersandAmpersandToken
                  CallExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: ' targetRange'
                        Identifier: 'range'
                      Identifier: 'includes'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' Statement'
            Block
              ReturnStatement
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' sym'
                ConditionalExpression
                  CallExpression
                    Identifier: ' isIdentifier'
                    Identifier: 'node'
                  QuestionToken
                  CallExpression
                    Identifier: ' getSymbolReferencedByIdentifier'
                    Identifier: 'node'
                  ColonToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' checker'
                      Identifier: 'getSymbolAtLocation'
                    Identifier: 'node'
          IfStatement
            Identifier: 'sym'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' decl'
                    CallExpression
                      Identifier: ' find'
                      Identifier: 'visibleDeclarationsInExtractedRange'
                      ArrowFunction
                        Parameter
                          Identifier: ' d'
                        EqualsGreaterThanToken
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: ' d'
                            Identifier: 'symbol'
                          EqualsEqualsEqualsToken
                          Identifier: ' sym'
              IfStatement
                Identifier: 'decl'
                Block
                  IfStatement
                    CallExpression
                      Identifier: 'isVariableDeclaration'
                      Identifier: 'decl'
                    Block
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' idString'
                            CallExpression
                              PropertyAccessExpression
                                PropertyAccessExpression
                                  PropertyAccessExpression
                                    Identifier: ' decl'
                                    Identifier: 'symbol'
                                  Identifier: 'id'
                                Identifier: 'toString'
                      IfStatement
                        PrefixUnaryExpression
                          CallExpression
                            PropertyAccessExpression
                              Identifier: 'exposedVariableSymbolSet'
                              Identifier: 'has'
                            Identifier: 'idString'
                        Block
                          ExpressionStatement
                            CallExpression
                              PropertyAccessExpression
                                Identifier: '
                        exposedVariableDeclarations'
                                Identifier: 'push'
                              Identifier: 'decl'
                          ExpressionStatement
                            CallExpression
                              PropertyAccessExpression
                                Identifier: '
                        exposedVariableSymbolSet'
                                Identifier: 'set'
                              Identifier: 'idString'
                              TrueKeyword
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    // CONSIDER: this includes binding elements, which we could
                    // expose in the same way as variables.
                    firstExposedNonVariableDeclaration'
                          EqualsToken
                          BinaryExpression
                            Identifier: ' firstExposedNonVariableDeclaration'
                            BarBarToken
                            Identifier: ' decl'
          ExpressionStatement
            CallExpression
              Identifier: '

        forEachChild'
              Identifier: 'node'
              Identifier: ' checkForUsedDeclarations'
      FunctionDeclaration
        Identifier: ' getSymbolReferencedByIdentifier'
        Parameter
          Identifier: 'identifier'
          TypeReference
            Identifier: ' Identifier'
        Block
          ReturnStatement
            ConditionalExpression
              BinaryExpression
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: ' identifier'
                    Identifier: 'parent'
                  AmpersandAmpersandToken
                  CallExpression
                    Identifier: ' isShorthandPropertyAssignment'
                    PropertyAccessExpression
                      Identifier: 'identifier'
                      Identifier: 'parent'
                AmpersandAmpersandToken
                BinaryExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: ' identifier'
                      Identifier: 'parent'
                    Identifier: 'name'
                  EqualsEqualsEqualsToken
                  Identifier: ' identifier'
              QuestionToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' checker'
                  Identifier: 'getShorthandAssignmentValueSymbol'
                PropertyAccessExpression
                  Identifier: 'identifier'
                  Identifier: 'parent'
              ColonToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' checker'
                  Identifier: 'getSymbolAtLocation'
                Identifier: 'identifier'
      FunctionDeclaration
        Identifier: ' tryReplaceWithQualifiedNameOrPropertyAccess'
        Parameter
          Identifier: 'symbol'
          UnionType
            TypeReference
              Identifier: ' Symbol'
            UndefinedKeyword
        Parameter
          Identifier: ' scopeDecl'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' isTypeNode'
          BooleanKeyword
        UnionType
          TypeReference
            Identifier: ' PropertyAccessExpression'
          TypeReference
            Identifier: ' EntityName'
          UndefinedKeyword
        Block
          IfStatement
            PrefixUnaryExpression
              Identifier: 'symbol'
            Block
              ReturnStatement
                Identifier: ' undefined'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' decls'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' symbol'
                    Identifier: 'getDeclarations'
          IfStatement
            BinaryExpression
              Identifier: 'decls'
              AmpersandAmpersandToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' decls'
                  Identifier: 'some'
                ArrowFunction
                  Parameter
                    Identifier: 'd'
                  EqualsGreaterThanToken
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: ' d'
                      Identifier: 'parent'
                    EqualsEqualsEqualsToken
                    Identifier: ' scopeDecl'
            Block
              ReturnStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' factory'
                    Identifier: 'createIdentifier'
                  PropertyAccessExpression
                    Identifier: 'symbol'
                    Identifier: 'name'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' prefix'
                CallExpression
                  Identifier: ' tryReplaceWithQualifiedNameOrPropertyAccess'
                  PropertyAccessExpression
                    Identifier: 'symbol'
                    Identifier: 'parent'
                  Identifier: ' scopeDecl'
                  Identifier: ' isTypeNode'
          IfStatement
            BinaryExpression
              Identifier: 'prefix'
              EqualsEqualsEqualsToken
              Identifier: ' undefined'
            Block
              ReturnStatement
                Identifier: ' undefined'
          ReturnStatement
            ConditionalExpression
              Identifier: ' isTypeNode'
              QuestionToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' factory'
                  Identifier: 'createQualifiedName'
                AsExpression
                  Identifier: 'prefix'
                  TypeReference
                    Identifier: ' EntityName'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' factory'
                    Identifier: 'createIdentifier'
                  PropertyAccessExpression
                    Identifier: 'symbol'
                    Identifier: 'name'
              ColonToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' factory'
                  Identifier: 'createPropertyAccessExpression'
                AsExpression
                  Identifier: 'prefix'
                  TypeReference
                    Identifier: ' Expression'
                PropertyAccessExpression
                  Identifier: ' symbol'
                  Identifier: 'name'
  FunctionDeclaration
    Identifier: ' getExtractableParent'
    Parameter
      Identifier: 'node'
      UnionType
        TypeReference
          Identifier: ' Node'
        UndefinedKeyword
    UnionType
      TypeReference
        Identifier: ' Node'
      UndefinedKeyword
    Block
      ReturnStatement
        CallExpression
          Identifier: ' findAncestor'
          Identifier: 'node'
          ArrowFunction
            Parameter
              Identifier: ' node'
            EqualsGreaterThanToken
            BinaryExpression
              BinaryExpression
                PropertyAccessExpression
                  Identifier: ' node'
                  Identifier: 'parent'
                AmpersandAmpersandToken
                CallExpression
                  Identifier: ' isExtractableExpression'
                  Identifier: 'node'
              AmpersandAmpersandToken
              PrefixUnaryExpression
                CallExpression
                  Identifier: 'isBinaryExpression'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'parent'
  FunctionDeclaration
    Identifier: ' isExtractableExpression'
    Parameter
      Identifier: 'node'
      TypeReference
        Identifier: ' Node'
    BooleanKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            ObjectBindingPattern
              BindingElement
                Identifier: ' parent'
            Identifier: ' node'
      SwitchStatement
        PropertyAccessExpression
          Identifier: 'parent'
          Identifier: 'kind'
        CaseBlock
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'EnumMember'
            ReturnStatement
              FalseKeyword
      SwitchStatement
        PropertyAccessExpression
          Identifier: 'node'
          Identifier: 'kind'
        CaseBlock
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'StringLiteral'
            ReturnStatement
              BinaryExpression
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: ' parent'
                    Identifier: 'kind'
                  ExclamationEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'ImportDeclaration'
                AmpersandAmpersandToken
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: '
                parent'
                    Identifier: 'kind'
                  ExclamationEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'ImportSpecifier'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'SpreadElement'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ObjectBindingPattern'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'BindingElement'
            ReturnStatement
              FalseKeyword
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'Identifier'
            ReturnStatement
              BinaryExpression
                BinaryExpression
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: ' parent'
                      Identifier: 'kind'
                    ExclamationEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'BindingElement'
                  AmpersandAmpersandToken
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: '
                parent'
                      Identifier: 'kind'
                    ExclamationEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'ImportSpecifier'
                AmpersandAmpersandToken
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: '
                parent'
                    Identifier: 'kind'
                  ExclamationEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'ExportSpecifier'
      ReturnStatement
        TrueKeyword
  FunctionDeclaration
    Identifier: ' isInJSXContent'
    Parameter
      Identifier: 'node'
      TypeReference
        Identifier: ' Node'
    Block
      ReturnStatement
        BinaryExpression
          CallExpression
            Identifier: ' isStringLiteralJsxAttribute'
            Identifier: 'node'
          BarBarToken
          BinaryExpression
            ParenthesizedExpression
              BinaryExpression
                BinaryExpression
                  CallExpression
                    Identifier: 'isJsxElement'
                    Identifier: 'node'
                  BarBarToken
                  CallExpression
                    Identifier: ' isJsxSelfClosingElement'
                    Identifier: 'node'
                BarBarToken
                CallExpression
                  Identifier: ' isJsxFragment'
                  Identifier: 'node'
            AmpersandAmpersandToken
            ParenthesizedExpression
              BinaryExpression
                CallExpression
                  Identifier: 'isJsxElement'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'parent'
                BarBarToken
                CallExpression
                  Identifier: ' isJsxFragment'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'parent'
  FunctionDeclaration
    Identifier: ' isStringLiteralJsxAttribute'
    Parameter
      Identifier: 'node'
      TypeReference
        Identifier: ' Node'
    TypePredicate
      Identifier: ' node'
      TypeReference
        Identifier: ' StringLiteral'
    Block
      ReturnStatement
        BinaryExpression
          BinaryExpression
            CallExpression
              Identifier: ' isStringLiteral'
              Identifier: 'node'
            AmpersandAmpersandToken
            PropertyAccessExpression
              Identifier: ' node'
              Identifier: 'parent'
          AmpersandAmpersandToken
          CallExpression
            Identifier: ' isJsxAttribute'
            PropertyAccessExpression
              Identifier: 'node'
              Identifier: 'parent'
