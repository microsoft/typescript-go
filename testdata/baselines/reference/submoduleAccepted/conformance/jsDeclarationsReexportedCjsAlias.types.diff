--- old.jsDeclarationsReexportedCjsAlias.types
+++ new.jsDeclarationsReexportedCjsAlias.types
@@= skipped -4, +4 lines =@@
 >SomeClass : typeof SomeClass
 >SomeClass : any
 >Another : typeof SomeClass
->require('./lib') : typeof import("lib")
+>require('./lib') : { bar: (a: any) => any; SomeClass: typeof SomeClass; }
 >require : any
 >'./lib' : "./lib"
 
 module.exports = {
->module.exports = {    SomeClass,    Another} : typeof module.exports
->module.exports : typeof module.exports
->module : { exports: typeof module.exports; }
->exports : typeof module.exports
 >{    SomeClass,    Another} : { SomeClass: typeof SomeClass; Another: typeof SomeClass; }
 
     SomeClass,
@@= skipped -16, +12 lines =@@
 
     Another
 >Another : typeof SomeClass
+>Another : typeof SomeClass
 }
 === lib.js ===
 /**
  * @param {string} a
  */
 function bar(a) {
->bar : (a: string) => string
->a : string
+>bar : (a: any) => any
+>a : any
 
     return a + a;
->a + a : string
->a : string
->a : string
+>a + a : any
+>a : any
+>a : any
 }
 
 class SomeClass {
@@= skipped -27, +28 lines =@@
 }
 
 module.exports = {
->module.exports = {    bar,    SomeClass} : typeof module.exports
->module.exports : typeof module.exports
->module : { exports: typeof module.exports; }
->exports : typeof module.exports
->{    bar,    SomeClass} : { bar: (a: string) => string; SomeClass: typeof SomeClass; }
+>{    bar,    SomeClass} : { bar: (a: any) => any; SomeClass: typeof SomeClass; }
 
     bar,
->bar : (a: string) => string
+>bar : (a: any) => any
 
     SomeClass
 >SomeClass : typeof SomeClass
+>SomeClass : typeof SomeClass
 }
