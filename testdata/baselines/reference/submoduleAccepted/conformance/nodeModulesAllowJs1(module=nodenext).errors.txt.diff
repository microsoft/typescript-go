--- old.nodeModulesAllowJs1(module=nodenext).errors.txt
+++ new.nodeModulesAllowJs1(module=nodenext).errors.txt
@@= skipped -0, +0 lines =@@
-index.cjs(51,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.cjs(52,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.cjs(53,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.cjs(54,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.cjs(55,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.cjs(56,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.cjs(57,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.cjs(58,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.cjs(59,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.cjs(60,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.cjs(61,1): error TS8002: 'import ... =' can only be used in TypeScript files.
 index.cjs(75,21): error TS2307: Cannot find module './' or its corresponding type declarations.
 index.cjs(76,21): error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './index.mjs'?
 index.cjs(77,21): error TS2834: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Consider adding an extension to the import path.
@@= skipped -30, +19 lines =@@
 index.js(22,22): error TS2834: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Consider adding an extension to the import path.
 index.js(23,22): error TS2834: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Consider adding an extension to the import path.
 index.js(24,22): error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './subfolder2/another/index.mjs'?
-index.js(50,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.js(51,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.js(52,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.js(53,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.js(54,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.js(55,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.js(56,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.js(57,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.js(58,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.js(59,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.js(60,1): error TS8002: 'import ... =' can only be used in TypeScript files.
 index.js(74,21): error TS2307: Cannot find module './' or its corresponding type declarations.
 index.js(75,21): error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './index.mjs'?
 index.js(76,21): error TS2834: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Consider adding an extension to the import path.
@@= skipped -33, +22 lines =@@
 index.mjs(22,22): error TS2834: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Consider adding an extension to the import path.
 index.mjs(23,22): error TS2834: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Consider adding an extension to the import path.
 index.mjs(24,22): error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './subfolder2/another/index.mjs'?
-index.mjs(50,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.mjs(51,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.mjs(52,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.mjs(53,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.mjs(54,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.mjs(55,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.mjs(56,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.mjs(57,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.mjs(58,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.mjs(59,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.mjs(60,1): error TS8002: 'import ... =' can only be used in TypeScript files.
 index.mjs(74,21): error TS2307: Cannot find module './' or its corresponding type declarations.
 index.mjs(75,21): error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './index.mjs'?
 index.mjs(76,21): error TS2834: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Consider adding an extension to the import path.
@@= skipped -60, +49 lines =@@
     // esm format file
     const x = 1;
     export {x};
-==== index.js (33 errors) ====
+==== index.js (22 errors) ====
     import * as m1 from "./index.js";
     import * as m2 from "./index.mjs";
     import * as m3 from "./index.cjs";
@@= skipped -73, +73 lines =@@
     
     // These should _mostly_ work - `import = require` always desugars to require calls, which do have extension and index resolution (but can't load anything that resolves to esm!)
     import m24 = require("./");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m25 = require("./index");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m26 = require("./subfolder");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m27 = require("./subfolder/");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m28 = require("./subfolder/index");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m29 = require("./subfolder2");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m30 = require("./subfolder2/");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m31 = require("./subfolder2/index");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m32 = require("./subfolder2/another");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m33 = require("./subfolder2/another/");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m34 = require("./subfolder2/another/index");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     void m24;
     void m25;
     void m26;
@@= skipped -81, +59 lines =@@
     // esm format file
     const x = 1;
     export {x};
-==== index.cjs (22 errors) ====
+==== index.cjs (11 errors) ====
     // ESM-format imports below should issue errors
     import * as m1 from "./index.js";
     import * as m2 from "./index.mjs";
@@= skipped -52, +52 lines =@@
     
     // These should _mostly_ work - `import = require` always desugars to require calls, which do have extension and index resolution (but can't load anything that resolves to esm!)
     import m24 = require("./");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m25 = require("./index");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m26 = require("./subfolder");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m27 = require("./subfolder/");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m28 = require("./subfolder/index");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m29 = require("./subfolder2");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m30 = require("./subfolder2/");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m31 = require("./subfolder2/index");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m32 = require("./subfolder2/another");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m33 = require("./subfolder2/another/");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m34 = require("./subfolder2/another/index");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     void m24;
     void m25;
     void m26;
@@= skipped -81, +59 lines =@@
     // cjs format file
     const x = 1;
     export {x};
-==== index.mjs (33 errors) ====
+==== index.mjs (22 errors) ====
     import * as m1 from "./index.js";
     import * as m2 from "./index.mjs";
     import * as m3 from "./index.cjs";
@@= skipped -73, +73 lines =@@
     
     // These should _mostly_ work - `import = require` always desugars to require calls, which do have extension and index resolution (but can't load anything that resolves to esm!)
     import m24 = require("./");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m25 = require("./index");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m26 = require("./subfolder");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m27 = require("./subfolder/");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m28 = require("./subfolder/index");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m29 = require("./subfolder2");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m30 = require("./subfolder2/");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m31 = require("./subfolder2/index");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m32 = require("./subfolder2/another");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m33 = require("./subfolder2/another/");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m34 = require("./subfolder2/another/index");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     void m24;
     void m25;
     void m26;