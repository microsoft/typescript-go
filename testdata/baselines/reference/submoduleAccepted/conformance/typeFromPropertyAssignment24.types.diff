--- old.typeFromPropertyAssignment24.types
+++ new.typeFromPropertyAssignment24.types
@@= skipped -3, +3 lines =@@
 // note that usage is first in the compilation
 Outer.Inner.Message = function() {
 >Outer.Inner.Message = function() {} : () => void
->Outer.Inner.Message : () => void
+>Outer.Inner.Message : any
 >Outer.Inner : typeof Inner
->Outer : typeof Outer
+>Outer : { Inner: typeof Inner; }
 >Inner : typeof Inner
->Message : () => void
+>Message : any
 >function() {} : () => void
 
 };
@@= skipped -13, +13 lines =@@
 >y : Inner
 >new Outer.Inner() : Inner
 >Outer.Inner : typeof Inner
->Outer : typeof Outer
+>Outer : { Inner: typeof Inner; }
 >Inner : typeof Inner
 
 y.name
@@= skipped -13, +13 lines =@@
 >x : Inner
 
 x.name
->x.name : () => string
+>x.name : any
 >x : Inner
->name : () => string
+>name : any
 
 === def.js ===
 var Outer = {}
->Outer : typeof Outer
->{} : {}
+>Outer : { Inner: typeof Inner; }
+>{} : { Inner: typeof Inner; }
 
 Outer.Inner = class {
 >Outer.Inner = class {  name() {    return 'hi'  }} : typeof Inner
 >Outer.Inner : typeof Inner
->Outer : typeof Outer
+>Outer : { Inner: typeof Inner; }
 >Inner : typeof Inner
 >class {  name() {    return 'hi'  }} : typeof Inner
 
