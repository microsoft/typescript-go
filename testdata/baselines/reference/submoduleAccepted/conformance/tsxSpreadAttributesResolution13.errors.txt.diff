--- old.tsxSpreadAttributesResolution13.errors.txt
+++ new.tsxSpreadAttributesResolution13.errors.txt
@@= skipped -0, +-1 lines =@@
-<no content>
@@= skipped --1, +1 lines =@@
+error TS2318: Cannot find global type 'Array'.
+error TS2318: Cannot find global type 'Boolean'.
+error TS2318: Cannot find global type 'Function'.
+error TS2318: Cannot find global type 'IArguments'.
+error TS2318: Cannot find global type 'Number'.
+error TS2318: Cannot find global type 'Object'.
+error TS2318: Cannot find global type 'RegExp'.
+error TS2318: Cannot find global type 'String'.
+file.tsx(1,24): error TS2307: Cannot find module 'react' or its corresponding type declarations.
+
+
+!!! error TS2318: Cannot find global type 'Array'.
+!!! error TS2318: Cannot find global type 'Boolean'.
+!!! error TS2318: Cannot find global type 'Function'.
+!!! error TS2318: Cannot find global type 'IArguments'.
+!!! error TS2318: Cannot find global type 'Number'.
+!!! error TS2318: Cannot find global type 'Object'.
+!!! error TS2318: Cannot find global type 'RegExp'.
+!!! error TS2318: Cannot find global type 'String'.
+==== file.tsx (1 errors) ====
+    import React = require('react');
+                           ~~~~~~~
+!!! error TS2307: Cannot find module 'react' or its corresponding type declarations.
+    
+    interface ComponentProps {
+        property1: string;
+        property2: number;
+    }
+    
+    export default function Component(props: ComponentProps) {
+        let condition1: boolean;
+        if (condition1) {
+            return (
+                <ChildComponent {...props} />
+            );
+        }
+        else {
+            return (<ChildComponent {...props} property1="NewString" />);
+        }
+    }
+    
+    interface AnotherComponentProps {
+        property1: string;
+    }
+    
+    function ChildComponent({ property1 }: AnotherComponentProps) {
+        return (
+            <span>{property1}</span>
+        );
+    }
