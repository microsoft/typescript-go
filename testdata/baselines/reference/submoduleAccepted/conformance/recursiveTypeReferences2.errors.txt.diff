--- old.recursiveTypeReferences2.errors.txt
+++ new.recursiveTypeReferences2.errors.txt
@@= skipped -0, +0 lines =@@
-bug39372.js(25,7): error TS2322: Type '{}' is not assignable to type 'XMLObject<{ foo: string; }>'.
-  Type '{}' is missing the following properties from type '{ $A: { foo?: XMLObject<string>[]; }; $O: { foo?: { $$?: Record<string, string>; } & { $: string; }; }; $$?: Record<string, string>; }': $A, $O
-
-
-==== bug39372.js (1 errors) ====
+bug39372.js(1,36): error TS2456: Type alias 'JsonArray' circularly references itself.
+bug39372.js(3,88): error TS2456: Type alias 'Json' circularly references itself.
+bug39372.js(25,7): error TS2322: Type '{}' is not assignable to type '{ $A: { foo?: ({ $A: string; $O: string; $$?: Record<string, string>; } & string)[]; }; $O: { foo?: { $$?: Record<string, string>; } & { $: string; }; }; $$?: Record<string, string>; } & { foo?: string; }'.
+  Type '{}' is missing the following properties from type '{ $A: { foo?: ({ $A: string; $O: string; $$?: Record<string, string>; } & string)[]; }; $O: { foo?: { $$?: Record<string, string>; } & { $: string; }; }; $$?: Record<string, string>; }': $A, $O
+
+
+==== bug39372.js (3 errors) ====
     /** @typedef {ReadonlyArray<Json>} JsonArray */
+                                       ~~~~~~~~~
+!!! error TS2456: Type alias 'JsonArray' circularly references itself.
     /** @typedef {{ readonly [key: string]: Json }} JsonRecord */
     /** @typedef {boolean | number | string | null | JsonRecord | JsonArray | readonly []} Json */
+                                                                                           ~~~~
+!!! error TS2456: Type alias 'Json' circularly references itself.
     
     /**
      * @template T
@@= skipped -28, +34 lines =@@
     /** @type {XMLObject<{foo:string}>} */
     const p = {};
           ~
-!!! error TS2322: Type '{}' is not assignable to type 'XMLObject<{ foo: string; }>'.
-!!! error TS2322:   Type '{}' is missing the following properties from type '{ $A: { foo?: XMLObject<string>[]; }; $O: { foo?: { $$?: Record<string, string>; } & { $: string; }; }; $$?: Record<string, string>; }': $A, $O
+!!! error TS2322: Type '{}' is not assignable to type '{ $A: { foo?: ({ $A: string; $O: string; $$?: Record<string, string>; } & string)[]; }; $O: { foo?: { $$?: Record<string, string>; } & { $: string; }; }; $$?: Record<string, string>; } & { foo?: string; }'.
+!!! error TS2322:   Type '{}' is missing the following properties from type '{ $A: { foo?: ({ $A: string; $O: string; $$?: Record<string, string>; } & string)[]; }; $O: { foo?: { $$?: Record<string, string>; } & { $: string; }; }; $$?: Record<string, string>; }': $A, $O
     