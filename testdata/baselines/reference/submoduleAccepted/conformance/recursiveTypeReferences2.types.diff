--- old.recursiveTypeReferences2.types
+++ new.recursiveTypeReferences2.types
@@= skipped -1, +1 lines =@@
 
 === bug39372.js ===
 /** @typedef {ReadonlyArray<Json>} JsonArray */
+>JsonArray : any
+
 /** @typedef {{ readonly [key: string]: Json }} JsonRecord */
+>JsonRecord : any
+>key : string
+
 /** @typedef {boolean | number | string | null | JsonRecord | JsonArray | readonly []} Json */
+>Json : any
 
 /**
  * @template T
@@= skipped -21, +27 lines =@@
       : XMLObject<T[K]>
   )
 }} XMLObject<T> */
+>XMLObject : any
 
 /** @type {XMLObject<{foo:string}>} */
 const p = {};
->p : XMLObject<{ foo: string; }>
+>p : { $A: { [x: string]: (??? & { [x: string]: string | ??? & ???; })[]; }; $O: { [x: string]: { $$?: Record<string, string>; } & ({ $: string; } | ??? & { [x: string]: string | ??? & ???; }); }; $$?: Record<string, string>; } & { [x: string]: string | { $A: { [x: string]: (??? & ???)[]; }; $O: { [x: string]: { $$?: Record<string, string>; } & (??? | ??? & ???); }; $$?: Record<string, string>; } & ???; }
 >{} : {}
 
