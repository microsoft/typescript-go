--- old.typedefCrossModule.types
+++ new.typedefCrossModule.types
@@= skipped -7, +7 lines =@@
 === mod1.js ===
 /// <reference path="./commonjs.d.ts"/>
 /** @typedef {{ type: "a", x: 1 }} A */
+>A : any
+>type : "a"
+>x : 1
+
 /** @typedef {{ type: "b", y: 1 }} B */
+>B : any
+>type : "b"
+>y : 1
+
 /** @typedef {A | B} Both */
+>Both : any
+
 module.exports = C
->module.exports = C : typeof C
->module.exports : typeof C
->module : { exports: typeof C; }
->exports : typeof C
->C : typeof C
+>module.exports = C : () => void
+>module.exports : any
+>module : { exports: any; }
+>exports : any
+>C : () => void
 
 function C() {
->C : typeof C
+>C : () => void
 
     this.p = 1
 >this.p = 1 : 1
 >this.p : any
->this : this
+>this : any
 >p : any
 >1 : 1
 }
@@= skipped -23, +33 lines =@@
 === mod2.js ===
 /// <reference path="./commonjs.d.ts"/>
 /** @typedef {{ type: "a", x: 1 }} A */
+>A : A
+>type : "a"
+>x : 1
+
 /** @typedef {{ type: "b", y: 1 }} B */
+>B : B
+>type : "b"
+>y : 1
+
 /** @typedef {A | B} Both */
+>Both : Both
 
 export function C() {
->C : typeof C
+>C : () => void
 
     this.p = 1
 >this.p = 1 : 1
 >this.p : any
->this : this
+>this : any
 >p : any
 >1 : 1
 }
@@= skipped -17, +26 lines =@@
 === mod3.js ===
 /// <reference path="./commonjs.d.ts"/>
 /** @typedef {{ type: "a", x: 1 }} A */
+>A : any
+>type : "a"
+>x : 1
+
 /** @typedef {{ type: "b", y: 1 }} B */
+>B : any
+>type : "b"
+>y : 1
+
 /** @typedef {A | B} Both */
+>Both : any
 
 exports.C = function() {
->exports.C = function() {    this.p = 1} : typeof C
->exports.C : typeof C
->exports : typeof import("mod3")
->C : typeof C
->function() {    this.p = 1} : typeof C
+>exports.C = function() {    this.p = 1} : () => void
+>exports.C : any
+>exports : any
+>C : any
+>function() {    this.p = 1} : () => void
 
     this.p = 1
 >this.p = 1 : 1
 >this.p : any
->this : this
+>this : any
 >p : any
 >1 : 1
 }
@@= skipped -21, +30 lines =@@
 === use.js ===
 /** @type {import('./mod1').Both} */
 var both1 = { type: 'a', x: 1 };
->both1 : import("mod1").Both
+>both1 : { type: "a"; x: 1; } | { type: "b"; y: 1; }
 >{ type: 'a', x: 1 } : { type: "a"; x: 1; }
 >type : "a"
 >'a' : "a"
@@= skipped -9, +9 lines =@@
 
 /** @type {import('./mod2').Both} */
 var both2 = both1;
->both2 : import("mod2").Both
->both1 : import("mod1").A
+>both2 : Both
+>both1 : { type: "a"; x: 1; }
 
 /** @type {import('./mod3').Both} */
 var both3 = both2;
->both3 : import("mod3").Both
->both2 : import("mod2").A
+>both3 : { type: "a"; x: 1; } | { type: "b"; y: 1; }
+>both2 : A
 
 
 
