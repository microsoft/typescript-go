--- old.nodeModulesAllowJs1(module=node16).errors.txt
+++ new.nodeModulesAllowJs1(module=node16).errors.txt
@@= skipped -8, +8 lines =@@
 index.cjs(23,22): error TS1479: The current file is a CommonJS module whose imports will produce 'require' calls; however, the referenced file is an ECMAScript module and cannot be imported with 'require'. Consider writing a dynamic 'import("./subfolder2/another")' call instead.
 index.cjs(24,22): error TS1479: The current file is a CommonJS module whose imports will produce 'require' calls; however, the referenced file is an ECMAScript module and cannot be imported with 'require'. Consider writing a dynamic 'import("./subfolder2/another/")' call instead.
 index.cjs(25,22): error TS1479: The current file is a CommonJS module whose imports will produce 'require' calls; however, the referenced file is an ECMAScript module and cannot be imported with 'require'. Consider writing a dynamic 'import("./subfolder2/another/index")' call instead.
-index.cjs(51,1): error TS8002: 'import ... =' can only be used in TypeScript files.
 index.cjs(51,22): error TS1471: Module './' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead.
-index.cjs(52,1): error TS8002: 'import ... =' can only be used in TypeScript files.
 index.cjs(52,22): error TS1471: Module './index' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead.
-index.cjs(53,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.cjs(54,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.cjs(55,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.cjs(56,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.cjs(57,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.cjs(58,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.cjs(59,1): error TS8002: 'import ... =' can only be used in TypeScript files.
 index.cjs(59,22): error TS1471: Module './subfolder2/another' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead.
-index.cjs(60,1): error TS8002: 'import ... =' can only be used in TypeScript files.
 index.cjs(60,22): error TS1471: Module './subfolder2/another/' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead.
-index.cjs(61,1): error TS8002: 'import ... =' can only be used in TypeScript files.
 index.cjs(61,22): error TS1471: Module './subfolder2/another/index' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead.
 index.cjs(75,21): error TS2307: Cannot find module './' or its corresponding type declarations.
 index.cjs(76,21): error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './index.mjs'?
@@= skipped -38, +27 lines =@@
 index.js(22,22): error TS2834: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Consider adding an extension to the import path.
 index.js(23,22): error TS2834: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Consider adding an extension to the import path.
 index.js(24,22): error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './subfolder2/another/index.mjs'?
-index.js(50,1): error TS8002: 'import ... =' can only be used in TypeScript files.
 index.js(50,22): error TS1471: Module './' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead.
-index.js(51,1): error TS8002: 'import ... =' can only be used in TypeScript files.
 index.js(51,22): error TS1471: Module './index' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead.
-index.js(52,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.js(53,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.js(54,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.js(55,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.js(56,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.js(57,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.js(58,1): error TS8002: 'import ... =' can only be used in TypeScript files.
 index.js(58,22): error TS1471: Module './subfolder2/another' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead.
-index.js(59,1): error TS8002: 'import ... =' can only be used in TypeScript files.
 index.js(59,22): error TS1471: Module './subfolder2/another/' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead.
-index.js(60,1): error TS8002: 'import ... =' can only be used in TypeScript files.
 index.js(60,22): error TS1471: Module './subfolder2/another/index' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead.
 index.js(74,21): error TS2307: Cannot find module './' or its corresponding type declarations.
 index.js(75,21): error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './index.mjs'?
@@= skipped -38, +27 lines =@@
 index.mjs(22,22): error TS2834: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Consider adding an extension to the import path.
 index.mjs(23,22): error TS2834: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Consider adding an extension to the import path.
 index.mjs(24,22): error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './subfolder2/another/index.mjs'?
-index.mjs(50,1): error TS8002: 'import ... =' can only be used in TypeScript files.
 index.mjs(50,22): error TS1471: Module './' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead.
-index.mjs(51,1): error TS8002: 'import ... =' can only be used in TypeScript files.
 index.mjs(51,22): error TS1471: Module './index' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead.
-index.mjs(52,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.mjs(53,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.mjs(54,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.mjs(55,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.mjs(56,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.mjs(57,1): error TS8002: 'import ... =' can only be used in TypeScript files.
-index.mjs(58,1): error TS8002: 'import ... =' can only be used in TypeScript files.
 index.mjs(58,22): error TS1471: Module './subfolder2/another' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead.
-index.mjs(59,1): error TS8002: 'import ... =' can only be used in TypeScript files.
 index.mjs(59,22): error TS1471: Module './subfolder2/another/' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead.
-index.mjs(60,1): error TS8002: 'import ... =' can only be used in TypeScript files.
 index.mjs(60,22): error TS1471: Module './subfolder2/another/index' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead.
 index.mjs(74,21): error TS2307: Cannot find module './' or its corresponding type declarations.
 index.mjs(75,21): error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './index.mjs'?
@@= skipped -65, +54 lines =@@
     // esm format file
     const x = 1;
     export {x};
-==== index.js (38 errors) ====
+==== index.js (27 errors) ====
     import * as m1 from "./index.js";
     import * as m2 from "./index.mjs";
     import * as m3 from "./index.cjs";
@@= skipped -73, +73 lines =@@
     
     // These should _mostly_ work - `import = require` always desugars to require calls, which do have extension and index resolution (but can't load anything that resolves to esm!)
     import m24 = require("./");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
                          ~~~~
 !!! error TS1471: Module './' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead.
     import m25 = require("./index");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
                          ~~~~~~~~~
 !!! error TS1471: Module './index' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead.
     import m26 = require("./subfolder");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m27 = require("./subfolder/");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m28 = require("./subfolder/index");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m29 = require("./subfolder2");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m30 = require("./subfolder2/");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m31 = require("./subfolder2/index");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m32 = require("./subfolder2/another");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
                          ~~~~~~~~~~~~~~~~~~~~~~
 !!! error TS1471: Module './subfolder2/another' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead.
     import m33 = require("./subfolder2/another/");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
                          ~~~~~~~~~~~~~~~~~~~~~~~
 !!! error TS1471: Module './subfolder2/another/' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead.
     import m34 = require("./subfolder2/another/index");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 !!! error TS1471: Module './subfolder2/another/index' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead.
     void m24;
@@= skipped -91, +69 lines =@@
     // esm format file
     const x = 1;
     export {x};
-==== index.cjs (38 errors) ====
+==== index.cjs (27 errors) ====
     // ESM-format imports below should issue errors
     import * as m1 from "./index.js";
                         ~~~~~~~~~~~~
@@= skipped -74, +74 lines =@@
     
     // These should _mostly_ work - `import = require` always desugars to require calls, which do have extension and index resolution (but can't load anything that resolves to esm!)
     import m24 = require("./");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
                          ~~~~
 !!! error TS1471: Module './' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead.
     import m25 = require("./index");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
                          ~~~~~~~~~
 !!! error TS1471: Module './index' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead.
     import m26 = require("./subfolder");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m27 = require("./subfolder/");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m28 = require("./subfolder/index");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m29 = require("./subfolder2");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m30 = require("./subfolder2/");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m31 = require("./subfolder2/index");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m32 = require("./subfolder2/another");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
                          ~~~~~~~~~~~~~~~~~~~~~~
 !!! error TS1471: Module './subfolder2/another' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead.
     import m33 = require("./subfolder2/another/");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
                          ~~~~~~~~~~~~~~~~~~~~~~~
 !!! error TS1471: Module './subfolder2/another/' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead.
     import m34 = require("./subfolder2/another/index");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 !!! error TS1471: Module './subfolder2/another/index' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead.
     void m24;
@@= skipped -91, +69 lines =@@
     // cjs format file
     const x = 1;
     export {x};
-==== index.mjs (38 errors) ====
+==== index.mjs (27 errors) ====
     import * as m1 from "./index.js";
     import * as m2 from "./index.mjs";
     import * as m3 from "./index.cjs";
@@= skipped -73, +73 lines =@@
     
     // These should _mostly_ work - `import = require` always desugars to require calls, which do have extension and index resolution (but can't load anything that resolves to esm!)
     import m24 = require("./");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
                          ~~~~
 !!! error TS1471: Module './' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead.
     import m25 = require("./index");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
                          ~~~~~~~~~
 !!! error TS1471: Module './index' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead.
     import m26 = require("./subfolder");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m27 = require("./subfolder/");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m28 = require("./subfolder/index");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m29 = require("./subfolder2");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m30 = require("./subfolder2/");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m31 = require("./subfolder2/index");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
     import m32 = require("./subfolder2/another");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
                          ~~~~~~~~~~~~~~~~~~~~~~
 !!! error TS1471: Module './subfolder2/another' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead.
     import m33 = require("./subfolder2/another/");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
                          ~~~~~~~~~~~~~~~~~~~~~~~
 !!! error TS1471: Module './subfolder2/another/' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead.
     import m34 = require("./subfolder2/another/index");
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS8002: 'import ... =' can only be used in TypeScript files.
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 !!! error TS1471: Module './subfolder2/another/index' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead.
     void m24;