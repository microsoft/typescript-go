--- old.bundlerImportTsExtensions(allowimportingtsextensions=true,noemit=true).errors.txt
+++ new.bundlerImportTsExtensions(allowimportingtsextensions=true,noemit=true).errors.txt
@@= skipped -0, +0 lines =@@
-error TS6054: File '/project/e.txt' has an unsupported extension. The only supported extensions are '.ts', '.tsx', '.d.ts', '.js', '.jsx', '.cts', '.d.cts', '.cjs', '.mts', '.d.mts', '.mjs'.
-  The file is in the program because:
-    Root file specified for compilation
 /project/main.ts(8,16): error TS2846: A declaration file cannot be imported without 'import type'. Did you mean to import an implementation file './b.ts' instead?
-/project/main.ts(12,16): error TS6142: Module './c.tsx' was resolved to '/project/c.tsx', but '--jsx' is not set.
 /project/types.d.ts(2,16): error TS2846: A declaration file cannot be imported without 'import type'. Did you mean to import an implementation file './a.ts' instead?


-!!! error TS6054: File '/project/e.txt' has an unsupported extension. The only supported extensions are '.ts', '.tsx', '.d.ts', '.js', '.jsx', '.cts', '.d.cts', '.cjs', '.mts', '.d.mts', '.mjs'.
-!!! error TS6054:   The file is in the program because:
-!!! error TS6054:     Root file specified for compilation
 ==== /project/a.ts (0 errors) ====
     export {};
     
@@= skipped -44, +37 lines =@@
 ==== /project/e.txt.ts (0 errors) ====
     export {};
     
-==== /project/main.ts (2 errors) ====
+==== /project/main.ts (1 errors) ====
     import {} from "./a";
     import {} from "./a.js";
     import {} from "./a.ts";
@@= skipped -15, +15 lines =@@
     
     import {} from "./c.ts";
     import {} from "./c.tsx";
-                   ~~~~~~~~~
-!!! error TS6142: Module './c.tsx' was resolved to '/project/c.tsx', but '--jsx' is not set.
     
     import {} from "./d";
     import {} from "./d/index";