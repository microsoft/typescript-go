--- old.nodeModulesAllowJsConditionalPackageExports(module=nodenext).types
+++ new.nodeModulesAllowJsConditionalPackageExports(module=nodenext).types
@@= skipped -2, +2 lines =@@
 === index.js ===
 // esm format file
 import * as cjs from "package/cjs";
->cjs : typeof cjs
+>cjs : any

 import * as mjs from "package/mjs";
->mjs : typeof mjs
+>mjs : any

 import * as type from "package";
->type : typeof type
+>type : any

 cjs;
->cjs : typeof cjs
+>cjs : any

 mjs;
->mjs : typeof mjs
+>mjs : any

 type;
->type : typeof type
+>type : any

 import * as cjsi from "inner/a";
 >cjsi : typeof cjsi
@@= skipped -52, +52 lines =@@
 === index.mjs ===
 // esm format file
 import * as cjs from "package/cjs";
->cjs : typeof cjs
+>cjs : any

 import * as mjs from "package/mjs";
->mjs : typeof mjs
+>mjs : any

 import * as type from "package";
->type : typeof type
+>type : any

 cjs;
->cjs : typeof cjs
+>cjs : any

 mjs;
->mjs : typeof mjs
+>mjs : any

 type;
->type : typeof type
+>type : any

 import * as cjsi from "inner/a";
 >cjsi : typeof cjsi
@@= skipped -52, +52 lines =@@
 === index.cjs ===
 // cjs format file
 import * as cjs from "package/cjs";
->cjs : typeof cjs
+>cjs : any

 import * as mjs from "package/mjs";
->mjs : typeof mjs
+>mjs : any

 import * as type from "package";
->type : typeof type
+>type : any

 cjs;
->cjs : typeof cjs
+>cjs : any

 mjs;
->mjs : typeof mjs
+>mjs : any

 type;
->type : typeof type
+>type : any

 import * as cjsi from "inner/a";
 >cjsi : typeof cjsi
@@= skipped -24, +24 lines =@@
 >mjsi : typeof cjsi

 import * as typei from "inner";
->typei : typeof cjsi.type
+>typei : typeof typei

 import * as ts from "inner/types";
 >ts : typeof cjsi
@@= skipped -17, +17 lines =@@

 typei.implicitCjsSource;
 >typei.implicitCjsSource : true
->typei : typeof cjsi.type
+>typei : typeof typei
 >implicitCjsSource : true

 ts.cjsSource;
@@= skipped -17, +17 lines =@@
 >mjs : typeof mjs

 import * as type from "inner";
->type : typeof mjs.type
+>type : typeof type

 import * as ts from "inner/types";
 >ts : typeof mjs
@@= skipped -12, +12 lines =@@
 >mjs : typeof mjs

 export { type };
->type : typeof mjs.type
+>type : typeof type

 export { ts };
 >ts : typeof mjs
@@= skipped -48, +48 lines =@@
 >mjs : typeof cjs

 import * as type from "inner";
->type : typeof cjs.type
+>type : any

 import * as ts from "inner/types";
 >ts : typeof cjs
@@= skipped -12, +12 lines =@@
 >mjs : typeof cjs

 export { type };
->type : typeof cjs.type
+>type : any

 export { ts };
 >ts : typeof cjs