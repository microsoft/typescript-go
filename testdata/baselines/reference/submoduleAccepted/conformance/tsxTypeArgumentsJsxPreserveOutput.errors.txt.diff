--- old.tsxTypeArgumentsJsxPreserveOutput.errors.txt
+++ new.tsxTypeArgumentsJsxPreserveOutput.errors.txt
@@= skipped -0, +-1 lines =@@
-<no content>
@@= skipped --1, +1 lines =@@
+error TS2318: Cannot find global type 'Array'.
+error TS2318: Cannot find global type 'Boolean'.
+error TS2318: Cannot find global type 'Function'.
+error TS2318: Cannot find global type 'IArguments'.
+error TS2318: Cannot find global type 'Number'.
+error TS2318: Cannot find global type 'Object'.
+error TS2318: Cannot find global type 'RegExp'.
+error TS2318: Cannot find global type 'String'.
+foo.tsx(1,24): error TS2307: Cannot find module 'react' or its corresponding type declarations.
+
+
+!!! error TS2318: Cannot find global type 'Array'.
+!!! error TS2318: Cannot find global type 'Boolean'.
+!!! error TS2318: Cannot find global type 'Function'.
+!!! error TS2318: Cannot find global type 'IArguments'.
+!!! error TS2318: Cannot find global type 'Number'.
+!!! error TS2318: Cannot find global type 'Object'.
+!!! error TS2318: Cannot find global type 'RegExp'.
+!!! error TS2318: Cannot find global type 'String'.
+==== foo.tsx (1 errors) ====
+    import React = require('react');
+                           ~~~~~~~
+!!! error TS2307: Cannot find module 'react' or its corresponding type declarations.
+    
+    type TypeProps = { foo?: boolean; };
+    interface InterfaceProps { foo?: boolean; }
+    
+    function Foo<T>() {
+        return null;
+    }
+    
+    <>
+        {/* JsxSelfClosingElement */}
+        <Foo<unknown> />
+        <Foo<string> />
+        <Foo<boolean> />
+        <Foo<object> />
+        <Foo<null> />
+        <Foo<any> />
+        <Foo<never> />
+        <Foo<undefined> />
+        <Foo<TypeProps> />
+        <Foo<InterfaceProps> />
+    
+        {/* JsxOpeningElement */}
+        <Foo<unknown>></Foo>
+        <Foo<string>></Foo>
+        <Foo<boolean>></Foo>
+        <Foo<object>></Foo>
+        <Foo<null>></Foo>
+        <Foo<any>></Foo>
+        <Foo<never>></Foo>
+        <Foo<undefined>></Foo>
+        <Foo<TypeProps>></Foo>
+        <Foo<InterfaceProps>></Foo>
+    </>
+    
