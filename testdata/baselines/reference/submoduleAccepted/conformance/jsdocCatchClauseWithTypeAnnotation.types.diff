--- old.jsdocCatchClauseWithTypeAnnotation.types
+++ new.jsdocCatchClauseWithTypeAnnotation.types
@@= skipped -2, +2 lines =@@
 === foo.js ===
 /**
  * @typedef {any} Any
+>Any : any
+
  */
 
 /**
  * @typedef {unknown} Unknown
+>Unknown : unknown
+
  */
 
 function fn() {
@@= skipped -19, +23 lines =@@
 >err : any
 
     try { } catch (/** @type {unknown} */ err) { }                   // should be OK
->err : unknown
+>err : any
 
     try { } catch (/** @type {Unknown} */ err) { }                   // should be OK
->err : unknown
+>err : any
 
     try { } catch (err) { err.foo; }                                 // should be OK
 >err : any
@@= skipped -24, +24 lines =@@
 >foo : any
 
     try { } catch (/** @type {unknown} */ err) { console.log(err); } // should be OK
->err : unknown
+>err : any
 >console.log(err) : void
 >console.log : (...data: any[]) => void
 >console : Console
 >log : (...data: any[]) => void
->err : unknown
+>err : any
 
     try { } catch (/** @type {Unknown} */ err) { console.log(err); } // should be OK
->err : unknown
+>err : any
 >console.log(err) : void
 >console.log : (...data: any[]) => void
 >console : Console
 >log : (...data: any[]) => void
->err : unknown
+>err : any
 
     try { } catch (/** @type {unknown} */ err) { err.foo; }          // error in the body
->err : unknown
+>err : any
 >err.foo : any
->err : unknown
+>err : any
 >foo : any
 
     try { } catch (/** @type {Unknown} */ err) { err.foo; }          // error in the body
->err : unknown
+>err : any
 >err.foo : any
->err : unknown
+>err : any
 >foo : any
 
     try { } catch (/** @type {Error} */ err) { }                     // error in the type
