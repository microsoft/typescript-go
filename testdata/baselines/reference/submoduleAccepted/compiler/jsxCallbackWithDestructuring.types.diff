--- old.jsxCallbackWithDestructuring.types
+++ new.jsxCallbackWithDestructuring.types
@@= skipped -2, +2 lines =@@
 === jsxCallbackWithDestructuring.tsx ===
 // minimal component
 interface Component<P = {}, S = {}> { }
+>Component : Component<P, S>
+>P : P
+>S : S
+
 declare class Component<P, S> {
 >Component : Component<P, S>
+>P : P
+>S : S
 
     constructor(props: P, context?: any);
 >props : P
@@= skipped -11, +17 lines =@@
 >render : () => {}
 
     props: Readonly<{ children?: {} }> & Readonly<P>;
->props : Readonly<{ children?: {}; }> & Readonly<P>
+>props : Readonly<{ children?: {} | undefined; }> & Readonly<P>
 >children : {} | undefined
 }
 
@@= skipped -8, +8 lines =@@
 >global : any
 
     namespace JSX {
+>JSX : any
+
         interface Element  { }
+>Element : Element
+
         interface ElementClass  {
+>ElementClass : ElementClass
+
             render(): {};
 >render : () => {}
         }
         interface ElementAttributesProperty { props: {}; }
+>ElementAttributesProperty : ElementAttributesProperty
 >props : {}
 
         interface ElementChildrenAttribute { children: {}; }
+>ElementChildrenAttribute : ElementChildrenAttribute
 >children : {}
 
         interface IntrinsicAttributes  { }
+>IntrinsicAttributes : IntrinsicAttributes
+
         interface IntrinsicClassAttributes<T> { }
+>IntrinsicClassAttributes : IntrinsicClassAttributes<T>
+>T : T
     }
 }
 
 export interface RouteProps {
+>RouteProps : RouteProps
+
     children?: (props: { x: number }) => any;
->children : ((props: { x: number; }) => any) | undefined
+>children : (props: { x: number; }) => any | undefined
 >props : { x: number; }
 >x : number
 }
 export class MyComponent<T extends RouteProps = RouteProps> extends Component<T> { }
 >MyComponent : MyComponent<T>
+>T : T
 >Component : Component<T, {}>
 
 <MyComponent children={({ x }) => {}}/>
-><MyComponent children={({ x }) => {}}/> : JSX.Element
+><MyComponent children={({ x }) => {}}/> : any
 >MyComponent : typeof MyComponent
->children : ({ x }: { x: number; }) => void
->({ x }) => {} : ({ x }: { x: number; }) => void
->x : number
+>children : any
+>({ x }) => {} : (__0: { x: any; }) => void
+>x : any
 
