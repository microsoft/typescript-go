--- old.expandoFunctionContextualTypesJs.types
+++ new.expandoFunctionContextualTypesJs.types
@@= skipped -10, +10 lines =@@
   * @type {StatelessComponent<MyComponentProps>}
   */
 const MyComponent = () => /* @type {any} */(null);
->MyComponent : StatelessComponent<MyComponentProps>
->() => /* @type {any} */(null) : { (): any; defaultProps: Partial<MyComponentProps>; }
+>MyComponent : { (): any; defaultProps?: Partial<{ color: "blue" | "red"; }>; }
+>() => /* @type {any} */(null) : { (): any; defaultProps: { color: "red"; }; }
 >(null) : null

 MyComponent.defaultProps = {
 >MyComponent.defaultProps = {    color: "red"} : { color: "red"; }
->MyComponent.defaultProps : Partial<MyComponentProps>
->MyComponent : StatelessComponent<MyComponentProps>
->defaultProps : Partial<MyComponentProps>
+>MyComponent.defaultProps : Partial<{ color: "blue" | "red"; }>
+>MyComponent : { (): any; defaultProps?: Partial<{ color: "blue" | "red"; }>; }
+>defaultProps : Partial<{ color: "blue" | "red"; }>
 >{    color: "red"} : { color: "red"; }

     color: "red"
@@= skipped -18, +18 lines =@@
 };

 const MyComponent2 = () => null;
->MyComponent2 : { (): any; defaultProps: MyComponentProps; }
->() => null : { (): any; defaultProps: MyComponentProps; }
+>MyComponent2 : { (): any; defaultProps: { color: "blue" | "red"; }; }
+>() => null : { (): any; defaultProps: { color: "blue" | "red"; }; }

 /**
  * @type {MyComponentProps}
  */
 MyComponent2.defaultProps = {
 >MyComponent2.defaultProps = {    color: "red"} : { color: "red"; }
->MyComponent2.defaultProps : MyComponentProps
->MyComponent2 : { (): any; defaultProps: MyComponentProps; }
->defaultProps : MyComponentProps
+>MyComponent2.defaultProps : { color: "blue" | "red"; }
+>MyComponent2 : { (): any; defaultProps: { color: "blue" | "red"; }; }
+>defaultProps : { color: "blue" | "red"; }
 >{    color: "red"} : { color: "red"; }

     color: "red"
@@= skipped -22, +22 lines =@@
   * @type {StatelessComponent<MyComponentProps>}
  */
 const check = MyComponent2;
->check : StatelessComponent<MyComponentProps>
->MyComponent2 : { (): any; defaultProps: MyComponentProps; }
+>check : { (): any; defaultProps?: Partial<{ color: "blue" | "red"; }>; }
+>MyComponent2 : { (): any; defaultProps: { color: "blue" | "red"; }; }

 /**
  * 
  * @param {{ props: MyComponentProps }} p 
  */
 function expectLiteral(p) {}
->expectLiteral : (p: { props: MyComponentProps; }) => void
->p : { props: MyComponentProps; }
+>expectLiteral : (p: { props: { color: "blue" | "red"; }; }) => void
+>p : { props: { color: "blue" | "red"; }; }

 function foo() {
->foo : typeof foo
+>foo : () => void

     /**
      * @type {MyComponentProps}
      */
     this.props = { color: "red" };
 >this.props = { color: "red" } : { color: "red"; }
->this.props : MyComponentProps
->this : this
->props : MyComponentProps
+>this.props : any
+>this : any
+>props : any
 >{ color: "red" } : { color: "red"; }
 >color : "red"
 >"red" : "red"

     expectLiteral(this);
 >expectLiteral(this) : void
->expectLiteral : (p: { props: MyComponentProps; }) => void
->this : this
+>expectLiteral : (p: { props: { color: "blue" | "red"; }; }) => void
+>this : any
 }

 /**
  * @type {MyComponentProps}
  */
 module.exports = {
->module.exports = {    color: "red"} : MyComponentProps
->module.exports : MyComponentProps
->module : { exports: MyComponentProps; }
->exports : MyComponentProps
+>module.exports = {    color: "red"} : { color: "red"; }
+>module.exports : { color: "blue" | "red"; }
+>module : { "export=": { color: "blue" | "red"; }; }
+>exports : { color: "blue" | "red"; }
 >{    color: "red"} : { color: "red"; }

     color: "red"
@@= skipped -49, +49 lines =@@

 expectLiteral({ props: module.exports });
 >expectLiteral({ props: module.exports }) : void
->expectLiteral : (p: { props: MyComponentProps; }) => void
->{ props: module.exports } : { props: MyComponentProps; }
->props : MyComponentProps
->module.exports : MyComponentProps
->module : { exports: MyComponentProps; }
->exports : MyComponentProps
+>expectLiteral : (p: { props: { color: "blue" | "red"; }; }) => void
+>{ props: module.exports } : { props: { color: "blue" | "red"; }; }
+>props : { color: "blue" | "red"; }
+>module.exports : { color: "blue" | "red"; }
+>module : { "export=": { color: "blue" | "red"; }; }
+>exports : { color: "blue" | "red"; }
