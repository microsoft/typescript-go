SourceFile
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' myTypes'
        ObjectLiteralExpression
  ExpressionStatement
    BinaryExpression
      PropertyAccessExpression
        Identifier: '

/** @typedef {string|RegExp|Array<string|RegExp>} myTypes.typeA */

/**
 * @typedef myTypes.typeB
 * @property {myTypes.typeA}    prop1 - Prop 1.
 * @property {string}           prop2 - Prop 2.
 */

/** @typedef {myTypes.typeB|Function} myTypes.typeC */

exports'
        Identifier: 'myTypes'
      EqualsToken
      Identifier: ' myTypes'
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        ObjectBindingPattern
          BindingElement
            Identifier: 'myTypes'
        CallExpression
          Identifier: ' require'
          StringLiteral
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' testFnTypes'
        ObjectLiteralExpression
  FunctionDeclaration
    Identifier: ' testFn'
    Parameter
      Identifier: 'input'
    Block
      IfStatement
        BinaryExpression
          TypeOfExpression
            Identifier: ' input'
          EqualsEqualsEqualsToken
          StringLiteral
        Block
          ReturnStatement
            BinaryExpression
              NumericLiteral
              AsteriskToken
              Identifier: ' input'
        Block
          ReturnStatement
            NullKeyword
  ExpressionStatement
    BinaryExpression
      PropertyAccessExpression
        Identifier: '

module'
        Identifier: 'exports'
      EqualsToken
      ObjectLiteralExpression
        ShorthandPropertyAssignment
          Identifier: 'testFn'
        ShorthandPropertyAssignment
          Identifier: ' testFnTypes'
