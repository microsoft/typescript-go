SourceFile
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' TestStatus'
        ImportSpecifier
          Identifier: ' Metadata'
        ImportSpecifier
          Identifier: ' PlaywrightTestOptions'
        ImportSpecifier
          Identifier: ' PlaywrightWorkerOptions'
        ImportSpecifier
          Identifier: ' ReporterDescription'
        ImportSpecifier
          Identifier: ' FullConfig'
        ImportSpecifier
          Identifier: ' FullProject'
    StringLiteral
  ExportDeclaration
    NamedExports
      ExportSpecifier
        Identifier: ' FullConfig'
      ExportSpecifier
        Identifier: ' FullProject'
      ExportSpecifier
        Identifier: ' TestStatus'
    StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' FullResult'
    PropertySignature
      Identifier: '
  /**
   * Status:
   *   - 'passed' - everything went as expected.
   *   - 'failed' - any test has failed.
   *   - 'timedout' - the global time has been reached.
   *   - 'interrupted' - interrupted by the user.
   */
  status'
      UnionType
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
    PropertySignature
      Identifier: '

  /**
   * Test start wall time.
   */
  startTime'
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '

  /**
   * Test duration in milliseconds.
   */
  duration'
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Reporter'
    MethodSignature
      Identifier: '
  /**
   * Called after all tests have been run, or testing has been interrupted. Note that this method may return a [Promise]
   * and Playwright Test will await it. Reporter is allowed to override the status and hence affect the exit code of the
   * test runner.
   * @param result Result of the full test run, `status` can be one of:
   * - `'passed'` - Everything went as expected.
   * - `'failed'` - Any test has failed.
   * - `'timedout'` - The
   * [testConfig.globalTimeout](https://playwright.dev/docs/api/class-testconfig#test-config-global-timeout) has
   * been reached.
   * - `'interrupted'` - Interrupted by the user.
   */
  onEnd'
      QuestionToken
      Parameter
        Identifier: 'result'
        TypeReference
          Identifier: ' FullResult'
      UnionType
        TypeReference
          Identifier: ' Promise'
          UnionType
            TypeLiteral
              PropertySignature
                Identifier: ' status'
                QuestionToken
                IndexedAccessType
                  TypeReference
                    Identifier: ' FullResult'
                  LiteralType
                    StringLiteral
            UndefinedKeyword
            VoidKeyword
        VoidKeyword
    MethodSignature
      Identifier: '
  /**
   * Called once before running tests. All tests have been already discovered and put into a hierarchy of {@link
   * Suite}s.
   * @param config Resolved configuration.
   * @param suite The root suite that contains all projects, files and test cases.
   */
  onBegin'
      QuestionToken
      Parameter
        Identifier: 'config'
        TypeReference
          Identifier: ' FullConfig'
      Parameter
        Identifier: ' suite'
        TypeReference
          Identifier: ' Suite'
      VoidKeyword
    MethodSignature
      Identifier: '

  /**
   * Called on some global error, for example unhandled exception in the worker process.
   * @param error The error.
   */
  onError'
      QuestionToken
      Parameter
        Identifier: 'error'
        TypeReference
          Identifier: ' TestError'
      VoidKeyword
    MethodSignature
      Identifier: '

  /**
   * Called immediately before test runner exists. At this point all the reporters have received the
   * [reporter.onEnd(result)](https://playwright.dev/docs/api/class-reporter#reporter-on-end) signal, so all the reports
   * should be build. You can run the code that uploads the reports in this hook.
   */
  onExit'
      QuestionToken
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '

  /**
   * Called when something has been written to the standard error in the worker process.
   * @param chunk Output chunk.
   * @param test Test that was running. Note that output may happen when no test is running, in which case this will be [void].
   * @param result Result of the test run, this object gets populated while the test runs.
   */
  onStdErr'
      QuestionToken
      Parameter
        Identifier: 'chunk'
        UnionType
          StringKeyword
          TypeReference
            Identifier: 'Buffer'
      Parameter
        Identifier: ' test'
        UnionType
          VoidKeyword
          TypeReference
            Identifier: 'TestCase'
      Parameter
        Identifier: ' result'
        UnionType
          VoidKeyword
          TypeReference
            Identifier: 'TestResult'
      VoidKeyword
    MethodSignature
      Identifier: '

  /**
   * Called when something has been written to the standard output in the worker process.
   * @param chunk Output chunk.
   * @param test Test that was running. Note that output may happen when no test is running, in which case this will be [void].
   * @param result Result of the test run, this object gets populated while the test runs.
   */
  onStdOut'
      QuestionToken
      Parameter
        Identifier: 'chunk'
        UnionType
          StringKeyword
          TypeReference
            Identifier: 'Buffer'
      Parameter
        Identifier: ' test'
        UnionType
          VoidKeyword
          TypeReference
            Identifier: 'TestCase'
      Parameter
        Identifier: ' result'
        UnionType
          VoidKeyword
          TypeReference
            Identifier: 'TestResult'
      VoidKeyword
    MethodSignature
      Identifier: '

  /**
   * Called when a test step started in the worker process.
   * @param test Test that the step belongs to.
   * @param result Result of the test run, this object gets populated while the test runs.
   * @param step Test step instance that has started.
   */
  onStepBegin'
      QuestionToken
      Parameter
        Identifier: 'test'
        TypeReference
          Identifier: ' TestCase'
      Parameter
        Identifier: ' result'
        TypeReference
          Identifier: ' TestResult'
      Parameter
        Identifier: ' step'
        TypeReference
          Identifier: ' TestStep'
      VoidKeyword
    MethodSignature
      Identifier: '

  /**
   * Called when a test step finished in the worker process.
   * @param test Test that the step belongs to.
   * @param result Result of the test run.
   * @param step Test step instance that has finished.
   */
  onStepEnd'
      QuestionToken
      Parameter
        Identifier: 'test'
        TypeReference
          Identifier: ' TestCase'
      Parameter
        Identifier: ' result'
        TypeReference
          Identifier: ' TestResult'
      Parameter
        Identifier: ' step'
        TypeReference
          Identifier: ' TestStep'
      VoidKeyword
    MethodSignature
      Identifier: '

  /**
   * Called after a test has been started in the worker process.
   * @param test Test that has been started.
   * @param result Result of the test run, this object gets populated while the test runs.
   */
  onTestBegin'
      QuestionToken
      Parameter
        Identifier: 'test'
        TypeReference
          Identifier: ' TestCase'
      Parameter
        Identifier: ' result'
        TypeReference
          Identifier: ' TestResult'
      VoidKeyword
    MethodSignature
      Identifier: '

  /**
   * Called after a test has been finished in the worker process.
   * @param test Test that has been finished.
   * @param result Result of the test run.
   */
  onTestEnd'
      QuestionToken
      Parameter
        Identifier: 'test'
        TypeReference
          Identifier: ' TestCase'
      Parameter
        Identifier: ' result'
        TypeReference
          Identifier: ' TestResult'
      VoidKeyword
    MethodSignature
      Identifier: '

  /**
   * Whether this reporter uses stdio for reporting. When it does not, Playwright Test could add some output to enhance
   * user experience. If your reporter does not print to the terminal, it is strongly recommended to return `false`.
   */
  printsToStdio'
      QuestionToken
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' JSONReport'
    PropertySignature
      Identifier: '
  config'
      IntersectionType
        TypeReference
          Identifier: ' Omit'
          TypeReference
            Identifier: 'FullConfig'
          LiteralType
            StringLiteral
        TypeLiteral
          PropertySignature
            Identifier: '
    projects'
            ArrayType
              TypeLiteral
                PropertySignature
                  Identifier: '
      outputDir'
                  StringKeyword
                PropertySignature
                  Identifier: '
      repeatEach'
                  NumberKeyword
                PropertySignature
                  Identifier: '
      retries'
                  NumberKeyword
                PropertySignature
                  Identifier: '
      metadata'
                  TypeReference
                    Identifier: ' Metadata'
                PropertySignature
                  Identifier: '
      id'
                  StringKeyword
                PropertySignature
                  Identifier: '
      name'
                  StringKeyword
                PropertySignature
                  Identifier: '
      testDir'
                  StringKeyword
                PropertySignature
                  Identifier: '
      testIgnore'
                  ArrayType
                    StringKeyword
                PropertySignature
                  Identifier: '
      testMatch'
                  ArrayType
                    StringKeyword
                PropertySignature
                  Identifier: '
      timeout'
                  NumberKeyword
    PropertySignature
      Identifier: '
  suites'
      ArrayType
        TypeReference
          Identifier: ' JSONReportSuite'
    PropertySignature
      Identifier: '
  errors'
      ArrayType
        TypeReference
          Identifier: ' TestError'
    PropertySignature
      Identifier: '
  stats'
      TypeLiteral
        PropertySignature
          Identifier: '
    startTime'
          StringKeyword
        PropertySignature
          Identifier: ' // Date in ISO 8601 format.
    duration'
          NumberKeyword
        PropertySignature
          Identifier: ' // In milliseconds;
    expected'
          NumberKeyword
        PropertySignature
          Identifier: '
    unexpected'
          NumberKeyword
        PropertySignature
          Identifier: '
    flaky'
          NumberKeyword
        PropertySignature
          Identifier: '
    skipped'
          NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' JSONReportSuite'
    PropertySignature
      Identifier: '
  title'
      StringKeyword
    PropertySignature
      Identifier: '
  file'
      StringKeyword
    PropertySignature
      Identifier: '
  column'
      NumberKeyword
    PropertySignature
      Identifier: '
  line'
      NumberKeyword
    PropertySignature
      Identifier: '
  specs'
      ArrayType
        TypeReference
          Identifier: ' JSONReportSpec'
    PropertySignature
      Identifier: '
  suites'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' JSONReportSuite'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' JSONReportSpec'
    PropertySignature
      Identifier: '
  tags'
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
  title'
      StringKeyword
    PropertySignature
      Identifier: '
  ok'
      BooleanKeyword
    PropertySignature
      Identifier: '
  tests'
      ArrayType
        TypeReference
          Identifier: ' JSONReportTest'
    PropertySignature
      Identifier: '
  id'
      StringKeyword
    PropertySignature
      Identifier: '
  file'
      StringKeyword
    PropertySignature
      Identifier: '
  line'
      NumberKeyword
    PropertySignature
      Identifier: '
  column'
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' JSONReportTest'
    PropertySignature
      Identifier: '
  timeout'
      NumberKeyword
    PropertySignature
      Identifier: '
  annotations'
      ArrayType
        TypeLiteral
          PropertySignature
            Identifier: ' type'
            StringKeyword
          PropertySignature
            Identifier: ' description'
            QuestionToken
            StringKeyword
    PropertySignature
      Identifier: '
  expectedStatus'
      TypeReference
        Identifier: ' TestStatus'
    PropertySignature
      Identifier: '
  projectName'
      StringKeyword
    PropertySignature
      Identifier: '
  projectId'
      StringKeyword
    PropertySignature
      Identifier: '
  results'
      ArrayType
        TypeReference
          Identifier: ' JSONReportTestResult'
    PropertySignature
      Identifier: '
  status'
      UnionType
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' JSONReportError'
    PropertySignature
      Identifier: '
  message'
      StringKeyword
    PropertySignature
      Identifier: '
  location'
      QuestionToken
      TypeReference
        Identifier: ' Location'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' JSONReportTestResult'
    PropertySignature
      Identifier: '
  workerIndex'
      NumberKeyword
    PropertySignature
      Identifier: '
  status'
      UnionType
        TypeReference
          Identifier: ' TestStatus'
        UndefinedKeyword
    PropertySignature
      Identifier: '
  duration'
      NumberKeyword
    PropertySignature
      Identifier: '
  error'
      UnionType
        TypeReference
          Identifier: ' TestError'
        UndefinedKeyword
    PropertySignature
      Identifier: '
  errors'
      ArrayType
        TypeReference
          Identifier: ' JSONReportError'
    PropertySignature
      Identifier: '
  stdout'
      ArrayType
        TypeReference
          Identifier: ' JSONReportSTDIOEntry'
    PropertySignature
      Identifier: '
  stderr'
      ArrayType
        TypeReference
          Identifier: ' JSONReportSTDIOEntry'
    PropertySignature
      Identifier: '
  retry'
      NumberKeyword
    PropertySignature
      Identifier: '
  steps'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' JSONReportTestStep'
    PropertySignature
      Identifier: '
  startTime'
      StringKeyword
    PropertySignature
      Identifier: ' // Date in ISO 8601 format.
  attachments'
      ArrayType
        TypeLiteral
          PropertySignature
            Identifier: '
    name'
            StringKeyword
          PropertySignature
            Identifier: '
    path'
            QuestionToken
            StringKeyword
          PropertySignature
            Identifier: '
    body'
            QuestionToken
            StringKeyword
          PropertySignature
            Identifier: '
    contentType'
            StringKeyword
    PropertySignature
      Identifier: '
  errorLocation'
      QuestionToken
      TypeReference
        Identifier: ' Location'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' JSONReportTestStep'
    PropertySignature
      Identifier: '
  title'
      StringKeyword
    PropertySignature
      Identifier: '
  duration'
      NumberKeyword
    PropertySignature
      Identifier: '
  error'
      UnionType
        TypeReference
          Identifier: ' TestError'
        UndefinedKeyword
    PropertySignature
      Identifier: '
  steps'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' JSONReportTestStep'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' JSONReportSTDIOEntry'
    UnionType
      TypeLiteral
        PropertySignature
          Identifier: ' text'
          StringKeyword
      TypeLiteral
        PropertySignature
          Identifier: ' buffer'
          StringKeyword
  ExportDeclaration
    NamedExports
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Location'
    PropertySignature
      Identifier: '
  /**
   * Column number in the source file.
   */
  column'
      NumberKeyword
    PropertySignature
      Identifier: '

  /**
   * Path to the source file.
   */
  file'
      StringKeyword
    PropertySignature
      Identifier: '

  /**
   * Line number in the source file.
   */
  line'
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Suite'
    MethodSignature
      Identifier: '
  /**
   * Returns the list of all test cases in this suite and its descendants, as opposite to
   * [suite.tests](https://playwright.dev/docs/api/class-suite#suite-tests).
   */
  allTests'
      TypeReference
        Identifier: ' Array'
        TypeReference
          Identifier: 'TestCase'
    MethodSignature
      Identifier: '

  /**
   * Test cases and suites defined directly in this suite. The elements are returned in their declaration order. You can
   * differentiate between various entry types by using
   * [testCase.type](https://playwright.dev/docs/api/class-testcase#test-case-type) and
   * [suite.type](https://playwright.dev/docs/api/class-suite#suite-type).
   */
  entries'
      TypeReference
        Identifier: ' Array'
        UnionType
          TypeReference
            Identifier: 'TestCase'
          TypeReference
            Identifier: 'Suite'
    MethodSignature
      Identifier: '

  /**
   * Configuration of the project this suite belongs to, or [void] for the root suite.
   */
  project'
      UnionType
        TypeReference
          Identifier: ' FullProject'
        UndefinedKeyword
    MethodSignature
      Identifier: '

  /**
   * Returns a list of titles from the root down to this suite.
   */
  titlePath'
      TypeReference
        Identifier: ' Array'
        StringKeyword
    PropertySignature
      Identifier: '

  /**
   * Location in the source where the suite is defined. Missing for root and project suites.
   */
  location'
      QuestionToken
      TypeReference
        Identifier: ' Location'
    PropertySignature
      Identifier: '

  /**
   * Parent suite, missing for the root suite.
   */
  parent'
      QuestionToken
      TypeReference
        Identifier: ' Suite'
    PropertySignature
      Identifier: '

  /**
   * Child suites. See {@link Suite} for the hierarchy of suites.
   */
  suites'
      TypeReference
        Identifier: ' Array'
        TypeReference
          Identifier: 'Suite'
    PropertySignature
      Identifier: '

  /**
   * Test cases in the suite. Note that only test cases defined directly in this suite are in the list. Any test cases
   * defined in nested
   * [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) groups are
   * listed in the child [suite.suites](https://playwright.dev/docs/api/class-suite#suite-suites).
   */
  tests'
      TypeReference
        Identifier: ' Array'
        TypeReference
          Identifier: 'TestCase'
    PropertySignature
      Identifier: '

  /**
   * Suite title.
   * - Empty for root suite.
   * - Project name for project suite.
   * - File path for file suite.
   * - Title passed to
   *   [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for a
   *   group suite.
   */
  title'
      StringKeyword
    PropertySignature
      Identifier: '

  /**
   * Returns the type of the suite. The Suites form the following hierarchy: `root` -> `project` -> `file` -> `describe`
   * -> ...`describe` -> `test`.
   */
  type'
      UnionType
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TestCase'
    MethodSignature
      Identifier: '
  /**
   * Whether the test is considered running fine. Non-ok tests fail the test run with non-zero exit code.
   */
  ok'
      BooleanKeyword
    MethodSignature
      Identifier: '

  /**
   * Testing outcome for this test. Note that outcome is not the same as
   * [testResult.status](https://playwright.dev/docs/api/class-testresult#test-result-status):
   * - Test that is expected to fail and actually fails is `'expected'`.
   * - Test that passes on a second retry is `'flaky'`.
   */
  outcome'
      UnionType
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
    MethodSignature
      Identifier: '

  /**
   * Returns a list of titles from the root down to this test.
   */
  titlePath'
      TypeReference
        Identifier: ' Array'
        StringKeyword
    PropertySignature
      Identifier: '

  /**
   * The list of annotations applicable to the current test. Includes:
   * - annotations defined on the test or suite via
   *   [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) and
   *   [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe);
   * - annotations implicitly added by methods
   *   [test.skip([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-skip),
   *   [test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)
   *   and
   *   [test.fail([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fail);
   * - annotations appended to
   *   [testInfo.annotations](https://playwright.dev/docs/api/class-testinfo#test-info-annotations) during the test
   *   execution.
   *
   * Annotations are available during test execution through
   * [testInfo.annotations](https://playwright.dev/docs/api/class-testinfo#test-info-annotations).
   *
   * Learn more about [test annotations](https://playwright.dev/docs/test-annotations).
   */
  annotations'
      TypeReference
        Identifier: ' Array'
        TypeLiteral
          PropertySignature
            Identifier: '
    /**
     * Annotation type, for example `'skip'` or `'fail'`.
     */
    type'
            StringKeyword
          PropertySignature
            Identifier: '

    /**
     * Optional description.
     */
    description'
            QuestionToken
            StringKeyword
    PropertySignature
      Identifier: '

  /**
   * Expected test status.
   * - Tests marked as
   *   [test.skip([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-skip)
   *   or
   *   [test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)
   *   are expected to be `'skipped'`.
   * - Tests marked as
   *   [test.fail([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fail)
   *   are expected to be `'failed'`.
   * - Other tests are expected to be `'passed'`.
   *
   * See also [testResult.status](https://playwright.dev/docs/api/class-testresult#test-result-status) for the actual
   * status.
   */
  expectedStatus'
      UnionType
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
    PropertySignature
      Identifier: '

  /**
   * A test ID that is computed based on the test file name, test title and project name. The ID is unique within
   * Playwright session.
   */
  id'
      StringKeyword
    PropertySignature
      Identifier: '

  /**
   * Location in the source where the test is defined.
   */
  location'
      TypeReference
        Identifier: ' Location'
    PropertySignature
      Identifier: '

  /**
   * Suite this test case belongs to.
   */
  parent'
      TypeReference
        Identifier: ' Suite'
    PropertySignature
      Identifier: '

  /**
   * Contains the repeat index when running in "repeat each" mode. This mode is enabled by passing `--repeat-each` to
   * the [command line](https://playwright.dev/docs/test-cli).
   */
  repeatEachIndex'
      NumberKeyword
    PropertySignature
      Identifier: '

  /**
   * Results for each run of this test.
   */
  results'
      TypeReference
        Identifier: ' Array'
        TypeReference
          Identifier: 'TestResult'
    PropertySignature
      Identifier: '

  /**
   * The maximum number of retries given to this test in the configuration.
   *
   * Learn more about [test retries](https://playwright.dev/docs/test-retries#retries).
   */
  retries'
      NumberKeyword
    PropertySignature
      Identifier: '

  /**
   * The list of tags defined on the test or suite via
   * [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) or
   * [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe), as well as
   * `@`-tokens extracted from test and suite titles.
   *
   * Learn more about [test tags](https://playwright.dev/docs/test-annotations#tag-tests).
   */
  tags'
      TypeReference
        Identifier: ' Array'
        StringKeyword
    PropertySignature
      Identifier: '

  /**
   * The timeout given to the test. Affected by
   * [testConfig.timeout](https://playwright.dev/docs/api/class-testconfig#test-config-timeout),
   * [testProject.timeout](https://playwright.dev/docs/api/class-testproject#test-project-timeout),
   * [test.setTimeout(timeout)](https://playwright.dev/docs/api/class-test#test-set-timeout),
   * [test.slow([condition, callback, description])](https://playwright.dev/docs/api/class-test#test-slow) and
   * [testInfo.setTimeout(timeout)](https://playwright.dev/docs/api/class-testinfo#test-info-set-timeout).
   */
  timeout'
      NumberKeyword
    PropertySignature
      Identifier: '

  /**
   * Test title as passed to the
   * [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) call.
   */
  title'
      StringKeyword
    PropertySignature
      Identifier: '

  /**
   * Returns "test". Useful for detecting test cases in
   * [suite.entries()](https://playwright.dev/docs/api/class-suite#suite-entries).
   */
  type'
      LiteralType
        StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TestError'
    PropertySignature
      Identifier: '
  /**
   * Error location in the source code.
   */
  location'
      QuestionToken
      TypeReference
        Identifier: ' Location'
    PropertySignature
      Identifier: '

  /**
   * Error message. Set when [Error] (or its subclass) has been thrown.
   */
  message'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '

  /**
   * Source code snippet with highlighted error.
   */
  snippet'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '

  /**
   * Error stack. Set when [Error] (or its subclass) has been thrown.
   */
  stack'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '

  /**
   * The value that was thrown. Set when anything except the [Error] (or its subclass) has been thrown.
   */
  value'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TestResult'
    PropertySignature
      Identifier: '
  /**
   * The list of files or buffers attached during the test execution through
   * [testInfo.attachments](https://playwright.dev/docs/api/class-testinfo#test-info-attachments).
   */
  attachments'
      TypeReference
        Identifier: ' Array'
        TypeLiteral
          PropertySignature
            Identifier: '
    /**
     * Attachment name.
     */
    name'
            StringKeyword
          PropertySignature
            Identifier: '

    /**
     * Content type of this attachment to properly present in the report, for example `'application/json'` or
     * `'image/png'`.
     */
    contentType'
            StringKeyword
          PropertySignature
            Identifier: '

    /**
     * Optional path on the filesystem to the attached file.
     */
    path'
            QuestionToken
            StringKeyword
          PropertySignature
            Identifier: '

    /**
     * Optional attachment body used instead of a file.
     */
    body'
            QuestionToken
            TypeReference
              Identifier: ' Buffer'
    PropertySignature
      Identifier: '

  /**
   * Running time in milliseconds.
   */
  duration'
      NumberKeyword
    PropertySignature
      Identifier: '

  /**
   * First error thrown during test execution, if any. This is equal to the first element in
   * [testResult.errors](https://playwright.dev/docs/api/class-testresult#test-result-errors).
   */
  error'
      QuestionToken
      TypeReference
        Identifier: ' TestError'
    PropertySignature
      Identifier: '

  /**
   * Errors thrown during the test execution.
   */
  errors'
      TypeReference
        Identifier: ' Array'
        TypeReference
          Identifier: 'TestError'
    PropertySignature
      Identifier: '

  /**
   * The index of the worker between `0` and `workers - 1`. It is guaranteed that workers running at the same time have
   * a different `parallelIndex`.
   */
  parallelIndex'
      NumberKeyword
    PropertySignature
      Identifier: '

  /**
   * When test is retries multiple times, each retry attempt is given a sequential number.
   *
   * Learn more about [test retries](https://playwright.dev/docs/test-retries#retries).
   */
  retry'
      NumberKeyword
    PropertySignature
      Identifier: '

  /**
   * Start time of this particular test run.
   */
  startTime'
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '

  /**
   * The status of this test result. See also
   * [testCase.expectedStatus](https://playwright.dev/docs/api/class-testcase#test-case-expected-status).
   */
  status'
      UnionType
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
    PropertySignature
      Identifier: '

  /**
   * Anything written to the standard error during the test run.
   */
  stderr'
      TypeReference
        Identifier: ' Array'
        UnionType
          StringKeyword
          TypeReference
            Identifier: 'Buffer'
    PropertySignature
      Identifier: '

  /**
   * Anything written to the standard output during the test run.
   */
  stdout'
      TypeReference
        Identifier: ' Array'
        UnionType
          StringKeyword
          TypeReference
            Identifier: 'Buffer'
    PropertySignature
      Identifier: '

  /**
   * List of steps inside this test run.
   */
  steps'
      TypeReference
        Identifier: ' Array'
        TypeReference
          Identifier: 'TestStep'
    PropertySignature
      Identifier: '

  /**
   * Index of the worker where the test was run. If the test was not run a single time, for example when the user
   * interrupted testing, the only result will have a `workerIndex` equal to `-1`.
   *
   * Learn more about [parallelism and sharding](https://playwright.dev/docs/test-parallel) with Playwright Test.
   */
  workerIndex'
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TestStep'
    MethodSignature
      Identifier: '
  /**
   * Returns a list of step titles from the root step down to this step.
   */
  titlePath'
      TypeReference
        Identifier: ' Array'
        StringKeyword
    PropertySignature
      Identifier: '

  /**
   * Step category to differentiate steps with different origin and verbosity. Built-in categories are:
   * - `hook` for fixtures and hooks initialization and teardown
   * - `expect` for expect calls
   * - `pw:api` for Playwright API calls.
   * - `test.step` for test.step API calls.
   */
  category'
      StringKeyword
    PropertySignature
      Identifier: '

  /**
   * Running time in milliseconds.
   */
  duration'
      NumberKeyword
    PropertySignature
      Identifier: '

  /**
   * Error thrown during the step execution, if any.
   */
  error'
      QuestionToken
      TypeReference
        Identifier: ' TestError'
    PropertySignature
      Identifier: '

  /**
   * Optional location in the source where the step is defined.
   */
  location'
      QuestionToken
      TypeReference
        Identifier: ' Location'
    PropertySignature
      Identifier: '

  /**
   * Parent step, if any.
   */
  parent'
      QuestionToken
      TypeReference
        Identifier: ' TestStep'
    PropertySignature
      Identifier: '

  /**
   * Start time of this particular test step.
   */
  startTime'
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '

  /**
   * List of steps inside this step.
   */
  steps'
      TypeReference
        Identifier: ' Array'
        TypeReference
          Identifier: 'TestStep'
    PropertySignature
      Identifier: '

  /**
   * User-friendly test step title.
   */
  title'
      StringKeyword
