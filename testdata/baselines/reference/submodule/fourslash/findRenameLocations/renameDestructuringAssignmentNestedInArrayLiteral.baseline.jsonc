// === findRenameLocations ===
// === /renameDestructuringAssignmentNestedInArrayLiteral.ts ===
// interface I {
//     /*RENAME*/[|property1RENAME|]: number;
//     property2: string;
// }
// var elems: I[], p1: number, property1: number;
// [{ [|property1RENAME|]: p1 }] = elems;
// [{ [|property1RENAME|] }] = elems;



// === findRenameLocations ===
// === /renameDestructuringAssignmentNestedInArrayLiteral.ts ===
// interface I {
//     property1: number;
//     property2: string;
// }
// var elems: I[], p1: number, property1: number;
// /*RENAME*/[{ property1: p1 }] = elems;
// [{ property1 }] = elems;



// === findRenameLocations ===
// === /renameDestructuringAssignmentNestedInArrayLiteral.ts ===
// interface I {
//     property1: number;
//     property2: string;
// }
// var elems: I[], p1: number, /*RENAME*/[|property1RENAME|]: number;
// [{ property1: p1 }] = elems;
// [{ [|property1RENAME|] }] = elems;



// === findRenameLocations ===
// === /renameDestructuringAssignmentNestedInArrayLiteral.ts ===
// --- (line: 3) skipped ---
// }
// var elems: I[], p1: number, property1: number;
// [{ property1: p1 }] = elems;
// /*RENAME*/[{ property1 }] = elems;