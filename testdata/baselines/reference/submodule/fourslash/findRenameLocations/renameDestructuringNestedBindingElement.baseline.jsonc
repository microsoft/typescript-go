// === findRenameLocations ===
// === /renameDestructuringNestedBindingElement.ts ===
// interface MultiRobot {
//     name: string;
//     skills: {
//         /*RENAME*/[|primaryRENAME|]: string;
//         secondary: string;
//     };
// }
// let multiRobots: MultiRobot[];
// for (let { skills: {[|primaryRENAME|]: primaryA, secondary: secondaryA } } of multiRobots) {
//     console.log(primaryA);
// }
// for (let { skills: {[|primaryRENAME|], secondary } } of multiRobots) {
//     console.log(primary);
// }



// === findRenameLocations ===
// === /renameDestructuringNestedBindingElement.ts ===
// --- (line: 5) skipped ---
//     };
// }
// let multiRobots: MultiRobot[];
// for (/*RENAME*/let { skills: {primary: primaryA, secondary: secondaryA } } of multiRobots) {
//     console.log(primaryA);
// }
// for (let { skills: {primary, secondary } } of multiRobots) {
//     console.log(primary);
// }



// === findRenameLocations ===
// === /renameDestructuringNestedBindingElement.ts ===
// --- (line: 8) skipped ---
// for (let { skills: {primary: primaryA, secondary: secondaryA } } of multiRobots) {
//     console.log(primaryA);
// }
// for (/*RENAME*/let { skills: {primary, secondary } } of multiRobots) {
//     console.log(primary);
// }



// === findRenameLocations ===
// === /renameDestructuringNestedBindingElement.ts ===
// --- (line: 8) skipped ---
// for (let { skills: {primary: primaryA, secondary: secondaryA } } of multiRobots) {
//     console.log(primaryA);
// }
// for (let { skills: {[|primaryRENAME|], secondary } } of multiRobots) {
//     console.log(/*RENAME*/[|primaryRENAME|]);
// }