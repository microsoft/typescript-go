--- old.renameDestructuringAssignmentNestedInArrayLiteral.baseline.jsonc
+++ new.renameDestructuringAssignmentNestedInArrayLiteral.baseline.jsonc
@@= skipped -5, +5 lines =@@
 // }
 // var elems: I[], p1: number, property1: number;
 // [{ [|property1RENAME|]: p1 }] = elems;
-// [{ [|property1RENAME|]: property1/*END SUFFIX*/ }] = elems;
+// [{ [|property1RENAME|] }] = elems;



 // === findRenameLocations ===
 // === /renameDestructuringAssignmentNestedInArrayLiteral.ts ===
 // interface I {
-//     [|property1RENAME|]: number;
+//     property1: number;
 //     property2: string;
 // }
 // var elems: I[], p1: number, property1: number;
-// [{ /*RENAME*/[|property1RENAME|]: p1 }] = elems;
-// [{ [|property1RENAME|]: property1/*END SUFFIX*/ }] = elems;
+// /*RENAME*/[{ property1: p1 }] = elems;
+// [{ property1 }] = elems;



@@= skipped -24, +24 lines =@@
 // }
 // var elems: I[], p1: number, /*RENAME*/[|property1RENAME|]: number;
 // [{ property1: p1 }] = elems;
-// [{ /*START PREFIX*/property1: [|property1RENAME|] }] = elems;
+// [{ [|property1RENAME|] }] = elems;



 // === findRenameLocations ===
 // === /renameDestructuringAssignmentNestedInArrayLiteral.ts ===
-// interface I {
-//     property1: number;
-//     property2: string;
+// --- (line: 3) skipped ---
 // }
-// var elems: I[], p1: number, [|property1RENAME|]: number;
+// var elems: I[], p1: number, property1: number;
 // [{ property1: p1 }] = elems;
-// [{ /*START PREFIX*/property1: /*RENAME*/[|property1RENAME|] }] = elems;
+// /*RENAME*/[{ property1 }] = elems;