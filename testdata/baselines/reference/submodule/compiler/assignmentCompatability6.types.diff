--- old.assignmentCompatability6.types
+++ new.assignmentCompatability6.types
@@= skipped -4, +4 lines =@@
 >__test1__ : typeof __test1__
 
     export interface interfaceWithPublicAndOptional<T,U> { one: T; two?: U; };  var obj4: interfaceWithPublicAndOptional<number,string> = { one: 1 };;
+>interfaceWithPublicAndOptional : interfaceWithPublicAndOptional<T, U>
+>T : T
+>U : U
 >one : T
 >two : U
 >obj4 : interfaceWithPublicAndOptional<number, string>
@@= skipped -15, +18 lines =@@
 >__test2__ : typeof __test2__
 
     export          interface interfaceWithOptional<T> { one?: T; };               var obj3: interfaceWithOptional<number> = { };;
+>interfaceWithOptional : interfaceWithOptional<T>
+>T : T
 >one : T
 >obj3 : interfaceWithOptional<number>
 >{ } : {}
@@= skipped -9, +11 lines =@@
 >obj3 : interfaceWithOptional<number>
 }
 __test2__.__val__obj3 = __test1__.__val__obj4
->__test2__.__val__obj3 = __test1__.__val__obj4 : __test1__.interfaceWithPublicAndOptional<number, string>
->__test2__.__val__obj3 : __test2__.interfaceWithOptional<number>
+>__test2__.__val__obj3 = __test1__.__val__obj4 : interfaceWithPublicAndOptional<number, string>
+>__test2__.__val__obj3 : interfaceWithOptional<number>
 >__test2__ : typeof __test2__
->__val__obj3 : __test2__.interfaceWithOptional<number>
->__test1__.__val__obj4 : __test1__.interfaceWithPublicAndOptional<number, string>
+>__val__obj3 : interfaceWithOptional<number>
+>__test1__.__val__obj4 : interfaceWithPublicAndOptional<number, string>
 >__test1__ : typeof __test1__
->__val__obj4 : __test1__.interfaceWithPublicAndOptional<number, string>
+>__val__obj4 : interfaceWithPublicAndOptional<number, string>
 
