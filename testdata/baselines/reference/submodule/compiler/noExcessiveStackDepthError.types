//// [tests/cases/compiler/noExcessiveStackDepthError.ts] ////

=== noExcessiveStackDepthError.ts ===
// Repro from #46631

interface FindOperator<T> {
>FindOperator : FindOperator<T>
>T : T

    foo: T;
>foo : T
}

type FindConditions<T> = {
>FindConditions : FindConditions<T>
>T : T

    [P in keyof T]?: FindConditions<T[P]> | FindOperator<FindConditions<T[P]>>;
>P : P

};

function foo<Entity>() {
>foo : <Entity>() => void
>Entity : Entity

    var x: FindConditions<any>;
>x : FindConditions<any>

    var x: FindConditions<Entity>;  // Excessive stack depth error not expected here
>x : FindConditions<any>
}

