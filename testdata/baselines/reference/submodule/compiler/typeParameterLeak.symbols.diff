--- old.typeParameterLeak.symbols
+++ new.typeParameterLeak.symbols
@@= skipped -5, +5 lines =@@
 interface Box<T> { data: T }
 >Box : Symbol(Box, Decl(typeParameterLeak.ts, 0, 0))
 >T : Symbol(T, Decl(typeParameterLeak.ts, 2, 14))
->data : Symbol(Box.data, Decl(typeParameterLeak.ts, 2, 18))
+>data : Symbol(data, Decl(typeParameterLeak.ts, 2, 18))
 >T : Symbol(T, Decl(typeParameterLeak.ts, 2, 14))
 
 type BoxTypes = Box<{ x: string }> | Box<{ y: string }>;
@@= skipped -30, +30 lines =@@
 >A : Symbol(A, Decl(typeParameterLeak.ts, 9, 21))
 
   getBox(): A,
->getBox : Symbol(BoxFactory.getBox, Decl(typeParameterLeak.ts, 9, 25))
+>getBox : Symbol(getBox, Decl(typeParameterLeak.ts, 9, 25))
 >A : Symbol(A, Decl(typeParameterLeak.ts, 9, 21))
 }
 
@@= skipped -11, +11 lines =@@
 
 const b = f({ x: "", y: "" })?.getBox();
 >b : Symbol(b, Decl(typeParameterLeak.ts, 14, 5))
->f({ x: "", y: "" })?.getBox : Symbol(BoxFactory.getBox, Decl(typeParameterLeak.ts, 9, 25), Decl(typeParameterLeak.ts, 9, 25))
+>f({ x: "", y: "" })?.getBox : Symbol(getBox, Decl(typeParameterLeak.ts, 9, 25), Decl(typeParameterLeak.ts, 9, 25))
 >f : Symbol(f, Decl(typeParameterLeak.ts, 13, 13))
 >x : Symbol(x, Decl(typeParameterLeak.ts, 14, 13))
 >y : Symbol(y, Decl(typeParameterLeak.ts, 14, 20))
->getBox : Symbol(BoxFactory.getBox, Decl(typeParameterLeak.ts, 9, 25), Decl(typeParameterLeak.ts, 9, 25))
+>getBox : Symbol(getBox, Decl(typeParameterLeak.ts, 9, 25), Decl(typeParameterLeak.ts, 9, 25))
 
 if (b) {
 >b : Symbol(b, Decl(typeParameterLeak.ts, 14, 5))
 
   const x = b.data;
 >x : Symbol(x, Decl(typeParameterLeak.ts, 16, 7))
->b.data : Symbol(Box.data, Decl(typeParameterLeak.ts, 2, 18), Decl(typeParameterLeak.ts, 2, 18))
+>b.data : Symbol(data, Decl(typeParameterLeak.ts, 2, 18), Decl(typeParameterLeak.ts, 2, 18))
 >b : Symbol(b, Decl(typeParameterLeak.ts, 14, 5))
->data : Symbol(Box.data, Decl(typeParameterLeak.ts, 2, 18), Decl(typeParameterLeak.ts, 2, 18))
+>data : Symbol(data, Decl(typeParameterLeak.ts, 2, 18), Decl(typeParameterLeak.ts, 2, 18))
 }
 
