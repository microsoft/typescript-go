--- old.declarationEmitLocalClassDeclarationMixin.js
+++ new.declarationEmitLocalClassDeclarationMixin.js
@@= skipped -37, +37 lines =@@
 exports.FilteredThing = exports.Mixed = exports.Unmixed = void 0;
 function mixin(Base) {
     class PrivateMixed extends Base {
-        constructor() {
-            super(...arguments);
-            this.bar = 2;
-        }
+        bar = 2;
     }
     return PrivateMixed;
 }
 class Unmixed {
-    constructor() {
-        this.foo = 1;
-    }
+    foo = 1;
 }
 exports.Unmixed = Unmixed;
 exports.Mixed = mixin(Unmixed);
 function Filter(ctor) {
     class FilterMixin extends ctor {
-        constructor() {
-            super(...arguments);
-            // other concrete methods, fields, constructor
-            this.thing = 12;
-        }
+        // other concrete methods, fields, constructor
+        thing = 12;
     }
     return FilterMixin;
 }
@@= skipped -43, +35 lines =@@
 } & typeof Unmixed;
 declare const FilteredThing_base: (abstract new (...args: any[]) => {
     match(path: string): boolean;
+    // other concrete methods, fields, constructor
     thing: number;
 }) & typeof Unmixed;
 export declare class FilteredThing extends FilteredThing_base {