--- old.truthinessCallExpressionCoercion3.types
+++ new.truthinessCallExpressionCoercion3.types
@@= skipped -2, +2 lines =@@
 === truthinessCallExpressionCoercion3.ts ===
 // from #41640, based on an example in ant-design
 interface I {
+>I : I
+
     always(): void
 >always : () => void
->       : ^^^^^^    
 }
 
 function f(result: unknown) {
 >f : (result: unknown) => unknown
->  : ^      ^^       ^^^^^^^^^^^^
 >result : unknown
->       : ^^^^^^^
 
     if ((result as I).always) {
 >(result as I).always : () => void
->                     : ^^^^^^    
 >(result as I) : I
->              : ^
 >result as I : I
->            : ^
 >result : unknown
->       : ^^^^^^^
 >always : () => void
->       : ^^^^^^    
 
         return result
 >result : unknown
->       : ^^^^^^^
     }
 }
 function g(result: unknown) {
 >g : (result: unknown) => unknown
->  : ^      ^^       ^^^^^^^^^^^^
 >result : unknown
->       : ^^^^^^^
 
     if (((result as I)).always) {
 >((result as I)).always : () => void
->                       : ^^^^^^    
 >((result as I)) : I
->                : ^
 >(result as I) : I
->              : ^
 >result as I : I
->            : ^
 >result : unknown
->       : ^^^^^^^
 >always : () => void
->       : ^^^^^^    
 
         return result
 >result : unknown
->       : ^^^^^^^
     }
 }
 
