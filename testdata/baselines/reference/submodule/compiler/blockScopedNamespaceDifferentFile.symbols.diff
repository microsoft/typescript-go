--- old.blockScopedNamespaceDifferentFile.symbols
+++ new.blockScopedNamespaceDifferentFile.symbols
@@= skipped -7, +7 lines =@@
 >Name : Symbol(Name, Decl(test.ts, 0, 13))
 
         static funcData = A.AA.func();
->funcData : Symbol(Name.funcData, Decl(test.ts, 1, 23))
->A.AA.func : Symbol(A.AA.func, Decl(typings.d.ts, 1, 18))
->A.AA : Symbol(A.AA, Decl(typings.d.ts, 0, 21))
+>funcData : Symbol(funcData, Decl(test.ts, 1, 23))
+>A.AA.func : Symbol(func, Decl(typings.d.ts, 1, 18))
+>A.AA : Symbol(AA, Decl(typings.d.ts, 0, 21))
 >A : Symbol(A, Decl(typings.d.ts, 0, 0))
->AA : Symbol(A.AA, Decl(typings.d.ts, 0, 21))
->func : Symbol(A.AA.func, Decl(typings.d.ts, 1, 18))
+>AA : Symbol(AA, Decl(typings.d.ts, 0, 21))
+>func : Symbol(func, Decl(typings.d.ts, 1, 18))
 
         static someConst = A.AA.foo;
->someConst : Symbol(Name.someConst, Decl(test.ts, 2, 38))
->A.AA.foo : Symbol(A.AA.foo, Decl(typings.d.ts, 3, 13))
->A.AA : Symbol(A.AA, Decl(typings.d.ts, 0, 21))
+>someConst : Symbol(someConst, Decl(test.ts, 2, 38))
+>A.AA.foo : Symbol(foo, Decl(typings.d.ts, 3, 13))
+>A.AA : Symbol(AA, Decl(typings.d.ts, 0, 21))
 >A : Symbol(A, Decl(typings.d.ts, 0, 0))
->AA : Symbol(A.AA, Decl(typings.d.ts, 0, 21))
->foo : Symbol(A.AA.foo, Decl(typings.d.ts, 3, 13))
+>AA : Symbol(AA, Decl(typings.d.ts, 0, 21))
+>foo : Symbol(foo, Decl(typings.d.ts, 3, 13))
 
         constructor(parameters) {}
 >parameters : Symbol(parameters, Decl(test.ts, 5, 20))
