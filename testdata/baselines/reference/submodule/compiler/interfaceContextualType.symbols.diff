--- old.interfaceContextualType.symbols
+++ new.interfaceContextualType.symbols
@@= skipped -4, +4 lines =@@
 >IOptions : Symbol(IOptions, Decl(interfaceContextualType.ts, 0, 0))
 
     italic?: boolean;
->italic : Symbol(IOptions.italic, Decl(interfaceContextualType.ts, 0, 27))
+>italic : Symbol(italic, Decl(interfaceContextualType.ts, 0, 27))
 
     bold?: boolean;
->bold : Symbol(IOptions.bold, Decl(interfaceContextualType.ts, 1, 21))
+>bold : Symbol(bold, Decl(interfaceContextualType.ts, 1, 21))
 }
 export interface IMap {
 >IMap : Symbol(IMap, Decl(interfaceContextualType.ts, 3, 1))
@@= skipped -17, +17 lines =@@
 >Bug : Symbol(Bug, Decl(interfaceContextualType.ts, 6, 1))
 
     public values: IMap;
->values : Symbol(Bug.values, Decl(interfaceContextualType.ts, 8, 11))
+>values : Symbol(values, Decl(interfaceContextualType.ts, 8, 11))
 >IMap : Symbol(IMap, Decl(interfaceContextualType.ts, 3, 1))
 
     ok() {
->ok : Symbol(Bug.ok, Decl(interfaceContextualType.ts, 9, 24))
+>ok : Symbol(ok, Decl(interfaceContextualType.ts, 9, 24))
 
         this.values = {};
->this.values : Symbol(Bug.values, Decl(interfaceContextualType.ts, 8, 11))
+>this.values : Symbol(values, Decl(interfaceContextualType.ts, 8, 11))
 >this : Symbol(Bug, Decl(interfaceContextualType.ts, 6, 1))
->values : Symbol(Bug.values, Decl(interfaceContextualType.ts, 8, 11))
+>values : Symbol(values, Decl(interfaceContextualType.ts, 8, 11))
 
         this.values['comments'] = { italic: true };
->this.values : Symbol(Bug.values, Decl(interfaceContextualType.ts, 8, 11))
+>this.values : Symbol(values, Decl(interfaceContextualType.ts, 8, 11))
 >this : Symbol(Bug, Decl(interfaceContextualType.ts, 6, 1))
->values : Symbol(Bug.values, Decl(interfaceContextualType.ts, 8, 11))
+>values : Symbol(values, Decl(interfaceContextualType.ts, 8, 11))
 >italic : Symbol(italic, Decl(interfaceContextualType.ts, 12, 35))
     }
     shouldBeOK() {
->shouldBeOK : Symbol(Bug.shouldBeOK, Decl(interfaceContextualType.ts, 13, 5))
+>shouldBeOK : Symbol(shouldBeOK, Decl(interfaceContextualType.ts, 13, 5))
 
         this.values = {
->this.values : Symbol(Bug.values, Decl(interfaceContextualType.ts, 8, 11))
+>this.values : Symbol(values, Decl(interfaceContextualType.ts, 8, 11))
 >this : Symbol(Bug, Decl(interfaceContextualType.ts, 6, 1))
->values : Symbol(Bug.values, Decl(interfaceContextualType.ts, 8, 11))
+>values : Symbol(values, Decl(interfaceContextualType.ts, 8, 11))
 
             comments: { italic: true }
 >comments : Symbol(comments, Decl(interfaceContextualType.ts, 15, 23))
