--- old.narrowByClauseExpressionInSwitchTrue7.symbols
+++ new.narrowByClauseExpressionInSwitchTrue7.symbols
@@ -5,7 +5,7 @@
 >Base : Symbol(Base, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 0, 0))
 
     basey: string = "";
->basey : Symbol(Base.basey, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 0, 12))
+>basey : Symbol(basey, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 0, 12))
 }
 
 class Derived1 extends Base {
@@ -13,7 +13,7 @@
 >Base : Symbol(Base, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 0, 0))
 
     d: string = "";
->d : Symbol(Derived1.d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 4, 29))
+>d : Symbol(d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 4, 29))
 }
 
 class Derived2 extends Base {
@@ -21,10 +21,10 @@
 >Base : Symbol(Base, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 0, 0))
 
     d: string = "";
->d : Symbol(Derived2.d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 8, 29))
+>d : Symbol(d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 8, 29))
 
     other: string = "";
->other : Symbol(Derived2.other, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 9, 19))
+>other : Symbol(other, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 9, 19))
 }
 
 function classy(base: Base, someDerived: Derived1 | Derived2) {
@@ -41,16 +41,16 @@
 >Derived1 : Symbol(Derived1, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 2, 1))
 
             base.d
->base.d : Symbol(Derived1.d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 4, 29))
+>base.d : Symbol(d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 4, 29))
 >base : Symbol(base, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 13, 16))
->d : Symbol(Derived1.d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 4, 29))
+>d : Symbol(d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 4, 29))
 
             // fallthrough
         default:
             base.basey
->base.basey : Symbol(Base.basey, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 0, 12))
+>base.basey : Symbol(basey, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 0, 12))
 >base : Symbol(base, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 13, 16))
->basey : Symbol(Base.basey, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 0, 12))
+>basey : Symbol(basey, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 0, 12))
     }
 
     switch (true) {
@@ -59,9 +59,9 @@
 >Derived1 : Symbol(Derived1, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 2, 1))
 
             someDerived.d
->someDerived.d : Symbol(Derived1.d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 4, 29))
+>someDerived.d : Symbol(d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 4, 29))
 >someDerived : Symbol(someDerived, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 13, 27))
->d : Symbol(Derived1.d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 4, 29))
+>d : Symbol(d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 4, 29))
 
             break;
         case someDerived instanceof Derived2:
@@ -69,9 +69,9 @@
 >Derived2 : Symbol(Derived2, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 6, 1))
 
             someDerived.d
->someDerived.d : Symbol(Derived2.d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 8, 29))
+>someDerived.d : Symbol(d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 8, 29))
 >someDerived : Symbol(someDerived, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 13, 27))
->d : Symbol(Derived2.d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 8, 29))
+>d : Symbol(d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 8, 29))
 
             break
         default:
@@ -86,9 +86,9 @@
 >Derived1 : Symbol(Derived1, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 2, 1))
 
             someDerived.d
->someDerived.d : Symbol(Derived1.d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 4, 29))
+>someDerived.d : Symbol(d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 4, 29))
 >someDerived : Symbol(someDerived, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 13, 27))
->d : Symbol(Derived1.d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 4, 29))
+>d : Symbol(d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 4, 29))
 
             // fallthrough
         case someDerived instanceof Derived2:
@@ -118,14 +118,14 @@
 >Derived1 : Symbol(Derived1, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 2, 1))
 
             someDerived.d;
->someDerived.d : Symbol(Derived1.d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 4, 29))
+>someDerived.d : Symbol(d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 4, 29))
 >someDerived : Symbol(someDerived, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 13, 27))
->d : Symbol(Derived1.d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 4, 29))
+>d : Symbol(d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 4, 29))
 
             someDerived.basey;
->someDerived.basey : Symbol(Base.basey, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 0, 12))
+>someDerived.basey : Symbol(basey, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 0, 12))
 >someDerived : Symbol(someDerived, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 13, 27))
->basey : Symbol(Base.basey, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 0, 12))
+>basey : Symbol(basey, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 0, 12))
 
             break
         case someDerived instanceof Derived2:
@@ -133,14 +133,14 @@
 >Derived2 : Symbol(Derived2, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 6, 1))
 
             someDerived.d;
->someDerived.d : Symbol(Derived2.d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 8, 29))
+>someDerived.d : Symbol(d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 8, 29))
 >someDerived : Symbol(someDerived, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 13, 27))
->d : Symbol(Derived2.d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 8, 29))
+>d : Symbol(d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 8, 29))
 
             someDerived.other;
->someDerived.other : Symbol(Derived2.other, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 9, 19))
+>someDerived.other : Symbol(other, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 9, 19))
 >someDerived : Symbol(someDerived, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 13, 27))
->other : Symbol(Derived2.other, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 9, 19))
+>other : Symbol(other, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 9, 19))
     }
 
     switch (true) {
@@ -149,14 +149,14 @@
 >Derived1 : Symbol(Derived1, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 2, 1))
 
             someDerived.d;
->someDerived.d : Symbol(Derived1.d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 4, 29))
+>someDerived.d : Symbol(d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 4, 29))
 >someDerived : Symbol(someDerived, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 13, 27))
->d : Symbol(Derived1.d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 4, 29))
+>d : Symbol(d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 4, 29))
 
             someDerived.basey;
->someDerived.basey : Symbol(Base.basey, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 0, 12))
+>someDerived.basey : Symbol(basey, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 0, 12))
 >someDerived : Symbol(someDerived, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 13, 27))
->basey : Symbol(Base.basey, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 0, 12))
+>basey : Symbol(basey, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 0, 12))
 
             break
         default:
@@ -169,14 +169,14 @@
 >Derived2 : Symbol(Derived2, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 6, 1))
 
             someDerived.d;
->someDerived.d : Symbol(Derived2.d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 8, 29))
+>someDerived.d : Symbol(d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 8, 29))
 >someDerived : Symbol(someDerived, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 13, 27))
->d : Symbol(Derived2.d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 8, 29))
+>d : Symbol(d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 8, 29))
 
             someDerived.other;
->someDerived.other : Symbol(Derived2.other, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 9, 19))
+>someDerived.other : Symbol(other, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 9, 19))
 >someDerived : Symbol(someDerived, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 13, 27))
->other : Symbol(Derived2.other, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 9, 19))
+>other : Symbol(other, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 9, 19))
     }
 
     switch (true) {
@@ -185,14 +185,14 @@
 >Derived1 : Symbol(Derived1, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 2, 1))
 
             someDerived.d;
->someDerived.d : Symbol(Derived1.d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 4, 29))
+>someDerived.d : Symbol(d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 4, 29))
 >someDerived : Symbol(someDerived, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 13, 27))
->d : Symbol(Derived1.d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 4, 29))
+>d : Symbol(d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 4, 29))
 
             someDerived.basey;
->someDerived.basey : Symbol(Base.basey, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 0, 12))
+>someDerived.basey : Symbol(basey, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 0, 12))
 >someDerived : Symbol(someDerived, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 13, 27))
->basey : Symbol(Base.basey, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 0, 12))
+>basey : Symbol(basey, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 0, 12))
 
             break
         case someDerived instanceof Derived2:
@@ -200,25 +200,25 @@
 >Derived2 : Symbol(Derived2, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 6, 1))
 
             someDerived.d;
->someDerived.d : Symbol(Derived2.d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 8, 29))
+>someDerived.d : Symbol(d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 8, 29))
 >someDerived : Symbol(someDerived, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 13, 27))
->d : Symbol(Derived2.d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 8, 29))
+>d : Symbol(d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 8, 29))
 
             someDerived.other;
->someDerived.other : Symbol(Derived2.other, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 9, 19))
+>someDerived.other : Symbol(other, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 9, 19))
 >someDerived : Symbol(someDerived, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 13, 27))
->other : Symbol(Derived2.other, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 9, 19))
+>other : Symbol(other, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 9, 19))
 
         default:
             someDerived.d;
->someDerived.d : Symbol(Derived2.d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 8, 29))
+>someDerived.d : Symbol(d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 8, 29))
 >someDerived : Symbol(someDerived, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 13, 27))
->d : Symbol(Derived2.d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 8, 29))
+>d : Symbol(d, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 8, 29))
 
             someDerived.other;
->someDerived.other : Symbol(Derived2.other, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 9, 19))
+>someDerived.other : Symbol(other, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 9, 19))
 >someDerived : Symbol(someDerived, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 13, 27))
->other : Symbol(Derived2.other, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 9, 19))
+>other : Symbol(other, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 9, 19))
 
             const never: never = someDerived;
 >never : Symbol(never, Decl(narrowByClauseExpressionInSwitchTrue7.ts, 79, 17))
