--- old.overloadOnConstInBaseWithBadImplementationInDerived.symbols
+++ new.overloadOnConstInBaseWithBadImplementationInDerived.symbols
@@= skipped -4, +4 lines =@@
 >I : Symbol(I, Decl(overloadOnConstInBaseWithBadImplementationInDerived.ts, 0, 0))
 
     x1(a: number, callback: (x: 'hi') => number);
->x1 : Symbol(I.x1, Decl(overloadOnConstInBaseWithBadImplementationInDerived.ts, 0, 13))
+>x1 : Symbol(x1, Decl(overloadOnConstInBaseWithBadImplementationInDerived.ts, 0, 13))
 >a : Symbol(a, Decl(overloadOnConstInBaseWithBadImplementationInDerived.ts, 1, 7))
 >callback : Symbol(callback, Decl(overloadOnConstInBaseWithBadImplementationInDerived.ts, 1, 17))
 >x : Symbol(x, Decl(overloadOnConstInBaseWithBadImplementationInDerived.ts, 1, 29))
@@= skipped -11, +11 lines =@@
 >I : Symbol(I, Decl(overloadOnConstInBaseWithBadImplementationInDerived.ts, 0, 0))
 
     x1(a: number, callback: (x: 'hi') => number) { // error
->x1 : Symbol(C.x1, Decl(overloadOnConstInBaseWithBadImplementationInDerived.ts, 4, 22))
+>x1 : Symbol(x1, Decl(overloadOnConstInBaseWithBadImplementationInDerived.ts, 4, 22))
 >a : Symbol(a, Decl(overloadOnConstInBaseWithBadImplementationInDerived.ts, 5, 7))
 >callback : Symbol(callback, Decl(overloadOnConstInBaseWithBadImplementationInDerived.ts, 5, 17))
 >x : Symbol(x, Decl(overloadOnConstInBaseWithBadImplementationInDerived.ts, 5, 29))
