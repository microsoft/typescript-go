--- old.lateBoundFunctionMemberAssignmentDeclarations.errors.txt
+++ new.lateBoundFunctionMemberAssignmentDeclarations.errors.txt
@@= skipped -0, +-1 lines =@@
-<no content>
@@= skipped --1, +1 lines =@@
+error TS2318: Cannot find global type 'Array'.
+error TS2318: Cannot find global type 'CallableFunction'.
+error TS2318: Cannot find global type 'Function'.
+error TS2318: Cannot find global type 'IArguments'.
+error TS2318: Cannot find global type 'NewableFunction'.
+error TS2318: Cannot find global type 'RegExp'.
+error TS2318: Cannot find global type 'String'.
+error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
+error TS2552: Cannot find name 'Number'. Did you mean 'number'?
+error TS2552: Cannot find name 'Object'. Did you mean 'object'?
+index.ts(3,18): error TS2304: Cannot find name 'Symbol'.
+index.ts(4,1): error TS7053: Element implicitly has an 'any' type because expression of type 'error' can't be used to index type '{ (): void; bar: number; }'.
+index.ts(6,19): error TS7053: Element implicitly has an 'any' type because expression of type 'error' can't be used to index type '{ (): void; bar: number; }'.
+
+
+!!! error TS2318: Cannot find global type 'Array'.
+!!! error TS2318: Cannot find global type 'CallableFunction'.
+!!! error TS2318: Cannot find global type 'Function'.
+!!! error TS2318: Cannot find global type 'IArguments'.
+!!! error TS2318: Cannot find global type 'NewableFunction'.
+!!! error TS2318: Cannot find global type 'RegExp'.
+!!! error TS2318: Cannot find global type 'String'.
+!!! error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
+!!! error TS2552: Cannot find name 'Number'. Did you mean 'number'?
+!!! error TS2552: Cannot find name 'Object'. Did you mean 'object'?
+==== index.ts (3 errors) ====
+    export function foo() {}
+    foo.bar = 12;
+    const _private = Symbol();
+                     ~~~~~~
+!!! error TS2304: Cannot find name 'Symbol'.
+    foo[_private] = "ok";
+    ~~~~~~~~~~~~~
+!!! error TS7053: Element implicitly has an 'any' type because expression of type 'error' can't be used to index type '{ (): void; bar: number; }'.
+    
+    const x: string = foo[_private];
+                      ~~~~~~~~~~~~~
+!!! error TS7053: Element implicitly has an 'any' type because expression of type 'error' can't be used to index type '{ (): void; bar: number; }'.
+    
