//// [tests/cases/compiler/conditionalTypeSubclassExtendsTypeParam.ts] ////

=== conditionalTypeSubclassExtendsTypeParam.ts ===
declare class Model<M extends MR, MR extends {}> {
>Model : Model<M, MR>
>M : M
>MR : MR

    public getField2<K extends keyof M>(): Field<M[K], [K] extends [keyof MR] ? MR[K] : M[K]>
>getField2 : <K extends keyof M>() => Field<M[K], [K] extends [keyof MR] ? MR[K] : M[K]>
>K : K
}

declare class Field<T extends TR, TR> {
>Field : Field<T, TR>
>T : T
>TR : TR
}
