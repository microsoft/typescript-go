--- old.autoLift2.types
+++ new.autoLift2.types
@@= skipped -6, +6 lines =@@
 {
     constructor() {
         this.foo: any;
->this.foo : any
+>this.foo : string
 >this : this
->foo : any
+>foo : string
 >any : any
 
         this.bar: any;
->this.bar : any
+>this.bar : string
 >this : this
->bar : any
+>bar : string
 >any : any
     }
 
@@= skipped -18, +18 lines =@@
 
      this.foo = "foo";
 >this.foo = "foo" : "foo"
->this.foo : any
+>this.foo : string
 >this : this
->foo : any
+>foo : string
 >"foo" : "foo"
 
      this.bar = "bar";
 >this.bar = "bar" : "bar"
->this.bar : any
+>this.bar : string
 >this : this
->bar : any
+>bar : string
 >"bar" : "bar"
 
      [1, 2].forEach((p) => this.foo);
@@= skipped -19, +19 lines =@@
 >1 : 1
 >2 : 2
 >forEach : (callbackfn: (value: number, index: number, array: number[]) => void, thisArg?: any) => void
->(p) => this.foo : (p: number) => any
+>(p) => this.foo : (p: number) => string
 >p : number
->this.foo : any
+>this.foo : string
 >this : this
->foo : any
+>foo : string
 
      [1, 2].forEach((p) => this.bar);
 >[1, 2].forEach((p) => this.bar) : void
@@= skipped -13, +13 lines =@@
 >1 : 1
 >2 : 2
 >forEach : (callbackfn: (value: number, index: number, array: number[]) => void, thisArg?: any) => void
->(p) => this.bar : (p: number) => any
+>(p) => this.bar : (p: number) => string
 >p : number
->this.bar : any
+>this.bar : string
 >this : this
->bar : any
+>bar : string
 
   }
 
