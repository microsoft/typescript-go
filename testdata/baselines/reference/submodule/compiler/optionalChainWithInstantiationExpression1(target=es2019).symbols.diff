--- old.optionalChainWithInstantiationExpression1(target=es2019).symbols
+++ new.optionalChainWithInstantiationExpression1(target=es2019).symbols
@@= skipped -8, +8 lines =@@
 >T : Symbol(T, Decl(optionalChainWithInstantiationExpression1.ts, 1, 19))
 
         static d: number;
->d : Symbol(b.d, Decl(optionalChainWithInstantiationExpression1.ts, 1, 23))
+>d : Symbol(d, Decl(optionalChainWithInstantiationExpression1.ts, 1, 23))
 
         constructor(x: T);
 >x : Symbol(x, Decl(optionalChainWithInstantiationExpression1.ts, 3, 20))
@@= skipped -16, +16 lines =@@
 >A : Symbol(A, Decl(optionalChainWithInstantiationExpression1.ts, 0, 0))
 
 a?.b<c>.d;
->a?.b<c>.d : Symbol(A.b.d, Decl(optionalChainWithInstantiationExpression1.ts, 1, 23))
->a?.b : Symbol(A.b, Decl(optionalChainWithInstantiationExpression1.ts, 0, 21))
+>a?.b<c>.d : Symbol(d, Decl(optionalChainWithInstantiationExpression1.ts, 1, 23))
+>a?.b : Symbol(b, Decl(optionalChainWithInstantiationExpression1.ts, 0, 21))
 >a : Symbol(a, Decl(optionalChainWithInstantiationExpression1.ts, 9, 13))
->b : Symbol(A.b, Decl(optionalChainWithInstantiationExpression1.ts, 0, 21))
+>b : Symbol(b, Decl(optionalChainWithInstantiationExpression1.ts, 0, 21))
 >c : Symbol(c, Decl(optionalChainWithInstantiationExpression1.ts, 5, 1))
->d : Symbol(A.b.d, Decl(optionalChainWithInstantiationExpression1.ts, 1, 23))
+>d : Symbol(d, Decl(optionalChainWithInstantiationExpression1.ts, 1, 23))
 
 a?.b.d
->a?.b.d : Symbol(A.b.d, Decl(optionalChainWithInstantiationExpression1.ts, 1, 23))
->a?.b : Symbol(A.b, Decl(optionalChainWithInstantiationExpression1.ts, 0, 21))
+>a?.b.d : Symbol(d, Decl(optionalChainWithInstantiationExpression1.ts, 1, 23))
+>a?.b : Symbol(b, Decl(optionalChainWithInstantiationExpression1.ts, 0, 21))
 >a : Symbol(a, Decl(optionalChainWithInstantiationExpression1.ts, 9, 13))
->b : Symbol(A.b, Decl(optionalChainWithInstantiationExpression1.ts, 0, 21))
->d : Symbol(A.b.d, Decl(optionalChainWithInstantiationExpression1.ts, 1, 23))
+>b : Symbol(b, Decl(optionalChainWithInstantiationExpression1.ts, 0, 21))
+>d : Symbol(d, Decl(optionalChainWithInstantiationExpression1.ts, 1, 23))
 
