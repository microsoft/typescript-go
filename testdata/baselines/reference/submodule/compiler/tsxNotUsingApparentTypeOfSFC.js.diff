--- old.tsxNotUsingApparentTypeOfSFC.js
+++ new.tsxNotUsingApparentTypeOfSFC.js
@@= skipped -23, +23 lines =@@
 //// [tsxNotUsingApparentTypeOfSFC.js]
 "use strict";
 /// <reference path="react16.d.ts" />
+var __assign = (this && this.__assign) || function () {
+    __assign = Object.assign || function(t) {
+        for (var s, i = 1, n = arguments.length; i < n; i++) {
+            s = arguments[i];
+            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
+                t[p] = s[p];
+        }
+        return t;
+    };
+    return __assign.apply(this, arguments);
+};
 var __importDefault = (this && this.__importDefault) || function (mod) {
     return (mod && mod.__esModule) ? mod : { "default": mod };
 };
@@= skipped -16, +27 lines =@@
     }
     let x = react_1.default.createElement(MySFC, null); // should error
     let y = react_1.default.createElement(MyComponent, null); // should error
-    let z = react_1.default.createElement(MySFC, Object.assign({}, wrappedProps)); // should work
-    let q = react_1.default.createElement(MyComponent, Object.assign({}, wrappedProps)); // should work
+    let z = react_1.default.createElement(MySFC, __assign({}, wrappedProps)); // should work
+    let q = react_1.default.createElement(MyComponent, __assign({}, wrappedProps)); // should work
 }