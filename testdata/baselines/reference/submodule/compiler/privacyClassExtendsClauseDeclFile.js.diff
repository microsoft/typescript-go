--- old.privacyClassExtendsClauseDeclFile.js
+++ new.privacyClassExtendsClauseDeclFile.js
@@= skipped -95, +95 lines =@@
 }
 
 
+//// [privacyClassExtendsClauseDeclFile_GlobalFile.js]
+var publicModuleInGlobal;
+(function (publicModuleInGlobal) {
+    class publicClassInPublicModule {
+        f1() {
+        }
+    }
+    publicModuleInGlobal.publicClassInPublicModule = publicClassInPublicModule;
+    class privateClassInPublicModule {
+    }
+    class privateClassExtendingPublicClassInModule extends publicClassInPublicModule {
+    }
+    class privateClassExtendingPrivateClassInModule extends privateClassInPublicModule {
+    }
+    class publicClassExtendingPublicClassInModule extends publicClassInPublicModule {
+    }
+    publicModuleInGlobal.publicClassExtendingPublicClassInModule = publicClassExtendingPublicClassInModule;
+    class publicClassExtendingPrivateClassInModule extends privateClassInPublicModule {
+    }
+    publicModuleInGlobal.publicClassExtendingPrivateClassInModule = publicClassExtendingPrivateClassInModule;
+})(publicModuleInGlobal || (publicModuleInGlobal = {}));
+class publicClassInGlobal {
+}
+class publicClassExtendingPublicClassInGlobal extends publicClassInGlobal {
+}
 //// [privacyClassExtendsClauseDeclFile_externalModule.js]
 "use strict";
-var __extends = (this && this.__extends) || (function () {
-    var extendStatics = function (d, b) {
-        extendStatics = Object.setPrototypeOf ||
-            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
-            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
-        return extendStatics(d, b);
-    };
-    return function (d, b) {
-        if (typeof b !== "function" && b !== null)
-            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
-        extendStatics(d, b);
-        function __() { this.constructor = d; }
-        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
-    };
-})();
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.publicClassExtendingFromPrivateModuleClass = exports.publicClassExtendingPrivateClass = exports.publicClassExtendingPublicClass = exports.publicClass = exports.publicModule = void 0;
 var publicModule;
 (function (publicModule) {
-    var publicClassInPublicModule = /** @class */ (function () {
-        function publicClassInPublicModule() {
+    class publicClassInPublicModule {
+        f1() {
         }
-        publicClassInPublicModule.prototype.f1 = function () {
-        };
-        return publicClassInPublicModule;
-    }());
+    }
     publicModule.publicClassInPublicModule = publicClassInPublicModule;
-    var privateClassInPublicModule = /** @class */ (function () {
-        function privateClassInPublicModule() {
-        }
-        return privateClassInPublicModule;
-    }());
-    var privateClassExtendingPublicClassInModule = /** @class */ (function (_super) {
-        __extends(privateClassExtendingPublicClassInModule, _super);
-        function privateClassExtendingPublicClassInModule() {
-            return _super !== null && _super.apply(this, arguments) || this;
-        }
-        return privateClassExtendingPublicClassInModule;
-    }(publicClassInPublicModule));
-    var privateClassExtendingPrivateClassInModule = /** @class */ (function (_super) {
-        __extends(privateClassExtendingPrivateClassInModule, _super);
-        function privateClassExtendingPrivateClassInModule() {
-            return _super !== null && _super.apply(this, arguments) || this;
-        }
-        return privateClassExtendingPrivateClassInModule;
-    }(privateClassInPublicModule));
-    var publicClassExtendingPublicClassInModule = /** @class */ (function (_super) {
-        __extends(publicClassExtendingPublicClassInModule, _super);
-        function publicClassExtendingPublicClassInModule() {
-            return _super !== null && _super.apply(this, arguments) || this;
-        }
-        return publicClassExtendingPublicClassInModule;
-    }(publicClassInPublicModule));
-    publicModule.publicClassExtendingPublicClassInModule = publicClassExtendingPublicClassInModule;
-    var publicClassExtendingPrivateClassInModule = /** @class */ (function (_super) {
-        __extends(publicClassExtendingPrivateClassInModule, _super);
-        function publicClassExtendingPrivateClassInModule() {
-            return _super !== null && _super.apply(this, arguments) || this;
-        }
-        return publicClassExtendingPrivateClassInModule;
-    }(privateClassInPublicModule));
-    publicModule.publicClassExtendingPrivateClassInModule = publicClassExtendingPrivateClassInModule;
-    var privateClassExtendingFromPrivateModuleClass = /** @class */ (function (_super) {
-        __extends(privateClassExtendingFromPrivateModuleClass, _super);
-        function privateClassExtendingFromPrivateModuleClass() {
-            return _super !== null && _super.apply(this, arguments) || this;
-        }
-        return privateClassExtendingFromPrivateModuleClass;
-    }(privateModule.publicClassInPrivateModule));
-    var publicClassExtendingFromPrivateModuleClass = /** @class */ (function (_super) {
-        __extends(publicClassExtendingFromPrivateModuleClass, _super);
-        function publicClassExtendingFromPrivateModuleClass() {
-            return _super !== null && _super.apply(this, arguments) || this;
-        }
-        return publicClassExtendingFromPrivateModuleClass;
-    }(privateModule.publicClassInPrivateModule));
-    publicModule.publicClassExtendingFromPrivateModuleClass = publicClassExtendingFromPrivateModuleClass;
-})(publicModule || (exports.publicModule = publicModule = {}));
-var privateModule;
-(function (privateModule) {
-    var publicClassInPrivateModule = /** @class */ (function () {
-        function publicClassInPrivateModule() {
-        }
-        publicClassInPrivateModule.prototype.f1 = function () {
-        };
-        return publicClassInPrivateModule;
-    }());
-    privateModule.publicClassInPrivateModule = publicClassInPrivateModule;
-    var privateClassInPrivateModule = /** @class */ (function () {
-        function privateClassInPrivateModule() {
-        }
-        return privateClassInPrivateModule;
-    }());
-    var privateClassExtendingPublicClassInModule = /** @class */ (function (_super) {
-        __extends(privateClassExtendingPublicClassInModule, _super);
-        function privateClassExtendingPublicClassInModule() {
-            return _super !== null && _super.apply(this, arguments) || this;
-        }
-        return privateClassExtendingPublicClassInModule;
-    }(publicClassInPrivateModule));
-    var privateClassExtendingPrivateClassInModule = /** @class */ (function (_super) {
-        __extends(privateClassExtendingPrivateClassInModule, _super);
-        function privateClassExtendingPrivateClassInModule() {
-            return _super !== null && _super.apply(this, arguments) || this;
-        }
-        return privateClassExtendingPrivateClassInModule;
-    }(privateClassInPrivateModule));
-    var publicClassExtendingPublicClassInModule = /** @class */ (function (_super) {
-        __extends(publicClassExtendingPublicClassInModule, _super);
-        function publicClassExtendingPublicClassInModule() {
-            return _super !== null && _super.apply(this, arguments) || this;
-        }
-        return publicClassExtendingPublicClassInModule;
-    }(publicClassInPrivateModule));
-    privateModule.publicClassExtendingPublicClassInModule = publicClassExtendingPublicClassInModule;
-    var publicClassExtendingPrivateClassInModule = /** @class */ (function (_super) {
-        __extends(publicClassExtendingPrivateClassInModule, _super);
-        function publicClassExtendingPrivateClassInModule() {
-            return _super !== null && _super.apply(this, arguments) || this;
-        }
-        return publicClassExtendingPrivateClassInModule;
-    }(privateClassInPrivateModule));
-    privateModule.publicClassExtendingPrivateClassInModule = publicClassExtendingPrivateClassInModule;
-    var privateClassExtendingFromPrivateModuleClass = /** @class */ (function (_super) {
-        __extends(privateClassExtendingFromPrivateModuleClass, _super);
-        function privateClassExtendingFromPrivateModuleClass() {
-            return _super !== null && _super.apply(this, arguments) || this;
-        }
-        return privateClassExtendingFromPrivateModuleClass;
-    }(privateModule.publicClassInPrivateModule));
-    var publicClassExtendingFromPrivateModuleClass = /** @class */ (function (_super) {
-        __extends(publicClassExtendingFromPrivateModuleClass, _super);
-        function publicClassExtendingFromPrivateModuleClass() {
-            return _super !== null && _super.apply(this, arguments) || this;
-        }
-        return publicClassExtendingFromPrivateModuleClass;
-    }(privateModule.publicClassInPrivateModule));
-    privateModule.publicClassExtendingFromPrivateModuleClass = publicClassExtendingFromPrivateModuleClass;
-})(privateModule || (privateModule = {}));
-var publicClass = /** @class */ (function () {
-    function publicClass() {
+    class privateClassInPublicModule {
     }
-    publicClass.prototype.f1 = function () {
-    };
-    return publicClass;
-}());
-exports.publicClass = publicClass;
-var privateClass = /** @class */ (function () {
-    function privateClass() {
+    class privateClassExtendingPublicClassInModule extends publicClassInPublicModule {
     }
-    return privateClass;
-}());
-var privateClassExtendingPublicClass = /** @class */ (function (_super) {
-    __extends(privateClassExtendingPublicClass, _super);
-    function privateClassExtendingPublicClass() {
-        return _super !== null && _super.apply(this, arguments) || this;
+    class privateClassExtendingPrivateClassInModule extends privateClassInPublicModule {
     }
-    return privateClassExtendingPublicClass;
-}(publicClass));
-var privateClassExtendingPrivateClassInModule = /** @class */ (function (_super) {
-    __extends(privateClassExtendingPrivateClassInModule, _super);
-    function privateClassExtendingPrivateClassInModule() {
-        return _super !== null && _super.apply(this, arguments) || this;
+    class publicClassExtendingPublicClassInModule extends publicClassInPublicModule {
     }
-    return privateClassExtendingPrivateClassInModule;
-}(privateClass));
-var publicClassExtendingPublicClass = /** @class */ (function (_super) {
-    __extends(publicClassExtendingPublicClass, _super);
-    function publicClassExtendingPublicClass() {
-        return _super !== null && _super.apply(this, arguments) || this;
+    publicModule.publicClassExtendingPublicClassInModule = publicClassExtendingPublicClassInModule;
+    class publicClassExtendingPrivateClassInModule extends privateClassInPublicModule {
     }
-    return publicClassExtendingPublicClass;
-}(publicClass));
-exports.publicClassExtendingPublicClass = publicClassExtendingPublicClass;
-var publicClassExtendingPrivateClass = /** @class */ (function (_super) {
-    __extends(publicClassExtendingPrivateClass, _super);
-    function publicClassExtendingPrivateClass() {
-        return _super !== null && _super.apply(this, arguments) || this;
+    publicModule.publicClassExtendingPrivateClassInModule = publicClassExtendingPrivateClassInModule;
+    class privateClassExtendingFromPrivateModuleClass extends privateModule.publicClassInPrivateModule {
     }
-    return publicClassExtendingPrivateClass;
-}(privateClass));
-exports.publicClassExtendingPrivateClass = publicClassExtendingPrivateClass;
-var privateClassExtendingFromPrivateModuleClass = /** @class */ (function (_super) {
-    __extends(privateClassExtendingFromPrivateModuleClass, _super);
-    function privateClassExtendingFromPrivateModuleClass() {
-        return _super !== null && _super.apply(this, arguments) || this;
+    class publicClassExtendingFromPrivateModuleClass extends privateModule.publicClassInPrivateModule {
     }
-    return privateClassExtendingFromPrivateModuleClass;
-}(privateModule.publicClassInPrivateModule));
-var publicClassExtendingFromPrivateModuleClass = /** @class */ (function (_super) {
-    __extends(publicClassExtendingFromPrivateModuleClass, _super);
-    function publicClassExtendingFromPrivateModuleClass() {
-        return _super !== null && _super.apply(this, arguments) || this;
-    }
-    return publicClassExtendingFromPrivateModuleClass;
-}(privateModule.publicClassInPrivateModule));
-exports.publicClassExtendingFromPrivateModuleClass = publicClassExtendingFromPrivateModuleClass;
-//// [privacyClassExtendsClauseDeclFile_GlobalFile.js]
-var __extends = (this && this.__extends) || (function () {
-    var extendStatics = function (d, b) {
-        extendStatics = Object.setPrototypeOf ||
-            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
-            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
-        return extendStatics(d, b);
-    };
-    return function (d, b) {
-        if (typeof b !== "function" && b !== null)
-            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
-        extendStatics(d, b);
-        function __() { this.constructor = d; }
-        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
-    };
-})();
-var publicModuleInGlobal;
-(function (publicModuleInGlobal) {
-    var publicClassInPublicModule = /** @class */ (function () {
-        function publicClassInPublicModule() {
+    publicModule.publicClassExtendingFromPrivateModuleClass = publicClassExtendingFromPrivateModuleClass;
+})(publicModule || (exports.publicModule = publicModule = {}));
+var privateModule;
+(function (privateModule) {
+    class publicClassInPrivateModule {
+        f1() {
         }
-        publicClassInPublicModule.prototype.f1 = function () {
-        };
-        return publicClassInPublicModule;
-    }());
-    publicModuleInGlobal.publicClassInPublicModule = publicClassInPublicModule;
-    var privateClassInPublicModule = /** @class */ (function () {
-        function privateClassInPublicModule() {
-        }
-        return privateClassInPublicModule;
-    }());
-    var privateClassExtendingPublicClassInModule = /** @class */ (function (_super) {
-        __extends(privateClassExtendingPublicClassInModule, _super);
-        function privateClassExtendingPublicClassInModule() {
-            return _super !== null && _super.apply(this, arguments) || this;
-        }
-        return privateClassExtendingPublicClassInModule;
-    }(publicClassInPublicModule));
-    var privateClassExtendingPrivateClassInModule = /** @class */ (function (_super) {
-        __extends(privateClassExtendingPrivateClassInModule, _super);
-        function privateClassExtendingPrivateClassInModule() {
-            return _super !== null && _super.apply(this, arguments) || this;
-        }
-        return privateClassExtendingPrivateClassInModule;
-    }(privateClassInPublicModule));
-    var publicClassExtendingPublicClassInModule = /** @class */ (function (_super) {
-        __extends(publicClassExtendingPublicClassInModule, _super);
-        function publicClassExtendingPublicClassInModule() {
-            return _super !== null && _super.apply(this, arguments) || this;
-        }
-        return publicClassExtendingPublicClassInModule;
-    }(publicClassInPublicModule));
-    publicModuleInGlobal.publicClassExtendingPublicClassInModule = publicClassExtendingPublicClassInModule;
-    var publicClassExtendingPrivateClassInModule = /** @class */ (function (_super) {
-        __extends(publicClassExtendingPrivateClassInModule, _super);
-        function publicClassExtendingPrivateClassInModule() {
-            return _super !== null && _super.apply(this, arguments) || this;
-        }
-        return publicClassExtendingPrivateClassInModule;
-    }(privateClassInPublicModule));
-    publicModuleInGlobal.publicClassExtendingPrivateClassInModule = publicClassExtendingPrivateClassInModule;
-})(publicModuleInGlobal || (publicModuleInGlobal = {}));
-var publicClassInGlobal = /** @class */ (function () {
-    function publicClassInGlobal() {
     }
-    return publicClassInGlobal;
-}());
-var publicClassExtendingPublicClassInGlobal = /** @class */ (function (_super) {
-    __extends(publicClassExtendingPublicClassInGlobal, _super);
-    function publicClassExtendingPublicClassInGlobal() {
-        return _super !== null && _super.apply(this, arguments) || this;
+    privateModule.publicClassInPrivateModule = publicClassInPrivateModule;
+    class privateClassInPrivateModule {
     }
-    return publicClassExtendingPublicClassInGlobal;
-}(publicClassInGlobal));
-
-
-//// [privacyClassExtendsClauseDeclFile_externalModule.d.ts]
-export declare namespace publicModule {
-    export class publicClassInPublicModule {
-        private f1;
+    class privateClassExtendingPublicClassInModule extends publicClassInPrivateModule {
     }
-    class privateClassInPublicModule {
+    class privateClassExtendingPrivateClassInModule extends privateClassInPrivateModule {
     }
-    export class publicClassExtendingPublicClassInModule extends publicClassInPublicModule {
+    class publicClassExtendingPublicClassInModule extends publicClassInPrivateModule {
     }
-    export class publicClassExtendingPrivateClassInModule extends privateClassInPublicModule {
+    privateModule.publicClassExtendingPublicClassInModule = publicClassExtendingPublicClassInModule;
+    class publicClassExtendingPrivateClassInModule extends privateClassInPrivateModule {
     }
-    export class publicClassExtendingFromPrivateModuleClass extends privateModule.publicClassInPrivateModule {
+    privateModule.publicClassExtendingPrivateClassInModule = publicClassExtendingPrivateClassInModule;
+    class privateClassExtendingFromPrivateModuleClass extends privateModule.publicClassInPrivateModule {
     }
-    export {};
-}
-declare namespace privateModule {
-    export class publicClassInPrivateModule {
-        private f1;
+    class publicClassExtendingFromPrivateModuleClass extends privateModule.publicClassInPrivateModule {
     }
-    class privateClassInPrivateModule {
+    privateModule.publicClassExtendingFromPrivateModuleClass = publicClassExtendingFromPrivateModuleClass;
+})(privateModule || (privateModule = {}));
+class publicClass {
+    f1() {
     }
-    export class publicClassExtendingPublicClassInModule extends publicClassInPrivateModule {
-    }
-    export class publicClassExtendingPrivateClassInModule extends privateClassInPrivateModule {
-    }
-    export class publicClassExtendingFromPrivateModuleClass extends privateModule.publicClassInPrivateModule {
-    }
-    export {};
 }
-export declare class publicClass {
-    private f1;
+exports.publicClass = publicClass;
+class privateClass {
 }
-declare class privateClass {
+class privateClassExtendingPublicClass extends publicClass {
 }
-export declare class publicClassExtendingPublicClass extends publicClass {
+class privateClassExtendingPrivateClassInModule extends privateClass {
 }
-export declare class publicClassExtendingPrivateClass extends privateClass {
+class publicClassExtendingPublicClass extends publicClass {
 }
-export declare class publicClassExtendingFromPrivateModuleClass extends privateModule.publicClassInPrivateModule {
+exports.publicClassExtendingPublicClass = publicClassExtendingPublicClass;
+class publicClassExtendingPrivateClass extends privateClass {
 }
-export {};
-//// [privacyClassExtendsClauseDeclFile_GlobalFile.d.ts]
-declare namespace publicModuleInGlobal {
-    export class publicClassInPublicModule {
-        private f1;
-    }
-    class privateClassInPublicModule {
-    }
-    export class publicClassExtendingPublicClassInModule extends publicClassInPublicModule {
-    }
-    export class publicClassExtendingPrivateClassInModule extends privateClassInPublicModule {
-    }
-    export {};
+exports.publicClassExtendingPrivateClass = publicClassExtendingPrivateClass;
+class privateClassExtendingFromPrivateModuleClass extends privateModule.publicClassInPrivateModule {
 }
-declare class publicClassInGlobal {
+class publicClassExtendingFromPrivateModuleClass extends privateModule.publicClassInPrivateModule {
 }
-declare class publicClassExtendingPublicClassInGlobal extends publicClassInGlobal {
-}
+exports.publicClassExtendingFromPrivateModuleClass = publicClassExtendingFromPrivateModuleClass;
