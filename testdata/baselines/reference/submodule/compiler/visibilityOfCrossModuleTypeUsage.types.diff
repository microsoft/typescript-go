--- old.visibilityOfCrossModuleTypeUsage.types
+++ new.visibilityOfCrossModuleTypeUsage.types
@@= skipped -11, +11 lines =@@
     var absoluteWorkspacePath = configuration.workspace.toAbsolutePath(configuration.server);
 >absoluteWorkspacePath : string
 >configuration.workspace.toAbsolutePath(configuration.server) : string
->configuration.workspace.toAbsolutePath : (server: import("visibilityOfCrossModuleTypeUsage_server").IServer, workspaceRelativePath?: string) => string
->configuration.workspace : import("visibilityOfCrossModuleTypeUsage_server").IWorkspace
->configuration : commands.IConfiguration
->workspace : import("visibilityOfCrossModuleTypeUsage_server").IWorkspace
->toAbsolutePath : (server: import("visibilityOfCrossModuleTypeUsage_server").IServer, workspaceRelativePath?: string) => string
->configuration.server : import("visibilityOfCrossModuleTypeUsage_server").IServer
->configuration : commands.IConfiguration
->server : import("visibilityOfCrossModuleTypeUsage_server").IServer
+>configuration.workspace.toAbsolutePath : (server: import("./visibilityOfCrossModuleTypeUsage_server").IServer, workspaceRelativePath?: string) => string
+>configuration.workspace : import("./visibilityOfCrossModuleTypeUsage_server").IWorkspace
+>configuration : commands.IConfiguration
+>workspace : import("./visibilityOfCrossModuleTypeUsage_server").IWorkspace
+>toAbsolutePath : (server: import("./visibilityOfCrossModuleTypeUsage_server").IServer, workspaceRelativePath?: string) => string
+>configuration.server : import("./visibilityOfCrossModuleTypeUsage_server").IServer
+>configuration : commands.IConfiguration
+>server : import("./visibilityOfCrossModuleTypeUsage_server").IServer
 }
 === visibilityOfCrossModuleTypeUsage_commands.ts ===
 import fs = require('./visibilityOfCrossModuleTypeUsage_fs');