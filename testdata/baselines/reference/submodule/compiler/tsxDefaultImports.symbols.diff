--- old.tsxDefaultImports.symbols
+++ new.tsxDefaultImports.symbols
@@= skipped -4, +4 lines =@@
 >SomeEnum : Symbol(SomeEnum, Decl(a.ts, 0, 0))
 
   one,
->one : Symbol(SomeEnum.one, Decl(a.ts, 0, 15))
+>one : Symbol(one, Decl(a.ts, 0, 15))
 }
 export default class SomeClass {
->SomeClass : Symbol(SomeClass, Decl(a.ts, 2, 1))
+>SomeClass : Symbol(default, Decl(a.ts, 2, 1))
 
   public static E = SomeEnum;
->E : Symbol(SomeClass.E, Decl(a.ts, 3, 32))
+>E : Symbol(E, Decl(a.ts, 3, 32))
 >SomeEnum : Symbol(SomeEnum, Decl(a.ts, 0, 0))
 }
 
 === b.ts ===
 import {default as Def} from "./a"
->default : Symbol(Def, Decl(a.ts, 2, 1))
+>default : Symbol(default, Decl(a.ts, 2, 1))
 >Def : Symbol(Def, Decl(b.ts, 0, 8))
 
 let a = Def.E.one;
 >a : Symbol(a, Decl(b.ts, 1, 3))
->Def.E.one : Symbol(SomeEnum.one, Decl(a.ts, 0, 15))
->Def.E : Symbol(Def.E, Decl(a.ts, 3, 32))
+>Def.E.one : Symbol(one, Decl(a.ts, 0, 15))
+>Def.E : Symbol(E, Decl(a.ts, 3, 32))
 >Def : Symbol(Def, Decl(b.ts, 0, 8))
->E : Symbol(Def.E, Decl(a.ts, 3, 32))
->one : Symbol(SomeEnum.one, Decl(a.ts, 0, 15))
+>E : Symbol(E, Decl(a.ts, 3, 32))
+>one : Symbol(one, Decl(a.ts, 0, 15))
 
