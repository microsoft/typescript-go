--- old.promisesWithConstraints.symbols
+++ new.promisesWithConstraints.symbols
@@= skipped -1, +1 lines =@@

 === promisesWithConstraints.ts ===
 interface Promise<T> {
->Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(promisesWithConstraints.ts, 0, 0))
->T : Symbol(T, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(promisesWithConstraints.ts, 0, 18))
+>Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(promisesWithConstraints.ts, 0, 0))
+>T : Symbol(T, Decl(lib.es5.d.ts, --, --), Decl(promisesWithConstraints.ts, 0, 18))

     then<U>(cb: (x: T) => Promise<U>): Promise<U>;
 >then : Symbol(Promise.then, Decl(lib.es5.d.ts, --, --), Decl(promisesWithConstraints.ts, 0, 22))
 >U : Symbol(U, Decl(promisesWithConstraints.ts, 1, 9))
 >cb : Symbol(cb, Decl(promisesWithConstraints.ts, 1, 12))
 >x : Symbol(x, Decl(promisesWithConstraints.ts, 1, 17))
->T : Symbol(T, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(promisesWithConstraints.ts, 0, 18))
->Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(promisesWithConstraints.ts, 0, 0))
+>T : Symbol(T, Decl(lib.es5.d.ts, --, --), Decl(promisesWithConstraints.ts, 0, 18))
+>Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(promisesWithConstraints.ts, 0, 0))
 >U : Symbol(U, Decl(promisesWithConstraints.ts, 1, 9))
->Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(promisesWithConstraints.ts, 0, 0))
+>Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(promisesWithConstraints.ts, 0, 0))
 >U : Symbol(U, Decl(promisesWithConstraints.ts, 1, 9))
 }

@@= skipped -27, +27 lines =@@
 >cb : Symbol(cb, Decl(promisesWithConstraints.ts, 5, 32))
 >x : Symbol(x, Decl(promisesWithConstraints.ts, 5, 37))
 >T : Symbol(T, Decl(promisesWithConstraints.ts, 4, 19))
->Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(promisesWithConstraints.ts, 0, 0))
+>Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(promisesWithConstraints.ts, 0, 0))
 >U : Symbol(U, Decl(promisesWithConstraints.ts, 5, 9))
->Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(promisesWithConstraints.ts, 0, 0))
+>Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(promisesWithConstraints.ts, 0, 0))
 >U : Symbol(U, Decl(promisesWithConstraints.ts, 5, 9))
 }

@@= skipped -17, +17 lines =@@

 var a: Promise<Foo>;
 >a : Symbol(a, Decl(promisesWithConstraints.ts, 11, 3))
->Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(promisesWithConstraints.ts, 0, 0))
+>Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(promisesWithConstraints.ts, 0, 0))
 >Foo : Symbol(Foo, Decl(promisesWithConstraints.ts, 6, 1))

 var b: Promise<Bar>;
 >b : Symbol(b, Decl(promisesWithConstraints.ts, 12, 3))
->Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(promisesWithConstraints.ts, 0, 0))
+>Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(promisesWithConstraints.ts, 0, 0))
 >Bar : Symbol(Bar, Decl(promisesWithConstraints.ts, 8, 20))

 a = b; // ok