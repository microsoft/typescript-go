--- old.sourceMapValidationDestructuringForOfObjectBindingPatternDefaultValues2.types
+++ new.sourceMapValidationDestructuringForOfObjectBindingPatternDefaultValues2.types
@@= skipped -1, +1 lines =@@
 
 === sourceMapValidationDestructuringForOfObjectBindingPatternDefaultValues2.ts ===
 declare var console: {
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 
     log(msg: any): void;
 >log : (msg: any) => void
 >msg : any
 }
 interface Robot {
+>Robot : Robot
+
     name: string;
 >name : string
 
@@= skipped -15, +17 lines =@@
 }
 
 interface MultiRobot {
+>MultiRobot : MultiRobot
+
     name: string;
 >name : string
 
@@= skipped -91, +93 lines =@@
     console.log(nameA);
 >console.log(nameA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >nameA : string
 }
@@= skipped -16, +16 lines =@@
     console.log(nameA);
 >console.log(nameA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >nameA : string
 }
@@= skipped -25, +25 lines =@@
     console.log(nameA);
 >console.log(nameA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >nameA : string
 }
@@= skipped -29, +29 lines =@@
     console.log(primaryA);
 >console.log(primaryA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >primaryA : string
 }
@@= skipped -30, +30 lines =@@
     console.log(primaryA);
 >console.log(primaryA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >primaryA : string
 }
@@= skipped -52, +52 lines =@@
     console.log(primaryA);
 >console.log(primaryA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >primaryA : string
 }
 
 for ({ name = "noName" } of robots) {
 >{ name = "noName" } : { name?: string; }
->name : string
+>name : any
 >"noName" : "noName"
 >robots : Robot[]
 
     console.log(nameA);
 >console.log(nameA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >nameA : string
 }
 for ({ name = "noName" } of getRobots()) {
 >{ name = "noName" } : { name?: string; }
->name : string
+>name : any
 >"noName" : "noName"
 >getRobots() : Robot[]
 >getRobots : () => Robot[]
@@= skipped -28, +28 lines =@@
     console.log(nameA);
 >console.log(nameA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >nameA : string
 }
 for ({ name = "noName" } of [{ name: "mower", skill: "mowing" }, { name: "trimmer", skill: "trimming" }]) {
 >{ name = "noName" } : { name?: string; }
->name : string
+>name : any
 >"noName" : "noName"
 >[{ name: "mower", skill: "mowing" }, { name: "trimmer", skill: "trimming" }] : { name: string; skill: string; }[]
 >{ name: "mower", skill: "mowing" } : { name: string; skill: string; }
@@= skipped -23, +23 lines =@@
     console.log(nameA);
 >console.log(nameA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >nameA : string
 }
@@= skipped -13, +13 lines =@@
 >{        primary = "primary",        secondary = "secondary"    } : { primary?: string; secondary?: string; }
 
         primary = "primary",
->primary : string
+>primary : any
 >"primary" : "primary"
 
         secondary = "secondary"
->secondary : string
+>secondary : any
 >"secondary" : "secondary"
 
     } = { primary: "noSkill", secondary: "noSkill" }
@@= skipped -20, +20 lines =@@
     console.log(primaryA);
 >console.log(primaryA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >primaryA : string
 }
@@= skipped -13, +13 lines =@@
 >{        primary = "primary",        secondary = "secondary"    } : { primary?: string; secondary?: string; }
 
         primary = "primary",
->primary : string
+>primary : any
 >"primary" : "primary"
 
         secondary = "secondary"
->secondary : string
+>secondary : any
 >"secondary" : "secondary"
 
     } = { primary: "noSkill", secondary: "noSkill" }
@@= skipped -21, +21 lines =@@
     console.log(primaryA);
 >console.log(primaryA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >primaryA : string
 }
@@= skipped -13, +13 lines =@@
 >{        primary = "primary",        secondary = "secondary"    } : { primary?: string; secondary?: string; }
 
         primary = "primary",
->primary : string
+>primary : any
 >"primary" : "primary"
 
         secondary = "secondary"
->secondary : string
+>secondary : any
 >"secondary" : "secondary"
 
     } = { primary: "noSkill", secondary: "noSkill" }
@@= skipped -40, +40 lines =@@
     console.log(primaryA);
 >console.log(primaryA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >primaryA : string
 }
@@= skipped -21, +21 lines =@@
     console.log(nameA);
 >console.log(nameA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >nameA : string
 }
@@= skipped -20, +20 lines =@@
     console.log(nameA);
 >console.log(nameA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >nameA : string
 }
@@= skipped -29, +29 lines =@@
     console.log(nameA);
 >console.log(nameA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >nameA : string
 }
@@= skipped -43, +43 lines =@@
     console.log(nameA);
 >console.log(nameA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >nameA : string
 }
@@= skipped -44, +44 lines =@@
     console.log(nameA);
 >console.log(nameA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >nameA : string
 }
@@= skipped -64, +64 lines =@@
     console.log(nameA);
 >console.log(nameA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >nameA : string
 }
 
 for ({ name = "noName", skill  = "noSkill" } of robots) {
 >{ name = "noName", skill  = "noSkill" } : { name?: string; skill?: string; }
->name : string
+>name : any
 >"noName" : "noName"
->skill : string
+>skill : any
 >"noSkill" : "noSkill"
 >robots : Robot[]
 
     console.log(nameA);
 >console.log(nameA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >nameA : string
 }
 for ({ name = "noName", skill = "noSkill"  } of getRobots()) {
 >{ name = "noName", skill = "noSkill"  } : { name?: string; skill?: string; }
->name : string
+>name : any
 >"noName" : "noName"
->skill : string
+>skill : any
 >"noSkill" : "noSkill"
 >getRobots() : Robot[]
 >getRobots : () => Robot[]
@@= skipped -32, +32 lines =@@
     console.log(nameA);
 >console.log(nameA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >nameA : string
 }
 for ({ name = "noName", skill  = "noSkill" } of [{ name: "mower", skill: "mowing" }, { name: "trimmer", skill: "trimming" }]) {
 >{ name = "noName", skill  = "noSkill" } : { name?: string; skill?: string; }
->name : string
+>name : any
 >"noName" : "noName"
->skill : string
+>skill : any
 >"noSkill" : "noSkill"
 >[{ name: "mower", skill: "mowing" }, { name: "trimmer", skill: "trimming" }] : { name: string; skill: string; }[]
 >{ name: "mower", skill: "mowing" } : { name: string; skill: string; }
@@= skipped -25, +25 lines =@@
     console.log(nameA);
 >console.log(nameA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >nameA : string
 }
@@= skipped -8, +8 lines =@@
 >{    name = "noName",    skills: {        primary = "primary",        secondary = "secondary"    } = { primary: "noSkill", secondary: "noSkill" }} : { name?: string; skills?: { primary?: string; secondary?: string; }; }
 
     name = "noName",
->name : string
+>name : any
 >"noName" : "noName"
 
     skills: {
@@= skipped -9, +9 lines =@@
 >{        primary = "primary",        secondary = "secondary"    } : { primary?: string; secondary?: string; }
 
         primary = "primary",
->primary : string
+>primary : any
 >"primary" : "primary"
 
         secondary = "secondary"
->secondary : string
+>secondary : any
 >"secondary" : "secondary"
 
     } = { primary: "noSkill", secondary: "noSkill" }
@@= skipped -20, +20 lines =@@
     console.log(nameA);
 >console.log(nameA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >nameA : string
 }
@@= skipped -8, +8 lines =@@
 >{    name = "noName",    skills: {        primary = "primary",        secondary = "secondary"    } = { primary: "noSkill", secondary: "noSkill" }} : { name?: string; skills?: { primary?: string; secondary?: string; }; }
 
     name = "noName",
->name : string
+>name : any
 >"noName" : "noName"
 
     skills: {
@@= skipped -9, +9 lines =@@
 >{        primary = "primary",        secondary = "secondary"    } : { primary?: string; secondary?: string; }
 
         primary = "primary",
->primary : string
+>primary : any
 >"primary" : "primary"
 
         secondary = "secondary"
->secondary : string
+>secondary : any
 >"secondary" : "secondary"
 
     } = { primary: "noSkill", secondary: "noSkill" }
@@= skipped -21, +21 lines =@@
     console.log(nameA);
 >console.log(nameA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >nameA : string
 }
@@= skipped -8, +8 lines =@@
 >{    name = "noName",    skills: {        primary = "primary",        secondary = "secondary"    } = { primary: "noSkill", secondary: "noSkill" }} : { name?: string; skills?: { primary?: string; secondary?: string; }; }
 
     name = "noName",
->name : string
+>name : any
 >"noName" : "noName"
 
     skills: {
@@= skipped -9, +9 lines =@@
 >{        primary = "primary",        secondary = "secondary"    } : { primary?: string; secondary?: string; }
 
         primary = "primary",
->primary : string
+>primary : any
 >"primary" : "primary"
 
         secondary = "secondary"
->secondary : string
+>secondary : any
 >"secondary" : "secondary"
 
     } = { primary: "noSkill", secondary: "noSkill" }
@@= skipped -40, +40 lines =@@
     console.log(nameA);
 >console.log(nameA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >nameA : string
 }
