--- old.jsxViaImport.types
+++ new.jsxViaImport.types
@@= skipped -2, +2 lines =@@
 === consumer.tsx ===
 /// <reference path="component.d.ts" />
 import BaseComponent = require('BaseComponent');
->BaseComponent : React.Component<any, {}>
+>BaseComponent : Component<any, {}>
 
 class TestComponent extends React.Component<any, {}> {
 >TestComponent : TestComponent
->React.Component : React.Component<any, {}>
+>React.Component : Component<any, {}>
 >React : typeof React
->Component : typeof React.Component
+>Component : typeof Component
 
     render() {
 >render : () => any
 
         return <BaseComponent />;
 ><BaseComponent /> : any
->BaseComponent : React.Component<any, {}>
+>BaseComponent : Component<any, {}>
     }
 }
 
 === component.d.ts ===
 declare module JSX {
+>JSX : any
+
   interface ElementAttributesProperty { props; }
+>ElementAttributesProperty : ElementAttributesProperty
 >props : any
 }
 declare module React {
@@= skipped -27, +30 lines =@@
 
   class Component<T, U> { }
 >Component : Component<T, U>
+>T : T
+>U : U
 }
 declare module "BaseComponent" {
 >"BaseComponent" : typeof import("BaseComponent")
 
     var base: React.Component<any, {}>;
->base : React.Component<any, {}>
+>base : Component<any, {}>
 >React : any
 
     export = base;
->base : React.Component<any, {}>
+>base : Component<any, {}>
 }
 
