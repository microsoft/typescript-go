--- old.implicitAnyGetAndSetAccessorWithAnyReturnType.js
+++ new.implicitAnyGetAndSetAccessorWithAnyReturnType.js
@@= skipped -26, +26 lines =@@

 //// [implicitAnyGetAndSetAccessorWithAnyReturnType.js]
 // these should be errors
-var GetAndSet = /** @class */ (function () {
-    function GetAndSet() {
-        this.getAndSet = null; // error at "getAndSet"
-    }
-    Object.defineProperty(GetAndSet.prototype, "haveGetAndSet", {
-        get: function () {
-            return this.getAndSet;
-        },
-        // this shouldn't be an error
-        set: function (value) {
-            this.getAndSet = value;
-        },
-        enumerable: false,
-        configurable: true
-    });
-    return GetAndSet;
-}());
-var SetterOnly = /** @class */ (function () {
-    function SetterOnly() {
-    }
-    Object.defineProperty(SetterOnly.prototype, "haveOnlySet", {
-        set: function (newXValue) {
-        },
-        enumerable: false,
-        configurable: true
-    });
-    return SetterOnly;
-}());
-var GetterOnly = /** @class */ (function () {
-    function GetterOnly() {
-    }
-    Object.defineProperty(GetterOnly.prototype, "haveOnlyGet", {
-        get: function () {
-            return null;
-        },
-        enumerable: false,
-        configurable: true
-    });
-    return GetterOnly;
-}());
+class GetAndSet {
+    getAndSet = null; // error at "getAndSet"
+    get haveGetAndSet() {
+        return this.getAndSet;
+    }
+    // this shouldn't be an error
+    set haveGetAndSet(value) {
+        this.getAndSet = value;
+    }
+}
+class SetterOnly {
+    set haveOnlySet(newXValue) {
+    }
+}
+class GetterOnly {
+    get haveOnlyGet() {
+        return null;
+    }
+}