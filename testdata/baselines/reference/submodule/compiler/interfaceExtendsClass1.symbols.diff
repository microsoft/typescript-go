--- old.interfaceExtendsClass1.symbols
+++ new.interfaceExtendsClass1.symbols
@@= skipped -4, +4 lines =@@
 >Control : Symbol(Control, Decl(interfaceExtendsClass1.ts, 0, 0))
 
     private state: any;
->state : Symbol(Control.state, Decl(interfaceExtendsClass1.ts, 0, 15))
+>state : Symbol(state, Decl(interfaceExtendsClass1.ts, 0, 15))
 }
 interface SelectableControl extends Control {
 >SelectableControl : Symbol(SelectableControl, Decl(interfaceExtendsClass1.ts, 2, 1))
 >Control : Symbol(Control, Decl(interfaceExtendsClass1.ts, 0, 0))
 
     select(): void;
->select : Symbol(SelectableControl.select, Decl(interfaceExtendsClass1.ts, 3, 45))
+>select : Symbol(select, Decl(interfaceExtendsClass1.ts, 3, 45))
 }
 class Button extends Control {
 >Button : Symbol(Button, Decl(interfaceExtendsClass1.ts, 5, 1))
 >Control : Symbol(Control, Decl(interfaceExtendsClass1.ts, 0, 0))
 
     select() { }
->select : Symbol(Button.select, Decl(interfaceExtendsClass1.ts, 6, 30))
+>select : Symbol(select, Decl(interfaceExtendsClass1.ts, 6, 30))
 }
 class TextBox extends Control {
 >TextBox : Symbol(TextBox, Decl(interfaceExtendsClass1.ts, 8, 1))
 >Control : Symbol(Control, Decl(interfaceExtendsClass1.ts, 0, 0))
 
     select() { }
->select : Symbol(TextBox.select, Decl(interfaceExtendsClass1.ts, 9, 31))
+>select : Symbol(select, Decl(interfaceExtendsClass1.ts, 9, 31))
 }
 class Image extends Control {
 >Image : Symbol(Image, Decl(interfaceExtendsClass1.ts, 11, 1))
@@= skipped -31, +31 lines =@@
 >Location : Symbol(Location, Decl(interfaceExtendsClass1.ts, 13, 1))
 
     select() { }
->select : Symbol(Location.select, Decl(interfaceExtendsClass1.ts, 14, 16))
+>select : Symbol(select, Decl(interfaceExtendsClass1.ts, 14, 16))
 }
 
