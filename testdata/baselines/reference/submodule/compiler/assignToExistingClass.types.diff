--- old.assignToExistingClass.types
+++ new.assignToExistingClass.types
@@= skipped -17, +17 lines =@@
 >willThrowError : () => void
 
             Mocked = Mocked || function () { // => Error: Invalid left-hand side of assignment expression.
->Mocked = Mocked || function () { // => Error: Invalid left-hand side of assignment expression.                return { myProp: "test" };            } : typeof Mocked | (() => { myProp: string; })
+>Mocked = Mocked || function () { // => Error: Invalid left-hand side of assignment expression.                return { myProp: "test" };            } : typeof Mocked | () => { myProp: string; }
 >Mocked : any
->Mocked || function () { // => Error: Invalid left-hand side of assignment expression.                return { myProp: "test" };            } : typeof Mocked | (() => { myProp: string; })
+>Mocked || function () { // => Error: Invalid left-hand side of assignment expression.                return { myProp: "test" };            } : typeof Mocked | () => { myProp: string; }
 >Mocked : typeof Mocked
 >function () { // => Error: Invalid left-hand side of assignment expression.                return { myProp: "test" };            } : () => { myProp: string; }
 
