--- old.constantOverloadFunctionNoSubtypeError.symbols
+++ new.constantOverloadFunctionNoSubtypeError.symbols
@@= skipped -2, +2 lines =@@
 === constantOverloadFunctionNoSubtypeError.ts ===
 class Base { foo() { } }
 >Base : Symbol(Base, Decl(constantOverloadFunctionNoSubtypeError.ts, 0, 0))
->foo : Symbol(Base.foo, Decl(constantOverloadFunctionNoSubtypeError.ts, 0, 12))
+>foo : Symbol(foo, Decl(constantOverloadFunctionNoSubtypeError.ts, 0, 12))
 
 class Derived1 extends Base { bar() { } }
 >Derived1 : Symbol(Derived1, Decl(constantOverloadFunctionNoSubtypeError.ts, 0, 24))
 >Base : Symbol(Base, Decl(constantOverloadFunctionNoSubtypeError.ts, 0, 0))
->bar : Symbol(Derived1.bar, Decl(constantOverloadFunctionNoSubtypeError.ts, 1, 29))
+>bar : Symbol(bar, Decl(constantOverloadFunctionNoSubtypeError.ts, 1, 29))
 
 class Derived2 extends Base { baz() { } }
 >Derived2 : Symbol(Derived2, Decl(constantOverloadFunctionNoSubtypeError.ts, 1, 41))
 >Base : Symbol(Base, Decl(constantOverloadFunctionNoSubtypeError.ts, 0, 0))
->baz : Symbol(Derived2.baz, Decl(constantOverloadFunctionNoSubtypeError.ts, 2, 29))
+>baz : Symbol(baz, Decl(constantOverloadFunctionNoSubtypeError.ts, 2, 29))
 
 class Derived3 extends Base { biz() { } }
 >Derived3 : Symbol(Derived3, Decl(constantOverloadFunctionNoSubtypeError.ts, 2, 41))
 >Base : Symbol(Base, Decl(constantOverloadFunctionNoSubtypeError.ts, 0, 0))
->biz : Symbol(Derived3.biz, Decl(constantOverloadFunctionNoSubtypeError.ts, 3, 29))
+>biz : Symbol(biz, Decl(constantOverloadFunctionNoSubtypeError.ts, 3, 29))
 
 function foo(tagName: 'canvas'): Derived3;
 >foo : Symbol(foo, Decl(constantOverloadFunctionNoSubtypeError.ts, 3, 41), Decl(constantOverloadFunctionNoSubtypeError.ts, 5, 42), Decl(constantOverloadFunctionNoSubtypeError.ts, 6, 40), Decl(constantOverloadFunctionNoSubtypeError.ts, 7, 40), Decl(constantOverloadFunctionNoSubtypeError.ts, 8, 36))
