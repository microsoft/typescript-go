--- old.sourceMapValidationDestructuringParameterObjectBindingPatternDefaultValues.types
+++ new.sourceMapValidationDestructuringParameterObjectBindingPatternDefaultValues.types
@@= skipped -27, +27 lines =@@
 >"mowing" : "mowing"

 function foo1({ name: nameA = "<NoName>" }: Robot = { }) {
->foo1 : ({ name: nameA }?: Robot) => void
+>foo1 : ({ name: nameA = "<NoName>" }?: Robot) => void
 >name : any
 >nameA : string
 >"<NoName>" : "<NoName>"
@@= skipped -14, +14 lines =@@
 >nameA : string
 }
 function foo2({ name: nameB = "<NoName>", skill: skillB = "noSkill" }: Robot = {}) {
->foo2 : ({ name: nameB, skill: skillB }?: Robot) => void
+>foo2 : ({ name: nameB = "<NoName>", skill: skillB = "noSkill" }?: Robot) => void
 >name : any
 >nameB : string
 >"<NoName>" : "<NoName>"
@@= skipped -17, +17 lines =@@
 >nameB : string
 }
 function foo3({ name = "<NoName>" }: Robot = {}) {
->foo3 : ({ name }?: Robot) => void
+>foo3 : ({ name = "<NoName>" }?: Robot) => void
 >name : string
 >"<NoName>" : "<NoName>"
 >{} : {}
@@= skipped -15, +15 lines =@@

 foo1(robotA);
 >foo1(robotA) : void
->foo1 : ({ name: nameA }?: Robot) => void
+>foo1 : ({ name: nameA = "<NoName>" }?: Robot) => void
 >robotA : Robot

 foo1({ name: "Edger", skill: "cutting edges" });
 >foo1({ name: "Edger", skill: "cutting edges" }) : void
->foo1 : ({ name: nameA }?: Robot) => void
+>foo1 : ({ name: nameA = "<NoName>" }?: Robot) => void
 >{ name: "Edger", skill: "cutting edges" } : { name: string; skill: string; }
 >name : string
 >"Edger" : "Edger"
@@= skipped -14, +14 lines =@@

 foo2(robotA);
 >foo2(robotA) : void
->foo2 : ({ name: nameB, skill: skillB }?: Robot) => void
+>foo2 : ({ name: nameB = "<NoName>", skill: skillB = "noSkill" }?: Robot) => void
 >robotA : Robot

 foo2({ name: "Edger", skill: "cutting edges" });
 >foo2({ name: "Edger", skill: "cutting edges" }) : void
->foo2 : ({ name: nameB, skill: skillB }?: Robot) => void
+>foo2 : ({ name: nameB = "<NoName>", skill: skillB = "noSkill" }?: Robot) => void
 >{ name: "Edger", skill: "cutting edges" } : { name: string; skill: string; }
 >name : string
 >"Edger" : "Edger"
@@= skipped -14, +14 lines =@@

 foo3(robotA);
 >foo3(robotA) : void
->foo3 : ({ name }?: Robot) => void
+>foo3 : ({ name = "<NoName>" }?: Robot) => void
 >robotA : Robot

 foo3({ name: "Edger", skill: "cutting edges" });
 >foo3({ name: "Edger", skill: "cutting edges" }) : void
->foo3 : ({ name }?: Robot) => void
+>foo3 : ({ name = "<NoName>" }?: Robot) => void
 >{ name: "Edger", skill: "cutting edges" } : { name: string; skill: string; }
 >name : string
 >"Edger" : "Edger"