--- old.duplicateObjectLiteralProperty_computedName2.types
+++ new.duplicateObjectLiteralProperty_computedName2.types
@@= skipped -9, +9 lines =@@
 >"s" : "s"
 
 enum E1 { A = "ENUM_KEY" }
->E1 : E1
+>E1 : E1.A
 >A : E1.A
 >"ENUM_KEY" : "ENUM_KEY"
 
 enum E2 { B }
->E2 : E2
+>E2 : E2.B
 >B : E2.B
 
 const t1 = {
->t1 : { 1: number; }
->{    [n]: 1,    [n]: 1, // duplicate} : { 1: number; }
+>t1 : { [n]: number; }
+>{    [n]: 1,    [n]: 1, // duplicate} : { [n]: number; }
 
     [n]: 1,
 >[n] : number
@@= skipped -44, +44 lines =@@
 
     [E1.A]: 1,
 >[E1.A] : number
->E1.A : E1
+>E1.A : E1.A
 >E1 : typeof E1
->A : E1
+>A : E1.A
 >1 : 1
 
     [E1.A]: 1, // duplicate
 >[E1.A] : number
->E1.A : E1
+>E1.A : E1.A
 >E1 : typeof E1
->A : E1
+>A : E1.A
 >1 : 1
 }
 
 const t4 = {
->t4 : { 0: number; }
->{    [E2.B]: 1,    [E2.B]: 1, // duplicate} : { 0: number; }
+>t4 : { [E2.B]: number; }
+>{    [E2.B]: 1,    [E2.B]: 1, // duplicate} : { [E2.B]: number; }
 
     [E2.B]: 1,
 >[E2.B] : number
->E2.B : E2
+>E2.B : E2.B
 >E2 : typeof E2
->B : E2
+>B : E2.B
 >1 : 1
 
     [E2.B]: 1, // duplicate
 >[E2.B] : number
->E2.B : E2
+>E2.B : E2.B
 >E2 : typeof E2
->B : E2
+>B : E2.B
 >1 : 1
 }
 
