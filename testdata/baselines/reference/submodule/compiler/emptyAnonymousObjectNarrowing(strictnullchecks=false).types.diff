--- old.emptyAnonymousObjectNarrowing(strictnullchecks=false).types
+++ new.emptyAnonymousObjectNarrowing(strictnullchecks=false).types
@@= skipped -35, +35 lines =@@
 
 function f1<T>(x: T) {
 >f1 : <T>(x: T) => void
+>T : T
 >x : T
 
   if (nonNull === x) {
@@= skipped -18, +19 lines =@@
 
 function f2<T extends object>(x: T) {
 >f2 : <T extends object>(x: T) => void
+>T : T
 >x : T
 
   if (nonNull === x) {
@@= skipped -17, +18 lines =@@
 }
 
 declare let union: "xyz" | { a: string } | undefined;
->union : { a: string; } | "xyz"
+>union : "xyz" | { a: string; }
 >a : string
 
 if (nonNull === union) {
 >nonNull === union : boolean
 >nonNull : {}
->union : { a: string; } | "xyz"
+>union : "xyz" | { a: string; }
 
   nonNull;
 >nonNull : {}
