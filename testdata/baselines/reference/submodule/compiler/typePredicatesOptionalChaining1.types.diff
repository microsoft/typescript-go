--- old.typePredicatesOptionalChaining1.types
+++ new.typePredicatesOptionalChaining1.types
@@= skipped -4, +4 lines =@@
 >X : X
 
   y?: {
->y : { z?: string; } | undefined
+>y : { z?: string | undefined; } | undefined
 
     z?: string;
 >z : string | undefined
@@= skipped -19, +19 lines =@@
 // type guard
 function isNotNull<A>(x: A): x is NonNullable<A> {
 >isNotNull : <A>(x: A) => x is NonNullable<A>
+>A : A
 >x : A
 
   return x !== null && x !== undefined;
@@= skipped -33, +34 lines =@@
 >isNotNull(x?.y?.z) : boolean
 >isNotNull : <A>(x: A) => x is NonNullable<A>
 >x?.y?.z : string | undefined
->x?.y : { z?: string; } | undefined
+>x?.y : { z?: string | undefined; } | undefined
 >x : X
->y : { z?: string; } | undefined
+>y : { z?: string | undefined; } | undefined
 >z : string | undefined
 >title(x.y.z) : string
 >title : (str: string) => string
 >x.y.z : string
->x.y : { z?: string; }
+>x.y : { z?: string | undefined; }
 >x : X
->y : { z?: string; }
+>y : { z?: string | undefined; }
 >z : string
 
