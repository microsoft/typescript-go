--- old.declFileGenericType.js
+++ new.declFileGenericType.js
@@= skipped -42, +42 lines =@@

 //// [declFileGenericType.js]
 "use strict";
-var __extends = (this && this.__extends) || (function () {
-    var extendStatics = function (d, b) {
-        extendStatics = Object.setPrototypeOf ||
-            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
-            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
-        return extendStatics(d, b);
-    };
-    return function (d, b) {
-        if (typeof b !== "function" && b !== null)
-            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
-        extendStatics(d, b);
-        function __() { this.constructor = d; }
-        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
-    };
-})();
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.j = exports.h = exports.g = exports.x = exports.e = exports.d = exports.c = exports.b = exports.a = exports.C = void 0;
 exports.f = f;
 var C;
 (function (C) {
-    var A = /** @class */ (function () {
-        function A() {
-        }
-        return A;
-    }());
+    class A {
+    }
     C.A = A;
-    var B = /** @class */ (function () {
-        function B() {
-        }
-        return B;
-    }());
+    class B {
+    }
     C.B = B;
     function F(x) { return null; }
     C.F = F;
@@= skipped -44, +23 lines =@@
     C.F5 = F5;
     function F6(x) { return null; }
     C.F6 = F6;
-    var D = /** @class */ (function () {
-        function D(val) {
+    class D {
+        val;
+        constructor(val) {
             this.val = val;
         }
-        return D;
-    }());
+    }
     C.D = D;
 })(C || (exports.C = C = {}));
 exports.b = C.F;
@@= skipped -15, +15 lines =@@
 exports.x = (new C.D(new C.A())).val;
 function f() { }
 exports.g = C.F5();
-var h = /** @class */ (function (_super) {
-    __extends(h, _super);
-    function h() {
-        return _super !== null && _super.apply(this, arguments) || this;
-    }
-    return h;
-}(C.A));
+class h extends C.A {
+}
 exports.h = h;
 exports.j = C.F6;
