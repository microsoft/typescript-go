--- old.jsxEmitWithAttributes.errors.txt
+++ new.jsxEmitWithAttributes.errors.txt
@@= skipped -0, +-1 lines =@@
-<no content>
@@= skipped --1, +1 lines =@@
+error TS2318: Cannot find global type 'Array'.
+error TS2318: Cannot find global type 'Function'.
+error TS2318: Cannot find global type 'IArguments'.
+error TS2318: Cannot find global type 'RegExp'.
+error TS2318: Cannot find global type 'String'.
+error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
+error TS2552: Cannot find name 'Number'. Did you mean 'number'?
+error TS2552: Cannot find name 'Object'. Did you mean 'object'?
+Element.ts(28,41): error TS2339: Property 'substring' does not exist on type 'string'.
+
+
+!!! error TS2318: Cannot find global type 'Array'.
+!!! error TS2318: Cannot find global type 'Function'.
+!!! error TS2318: Cannot find global type 'IArguments'.
+!!! error TS2318: Cannot find global type 'RegExp'.
+!!! error TS2318: Cannot find global type 'String'.
+!!! error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
+!!! error TS2552: Cannot find name 'Number'. Did you mean 'number'?
+!!! error TS2552: Cannot find name 'Object'. Did you mean 'object'?
+==== Element.ts (1 errors) ====
+    declare namespace JSX {
+        interface Element {
+            name: string;
+            isIntrinsic: boolean;
+            isCustomElement: boolean;
+            toString(renderId?: number): string;
+            bindDOM(renderId?: number): number;
+            resetComponent(): void;
+            instantiateComponents(renderId?: number): number;
+            props: any;
+        }
+    }
+    export namespace Element {
+        export function isElement(el: any): el is JSX.Element {
+            return el.markAsChildOfRootElement !== undefined;
+        }
+    
+        export function createElement(args: any[]) {
+    
+            return {
+            }
+        }
+    }
+    
+    export let createElement = Element.createElement;
+    
+    function toCamelCase(text: string): string {
+        return text[0].toLowerCase() + text.substring(1);
+                                            ~~~~~~~~~
+!!! error TS2339: Property 'substring' does not exist on type 'string'.
+    }
+    
+==== test.tsx (0 errors) ====
+    import { Element} from './Element';
+    
+    let c: {
+    	a?: {
+    		b: string
+    	}
+    };
+    
+    class A {
+    	view() {
+    		return [
+    			<meta content="helloworld"></meta>,
+    			<meta content={c.a!.b}></meta>
+    		];
+    	}
+    }
