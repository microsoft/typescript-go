--- old.jsxComplexSignatureHasApplicabilityError.types
+++ new.jsxComplexSignatureHasApplicabilityError.types
@@= skipped -62, +62 lines =@@
 >false : false

                 value={props.value}
->value : ExtractValueType<WrappedProps> | Option<ExtractValueType<WrappedProps>> | undefined
->props.value : ExtractValueType<WrappedProps> | Option<ExtractValueType<WrappedProps>> | undefined
+>value : Option<ExtractValueType<WrappedProps>> | ExtractValueType<WrappedProps> | undefined
+>props.value : Option<ExtractValueType<WrappedProps>> | ExtractValueType<WrappedProps> | undefined
 >props : Omit<Omit<WrappedProps, "multi">, keyof Omit<WrappedProps, "multi"> & keyof Props<ExtractValueType<WrappedProps_1>>> & Props<ExtractValueType<WrappedProps>> & { children?: React.ReactNode; }
->value : ExtractValueType<WrappedProps> | Option<ExtractValueType<WrappedProps>> | undefined
+>value : Option<ExtractValueType<WrappedProps>> | ExtractValueType<WrappedProps> | undefined

                 onChange={(value) => {
 >onChange : (value: Option<ExtractValueType<WrappedProps>> | Options<ExtractValueType<WrappedProps>> | null) => void
@@= skipped -874, +874 lines =@@
      * initial field value
      */
     value?: Option<TValue> | Options<TValue> | string | string[] | number | number[] | boolean;
->value : string | number | boolean | Option<TValue> | Options<TValue> | string[] | number[] | undefined
+>value : string | number | boolean | string[] | number[] | Option<TValue> | Options<TValue> | undefined

     /**
      * the option property to use for the value