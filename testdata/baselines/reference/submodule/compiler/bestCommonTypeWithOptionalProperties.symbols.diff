--- old.bestCommonTypeWithOptionalProperties.symbols
+++ new.bestCommonTypeWithOptionalProperties.symbols
@@= skipped -2, +2 lines =@@
 === bestCommonTypeWithOptionalProperties.ts ===
 interface X { foo: string }
 >X : Symbol(X, Decl(bestCommonTypeWithOptionalProperties.ts, 0, 0))
->foo : Symbol(X.foo, Decl(bestCommonTypeWithOptionalProperties.ts, 0, 13))
+>foo : Symbol(foo, Decl(bestCommonTypeWithOptionalProperties.ts, 0, 13))
 
 interface Y extends X { bar?: number }
 >Y : Symbol(Y, Decl(bestCommonTypeWithOptionalProperties.ts, 0, 27))
 >X : Symbol(X, Decl(bestCommonTypeWithOptionalProperties.ts, 0, 0))
->bar : Symbol(Y.bar, Decl(bestCommonTypeWithOptionalProperties.ts, 1, 23))
+>bar : Symbol(bar, Decl(bestCommonTypeWithOptionalProperties.ts, 1, 23))
 
 interface Z extends X { bar: string }
 >Z : Symbol(Z, Decl(bestCommonTypeWithOptionalProperties.ts, 1, 38))
 >X : Symbol(X, Decl(bestCommonTypeWithOptionalProperties.ts, 0, 0))
->bar : Symbol(Z.bar, Decl(bestCommonTypeWithOptionalProperties.ts, 2, 23))
+>bar : Symbol(bar, Decl(bestCommonTypeWithOptionalProperties.ts, 2, 23))
 
 var x: X;
 >x : Symbol(x, Decl(bestCommonTypeWithOptionalProperties.ts, 4, 3))
