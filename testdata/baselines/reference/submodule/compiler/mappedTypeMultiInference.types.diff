--- old.mappedTypeMultiInference.types
+++ new.mappedTypeMultiInference.types
@@= skipped -1, +1 lines =@@
 
 === mappedTypeMultiInference.ts ===
 interface Style {
+>Style : Style
+
     flashy: any;
 >flashy : any
 }
 
 declare function mergeStyleSets<K extends string>(
->mergeStyleSets : <K extends string>(...cssSets: { [P in K]?: Style; }[]) => { [P in K]: Style; }
+>mergeStyleSets : <K extends string>(...cssSets: { [P in K]?: Style }[]) => { [P in K]: Style }
+>K : K
 
     ...cssSets: { [P in K]?: Style }[]): { [P in K]: Style };
->cssSets : { [P in K]?: Style; }[]
+>cssSets : { [P in K]?: Style }[]
+>P : P
+>P : P
 
 // Expected:
 //   let x: {
@@= skipped -18, +23 lines =@@
 let x = mergeStyleSets(
 >x : { a: Style; b: Style; }
 >mergeStyleSets(    {},    {        a: { flashy: true },    },    {        b: { flashy: true },    },) : { a: Style; b: Style; }
->mergeStyleSets : <K extends string>(...cssSets: { [P in K]?: Style; }[]) => { [P in K]: Style; }
+>mergeStyleSets : <K extends string>(...cssSets: { [P in K]?: Style }[]) => { [P in K]: Style }
 
     {},
 >{} : {}
