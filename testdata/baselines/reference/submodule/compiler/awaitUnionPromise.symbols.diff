--- old.awaitUnionPromise.symbols
+++ new.awaitUnionPromise.symbols
@@= skipped -10, +10 lines =@@
 >T : Symbol(T, Decl(awaitUnionPromise.ts, 4, 27))
 
     next1(): Promise<T | AsyncEnumeratorDone>;
->next1 : Symbol(IAsyncEnumerator.next1, Decl(awaitUnionPromise.ts, 4, 31))
->Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>next1 : Symbol(next1, Decl(awaitUnionPromise.ts, 4, 31))
+>Promise : Symbol(Promise)
 >T : Symbol(T, Decl(awaitUnionPromise.ts, 4, 27))
 >AsyncEnumeratorDone : Symbol(AsyncEnumeratorDone, Decl(awaitUnionPromise.ts, 0, 0))
 
     next2(): Promise<T> | Promise<AsyncEnumeratorDone>;
->next2 : Symbol(IAsyncEnumerator.next2, Decl(awaitUnionPromise.ts, 5, 46))
->Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>next2 : Symbol(next2, Decl(awaitUnionPromise.ts, 5, 46))
+>Promise : Symbol(Promise)
 >T : Symbol(T, Decl(awaitUnionPromise.ts, 4, 27))
->Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>Promise : Symbol(Promise)
 >AsyncEnumeratorDone : Symbol(AsyncEnumeratorDone, Decl(awaitUnionPromise.ts, 0, 0))
 
     next3(): Promise<T | {}>;
->next3 : Symbol(IAsyncEnumerator.next3, Decl(awaitUnionPromise.ts, 6, 55))
->Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>next3 : Symbol(next3, Decl(awaitUnionPromise.ts, 6, 55))
+>Promise : Symbol(Promise)
 >T : Symbol(T, Decl(awaitUnionPromise.ts, 4, 27))
 
     next4(): Promise<T | { x: string }>;
->next4 : Symbol(IAsyncEnumerator.next4, Decl(awaitUnionPromise.ts, 7, 29))
->Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>next4 : Symbol(next4, Decl(awaitUnionPromise.ts, 7, 29))
+>Promise : Symbol(Promise)
 >T : Symbol(T, Decl(awaitUnionPromise.ts, 4, 27))
 >x : Symbol(x, Decl(awaitUnionPromise.ts, 8, 26))
 }
@@= skipped -33, +33 lines =@@
 
     let a = await x.next1();
 >a : Symbol(a, Decl(awaitUnionPromise.ts, 13, 7))
->x.next1 : Symbol(IAsyncEnumerator.next1, Decl(awaitUnionPromise.ts, 4, 31))
+>x.next1 : Symbol(next1, Decl(awaitUnionPromise.ts, 4, 31))
 >x : Symbol(x, Decl(awaitUnionPromise.ts, 12, 9))
->next1 : Symbol(IAsyncEnumerator.next1, Decl(awaitUnionPromise.ts, 4, 31))
+>next1 : Symbol(next1, Decl(awaitUnionPromise.ts, 4, 31))
 
     let b = await x.next2();
 >b : Symbol(b, Decl(awaitUnionPromise.ts, 14, 7))
->x.next2 : Symbol(IAsyncEnumerator.next2, Decl(awaitUnionPromise.ts, 5, 46))
+>x.next2 : Symbol(next2, Decl(awaitUnionPromise.ts, 5, 46))
 >x : Symbol(x, Decl(awaitUnionPromise.ts, 12, 9))
->next2 : Symbol(IAsyncEnumerator.next2, Decl(awaitUnionPromise.ts, 5, 46))
+>next2 : Symbol(next2, Decl(awaitUnionPromise.ts, 5, 46))
 
     let c = await x.next3();
 >c : Symbol(c, Decl(awaitUnionPromise.ts, 15, 7))
->x.next3 : Symbol(IAsyncEnumerator.next3, Decl(awaitUnionPromise.ts, 6, 55))
+>x.next3 : Symbol(next3, Decl(awaitUnionPromise.ts, 6, 55))
 >x : Symbol(x, Decl(awaitUnionPromise.ts, 12, 9))
->next3 : Symbol(IAsyncEnumerator.next3, Decl(awaitUnionPromise.ts, 6, 55))
+>next3 : Symbol(next3, Decl(awaitUnionPromise.ts, 6, 55))
 
     let d = await x.next4();
 >d : Symbol(d, Decl(awaitUnionPromise.ts, 16, 7))
->x.next4 : Symbol(IAsyncEnumerator.next4, Decl(awaitUnionPromise.ts, 7, 29))
+>x.next4 : Symbol(next4, Decl(awaitUnionPromise.ts, 7, 29))
 >x : Symbol(x, Decl(awaitUnionPromise.ts, 12, 9))
->next4 : Symbol(IAsyncEnumerator.next4, Decl(awaitUnionPromise.ts, 7, 29))
+>next4 : Symbol(next4, Decl(awaitUnionPromise.ts, 7, 29))
 }
 
