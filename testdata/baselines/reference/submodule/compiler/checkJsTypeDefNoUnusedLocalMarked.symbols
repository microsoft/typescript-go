//// [tests/cases/compiler/checkJsTypeDefNoUnusedLocalMarked.ts] ////

=== file.ts ===
class Foo {
>Foo : Symbol(Foo, Decl(file.ts, 0, 0))

    x: number;
>x : Symbol(x, Decl(file.ts, 0, 11))
}

declare global {
>global : Symbol(global, Decl(file.ts, 2, 1))

    var module: any; // Just here to remove unrelated error from test
>module : Symbol(module, Decl(file.ts, 5, 7))
}

export = Foo;
>Foo : Symbol(Foo, Decl(file.ts, 0, 0))

=== something.js ===
/** @typedef {typeof import("./file")} Foo */

/** @typedef {(foo: Foo) => string} FooFun */
>foo : Symbol(foo, Decl(something.js, 2, 15))
>Foo : Symbol(Foo, Decl(something.js, 0, 4))

module.exports = /** @type {FooFun} */(void 0);
>module : Symbol(module, Decl(file.ts, 5, 7))
>FooFun : Symbol(FooFun, Decl(something.js, 2, 4))

