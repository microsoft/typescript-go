--- old.crashIntypeCheckInvocationExpression.types
+++ new.crashIntypeCheckInvocationExpression.types
@@= skipped -5, +5 lines =@@
 
 function doCompile<P0, P1, P2>(fileset: P0, moduleType: P1) {
 >doCompile : <P0, P1, P2>(fileset: P0, moduleType: P1) => any
+>P0 : P0
+>P1 : P1
+>P2 : P2
 >fileset : P0
 >moduleType : P1
 
@@= skipped -11, +14 lines =@@
 >task<number, number, any>(<P0, P1, P2>() => {    var folder = path.join(),        fileset = nake.fileSetSync<number, number, any>(folder)  return doCompile<number, number, any>(fileset, moduleType);}) : any
 >task : any
 ><P0, P1, P2>() => {    var folder = path.join(),        fileset = nake.fileSetSync<number, number, any>(folder)  return doCompile<number, number, any>(fileset, moduleType);} : <P0, P1, P2>() => any
+>P0 : P0
+>P1 : P1
+>P2 : P2
 
     var folder = path.join(),
 >folder : any
@@= skipped -18, +21 lines =@@
 
   return doCompile<number, number, any>(fileset, moduleType);
 >doCompile<number, number, any>(fileset, moduleType) : any
->doCompile : <P0_1, P1_1, P2_1>(fileset: P0_1, moduleType: P1_1) => any
+>doCompile : <P0, P1, P2>(fileset: P0, moduleType: P1) => any
 >fileset : any
 >moduleType : any
 
