--- old.recursiveComplicatedClasses.symbols
+++ new.recursiveComplicatedClasses.symbols
@@= skipped -4, +4 lines =@@
 >Signature : Symbol(Signature, Decl(recursiveComplicatedClasses.ts, 0, 0))
 
     public parameters: ParameterSymbol[] = null;
->parameters : Symbol(Signature.parameters, Decl(recursiveComplicatedClasses.ts, 0, 17))
+>parameters : Symbol(parameters, Decl(recursiveComplicatedClasses.ts, 0, 17))
 >ParameterSymbol : Symbol(ParameterSymbol, Decl(recursiveComplicatedClasses.ts, 17, 1))
 }
 
@@= skipped -16, +16 lines =@@
 >Symbol : Symbol(Symbol, Decl(lib.es5.d.ts, --, --), Decl(recursiveComplicatedClasses.ts, 6, 1))
 
     public bound: boolean;
->bound : Symbol(Symbol.bound, Decl(recursiveComplicatedClasses.ts, 8, 14))
+>bound : Symbol(bound, Decl(recursiveComplicatedClasses.ts, 8, 14))
 
     public visible() {
->visible : Symbol(Symbol.visible, Decl(recursiveComplicatedClasses.ts, 9, 26))
+>visible : Symbol(visible, Decl(recursiveComplicatedClasses.ts, 9, 26))
 
         var b: TypeSymbol;
 >b : Symbol(b, Decl(recursiveComplicatedClasses.ts, 11, 11))
