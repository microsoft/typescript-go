--- old.moduleAugmentationImportsAndExports6.types
+++ new.moduleAugmentationImportsAndExports6.types
@@= skipped -46, +46 lines =@@
 >Cls : C

 declare module "./f1" {
->"./f1" : typeof import("f1")
+>"./f1" : typeof import("./f1")

     interface A {
         foo(): B;
@@= skipped -26, +26 lines =@@
 let b = a.foo().n;
 >b : number
 >a.foo().n : number
->a.foo() : import("f2").B
->a.foo : () => import("f2").B
+>a.foo() : import("./f2").B
+>a.foo : () => import("./f2").B
 >a : A
->foo : () => import("f2").B
+>foo : () => import("./f2").B
 >n : number

 let c = a.bar().a;
 >c : number
 >a.bar().a : number
->a.bar() : import("f3").N.Ifc
->a.bar : () => import("f3").N.Ifc
+>a.bar() : import("./f3").N.Ifc
+>a.bar : () => import("./f3").N.Ifc
 >a : A
->bar : () => import("f3").N.Ifc
+>bar : () => import("./f3").N.Ifc
 >a : number

 let d = a.baz().b;
 >d : number
 >a.baz().b : number
->a.baz() : import("f3").N.Cls
->a.baz : () => import("f3").N.Cls
+>a.baz() : import("./f3").N.Cls
+>a.baz : () => import("./f3").N.Cls
 >a : A
->baz : () => import("f3").N.Cls
+>baz : () => import("./f3").N.Cls
 >b : number
