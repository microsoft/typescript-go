--- old.classSideInheritance1.symbols
+++ new.classSideInheritance1.symbols
@@= skipped -4, +4 lines =@@
 >A : Symbol(A, Decl(classSideInheritance1.ts, 0, 0))
 
   static bar(): string {
->bar : Symbol(A.bar, Decl(classSideInheritance1.ts, 0, 9))
+>bar : Symbol(bar, Decl(classSideInheritance1.ts, 0, 9))
 
      return "";
     }
     foo(): number { return 1; }
->foo : Symbol(A.foo, Decl(classSideInheritance1.ts, 3, 5))
+>foo : Symbol(foo, Decl(classSideInheritance1.ts, 3, 5))
 }
  
 class C2 extends A {}
@@= skipped -27, +27 lines =@@
 >c : Symbol(c, Decl(classSideInheritance1.ts, 10, 3))
 
 A.bar(); // valid
->A.bar : Symbol(A.bar, Decl(classSideInheritance1.ts, 0, 9))
+>A.bar : Symbol(bar, Decl(classSideInheritance1.ts, 0, 9))
 >A : Symbol(A, Decl(classSideInheritance1.ts, 0, 0))
->bar : Symbol(A.bar, Decl(classSideInheritance1.ts, 0, 9))
+>bar : Symbol(bar, Decl(classSideInheritance1.ts, 0, 9))
 
 C2.bar(); // valid
->C2.bar : Symbol(A.bar, Decl(classSideInheritance1.ts, 0, 9))
+>C2.bar : Symbol(bar, Decl(classSideInheritance1.ts, 0, 9))
 >C2 : Symbol(C2, Decl(classSideInheritance1.ts, 5, 1))
->bar : Symbol(A.bar, Decl(classSideInheritance1.ts, 0, 9))
+>bar : Symbol(bar, Decl(classSideInheritance1.ts, 0, 9))
 
