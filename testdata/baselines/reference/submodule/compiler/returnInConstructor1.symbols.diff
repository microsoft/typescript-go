--- old.returnInConstructor1.symbols
+++ new.returnInConstructor1.symbols
@@ -5,7 +5,7 @@
 >A : Symbol(A, Decl(returnInConstructor1.ts, 0, 0))
 
     foo() { }
->foo : Symbol(A.foo, Decl(returnInConstructor1.ts, 0, 9))
+>foo : Symbol(foo, Decl(returnInConstructor1.ts, 0, 9))
 
     constructor() {
         return;
@@ -16,7 +16,7 @@
 >B : Symbol(B, Decl(returnInConstructor1.ts, 5, 1))
 
     foo() { }
->foo : Symbol(B.foo, Decl(returnInConstructor1.ts, 7, 9))
+>foo : Symbol(foo, Decl(returnInConstructor1.ts, 7, 9))
 
     constructor() {
         return 1; // error
@@ -27,7 +27,7 @@
 >C : Symbol(C, Decl(returnInConstructor1.ts, 12, 1))
 
     foo() { }
->foo : Symbol(C.foo, Decl(returnInConstructor1.ts, 14, 9))
+>foo : Symbol(foo, Decl(returnInConstructor1.ts, 14, 9))
 
     constructor() {
         return this;
@@ -39,7 +39,7 @@
 >D : Symbol(D, Decl(returnInConstructor1.ts, 19, 1))
 
     foo() { }
->foo : Symbol(D.foo, Decl(returnInConstructor1.ts, 21, 9))
+>foo : Symbol(foo, Decl(returnInConstructor1.ts, 21, 9))
 
     constructor() {
         return "test"; // error
@@ -50,7 +50,7 @@
 >E : Symbol(E, Decl(returnInConstructor1.ts, 26, 1))
 
     public foo: number;
->foo : Symbol(E.foo, Decl(returnInConstructor1.ts, 28, 9))
+>foo : Symbol(foo, Decl(returnInConstructor1.ts, 28, 9))
 
     constructor() {
         return { foo: 1 };
@@ -62,7 +62,7 @@
 >F : Symbol(F, Decl(returnInConstructor1.ts, 33, 1))
 
     public foo: string;
->foo : Symbol(F.foo, Decl(returnInConstructor1.ts, 35, 9))
+>foo : Symbol(foo, Decl(returnInConstructor1.ts, 35, 9))
 
     constructor() {
         return { foo: 1 }; //error
@@ -74,19 +74,19 @@
 >G : Symbol(G, Decl(returnInConstructor1.ts, 40, 1))
 
     private test: number;
->test : Symbol(G.test, Decl(returnInConstructor1.ts, 42, 9))
+>test : Symbol(test, Decl(returnInConstructor1.ts, 42, 9))
 
     public test1() { }
->test1 : Symbol(G.test1, Decl(returnInConstructor1.ts, 43, 25))
+>test1 : Symbol(test1, Decl(returnInConstructor1.ts, 43, 25))
 
     foo() { }
->foo : Symbol(G.foo, Decl(returnInConstructor1.ts, 44, 22))
+>foo : Symbol(foo, Decl(returnInConstructor1.ts, 44, 22))
 
     constructor() {
         this.test = 2;
->this.test : Symbol(G.test, Decl(returnInConstructor1.ts, 42, 9))
+>this.test : Symbol(test, Decl(returnInConstructor1.ts, 42, 9))
 >this : Symbol(G, Decl(returnInConstructor1.ts, 40, 1))
->test : Symbol(G.test, Decl(returnInConstructor1.ts, 42, 9))
+>test : Symbol(test, Decl(returnInConstructor1.ts, 42, 9))
     }
 }
 
