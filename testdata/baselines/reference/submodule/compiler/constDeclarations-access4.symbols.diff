--- old.constDeclarations-access4.symbols
+++ new.constDeclarations-access4.symbols
@@= skipped -9, +9 lines =@@
 
 // Errors
 M.x = 1;
->M.x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>M.x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 >M : Symbol(M, Decl(constDeclarations-access4.ts, 0, 0))
->x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 
 M.x += 2;
->M.x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>M.x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 >M : Symbol(M, Decl(constDeclarations-access4.ts, 0, 0))
->x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 
 M.x -= 3;
->M.x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>M.x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 >M : Symbol(M, Decl(constDeclarations-access4.ts, 0, 0))
->x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 
 M.x *= 4;
->M.x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>M.x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 >M : Symbol(M, Decl(constDeclarations-access4.ts, 0, 0))
->x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 
 M.x /= 5;
->M.x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>M.x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 >M : Symbol(M, Decl(constDeclarations-access4.ts, 0, 0))
->x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 
 M.x %= 6;
->M.x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>M.x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 >M : Symbol(M, Decl(constDeclarations-access4.ts, 0, 0))
->x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 
 M.x <<= 7;
->M.x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>M.x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 >M : Symbol(M, Decl(constDeclarations-access4.ts, 0, 0))
->x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 
 M.x >>= 8;
->M.x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>M.x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 >M : Symbol(M, Decl(constDeclarations-access4.ts, 0, 0))
->x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 
 M.x >>>= 9;
->M.x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>M.x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 >M : Symbol(M, Decl(constDeclarations-access4.ts, 0, 0))
->x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 
 M.x &= 10;
->M.x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>M.x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 >M : Symbol(M, Decl(constDeclarations-access4.ts, 0, 0))
->x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 
 M.x |= 11;
->M.x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>M.x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 >M : Symbol(M, Decl(constDeclarations-access4.ts, 0, 0))
->x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 
 M.x ^= 12;
->M.x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>M.x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 >M : Symbol(M, Decl(constDeclarations-access4.ts, 0, 0))
->x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 
 M.x++;
->M.x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>M.x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 >M : Symbol(M, Decl(constDeclarations-access4.ts, 0, 0))
->x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 
 M.x--;
->M.x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>M.x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 >M : Symbol(M, Decl(constDeclarations-access4.ts, 0, 0))
->x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 
 ++M.x;
->M.x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>M.x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 >M : Symbol(M, Decl(constDeclarations-access4.ts, 0, 0))
->x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 
 --M.x;
->M.x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>M.x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 >M : Symbol(M, Decl(constDeclarations-access4.ts, 0, 0))
->x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 
 ++((M.x));
->M.x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>M.x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 >M : Symbol(M, Decl(constDeclarations-access4.ts, 0, 0))
->x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 
 M["x"] = 0;
 >M : Symbol(M, Decl(constDeclarations-access4.ts, 0, 0))
->"x" : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>"x" : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 
 // OK
 var a = M.x + 1;
 >a : Symbol(a, Decl(constDeclarations-access4.ts, 28, 3))
->M.x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>M.x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 >M : Symbol(M, Decl(constDeclarations-access4.ts, 0, 0))
->x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 
 function f(v: number) { }
 >f : Symbol(f, Decl(constDeclarations-access4.ts, 28, 16))
@@= skipped -101, +101 lines =@@
 
 f(M.x);
 >f : Symbol(f, Decl(constDeclarations-access4.ts, 28, 16))
->M.x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>M.x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 >M : Symbol(M, Decl(constDeclarations-access4.ts, 0, 0))
->x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 
 if (M.x) { }
->M.x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>M.x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 >M : Symbol(M, Decl(constDeclarations-access4.ts, 0, 0))
->x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 
 M.x;
->M.x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>M.x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 >M : Symbol(M, Decl(constDeclarations-access4.ts, 0, 0))
->x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 
 (M.x);
->M.x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>M.x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 >M : Symbol(M, Decl(constDeclarations-access4.ts, 0, 0))
->x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 
 -M.x;
->M.x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>M.x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 >M : Symbol(M, Decl(constDeclarations-access4.ts, 0, 0))
->x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 
 +M.x;
->M.x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>M.x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 >M : Symbol(M, Decl(constDeclarations-access4.ts, 0, 0))
->x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 
 M.x.toString();
->M.x.toString : Symbol(Number.toString, Decl(lib.es5.d.ts, --, --))
->M.x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
+>M.x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 >M : Symbol(M, Decl(constDeclarations-access4.ts, 0, 0))
->x : Symbol(M.x, Decl(constDeclarations-access4.ts, 1, 9))
->toString : Symbol(Number.toString, Decl(lib.es5.d.ts, --, --))
+>x : Symbol(x, Decl(constDeclarations-access4.ts, 1, 9))
 
