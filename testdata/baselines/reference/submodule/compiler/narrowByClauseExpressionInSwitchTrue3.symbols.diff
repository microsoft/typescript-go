--- old.narrowByClauseExpressionInSwitchTrue3.symbols
+++ new.narrowByClauseExpressionInSwitchTrue3.symbols
@@= skipped -23, +23 lines =@@
 >kind : Symbol(kind, Decl(narrowByClauseExpressionInSwitchTrue3.ts, 1, 7), Decl(narrowByClauseExpressionInSwitchTrue3.ts, 2, 7))
 
             return Math.PI * shape.radius ** 2;
->Math.PI : Symbol(Math.PI, Decl(lib.es5.d.ts, --, --))
+>Math.PI : Symbol(PI, Decl(lib.es5.d.ts, --, --))
 >Math : Symbol(Math, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->PI : Symbol(Math.PI, Decl(lib.es5.d.ts, --, --))
+>PI : Symbol(PI, Decl(lib.es5.d.ts, --, --))
 >shape.radius : Symbol(radius, Decl(narrowByClauseExpressionInSwitchTrue3.ts, 1, 23))
 >shape : Symbol(shape, Decl(narrowByClauseExpressionInSwitchTrue3.ts, 4, 13))
 >radius : Symbol(radius, Decl(narrowByClauseExpressionInSwitchTrue3.ts, 1, 23))
@@= skipped -19, +19 lines =@@
 >kind : Symbol(kind, Decl(narrowByClauseExpressionInSwitchTrue3.ts, 2, 7))
 
         return Math.PI * shape.radius ** 2;
->Math.PI : Symbol(Math.PI, Decl(lib.es5.d.ts, --, --))
+>Math.PI : Symbol(PI, Decl(lib.es5.d.ts, --, --))
 >Math : Symbol(Math, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->PI : Symbol(Math.PI, Decl(lib.es5.d.ts, --, --))
+>PI : Symbol(PI, Decl(lib.es5.d.ts, --, --))
 >shape : Symbol(shape, Decl(narrowByClauseExpressionInSwitchTrue3.ts, 4, 13))
     }
     else if (shape.kind === "circle") {
