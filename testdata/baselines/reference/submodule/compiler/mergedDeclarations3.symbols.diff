--- old.mergedDeclarations3.symbols
+++ new.mergedDeclarations3.symbols
@@= skipped -7, +7 lines =@@
 >Color : Symbol(Color, Decl(mergedDeclarations3.ts, 0, 10), Decl(mergedDeclarations3.ts, 5, 10))
 
    Red, Green
->Red : Symbol(Color.Red, Decl(mergedDeclarations3.ts, 1, 20))
->Green : Symbol(Color.Green, Decl(mergedDeclarations3.ts, 2, 7))
+>Red : Symbol(Red, Decl(mergedDeclarations3.ts, 1, 20))
+>Green : Symbol(Green, Decl(mergedDeclarations3.ts, 2, 7))
  }
 }
 module M {
@@= skipped -16, +16 lines =@@
 }
 var p = M.Color.Blue; // ok
 >p : Symbol(p, Decl(mergedDeclarations3.ts, 10, 3))
->M.Color.Blue : Symbol(M.Color.Blue, Decl(mergedDeclarations3.ts, 7, 13))
->M.Color : Symbol(M.Color, Decl(mergedDeclarations3.ts, 0, 10), Decl(mergedDeclarations3.ts, 5, 10))
+>M.Color.Blue : Symbol(Blue, Decl(mergedDeclarations3.ts, 7, 13))
+>M.Color : Symbol(Color, Decl(mergedDeclarations3.ts, 0, 10), Decl(mergedDeclarations3.ts, 5, 10))
 >M : Symbol(M, Decl(mergedDeclarations3.ts, 0, 0), Decl(mergedDeclarations3.ts, 4, 1), Decl(mergedDeclarations3.ts, 10, 21), Decl(mergedDeclarations3.ts, 15, 1), Decl(mergedDeclarations3.ts, 21, 1) ... and 1 more)
->Color : Symbol(M.Color, Decl(mergedDeclarations3.ts, 0, 10), Decl(mergedDeclarations3.ts, 5, 10))
->Blue : Symbol(M.Color.Blue, Decl(mergedDeclarations3.ts, 7, 13))
+>Color : Symbol(Color, Decl(mergedDeclarations3.ts, 0, 10), Decl(mergedDeclarations3.ts, 5, 10))
+>Blue : Symbol(Blue, Decl(mergedDeclarations3.ts, 7, 13))
 
 module M {
 >M : Symbol(M, Decl(mergedDeclarations3.ts, 0, 0), Decl(mergedDeclarations3.ts, 4, 1), Decl(mergedDeclarations3.ts, 10, 21), Decl(mergedDeclarations3.ts, 15, 1), Decl(mergedDeclarations3.ts, 21, 1) ... and 1 more)
@@= skipped -48, +48 lines =@@
 }
 
 M.foo() // ok
->M.foo : Symbol(M.foo, Decl(mergedDeclarations3.ts, 12, 10), Decl(mergedDeclarations3.ts, 23, 10))
+>M.foo : Symbol(foo, Decl(mergedDeclarations3.ts, 12, 10), Decl(mergedDeclarations3.ts, 23, 10))
 >M : Symbol(M, Decl(mergedDeclarations3.ts, 0, 0), Decl(mergedDeclarations3.ts, 4, 1), Decl(mergedDeclarations3.ts, 10, 21), Decl(mergedDeclarations3.ts, 15, 1), Decl(mergedDeclarations3.ts, 21, 1) ... and 1 more)
->foo : Symbol(M.foo, Decl(mergedDeclarations3.ts, 12, 10), Decl(mergedDeclarations3.ts, 23, 10))
+>foo : Symbol(foo, Decl(mergedDeclarations3.ts, 12, 10), Decl(mergedDeclarations3.ts, 23, 10))
 
 M.foo.x // error
->M.foo : Symbol(M.foo, Decl(mergedDeclarations3.ts, 12, 10), Decl(mergedDeclarations3.ts, 23, 10))
+>M.foo : Symbol(foo, Decl(mergedDeclarations3.ts, 12, 10), Decl(mergedDeclarations3.ts, 23, 10))
 >M : Symbol(M, Decl(mergedDeclarations3.ts, 0, 0), Decl(mergedDeclarations3.ts, 4, 1), Decl(mergedDeclarations3.ts, 10, 21), Decl(mergedDeclarations3.ts, 15, 1), Decl(mergedDeclarations3.ts, 21, 1) ... and 1 more)
->foo : Symbol(M.foo, Decl(mergedDeclarations3.ts, 12, 10), Decl(mergedDeclarations3.ts, 23, 10))
+>foo : Symbol(foo, Decl(mergedDeclarations3.ts, 12, 10), Decl(mergedDeclarations3.ts, 23, 10))
 
 M.foo.y // ok
->M.foo.y : Symbol(M.foo.y, Decl(mergedDeclarations3.ts, 25, 18))
->M.foo : Symbol(M.foo, Decl(mergedDeclarations3.ts, 12, 10), Decl(mergedDeclarations3.ts, 23, 10))
+>M.foo.y : Symbol(y, Decl(mergedDeclarations3.ts, 25, 18))
+>M.foo : Symbol(foo, Decl(mergedDeclarations3.ts, 12, 10), Decl(mergedDeclarations3.ts, 23, 10))
 >M : Symbol(M, Decl(mergedDeclarations3.ts, 0, 0), Decl(mergedDeclarations3.ts, 4, 1), Decl(mergedDeclarations3.ts, 10, 21), Decl(mergedDeclarations3.ts, 15, 1), Decl(mergedDeclarations3.ts, 21, 1) ... and 1 more)
->foo : Symbol(M.foo, Decl(mergedDeclarations3.ts, 12, 10), Decl(mergedDeclarations3.ts, 23, 10))
->y : Symbol(M.foo.y, Decl(mergedDeclarations3.ts, 25, 18))
+>foo : Symbol(foo, Decl(mergedDeclarations3.ts, 12, 10), Decl(mergedDeclarations3.ts, 23, 10))
+>y : Symbol(y, Decl(mergedDeclarations3.ts, 25, 18))
 
 M.foo.z // error
->M.foo : Symbol(M.foo, Decl(mergedDeclarations3.ts, 12, 10), Decl(mergedDeclarations3.ts, 23, 10))
+>M.foo : Symbol(foo, Decl(mergedDeclarations3.ts, 12, 10), Decl(mergedDeclarations3.ts, 23, 10))
 >M : Symbol(M, Decl(mergedDeclarations3.ts, 0, 0), Decl(mergedDeclarations3.ts, 4, 1), Decl(mergedDeclarations3.ts, 10, 21), Decl(mergedDeclarations3.ts, 15, 1), Decl(mergedDeclarations3.ts, 21, 1) ... and 1 more)
->foo : Symbol(M.foo, Decl(mergedDeclarations3.ts, 12, 10), Decl(mergedDeclarations3.ts, 23, 10))
+>foo : Symbol(foo, Decl(mergedDeclarations3.ts, 12, 10), Decl(mergedDeclarations3.ts, 23, 10))
 
