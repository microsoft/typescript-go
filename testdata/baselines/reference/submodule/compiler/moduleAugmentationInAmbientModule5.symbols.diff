--- old.moduleAugmentationInAmbientModule5.symbols
+++ new.moduleAugmentationInAmbientModule5.symbols
@@ -9,11 +9,11 @@
 
 let y = x.getA().x;
 >y : Symbol(y, Decl(f.ts, 4, 3))
->x.getA().x : Symbol(A.x, Decl(array.d.ts, 1, 13))
->x.getA : Symbol(Array.getA, Decl(array.d.ts, 7, 28))
+>x.getA().x : Symbol(x, Decl(array.d.ts, 1, 13))
+>x.getA : Symbol(getA, Decl(array.d.ts, 7, 28))
 >x : Symbol(x, Decl(f.ts, 3, 3))
->getA : Symbol(Array.getA, Decl(array.d.ts, 7, 28))
->x : Symbol(A.x, Decl(array.d.ts, 1, 13))
+>getA : Symbol(getA, Decl(array.d.ts, 7, 28))
+>x : Symbol(x, Decl(array.d.ts, 1, 13))
 
 === array.d.ts ===
 declare module "A" {
@@ -21,7 +21,7 @@
 
     class A { x: number; }
 >A : Symbol(A, Decl(array.d.ts, 0, 20))
->x : Symbol(A.x, Decl(array.d.ts, 1, 13))
+>x : Symbol(x, Decl(array.d.ts, 1, 13))
 }
 
 declare module "array" {
@@ -31,14 +31,14 @@
 >A : Symbol(A, Decl(array.d.ts, 5, 12))
 
     global {
->global : Symbol(global, Decl(array.d.ts, 5, 24))
+>global : Symbol((Missing), Decl(array.d.ts, 5, 24))
 
         interface Array<T> {
 >Array : Symbol(Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(array.d.ts, 6, 12))
 >T : Symbol(T, Decl(lib.es5.d.ts, --, --), Decl(array.d.ts, 7, 24))
 
             getA(): A;
->getA : Symbol(Array.getA, Decl(array.d.ts, 7, 28))
+>getA : Symbol(getA, Decl(array.d.ts, 7, 28))
 >A : Symbol(A, Decl(array.d.ts, 5, 12))
         }
     }
