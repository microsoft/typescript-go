--- old.typeParameterExtendsPrimitive.types
+++ new.typeParameterExtendsPrimitive.types
@@= skipped -3, +3 lines =@@
 // #14473
 function f<T extends number>() {
 >f : <T extends number>() => number
+>T : T
 
     var t: T;
 >t : T
@@= skipped -21, +22 lines =@@
 
 // #15501
 interface I { x: number }
+>I : I
 >x : number
 
 type IdMap<T> = { [P in keyof T]: T[P] };
 >IdMap : IdMap<T>
+>T : T
+>P : P
 
 function g<T extends I>(i: IdMap<T>) {
 >g : <T extends I>(i: IdMap<T>) => number
+>T : T
 >i : IdMap<T>
 
     const n: number = i.x;
@@= skipped -26, +30 lines =@@
 // #17069
 function h<T extends Record<K, number>, K extends string>(array: T[], prop: K): number {
 >h : <T extends Record<K, number>, K extends string>(array: T[], prop: K) => number
+>T : T
+>K : K
 >array : T[]
 >prop : K
 
