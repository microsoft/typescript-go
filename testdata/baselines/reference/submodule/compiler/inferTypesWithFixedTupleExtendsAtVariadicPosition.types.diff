--- old.inferTypesWithFixedTupleExtendsAtVariadicPosition.types
+++ new.inferTypesWithFixedTupleExtendsAtVariadicPosition.types
@@= skipped -4, +4 lines =@@
 
 type SubTup2FixedLength<T extends unknown[]> = T extends [
 >SubTup2FixedLength : SubTup2FixedLength<T>
+>T : T
 
   ...infer B extends [any, any],
+>B : B
+
   any
 ]
   ? B
@@= skipped -12, +15 lines =@@
 
 type SubTup2Variadic<T extends unknown[]> = T extends [
 >SubTup2Variadic : SubTup2Variadic<T>
+>T : T
 
   ...infer B extends [any, any],
+>B : B
+
   ...any
 ]
   ? B
@@= skipped -15, +18 lines =@@
 
 type SubTup2VariadicAndRest<T extends unknown[]> = T extends [
 >SubTup2VariadicAndRest : SubTup2VariadicAndRest<T>
+>T : T
 
     ...infer B extends [any, any],
+>B : B
+
     ...(infer C)[]
+>C : C
+
 ]
     ? [...B, ...[C]]
     : never;
@@= skipped -12, +17 lines =@@
 
 type SubTup2TrailingVariadic<T extends unknown[]> = T extends [
 >SubTup2TrailingVariadic : SubTup2TrailingVariadic<T>
+>T : T
 
   ...any,
   ...infer B extends [any, any],
+>B : B
+
 ]
   ? B
   : never;
@@= skipped -15, +18 lines =@@
 
 type SubTup2RestAndTrailingVariadic2<T extends unknown[]> = T extends [
 >SubTup2RestAndTrailingVariadic2 : SubTup2RestAndTrailingVariadic2<T>
+>T : T
 
     ...(infer C)[],
+>C : C
+
     ...infer B extends [any, any],
+>B : B
+
 ]
     ? [C, ...B]
     : never;
@@= skipped -12, +17 lines =@@
 
 type SubTup2VariadicWithLeadingFixedElements<T extends unknown[]> = T extends [
 >SubTup2VariadicWithLeadingFixedElements : SubTup2VariadicWithLeadingFixedElements<T>
+>T : T
 
   any,
   ...infer B extends [any, any],
+>B : B
+
   ...any
 ]
   ? B
@@= skipped -16, +19 lines =@@
 
 type SubTup2TrailingVariadicWithTrailingFixedElements<T extends unknown[]> = T extends [
 >SubTup2TrailingVariadicWithTrailingFixedElements : SubTup2TrailingVariadicWithTrailingFixedElements<T>
+>T : T
 
   ...any,
   ...infer B extends [any, any],
+>B : B
+
   any,
 ]
   ? B
