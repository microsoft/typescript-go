--- old.emitSkipsThisWithRestParameter.types
+++ new.emitSkipsThisWithRestParameter.types
@@= skipped -8, +8 lines =@@
 >args : any[]
 
     return function(this: any, ...args: any[]) {
->function(this: any, ...args: any[]) {        return fn.apply(this, [ this ].concat(args));    } : (this: any, ...args: any[]) => any
+>function(this: any, ...args: any[]) {        return fn.apply(this, [ this ].concat(args));    } : (...args: any[]) => any
 >this : any
 >args : any[]
 
         return fn.apply(this, [ this ].concat(args));
 >fn.apply(this, [ this ].concat(args)) : any
->fn.apply : (this: Function, thisArg: any, argArray?: any) => any
+>fn.apply : (thisArg: any, argArray?: any) => any
 >fn : (base: any, ...args: any[]) => any
->apply : (this: Function, thisArg: any, argArray?: any) => any
+>apply : (thisArg: any, argArray?: any) => any
 >this : any
 >[ this ].concat(args) : any[]
 >[ this ].concat : { (...items: ConcatArray<any>[]): any[]; (...items: any[]): any[]; }
