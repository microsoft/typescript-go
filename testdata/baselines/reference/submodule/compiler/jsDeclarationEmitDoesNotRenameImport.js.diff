--- old.jsDeclarationEmitDoesNotRenameImport.js
+++ new.jsDeclarationEmitDoesNotRenameImport.js
@@= skipped -30, +30 lines =@@
 export default X;
 
 
-
-
-//// [Test.d.ts]
-export default Test;
-/** @module test/Test */
-declare class Test {
+//// [Test.js]
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+class Test {
 }
-//// [Test.d.ts]
-export default Test;
-/** @module Test */
-declare class Test {
+exports.default = Test;
+//// [Test.js]
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+class Test {
 }
-//// [index.d.ts]
-export default X;
-export type Options = {
-    test?: typeof import("./Test.js").default | undefined;
-};
-/**
- * @typedef {Object} Options
- * @property {typeof import("./Test.js").default} [test]
- */
-declare class X extends Test {
-    /**
-     * @param {Options} options
-     */
-    constructor(options: Options);
-    test: import("./Test.js").default | undefined;
+exports.default = Test;
+//// [index.js]
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+const Test_js_1 = require("./test/Test.js");
+class X extends Test_js_1.default {
+    constructor(options) {
+        super();
+        if (options.test) {
+            this.test = new options.test();
+        }
+    }
 }
-import Test from './test/Test.js';
+exports.default = X;
