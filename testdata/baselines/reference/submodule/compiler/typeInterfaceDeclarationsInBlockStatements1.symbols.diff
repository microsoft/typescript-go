--- old.typeInterfaceDeclarationsInBlockStatements1.symbols
+++ new.typeInterfaceDeclarationsInBlockStatements1.symbols
@@= skipped -9, +9 lines =@@
 >s : Symbol(s, Decl(typeInterfaceDeclarationsInBlockStatements1.ts, 3, 11))

   console.log("" as s);
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >s : Symbol(s, Decl(typeInterfaceDeclarationsInBlockStatements1.ts, 3, 11))
 }

@@= skipped -14, +14 lines =@@
 >s : Symbol(s, Decl(typeInterfaceDeclarationsInBlockStatements1.ts, 8, 13))
   }
   console.log("" as s);
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >s : Symbol(s)
 }

@@= skipped -14, +14 lines =@@
 >s : Symbol(s, Decl(typeInterfaceDeclarationsInBlockStatements1.ts, 15, 11))

       length: number;
->length : Symbol(s.length, Decl(typeInterfaceDeclarationsInBlockStatements1.ts, 16, 17))
+>length : Symbol(length, Decl(typeInterfaceDeclarationsInBlockStatements1.ts, 16, 17))
     }
   console.log("" as s);
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >s : Symbol(s, Decl(typeInterfaceDeclarationsInBlockStatements1.ts, 15, 11))
 }

@@= skipped -17, +17 lines =@@
 >s : Symbol(s, Decl(typeInterfaceDeclarationsInBlockStatements1.ts, 23, 13))

       length: number;
->length : Symbol(s.length, Decl(typeInterfaceDeclarationsInBlockStatements1.ts, 24, 17))
+>length : Symbol(length, Decl(typeInterfaceDeclarationsInBlockStatements1.ts, 24, 17))
     }
   }
   console.log("" as s);
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >s : Symbol(s)
 }
