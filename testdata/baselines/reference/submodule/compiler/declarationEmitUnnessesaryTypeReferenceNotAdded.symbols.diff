--- old.declarationEmitUnnessesaryTypeReferenceNotAdded.symbols
+++ new.declarationEmitUnnessesaryTypeReferenceNotAdded.symbols
@@= skipped -7, +7 lines =@@
 >process : Symbol(process, Decl(index.ts, 0, 38))
 
 export default function parseArgs(): minimist.ParsedArgs {
->parseArgs : Symbol(parseArgs, Decl(index.ts, 1, 36))
+>parseArgs : Symbol(default, Decl(index.ts, 1, 36))
 >minimist : Symbol(minimist, Decl(index.ts, 0, 0))
->ParsedArgs : Symbol(minimist.ParsedArgs, Decl(minimist.d.ts, 0, 25))
+>ParsedArgs : Symbol(ParsedArgs, Decl(minimist.d.ts, 0, 25))
 
   return minimist(process.argv.slice(2));
 >minimist : Symbol(minimist, Decl(index.ts, 0, 0))
@@= skipped -20, +20 lines =@@
 >thing : Symbol(thing, Decl(minimist.d.ts, 2, 1), Decl(minimist.d.ts, 0, 0))
 >x : Symbol(x, Decl(minimist.d.ts, 3, 23))
 >thing : Symbol(thing, Decl(minimist.d.ts, 2, 1), Decl(minimist.d.ts, 0, 0))
->ParsedArgs : Symbol(thing.ParsedArgs, Decl(minimist.d.ts, 0, 25))
+>ParsedArgs : Symbol(ParsedArgs, Decl(minimist.d.ts, 0, 25))
 
 export = thing;
 >thing : Symbol(thing, Decl(minimist.d.ts, 2, 1), Decl(minimist.d.ts, 0, 0))
