--- old.declarationEmitNameConflicts2.types
+++ new.declarationEmitNameConflicts2.types
@@= skipped -18, +18 lines =@@
 >v : any
     }
     export enum E { }
->E : E
+>E : base.E
 }
 
 module X.Y.base.Z {
@@= skipped -10, +10 lines =@@
 >Z : typeof Z
 
     export var f = X.Y.base.f; // Should be base.f
->f : () => void
->X.Y.base.f : () => void
->X.Y.base : typeof base
->X.Y : typeof Y
+>f : any
+>X.Y.base.f : any
+>X.Y.base : any
+>X.Y : any
 >X : typeof X
->Y : typeof Y
->base : typeof base
->f : () => void
+>Y : any
+>base : any
+>f : any
 
     export var C = X.Y.base.C; // Should be base.C
->C : typeof base.C
->X.Y.base.C : typeof base.C
->X.Y.base : typeof base
->X.Y : typeof Y
+>C : any
+>X.Y.base.C : any
+>X.Y.base : any
+>X.Y : any
 >X : typeof X
->Y : typeof Y
->base : typeof base
->C : typeof base.C
+>Y : any
+>base : any
+>C : any
 
     export var M = X.Y.base.M; // Should be base.M
->M : typeof base.M
->X.Y.base.M : typeof base.M
->X.Y.base : typeof base
->X.Y : typeof Y
+>M : any
+>X.Y.base.M : any
+>X.Y.base : any
+>X.Y : any
 >X : typeof X
->Y : typeof Y
->base : typeof base
->M : typeof base.M
+>Y : any
+>base : any
+>M : any
 
     export var E = X.Y.base.E; // Should be base.E
->E : typeof base.E
->X.Y.base.E : typeof base.E
->X.Y.base : typeof base
->X.Y : typeof Y
+>E : any
+>X.Y.base.E : any
+>X.Y.base : any
+>X.Y : any
 >X : typeof X
->Y : typeof Y
->base : typeof base
->E : typeof base.E
+>Y : any
+>base : any
+>E : any
 }
