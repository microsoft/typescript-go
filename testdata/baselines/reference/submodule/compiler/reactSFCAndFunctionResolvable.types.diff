--- old.reactSFCAndFunctionResolvable.types
+++ new.reactSFCAndFunctionResolvable.types
@@= skipped -33, +33 lines =@@
 >() => {  const Component =    condition1      ? Radio      : Checkbox;  const OtherComponent =    condition2      ? OtherRadio      : Checkbox;  return condition1 ? <Component /> : <OtherComponent />;} : () => JSX.Element

   const Component =
->Component : ((props: {}) => React.ReactElement<{}>) | React.SFC<{}>
+>Component : React.SFC<{}> | ((props: {}) => React.ReactElement<{}>)

     condition1
->condition1      ? Radio      : Checkbox : ((props: {}) => React.ReactElement<{}>) | React.SFC<{}>
+>condition1      ? Radio      : Checkbox : React.SFC<{}> | ((props: {}) => React.ReactElement<{}>)
 >condition1 : boolean

       ? Radio
@@= skipped -13, +13 lines =@@
 >Checkbox : React.SFC<{}>

   const OtherComponent =
->OtherComponent : (() => React.ReactElement<{}>) | React.SFC<{}>
+>OtherComponent : React.SFC<{}> | (() => React.ReactElement<{}>)

     condition2
->condition2      ? OtherRadio      : Checkbox : (() => React.ReactElement<{}>) | React.SFC<{}>
+>condition2      ? OtherRadio      : Checkbox : React.SFC<{}> | (() => React.ReactElement<{}>)
 >condition2 : boolean

       ? OtherRadio
@@= skipped -16, +16 lines =@@
 >condition1 ? <Component /> : <OtherComponent /> : JSX.Element
 >condition1 : boolean
 ><Component /> : JSX.Element
->Component : ((props: {}) => React.ReactElement<{}>) | React.SFC<{}>
+>Component : React.SFC<{}> | ((props: {}) => React.ReactElement<{}>)
 ><OtherComponent /> : JSX.Element
->OtherComponent : (() => React.ReactElement<{}>) | React.SFC<{}>
+>OtherComponent : React.SFC<{}> | (() => React.ReactElement<{}>)

 };
