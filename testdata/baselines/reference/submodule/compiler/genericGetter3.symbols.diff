--- old.genericGetter3.symbols
+++ new.genericGetter3.symbols
@@= skipped -9, +9 lines =@@
 >T : Symbol(T, Decl(genericGetter3.ts, 2, 8))
 
     data: A<T>;
->data : Symbol(C.data, Decl(genericGetter3.ts, 2, 12))
+>data : Symbol(data, Decl(genericGetter3.ts, 2, 12))
 >A : Symbol(A, Decl(genericGetter3.ts, 0, 0))
 >T : Symbol(T, Decl(genericGetter3.ts, 2, 8))
 
     get x(): A<T> {
->x : Symbol(C.x, Decl(genericGetter3.ts, 3, 15))
+>x : Symbol(x, Decl(genericGetter3.ts, 3, 15))
 >A : Symbol(A, Decl(genericGetter3.ts, 0, 0))
 >T : Symbol(T, Decl(genericGetter3.ts, 2, 8))
 
         return this.data;
->this.data : Symbol(C.data, Decl(genericGetter3.ts, 2, 12))
+>this.data : Symbol(data, Decl(genericGetter3.ts, 2, 12))
 >this : Symbol(C, Decl(genericGetter3.ts, 0, 14))
->data : Symbol(C.data, Decl(genericGetter3.ts, 2, 12))
+>data : Symbol(data, Decl(genericGetter3.ts, 2, 12))
     }
 }
 
@@= skipped -22, +22 lines =@@
 
 var r: string = c.x;
 >r : Symbol(r, Decl(genericGetter3.ts, 10, 3))
->c.x : Symbol(C.x, Decl(genericGetter3.ts, 3, 15))
+>c.x : Symbol(x, Decl(genericGetter3.ts, 3, 15))
 >c : Symbol(c, Decl(genericGetter3.ts, 9, 3))
->x : Symbol(C.x, Decl(genericGetter3.ts, 3, 15))
+>x : Symbol(x, Decl(genericGetter3.ts, 3, 15))
 
