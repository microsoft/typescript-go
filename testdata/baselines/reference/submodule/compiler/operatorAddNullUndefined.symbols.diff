--- old.operatorAddNullUndefined.symbols
+++ new.operatorAddNullUndefined.symbols
@@= skipped -2, +2 lines =@@
 === operatorAddNullUndefined.ts ===
 enum E { x }
 >E : Symbol(E, Decl(operatorAddNullUndefined.ts, 0, 0))
->x : Symbol(E.x, Decl(operatorAddNullUndefined.ts, 0, 8))
+>x : Symbol(x, Decl(operatorAddNullUndefined.ts, 0, 8))
 
 var x1 = null + null;
 >x1 : Symbol(x1, Decl(operatorAddNullUndefined.ts, 1, 3))
@@= skipped -48, +48 lines =@@
 
 var x13 = null + E.x
 >x13 : Symbol(x13, Decl(operatorAddNullUndefined.ts, 13, 3))
->E.x : Symbol(E.x, Decl(operatorAddNullUndefined.ts, 0, 8))
+>E.x : Symbol(x, Decl(operatorAddNullUndefined.ts, 0, 8))
 >E : Symbol(E, Decl(operatorAddNullUndefined.ts, 0, 0))
->x : Symbol(E.x, Decl(operatorAddNullUndefined.ts, 0, 8))
+>x : Symbol(x, Decl(operatorAddNullUndefined.ts, 0, 8))
 
 var x14 = undefined + E.x
 >x14 : Symbol(x14, Decl(operatorAddNullUndefined.ts, 14, 3))
 >undefined : Symbol(undefined)
->E.x : Symbol(E.x, Decl(operatorAddNullUndefined.ts, 0, 8))
+>E.x : Symbol(x, Decl(operatorAddNullUndefined.ts, 0, 8))
 >E : Symbol(E, Decl(operatorAddNullUndefined.ts, 0, 0))
->x : Symbol(E.x, Decl(operatorAddNullUndefined.ts, 0, 8))
+>x : Symbol(x, Decl(operatorAddNullUndefined.ts, 0, 8))
 
 var x15 = E.x + null
 >x15 : Symbol(x15, Decl(operatorAddNullUndefined.ts, 15, 3))
->E.x : Symbol(E.x, Decl(operatorAddNullUndefined.ts, 0, 8))
+>E.x : Symbol(x, Decl(operatorAddNullUndefined.ts, 0, 8))
 >E : Symbol(E, Decl(operatorAddNullUndefined.ts, 0, 0))
->x : Symbol(E.x, Decl(operatorAddNullUndefined.ts, 0, 8))
+>x : Symbol(x, Decl(operatorAddNullUndefined.ts, 0, 8))
 
 var x16 = E.x + undefined
 >x16 : Symbol(x16, Decl(operatorAddNullUndefined.ts, 16, 3))
->E.x : Symbol(E.x, Decl(operatorAddNullUndefined.ts, 0, 8))
+>E.x : Symbol(x, Decl(operatorAddNullUndefined.ts, 0, 8))
 >E : Symbol(E, Decl(operatorAddNullUndefined.ts, 0, 0))
->x : Symbol(E.x, Decl(operatorAddNullUndefined.ts, 0, 8))
+>x : Symbol(x, Decl(operatorAddNullUndefined.ts, 0, 8))
 >undefined : Symbol(undefined)
 
