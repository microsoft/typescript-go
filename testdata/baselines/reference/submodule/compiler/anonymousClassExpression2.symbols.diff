--- old.anonymousClassExpression2.symbols
+++ new.anonymousClassExpression2.symbols
@@= skipped -8, +8 lines =@@
 >A : Symbol(A, Decl(anonymousClassExpression2.ts, 3, 11))
 
         methodA() {
->methodA : Symbol(A.methodA, Decl(anonymousClassExpression2.ts, 4, 13))
+>methodA : Symbol(methodA, Decl(anonymousClassExpression2.ts, 4, 13))
 
             this; //note: a this reference of some kind is required to trigger the bug
 >this : Symbol(A, Decl(anonymousClassExpression2.ts, 3, 11))
@@= skipped -11, +11 lines =@@
 >B : Symbol(B, Decl(anonymousClassExpression2.ts, 8, 5))
 
         methodB() {
->methodB : Symbol(B.methodB, Decl(anonymousClassExpression2.ts, 10, 13))
+>methodB : Symbol(methodB, Decl(anonymousClassExpression2.ts, 10, 13))
 
             this.methodA; // error
 >this : Symbol(B, Decl(anonymousClassExpression2.ts, 8, 5))
 
             this.methodB; // ok
->this.methodB : Symbol(B.methodB, Decl(anonymousClassExpression2.ts, 10, 13))
+>this.methodB : Symbol(methodB, Decl(anonymousClassExpression2.ts, 10, 13))
 >this : Symbol(B, Decl(anonymousClassExpression2.ts, 8, 5))
->methodB : Symbol(B.methodB, Decl(anonymousClassExpression2.ts, 10, 13))
+>methodB : Symbol(methodB, Decl(anonymousClassExpression2.ts, 10, 13))
         }
     }
 }
