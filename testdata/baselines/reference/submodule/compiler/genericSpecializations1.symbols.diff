--- old.genericSpecializations1.symbols
+++ new.genericSpecializations1.symbols
@@= skipped -5, +5 lines =@@
 >T : Symbol(T, Decl(genericSpecializations1.ts, 0, 15))
 
     foo<T>(x: T): T; // no error on implementors because IFoo's T is different from foo's T
->foo : Symbol(IFoo.foo, Decl(genericSpecializations1.ts, 0, 19))
+>foo : Symbol(foo, Decl(genericSpecializations1.ts, 0, 19))
 >T : Symbol(T, Decl(genericSpecializations1.ts, 1, 8))
 >x : Symbol(x, Decl(genericSpecializations1.ts, 1, 11))
 >T : Symbol(T, Decl(genericSpecializations1.ts, 1, 8))
@@= skipped -12, +12 lines =@@
 >IFoo : Symbol(IFoo, Decl(genericSpecializations1.ts, 0, 0))
 
     foo(x: string): string { return null; }
->foo : Symbol(IntFooBad.foo, Decl(genericSpecializations1.ts, 4, 41))
+>foo : Symbol(foo, Decl(genericSpecializations1.ts, 4, 41))
 >x : Symbol(x, Decl(genericSpecializations1.ts, 5, 8))
 }
 
@@= skipped -9, +9 lines =@@
 >IFoo : Symbol(IFoo, Decl(genericSpecializations1.ts, 0, 0))
 
     foo(x: string): string { return null; }
->foo : Symbol(StringFoo2.foo, Decl(genericSpecializations1.ts, 8, 42))
+>foo : Symbol(foo, Decl(genericSpecializations1.ts, 8, 42))
 >x : Symbol(x, Decl(genericSpecializations1.ts, 9, 8))
 }
 
@@= skipped -9, +9 lines =@@
 >IFoo : Symbol(IFoo, Decl(genericSpecializations1.ts, 0, 0))
 
     foo<T>(x: T): T { return null; }
->foo : Symbol(StringFoo3.foo, Decl(genericSpecializations1.ts, 12, 42))
+>foo : Symbol(foo, Decl(genericSpecializations1.ts, 12, 42))
 >T : Symbol(T, Decl(genericSpecializations1.ts, 13, 8))
 >x : Symbol(x, Decl(genericSpecializations1.ts, 13, 11))
 >T : Symbol(T, Decl(genericSpecializations1.ts, 13, 8))
