--- old.defaultDeclarationEmitNamedCorrectly.types
+++ new.defaultDeclarationEmitNamedCorrectly.types
@@= skipped -1, +1 lines =@@
 
 === defaultDeclarationEmitNamedCorrectly.ts ===
 export interface Things<P, T> {
+>Things : Things<P, T>
+>P : P
+>T : T
+
     p: P;
 >p : P
 
@@= skipped -7, +11 lines =@@
 >t : T
 }
 export function make<P, CTor>(x: { new (): CTor & {props: P} }): Things<P, CTor> {
->make : <P, CTor>(x: { new (): CTor & { props: P; }; }) => Things<P, CTor>
+>make : <P, CTor>(x: new () => CTor & { props: P; }) => Things<P, CTor>
+>P : P
+>CTor : CTor
 >x : new () => CTor & { props: P; }
 >props : P
 
@@= skipped -9, +11 lines =@@
 }
 
 export interface Props {
+>Props : Props
 }
 
 export default class MyComponent {
->MyComponent : MyComponent
+>MyComponent : default
 
     props: Props;
 >props : Props
 
     static create = make(MyComponent);
->create : Things<Props, MyComponent>
->make(MyComponent) : Things<Props, MyComponent>
->make : <P, CTor>(x: { new (): CTor & { props: P; }; }) => Things<P, CTor>
->MyComponent : typeof MyComponent
+>create : Things<Props, default>
+>make(MyComponent) : Things<Props, default>
+>make : <P, CTor>(x: new () => CTor & { props: P; }) => Things<P, CTor>
+>MyComponent : typeof default
 }
