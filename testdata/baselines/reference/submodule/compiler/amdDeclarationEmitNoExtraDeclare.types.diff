--- old.amdDeclarationEmitNoExtraDeclare.types
+++ new.amdDeclarationEmitNoExtraDeclare.types
@@= skipped -1, +1 lines =@@
 
 === Class.ts ===
 import { Configurable } from "./Configurable"
->Configurable : <T extends import("Configurable").Constructor<{}>>(base: T) => T
+>Configurable : <T extends Constructor<{}>>(base: T) => T
 
 export class HiddenClass {}
 >HiddenClass : HiddenClass
@@= skipped -8, +8 lines =@@
 export class ActualClass extends Configurable(HiddenClass) {}
 >ActualClass : ActualClass
 >Configurable(HiddenClass) : HiddenClass
->Configurable : <T extends import("Configurable").Constructor<{}>>(base: T) => T
+>Configurable : <T extends Constructor<{}>>(base: T) => T
 >HiddenClass : typeof HiddenClass
 
 === Configurable.ts ===
 export type Constructor<T> = {
 >Constructor : Constructor<T>
+>T : T
 
     new(...args: any[]): T;
 >args : any[]
 }
 export function Configurable<T extends Constructor<{}>>(base: T): T {
 >Configurable : <T extends Constructor<{}>>(base: T) => T
+>T : T
 >base : T
 
     return class extends base {
->class extends base {        constructor(...args: any[]) {            super(...args);        }    } : { new (...args: any[]): (Anonymous class); prototype: Configurable<any>.(Anonymous class); } & T
+>class extends base {        constructor(...args: any[]) {            super(...args);        }    } : { new (...args: any[]): (Anonymous class)<T>; prototype: (Anonymous class)<any>; } & T
 >base : {}
 
         constructor(...args: any[]) {
