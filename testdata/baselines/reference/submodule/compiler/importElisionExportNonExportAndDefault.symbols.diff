--- old.importElisionExportNonExportAndDefault.symbols
+++ new.importElisionExportNonExportAndDefault.symbols
@@= skipped -11, +11 lines =@@
 === MyComponent.ts ===
 interface MyFunction { msg: string; }
 >MyFunction : Symbol(MyFunction, Decl(MyComponent.ts, 0, 0), Decl(MyComponent.ts, 2, 12))
->msg : Symbol(MyFunction.msg, Decl(MyComponent.ts, 0, 22))
+>msg : Symbol(msg, Decl(MyComponent.ts, 0, 22))
 
 export const MyFunction = ({ msg }: MyFunction) => console.log(`Got message "${msg}"`);
 >MyFunction : Symbol(MyFunction, Decl(MyComponent.ts, 2, 12))
 >msg : Symbol(msg, Decl(MyComponent.ts, 2, 28))
 >MyFunction : Symbol(MyFunction, Decl(MyComponent.ts, 0, 0), Decl(MyComponent.ts, 2, 12))
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >msg : Symbol(msg, Decl(MyComponent.ts, 2, 28))
 
 export default MyFunction;
