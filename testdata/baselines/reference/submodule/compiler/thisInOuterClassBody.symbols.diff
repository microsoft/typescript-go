--- old.thisInOuterClassBody.symbols
+++ new.thisInOuterClassBody.symbols
@@= skipped -4, +4 lines =@@
 >Foo : Symbol(Foo, Decl(thisInOuterClassBody.ts, 0, 0))
 
     x = this;
->x : Symbol(Foo.x, Decl(thisInOuterClassBody.ts, 0, 11))
+>x : Symbol(x, Decl(thisInOuterClassBody.ts, 0, 11))
 >this : Symbol(Foo, Decl(thisInOuterClassBody.ts, 0, 0))
 
     static y = this;
->y : Symbol(Foo.y, Decl(thisInOuterClassBody.ts, 2, 13))
+>y : Symbol(y, Decl(thisInOuterClassBody.ts, 2, 13))
 >this : Symbol(Foo, Decl(thisInOuterClassBody.ts, 0, 0))
 
     bar() {
->bar : Symbol(Foo.bar, Decl(thisInOuterClassBody.ts, 4, 20))
+>bar : Symbol(bar, Decl(thisInOuterClassBody.ts, 4, 20))
  
         this.x; // 'this' is type 'Foo'
->this.x : Symbol(Foo.x, Decl(thisInOuterClassBody.ts, 0, 11))
+>this.x : Symbol(x, Decl(thisInOuterClassBody.ts, 0, 11))
 >this : Symbol(Foo, Decl(thisInOuterClassBody.ts, 0, 0))
->x : Symbol(Foo.x, Decl(thisInOuterClassBody.ts, 0, 11))
+>x : Symbol(x, Decl(thisInOuterClassBody.ts, 0, 11))
  
         var f = () => this.x; // 'this' should be type 'Foo' as well
 >f : Symbol(f, Decl(thisInOuterClassBody.ts, 10, 11))
->this.x : Symbol(Foo.x, Decl(thisInOuterClassBody.ts, 0, 11))
+>this.x : Symbol(x, Decl(thisInOuterClassBody.ts, 0, 11))
 >this : Symbol(Foo, Decl(thisInOuterClassBody.ts, 0, 0))
->x : Symbol(Foo.x, Decl(thisInOuterClassBody.ts, 0, 11))
+>x : Symbol(x, Decl(thisInOuterClassBody.ts, 0, 11))
 
         var p = this.y;
 >p : Symbol(p, Decl(thisInOuterClassBody.ts, 11, 11))
@@= skipped -30, +30 lines =@@
     }
 
     static bar2() {
->bar2 : Symbol(Foo.bar2, Decl(thisInOuterClassBody.ts, 13, 5))
+>bar2 : Symbol(bar2, Decl(thisInOuterClassBody.ts, 13, 5))
 
         var a = this.y;
 >a : Symbol(a, Decl(thisInOuterClassBody.ts, 16, 11))
->this.y : Symbol(Foo.y, Decl(thisInOuterClassBody.ts, 2, 13))
+>this.y : Symbol(y, Decl(thisInOuterClassBody.ts, 2, 13))
 >this : Symbol(Foo, Decl(thisInOuterClassBody.ts, 0, 0))
->y : Symbol(Foo.y, Decl(thisInOuterClassBody.ts, 2, 13))
+>y : Symbol(y, Decl(thisInOuterClassBody.ts, 2, 13))
 
         var b = this.x;
 >b : Symbol(b, Decl(thisInOuterClassBody.ts, 17, 11))
