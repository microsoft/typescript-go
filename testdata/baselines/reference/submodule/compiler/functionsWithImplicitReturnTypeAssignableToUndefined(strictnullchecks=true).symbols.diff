--- old.functionsWithImplicitReturnTypeAssignableToUndefined(strictnullchecks=true).symbols
+++ new.functionsWithImplicitReturnTypeAssignableToUndefined(strictnullchecks=true).symbols
@@= skipped -4, +4 lines =@@
 >f1 : Symbol(f1, Decl(functionsWithImplicitReturnTypeAssignableToUndefined.ts, 0, 0))
 
     if (Math.random() < 0.5) return true;
->Math.random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
+>Math.random : Symbol(random, Decl(lib.es5.d.ts, --, --))
 >Math : Symbol(Math, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
+>random : Symbol(random, Decl(lib.es5.d.ts, --, --))
 
     // Implicit return, but undefined is always assignable to unknown.
 }
@@= skipped -14, +14 lines =@@
 >f2 : Symbol(f2, Decl(functionsWithImplicitReturnTypeAssignableToUndefined.ts, 6, 25))
 
     if (Math.random() < 0.5) return true;
->Math.random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
+>Math.random : Symbol(random, Decl(lib.es5.d.ts, --, --))
 >Math : Symbol(Math, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
+>random : Symbol(random, Decl(lib.es5.d.ts, --, --))
 
     // Implicit return, but undefined is always assignable to unknown.
 }
@@= skipped -23, +23 lines =@@
 >f5 : Symbol(f5, Decl(functionsWithImplicitReturnTypeAssignableToUndefined.ts, 19, 1))
 
     if (Math.random() < 0.5) return {};
->Math.random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
+>Math.random : Symbol(random, Decl(lib.es5.d.ts, --, --))
 >Math : Symbol(Math, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
+>random : Symbol(random, Decl(lib.es5.d.ts, --, --))
 
     // Implicit return, but undefined is assignable to object when strictNullChecks is off.
 }
@@= skipped -12, +12 lines =@@
 >Record : Symbol(Record, Decl(lib.es5.d.ts, --, --))
 
     if (Math.random() < 0.5) return { "foo": true };
->Math.random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
+>Math.random : Symbol(random, Decl(lib.es5.d.ts, --, --))
 >Math : Symbol(Math, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
->"foo" : Symbol("foo", Decl(functionsWithImplicitReturnTypeAssignableToUndefined.ts, 28, 37))
+>random : Symbol(random, Decl(lib.es5.d.ts, --, --))
+>"foo" : Symbol(foo, Decl(functionsWithImplicitReturnTypeAssignableToUndefined.ts, 28, 37))
 
     // Implicit return, but undefined is assignable to records (which are just fancy objects)
     // when strictNullChecks is off.
@@= skipped -13, +13 lines =@@
 >f7 : Symbol(f7, Decl(functionsWithImplicitReturnTypeAssignableToUndefined.ts, 32, 1))
 
     if (Math.random() < 0.5) return null;
->Math.random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
+>Math.random : Symbol(random, Decl(lib.es5.d.ts, --, --))
 >Math : Symbol(Math, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
+>random : Symbol(random, Decl(lib.es5.d.ts, --, --))
 
     // Implicit return, but undefined is assignable to null when strictNullChecks is off.
 }
@@= skipped -11, +11 lines =@@
 >f8 : Symbol(f8, Decl(functionsWithImplicitReturnTypeAssignableToUndefined.ts, 38, 1))
 
     if (Math.random() < 0.5) return "foo";
->Math.random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
+>Math.random : Symbol(random, Decl(lib.es5.d.ts, --, --))
 >Math : Symbol(Math, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
+>random : Symbol(random, Decl(lib.es5.d.ts, --, --))
 
     // Implicit return, but undefined is assignable to null when strictNullChecks is off.
 }
