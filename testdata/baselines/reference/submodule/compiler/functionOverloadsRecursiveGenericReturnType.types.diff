--- old.functionOverloadsRecursiveGenericReturnType.types
+++ new.functionOverloadsRecursiveGenericReturnType.types
@@= skipped -2, +2 lines =@@
 === functionOverloadsRecursiveGenericReturnType.ts ===
 class B<V>{
 >B : B<V>
+>V : V
 
     private id: V;
 >id : V
@@= skipped -7, +8 lines =@@
 
 class A<U>{
 >A : A<U>
+>U : U
 
     GetEnumerator: () => B<U>;
 >GetEnumerator : () => B<U>
 }
 
 function Choice<T>(args: T[]): A<T>;
->Choice : { <T>(args: T[]): A<T>; <T_1>(...v_args: T_1[]): A<T_1>; }
+>Choice : { <T>(args: T[]): A<T>; <T>(...v_args: T[]): A<T>; }
+>T : T
 >args : T[]
 
 function Choice<T>(...v_args: T[]): A<T>;
->Choice : { <T_1>(args: T_1[]): A<T_1>; <T>(...v_args: T[]): A<T>; }
+>Choice : { <T>(args: T[]): A<T>; <T>(...v_args: T[]): A<T>; }
+>T : T
 >v_args : T[]
 
 function Choice<T>(...v_args: any[]): A<T>{
->Choice : { <T_1>(args: T_1[]): A<T_1>; <T_1>(...v_args: T_1[]): A<T_1>; }
+>Choice : { <T>(args: T[]): A<T>; <T>(...v_args: T[]): A<T>; }
+>T : T
 >v_args : any[]
 
     return new A<T>();
