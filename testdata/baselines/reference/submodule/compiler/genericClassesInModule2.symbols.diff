--- old.genericClassesInModule2.symbols
+++ new.genericClassesInModule2.symbols
@@= skipped -5, +5 lines =@@
 >T1 : Symbol(T1, Decl(genericClassesInModule2.ts, 0, 15))
 
     constructor( public callback: (self: A<T1>) => void) {
->callback : Symbol(A.callback, Decl(genericClassesInModule2.ts, 1, 16))
+>callback : Symbol(callback, Decl(genericClassesInModule2.ts, 1, 16))
 >self : Symbol(self, Decl(genericClassesInModule2.ts, 1, 35))
 >A : Symbol(A, Decl(genericClassesInModule2.ts, 0, 0))
 >T1 : Symbol(T1, Decl(genericClassesInModule2.ts, 0, 15))
@@= skipped -11, +11 lines =@@
 >this : Symbol(A, Decl(genericClassesInModule2.ts, 0, 0))
     }
     AAA( callback: (self: A<T1>) => void) {
->AAA : Symbol(A.AAA, Decl(genericClassesInModule2.ts, 3, 5))
+>AAA : Symbol(AAA, Decl(genericClassesInModule2.ts, 3, 5))
 >callback : Symbol(callback, Decl(genericClassesInModule2.ts, 4, 8))
 >self : Symbol(self, Decl(genericClassesInModule2.ts, 4, 20))
 >A : Symbol(A, Decl(genericClassesInModule2.ts, 0, 0))
@@= skipped -18, +18 lines =@@
 >T1 : Symbol(T1, Decl(genericClassesInModule2.ts, 9, 19))
 
     child: B<T1>;
->child : Symbol(C.child, Decl(genericClassesInModule2.ts, 9, 23))
+>child : Symbol(child, Decl(genericClassesInModule2.ts, 9, 23))
 >B : Symbol(B, Decl(genericClassesInModule2.ts, 13, 1))
 >T1 : Symbol(T1, Decl(genericClassesInModule2.ts, 9, 19))
 
@@= skipped -21, +21 lines =@@
 >T2 : Symbol(T2, Decl(genericClassesInModule2.ts, 15, 15))
 
     constructor(public parent: T2) { }
->parent : Symbol(B.parent, Decl(genericClassesInModule2.ts, 16, 16))
+>parent : Symbol(parent, Decl(genericClassesInModule2.ts, 16, 16))
 >T2 : Symbol(T2, Decl(genericClassesInModule2.ts, 15, 15))
 }
 
