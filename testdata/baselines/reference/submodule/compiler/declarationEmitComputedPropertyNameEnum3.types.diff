--- old.declarationEmitComputedPropertyNameEnum3.types
+++ new.declarationEmitComputedPropertyNameEnum3.types
@@= skipped -2, +2 lines =@@
 === type.ts ===
 export namespace Foo {
 >Foo : typeof Foo
->    : ^^^^^^^^^^
 
   export enum Enum {
 >Enum : Enum
->     : ^^^^
 
     A = "a",
 >A : Enum.A
->  : ^^^^^^
 >"a" : "a"
->    : ^^^
 
     B = "b",
 >B : Enum.B
->  : ^^^^^^
 >"b" : "b"
->    : ^^^
   }
 }
 export type Type = { x?: { [Foo.Enum]: 0 } };
 >Type : Type
->     : ^^^^
 >x : {} | undefined
->  : ^^^^^^^^^^^^^^
 >[Foo.Enum] : 0
->           : ^
->Foo.Enum : typeof Foo.Enum
->         : ^^^^^^^^^^^^^^^
+>Foo.Enum : typeof Enum
 >Foo : typeof Foo
->    : ^^^^^^^^^^
->Enum : typeof Foo.Enum
->     : ^^^^^^^^^^^^^^^
+>Enum : typeof Enum
 
 === index.ts ===
 import { type Type } from "./type";
 >Type : any
->     : ^^^
 
 export const foo = { ...({} as Type) };
->foo : { x?: {}; }
->    : ^^^^^^  ^^^
->{ ...({} as Type) } : { x?: {}; }
->                    : ^^^^^^  ^^^
+>foo : { x?: {} | undefined; }
+>{ ...({} as Type) } : { x?: {} | undefined; }
 >({} as Type) : Type
->             : ^^^^
 >{} as Type : Type
->           : ^^^^
 >{} : {}
->   : ^^
 
