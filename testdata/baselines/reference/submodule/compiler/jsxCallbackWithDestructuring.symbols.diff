--- old.jsxCallbackWithDestructuring.symbols
+++ new.jsxCallbackWithDestructuring.symbols
@@= skipped -17, +17 lines =@@
 >context : Symbol(context, Decl(jsxCallbackWithDestructuring.tsx, 3, 25))
 
     render(): {};
->render : Symbol(Component.render, Decl(jsxCallbackWithDestructuring.tsx, 3, 41))
+>render : Symbol(render, Decl(jsxCallbackWithDestructuring.tsx, 3, 41))
 
     props: Readonly<{ children?: {} }> & Readonly<P>;
->props : Symbol(Component.props, Decl(jsxCallbackWithDestructuring.tsx, 4, 17))
+>props : Symbol(props, Decl(jsxCallbackWithDestructuring.tsx, 4, 17))
 >Readonly : Symbol(Readonly, Decl(lib.es5.d.ts, --, --))
 >children : Symbol(children, Decl(jsxCallbackWithDestructuring.tsx, 5, 21))
 >Readonly : Symbol(Readonly, Decl(lib.es5.d.ts, --, --))
@@= skipped -11, +11 lines =@@
 }
 
 declare global {
->global : Symbol(global, Decl(jsxCallbackWithDestructuring.tsx, 6, 1))
+>global : Symbol((Missing), Decl(jsxCallbackWithDestructuring.tsx, 6, 1))
 
     namespace JSX {
 >JSX : Symbol(JSX, Decl(jsxCallbackWithDestructuring.tsx, 8, 16))
@@= skipped -12, +12 lines =@@
 >ElementClass : Symbol(ElementClass, Decl(jsxCallbackWithDestructuring.tsx, 10, 30))
 
             render(): {};
->render : Symbol(ElementClass.render, Decl(jsxCallbackWithDestructuring.tsx, 11, 33))
+>render : Symbol(render, Decl(jsxCallbackWithDestructuring.tsx, 11, 33))
         }
         interface ElementAttributesProperty { props: {}; }
 >ElementAttributesProperty : Symbol(ElementAttributesProperty, Decl(jsxCallbackWithDestructuring.tsx, 13, 9))
->props : Symbol(ElementAttributesProperty.props, Decl(jsxCallbackWithDestructuring.tsx, 14, 45))
+>props : Symbol(props, Decl(jsxCallbackWithDestructuring.tsx, 14, 45))
 
         interface ElementChildrenAttribute { children: {}; }
 >ElementChildrenAttribute : Symbol(ElementChildrenAttribute, Decl(jsxCallbackWithDestructuring.tsx, 14, 58))
->children : Symbol(ElementChildrenAttribute.children, Decl(jsxCallbackWithDestructuring.tsx, 15, 44))
+>children : Symbol(children, Decl(jsxCallbackWithDestructuring.tsx, 15, 44))
 
         interface IntrinsicAttributes  { }
 >IntrinsicAttributes : Symbol(IntrinsicAttributes, Decl(jsxCallbackWithDestructuring.tsx, 15, 60))
@@= skipped -23, +23 lines =@@
 >RouteProps : Symbol(RouteProps, Decl(jsxCallbackWithDestructuring.tsx, 19, 1))
 
     children?: (props: { x: number }) => any;
->children : Symbol(RouteProps.children, Decl(jsxCallbackWithDestructuring.tsx, 21, 29))
+>children : Symbol(children, Decl(jsxCallbackWithDestructuring.tsx, 21, 29))
 >props : Symbol(props, Decl(jsxCallbackWithDestructuring.tsx, 22, 16))
 >x : Symbol(x, Decl(jsxCallbackWithDestructuring.tsx, 22, 24))
 }
