--- old.checkInfiniteExpansionTermination2.types
+++ new.checkInfiniteExpansionTermination2.types
@@= skipped -4, +4 lines =@@
 // Before fix this code would cause infinite loop
 
 interface IObservable<T> {
+>IObservable : IObservable<T>
+>T : T
+
     n: IObservable<T[]>;
 >n : IObservable<T[]>
 }
 interface ISubject<T> extends IObservable<T> { }
+>ISubject : ISubject<T>
+>T : T
 
 declare function combineLatest<TOther>(x: IObservable<TOther>[]): void;
 >combineLatest : { <TOther>(x: IObservable<TOther>[]): void; (): void; }
+>TOther : TOther
 >x : IObservable<TOther>[]
 
 declare function combineLatest(): void;
@@= skipped -14, +20 lines =@@
 
 function fn<T>() {
 >fn : <T>() => void
+>T : T
 
     var values: ISubject<any>[] = [];
 >values : ISubject<any>[]
