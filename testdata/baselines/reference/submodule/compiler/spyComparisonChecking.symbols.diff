--- old.spyComparisonChecking.symbols
+++ new.spyComparisonChecking.symbols
@@= skipped -11, +11 lines =@@

     and: Function;
 >and : Symbol(Spy.and, Decl(spyComparisonChecking.ts, 3, 21))
->Function : Symbol(Function, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>Function : Symbol(Function, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))

     mostRecentCall: { args: any[]; };
 >mostRecentCall : Symbol(Spy.mostRecentCall, Decl(spyComparisonChecking.ts, 4, 18))
@@= skipped -28, +28 lines =@@
     name: string, names: Array<keyof T>): SpyObj<T>;
 >name : Symbol(name, Decl(spyComparisonChecking.ts, 13, 33))
 >names : Symbol(names, Decl(spyComparisonChecking.ts, 14, 17))
->Array : Symbol(Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>Array : Symbol(Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 >T : Symbol(T, Decl(spyComparisonChecking.ts, 13, 30))
 >SpyObj : Symbol(SpyObj, Decl(spyComparisonChecking.ts, 7, 1))
 >T : Symbol(T, Decl(spyComparisonChecking.ts, 13, 30))
@@= skipped -10, +10 lines =@@
 >T : Symbol(T, Decl(spyComparisonChecking.ts, 16, 14))
 >spyName : Symbol(spyName, Decl(spyComparisonChecking.ts, 16, 17))
 >methodNames : Symbol(methodNames, Decl(spyComparisonChecking.ts, 16, 33))
->Array : Symbol(Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>Array : Symbol(Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 >T : Symbol(T, Decl(spyComparisonChecking.ts, 16, 14))
 >SpyObj : Symbol(SpyObj, Decl(spyComparisonChecking.ts, 7, 1))
 >T : Symbol(T, Decl(spyComparisonChecking.ts, 16, 14))