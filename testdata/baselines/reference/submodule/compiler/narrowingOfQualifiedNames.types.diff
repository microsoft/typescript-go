--- old.narrowingOfQualifiedNames.types
+++ new.narrowingOfQualifiedNames.types
@@= skipped -3, +3 lines =@@
 // Repro from #43411
 
 interface IProperties {
+>IProperties : IProperties
+
     foo?: {
 >foo : { aaa: string; bbb: string; } | undefined
 
@@= skipped -53, +55 lines =@@
 }
 
 interface DeepOptional {
+>DeepOptional : DeepOptional
+
     a?: {
->a : { b?: { c?: string; }; } | undefined
+>a : { b?: { c?: string | undefined; } | undefined; } | undefined
 
         b?: {
->b : { c?: string; } | undefined
+>b : { c?: string | undefined; } | undefined
 
             c?: string
 >c : string | undefined
@@= skipped -17, +19 lines =@@
 >foo : DeepOptional
 
     if (foo.a) {
->foo.a : { b?: { c?: string; }; } | undefined
+>foo.a : { b?: { c?: string | undefined; } | undefined; } | undefined
 >foo : DeepOptional
->a : { b?: { c?: string; }; } | undefined
+>a : { b?: { c?: string | undefined; } | undefined; } | undefined
 
         type A = typeof foo.a;
->A : { b?: { c?: string; }; }
->foo.a : { b?: { c?: string; }; }
+>A : { b?: { c?: string | undefined; } | undefined; }
+>foo.a : { b?: { c?: string | undefined; } | undefined; }
 >foo : DeepOptional
->a : { b?: { c?: string; }; }
+>a : { b?: { c?: string | undefined; } | undefined; }
 
         type B = typeof foo.a.b;
->B : { c?: string; } | undefined
->foo.a.b : { c?: string; } | undefined
->foo.a : { b?: { c?: string; }; }
+>B : { c?: string | undefined; } | undefined
+>foo.a.b : { c?: string | undefined; } | undefined
+>foo.a : { b?: { c?: string | undefined; } | undefined; }
 >foo : DeepOptional
->a : { b?: { c?: string; }; }
->b : { c?: string; } | undefined
+>a : { b?: { c?: string | undefined; } | undefined; }
+>b : { c?: string | undefined; } | undefined
 
         type C = typeof foo.a.b.c;
 >C : string | undefined
 >foo.a.b.c : string | undefined
->foo.a.b : { c?: string; } | undefined
->foo.a : { b?: { c?: string; }; }
+>foo.a.b : { c?: string | undefined; } | undefined
+>foo.a : { b?: { c?: string | undefined; } | undefined; }
 >foo : DeepOptional
->a : { b?: { c?: string; }; }
->b : { c?: string; } | undefined
+>a : { b?: { c?: string | undefined; } | undefined; }
+>b : { c?: string | undefined; } | undefined
 >c : string | undefined
 
         for(const _ of [1]) {
@@= skipped -34, +34 lines =@@
 >1 : 1
 
             type A = typeof foo.a;
->A : { b?: { c?: string; }; }
->foo.a : { b?: { c?: string; }; }
+>A : { b?: { c?: string | undefined; } | undefined; }
+>foo.a : { b?: { c?: string | undefined; } | undefined; }
 >foo : DeepOptional
->a : { b?: { c?: string; }; }
+>a : { b?: { c?: string | undefined; } | undefined; }
 
             type B = typeof foo.a.b;
->B : { c?: string; } | undefined
->foo.a.b : { c?: string; } | undefined
->foo.a : { b?: { c?: string; }; }
+>B : { c?: string | undefined; } | undefined
+>foo.a.b : { c?: string | undefined; } | undefined
+>foo.a : { b?: { c?: string | undefined; } | undefined; }
 >foo : DeepOptional
->a : { b?: { c?: string; }; }
->b : { c?: string; } | undefined
+>a : { b?: { c?: string | undefined; } | undefined; }
+>b : { c?: string | undefined; } | undefined
 
             type C = typeof foo.a.b.c;
 >C : string | undefined
 >foo.a.b.c : string | undefined
->foo.a.b : { c?: string; } | undefined
->foo.a : { b?: { c?: string; }; }
+>foo.a.b : { c?: string | undefined; } | undefined
+>foo.a : { b?: { c?: string | undefined; } | undefined; }
 >foo : DeepOptional
->a : { b?: { c?: string; }; }
->b : { c?: string; } | undefined
+>a : { b?: { c?: string | undefined; } | undefined; }
+>b : { c?: string | undefined; } | undefined
 >c : string | undefined
 
             if (foo.a.b) {
->foo.a.b : { c?: string; } | undefined
->foo.a : { b?: { c?: string; }; }
+>foo.a.b : { c?: string | undefined; } | undefined
+>foo.a : { b?: { c?: string | undefined; } | undefined; }
 >foo : DeepOptional
->a : { b?: { c?: string; }; }
->b : { c?: string; } | undefined
+>a : { b?: { c?: string | undefined; } | undefined; }
+>b : { c?: string | undefined; } | undefined
 
                 type A = typeof foo.a;
->A : { b?: { c?: string; }; }
->foo.a : { b?: { c?: string; }; }
+>A : { b?: { c?: string | undefined; } | undefined; }
+>foo.a : { b?: { c?: string | undefined; } | undefined; }
 >foo : DeepOptional
->a : { b?: { c?: string; }; }
+>a : { b?: { c?: string | undefined; } | undefined; }
 
                 type B = typeof foo.a.b;
->B : { c?: string; }
->foo.a.b : { c?: string; }
->foo.a : { b?: { c?: string; }; }
+>B : { c?: string | undefined; }
+>foo.a.b : { c?: string | undefined; }
+>foo.a : { b?: { c?: string | undefined; } | undefined; }
 >foo : DeepOptional
->a : { b?: { c?: string; }; }
->b : { c?: string; }
+>a : { b?: { c?: string | undefined; } | undefined; }
+>b : { c?: string | undefined; }
 
                 type C = typeof foo.a.b.c;
 >C : string | undefined
 >foo.a.b.c : string | undefined
->foo.a.b : { c?: string; }
->foo.a : { b?: { c?: string; }; }
+>foo.a.b : { c?: string | undefined; }
+>foo.a : { b?: { c?: string | undefined; } | undefined; }
 >foo : DeepOptional
->a : { b?: { c?: string; }; }
->b : { c?: string; }
+>a : { b?: { c?: string | undefined; } | undefined; }
+>b : { c?: string | undefined; }
 >c : string | undefined
 
                 for(const _ of [1]) {
@@= skipped -60, +60 lines =@@
 >1 : 1
 
                     type A = typeof foo.a;
->A : { b?: { c?: string; }; }
->foo.a : { b?: { c?: string; }; }
+>A : { b?: { c?: string | undefined; } | undefined; }
+>foo.a : { b?: { c?: string | undefined; } | undefined; }
 >foo : DeepOptional
->a : { b?: { c?: string; }; }
+>a : { b?: { c?: string | undefined; } | undefined; }
 
                     type B = typeof foo.a.b;
->B : { c?: string; }
->foo.a.b : { c?: string; }
->foo.a : { b?: { c?: string; }; }
+>B : { c?: string | undefined; }
+>foo.a.b : { c?: string | undefined; }
+>foo.a : { b?: { c?: string | undefined; } | undefined; }
 >foo : DeepOptional
->a : { b?: { c?: string; }; }
->b : { c?: string; }
+>a : { b?: { c?: string | undefined; } | undefined; }
+>b : { c?: string | undefined; }
 
                     type C = typeof foo.a.b.c;
 >C : string | undefined
 >foo.a.b.c : string | undefined
->foo.a.b : { c?: string; }
->foo.a : { b?: { c?: string; }; }
+>foo.a.b : { c?: string | undefined; }
+>foo.a : { b?: { c?: string | undefined; } | undefined; }
 >foo : DeepOptional
->a : { b?: { c?: string; }; }
->b : { c?: string; }
+>a : { b?: { c?: string | undefined; } | undefined; }
+>b : { c?: string | undefined; }
 >c : string | undefined
 
                     if (foo.a.b.c) {
 >foo.a.b.c : string | undefined
->foo.a.b : { c?: string; }
->foo.a : { b?: { c?: string; }; }
+>foo.a.b : { c?: string | undefined; }
+>foo.a : { b?: { c?: string | undefined; } | undefined; }
 >foo : DeepOptional
->a : { b?: { c?: string; }; }
->b : { c?: string; }
+>a : { b?: { c?: string | undefined; } | undefined; }
+>b : { c?: string | undefined; }
 >c : string | undefined
 
                         type A = typeof foo.a;
->A : { b?: { c?: string; }; }
->foo.a : { b?: { c?: string; }; }
+>A : { b?: { c?: string | undefined; } | undefined; }
+>foo.a : { b?: { c?: string | undefined; } | undefined; }
 >foo : DeepOptional
->a : { b?: { c?: string; }; }
+>a : { b?: { c?: string | undefined; } | undefined; }
 
                         type B = typeof foo.a.b;
->B : { c?: string; }
->foo.a.b : { c?: string; }
->foo.a : { b?: { c?: string; }; }
+>B : { c?: string | undefined; }
+>foo.a.b : { c?: string | undefined; }
+>foo.a : { b?: { c?: string | undefined; } | undefined; }
 >foo : DeepOptional
->a : { b?: { c?: string; }; }
->b : { c?: string; }
+>a : { b?: { c?: string | undefined; } | undefined; }
+>b : { c?: string | undefined; }
 
                         type C = typeof foo.a.b.c;
 >C : string
 >foo.a.b.c : string
->foo.a.b : { c?: string; }
->foo.a : { b?: { c?: string; }; }
+>foo.a.b : { c?: string | undefined; }
+>foo.a : { b?: { c?: string | undefined; } | undefined; }
 >foo : DeepOptional
->a : { b?: { c?: string; }; }
->b : { c?: string; }
+>a : { b?: { c?: string | undefined; } | undefined; }
+>b : { c?: string | undefined; }
 >c : string
 
                         for(const _ of [1]) {
@@= skipped -62, +62 lines =@@
 >1 : 1
 
                             type A = typeof foo.a;
->A : { b?: { c?: string; }; }
->foo.a : { b?: { c?: string; }; }
+>A : { b?: { c?: string | undefined; } | undefined; }
+>foo.a : { b?: { c?: string | undefined; } | undefined; }
 >foo : DeepOptional
->a : { b?: { c?: string; }; }
+>a : { b?: { c?: string | undefined; } | undefined; }
 
                             type B = typeof foo.a.b;
->B : { c?: string; }
->foo.a.b : { c?: string; }
->foo.a : { b?: { c?: string; }; }
+>B : { c?: string | undefined; }
+>foo.a.b : { c?: string | undefined; }
+>foo.a : { b?: { c?: string | undefined; } | undefined; }
 >foo : DeepOptional
->a : { b?: { c?: string; }; }
->b : { c?: string; }
+>a : { b?: { c?: string | undefined; } | undefined; }
+>b : { c?: string | undefined; }
 
                             type C = typeof foo.a.b.c;
 >C : string
 >foo.a.b.c : string
->foo.a.b : { c?: string; }
->foo.a : { b?: { c?: string; }; }
+>foo.a.b : { c?: string | undefined; }
+>foo.a : { b?: { c?: string | undefined; } | undefined; }
 >foo : DeepOptional
->a : { b?: { c?: string; }; }
->b : { c?: string; }
+>a : { b?: { c?: string | undefined; } | undefined; }
+>b : { c?: string | undefined; }
 >c : string
                         }
                     }
@@= skipped -49, +49 lines =@@
 
 function handleDogBroken<PetType extends Pet>(pet: PetType) {
 >handleDogBroken : <PetType extends Pet>(pet: PetType) => void
+>PetType : PetType
 >pet : PetType
 
     if(pet.type === 'dog') {
 >pet.type === 'dog' : boolean
->pet.type : "fish" | "dog"
+>pet.type : "dog" | "fish"
 >pet : Pet
->type : "fish" | "dog"
+>type : "dog" | "fish"
 >'dog' : "dog"
 
         const _okay1 = pet.saysWoof;
@@= skipped -32, +33 lines =@@
 
     if(pet.type === 'dog') {
 >pet.type === 'dog' : boolean
->pet.type : "fish" | "dog"
+>pet.type : "dog" | "fish"
 >pet : Pet
->type : "fish" | "dog"
+>type : "dog" | "fish"
 >'dog' : "dog"
 
         const _okay1 = pet.saysWoof;
