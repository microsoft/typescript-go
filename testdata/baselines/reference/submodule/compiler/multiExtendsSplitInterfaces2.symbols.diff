--- old.multiExtendsSplitInterfaces2.symbols
+++ new.multiExtendsSplitInterfaces2.symbols
@@= skipped -4, +4 lines =@@
 >A : Symbol(A, Decl(multiExtendsSplitInterfaces2.ts, 0, 0))
 
 	a: number;
->a : Symbol(A.a, Decl(multiExtendsSplitInterfaces2.ts, 0, 13))
+>a : Symbol(a, Decl(multiExtendsSplitInterfaces2.ts, 0, 13))
 }
 
 interface I extends A {
@@= skipped -8, +8 lines =@@
 >A : Symbol(A, Decl(multiExtendsSplitInterfaces2.ts, 0, 0))
 
 	i1: number;
->i1 : Symbol(I.i1, Decl(multiExtendsSplitInterfaces2.ts, 4, 23))
+>i1 : Symbol(i1, Decl(multiExtendsSplitInterfaces2.ts, 4, 23))
 }
 
 interface B {
 >B : Symbol(B, Decl(multiExtendsSplitInterfaces2.ts, 6, 1))
 
 	b: number;
->b : Symbol(B.b, Decl(multiExtendsSplitInterfaces2.ts, 8, 13))
+>b : Symbol(b, Decl(multiExtendsSplitInterfaces2.ts, 8, 13))
 }
 
 interface I extends B {
@@= skipped -15, +15 lines =@@
 >B : Symbol(B, Decl(multiExtendsSplitInterfaces2.ts, 6, 1))
 
 	i2: number;
->i2 : Symbol(I.i2, Decl(multiExtendsSplitInterfaces2.ts, 12, 23))
+>i2 : Symbol(i2, Decl(multiExtendsSplitInterfaces2.ts, 12, 23))
 }
 
 var i: I;
@@= skipped -9, +9 lines =@@
 
 var a = i.a;
 >a : Symbol(a, Decl(multiExtendsSplitInterfaces2.ts, 18, 3))
->i.a : Symbol(A.a, Decl(multiExtendsSplitInterfaces2.ts, 0, 13))
+>i.a : Symbol(a, Decl(multiExtendsSplitInterfaces2.ts, 0, 13))
 >i : Symbol(i, Decl(multiExtendsSplitInterfaces2.ts, 16, 3))
->a : Symbol(A.a, Decl(multiExtendsSplitInterfaces2.ts, 0, 13))
+>a : Symbol(a, Decl(multiExtendsSplitInterfaces2.ts, 0, 13))
 
 var i1 = i.i1;
 >i1 : Symbol(i1, Decl(multiExtendsSplitInterfaces2.ts, 19, 3))
->i.i1 : Symbol(I.i1, Decl(multiExtendsSplitInterfaces2.ts, 4, 23))
+>i.i1 : Symbol(i1, Decl(multiExtendsSplitInterfaces2.ts, 4, 23))
 >i : Symbol(i, Decl(multiExtendsSplitInterfaces2.ts, 16, 3))
->i1 : Symbol(I.i1, Decl(multiExtendsSplitInterfaces2.ts, 4, 23))
+>i1 : Symbol(i1, Decl(multiExtendsSplitInterfaces2.ts, 4, 23))
 
 var b = i.b;
 >b : Symbol(b, Decl(multiExtendsSplitInterfaces2.ts, 20, 3))
->i.b : Symbol(B.b, Decl(multiExtendsSplitInterfaces2.ts, 8, 13))
+>i.b : Symbol(b, Decl(multiExtendsSplitInterfaces2.ts, 8, 13))
 >i : Symbol(i, Decl(multiExtendsSplitInterfaces2.ts, 16, 3))
->b : Symbol(B.b, Decl(multiExtendsSplitInterfaces2.ts, 8, 13))
+>b : Symbol(b, Decl(multiExtendsSplitInterfaces2.ts, 8, 13))
 
 var i2 = i.i2;
 >i2 : Symbol(i2, Decl(multiExtendsSplitInterfaces2.ts, 21, 3))
->i.i2 : Symbol(I.i2, Decl(multiExtendsSplitInterfaces2.ts, 12, 23))
+>i.i2 : Symbol(i2, Decl(multiExtendsSplitInterfaces2.ts, 12, 23))
 >i : Symbol(i, Decl(multiExtendsSplitInterfaces2.ts, 16, 3))
->i2 : Symbol(I.i2, Decl(multiExtendsSplitInterfaces2.ts, 12, 23))
+>i2 : Symbol(i2, Decl(multiExtendsSplitInterfaces2.ts, 12, 23))
 
