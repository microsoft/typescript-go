--- old.strictModeReservedWordInClassDeclaration.symbols
+++ new.strictModeReservedWordInClassDeclaration.symbols
@@= skipped -17, +17 lines =@@
 >static : Symbol(static, Decl(strictModeReservedWordInClassDeclaration.ts, 3, 32))
     }
     public banana(x: public) { }
->banana : Symbol(Foo.banana, Decl(strictModeReservedWordInClassDeclaration.ts, 5, 5))
+>banana : Symbol(banana, Decl(strictModeReservedWordInClassDeclaration.ts, 5, 5))
 >x : Symbol(x, Decl(strictModeReservedWordInClassDeclaration.ts, 6, 18))
 >public : Symbol(public, Decl(strictModeReservedWordInClassDeclaration.ts, 0, 0))
 }
@@= skipped -9, +9 lines =@@
 >C : Symbol(C, Decl(strictModeReservedWordInClassDeclaration.ts, 7, 1))
 
     constructor(public public, let) {
->public : Symbol(C.public, Decl(strictModeReservedWordInClassDeclaration.ts, 10, 16))
+>public : Symbol(public, Decl(strictModeReservedWordInClassDeclaration.ts, 10, 16))
 >let : Symbol(let, Decl(strictModeReservedWordInClassDeclaration.ts, 10, 30))
     }
     foo1(private, static, public) {
->foo1 : Symbol(C.foo1, Decl(strictModeReservedWordInClassDeclaration.ts, 11, 5))
+>foo1 : Symbol(foo1, Decl(strictModeReservedWordInClassDeclaration.ts, 11, 5))
 >private : Symbol(private, Decl(strictModeReservedWordInClassDeclaration.ts, 12, 9))
 >static : Symbol(static, Decl(strictModeReservedWordInClassDeclaration.ts, 12, 17))
 >public : Symbol(public, Decl(strictModeReservedWordInClassDeclaration.ts, 12, 25))
@@= skipped -18, +18 lines =@@
     }
 
     public pulbic() { } // No Error;
->pulbic : Symbol(C.pulbic, Decl(strictModeReservedWordInClassDeclaration.ts, 15, 5))
+>pulbic : Symbol(pulbic, Decl(strictModeReservedWordInClassDeclaration.ts, 15, 5))
 }
 
 class D<public, private>{ }
