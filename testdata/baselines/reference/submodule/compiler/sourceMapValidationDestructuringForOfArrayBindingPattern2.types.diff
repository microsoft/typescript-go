--- old.sourceMapValidationDestructuringForOfArrayBindingPattern2.types
+++ new.sourceMapValidationDestructuringForOfArrayBindingPattern2.types
@@= skipped -1, +1 lines =@@
 
 === sourceMapValidationDestructuringForOfArrayBindingPattern2.ts ===
 declare var console: {
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 
     log(msg: any): void;
 >log : (msg: any) => void
@@= skipped -90, +90 lines =@@
 
 for ([, nameA] of robots) {
 >[, nameA] : [undefined, string]
-> : undefined
 >nameA : string
 >robots : Robot[]
 
     console.log(nameA);
 >console.log(nameA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >nameA : string
 }
 for ([, nameA] of getRobots()) {
 >[, nameA] : [undefined, string]
-> : undefined
 >nameA : string
 >getRobots() : Robot[]
 >getRobots : () => Robot[]
@@= skipped -21, +19 lines =@@
     console.log(nameA);
 >console.log(nameA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >nameA : string
 }
 for ([, nameA] of [robotA, robotB]) {
 >[, nameA] : [undefined, string]
-> : undefined
 >nameA : string
 >[robotA, robotB] : Robot[]
 >robotA : Robot
@@= skipped -15, +14 lines =@@
     console.log(nameA);
 >console.log(nameA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >nameA : string
 }
 for ([, [primarySkillA, secondarySkillA]] of multiRobots) {
 >[, [primarySkillA, secondarySkillA]] : [undefined, [string, string]]
-> : undefined
 >[primarySkillA, secondarySkillA] : [string, string]
 >primarySkillA : string
 >secondarySkillA : string
@@= skipped -15, +14 lines =@@
     console.log(primarySkillA);
 >console.log(primarySkillA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >primarySkillA : string
 }
 for ([, [primarySkillA, secondarySkillA]] of getMultiRobots()) {
 >[, [primarySkillA, secondarySkillA]] : [undefined, [string, string]]
-> : undefined
 >[primarySkillA, secondarySkillA] : [string, string]
 >primarySkillA : string
 >secondarySkillA : string
@@= skipped -16, +15 lines =@@
     console.log(primarySkillA);
 >console.log(primarySkillA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >primarySkillA : string
 }
 for ([, [primarySkillA, secondarySkillA]] of [multiRobotA, multiRobotB]) {
 >[, [primarySkillA, secondarySkillA]] : [undefined, [string, string]]
-> : undefined
 >[primarySkillA, secondarySkillA] : [string, string]
 >primarySkillA : string
 >secondarySkillA : string
@@= skipped -17, +16 lines =@@
     console.log(primarySkillA);
 >console.log(primarySkillA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >primarySkillA : string
 }
@@= skipped -13, +13 lines =@@
     console.log(numberB);
 >console.log(numberB) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >numberB : number
 }
@@= skipped -13, +13 lines =@@
     console.log(numberB);
 >console.log(numberB) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >numberB : number
 }
@@= skipped -14, +14 lines =@@
     console.log(numberB);
 >console.log(numberB) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >numberB : number
 }
@@= skipped -12, +12 lines =@@
     console.log(nameB);
 >console.log(nameB) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >nameB : string
 }
@@= skipped -13, +13 lines =@@
     console.log(nameB);
 >console.log(nameB) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >nameB : string
 }
@@= skipped -14, +14 lines =@@
     console.log(nameB);
 >console.log(nameB) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >nameB : string
 }
@@= skipped -15, +15 lines =@@
     console.log(nameA2);
 >console.log(nameA2) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >nameA2 : string
 }
@@= skipped -15, +15 lines =@@
     console.log(nameA2);
 >console.log(nameA2) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >nameA2 : string
 }
@@= skipped -16, +16 lines =@@
     console.log(nameA2);
 >console.log(nameA2) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >nameA2 : string
 }
@@= skipped -15, +15 lines =@@
     console.log(nameMA);
 >console.log(nameMA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >nameMA : string
 }
@@= skipped -16, +16 lines =@@
     console.log(nameMA);
 >console.log(nameMA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >nameMA : string
 }
@@= skipped -17, +17 lines =@@
     console.log(nameMA);
 >console.log(nameMA) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >nameMA : string
 }
@@= skipped -15, +15 lines =@@
     console.log(numberA3);
 >console.log(numberA3) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >numberA3 : number
 }
@@= skipped -15, +15 lines =@@
     console.log(numberA3);
 >console.log(numberA3) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >numberA3 : number
 }
@@= skipped -16, +16 lines =@@
     console.log(numberA3);
 >console.log(numberA3) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >numberA3 : number
 }
@@= skipped -13, +13 lines =@@
     console.log(multiRobotAInfo);
 >console.log(multiRobotAInfo) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >multiRobotAInfo : (string | [string, string])[]
 }
@@= skipped -14, +14 lines =@@
     console.log(multiRobotAInfo);
 >console.log(multiRobotAInfo) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >multiRobotAInfo : (string | [string, string])[]
 }
@@= skipped -15, +15 lines =@@
     console.log(multiRobotAInfo);
 >console.log(multiRobotAInfo) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >multiRobotAInfo : (string | [string, string])[]
 }
