--- old.lambdaParameterWithTupleArgsHasCorrectAssignability.types
+++ new.lambdaParameterWithTupleArgsHasCorrectAssignability.types
@@= skipped -8, +8 lines =@@
 
 type GenericFunction<T extends MyTuple> = (...fromArgs: T) => void;
 >GenericFunction : GenericFunction<T>
+>T : T
 >fromArgs : T
 
 class GenericClass<T extends MyTuple> {
 >GenericClass : GenericClass<T>
+>T : T
 
     from: GenericFunction<T> | undefined;
 >from : GenericFunction<T> | undefined
@@= skipped -11, +13 lines =@@
 
 function createClass<T extends MyTuple>(f: GenericFunction<T>): GenericClass<T> {
 >createClass : <T extends MyTuple>(f: GenericFunction<T>) => GenericClass<T>
+>T : T
 >f : GenericFunction<T>
 
     return new GenericClass<T>(/* ... use f */);
