--- old.genericCloduleInModule.symbols
+++ new.genericCloduleInModule.symbols
@@= skipped -8, +8 lines =@@
 >T : Symbol(T, Decl(genericCloduleInModule.ts, 1, 19))
 
         foo() { }
->foo : Symbol(B.foo, Decl(genericCloduleInModule.ts, 1, 23))
+>foo : Symbol(foo, Decl(genericCloduleInModule.ts, 1, 23))
 
         static bar() { }
->bar : Symbol(B.bar, Decl(genericCloduleInModule.ts, 2, 17))
+>bar : Symbol(bar, Decl(genericCloduleInModule.ts, 2, 17))
     }
     export module B {
 >B : Symbol(B, Decl(genericCloduleInModule.ts, 0, 10), Decl(genericCloduleInModule.ts, 4, 5))
@@= skipped -16, +16 lines =@@
 var b: A.B<number>;
 >b : Symbol(b, Decl(genericCloduleInModule.ts, 10, 3))
 >A : Symbol(A, Decl(genericCloduleInModule.ts, 0, 0))
->B : Symbol(A.B, Decl(genericCloduleInModule.ts, 0, 10), Decl(genericCloduleInModule.ts, 4, 5))
+>B : Symbol(B, Decl(genericCloduleInModule.ts, 0, 10), Decl(genericCloduleInModule.ts, 4, 5))
 
 b.foo();
->b.foo : Symbol(A.B.foo, Decl(genericCloduleInModule.ts, 1, 23))
+>b.foo : Symbol(foo, Decl(genericCloduleInModule.ts, 1, 23))
 >b : Symbol(b, Decl(genericCloduleInModule.ts, 10, 3))
->foo : Symbol(A.B.foo, Decl(genericCloduleInModule.ts, 1, 23))
+>foo : Symbol(foo, Decl(genericCloduleInModule.ts, 1, 23))
 
