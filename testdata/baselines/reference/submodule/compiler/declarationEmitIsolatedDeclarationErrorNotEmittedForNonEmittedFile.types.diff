--- old.declarationEmitIsolatedDeclarationErrorNotEmittedForNonEmittedFile.types
+++ new.declarationEmitIsolatedDeclarationErrorNotEmittedForNonEmittedFile.types
@@= skipped -47, +47 lines =@@
 >TRPCBuilder : TRPCBuilder<TParams>

     create<TOptions extends Record<string, any>>(): {
->create : <TOptions extends Record<string, any>>() => { procedure: {}; middleware: <TNewParams extends Record<string, any>>(fn: import("./middleware").MiddlewareFunction<{ _config: RootConfig<{ errorShape: ErrorFormatterShape<PickFirstDefined<TOptions["errorFormatter"], ErrorFormatter<TParams["ctx"] extends object ? TParams["ctx"] : object, DefaultErrorShape>>>; }>; }, TNewParams>) => import("./middleware").MiddlewareBuilder<{ _config: RootConfig<{ errorShape: ErrorFormatterShape<PickFirstDefined<TOptions["errorFormatter"], ErrorFormatter<TParams["ctx"] extends object ? TParams["ctx"] : object, DefaultErrorShape>>>; }>; }, TNewParams>; router: {}; }
+>create : <TOptions extends Record<string, any>>() => { procedure: {}; middleware: <TNewParams extends Record<string, any>>(fn: import("@trpc/server").MiddlewareFunction<{ _config: RootConfig<{ errorShape: ErrorFormatterShape<PickFirstDefined<TOptions["errorFormatter"], ErrorFormatter<TParams["ctx"] extends object ? TParams["ctx"] : object, DefaultErrorShape<{}>>>>; }>; }, TNewParams>) => import("@trpc/server").MiddlewareBuilder<{ _config: RootConfig<{ errorShape: ErrorFormatterShape<PickFirstDefined<TOptions["errorFormatter"], ErrorFormatter<TParams["ctx"] extends object ? TParams["ctx"] : object, DefaultErrorShape<{}>>>>; }>; }, TNewParams>; router: {}; }

         procedure: {};
 >procedure : {}

         middleware: <TNewParams extends Record<string, any>>(fn: import("./middleware").MiddlewareFunction<{
->middleware : <TNewParams extends Record<string, any>>(fn: import("./middleware").MiddlewareFunction<{ _config: RootConfig<{ errorShape: ErrorFormatterShape<PickFirstDefined<TOptions["errorFormatter"], ErrorFormatter<TParams["ctx"] extends object ? TParams["ctx"] : object, DefaultErrorShape>>>; }>; }, TNewParams>) => import("./middleware").MiddlewareBuilder<{ _config: RootConfig<{ errorShape: ErrorFormatterShape<PickFirstDefined<TOptions["errorFormatter"], ErrorFormatter<TParams["ctx"] extends object ? TParams["ctx"] : object, DefaultErrorShape>>>; }>; }, TNewParams>
->fn : import("node_modules/@trpc/server/middleware").MiddlewareFunction<{ _config: RootConfig<{ errorShape: ErrorFormatterShape<PickFirstDefined<TOptions["errorFormatter"], ErrorFormatter<TParams["ctx"] extends object ? TParams["ctx"] : object, DefaultErrorShape>>>; }>; }, TNewParams>
+>middleware : <TNewParams extends Record<string, any>>(fn: import("@trpc/server").MiddlewareFunction<{ _config: RootConfig<{ errorShape: ErrorFormatterShape<PickFirstDefined<TOptions["errorFormatter"], ErrorFormatter<TParams["ctx"] extends object ? TParams["ctx"] : object, DefaultErrorShape<{}>>>>; }>; }, TNewParams>) => import("@trpc/server").MiddlewareBuilder<{ _config: RootConfig<{ errorShape: ErrorFormatterShape<PickFirstDefined<TOptions["errorFormatter"], ErrorFormatter<TParams["ctx"] extends object ? TParams["ctx"] : object, DefaultErrorShape<{}>>>>; }>; }, TNewParams>
+>fn : import("@trpc/server").MiddlewareFunction<{ _config: RootConfig<{ errorShape: ErrorFormatterShape<PickFirstDefined<TOptions["errorFormatter"], ErrorFormatter<TParams["ctx"] extends object ? TParams["ctx"] : object, DefaultErrorShape<{}>>>>; }>; }, TNewParams>

             _config: RootConfig<{
->_config : RootConfig<{ errorShape: ErrorFormatterShape<PickFirstDefined<TOptions["errorFormatter"], ErrorFormatter<TParams["ctx"] extends object ? TParams["ctx"] : object, DefaultErrorShape>>>; }>
+>_config : RootConfig<{ errorShape: ErrorFormatterShape<PickFirstDefined<TOptions["errorFormatter"], ErrorFormatter<TParams["ctx"] extends object ? TParams["ctx"] : object, DefaultErrorShape<{}>>>>; }>

                 errorShape: ErrorFormatterShape<PickFirstDefined<TOptions["errorFormatter"], ErrorFormatter<TParams["ctx"] extends object ? TParams["ctx"] : object, DefaultErrorShape>>>;
 >errorShape : ErrorFormatterShape<PickFirstDefined<TOptions["errorFormatter"], ErrorFormatter<TParams["ctx"] extends object ? TParams["ctx"] : object, DefaultErrorShape<{}>>>>
@@= skipped -18, +18 lines =@@
             }>;
         }, TNewParams>) => import("./middleware").MiddlewareBuilder<{
             _config: RootConfig<{
->_config : RootConfig<{ errorShape: ErrorFormatterShape<PickFirstDefined<TOptions["errorFormatter"], ErrorFormatter<TParams["ctx"] extends object ? TParams["ctx"] : object, DefaultErrorShape>>>; }>
+>_config : RootConfig<{ errorShape: ErrorFormatterShape<PickFirstDefined<TOptions["errorFormatter"], ErrorFormatter<TParams["ctx"] extends object ? TParams["ctx"] : object, DefaultErrorShape<{}>>>>; }>

                 errorShape: ErrorFormatterShape<PickFirstDefined<TOptions["errorFormatter"], ErrorFormatter<TParams["ctx"] extends object ? TParams["ctx"] : object, DefaultErrorShape>>>;
 >errorShape : ErrorFormatterShape<PickFirstDefined<TOptions["errorFormatter"], ErrorFormatter<TParams["ctx"] extends object ? TParams["ctx"] : object, DefaultErrorShape<{}>>>>
@@= skipped -22, +22 lines =@@
 >initTRPC : TRPCBuilder<object>

 const trpc = initTRPC.create();
->trpc : { procedure: {}; middleware: <TNewParams extends Record<string, any>>(fn: import("node_modules/@trpc/server/middleware").MiddlewareFunction<{ _config: import("node_modules/@trpc/server/internals/config").RootConfig<{ errorShape: import("node_modules/@trpc/server/internals/utils").ErrorFormatterShape<never>; }>; }, TNewParams>) => import("node_modules/@trpc/server/middleware").MiddlewareBuilder<{ _config: import("node_modules/@trpc/server/internals/config").RootConfig<{ errorShape: import("node_modules/@trpc/server/internals/utils").ErrorFormatterShape<never>; }>; }, TNewParams>; router: {}; }
->initTRPC.create() : { procedure: {}; middleware: <TNewParams extends Record<string, any>>(fn: import("node_modules/@trpc/server/middleware").MiddlewareFunction<{ _config: import("node_modules/@trpc/server/internals/config").RootConfig<{ errorShape: import("node_modules/@trpc/server/internals/utils").ErrorFormatterShape<never>; }>; }, TNewParams>) => import("node_modules/@trpc/server/middleware").MiddlewareBuilder<{ _config: import("node_modules/@trpc/server/internals/config").RootConfig<{ errorShape: import("node_modules/@trpc/server/internals/utils").ErrorFormatterShape<never>; }>; }, TNewParams>; router: {}; }
->initTRPC.create : <TOptions extends Record<string, any>>() => { procedure: {}; middleware: <TNewParams extends Record<string, any>>(fn: import("node_modules/@trpc/server/middleware").MiddlewareFunction<{ _config: import("node_modules/@trpc/server/internals/config").RootConfig<{ errorShape: import("node_modules/@trpc/server/internals/utils").ErrorFormatterShape<import("node_modules/@trpc/server/internals/utils").PickFirstDefined<TOptions["errorFormatter"], import("node_modules/@trpc/server/internals/utils").ErrorFormatter<object, import("node_modules/@trpc/server/internals/utils").DefaultErrorShape<{}>>>>; }>; }, TNewParams>) => import("node_modules/@trpc/server/middleware").MiddlewareBuilder<{ _config: import("node_modules/@trpc/server/internals/config").RootConfig<{ errorShape: import("node_modules/@trpc/server/internals/utils").ErrorFormatterShape<import("node_modules/@trpc/server/internals/utils").PickFirstDefined<TOptions["errorFormatter"], import("node_modules/@trpc/server/internals/utils").ErrorFormatter<object, import("node_modules/@trpc/server/internals/utils").DefaultErrorShape<{}>>>>; }>; }, TNewParams>; router: {}; }
+>trpc : { procedure: {}; middleware: <TNewParams extends Record<string, any>>(fn: import("@trpc/server").MiddlewareFunction<{ _config: import("@trpc/server").RootConfig<{ errorShape: import("@trpc/server").ErrorFormatterShape<never>; }>; }, TNewParams>) => import("@trpc/server").MiddlewareBuilder<{ _config: import("@trpc/server").RootConfig<{ errorShape: import("@trpc/server").ErrorFormatterShape<never>; }>; }, TNewParams>; router: {}; }
+>initTRPC.create() : { procedure: {}; middleware: <TNewParams extends Record<string, any>>(fn: import("@trpc/server").MiddlewareFunction<{ _config: import("@trpc/server").RootConfig<{ errorShape: import("@trpc/server").ErrorFormatterShape<never>; }>; }, TNewParams>) => import("@trpc/server").MiddlewareBuilder<{ _config: import("@trpc/server").RootConfig<{ errorShape: import("@trpc/server").ErrorFormatterShape<never>; }>; }, TNewParams>; router: {}; }
+>initTRPC.create : <TOptions extends Record<string, any>>() => { procedure: {}; middleware: <TNewParams extends Record<string, any>>(fn: import("@trpc/server").MiddlewareFunction<{ _config: import("@trpc/server").RootConfig<{ errorShape: import("@trpc/server").ErrorFormatterShape<import("@trpc/server").PickFirstDefined<TOptions["errorFormatter"], import("@trpc/server").ErrorFormatter<object, import("@trpc/server").DefaultErrorShape<{}>>>>; }>; }, TNewParams>) => import("@trpc/server").MiddlewareBuilder<{ _config: import("@trpc/server").RootConfig<{ errorShape: import("@trpc/server").ErrorFormatterShape<import("@trpc/server").PickFirstDefined<TOptions["errorFormatter"], import("@trpc/server").ErrorFormatter<object, import("@trpc/server").DefaultErrorShape<{}>>>>; }>; }, TNewParams>; router: {}; }
 >initTRPC : TRPCBuilder<object>
->create : <TOptions extends Record<string, any>>() => { procedure: {}; middleware: <TNewParams extends Record<string, any>>(fn: import("node_modules/@trpc/server/middleware").MiddlewareFunction<{ _config: import("node_modules/@trpc/server/internals/config").RootConfig<{ errorShape: import("node_modules/@trpc/server/internals/utils").ErrorFormatterShape<import("node_modules/@trpc/server/internals/utils").PickFirstDefined<TOptions["errorFormatter"], import("node_modules/@trpc/server/internals/utils").ErrorFormatter<object, import("node_modules/@trpc/server/internals/utils").DefaultErrorShape<{}>>>>; }>; }, TNewParams>) => import("node_modules/@trpc/server/middleware").MiddlewareBuilder<{ _config: import("node_modules/@trpc/server/internals/config").RootConfig<{ errorShape: import("node_modules/@trpc/server/internals/utils").ErrorFormatterShape<import("node_modules/@trpc/server/internals/utils").PickFirstDefined<TOptions["errorFormatter"], import("node_modules/@trpc/server/internals/utils").ErrorFormatter<object, import("node_modules/@trpc/server/internals/utils").DefaultErrorShape<{}>>>>; }>; }, TNewParams>; router: {}; }
+>create : <TOptions extends Record<string, any>>() => { procedure: {}; middleware: <TNewParams extends Record<string, any>>(fn: import("@trpc/server").MiddlewareFunction<{ _config: import("@trpc/server").RootConfig<{ errorShape: import("@trpc/server").ErrorFormatterShape<import("@trpc/server").PickFirstDefined<TOptions["errorFormatter"], import("@trpc/server").ErrorFormatter<object, import("@trpc/server").DefaultErrorShape<{}>>>>; }>; }, TNewParams>) => import("@trpc/server").MiddlewareBuilder<{ _config: import("@trpc/server").RootConfig<{ errorShape: import("@trpc/server").ErrorFormatterShape<import("@trpc/server").PickFirstDefined<TOptions["errorFormatter"], import("@trpc/server").ErrorFormatter<object, import("@trpc/server").DefaultErrorShape<{}>>>>; }>; }, TNewParams>; router: {}; }

 export const middleware = trpc.middleware;
->middleware : <TNewParams extends Record<string, any>>(fn: import("node_modules/@trpc/server/middleware").MiddlewareFunction<{ _config: import("node_modules/@trpc/server/internals/config").RootConfig<{ errorShape: import("node_modules/@trpc/server/internals/utils").ErrorFormatterShape<never>; }>; }, TNewParams>) => import("node_modules/@trpc/server/middleware").MiddlewareBuilder<{ _config: import("node_modules/@trpc/server/internals/config").RootConfig<{ errorShape: import("node_modules/@trpc/server/internals/utils").ErrorFormatterShape<never>; }>; }, TNewParams>
->trpc.middleware : <TNewParams extends Record<string, any>>(fn: import("node_modules/@trpc/server/middleware").MiddlewareFunction<{ _config: import("node_modules/@trpc/server/internals/config").RootConfig<{ errorShape: import("node_modules/@trpc/server/internals/utils").ErrorFormatterShape<never>; }>; }, TNewParams>) => import("node_modules/@trpc/server/middleware").MiddlewareBuilder<{ _config: import("node_modules/@trpc/server/internals/config").RootConfig<{ errorShape: import("node_modules/@trpc/server/internals/utils").ErrorFormatterShape<never>; }>; }, TNewParams>
->trpc : { procedure: {}; middleware: <TNewParams extends Record<string, any>>(fn: import("node_modules/@trpc/server/middleware").MiddlewareFunction<{ _config: import("node_modules/@trpc/server/internals/config").RootConfig<{ errorShape: import("node_modules/@trpc/server/internals/utils").ErrorFormatterShape<never>; }>; }, TNewParams>) => import("node_modules/@trpc/server/middleware").MiddlewareBuilder<{ _config: import("node_modules/@trpc/server/internals/config").RootConfig<{ errorShape: import("node_modules/@trpc/server/internals/utils").ErrorFormatterShape<never>; }>; }, TNewParams>; router: {}; }
->middleware : <TNewParams extends Record<string, any>>(fn: import("node_modules/@trpc/server/middleware").MiddlewareFunction<{ _config: import("node_modules/@trpc/server/internals/config").RootConfig<{ errorShape: import("node_modules/@trpc/server/internals/utils").ErrorFormatterShape<never>; }>; }, TNewParams>) => import("node_modules/@trpc/server/middleware").MiddlewareBuilder<{ _config: import("node_modules/@trpc/server/internals/config").RootConfig<{ errorShape: import("node_modules/@trpc/server/internals/utils").ErrorFormatterShape<never>; }>; }, TNewParams>
+>middleware : <TNewParams extends Record<string, any>>(fn: import("@trpc/server").MiddlewareFunction<{ _config: import("@trpc/server").RootConfig<{ errorShape: import("@trpc/server").ErrorFormatterShape<never>; }>; }, TNewParams>) => import("@trpc/server").MiddlewareBuilder<{ _config: import("@trpc/server").RootConfig<{ errorShape: import("@trpc/server").ErrorFormatterShape<never>; }>; }, TNewParams>
+>trpc.middleware : <TNewParams extends Record<string, any>>(fn: import("@trpc/server").MiddlewareFunction<{ _config: import("@trpc/server").RootConfig<{ errorShape: import("@trpc/server").ErrorFormatterShape<never>; }>; }, TNewParams>) => import("@trpc/server").MiddlewareBuilder<{ _config: import("@trpc/server").RootConfig<{ errorShape: import("@trpc/server").ErrorFormatterShape<never>; }>; }, TNewParams>
+>trpc : { procedure: {}; middleware: <TNewParams extends Record<string, any>>(fn: import("@trpc/server").MiddlewareFunction<{ _config: import("@trpc/server").RootConfig<{ errorShape: import("@trpc/server").ErrorFormatterShape<never>; }>; }, TNewParams>) => import("@trpc/server").MiddlewareBuilder<{ _config: import("@trpc/server").RootConfig<{ errorShape: import("@trpc/server").ErrorFormatterShape<never>; }>; }, TNewParams>; router: {}; }
+>middleware : <TNewParams extends Record<string, any>>(fn: import("@trpc/server").MiddlewareFunction<{ _config: import("@trpc/server").RootConfig<{ errorShape: import("@trpc/server").ErrorFormatterShape<never>; }>; }, TNewParams>) => import("@trpc/server").MiddlewareBuilder<{ _config: import("@trpc/server").RootConfig<{ errorShape: import("@trpc/server").ErrorFormatterShape<never>; }>; }, TNewParams>

 export const router = trpc.router;
 >router : {}
 >trpc.router : {}
->trpc : { procedure: {}; middleware: <TNewParams extends Record<string, any>>(fn: import("node_modules/@trpc/server/middleware").MiddlewareFunction<{ _config: import("node_modules/@trpc/server/internals/config").RootConfig<{ errorShape: import("node_modules/@trpc/server/internals/utils").ErrorFormatterShape<never>; }>; }, TNewParams>) => import("node_modules/@trpc/server/middleware").MiddlewareBuilder<{ _config: import("node_modules/@trpc/server/internals/config").RootConfig<{ errorShape: import("node_modules/@trpc/server/internals/utils").ErrorFormatterShape<never>; }>; }, TNewParams>; router: {}; }
+>trpc : { procedure: {}; middleware: <TNewParams extends Record<string, any>>(fn: import("@trpc/server").MiddlewareFunction<{ _config: import("@trpc/server").RootConfig<{ errorShape: import("@trpc/server").ErrorFormatterShape<never>; }>; }, TNewParams>) => import("@trpc/server").MiddlewareBuilder<{ _config: import("@trpc/server").RootConfig<{ errorShape: import("@trpc/server").ErrorFormatterShape<never>; }>; }, TNewParams>; router: {}; }
 >router : {}

 export const publicProcedure = trpc.procedure;
 >publicProcedure : {}
 >trpc.procedure : {}
->trpc : { procedure: {}; middleware: <TNewParams extends Record<string, any>>(fn: import("node_modules/@trpc/server/middleware").MiddlewareFunction<{ _config: import("node_modules/@trpc/server/internals/config").RootConfig<{ errorShape: import("node_modules/@trpc/server/internals/utils").ErrorFormatterShape<never>; }>; }, TNewParams>) => import("node_modules/@trpc/server/middleware").MiddlewareBuilder<{ _config: import("node_modules/@trpc/server/internals/config").RootConfig<{ errorShape: import("node_modules/@trpc/server/internals/utils").ErrorFormatterShape<never>; }>; }, TNewParams>; router: {}; }
+>trpc : { procedure: {}; middleware: <TNewParams extends Record<string, any>>(fn: import("@trpc/server").MiddlewareFunction<{ _config: import("@trpc/server").RootConfig<{ errorShape: import("@trpc/server").ErrorFormatterShape<never>; }>; }, TNewParams>) => import("@trpc/server").MiddlewareBuilder<{ _config: import("@trpc/server").RootConfig<{ errorShape: import("@trpc/server").ErrorFormatterShape<never>; }>; }, TNewParams>; router: {}; }
 >procedure : {}
