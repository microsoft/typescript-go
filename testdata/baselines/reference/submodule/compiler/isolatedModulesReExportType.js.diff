--- old.isolatedModulesReExportType.js
+++ new.isolatedModulesReExportType.js
@@= skipped -51, +51 lines =@@
 export { CC };
 
 
-//// [exportT.js]
+//// [user.js]
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
-//// [exportEqualsT.js]
+exports.NS = exports.C = void 0;
+const exportValue_1 = require("./exportValue");
+Object.defineProperty(exports, "C", { enumerable: true, get: function () { return exportValue_1.C; } });
+const NS = require("./exportT");
+exports.NS = NS;
+//// [reExportValueAsTypeOnly.js]
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
 //// [exportValue.js]
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.C = void 0;
-var C = /** @class */ (function () {
-    function C() {
-    }
-    return C;
-}());
+class C {
+}
 exports.C = C;
-//// [reExportValueAsTypeOnly.js]
+//// [exportEqualsT.js]
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
-//// [user.js]
+//// [exportT.js]
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.NS = exports.C = void 0;
-// OK, has a value side
-var exportValue_1 = require("./exportValue");
-Object.defineProperty(exports, "C", { enumerable: true, get: function () { return exportValue_1.C; } });
-// OK, even though the namespace it exports is only types.
-var NS = require("./exportT");
-exports.NS = NS;
