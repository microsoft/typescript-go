--- old.coAndContraVariantInferences.js
+++ new.coAndContraVariantInferences.js
@@= skipped -37, +37 lines =@@


 //// [coAndContraVariantInferences.js]
-"use strict";
 foo(a, fab);
 foo(b, fab);
-var actionA = { payload: 'any-string' };
-var actionB = { payload: true };
+const actionA = { payload: 'any-string' };
+const actionB = { payload: true };
 function call(action, fn) {
     fn(action);
 }
-var printFn = function (action) { return console.log(action); };
+const printFn = (action) => console.log(action);
 call(actionA, printFn);
 call(actionB, printFn);

@@= skipped -28, +27 lines =@@
 }, f: (arg: {
     kind: T;
 }) => void): void;
+// Repro from #45603
 interface Action<TName extends string, TPayload> {
     name: TName;
     payload: TPayload;
@@= skipped -7, +8 lines =@@
 declare const actionA: Action<"ACTION_A", string>;
 declare const actionB: Action<"ACTION_B", boolean>;
 declare function call<TName extends string, TPayload>(action: Action<TName, TPayload>, fn: (action: Action<TName, TPayload>) => any): void;
-declare const printFn: (action: typeof actionA | typeof actionB) => void;
+declare const printFn: (action: Action<"ACTION_A", string> | Action<"ACTION_B", boolean>) => void;