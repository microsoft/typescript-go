--- old.es5-asyncFunctionForInStatements.types
+++ new.es5-asyncFunctionForInStatements.types
@@= skipped -10, +10 lines =@@
 
 async function forInStatement0() {
 >forInStatement0 : () => Promise<void>
->                : ^^^^^^^^^^^^^^^^^^^
 
     for (x in y) { z; }
 >x : any
@@= skipped -10, +9 lines =@@
 
 async function forInStatement1() {
 >forInStatement1 : () => Promise<void>
->                : ^^^^^^^^^^^^^^^^^^^
 
     for (x in await y) { z; }
 >x : any
@@= skipped -11, +10 lines =@@
 
 async function forInStatement2() {
 >forInStatement2 : () => Promise<void>
->                : ^^^^^^^^^^^^^^^^^^^
 
     for (x in y) { await z; }
 >x : any
@@= skipped -11, +10 lines =@@
 
 async function forInStatement3() {
 >forInStatement3 : () => Promise<void>
->                : ^^^^^^^^^^^^^^^^^^^
 
     for ((await x).a in y) { z; }
 >(await x).a : any
 >(await x) : any
->          : ^^^
 >await x : any
 >x : any
 >a : any
->  : ^^^
 >y : any
 >z : any
 }
 
 async function forInStatement4() {
 >forInStatement4 : () => Promise<void>
->                : ^^^^^^^^^^^^^^^^^^^
 
     for (x.a in await y) { z; }
 >x.a : any
 >x : any
->  : ^^^
 >a : any
->  : ^^^
 >await y : any
 >y : any
 >z : any
@@= skipped -31, +25 lines =@@
 
 async function forInStatement5() {
 >forInStatement5 : () => Promise<void>
->                : ^^^^^^^^^^^^^^^^^^^
 
     for (x.a in y) { await z; }
 >x.a : any
 >x : any
->  : ^^^
 >a : any
->  : ^^^
 >y : any
 >await z : any
 >z : any
@@= skipped -15, +12 lines =@@
 
 async function forInStatement6() {
 >forInStatement6 : () => Promise<void>
->                : ^^^^^^^^^^^^^^^^^^^
 
     for (var a in y) { z; }
 >a : string
->  : ^^^^^^
 >y : any
 >z : any
 }
 
 async function forInStatement7() {
 >forInStatement7 : () => Promise<void>
->                : ^^^^^^^^^^^^^^^^^^^
 
     for (var b in await y) { z; }
 >b : string
->  : ^^^^^^
 >await y : any
 >y : any
 >z : any
@@= skipped -23, +19 lines =@@
 
 async function forInStatement8() {
 >forInStatement8 : () => Promise<void>
->                : ^^^^^^^^^^^^^^^^^^^
 
     for (var c in y) { await z; }
 >c : string
->  : ^^^^^^
 >y : any
 >await z : any
 >z : any
