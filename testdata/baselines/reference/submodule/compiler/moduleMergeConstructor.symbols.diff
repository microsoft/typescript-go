--- old.moduleMergeConstructor.symbols
+++ new.moduleMergeConstructor.symbols
@@= skipped -8, +8 lines =@@
 
         constructor();
         method1(): any;
->method1 : Symbol(Foo.method1, Decl(foo.d.ts, 2, 22))
+>method1 : Symbol(method1, Decl(foo.d.ts, 2, 22))
     }
 }
 
@@= skipped -12, +12 lines =@@
 >Foo : Symbol(Foo, Decl(foo.d.ts, 0, 22), Decl(foo-ext.d.ts, 0, 22))
 
         method2(): any;
->method2 : Symbol(Foo.method2, Decl(foo-ext.d.ts, 1, 26))
+>method2 : Symbol(method2, Decl(foo-ext.d.ts, 1, 26))
     }
 }
 
@@= skipped -12, +12 lines =@@
 >Test : Symbol(Test, Decl(index.ts, 0, 27))
 
     bar: foo.Foo;
->bar : Symbol(Test.bar, Decl(index.ts, 2, 12))
+>bar : Symbol(bar, Decl(index.ts, 2, 12))
 >foo : Symbol(foo, Decl(index.ts, 0, 6))
->Foo : Symbol(foo.Foo, Decl(foo.d.ts, 0, 22), Decl(foo-ext.d.ts, 0, 22))
+>Foo : Symbol(Foo, Decl(foo.d.ts, 0, 22), Decl(foo-ext.d.ts, 0, 22))
 
     constructor() {
         this.bar = new foo.Foo();
->this.bar : Symbol(Test.bar, Decl(index.ts, 2, 12))
+>this.bar : Symbol(bar, Decl(index.ts, 2, 12))
 >this : Symbol(Test, Decl(index.ts, 0, 27))
->bar : Symbol(Test.bar, Decl(index.ts, 2, 12))
->foo.Foo : Symbol(foo.Foo, Decl(foo.d.ts, 0, 22), Decl(foo-ext.d.ts, 0, 22))
+>bar : Symbol(bar, Decl(index.ts, 2, 12))
+>foo.Foo : Symbol(Foo, Decl(foo.d.ts, 0, 22), Decl(foo-ext.d.ts, 0, 22))
 >foo : Symbol(foo, Decl(index.ts, 0, 6))
->Foo : Symbol(foo.Foo, Decl(foo.d.ts, 0, 22), Decl(foo-ext.d.ts, 0, 22))
+>Foo : Symbol(Foo, Decl(foo.d.ts, 0, 22), Decl(foo-ext.d.ts, 0, 22))
     }
 }
 
