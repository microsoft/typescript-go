--- old.generics2NoError.symbols
+++ new.generics2NoError.symbols
@@= skipped -2, +2 lines =@@
 === generics2NoError.ts ===
 interface A { a: string; }
 >A : Symbol(A, Decl(generics2NoError.ts, 0, 0))
->a : Symbol(A.a, Decl(generics2NoError.ts, 0, 13))
+>a : Symbol(a, Decl(generics2NoError.ts, 0, 13))
 
 interface B extends A { b: string; }
 >B : Symbol(B, Decl(generics2NoError.ts, 0, 26))
 >A : Symbol(A, Decl(generics2NoError.ts, 0, 0))
->b : Symbol(B.b, Decl(generics2NoError.ts, 1, 23))
+>b : Symbol(b, Decl(generics2NoError.ts, 1, 23))
 
 interface C extends B { c: string; }
 >C : Symbol(C, Decl(generics2NoError.ts, 1, 36))
 >B : Symbol(B, Decl(generics2NoError.ts, 0, 26))
->c : Symbol(C.c, Decl(generics2NoError.ts, 2, 23))
+>c : Symbol(c, Decl(generics2NoError.ts, 2, 23))
 
 interface G<T, U extends B> {
 >G : Symbol(G, Decl(generics2NoError.ts, 2, 36))
@@= skipped -19, +19 lines =@@
 >B : Symbol(B, Decl(generics2NoError.ts, 0, 26))
 
     x: T;
->x : Symbol(G.x, Decl(generics2NoError.ts, 3, 29))
+>x : Symbol(x, Decl(generics2NoError.ts, 3, 29))
 >T : Symbol(T, Decl(generics2NoError.ts, 3, 12))
 
     y: U;
->y : Symbol(G.y, Decl(generics2NoError.ts, 4, 9))
+>y : Symbol(y, Decl(generics2NoError.ts, 4, 9))
 >U : Symbol(U, Decl(generics2NoError.ts, 3, 14))
 }
 
