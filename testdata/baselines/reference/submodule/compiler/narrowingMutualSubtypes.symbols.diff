--- old.narrowingMutualSubtypes.symbols
+++ new.narrowingMutualSubtypes.symbols
@@= skipped -263, +263 lines =@@
     // "accidentally" guards the first branch on the length
     if (Array.isArray(obj) && obj.length) {
 >Array.isArray : Symbol(ArrayConstructor.isArray, Decl(lib.es5.d.ts, --, --))
->Array : Symbol(Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>Array : Symbol(Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 >isArray : Symbol(ArrayConstructor.isArray, Decl(lib.es5.d.ts, --, --))
 >obj : Symbol(obj, Decl(narrowingMutualSubtypes.ts, 104, 30))
 >obj.length : Symbol(Array.length, Decl(lib.es5.d.ts, --, --))
@@= skipped -55, +55 lines =@@

     if (Array.isArray(obj)) {
 >Array.isArray : Symbol(ArrayConstructor.isArray, Decl(lib.es5.d.ts, --, --))
->Array : Symbol(Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>Array : Symbol(Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 >isArray : Symbol(ArrayConstructor.isArray, Decl(lib.es5.d.ts, --, --))
 >obj : Symbol(obj, Decl(narrowingMutualSubtypes.ts, 123, 30))
