--- old.declarationsIndirectGeneratedAliasReference.types
+++ new.declarationsIndirectGeneratedAliasReference.types
@@= skipped -19, +19 lines =@@

 === node_modules/mod/index.d.ts ===
 import { Ctor } from "./ctor";
->Ctor : import("node_modules/mod/ctor").CtorConstructor
+>Ctor : import("./ctor").CtorConstructor

 export default Ctor;
 >Ctor : Ctor
@@= skipped -10, +10 lines =@@
 >ns : typeof ns

 const Ctor = ns.default;
->Ctor : import("node_modules/mod/ctor").CtorConstructor
->ns.default : import("node_modules/mod/ctor").CtorConstructor
+>Ctor : import("mod/ctor").CtorConstructor
+>ns.default : import("mod/ctor").CtorConstructor
 >ns : typeof ns
->default : import("node_modules/mod/ctor").CtorConstructor
+>default : import("mod/ctor").CtorConstructor

 export const MyComp = Ctor.extends({foo: "bar"});
->MyComp : import("node_modules/mod/ctor").ExtendedCtor<import("node_modules/mod/ctor").Ctor>
->Ctor.extends({foo: "bar"}) : import("node_modules/mod/ctor").ExtendedCtor<import("node_modules/mod/ctor").Ctor>
->Ctor.extends : <T>(x: T) => import("node_modules/mod/ctor").ExtendedCtor<T extends unknown ? import("node_modules/mod/ctor").Ctor : undefined>
->Ctor : import("node_modules/mod/ctor").CtorConstructor
->extends : <T>(x: T) => import("node_modules/mod/ctor").ExtendedCtor<T extends unknown ? import("node_modules/mod/ctor").Ctor : undefined>
+>MyComp : import("mod/ctor").ExtendedCtor<import("mod").default>
+>Ctor.extends({foo: "bar"}) : import("mod/ctor").ExtendedCtor<import("mod").default>
+>Ctor.extends : <T>(x: T) => import("mod/ctor").ExtendedCtor<T extends unknown ? import("mod").default : undefined>
+>Ctor : import("mod/ctor").CtorConstructor
+>extends : <T>(x: T) => import("mod/ctor").ExtendedCtor<T extends unknown ? import("mod").default : undefined>
 >{foo: "bar"} : { foo: string; }
 >foo : string
 >"bar" : "bar"