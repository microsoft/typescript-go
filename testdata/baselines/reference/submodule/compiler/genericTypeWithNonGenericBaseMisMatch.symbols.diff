--- old.genericTypeWithNonGenericBaseMisMatch.symbols
+++ new.genericTypeWithNonGenericBaseMisMatch.symbols
@@= skipped -4, +4 lines =@@
 >I : Symbol(I, Decl(genericTypeWithNonGenericBaseMisMatch.ts, 0, 0))
 
 	f: (a: { a: number }) => void
->f : Symbol(I.f, Decl(genericTypeWithNonGenericBaseMisMatch.ts, 0, 13))
+>f : Symbol(f, Decl(genericTypeWithNonGenericBaseMisMatch.ts, 0, 13))
 >a : Symbol(a, Decl(genericTypeWithNonGenericBaseMisMatch.ts, 1, 5))
 >a : Symbol(a, Decl(genericTypeWithNonGenericBaseMisMatch.ts, 1, 9))
 }
@@= skipped -11, +11 lines =@@
 >I : Symbol(I, Decl(genericTypeWithNonGenericBaseMisMatch.ts, 0, 0))
 
 	f(a: T): void { }
->f : Symbol(X.f, Decl(genericTypeWithNonGenericBaseMisMatch.ts, 3, 47))
+>f : Symbol(f, Decl(genericTypeWithNonGenericBaseMisMatch.ts, 3, 47))
 >a : Symbol(a, Decl(genericTypeWithNonGenericBaseMisMatch.ts, 4, 3))
 >T : Symbol(T, Decl(genericTypeWithNonGenericBaseMisMatch.ts, 3, 8))
 }
