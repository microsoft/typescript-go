--- old.commentsMultiModuleMultiFile.symbols
+++ new.commentsMultiModuleMultiFile.symbols
@@= skipped -18, +18 lines =@@
     }
 }
 new multiM.d();
->multiM.d : Symbol(multiM.d, Decl(commentsMultiModuleMultiFile_1.ts, 2, 22))
+>multiM.d : Symbol(d, Decl(commentsMultiModuleMultiFile_1.ts, 2, 22))
 >multiM : Symbol(multiM, Decl(commentsMultiModuleMultiFile_1.ts, 0, 53))
->d : Symbol(multiM.d, Decl(commentsMultiModuleMultiFile_1.ts, 2, 22))
+>d : Symbol(d, Decl(commentsMultiModuleMultiFile_1.ts, 2, 22))
 
-=== commentsMultiModuleMultiFile_0.ts ===
-/** this is multi declare module*/
-export module multiM {
->multiM : Symbol(multiM, Decl(commentsMultiModuleMultiFile_0.ts, 0, 0), Decl(commentsMultiModuleMultiFile_0.ts, 5, 1))
-
-    /// class b comment
-    export class b {
->b : Symbol(b, Decl(commentsMultiModuleMultiFile_0.ts, 1, 22))
-    }
-}
-/** thi is multi module 2*/
-export module multiM {
->multiM : Symbol(multiM, Decl(commentsMultiModuleMultiFile_0.ts, 0, 0), Decl(commentsMultiModuleMultiFile_0.ts, 5, 1))
-
-    /** class c comment*/
-    export class c {
->c : Symbol(c, Decl(commentsMultiModuleMultiFile_0.ts, 7, 22))
-    }
-
-    // class e comment
-    export class e {
->e : Symbol(e, Decl(commentsMultiModuleMultiFile_0.ts, 10, 5))
-    }
-}
-
-new multiM.b();
->multiM.b : Symbol(multiM.b, Decl(commentsMultiModuleMultiFile_0.ts, 1, 22))
->multiM : Symbol(multiM, Decl(commentsMultiModuleMultiFile_0.ts, 0, 0), Decl(commentsMultiModuleMultiFile_0.ts, 5, 1))
->b : Symbol(multiM.b, Decl(commentsMultiModuleMultiFile_0.ts, 1, 22))
-
-new multiM.c();
->multiM.c : Symbol(multiM.c, Decl(commentsMultiModuleMultiFile_0.ts, 7, 22))
->multiM : Symbol(multiM, Decl(commentsMultiModuleMultiFile_0.ts, 0, 0), Decl(commentsMultiModuleMultiFile_0.ts, 5, 1))
->c : Symbol(multiM.c, Decl(commentsMultiModuleMultiFile_0.ts, 7, 22))
-
