--- old.subtypingTransitivity.symbols
+++ new.subtypingTransitivity.symbols
@@= skipped -4, +4 lines =@@
 >B : Symbol(B, Decl(subtypingTransitivity.ts, 0, 0))
 
     x: Object;
->x : Symbol(B.x, Decl(subtypingTransitivity.ts, 0, 9))
+>x : Symbol(x, Decl(subtypingTransitivity.ts, 0, 9))
 >Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 }
 
@@= skipped -9, +9 lines =@@
 >B : Symbol(B, Decl(subtypingTransitivity.ts, 0, 0))
 
     public x: string;
->x : Symbol(D.x, Decl(subtypingTransitivity.ts, 4, 19))
+>x : Symbol(x, Decl(subtypingTransitivity.ts, 4, 19))
 }
 class D2 extends B {
 >D2 : Symbol(D2, Decl(subtypingTransitivity.ts, 6, 1))
 >B : Symbol(B, Decl(subtypingTransitivity.ts, 0, 0))
 
     public x: number;
->x : Symbol(D2.x, Decl(subtypingTransitivity.ts, 7, 20))
+>x : Symbol(x, Decl(subtypingTransitivity.ts, 7, 20))
 }
 
 var b: B;
@@= skipped -23, +23 lines =@@
 >D2 : Symbol(D2, Decl(subtypingTransitivity.ts, 6, 1))
 
 d.x = '';
->d.x : Symbol(D.x, Decl(subtypingTransitivity.ts, 4, 19))
+>d.x : Symbol(x, Decl(subtypingTransitivity.ts, 4, 19))
 >d : Symbol(d, Decl(subtypingTransitivity.ts, 12, 3))
->x : Symbol(D.x, Decl(subtypingTransitivity.ts, 4, 19))
+>x : Symbol(x, Decl(subtypingTransitivity.ts, 4, 19))
 
 b = d;
 >b : Symbol(b, Decl(subtypingTransitivity.ts, 11, 3))
 >d : Symbol(d, Decl(subtypingTransitivity.ts, 12, 3))
 
 b.x = 1; // assigned number to string
->b.x : Symbol(B.x, Decl(subtypingTransitivity.ts, 0, 9))
+>b.x : Symbol(x, Decl(subtypingTransitivity.ts, 0, 9))
 >b : Symbol(b, Decl(subtypingTransitivity.ts, 11, 3))
->x : Symbol(B.x, Decl(subtypingTransitivity.ts, 0, 9))
+>x : Symbol(x, Decl(subtypingTransitivity.ts, 0, 9))
 
