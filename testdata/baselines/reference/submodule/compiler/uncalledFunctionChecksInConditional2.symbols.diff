--- old.uncalledFunctionChecksInConditional2.symbols
+++ new.uncalledFunctionChecksInConditional2.symbols
@@ -4,9 +4,6 @@
 {
   const perf = window.performance
 >perf : Symbol(perf, Decl(uncalledFunctionChecksInConditional2.ts, 1, 7))
->window.performance : Symbol(performance, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))
->window : Symbol(window, Decl(lib.dom.d.ts, --, --))
->performance : Symbol(performance, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))
 
   // Simplified
   if (
@@ -14,35 +11,23 @@
 >perf : Symbol(perf, Decl(uncalledFunctionChecksInConditional2.ts, 1, 7))
 
     perf.measure &&
->perf.measure : Symbol(Performance.measure, Decl(lib.dom.d.ts, --, --))
 >perf : Symbol(perf, Decl(uncalledFunctionChecksInConditional2.ts, 1, 7))
->measure : Symbol(Performance.measure, Decl(lib.dom.d.ts, --, --))
 
     perf.clearMarks &&
->perf.clearMarks : Symbol(Performance.clearMarks, Decl(lib.dom.d.ts, --, --))
 >perf : Symbol(perf, Decl(uncalledFunctionChecksInConditional2.ts, 1, 7))
->clearMarks : Symbol(Performance.clearMarks, Decl(lib.dom.d.ts, --, --))
 
     perf.clearMeasures
->perf.clearMeasures : Symbol(Performance.clearMeasures, Decl(lib.dom.d.ts, --, --))
 >perf : Symbol(perf, Decl(uncalledFunctionChecksInConditional2.ts, 1, 7))
->clearMeasures : Symbol(Performance.clearMeasures, Decl(lib.dom.d.ts, --, --))
 
   ) {
     perf.measure("");
->perf.measure : Symbol(Performance.measure, Decl(lib.dom.d.ts, --, --))
 >perf : Symbol(perf, Decl(uncalledFunctionChecksInConditional2.ts, 1, 7))
->measure : Symbol(Performance.measure, Decl(lib.dom.d.ts, --, --))
 
     perf.clearMarks("")
->perf.clearMarks : Symbol(Performance.clearMarks, Decl(lib.dom.d.ts, --, --))
 >perf : Symbol(perf, Decl(uncalledFunctionChecksInConditional2.ts, 1, 7))
->clearMarks : Symbol(Performance.clearMarks, Decl(lib.dom.d.ts, --, --))
 
     perf.clearMeasures("")
->perf.clearMeasures : Symbol(Performance.clearMeasures, Decl(lib.dom.d.ts, --, --))
 >perf : Symbol(perf, Decl(uncalledFunctionChecksInConditional2.ts, 1, 7))
->clearMeasures : Symbol(Performance.clearMeasures, Decl(lib.dom.d.ts, --, --))
   }
 
   // With ||
@@ -51,20 +36,14 @@
 >perf : Symbol(perf, Decl(uncalledFunctionChecksInConditional2.ts, 1, 7))
 
     perf.mark &&
->perf.mark : Symbol(Performance.mark, Decl(lib.dom.d.ts, --, --))
 >perf : Symbol(perf, Decl(uncalledFunctionChecksInConditional2.ts, 1, 7))
->mark : Symbol(Performance.mark, Decl(lib.dom.d.ts, --, --))
 
     perf.measure || !!true
->perf.measure : Symbol(Performance.measure, Decl(lib.dom.d.ts, --, --))
 >perf : Symbol(perf, Decl(uncalledFunctionChecksInConditional2.ts, 1, 7))
->measure : Symbol(Performance.measure, Decl(lib.dom.d.ts, --, --))
 
   ) {
     perf.mark("");
->perf.mark : Symbol(Performance.mark, Decl(lib.dom.d.ts, --, --))
 >perf : Symbol(perf, Decl(uncalledFunctionChecksInConditional2.ts, 1, 7))
->mark : Symbol(Performance.mark, Decl(lib.dom.d.ts, --, --))
   }
 
   // With ??
@@ -74,21 +53,15 @@
 >perf : Symbol(perf, Decl(uncalledFunctionChecksInConditional2.ts, 1, 7))
 
       perf.mark &&
->perf.mark : Symbol(Performance.mark, Decl(lib.dom.d.ts, --, --))
 >perf : Symbol(perf, Decl(uncalledFunctionChecksInConditional2.ts, 1, 7))
->mark : Symbol(Performance.mark, Decl(lib.dom.d.ts, --, --))
 
       perf.measure
->perf.measure : Symbol(Performance.measure, Decl(lib.dom.d.ts, --, --))
 >perf : Symbol(perf, Decl(uncalledFunctionChecksInConditional2.ts, 1, 7))
->measure : Symbol(Performance.measure, Decl(lib.dom.d.ts, --, --))
 
     ) ?? !!true
   ) {
     perf.mark("");
->perf.mark : Symbol(Performance.mark, Decl(lib.dom.d.ts, --, --))
 >perf : Symbol(perf, Decl(uncalledFunctionChecksInConditional2.ts, 1, 7))
->mark : Symbol(Performance.mark, Decl(lib.dom.d.ts, --, --))
   }
 };
 
@@ -105,9 +78,6 @@
   const perf = inBrowser && window.performance
 >perf : Symbol(perf, Decl(uncalledFunctionChecksInConditional2.ts, 41, 7))
 >inBrowser : Symbol(inBrowser, Decl(uncalledFunctionChecksInConditional2.ts, 37, 11))
->window.performance : Symbol(performance, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))
->window : Symbol(window, Decl(lib.dom.d.ts, --, --))
->performance : Symbol(performance, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))
 
   /* istanbul ignore if */
   if (
@@ -115,32 +85,22 @@
 >perf : Symbol(perf, Decl(uncalledFunctionChecksInConditional2.ts, 41, 7))
 
     perf.mark &&
->perf.mark : Symbol(Performance.mark, Decl(lib.dom.d.ts, --, --))
 >perf : Symbol(perf, Decl(uncalledFunctionChecksInConditional2.ts, 41, 7))
->mark : Symbol(Performance.mark, Decl(lib.dom.d.ts, --, --))
 
     perf.measure &&
->perf.measure : Symbol(Performance.measure, Decl(lib.dom.d.ts, --, --))
 >perf : Symbol(perf, Decl(uncalledFunctionChecksInConditional2.ts, 41, 7))
->measure : Symbol(Performance.measure, Decl(lib.dom.d.ts, --, --))
 
     perf.clearMarks &&
->perf.clearMarks : Symbol(Performance.clearMarks, Decl(lib.dom.d.ts, --, --))
 >perf : Symbol(perf, Decl(uncalledFunctionChecksInConditional2.ts, 41, 7))
->clearMarks : Symbol(Performance.clearMarks, Decl(lib.dom.d.ts, --, --))
 
     perf.clearMeasures
->perf.clearMeasures : Symbol(Performance.clearMeasures, Decl(lib.dom.d.ts, --, --))
 >perf : Symbol(perf, Decl(uncalledFunctionChecksInConditional2.ts, 41, 7))
->clearMeasures : Symbol(Performance.clearMeasures, Decl(lib.dom.d.ts, --, --))
 
   ) {
     mark = (tag) => perf.mark(tag)
 >mark : Symbol(mark, Decl(uncalledFunctionChecksInConditional2.ts, 39, 5))
 >tag : Symbol(tag, Decl(uncalledFunctionChecksInConditional2.ts, 50, 12))
->perf.mark : Symbol(Performance.mark, Decl(lib.dom.d.ts, --, --))
 >perf : Symbol(perf, Decl(uncalledFunctionChecksInConditional2.ts, 41, 7))
->mark : Symbol(Performance.mark, Decl(lib.dom.d.ts, --, --))
 >tag : Symbol(tag, Decl(uncalledFunctionChecksInConditional2.ts, 50, 12))
 
     measure = (name, startTag, endTag) => {
@@ -150,23 +110,17 @@
 >endTag : Symbol(endTag, Decl(uncalledFunctionChecksInConditional2.ts, 51, 30))
 
       perf.measure(name, startTag, endTag)
->perf.measure : Symbol(Performance.measure, Decl(lib.dom.d.ts, --, --))
 >perf : Symbol(perf, Decl(uncalledFunctionChecksInConditional2.ts, 41, 7))
->measure : Symbol(Performance.measure, Decl(lib.dom.d.ts, --, --))
 >name : Symbol(name, Decl(uncalledFunctionChecksInConditional2.ts, 51, 15))
 >startTag : Symbol(startTag, Decl(uncalledFunctionChecksInConditional2.ts, 51, 20))
 >endTag : Symbol(endTag, Decl(uncalledFunctionChecksInConditional2.ts, 51, 30))
 
       perf.clearMarks(startTag)
->perf.clearMarks : Symbol(Performance.clearMarks, Decl(lib.dom.d.ts, --, --))
 >perf : Symbol(perf, Decl(uncalledFunctionChecksInConditional2.ts, 41, 7))
->clearMarks : Symbol(Performance.clearMarks, Decl(lib.dom.d.ts, --, --))
 >startTag : Symbol(startTag, Decl(uncalledFunctionChecksInConditional2.ts, 51, 20))
 
       perf.clearMarks(endTag)
->perf.clearMarks : Symbol(Performance.clearMarks, Decl(lib.dom.d.ts, --, --))
 >perf : Symbol(perf, Decl(uncalledFunctionChecksInConditional2.ts, 41, 7))
->clearMarks : Symbol(Performance.clearMarks, Decl(lib.dom.d.ts, --, --))
 >endTag : Symbol(endTag, Decl(uncalledFunctionChecksInConditional2.ts, 51, 30))
 
       // perf.clearMeasures(name)
@@ -188,24 +142,12 @@
 >isMobileMatch : Symbol(isMobileMatch, Decl(uncalledFunctionChecksInConditional2.ts, 63, 9))
 
       typeof window !== 'undefined' &&
->window : Symbol(window, Decl(lib.dom.d.ts, --, --))
-
       window.matchMedia && // no error
->window.matchMedia : Symbol(matchMedia, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))
->window : Symbol(window, Decl(lib.dom.d.ts, --, --))
->matchMedia : Symbol(matchMedia, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))
-
       window.matchMedia('(max-device-width: 680px)');
->window.matchMedia : Symbol(matchMedia, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))
->window : Symbol(window, Decl(lib.dom.d.ts, --, --))
->matchMedia : Symbol(matchMedia, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))
-
     _isMobile = isMobileMatch && isMobileMatch.matches;
 >_isMobile : Symbol(_isMobile, Decl(uncalledFunctionChecksInConditional2.ts, 60, 3))
 >isMobileMatch : Symbol(isMobileMatch, Decl(uncalledFunctionChecksInConditional2.ts, 63, 9))
->isMobileMatch.matches : Symbol(MediaQueryList.matches, Decl(lib.dom.d.ts, --, --))
 >isMobileMatch : Symbol(isMobileMatch, Decl(uncalledFunctionChecksInConditional2.ts, 63, 9))
->matches : Symbol(MediaQueryList.matches, Decl(lib.dom.d.ts, --, --))
   }
   return _isMobile;
 >_isMobile : Symbol(_isMobile, Decl(uncalledFunctionChecksInConditional2.ts, 60, 3))
