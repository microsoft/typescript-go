--- old.narrowingUnionToUnion.js
+++ new.narrowingUnionToUnion.js
@@= skipped -265, +265 lines =@@


 //// [narrowingUnionToUnion.js]
-"use strict";
 function fx1(x) {
     if (isFalsy(x)) {
         x; // "" | 0 | undefined
@@= skipped -42, +41 lines =@@
 }
 // Repro from #37807
 function f1(x) { }
-var v1;
+let v1;
 f1(v1);
 v1; // number | undefined
 function f2(x) { }
-var v2;
+let v2;
 f2(v2);
 v2; // 6 | undefined
-var TEST_CASES = [
-    function (value) {
+const TEST_CASES = [
+    (value) => {
         if (isEmptyString(value)) {
             value; // ""
         }
@@= skipped -22, +22 lines =@@
             value; // string
         }
     },
-    function (value) {
+    (value) => {
         if (isMaybeEmptyString(value)) {
             value; // "" | undefined
         }
@@= skipped -8, +8 lines =@@
             value; // string
         }
     },
-    function (value) {
+    (value) => {
         if (isZero(value)) {
             value; // 0
         }
@@= skipped -14, +14 lines =@@
             value; // number
         }
     },
-    function (value) {
+    (value) => {
         if (isMaybeZero(value)) {
             value; // 0 | undefined
         }
@@= skipped -8, +8 lines =@@
             value; // number
         }
     },
-    function (value) {
+    (value) => {
         if (isEmptyArray(value)) {
             value; // []
         }
@@= skipped -14, +14 lines =@@
             value; // string[]
         }
     },
-    function (value) {
+    (value) => {
         if (isMaybeEmptyArray(value)) {
             value; // [] | undefined
         }
@@= skipped -12, +12 lines =@@
 function isEmpty(value) {
     return value === '' || value === null || value === undefined;
 }
-var test;
+let test;
 if (isEmpty(test)) {
     test; // EmptyString
 }