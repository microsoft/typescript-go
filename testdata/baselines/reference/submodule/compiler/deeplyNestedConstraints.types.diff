--- old.deeplyNestedConstraints.types
+++ new.deeplyNestedConstraints.types
@@= skipped -7, +7 lines =@@
 
 type TypeMap<E extends Enum> = { [key in E[keyof E]]: number | boolean | string | number[] };
 >TypeMap : TypeMap<E>
+>E : E
+>key : key
 
 class BufferPool<E extends Enum, M extends TypeMap<E>> {
 >BufferPool : BufferPool<E, M>
+>E : E
+>M : M
 
     setArray2<K extends E[keyof E]>(_: K, array: Extract<M[K], ArrayLike<any>>) {
 >setArray2 : <K extends E[keyof E]>(_: K, array: Extract<M[K], ArrayLike<any>>) => void
+>K : K
 >_ : K
 >array : Extract<M[K], ArrayLike<any>>
 
