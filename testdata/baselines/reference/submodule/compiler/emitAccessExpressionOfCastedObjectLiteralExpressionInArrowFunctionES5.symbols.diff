--- old.emitAccessExpressionOfCastedObjectLiteralExpressionInArrowFunctionES5.symbols
+++ new.emitAccessExpressionOfCastedObjectLiteralExpressionInArrowFunctionES5.symbols
@@= skipped -9, +9 lines =@@
 
 (x) => ({ "1": "one", "2": "two" } as { [key: string]: string }).x;
 >x : Symbol(x, Decl(emitAccessExpressionOfCastedObjectLiteralExpressionInArrowFunctionES5.ts, 1, 1))
->({ "1": "one", "2": "two" } as { [key: string]: string }).x : Symbol(__index, Decl(emitAccessExpressionOfCastedObjectLiteralExpressionInArrowFunctionES5.ts, 1, 39))
+>({ "1": "one", "2": "two" } as { [key: string]: string }).x : Symbol((Missing), Decl(emitAccessExpressionOfCastedObjectLiteralExpressionInArrowFunctionES5.ts, 1, 39))
 >"1" : Symbol("1", Decl(emitAccessExpressionOfCastedObjectLiteralExpressionInArrowFunctionES5.ts, 1, 9))
 >"2" : Symbol("2", Decl(emitAccessExpressionOfCastedObjectLiteralExpressionInArrowFunctionES5.ts, 1, 21))
 >key : Symbol(key, Decl(emitAccessExpressionOfCastedObjectLiteralExpressionInArrowFunctionES5.ts, 1, 41))
->x : Symbol(__index, Decl(emitAccessExpressionOfCastedObjectLiteralExpressionInArrowFunctionES5.ts, 1, 39))
+>x : Symbol((Missing), Decl(emitAccessExpressionOfCastedObjectLiteralExpressionInArrowFunctionES5.ts, 1, 39))
 
