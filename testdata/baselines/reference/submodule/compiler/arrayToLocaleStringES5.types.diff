--- old.arrayToLocaleStringES5.types
+++ new.arrayToLocaleStringES5.types
@@= skipped -14, +14 lines =@@
 >str = arr.toLocaleString() : string
 >str : string
 >arr.toLocaleString() : string
->arr.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions & Intl.DateTimeFormatOptions): string; }
+>arr.toLocaleString : () => string
 >arr : number[]
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions & Intl.DateTimeFormatOptions): string; }
+>toLocaleString : () => string

 str = arr.toLocaleString('en-US'); // should be error
 >str = arr.toLocaleString('en-US') : string
 >str : string
 >arr.toLocaleString('en-US') : string
->arr.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions & Intl.DateTimeFormatOptions): string; }
+>arr.toLocaleString : () => string
 >arr : number[]
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions & Intl.DateTimeFormatOptions): string; }
+>toLocaleString : () => string
 >'en-US' : "en-US"

 str = arr.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }); // should be error
 >str = arr.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
 >str : string
 >arr.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
->arr.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions & Intl.DateTimeFormatOptions): string; }
+>arr.toLocaleString : () => string
 >arr : number[]
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions & Intl.DateTimeFormatOptions): string; }
+>toLocaleString : () => string
 >'en-US' : "en-US"
->{ style: 'currency', currency: 'EUR' } : { style: "currency"; currency: string; }
->style : "currency"
+>{ style: 'currency', currency: 'EUR' } : { style: string; currency: string; }
+>style : string
 >'currency' : "currency"
 >currency : string
 >'EUR' : "EUR"
@@= skipped -39, +39 lines =@@
 >str = dates.toLocaleString() : string
 >str : string
 >dates.toLocaleString() : string
->dates.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions & Intl.DateTimeFormatOptions): string; }
+>dates.toLocaleString : () => string
 >dates : readonly Date[]
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions & Intl.DateTimeFormatOptions): string; }
+>toLocaleString : () => string

 str = dates.toLocaleString('fr'); // should be error
 >str = dates.toLocaleString('fr') : string
 >str : string
 >dates.toLocaleString('fr') : string
->dates.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions & Intl.DateTimeFormatOptions): string; }
+>dates.toLocaleString : () => string
 >dates : readonly Date[]
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions & Intl.DateTimeFormatOptions): string; }
+>toLocaleString : () => string
 >'fr' : "fr"

 str = dates.toLocaleString('fr', { timeZone: 'UTC' }); // should be error
 >str = dates.toLocaleString('fr', { timeZone: 'UTC' }) : string
 >str : string
 >dates.toLocaleString('fr', { timeZone: 'UTC' }) : string
->dates.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions & Intl.DateTimeFormatOptions): string; }
+>dates.toLocaleString : () => string
 >dates : readonly Date[]
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions & Intl.DateTimeFormatOptions): string; }
+>toLocaleString : () => string
 >'fr' : "fr"
 >{ timeZone: 'UTC' } : { timeZone: string; }
 >timeZone : string
@@= skipped -35, +35 lines =@@
 >str = int8Array.toLocaleString() : string
 >str : string
 >int8Array.toLocaleString() : string
->int8Array.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>int8Array.toLocaleString : () => string
 >int8Array : Int8Array<ArrayBuffer>
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>toLocaleString : () => string

 str = int8Array.toLocaleString('en-US'); // should be error
 >str = int8Array.toLocaleString('en-US') : string
 >str : string
 >int8Array.toLocaleString('en-US') : string
->int8Array.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>int8Array.toLocaleString : () => string
 >int8Array : Int8Array<ArrayBuffer>
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>toLocaleString : () => string
 >'en-US' : "en-US"

 str = int8Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }); // should be error
 >str = int8Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
 >str : string
 >int8Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
->int8Array.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>int8Array.toLocaleString : () => string
 >int8Array : Int8Array<ArrayBuffer>
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>toLocaleString : () => string
 >'en-US' : "en-US"
->{ style: 'currency', currency: 'EUR' } : { style: "currency"; currency: string; }
->style : "currency"
+>{ style: 'currency', currency: 'EUR' } : { style: string; currency: string; }
+>style : string
 >'currency' : "currency"
 >currency : string
 >'EUR' : "EUR"
@@= skipped -37, +37 lines =@@
 >str = uint8Array.toLocaleString() : string
 >str : string
 >uint8Array.toLocaleString() : string
->uint8Array.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>uint8Array.toLocaleString : () => string
 >uint8Array : Uint8Array<ArrayBuffer>
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>toLocaleString : () => string

 str = uint8Array.toLocaleString('en-US'); // should be error
 >str = uint8Array.toLocaleString('en-US') : string
 >str : string
 >uint8Array.toLocaleString('en-US') : string
->uint8Array.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>uint8Array.toLocaleString : () => string
 >uint8Array : Uint8Array<ArrayBuffer>
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>toLocaleString : () => string
 >'en-US' : "en-US"

 str = uint8Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }); // should be error
 >str = uint8Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
 >str : string
 >uint8Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
->uint8Array.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>uint8Array.toLocaleString : () => string
 >uint8Array : Uint8Array<ArrayBuffer>
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>toLocaleString : () => string
 >'en-US' : "en-US"
->{ style: 'currency', currency: 'EUR' } : { style: "currency"; currency: string; }
->style : "currency"
+>{ style: 'currency', currency: 'EUR' } : { style: string; currency: string; }
+>style : string
 >'currency' : "currency"
 >currency : string
 >'EUR' : "EUR"
@@= skipped -37, +37 lines =@@
 >str = uint8ClampedArray.toLocaleString() : string
 >str : string
 >uint8ClampedArray.toLocaleString() : string
->uint8ClampedArray.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>uint8ClampedArray.toLocaleString : () => string
 >uint8ClampedArray : Uint8ClampedArray<ArrayBuffer>
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>toLocaleString : () => string

 str = uint8ClampedArray.toLocaleString('en-US'); // should be error
 >str = uint8ClampedArray.toLocaleString('en-US') : string
 >str : string
 >uint8ClampedArray.toLocaleString('en-US') : string
->uint8ClampedArray.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>uint8ClampedArray.toLocaleString : () => string
 >uint8ClampedArray : Uint8ClampedArray<ArrayBuffer>
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>toLocaleString : () => string
 >'en-US' : "en-US"

 str = uint8ClampedArray.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }); // should be error
 >str = uint8ClampedArray.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
 >str : string
 >uint8ClampedArray.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
->uint8ClampedArray.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>uint8ClampedArray.toLocaleString : () => string
 >uint8ClampedArray : Uint8ClampedArray<ArrayBuffer>
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>toLocaleString : () => string
 >'en-US' : "en-US"
->{ style: 'currency', currency: 'EUR' } : { style: "currency"; currency: string; }
->style : "currency"
+>{ style: 'currency', currency: 'EUR' } : { style: string; currency: string; }
+>style : string
 >'currency' : "currency"
 >currency : string
 >'EUR' : "EUR"
@@= skipped -37, +37 lines =@@
 >str = int16Array.toLocaleString() : string
 >str : string
 >int16Array.toLocaleString() : string
->int16Array.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>int16Array.toLocaleString : () => string
 >int16Array : Int16Array<ArrayBuffer>
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>toLocaleString : () => string

 str = int16Array.toLocaleString('en-US'); // should be error
 >str = int16Array.toLocaleString('en-US') : string
 >str : string
 >int16Array.toLocaleString('en-US') : string
->int16Array.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>int16Array.toLocaleString : () => string
 >int16Array : Int16Array<ArrayBuffer>
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>toLocaleString : () => string
 >'en-US' : "en-US"

 str = int16Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }); // should be error
 >str = int16Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
 >str : string
 >int16Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
->int16Array.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>int16Array.toLocaleString : () => string
 >int16Array : Int16Array<ArrayBuffer>
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>toLocaleString : () => string
 >'en-US' : "en-US"
->{ style: 'currency', currency: 'EUR' } : { style: "currency"; currency: string; }
->style : "currency"
+>{ style: 'currency', currency: 'EUR' } : { style: string; currency: string; }
+>style : string
 >'currency' : "currency"
 >currency : string
 >'EUR' : "EUR"
@@= skipped -37, +37 lines =@@
 >str = uint16Array.toLocaleString() : string
 >str : string
 >uint16Array.toLocaleString() : string
->uint16Array.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>uint16Array.toLocaleString : () => string
 >uint16Array : Uint16Array<ArrayBuffer>
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>toLocaleString : () => string

 str = uint16Array.toLocaleString('en-US'); // should be error
 >str = uint16Array.toLocaleString('en-US') : string
 >str : string
 >uint16Array.toLocaleString('en-US') : string
->uint16Array.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>uint16Array.toLocaleString : () => string
 >uint16Array : Uint16Array<ArrayBuffer>
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>toLocaleString : () => string
 >'en-US' : "en-US"

 str = uint16Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }); // should be error
 >str = uint16Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
 >str : string
 >uint16Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
->uint16Array.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>uint16Array.toLocaleString : () => string
 >uint16Array : Uint16Array<ArrayBuffer>
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>toLocaleString : () => string
 >'en-US' : "en-US"
->{ style: 'currency', currency: 'EUR' } : { style: "currency"; currency: string; }
->style : "currency"
+>{ style: 'currency', currency: 'EUR' } : { style: string; currency: string; }
+>style : string
 >'currency' : "currency"
 >currency : string
 >'EUR' : "EUR"
@@= skipped -37, +37 lines =@@
 >str = int32Array.toLocaleString() : string
 >str : string
 >int32Array.toLocaleString() : string
->int32Array.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>int32Array.toLocaleString : () => string
 >int32Array : Int32Array<ArrayBuffer>
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>toLocaleString : () => string

 str = int32Array.toLocaleString('en-US'); // should be error
 >str = int32Array.toLocaleString('en-US') : string
 >str : string
 >int32Array.toLocaleString('en-US') : string
->int32Array.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>int32Array.toLocaleString : () => string
 >int32Array : Int32Array<ArrayBuffer>
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>toLocaleString : () => string
 >'en-US' : "en-US"

 str = int32Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }); // should be error
 >str = int32Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
 >str : string
 >int32Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
->int32Array.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>int32Array.toLocaleString : () => string
 >int32Array : Int32Array<ArrayBuffer>
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>toLocaleString : () => string
 >'en-US' : "en-US"
->{ style: 'currency', currency: 'EUR' } : { style: "currency"; currency: string; }
->style : "currency"
+>{ style: 'currency', currency: 'EUR' } : { style: string; currency: string; }
+>style : string
 >'currency' : "currency"
 >currency : string
 >'EUR' : "EUR"
@@= skipped -37, +37 lines =@@
 >str = uint32Array.toLocaleString() : string
 >str : string
 >uint32Array.toLocaleString() : string
->uint32Array.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>uint32Array.toLocaleString : () => string
 >uint32Array : Uint32Array<ArrayBuffer>
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>toLocaleString : () => string

 str = uint32Array.toLocaleString('en-US'); // should be error
 >str = uint32Array.toLocaleString('en-US') : string
 >str : string
 >uint32Array.toLocaleString('en-US') : string
->uint32Array.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>uint32Array.toLocaleString : () => string
 >uint32Array : Uint32Array<ArrayBuffer>
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>toLocaleString : () => string
 >'en-US' : "en-US"

 str = uint32Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }); // should be error
 >str = uint32Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
 >str : string
 >uint32Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
->uint32Array.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>uint32Array.toLocaleString : () => string
 >uint32Array : Uint32Array<ArrayBuffer>
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>toLocaleString : () => string
 >'en-US' : "en-US"
->{ style: 'currency', currency: 'EUR' } : { style: "currency"; currency: string; }
->style : "currency"
+>{ style: 'currency', currency: 'EUR' } : { style: string; currency: string; }
+>style : string
 >'currency' : "currency"
 >currency : string
 >'EUR' : "EUR"
@@= skipped -37, +37 lines =@@
 >str = float32Array.toLocaleString() : string
 >str : string
 >float32Array.toLocaleString() : string
->float32Array.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>float32Array.toLocaleString : () => string
 >float32Array : Float32Array<ArrayBuffer>
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>toLocaleString : () => string

 str = float32Array.toLocaleString('en-US'); // should be error
 >str = float32Array.toLocaleString('en-US') : string
 >str : string
 >float32Array.toLocaleString('en-US') : string
->float32Array.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>float32Array.toLocaleString : () => string
 >float32Array : Float32Array<ArrayBuffer>
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>toLocaleString : () => string
 >'en-US' : "en-US"

 str = float32Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }); // should be error
 >str = float32Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
 >str : string
 >float32Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
->float32Array.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>float32Array.toLocaleString : () => string
 >float32Array : Float32Array<ArrayBuffer>
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>toLocaleString : () => string
 >'en-US' : "en-US"
->{ style: 'currency', currency: 'EUR' } : { style: "currency"; currency: string; }
->style : "currency"
+>{ style: 'currency', currency: 'EUR' } : { style: string; currency: string; }
+>style : string
 >'currency' : "currency"
 >currency : string
 >'EUR' : "EUR"
@@= skipped -37, +37 lines =@@
 >str = float64Array.toLocaleString() : string
 >str : string
 >float64Array.toLocaleString() : string
->float64Array.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>float64Array.toLocaleString : () => string
 >float64Array : Float64Array<ArrayBuffer>
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>toLocaleString : () => string

 str = float64Array.toLocaleString('en-US'); // should be error
 >str = float64Array.toLocaleString('en-US') : string
 >str : string
 >float64Array.toLocaleString('en-US') : string
->float64Array.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>float64Array.toLocaleString : () => string
 >float64Array : Float64Array<ArrayBuffer>
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>toLocaleString : () => string
 >'en-US' : "en-US"

 str = float64Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }); // should be error
 >str = float64Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
 >str : string
 >float64Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
->float64Array.toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>float64Array.toLocaleString : () => string
 >float64Array : Float64Array<ArrayBuffer>
->toLocaleString : { (): string; (locales: string | string[], options?: Intl.NumberFormatOptions): string; }
+>toLocaleString : () => string
 >'en-US' : "en-US"
->{ style: 'currency', currency: 'EUR' } : { style: "currency"; currency: string; }
->style : "currency"
+>{ style: 'currency', currency: 'EUR' } : { style: string; currency: string; }
+>style : string
 >'currency' : "currency"
 >currency : string
 >'EUR' : "EUR"