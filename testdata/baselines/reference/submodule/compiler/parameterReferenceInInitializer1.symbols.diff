--- old.parameterReferenceInInitializer1.symbols
+++ new.parameterReferenceInInitializer1.symbols
@@= skipped -16, +16 lines =@@
 }
 interface Y { x: number }
 >Y : Symbol(Y, Decl(parameterReferenceInInitializer1.ts, 2, 1))
->x : Symbol(Y.x, Decl(parameterReferenceInInitializer1.ts, 3, 13))
+>x : Symbol(x, Decl(parameterReferenceInInitializer1.ts, 3, 13))
 
 class C {
 >C : Symbol(C, Decl(parameterReferenceInInitializer1.ts, 3, 25))
@@= skipped -11, +11 lines =@@
 >Y : Symbol(Y, Decl(parameterReferenceInInitializer1.ts, 2, 1))
 
         public x = fn(y, (y, x) => y.x = x) // expected to work, but actually doesn't
->x : Symbol(C.x, Decl(parameterReferenceInInitializer1.ts, 7, 13))
+>x : Symbol(x, Decl(parameterReferenceInInitializer1.ts, 7, 13))
 >fn : Symbol(fn, Decl(parameterReferenceInInitializer1.ts, 0, 0))
 >y : Symbol(y, Decl(parameterReferenceInInitializer1.ts, 6, 16))
 >y : Symbol(y, Decl(parameterReferenceInInitializer1.ts, 8, 26))
 >x : Symbol(x, Decl(parameterReferenceInInitializer1.ts, 8, 28))
->y.x : Symbol(Y.x, Decl(parameterReferenceInInitializer1.ts, 3, 13))
+>y.x : Symbol(x, Decl(parameterReferenceInInitializer1.ts, 3, 13))
 >y : Symbol(y, Decl(parameterReferenceInInitializer1.ts, 8, 26))
->x : Symbol(Y.x, Decl(parameterReferenceInInitializer1.ts, 3, 13))
+>x : Symbol(x, Decl(parameterReferenceInInitializer1.ts, 3, 13))
 >x : Symbol(x, Decl(parameterReferenceInInitializer1.ts, 8, 28))
 
     ) {
