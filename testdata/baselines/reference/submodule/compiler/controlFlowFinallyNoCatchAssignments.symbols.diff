--- old.controlFlowFinallyNoCatchAssignments.symbols
+++ new.controlFlowFinallyNoCatchAssignments.symbols
@@= skipped -5, +5 lines =@@
 
 x = Math.random();
 >x : Symbol(x, Decl(controlFlowFinallyNoCatchAssignments.ts, 0, 3))
->Math.random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
+>Math.random : Symbol(random, Decl(lib.es5.d.ts, --, --))
 >Math : Symbol(Math, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
+>random : Symbol(random, Decl(lib.es5.d.ts, --, --))
 
 let a: number;
 >a : Symbol(a, Decl(controlFlowFinallyNoCatchAssignments.ts, 2, 3))
@@= skipped -20, +20 lines =@@
     }
 } finally {
     console.log(x);
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >x : Symbol(x, Decl(controlFlowFinallyNoCatchAssignments.ts, 0, 3))
 }
 
 console.log(a); // <- error here
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >a : Symbol(a, Decl(controlFlowFinallyNoCatchAssignments.ts, 2, 3))
 
