--- old.reactDefaultPropsInferenceSuccess.symbols
+++ new.reactDefaultPropsInferenceSuccess.symbols
@@ -10,11 +10,11 @@
 >BaseProps : Symbol(BaseProps, Decl(reactDefaultPropsInferenceSuccess.tsx, 2, 26))
 
   when?: ((value: string) => boolean) | "a" | "b";
->when : Symbol(BaseProps.when, Decl(reactDefaultPropsInferenceSuccess.tsx, 4, 21))
+>when : Symbol(when, Decl(reactDefaultPropsInferenceSuccess.tsx, 4, 21))
 >value : Symbol(value, Decl(reactDefaultPropsInferenceSuccess.tsx, 5, 11))
 
   error?: boolean;
->error : Symbol(BaseProps.error, Decl(reactDefaultPropsInferenceSuccess.tsx, 5, 50))
+>error : Symbol(error, Decl(reactDefaultPropsInferenceSuccess.tsx, 5, 50))
 }
 
 interface Props extends BaseProps {
@@ -27,13 +27,13 @@
 >P : Symbol(P, Decl(reactDefaultPropsInferenceSuccess.tsx, 12, 20))
 >Props : Symbol(Props, Decl(reactDefaultPropsInferenceSuccess.tsx, 7, 1))
 >BaseProps : Symbol(BaseProps, Decl(reactDefaultPropsInferenceSuccess.tsx, 2, 26))
->React.Component : Symbol(React.Component, Decl(react16.d.ts, 345, 54), Decl(react16.d.ts, 349, 94))
+>React.Component : Symbol(unknown)
 >React : Symbol(React, Decl(reactDefaultPropsInferenceSuccess.tsx, 2, 6))
->Component : Symbol(React.Component, Decl(react16.d.ts, 345, 54), Decl(react16.d.ts, 349, 94))
+>Component : Symbol(unknown)
 >P : Symbol(P, Decl(reactDefaultPropsInferenceSuccess.tsx, 12, 20))
 
   static defaultProps = {
->defaultProps : Symbol(FieldFeedback.defaultProps, Decl(reactDefaultPropsInferenceSuccess.tsx, 12, 77))
+>defaultProps : Symbol(defaultProps, Decl(reactDefaultPropsInferenceSuccess.tsx, 12, 77))
 
     when: () => true
 >when : Symbol(when, Decl(reactDefaultPropsInferenceSuccess.tsx, 13, 25))
@@ -41,11 +41,9 @@
   };
 
   render() {
->render : Symbol(FieldFeedback.render, Decl(reactDefaultPropsInferenceSuccess.tsx, 15, 4))
+>render : Symbol(render, Decl(reactDefaultPropsInferenceSuccess.tsx, 15, 4))
 
     return <div>Hello</div>;
->div : Symbol(JSX.IntrinsicElements.div, Decl(react16.d.ts, 2546, 114))
->div : Symbol(JSX.IntrinsicElements.div, Decl(react16.d.ts, 2546, 114))
   }
 }
 
@@ -63,9 +61,9 @@
 >FieldFeedback : Symbol(FieldFeedback, Decl(reactDefaultPropsInferenceSuccess.tsx, 10, 1))
 >when : Symbol(when, Decl(reactDefaultPropsInferenceSuccess.tsx, 26, 34))
 >value : Symbol(value, Decl(reactDefaultPropsInferenceSuccess.tsx, 26, 41))
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >value : Symbol(value, Decl(reactDefaultPropsInferenceSuccess.tsx, 26, 41))
 
 class FieldFeedbackBeta<P extends Props = BaseProps> extends React.Component<P> {
@@ -73,13 +71,13 @@
 >P : Symbol(P, Decl(reactDefaultPropsInferenceSuccess.tsx, 28, 24))
 >Props : Symbol(Props, Decl(reactDefaultPropsInferenceSuccess.tsx, 7, 1))
 >BaseProps : Symbol(BaseProps, Decl(reactDefaultPropsInferenceSuccess.tsx, 2, 26))
->React.Component : Symbol(React.Component, Decl(react16.d.ts, 345, 54), Decl(react16.d.ts, 349, 94))
+>React.Component : Symbol(unknown)
 >React : Symbol(React, Decl(reactDefaultPropsInferenceSuccess.tsx, 2, 6))
->Component : Symbol(React.Component, Decl(react16.d.ts, 345, 54), Decl(react16.d.ts, 349, 94))
+>Component : Symbol(unknown)
 >P : Symbol(P, Decl(reactDefaultPropsInferenceSuccess.tsx, 28, 24))
 
   static defaultProps: BaseProps = {
->defaultProps : Symbol(FieldFeedbackBeta.defaultProps, Decl(reactDefaultPropsInferenceSuccess.tsx, 28, 81))
+>defaultProps : Symbol(defaultProps, Decl(reactDefaultPropsInferenceSuccess.tsx, 28, 81))
 >BaseProps : Symbol(BaseProps, Decl(reactDefaultPropsInferenceSuccess.tsx, 2, 26))
 
     when: () => true
@@ -88,11 +86,9 @@
   };
 
   render() {
->render : Symbol(FieldFeedbackBeta.render, Decl(reactDefaultPropsInferenceSuccess.tsx, 31, 4))
+>render : Symbol(render, Decl(reactDefaultPropsInferenceSuccess.tsx, 31, 4))
 
     return <div>Hello</div>;
->div : Symbol(JSX.IntrinsicElements.div, Decl(react16.d.ts, 2546, 114))
->div : Symbol(JSX.IntrinsicElements.div, Decl(react16.d.ts, 2546, 114))
   }
 }
 
@@ -112,9 +108,9 @@
 >FieldFeedbackBeta : Symbol(FieldFeedbackBeta, Decl(reactDefaultPropsInferenceSuccess.tsx, 26, 73))
 >when : Symbol(when, Decl(reactDefaultPropsInferenceSuccess.tsx, 42, 39))
 >value : Symbol(value, Decl(reactDefaultPropsInferenceSuccess.tsx, 42, 46))
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >value : Symbol(value, Decl(reactDefaultPropsInferenceSuccess.tsx, 42, 46))
 >error : Symbol(error, Decl(reactDefaultPropsInferenceSuccess.tsx, 42, 74))
 >FieldFeedbackBeta : Symbol(FieldFeedbackBeta, Decl(reactDefaultPropsInferenceSuccess.tsx, 26, 73))
@@ -124,7 +120,7 @@
 >Props : Symbol(Props, Decl(reactDefaultPropsInferenceSuccess.tsx, 7, 1))
 
   when: (value: string) => boolean;
->when : Symbol(MyPropsProps.when, Decl(reactDefaultPropsInferenceSuccess.tsx, 44, 38))
+>when : Symbol(when, Decl(reactDefaultPropsInferenceSuccess.tsx, 44, 38))
 >value : Symbol(value, Decl(reactDefaultPropsInferenceSuccess.tsx, 45, 9))
 }
 
@@ -137,7 +133,7 @@
 >P : Symbol(P, Decl(reactDefaultPropsInferenceSuccess.tsx, 48, 21))
 
   static defaultProps = {
->defaultProps : Symbol(FieldFeedback2.defaultProps, Decl(reactDefaultPropsInferenceSuccess.tsx, 48, 86))
+>defaultProps : Symbol(defaultProps, Decl(reactDefaultPropsInferenceSuccess.tsx, 48, 86))
 
     when: () => true
 >when : Symbol(when, Decl(reactDefaultPropsInferenceSuccess.tsx, 49, 25))
@@ -145,18 +141,12 @@
   };
 
   render() {
->render : Symbol(FieldFeedback2.render, Decl(reactDefaultPropsInferenceSuccess.tsx, 51, 4))
+>render : Symbol(render, Decl(reactDefaultPropsInferenceSuccess.tsx, 51, 4))
 
     this.props.when("now"); // OK, always defined
->this.props.when : Symbol(when, Decl(reactDefaultPropsInferenceSuccess.tsx, 44, 38))
->this.props : Symbol(React.Component.props, Decl(react16.d.ts, 367, 32))
 >this : Symbol(FieldFeedback2, Decl(reactDefaultPropsInferenceSuccess.tsx, 46, 1))
->props : Symbol(React.Component.props, Decl(react16.d.ts, 367, 32))
->when : Symbol(when, Decl(reactDefaultPropsInferenceSuccess.tsx, 44, 38))
 
     return <div>Hello</div>;
->div : Symbol(JSX.IntrinsicElements.div, Decl(react16.d.ts, 2546, 114))
->div : Symbol(JSX.IntrinsicElements.div, Decl(react16.d.ts, 2546, 114))
   }
 }
 
@@ -174,9 +164,9 @@
 >FieldFeedback2 : Symbol(FieldFeedback2, Decl(reactDefaultPropsInferenceSuccess.tsx, 46, 1))
 >when : Symbol(when, Decl(reactDefaultPropsInferenceSuccess.tsx, 63, 35))
 >value : Symbol(value, Decl(reactDefaultPropsInferenceSuccess.tsx, 63, 42))
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >value : Symbol(value, Decl(reactDefaultPropsInferenceSuccess.tsx, 63, 42))
 
 // OK
