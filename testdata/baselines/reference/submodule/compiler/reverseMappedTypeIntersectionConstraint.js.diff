--- old.reverseMappedTypeIntersectionConstraint.js
+++ new.reverseMappedTypeIntersectionConstraint.js
@@= skipped -175, +175 lines =@@


 //// [reverseMappedTypeIntersectionConstraint.js]
-"use strict";
-var __assign = (this && this.__assign) || function () {
-    __assign = Object.assign || function(t) {
-        for (var s, i = 1, n = arguments.length; i < n; i++) {
-            s = arguments[i];
-            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
-                t[p] = s[p];
-        }
-        return t;
-    };
-    return __assign.apply(this, arguments);
-};
 const inferredParams1 = createMachine({
     entry: "foo",
     states: {
@@= skipped -62, +50 lines =@@
     return foo(props); // no error because lack of excess property check by design
 }
 foo({ x: 1, y: 'foo' });
-foo(__assign({ x: 1, y: 'foo' })); // no error because lack of excess property check by design
+foo({ ...{ x: 1, y: 'foo' } }); // no error because lack of excess property check by design
 baz({ x: 1 });
 baz({ x: 1, z: 123 });
 baz({ x: 1, y: 'foo' });