--- old.declarationNoDanglingGenerics.errors.txt
+++ new.declarationNoDanglingGenerics.errors.txt
@@= skipped -0, +0 lines =@@
-<no content>
+declarationNoDanglingGenerics.ts(1,7): error TS2322: Type '{}' is not assignable to type '{ [kind: string]: boolean; }'.
+  Index signature for type 'string' is missing in type '{}'.
+
+
+==== declarationNoDanglingGenerics.ts (1 errors) ====
+    const kindCache: { [kind: string]: boolean } = {};
+          ~~~~~~~~~
+!!! error TS2322: Type '{}' is not assignable to type '{ [kind: string]: boolean; }'.
+!!! error TS2322:   Index signature for type 'string' is missing in type '{}'.
+    
+    function register(kind: string): void | never {
+      if (kindCache[kind]) {
+        throw new Error(`Class with kind "${kind}" is already registered.`);
+      }
+      kindCache[kind] = true;
+    }
+    
+    function ClassFactory<TKind extends string>(kind: TKind) {
+      register(kind);
+    
+      return class {
+        static readonly THE_KIND: TKind = kind;
+        readonly kind: TKind = kind;
+      };
+    }
+    
+    class Kinds {
+      static readonly A = "A";
+      static readonly B = "B";
+      static readonly C = "C";
+    }
+    
+    export class AKind extends ClassFactory(Kinds.A) {
+    }
+    
+    export class BKind extends ClassFactory(Kinds.B) {
+    }
+    
+    export class CKind extends ClassFactory(Kinds.C) {
+    }