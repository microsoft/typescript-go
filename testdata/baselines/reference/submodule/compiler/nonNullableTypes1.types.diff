--- old.nonNullableTypes1.types
+++ new.nonNullableTypes1.types
@@= skipped -2, +2 lines =@@
 === nonNullableTypes1.ts ===
 function f1<T>(x: T) {
 >f1 : <T>(x: T) => void
+>T : T
 >x : T
 
     let y = x || "hello";  // NonNullable<T> | string
@@= skipped -19, +20 lines =@@
 
 function f2<T>(x: T) {  // NonNullable<T>
 >f2 : <T>(x: T) => NonNullable<T>
+>T : T
 >x : T
 
     return x || error();
@@= skipped -21, +22 lines =@@
 
 function f4<T extends { x: string } | undefined>(obj: T) {
 >f4 : <T extends { x: string; } | undefined>(obj: T) => void
+>T : T
 >x : string
 >obj : T
 
@@= skipped -23, +24 lines =@@
     }
     if (typeof obj?.x === "string") {
 >typeof obj?.x === "string" : boolean
->typeof obj?.x : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof obj?.x : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >obj?.x : string | undefined
 >obj : { x: string; } | undefined
 >x : string | undefined
