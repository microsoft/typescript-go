--- old.doNotInferUnrelatedTypes.symbols
+++ new.doNotInferUnrelatedTypes.symbols
@@= skipped -5, +5 lines =@@
 >dearray : Symbol(dearray, Decl(doNotInferUnrelatedTypes.ts, 0, 0))
 >T : Symbol(T, Decl(doNotInferUnrelatedTypes.ts, 1, 25))
 >ara : Symbol(ara, Decl(doNotInferUnrelatedTypes.ts, 1, 28))
->ReadonlyArray : Symbol(ReadonlyArray, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>ReadonlyArray : Symbol(ReadonlyArray, Decl(lib.es5.d.ts, --, --))
 >T : Symbol(T, Decl(doNotInferUnrelatedTypes.ts, 1, 25))
 >T : Symbol(T, Decl(doNotInferUnrelatedTypes.ts, 1, 25))

@@= skipped -9, +9 lines =@@

 declare var alt: Array<LiteralType>;
 >alt : Symbol(alt, Decl(doNotInferUnrelatedTypes.ts, 3, 11))
->Array : Symbol(Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>Array : Symbol(Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 >LiteralType : Symbol(LiteralType, Decl(doNotInferUnrelatedTypes.ts, 1, 54))

 let foo: LiteralType = dearray(alt);