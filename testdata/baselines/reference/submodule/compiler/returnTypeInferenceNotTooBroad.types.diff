--- old.returnTypeInferenceNotTooBroad.types
+++ new.returnTypeInferenceNotTooBroad.types
@@= skipped -10, +10 lines =@@
 >c : 1
 
 interface Opts<T> {
+>Opts : Opts<T>
+>T : T
+
     low?: number;
 >low : number
 
@@= skipped -7, +10 lines =@@
 >sign : T
 }
 interface Wrapper<T> {
+>Wrapper : Wrapper<T>
+>T : T
 }
 declare function sepsis<T extends Signs>(opts: Opts<T>): Wrapper<T>;
 >sepsis : <T extends Signs>(opts: Opts<T>) => Wrapper<T>
+>T : T
 >opts : Opts<T>
 
 declare function unwrap<T>(w: Wrapper<T>): T;
 >unwrap : <T>(w: Wrapper<T>) => T
+>T : T
 >w : Wrapper<T>
 
 export const y = sepsis({ low: 1, sign: { kind: 'a', a: 3 }});
