--- old.tsxSpreadDoesNotReportExcessProps.js
+++ new.tsxSpreadDoesNotReportExcessProps.js
@@= skipped -13, +13 lines =@@

 //// [tsxSpreadDoesNotReportExcessProps.js]
 "use strict";
-/// <reference path="react16.d.ts" />
-var __extends = (this && this.__extends) || (function () {
-    var extendStatics = function (d, b) {
-        extendStatics = Object.setPrototypeOf ||
-            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
-            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
-        return extendStatics(d, b);
-    };
-    return function (d, b) {
-        if (typeof b !== "function" && b !== null)
-            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
-        extendStatics(d, b);
-        function __() { this.constructor = d; }
-        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
-    };
-})();
 var __assign = (this && this.__assign) || function () {
     __assign = Object.assign || function(t) {
         for (var s, i = 1, n = arguments.length; i < n; i++) {
@@= skipped -31, +15 lines =@@
     return (mod && mod.__esModule) ? mod : { "default": mod };
 };
 Object.defineProperty(exports, "__esModule", { value: true });
-var react_1 = __importDefault(require("react"));
-var MyComponent = /** @class */ (function (_super) {
-    __extends(MyComponent, _super);
-    function MyComponent() {
-        return _super !== null && _super.apply(this, arguments) || this;
-    }
-    MyComponent.prototype.render = function () {
+/// <reference path="react16.d.ts" />
+const react_1 = __importDefault(require("react"));
+class MyComponent extends react_1.default.Component {
+    render() {
         return (react_1.default.createElement("div", __assign({}, this.props, { className: "ok" })));
-    };
-    return MyComponent;
-}(react_1.default.Component));
+    }
+}