--- old.arrayOfExportedClass.symbols
+++ new.arrayOfExportedClass.symbols
@@= skipped -8, +8 lines =@@
 >Road : Symbol(Road, Decl(arrayOfExportedClass_1.ts, 1, 49))
 
     public cars: Car[];
->cars : Symbol(Road.cars, Decl(arrayOfExportedClass_1.ts, 3, 12))
+>cars : Symbol(cars, Decl(arrayOfExportedClass_1.ts, 3, 12))
 >Car : Symbol(Car, Decl(arrayOfExportedClass_1.ts, 0, 0))
 
     public AddCars(cars: Car[]) {
->AddCars : Symbol(Road.AddCars, Decl(arrayOfExportedClass_1.ts, 5, 23))
+>AddCars : Symbol(AddCars, Decl(arrayOfExportedClass_1.ts, 5, 23))
 >cars : Symbol(cars, Decl(arrayOfExportedClass_1.ts, 7, 19))
 >Car : Symbol(Car, Decl(arrayOfExportedClass_1.ts, 0, 0))
 
         this.cars = cars;
->this.cars : Symbol(Road.cars, Decl(arrayOfExportedClass_1.ts, 3, 12))
+>this.cars : Symbol(cars, Decl(arrayOfExportedClass_1.ts, 3, 12))
 >this : Symbol(Road, Decl(arrayOfExportedClass_1.ts, 1, 49))
->cars : Symbol(Road.cars, Decl(arrayOfExportedClass_1.ts, 3, 12))
+>cars : Symbol(cars, Decl(arrayOfExportedClass_1.ts, 3, 12))
 >cars : Symbol(cars, Decl(arrayOfExportedClass_1.ts, 7, 19))
     }
 }
@@= skipped -24, +24 lines =@@
 >Car : Symbol(Car, Decl(arrayOfExportedClass_0.ts, 0, 0))
 
     foo: string;
->foo : Symbol(Car.foo, Decl(arrayOfExportedClass_0.ts, 0, 11))
+>foo : Symbol(foo, Decl(arrayOfExportedClass_0.ts, 0, 11))
 }
 
 export = Car;
