--- old.detachedCommentAtStartOfConstructor2.symbols
+++ new.detachedCommentAtStartOfConstructor2.symbols
@@ -5,10 +5,10 @@
 >TestFile : Symbol(TestFile, Decl(detachedCommentAtStartOfConstructor2.ts, 0, 0))
 
     public message: string;
->message : Symbol(TestFile.message, Decl(detachedCommentAtStartOfConstructor2.ts, 0, 16))
+>message : Symbol(message, Decl(detachedCommentAtStartOfConstructor2.ts, 0, 16))
 
     public name: string;
->name : Symbol(TestFile.name, Decl(detachedCommentAtStartOfConstructor2.ts, 1, 27))
+>name : Symbol(name, Decl(detachedCommentAtStartOfConstructor2.ts, 1, 27))
 
     constructor(message: string) {
 >message : Symbol(message, Decl(detachedCommentAtStartOfConstructor2.ts, 3, 16))
@@ -19,14 +19,14 @@
         var getMessage = () => message + this.name;
 >getMessage : Symbol(getMessage, Decl(detachedCommentAtStartOfConstructor2.ts, 7, 11))
 >message : Symbol(message, Decl(detachedCommentAtStartOfConstructor2.ts, 3, 16))
->this.name : Symbol(TestFile.name, Decl(detachedCommentAtStartOfConstructor2.ts, 1, 27))
+>this.name : Symbol(name, Decl(detachedCommentAtStartOfConstructor2.ts, 1, 27))
 >this : Symbol(TestFile, Decl(detachedCommentAtStartOfConstructor2.ts, 0, 0))
->name : Symbol(TestFile.name, Decl(detachedCommentAtStartOfConstructor2.ts, 1, 27))
+>name : Symbol(name, Decl(detachedCommentAtStartOfConstructor2.ts, 1, 27))
 
         this.message = getMessage();
->this.message : Symbol(TestFile.message, Decl(detachedCommentAtStartOfConstructor2.ts, 0, 16))
+>this.message : Symbol(message, Decl(detachedCommentAtStartOfConstructor2.ts, 0, 16))
 >this : Symbol(TestFile, Decl(detachedCommentAtStartOfConstructor2.ts, 0, 0))
->message : Symbol(TestFile.message, Decl(detachedCommentAtStartOfConstructor2.ts, 0, 16))
+>message : Symbol(message, Decl(detachedCommentAtStartOfConstructor2.ts, 0, 16))
 >getMessage : Symbol(getMessage, Decl(detachedCommentAtStartOfConstructor2.ts, 7, 11))
     }
 }
