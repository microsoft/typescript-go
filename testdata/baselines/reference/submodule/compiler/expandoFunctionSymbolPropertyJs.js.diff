--- old.expandoFunctionSymbolPropertyJs.js
+++ new.expandoFunctionSymbolPropertyJs.js
@@= skipped -19, +19 lines =@@
   return inner;
 }
 
-//// [types.js]
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.symb = void 0;
-exports.symb = Symbol();
 //// [a.js]
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.test = test;
-var types_1 = require("./types");
-/**
- * @returns {import("./types").TestSymb}
- */
+const types_1 = require("./types");
 function test() {
     function inner() { }
     inner[types_1.symb] = true;
     return inner;
 }
-
-
-//// [types.d.ts]
-export declare const symb: unique symbol;
-export interface TestSymb {
-    (): void;
-    readonly [symb]: boolean;
-}
-//// [a.d.ts]
-/**
- * @returns {import("./types").TestSymb}
- */
-export function test(): import("./types").TestSymb;
+//// [types.js]
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.symb = void 0;
+exports.symb = Symbol();
