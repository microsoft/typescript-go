--- old.strictOptionalProperties1.js
+++ new.strictOptionalProperties1.js
@@= skipped -237, +237 lines =@@


 //// [strictOptionalProperties1.js]
-"use strict";
+var __assign = (this && this.__assign) || function () {
+    __assign = Object.assign || function(t) {
+        for (var s, i = 1, n = arguments.length; i < n; i++) {
+            s = arguments[i];
+            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
+                t[p] = s[p];
+        }
+        return t;
+    };
+    return __assign.apply(this, arguments);
+};
 function f1(obj) {
     let a = obj.a; // string | undefined
     let b = obj.b; // string | undefined
@@= skipped -81, +91 lines =@@
 }
 const defaultProps = { foo: 'foo' };
 const inputProps = { foo: undefined, bar: 'bar' };
-const completeProps = Object.assign(Object.assign({}, defaultProps), inputProps);
+const completeProps = __assign(__assign({}, defaultProps), inputProps);
 // Example from #13195
 const t1 = [1];
 const t2 = [1, undefined];
@@= skipped -8, +8 lines =@@
 const t4 = [1, undefined, undefined];
 // Example from #13195
 const x = { foo: undefined };
-const y = Object.assign({ foo: 123 }, x);
+const y = __assign({ foo: 123 }, x);
 f11(ox1); // string
 f11(ox2); // string | undefined
 f11(ox3); // string