--- old.pathMappingBasedModuleResolution7_node.symbols
+++ new.pathMappingBasedModuleResolution7_node.symbols
@@= skipped -12, +12 lines =@@
 
 use(x.toFixed());
 >use : Symbol(use, Decl(file1.ts, 1, 26))
->x.toFixed : Symbol(Number.toFixed, Decl(lib.es5.d.ts, --, --))
 >x : Symbol(x, Decl(file1.ts, 0, 8))
->toFixed : Symbol(Number.toFixed, Decl(lib.es5.d.ts, --, --))
 
 use(y.toFixed());
 >use : Symbol(use, Decl(file1.ts, 1, 26))
->y.toFixed : Symbol(Number.toFixed, Decl(lib.es5.d.ts, --, --))
+>y.toFixed : Symbol(toFixed, Decl(lib.es5.d.ts, --, --))
 >y : Symbol(y, Decl(file1.ts, 1, 8))
->toFixed : Symbol(Number.toFixed, Decl(lib.es5.d.ts, --, --))
+>toFixed : Symbol(toFixed, Decl(lib.es5.d.ts, --, --))
 
 === c:/root/src/file3/index.d.ts ===
 export let x: number;
 >x : Symbol(x, Decl(index.d.ts, 0, 10))
 
-=== c:/root/generated/src/project/file2.ts ===
-import {a} from "module1";
->a : Symbol(a, Decl(file2.ts, 0, 8))
-
-import {b} from "templates/module2";
->b : Symbol(b, Decl(file2.ts, 1, 8))
-
-import {x as c} from "../file3";
->x : Symbol(c, Decl(index.d.ts, 0, 10))
->c : Symbol(c, Decl(file2.ts, 2, 8))
-
-export let x = a + b + c;
->x : Symbol(x, Decl(file2.ts, 3, 10))
->a : Symbol(a, Decl(file2.ts, 0, 8))
->b : Symbol(b, Decl(file2.ts, 1, 8))
->c : Symbol(c, Decl(file2.ts, 2, 8))
-
-=== c:/shared/module1/index.d.ts ===
-export let a: number
->a : Symbol(a, Decl(index.d.ts, 0, 10))
-
-=== c:/root/generated/src/templates/module2.ts ===
-export let b: number;
->b : Symbol(b, Decl(module2.ts, 0, 10))
-
 === c:/node_modules/module3.d.ts ===
 export let y: number;
 >y : Symbol(y, Decl(module3.d.ts, 0, 10))
