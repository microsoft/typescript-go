--- old.distributiveConditionalTypeNeverIntersection1.types
+++ new.distributiveConditionalTypeNeverIntersection1.types
@@= skipped -4, +4 lines =@@
 
 type IsNumber<T> = T extends number ? true : false;
 >IsNumber : IsNumber<T>
->         : ^^^^^^^^^^^
+>T : T
 >true : true
->     : ^^^^
 >false : false
->      : ^^^^^
 
 type Conflicted = { x: true } & { x: false };
->Conflicted : never
->           : ^^^^^
+>Conflicted : Conflicted
 >x : true
->  : ^^^^
 >true : true
->     : ^^^^
 >x : false
->  : ^^^^^
 >false : false
->      : ^^^^^
 
 type Ex1 = IsNumber<Conflicted>; // never
 >Ex1 : never
->    : ^^^^^
 
 type Ex2 = IsNumber<"OEEE" | Conflicted>; // false
 >Ex2 : false
->    : ^^^^^
 
 type Ex3 = IsNumber<1 | Conflicted>; // true
 >Ex3 : true
->    : ^^^^
 
