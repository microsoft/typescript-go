--- old.declarationEmitTypeParameterNameReusedInOverloads.symbols
+++ new.declarationEmitTypeParameterNameReusedInOverloads.symbols
@@= skipped -2, +2 lines =@@
 === declarationEmitTypeParameterNameReusedInOverloads.ts ===
 export class Base { foo: string; }
 >Base : Symbol(Base, Decl(declarationEmitTypeParameterNameReusedInOverloads.ts, 0, 0))
->foo : Symbol(Base.foo, Decl(declarationEmitTypeParameterNameReusedInOverloads.ts, 0, 19))
+>foo : Symbol(foo, Decl(declarationEmitTypeParameterNameReusedInOverloads.ts, 0, 19))
 
 export class Derived extends Base { bar: string; }
 >Derived : Symbol(Derived, Decl(declarationEmitTypeParameterNameReusedInOverloads.ts, 0, 34))
 >Base : Symbol(Base, Decl(declarationEmitTypeParameterNameReusedInOverloads.ts, 0, 0))
->bar : Symbol(Derived.bar, Decl(declarationEmitTypeParameterNameReusedInOverloads.ts, 1, 35))
+>bar : Symbol(bar, Decl(declarationEmitTypeParameterNameReusedInOverloads.ts, 1, 35))
 
 export class Derived2 extends Derived { baz: string; }
 >Derived2 : Symbol(Derived2, Decl(declarationEmitTypeParameterNameReusedInOverloads.ts, 1, 50))
 >Derived : Symbol(Derived, Decl(declarationEmitTypeParameterNameReusedInOverloads.ts, 0, 34))
->baz : Symbol(Derived2.baz, Decl(declarationEmitTypeParameterNameReusedInOverloads.ts, 2, 39))
+>baz : Symbol(baz, Decl(declarationEmitTypeParameterNameReusedInOverloads.ts, 2, 39))
 
 export type Foo = {
 >Foo : Symbol(Foo, Decl(declarationEmitTypeParameterNameReusedInOverloads.ts, 2, 54))
