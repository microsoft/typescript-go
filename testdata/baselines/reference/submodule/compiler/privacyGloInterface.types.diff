--- old.privacyGloInterface.types
+++ new.privacyGloInterface.types
@@= skipped -17, +17 lines =@@
     }
 
     export interface C3_public {
+>C3_public : C3_public
+
         (c1: C1_public);
 >c1 : C1_public
 
@@= skipped -55, +57 lines =@@
     }
 
     interface C4_private {
+>C4_private : C4_private
+
         (c1: C1_public);
 >c1 : C1_public
 
@@= skipped -65, +67 lines =@@
 
 
 interface C7_public {
+>C7_public : C7_public
+
     (c1: C5_public);
 >c1 : C5_public
 
@@= skipped -28, +30 lines =@@
 }
 
 module m3 {
+>m3 : any
+
     export interface m3_i_public {
+>m3_i_public : m3_i_public
+
         f1(): number;
 >f1 : () => number
     }
 
     interface m3_i_private {
+>m3_i_private : m3_i_private
+
         f2(): string;
 >f2 : () => string
     }
 
     interface m3_C1_private extends m3_i_public {
+>m3_C1_private : m3_C1_private
     }
     interface m3_C2_private extends m3_i_private {
+>m3_C2_private : m3_C2_private
     }
     export interface m3_C3_public extends m3_i_public {
+>m3_C3_public : m3_C3_public
     }
     export interface m3_C4_public extends m3_i_private {
+>m3_C4_public : m3_C4_public
     }
 
     interface m3_C5_private extends m3_i_private, m3_i_public {
+>m3_C5_private : m3_C5_private
     }
     export interface m3_C6_public extends  m3_i_private, m3_i_public {
+>m3_C6_public : m3_C6_public
     }
 }
 
 interface glo_i_public {
+>glo_i_public : glo_i_public
+
     f1(): number;
 >f1 : () => number
 }
 
 interface glo_C3_public extends glo_i_public {
+>glo_C3_public : glo_C3_public
 }
 
