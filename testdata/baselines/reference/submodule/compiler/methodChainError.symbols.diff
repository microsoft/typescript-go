--- old.methodChainError.symbols
+++ new.methodChainError.symbols
@@= skipped -4, +4 lines =@@
 >Builder : Symbol(Builder, Decl(methodChainError.ts, 0, 0))
 
     notMethod: string
->notMethod : Symbol(Builder.notMethod, Decl(methodChainError.ts, 0, 15))
+>notMethod : Symbol(notMethod, Decl(methodChainError.ts, 0, 15))
 
     method(param: string): Builder {
->method : Symbol(Builder.method, Decl(methodChainError.ts, 1, 21))
+>method : Symbol(method, Decl(methodChainError.ts, 1, 21))
 >param : Symbol(param, Decl(methodChainError.ts, 2, 11))
 >Builder : Symbol(Builder, Decl(methodChainError.ts, 0, 0))
 
@@= skipped -13, +13 lines =@@
 }
 
 new Builder()
->new Builder()    .method("a")    .method()    .method : Symbol(Builder.method, Decl(methodChainError.ts, 1, 21))
->new Builder()    .method("a")    .method : Symbol(Builder.method, Decl(methodChainError.ts, 1, 21))
->new Builder()    .method : Symbol(Builder.method, Decl(methodChainError.ts, 1, 21))
+>new Builder()    .method("a")    .method()    .method : Symbol(method, Decl(methodChainError.ts, 1, 21))
+>new Builder()    .method("a")    .method : Symbol(method, Decl(methodChainError.ts, 1, 21))
+>new Builder()    .method : Symbol(method, Decl(methodChainError.ts, 1, 21))
 >Builder : Symbol(Builder, Decl(methodChainError.ts, 0, 0))
 
     .method("a")
->method : Symbol(Builder.method, Decl(methodChainError.ts, 1, 21))
+>method : Symbol(method, Decl(methodChainError.ts, 1, 21))
 
     .method()
->method : Symbol(Builder.method, Decl(methodChainError.ts, 1, 21))
+>method : Symbol(method, Decl(methodChainError.ts, 1, 21))
 
     .method("a");
->method : Symbol(Builder.method, Decl(methodChainError.ts, 1, 21))
+>method : Symbol(method, Decl(methodChainError.ts, 1, 21))
 
     
 new Builder()
->new Builder()    .method("a")    .notMethod : Symbol(Builder.notMethod, Decl(methodChainError.ts, 0, 15))
->new Builder()    .method : Symbol(Builder.method, Decl(methodChainError.ts, 1, 21))
+>new Builder()    .method("a")    .notMethod : Symbol(notMethod, Decl(methodChainError.ts, 0, 15))
+>new Builder()    .method : Symbol(method, Decl(methodChainError.ts, 1, 21))
 >Builder : Symbol(Builder, Decl(methodChainError.ts, 0, 0))
 
     .method("a")
->method : Symbol(Builder.method, Decl(methodChainError.ts, 1, 21))
+>method : Symbol(method, Decl(methodChainError.ts, 1, 21))
 
     .notMethod()
->notMethod : Symbol(Builder.notMethod, Decl(methodChainError.ts, 0, 15))
+>notMethod : Symbol(notMethod, Decl(methodChainError.ts, 0, 15))
 
     .method("a");
