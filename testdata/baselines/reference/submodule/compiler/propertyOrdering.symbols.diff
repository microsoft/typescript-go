--- old.propertyOrdering.symbols
+++ new.propertyOrdering.symbols
@@ -8,19 +8,19 @@
 >store : Symbol(store, Decl(propertyOrdering.ts, 1, 16))
 
       public foo() {
->foo : Symbol(Foo.foo, Decl(propertyOrdering.ts, 1, 34))
+>foo : Symbol(foo, Decl(propertyOrdering.ts, 1, 34))
 
             return this._store.length;   // shouldn't be an error
->this._store : Symbol(Foo._store, Decl(propertyOrdering.ts, 4, 7))
+>this._store : Symbol(_store, Decl(propertyOrdering.ts, 4, 7))
 >this : Symbol(Foo, Decl(propertyOrdering.ts, 0, 0))
->_store : Symbol(Foo._store, Decl(propertyOrdering.ts, 4, 7))
+>_store : Symbol(_store, Decl(propertyOrdering.ts, 4, 7))
       }
       public _store = store; // no repro if this is first line in class body
->_store : Symbol(Foo._store, Decl(propertyOrdering.ts, 4, 7))
+>_store : Symbol(_store, Decl(propertyOrdering.ts, 4, 7))
 
 
       public bar() { return this.store; } // should be an error
->bar : Symbol(Foo.bar, Decl(propertyOrdering.ts, 5, 28))
+>bar : Symbol(bar, Decl(propertyOrdering.ts, 5, 28))
 >this : Symbol(Foo, Decl(propertyOrdering.ts, 0, 0))
 
 }
@@ -29,7 +29,7 @@
 >Bar : Symbol(Bar, Decl(propertyOrdering.ts, 10, 1))
 
       public foo() {
->foo : Symbol(Bar.foo, Decl(propertyOrdering.ts, 12, 11))
+>foo : Symbol(foo, Decl(propertyOrdering.ts, 12, 11))
 
             return this._store.length;   // shouldn't be an error
 >this : Symbol(Bar, Decl(propertyOrdering.ts, 10, 1))
