--- old.genericMappedTypeAsClause.errors.txt
+++ new.genericMappedTypeAsClause.errors.txt
@@= skipped -0, +0 lines =@@
 genericMappedTypeAsClause.ts(11,36): error TS2322: Type 'string' is not assignable to type 'number'.
-genericMappedTypeAsClause.ts(14,11): error TS2322: Type 'number' is not assignable to type 'MappedModel<T>'.
-genericMappedTypeAsClause.ts(15,11): error TS2322: Type 'string' is not assignable to type 'MappedModel<T>'.
+genericMappedTypeAsClause.ts(14,11): error TS2322: Type '42' is not assignable to type 'MappedModel<T>'.
+genericMappedTypeAsClause.ts(15,11): error TS2322: Type '"test"' is not assignable to type 'MappedModel<T>'.
 genericMappedTypeAsClause.ts(16,11): error TS2322: Type 'number[]' is not assignable to type 'MappedModel<T>'.
-genericMappedTypeAsClause.ts(17,11): error TS2322: Type 'boolean' is not assignable to type 'MappedModel<T>'.
+genericMappedTypeAsClause.ts(17,11): error TS2322: Type 'false' is not assignable to type 'MappedModel<T>'.
 genericMappedTypeAsClause.ts(18,34): error TS2353: Object literal may only specify known properties, and 'a' does not exist in type 'MappedModel<T>'.
 genericMappedTypeAsClause.ts(19,11): error TS2322: Type 'undefined' is not assignable to type 'MappedModel<T>'.
 genericMappedTypeAsClause.ts(25,60): error TS2312: An interface can only extend an object type or intersection of object types with statically known members.
@@= skipped -26, +26 lines =@@
     function f1<T extends string>() {
         const x1: MappedModel<T> = 42;  // Error
               ~~
-!!! error TS2322: Type 'number' is not assignable to type 'MappedModel<T>'.
+!!! error TS2322: Type '42' is not assignable to type 'MappedModel<T>'.
         const x2: MappedModel<T> = 'test';  // Error
               ~~
-!!! error TS2322: Type 'string' is not assignable to type 'MappedModel<T>'.
+!!! error TS2322: Type '"test"' is not assignable to type 'MappedModel<T>'.
         const x3: MappedModel<T> = [1, 2, 3];  // Error
               ~~
 !!! error TS2322: Type 'number[]' is not assignable to type 'MappedModel<T>'.
         const x4: MappedModel<T> = false;  // Error
               ~~
-!!! error TS2322: Type 'boolean' is not assignable to type 'MappedModel<T>'.
+!!! error TS2322: Type 'false' is not assignable to type 'MappedModel<T>'.
         const x5: MappedModel<T> = { a: 'bar', b: 42 };  // Error
                                      ~
 !!! error TS2353: Object literal may only specify known properties, and 'a' does not exist in type 'MappedModel<T>'.
