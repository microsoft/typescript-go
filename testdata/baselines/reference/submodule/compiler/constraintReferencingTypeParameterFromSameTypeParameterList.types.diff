--- old.constraintReferencingTypeParameterFromSameTypeParameterList.types
+++ new.constraintReferencingTypeParameterFromSameTypeParameterList.types
@@= skipped -3, +3 lines =@@
 // used to be valid, now an error to do this
 
 interface IComparable<T> {
+>IComparable : IComparable<T>
+>T : T
 }
 function f<T, I extends IComparable<T>>() {
 >f : <T, I extends IComparable<T>>() => void
+>T : T
+>I : I
 }
 
 interface I1<T, U extends I1<T, any>> { // Error, any does not satisfy the constraint I1<T, any>
+>I1 : I1<T, U>
+>T : T
+>U : U
 }
 interface I2<T, U extends T> {
+>I2 : I2<T, U>
+>T : T
+>U : U
 }
 
 interface I4<T, U extends () => T> {
+>I4 : I4<T, U>
+>T : T
+>U : U
 }
 
 // No error
 interface I3<T, U extends string> {
+>I3 : I3<T, U>
+>T : T
+>U : U
+
     method1<X, Y extends T>();
 >method1 : <X, Y extends T>() => any
+>X : X
+>Y : Y
 }
 
 function foo<T, U extends <V extends T>(v: V) => void>() {
 >foo : <T, U extends <V extends T>(v: V) => void>() => void
+>T : T
+>U : U
+>V : V
 >v : V
 }
 
