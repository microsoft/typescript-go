--- old.nonNullableTypes1.js
+++ new.nonNullableTypes1.js
@@= skipped -37, +37 lines =@@


 //// [nonNullableTypes1.js]
-"use strict";
 function f1(x) {
     let y = x || "hello"; // NonNullable<T> | string
 }
@@= skipped -14, +13 lines =@@
     let y = x; // {}
 }
 function f4(obj) {
-    if ((obj === null || obj === void 0 ? void 0 : obj.x) === "hello") {
-        obj; // NonNullable<T>
-    }
-    if (obj === null || obj === void 0 ? void 0 : obj.x) {
-        obj; // NonNullable<T>
-    }
-    if (typeof (obj === null || obj === void 0 ? void 0 : obj.x) === "string") {
+    if (obj?.x === "hello") {
+        obj; // NonNullable<T>
+    }
+    if (obj?.x) {
+        obj; // NonNullable<T>
+    }
+    if (typeof obj?.x === "string") {
         obj; // NonNullable<T>
     }
 }
 class A {
-    constructor() {
-        this.x = "hello";
-    }
+    x = "hello";
     foo() {
-        let zz = this === null || this === void 0 ? void 0 : this.x; // string
+        let zz = this?.x; // string
     }
 }
