--- old.anonClassDeclarationEmitIsAnon.symbols
+++ new.anonClassDeclarationEmitIsAnon.symbols
@@= skipped -8, +8 lines =@@
 >Wrapped : Symbol(Wrapped, Decl(wrapClass.ts, 1, 10))
 
         foo() {
->foo : Symbol(Wrapped.foo, Decl(wrapClass.ts, 1, 26))
+>foo : Symbol(foo, Decl(wrapClass.ts, 1, 26))
 
             return param;
 >param : Symbol(param, Decl(wrapClass.ts, 0, 26))
@@= skipped -25, +25 lines =@@
 >Base : Symbol(Base, Decl(wrapClass.ts, 10, 55))
 
         timestamp = Date.now();
->timestamp : Symbol((Anonymous class).timestamp, Decl(wrapClass.ts, 11, 31))
->Date.now : Symbol(DateConstructor.now, Decl(lib.es5.d.ts, --, --))
+>timestamp : Symbol(timestamp, Decl(wrapClass.ts, 11, 31))
+>Date.now : Symbol(now, Decl(lib.es5.d.ts, --, --))
 >Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --))
->now : Symbol(DateConstructor.now, Decl(lib.es5.d.ts, --, --))
+>now : Symbol(now, Decl(lib.es5.d.ts, --, --))
 
     };
 }
@@= skipped -21, +21 lines =@@
 >User : Symbol(User, Decl(index.ts, 2, 28))
 
     name = '';
->name : Symbol(User.name, Decl(index.ts, 5, 19))
+>name : Symbol(name, Decl(index.ts, 5, 19))
 }
 
 // User that is Timestamped
