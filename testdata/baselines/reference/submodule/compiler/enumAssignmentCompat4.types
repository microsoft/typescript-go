//// [tests/cases/compiler/enumAssignmentCompat4.ts] ////

=== enumAssignmentCompat4.ts ===
namespace M {
>M : typeof M

    export enum MyEnum {
>MyEnum : MyEnum.BAR

        BAR
>BAR : MyEnum.BAR
    }
    export var object2 = {
>object2 : { foo: MyEnum.BAR; }
>{        foo: MyEnum.BAR    } : { foo: MyEnum.BAR; }

        foo: MyEnum.BAR
>foo : MyEnum.BAR
>MyEnum.BAR : MyEnum.BAR
>MyEnum : typeof MyEnum
>BAR : MyEnum.BAR

    };
}

namespace N {
>N : typeof N

    export enum MyEnum {
>MyEnum : MyEnum.FOO

        FOO
>FOO : MyEnum.FOO

    };
    export var object1 = {
>object1 : { foo: MyEnum.FOO; }
>{        foo: MyEnum.FOO    } : { foo: MyEnum.FOO; }

        foo: MyEnum.FOO
>foo : MyEnum.FOO
>MyEnum.FOO : MyEnum.FOO
>MyEnum : typeof MyEnum
>FOO : MyEnum.FOO

    };
}

let broken = [
>broken : ({ foo: MyEnum.BAR; } | { foo: MyEnum.FOO; })[]
>[    N.object1,    M.object2] : ({ foo: MyEnum.BAR; } | { foo: MyEnum.FOO; })[]

    N.object1,
>N.object1 : { foo: MyEnum.FOO; }
>N : typeof N
>object1 : { foo: MyEnum.FOO; }

    M.object2
>M.object2 : { foo: MyEnum.BAR; }
>M : typeof M
>object2 : { foo: MyEnum.BAR; }

];

