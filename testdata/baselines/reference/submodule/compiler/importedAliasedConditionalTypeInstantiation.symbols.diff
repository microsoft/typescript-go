--- old.importedAliasedConditionalTypeInstantiation.symbols
+++ new.importedAliasedConditionalTypeInstantiation.symbols
@@= skipped -119, +119 lines =@@
 >Handler : Symbol(Handler, Decl(index.d.ts, 0, 8))
 
         event(event: HandlerEvent<T>): this;
->event : Symbol(LambdaTester.event, Decl(index.d.ts, 20, 43))
+>event : Symbol(event, Decl(index.d.ts, 20, 43))
 >event : Symbol(event, Decl(index.d.ts, 21, 14))
 >HandlerEvent : Symbol(HandlerEvent, Decl(index.d.ts, 1, 32))
 >T : Symbol(T, Decl(index.d.ts, 20, 23))
@@= skipped -14, +14 lines =@@
 >handler : Symbol(handler, Decl(index.d.ts, 25, 49))
 >T : Symbol(T, Decl(index.d.ts, 25, 30))
 >lambdaTester : Symbol(lambdaTester, Decl(index.d.ts, 23, 1), Decl(index.d.ts, 0, 47))
->LambdaTester : Symbol(lambdaTester.LambdaTester, Decl(index.d.ts, 18, 24))
+>LambdaTester : Symbol(LambdaTester, Decl(index.d.ts, 18, 24))
 >T : Symbol(T, Decl(index.d.ts, 25, 30))
 
 export = lambdaTester;
@@= skipped -16, +16 lines =@@
 type Actual = lambdaTester.Verifier<lambdaTester.HandlerResult<Handler>>;
 >Actual : Symbol(Actual, Decl(index.ts, 1, 37))
 >lambdaTester : Symbol(lambdaTester, Decl(index.ts, 0, 6))
->Verifier : Symbol(lambdaTester.Verifier, Decl(index.d.ts, 11, 5))
+>Verifier : Symbol(Verifier, Decl(index.d.ts, 11, 5))
 >lambdaTester : Symbol(lambdaTester, Decl(index.ts, 0, 6))
->HandlerResult : Symbol(lambdaTester.HandlerResult, Decl(index.d.ts, 2, 92))
+>HandlerResult : Symbol(HandlerResult, Decl(index.d.ts, 2, 92))
 >Handler : Symbol(Handler, Decl(index.ts, 1, 8))
 
 type Expected = lambdaTester.Verifier<lambdaTester.HandlerResult<Handler<any, any>>>;
 >Expected : Symbol(Expected, Decl(index.ts, 3, 73))
 >lambdaTester : Symbol(lambdaTester, Decl(index.ts, 0, 6))
->Verifier : Symbol(lambdaTester.Verifier, Decl(index.d.ts, 11, 5))
+>Verifier : Symbol(Verifier, Decl(index.d.ts, 11, 5))
 >lambdaTester : Symbol(lambdaTester, Decl(index.ts, 0, 6))
->HandlerResult : Symbol(lambdaTester.HandlerResult, Decl(index.d.ts, 2, 92))
+>HandlerResult : Symbol(HandlerResult, Decl(index.d.ts, 2, 92))
 >Handler : Symbol(Handler, Decl(index.ts, 1, 8))
 
