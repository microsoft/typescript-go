--- old.propTypeValidatorInference.types
+++ new.propTypeValidatorInference.types
@@= skipped -89, +89 lines =@@
 >bool : boolean

     shape: {
->shape : { foo: string; bar?: boolean; baz?: any; }
+>shape : { foo: string; bar?: boolean | undefined; baz?: any; }

         foo: string;
 >foo : string
@@= skipped -13, +13 lines =@@

     };
     oneOfType: string | boolean | {
->oneOfType : string | boolean | { foo?: string; bar: number; }
+>oneOfType : string | boolean | { foo?: string | undefined; bar: number; }

         foo?: string;
 >foo : string | undefined
@@= skipped -42, +42 lines =@@
 };

 const arrayOfTypes = [PropTypes.string, PropTypes.bool, PropTypes.shape({
->arrayOfTypes : (PropTypes.Requireable<boolean> | PropTypes.Requireable<string> | PropTypes.Requireable<PropTypes.InferProps<{ foo: PropTypes.Requireable<string>; bar: PropTypes.Validator<number>; }>>)[]
->[PropTypes.string, PropTypes.bool, PropTypes.shape({    foo: PropTypes.string,    bar: PropTypes.number.isRequired})] : (PropTypes.Requireable<boolean> | PropTypes.Requireable<string> | PropTypes.Requireable<PropTypes.InferProps<{ foo: PropTypes.Requireable<string>; bar: PropTypes.Validator<number>; }>>)[]
+>arrayOfTypes : (PropTypes.Requireable<string> | PropTypes.Requireable<boolean> | PropTypes.Requireable<PropTypes.InferProps<{ foo: PropTypes.Requireable<string>; bar: PropTypes.Validator<number>; }>>)[]
+>[PropTypes.string, PropTypes.bool, PropTypes.shape({    foo: PropTypes.string,    bar: PropTypes.number.isRequired})] : (PropTypes.Requireable<string> | PropTypes.Requireable<boolean> | PropTypes.Requireable<PropTypes.InferProps<{ foo: PropTypes.Requireable<string>; bar: PropTypes.Validator<number>; }>>)[]
 >PropTypes.string : PropTypes.Requireable<string>
 >PropTypes : typeof PropTypes
 >string : PropTypes.Requireable<string>
@@= skipped -74, +74 lines =@@
 >PropTypes.oneOfType : <T extends PropTypes.Validator<any>>(types: T[]) => PropTypes.Requireable<NonNullable<PropTypes.InferType<T>>>
 >PropTypes : typeof PropTypes
 >oneOfType : <T extends PropTypes.Validator<any>>(types: T[]) => PropTypes.Requireable<NonNullable<PropTypes.InferType<T>>>
->arrayOfTypes : (PropTypes.Requireable<boolean> | PropTypes.Requireable<string> | PropTypes.Requireable<PropTypes.InferProps<{ foo: PropTypes.Requireable<string>; bar: PropTypes.Validator<number>; }>>)[]
+>arrayOfTypes : (PropTypes.Requireable<string> | PropTypes.Requireable<boolean> | PropTypes.Requireable<PropTypes.InferProps<{ foo: PropTypes.Requireable<string>; bar: PropTypes.Validator<number>; }>>)[]
 >isRequired : PropTypes.Validator<NonNullable<NonNullable<string | boolean | PropTypes.InferProps<{ foo: PropTypes.Requireable<string>; bar: PropTypes.Validator<number>; }>>>>

 };
@@= skipped -49, +49 lines =@@
 >PropTypes.oneOfType : <T extends PropTypes.Validator<any>>(types: T[]) => PropTypes.Requireable<NonNullable<PropTypes.InferType<T>>>
 >PropTypes : typeof PropTypes
 >oneOfType : <T extends PropTypes.Validator<any>>(types: T[]) => PropTypes.Requireable<NonNullable<PropTypes.InferType<T>>>
->arrayOfTypes : (PropTypes.Requireable<boolean> | PropTypes.Requireable<string> | PropTypes.Requireable<PropTypes.InferProps<{ foo: PropTypes.Requireable<string>; bar: PropTypes.Validator<number>; }>>)[]
+>arrayOfTypes : (PropTypes.Requireable<string> | PropTypes.Requireable<boolean> | PropTypes.Requireable<PropTypes.InferProps<{ foo: PropTypes.Requireable<string>; bar: PropTypes.Validator<number>; }>>)[]
 >isRequired : PropTypes.Validator<NonNullable<NonNullable<string | boolean | PropTypes.InferProps<{ foo: PropTypes.Requireable<string>; bar: PropTypes.Validator<number>; }>>>>

 };