--- old.declFileFunctions.js
+++ new.declFileFunctions.js
@@= skipped -96, +96 lines =@@
 b) {
     var d = a;
 }
-function fooWithRestParameters(a) {
-    var rests = [];
-    for (var _i = 1; _i < arguments.length; _i++) {
-        rests[_i - 1] = arguments[_i];
-    }
+function fooWithRestParameters(a, ...rests) {
     return a + rests.join("");
 }
 function fooWithOverloads(a) {
@@= skipped -22, +18 lines =@@
 function fooWithTypeTypePredicateAndGeneric(a) {
     return true;
 }
-function fooWithTypeTypePredicateAndRestParam(a) {
-    var rest = [];
-    for (var _i = 1; _i < arguments.length; _i++) {
-        rest[_i - 1] = arguments[_i];
-    }
+function fooWithTypeTypePredicateAndRestParam(a, ...rest) {
     return true;
 }
 /** This comment should appear for nonExportedFoo*/
@@= skipped -16, +12 lines =@@
 b) {
     var d = a;
 }
-function nonExportedFooWithRestParameters(a) {
-    var rests = [];
-    for (var _i = 1; _i < arguments.length; _i++) {
-        rests[_i - 1] = arguments[_i];
-    }
+function nonExportedFooWithRestParameters(a, ...rests) {
     return a + rests.join("");
 }
 function nonExportedFooWithOverloads(a) {
@@= skipped -20, +16 lines =@@
 b) {
     var d = a;
 }
-function globalfooWithRestParameters(a) {
-    var rests = [];
-    for (var _i = 1; _i < arguments.length; _i++) {
-        rests[_i - 1] = arguments[_i];
-    }
+function globalfooWithRestParameters(a, ...rests) {
     return a + rests.join("");
 }
 function globalfooWithOverloads(a) {