--- old.functionsInClassExpressions.symbols
+++ new.functionsInClassExpressions.symbols
@@= skipped -5, +5 lines =@@
 
     constructor() {
         this.bar++;
->this.bar : Symbol(Foo.bar, Decl(functionsInClassExpressions.ts, 3, 5))
+>this.bar : Symbol(bar, Decl(functionsInClassExpressions.ts, 3, 5))
 >this : Symbol(Foo, Decl(functionsInClassExpressions.ts, 0, 9))
->bar : Symbol(Foo.bar, Decl(functionsInClassExpressions.ts, 3, 5))
+>bar : Symbol(bar, Decl(functionsInClassExpressions.ts, 3, 5))
     }
     bar = 0;
->bar : Symbol(Foo.bar, Decl(functionsInClassExpressions.ts, 3, 5))
+>bar : Symbol(bar, Decl(functionsInClassExpressions.ts, 3, 5))
 
     inc = () => {
->inc : Symbol(Foo.inc, Decl(functionsInClassExpressions.ts, 4, 12))
+>inc : Symbol(inc, Decl(functionsInClassExpressions.ts, 4, 12))
 
         this.bar++;
->this.bar : Symbol(Foo.bar, Decl(functionsInClassExpressions.ts, 3, 5))
+>this.bar : Symbol(bar, Decl(functionsInClassExpressions.ts, 3, 5))
 >this : Symbol(Foo, Decl(functionsInClassExpressions.ts, 0, 9))
->bar : Symbol(Foo.bar, Decl(functionsInClassExpressions.ts, 3, 5))
+>bar : Symbol(bar, Decl(functionsInClassExpressions.ts, 3, 5))
     }
     m() { return this.bar; }
->m : Symbol(Foo.m, Decl(functionsInClassExpressions.ts, 7, 5))
->this.bar : Symbol(Foo.bar, Decl(functionsInClassExpressions.ts, 3, 5))
+>m : Symbol(m, Decl(functionsInClassExpressions.ts, 7, 5))
+>this.bar : Symbol(bar, Decl(functionsInClassExpressions.ts, 3, 5))
 >this : Symbol(Foo, Decl(functionsInClassExpressions.ts, 0, 9))
->bar : Symbol(Foo.bar, Decl(functionsInClassExpressions.ts, 3, 5))
+>bar : Symbol(bar, Decl(functionsInClassExpressions.ts, 3, 5))
 }
