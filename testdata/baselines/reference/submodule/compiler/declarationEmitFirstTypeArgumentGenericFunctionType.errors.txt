error TS2318: Cannot find global type 'Array'.
error TS2318: Cannot find global type 'Function'.
error TS2318: Cannot find global type 'IArguments'.
error TS2318: Cannot find global type 'RegExp'.
error TS2318: Cannot find global type 'String'.
error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
error TS2552: Cannot find name 'Number'. Did you mean 'number'?
error TS2552: Cannot find name 'Object'. Did you mean 'object'?


!!! error TS2318: Cannot find global type 'Array'.
!!! error TS2318: Cannot find global type 'Function'.
!!! error TS2318: Cannot find global type 'IArguments'.
!!! error TS2318: Cannot find global type 'RegExp'.
!!! error TS2318: Cannot find global type 'String'.
!!! error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
!!! error TS2552: Cannot find name 'Number'. Did you mean 'number'?
!!! error TS2552: Cannot find name 'Object'. Did you mean 'object'?
==== declarationEmitFirstTypeArgumentGenericFunctionType.ts (0 errors) ====
    class X<A> {
    }
    var prop11: X< <Tany>() => Tany >; // spaces before the first type argument
    var prop12: X<(<Tany>() => Tany)>; // spaces before the first type argument
    function f1() { // Inferred return type
        return prop11;
    }
    function f2() { // Inferred return type
        return prop12;
    }
    function f3(): X< <Tany>() => Tany> { // written with space before type argument
        return prop11;
    }
    function f4(): X<(<Tany>() => Tany)> { // written type with parenthesis
        return prop12;
    }
    class Y<A, B> {
    }
    var prop2: Y<string[], <Tany>() => Tany>; // No space after second type argument
    var prop2: Y<string[], <Tany>() => Tany>; // space after second type argument
    var prop3: Y< <Tany>() => Tany, <Tany>() => Tany>; // space before first type argument
    var prop4: Y<(<Tany>() => Tany), <Tany>() => Tany>; // parenthesized first type argument
    