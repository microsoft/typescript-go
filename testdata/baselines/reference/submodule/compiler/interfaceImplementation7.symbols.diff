--- old.interfaceImplementation7.symbols
+++ new.interfaceImplementation7.symbols
@@= skipped -2, +2 lines =@@
 === interfaceImplementation7.ts ===
 interface i1{ name(): { s: string; }; }
 >i1 : Symbol(i1, Decl(interfaceImplementation7.ts, 0, 0))
->name : Symbol(i1.name, Decl(interfaceImplementation7.ts, 0, 13))
+>name : Symbol(name, Decl(interfaceImplementation7.ts, 0, 13))
 >s : Symbol(s, Decl(interfaceImplementation7.ts, 0, 23))
 
 interface i2{ name(): { n: number; }; }
 >i2 : Symbol(i2, Decl(interfaceImplementation7.ts, 0, 39))
->name : Symbol(i2.name, Decl(interfaceImplementation7.ts, 1, 13))
+>name : Symbol(name, Decl(interfaceImplementation7.ts, 1, 13))
 >n : Symbol(n, Decl(interfaceImplementation7.ts, 1, 23))
 
 interface i3 extends i1, i2 { }
@@= skipped -17, +17 lines =@@
 >i4 : Symbol(i4, Decl(interfaceImplementation7.ts, 3, 31))
 >i1 : Symbol(i1, Decl(interfaceImplementation7.ts, 0, 0))
 >i2 : Symbol(i2, Decl(interfaceImplementation7.ts, 0, 39))
->name : Symbol(i4.name, Decl(interfaceImplementation7.ts, 4, 29))
+>name : Symbol(name, Decl(interfaceImplementation7.ts, 4, 29))
 >s : Symbol(s, Decl(interfaceImplementation7.ts, 4, 39))
 >n : Symbol(n, Decl(interfaceImplementation7.ts, 4, 50))
 
@@= skipped -9, +9 lines =@@
 >i4 : Symbol(i4, Decl(interfaceImplementation7.ts, 3, 31))
 
     public name(): string { return ""; }
->name : Symbol(C1.name, Decl(interfaceImplementation7.ts, 6, 24))
+>name : Symbol(name, Decl(interfaceImplementation7.ts, 6, 24))
 }
 
