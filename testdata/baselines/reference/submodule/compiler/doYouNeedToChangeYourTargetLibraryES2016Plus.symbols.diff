--- old.doYouNeedToChangeYourTargetLibraryES2016Plus.symbols
+++ new.doYouNeedToChangeYourTargetLibraryES2016Plus.symbols
@@ -14,25 +14,18 @@
 
 const testObjectConstructorValues = Object.values({});
 >testObjectConstructorValues : Symbol(testObjectConstructorValues, Decl(doYouNeedToChangeYourTargetLibraryES2016Plus.ts, 6, 5))
->Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 
 const testObjectConstructorEntries = Object.entries({});
 >testObjectConstructorEntries : Symbol(testObjectConstructorEntries, Decl(doYouNeedToChangeYourTargetLibraryES2016Plus.ts, 7, 5))
->Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 
 const testObjectConstructorGetOwnPropertyDescriptors = Object.getOwnPropertyDescriptors({});
 >testObjectConstructorGetOwnPropertyDescriptors : Symbol(testObjectConstructorGetOwnPropertyDescriptors, Decl(doYouNeedToChangeYourTargetLibraryES2016Plus.ts, 8, 5))
->Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 
 const testIntlFormatToParts = new Intl.DateTimeFormat("en-US").formatToParts();
 >testIntlFormatToParts : Symbol(testIntlFormatToParts, Decl(doYouNeedToChangeYourTargetLibraryES2016Plus.ts, 9, 5))
->Intl.DateTimeFormat : Symbol(Intl.DateTimeFormat, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->Intl : Symbol(Intl, Decl(lib.es5.d.ts, --, --))
->DateTimeFormat : Symbol(Intl.DateTimeFormat, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 
 const testAtomics = Atomics.add(new Uint8Array(0), 0, 0);
 >testAtomics : Symbol(testAtomics, Decl(doYouNeedToChangeYourTargetLibraryES2016Plus.ts, 10, 5))
->Uint8Array : Symbol(Uint8Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
 
 const testSharedArrayBuffer = new SharedArrayBuffer(5);
 >testSharedArrayBuffer : Symbol(testSharedArrayBuffer, Decl(doYouNeedToChangeYourTargetLibraryES2016Plus.ts, 11, 5))
@@ -40,24 +33,18 @@
 // es2018
 const testPromiseFinally = new Promise(() => {}).finally();
 >testPromiseFinally : Symbol(testPromiseFinally, Decl(doYouNeedToChangeYourTargetLibraryES2016Plus.ts, 14, 5))
->Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
 
 const testRegExpMatchArrayGroups = "2019-04-30".match(/(?<year>[0-9]{4})-(?<month>[0-9]{2})-(?<day>[0-9]{2})/g).groups;
 >testRegExpMatchArrayGroups : Symbol(testRegExpMatchArrayGroups, Decl(doYouNeedToChangeYourTargetLibraryES2016Plus.ts, 15, 5))
->"2019-04-30".match : Symbol(String.match, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
->match : Symbol(String.match, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
 
 const testRegExpExecArrayGroups = /(?<year>[0-9]{4})-(?<month>[0-9]{2})-(?<day>[0-9]{2})/g.exec("2019-04-30").groups;
 >testRegExpExecArrayGroups : Symbol(testRegExpExecArrayGroups, Decl(doYouNeedToChangeYourTargetLibraryES2016Plus.ts, 16, 5))
->/(?<year>[0-9]{4})-(?<month>[0-9]{2})-(?<day>[0-9]{2})/g.exec : Symbol(RegExp.exec, Decl(lib.es5.d.ts, --, --))
->exec : Symbol(RegExp.exec, Decl(lib.es5.d.ts, --, --))
 
 const testRegExpDotAll = /foo/g.dotAll;
 >testRegExpDotAll : Symbol(testRegExpDotAll, Decl(doYouNeedToChangeYourTargetLibraryES2016Plus.ts, 17, 5))
 
 const testIntlPluralRules = new Intl.PluralRules("ar-EG").select(0);
 >testIntlPluralRules : Symbol(testIntlPluralRules, Decl(doYouNeedToChangeYourTargetLibraryES2016Plus.ts, 18, 5))
->Intl : Symbol(Intl, Decl(lib.es5.d.ts, --, --))
 
 const testAsyncGenerator: AsyncGenerator<any> = null as any;
 >testAsyncGenerator : Symbol(testAsyncGenerator, Decl(doYouNeedToChangeYourTargetLibraryES2016Plus.ts, 19, 5))
@@ -77,9 +64,6 @@
 
 const testNumberFormatFormatToParts = new Intl.NumberFormat("en-US").formatToParts();
 >testNumberFormatFormatToParts : Symbol(testNumberFormatFormatToParts, Decl(doYouNeedToChangeYourTargetLibraryES2016Plus.ts, 23, 5))
->Intl.NumberFormat : Symbol(Intl.NumberFormat, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->Intl : Symbol(Intl, Decl(lib.es5.d.ts, --, --))
->NumberFormat : Symbol(Intl.NumberFormat, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 
 // es2019
 const testArrayFlat = [].flat();
@@ -90,7 +74,6 @@
 
 const testObjectConstructorFromEntries = Object.fromEntries({});
 >testObjectConstructorFromEntries : Symbol(testObjectConstructorFromEntries, Decl(doYouNeedToChangeYourTargetLibraryES2016Plus.ts, 28, 5))
->Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 
 const testStringTrimStart = "".trimStart();
 >testStringTrimStart : Symbol(testStringTrimStart, Decl(doYouNeedToChangeYourTargetLibraryES2016Plus.ts, 29, 5))
@@ -106,19 +89,16 @@
 
 const testSymbolDescription = Symbol("foo").description;
 >testSymbolDescription : Symbol(testSymbolDescription, Decl(doYouNeedToChangeYourTargetLibraryES2016Plus.ts, 33, 5))
->Symbol : Symbol(Symbol, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
 
 // es2020
 const testPromiseAllSettled = Promise.allSettled([]);
 >testPromiseAllSettled : Symbol(testPromiseAllSettled, Decl(doYouNeedToChangeYourTargetLibraryES2016Plus.ts, 36, 5))
->Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
 
 const testStringMatchAll = "".matchAll();
 >testStringMatchAll : Symbol(testStringMatchAll, Decl(doYouNeedToChangeYourTargetLibraryES2016Plus.ts, 37, 5))
 
 const testRegExpMatchAll = /matchAll/g[Symbol.matchAll]("matchAll");
 >testRegExpMatchAll : Symbol(testRegExpMatchAll, Decl(doYouNeedToChangeYourTargetLibraryES2016Plus.ts, 38, 5))
->Symbol : Symbol(Symbol, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
 
 const testBigInt = BigInt(123);
 >testBigInt : Symbol(testBigInt, Decl(doYouNeedToChangeYourTargetLibraryES2016Plus.ts, 39, 5))
@@ -126,7 +106,6 @@
 // es2021
 const testPromiseAny = Promise.any([]);
 >testPromiseAny : Symbol(testPromiseAny, Decl(doYouNeedToChangeYourTargetLibraryES2016Plus.ts, 42, 5))
->Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
 
 const testStringReplaceAll = "".replaceAll();
 >testStringReplaceAll : Symbol(testStringReplaceAll, Decl(doYouNeedToChangeYourTargetLibraryES2016Plus.ts, 43, 5))
