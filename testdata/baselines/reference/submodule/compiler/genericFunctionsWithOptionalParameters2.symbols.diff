--- old.genericFunctionsWithOptionalParameters2.symbols
+++ new.genericFunctionsWithOptionalParameters2.symbols
@@= skipped -4, +4 lines =@@
 >Utils : Symbol(Utils, Decl(genericFunctionsWithOptionalParameters2.ts, 0, 0))
 
    fold<T, S>(c: Array<T>, folder?: (s: S, t: T) => T, init?: S): T;
->fold : Symbol(Utils.fold, Decl(genericFunctionsWithOptionalParameters2.ts, 0, 17))
+>fold : Symbol(fold, Decl(genericFunctionsWithOptionalParameters2.ts, 0, 17))
 >T : Symbol(T, Decl(genericFunctionsWithOptionalParameters2.ts, 1, 8))
 >S : Symbol(S, Decl(genericFunctionsWithOptionalParameters2.ts, 1, 10))
 >c : Symbol(c, Decl(genericFunctionsWithOptionalParameters2.ts, 1, 14))
@@= skipped -22, +22 lines =@@
 >Utils : Symbol(Utils, Decl(genericFunctionsWithOptionalParameters2.ts, 0, 0))
 
 utils.fold(); // error
->utils.fold : Symbol(Utils.fold, Decl(genericFunctionsWithOptionalParameters2.ts, 0, 17))
+>utils.fold : Symbol(fold, Decl(genericFunctionsWithOptionalParameters2.ts, 0, 17))
 >utils : Symbol(utils, Decl(genericFunctionsWithOptionalParameters2.ts, 4, 3))
->fold : Symbol(Utils.fold, Decl(genericFunctionsWithOptionalParameters2.ts, 0, 17))
+>fold : Symbol(fold, Decl(genericFunctionsWithOptionalParameters2.ts, 0, 17))
 
 utils.fold(null); // no error
->utils.fold : Symbol(Utils.fold, Decl(genericFunctionsWithOptionalParameters2.ts, 0, 17))
+>utils.fold : Symbol(fold, Decl(genericFunctionsWithOptionalParameters2.ts, 0, 17))
 >utils : Symbol(utils, Decl(genericFunctionsWithOptionalParameters2.ts, 4, 3))
->fold : Symbol(Utils.fold, Decl(genericFunctionsWithOptionalParameters2.ts, 0, 17))
+>fold : Symbol(fold, Decl(genericFunctionsWithOptionalParameters2.ts, 0, 17))
 
 utils.fold(null, null); // no error
->utils.fold : Symbol(Utils.fold, Decl(genericFunctionsWithOptionalParameters2.ts, 0, 17))
+>utils.fold : Symbol(fold, Decl(genericFunctionsWithOptionalParameters2.ts, 0, 17))
 >utils : Symbol(utils, Decl(genericFunctionsWithOptionalParameters2.ts, 4, 3))
->fold : Symbol(Utils.fold, Decl(genericFunctionsWithOptionalParameters2.ts, 0, 17))
+>fold : Symbol(fold, Decl(genericFunctionsWithOptionalParameters2.ts, 0, 17))
 
 utils.fold(null, null, null); // error: Unable to invoke type with no call signatures
->utils.fold : Symbol(Utils.fold, Decl(genericFunctionsWithOptionalParameters2.ts, 0, 17))
+>utils.fold : Symbol(fold, Decl(genericFunctionsWithOptionalParameters2.ts, 0, 17))
 >utils : Symbol(utils, Decl(genericFunctionsWithOptionalParameters2.ts, 4, 3))
->fold : Symbol(Utils.fold, Decl(genericFunctionsWithOptionalParameters2.ts, 0, 17))
+>fold : Symbol(fold, Decl(genericFunctionsWithOptionalParameters2.ts, 0, 17))
 
