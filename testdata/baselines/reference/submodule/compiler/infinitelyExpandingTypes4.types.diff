--- old.infinitelyExpandingTypes4.types
+++ new.infinitelyExpandingTypes4.types
@@= skipped -1, +1 lines =@@
 
 === infinitelyExpandingTypes4.ts ===
 interface Query<T> {
+>Query : Query<T>
+>T : T
+
     // ...
     groupBy<K>(keySelector: (item: T) => K): Query<Grouping<K, T>>;
 >groupBy : <K>(keySelector: (item: T) => K) => Query<Grouping<K, T>>
+>K : K
 >keySelector : (item: T) => K
 >item : T
 
@@= skipped -10, +14 lines =@@
 }
 
 interface QueryEnumerator<T> {
+>QueryEnumerator : QueryEnumerator<T>
+>T : T
+
     // ...
     groupBy<K>(keySelector: (item: T) => K): QueryEnumerator<Grouping<K, T>>;
 >groupBy : <K>(keySelector: (item: T) => K) => QueryEnumerator<Grouping<K, T>>
+>K : K
 >keySelector : (item: T) => K
 >item : T
 
@@= skipped -10, +14 lines =@@
 }
 
 interface Grouping<K, T> extends Query<T> {
+>Grouping : Grouping<K, T>
+>K : K
+>T : T
+
     key(): K;
 >key : () => K
 }
