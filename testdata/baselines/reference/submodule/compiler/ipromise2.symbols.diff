--- old.ipromise2.symbols
+++ new.ipromise2.symbols
@@ -10,7 +10,7 @@
 >T : Symbol(T, Decl(ipromise2.ts, 1, 30))
 
         then<U>(success?: (value: T) => IPromise<U>, error?: (error: any) => IPromise<U>, progress?: (progress: any) => void ): Windows.Foundation.IPromise<U>;
->then : Symbol(IPromise.then, Decl(ipromise2.ts, 1, 34), Decl(ipromise2.ts, 2, 159), Decl(ipromise2.ts, 3, 149), Decl(ipromise2.ts, 4, 149))
+>then : Symbol(then, Decl(ipromise2.ts, 1, 34), Decl(ipromise2.ts, 2, 159), Decl(ipromise2.ts, 3, 149), Decl(ipromise2.ts, 4, 149))
 >U : Symbol(U, Decl(ipromise2.ts, 2, 13))
 >success : Symbol(success, Decl(ipromise2.ts, 2, 16))
 >value : Symbol(value, Decl(ipromise2.ts, 2, 27))
@@ -29,7 +29,7 @@
 >U : Symbol(U, Decl(ipromise2.ts, 2, 13))
 
         then<U>(success?: (value: T) => IPromise<U>, error?: (error: any) => U, progress?: (progress: any) => void ): Windows.Foundation.IPromise<U>;
->then : Symbol(IPromise.then, Decl(ipromise2.ts, 1, 34), Decl(ipromise2.ts, 2, 159), Decl(ipromise2.ts, 3, 149), Decl(ipromise2.ts, 4, 149))
+>then : Symbol(then, Decl(ipromise2.ts, 1, 34), Decl(ipromise2.ts, 2, 159), Decl(ipromise2.ts, 3, 149), Decl(ipromise2.ts, 4, 149))
 >U : Symbol(U, Decl(ipromise2.ts, 3, 13))
 >success : Symbol(success, Decl(ipromise2.ts, 3, 16))
 >value : Symbol(value, Decl(ipromise2.ts, 3, 27))
@@ -47,7 +47,7 @@
 >U : Symbol(U, Decl(ipromise2.ts, 3, 13))
 
         then<U>(success?: (value: T) => U, error?: (error: any) => IPromise<U>, progress?: (progress: any) => void ): Windows.Foundation.IPromise<U>;
->then : Symbol(IPromise.then, Decl(ipromise2.ts, 1, 34), Decl(ipromise2.ts, 2, 159), Decl(ipromise2.ts, 3, 149), Decl(ipromise2.ts, 4, 149))
+>then : Symbol(then, Decl(ipromise2.ts, 1, 34), Decl(ipromise2.ts, 2, 159), Decl(ipromise2.ts, 3, 149), Decl(ipromise2.ts, 4, 149))
 >U : Symbol(U, Decl(ipromise2.ts, 4, 13))
 >success : Symbol(success, Decl(ipromise2.ts, 4, 16))
 >value : Symbol(value, Decl(ipromise2.ts, 4, 27))
@@ -65,7 +65,7 @@
 >U : Symbol(U, Decl(ipromise2.ts, 4, 13))
 
         then<U>(success?: (value: T) => U, error?: (error: any) => U, progress?: (progress: any) => void ): Windows.Foundation.IPromise<U>;
->then : Symbol(IPromise.then, Decl(ipromise2.ts, 1, 34), Decl(ipromise2.ts, 2, 159), Decl(ipromise2.ts, 3, 149), Decl(ipromise2.ts, 4, 149))
+>then : Symbol(then, Decl(ipromise2.ts, 1, 34), Decl(ipromise2.ts, 2, 159), Decl(ipromise2.ts, 3, 149), Decl(ipromise2.ts, 4, 149))
 >U : Symbol(U, Decl(ipromise2.ts, 5, 13))
 >success : Symbol(success, Decl(ipromise2.ts, 5, 16))
 >value : Symbol(value, Decl(ipromise2.ts, 5, 27))
@@ -82,7 +82,7 @@
 >U : Symbol(U, Decl(ipromise2.ts, 5, 13))
 
         done<U>(success?: (value: T) => any, error?: (error: any) => any, progress?: (progress: any) => void ): void;
->done : Symbol(IPromise.done, Decl(ipromise2.ts, 5, 139))
+>done : Symbol(done, Decl(ipromise2.ts, 5, 139))
 >U : Symbol(U, Decl(ipromise2.ts, 6, 13))
 >success : Symbol(success, Decl(ipromise2.ts, 6, 16))
 >value : Symbol(value, Decl(ipromise2.ts, 6, 27))
@@ -93,7 +93,7 @@
 >progress : Symbol(progress, Decl(ipromise2.ts, 6, 86))
 
         value: T;
->value : Symbol(IPromise.value, Decl(ipromise2.ts, 6, 117))
+>value : Symbol(value, Decl(ipromise2.ts, 6, 117))
 >T : Symbol(T, Decl(ipromise2.ts, 1, 30))
     }
 }
@@ -101,14 +101,14 @@
 var p: Windows.Foundation.IPromise<string>;
 >p : Symbol(p, Decl(ipromise2.ts, 11, 3))
 >Windows : Symbol(Windows, Decl(ipromise2.ts, 0, 0))
->Foundation : Symbol(Windows.Foundation, Decl(ipromise2.ts, 0, 23))
->IPromise : Symbol(Windows.Foundation.IPromise, Decl(ipromise2.ts, 0, 35))
+>Foundation : Symbol(Foundation, Decl(ipromise2.ts, 0, 23))
+>IPromise : Symbol(IPromise, Decl(ipromise2.ts, 0, 35))
 
 var p2 = p.then(function (s) {
 >p2 : Symbol(p2, Decl(ipromise2.ts, 13, 3))
->p.then : Symbol(Windows.Foundation.IPromise.then, Decl(ipromise2.ts, 1, 34), Decl(ipromise2.ts, 2, 159), Decl(ipromise2.ts, 3, 149), Decl(ipromise2.ts, 4, 149))
+>p.then : Symbol(then, Decl(ipromise2.ts, 1, 34), Decl(ipromise2.ts, 2, 159), Decl(ipromise2.ts, 3, 149), Decl(ipromise2.ts, 4, 149))
 >p : Symbol(p, Decl(ipromise2.ts, 11, 3))
->then : Symbol(Windows.Foundation.IPromise.then, Decl(ipromise2.ts, 1, 34), Decl(ipromise2.ts, 2, 159), Decl(ipromise2.ts, 3, 149), Decl(ipromise2.ts, 4, 149))
+>then : Symbol(then, Decl(ipromise2.ts, 1, 34), Decl(ipromise2.ts, 2, 159), Decl(ipromise2.ts, 3, 149), Decl(ipromise2.ts, 4, 149))
 >s : Symbol(s, Decl(ipromise2.ts, 13, 26))
 
     return 34;
@@ -117,8 +117,8 @@
 
 var x: number = p2.value;
 >x : Symbol(x, Decl(ipromise2.ts, 18, 3))
->p2.value : Symbol(Windows.Foundation.IPromise.value, Decl(ipromise2.ts, 6, 117))
+>p2.value : Symbol(value, Decl(ipromise2.ts, 6, 117))
 >p2 : Symbol(p2, Decl(ipromise2.ts, 13, 3))
->value : Symbol(Windows.Foundation.IPromise.value, Decl(ipromise2.ts, 6, 117))
+>value : Symbol(value, Decl(ipromise2.ts, 6, 117))
 
 
