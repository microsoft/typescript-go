--- old.indexSignatureAndMappedType.types
+++ new.indexSignatureAndMappedType.types
@@= skipped -5, +5 lines =@@
 
 function f1<T, K extends string>(x: { [key: string]: T }, y: Record<K, T>) {
 >f1 : <T, K extends string>(x: { [key: string]: T; }, y: Record<K, T>) => void
+>T : T
+>K : K
 >x : { [key: string]: T; }
 >key : string
 >y : Record<K, T>
@@= skipped -17, +19 lines =@@
 
 function f2<T>(x: { [key: string]: T }, y: Record<string, T>) {
 >f2 : <T>(x: { [key: string]: T; }, y: Record<string, T>) => void
+>T : T
 >x : { [key: string]: T; }
 >key : string
 >y : Record<string, T>
@@= skipped -17, +18 lines =@@
 
 function f3<T, U, K extends string>(x: { [key: string]: T }, y: Record<K, U>) {
 >f3 : <T, U, K extends string>(x: { [key: string]: T; }, y: Record<K, U>) => void
+>T : T
+>U : U
+>K : K
 >x : { [key: string]: T; }
 >key : string
 >y : Record<K, U>
@@= skipped -26, +29 lines =@@
 };
 
 interface IBaseEntity {
+>IBaseEntity : IBaseEntity
+
     name: string;
 >name : string
 
@@= skipped -8, +10 lines =@@
 }
 
 interface IEntity<T extends string> extends IBaseEntity {
+>IEntity : IEntity<T>
+>T : T
+
     properties: Record<T, string>;
 >properties : Record<T, string>
 }
