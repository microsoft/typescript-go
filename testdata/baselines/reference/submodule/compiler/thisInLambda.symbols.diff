--- old.thisInLambda.symbols
+++ new.thisInLambda.symbols
@@= skipped -4, +4 lines =@@
 >Foo : Symbol(Foo, Decl(thisInLambda.ts, 0, 0))
 
     x = "hello";
->x : Symbol(Foo.x, Decl(thisInLambda.ts, 0, 11))
+>x : Symbol(x, Decl(thisInLambda.ts, 0, 11))
 
     bar() {
->bar : Symbol(Foo.bar, Decl(thisInLambda.ts, 1, 16))
+>bar : Symbol(bar, Decl(thisInLambda.ts, 1, 16))
 
         this.x; // 'this' is type 'Foo'
->this.x : Symbol(Foo.x, Decl(thisInLambda.ts, 0, 11))
+>this.x : Symbol(x, Decl(thisInLambda.ts, 0, 11))
 >this : Symbol(Foo, Decl(thisInLambda.ts, 0, 0))
->x : Symbol(Foo.x, Decl(thisInLambda.ts, 0, 11))
+>x : Symbol(x, Decl(thisInLambda.ts, 0, 11))
 
         var f = () => this.x; // 'this' should be type 'Foo' as well
 >f : Symbol(f, Decl(thisInLambda.ts, 4, 11))
->this.x : Symbol(Foo.x, Decl(thisInLambda.ts, 0, 11))
+>this.x : Symbol(x, Decl(thisInLambda.ts, 0, 11))
 >this : Symbol(Foo, Decl(thisInLambda.ts, 0, 0))
->x : Symbol(Foo.x, Decl(thisInLambda.ts, 0, 11))
+>x : Symbol(x, Decl(thisInLambda.ts, 0, 11))
     }
 }
 
