--- old.constraintCheckInGenericBaseTypeReference.symbols
+++ new.constraintCheckInGenericBaseTypeReference.symbols
@@ -6,7 +6,7 @@
 >Constraint : Symbol(Constraint, Decl(constraintCheckInGenericBaseTypeReference.ts, 0, 0))
 
     public method() { }
->method : Symbol(Constraint.method, Decl(constraintCheckInGenericBaseTypeReference.ts, 1, 18))
+>method : Symbol(method, Decl(constraintCheckInGenericBaseTypeReference.ts, 1, 18))
 }
 class GenericBase<T extends Constraint> {
 >GenericBase : Symbol(GenericBase, Decl(constraintCheckInGenericBaseTypeReference.ts, 3, 1))
@@ -14,7 +14,7 @@
 >Constraint : Symbol(Constraint, Decl(constraintCheckInGenericBaseTypeReference.ts, 0, 0))
 
     public items: any;
->items : Symbol(GenericBase.items, Decl(constraintCheckInGenericBaseTypeReference.ts, 4, 41))
+>items : Symbol(items, Decl(constraintCheckInGenericBaseTypeReference.ts, 4, 41))
 }
 class Derived extends GenericBase<TypeArg> {
 >Derived : Symbol(Derived, Decl(constraintCheckInGenericBaseTypeReference.ts, 6, 1))
@@ -26,14 +26,14 @@
 >TypeArg : Symbol(TypeArg, Decl(constraintCheckInGenericBaseTypeReference.ts, 9, 1))
 
     public method() {
->method : Symbol(TypeArg.method, Decl(constraintCheckInGenericBaseTypeReference.ts, 10, 15))
+>method : Symbol(method, Decl(constraintCheckInGenericBaseTypeReference.ts, 10, 15))
 
         Container.People.items;
->Container.People.items : Symbol(GenericBase.items, Decl(constraintCheckInGenericBaseTypeReference.ts, 4, 41))
->Container.People : Symbol(Container.People, Decl(constraintCheckInGenericBaseTypeReference.ts, 16, 17))
+>Container.People.items : Symbol(items, Decl(constraintCheckInGenericBaseTypeReference.ts, 4, 41))
+>Container.People : Symbol(People, Decl(constraintCheckInGenericBaseTypeReference.ts, 16, 17))
 >Container : Symbol(Container, Decl(constraintCheckInGenericBaseTypeReference.ts, 14, 1))
->People : Symbol(Container.People, Decl(constraintCheckInGenericBaseTypeReference.ts, 16, 17))
->items : Symbol(GenericBase.items, Decl(constraintCheckInGenericBaseTypeReference.ts, 4, 41))
+>People : Symbol(People, Decl(constraintCheckInGenericBaseTypeReference.ts, 16, 17))
+>items : Symbol(items, Decl(constraintCheckInGenericBaseTypeReference.ts, 4, 41))
     }
 }
 
@@ -41,6 +41,6 @@
 >Container : Symbol(Container, Decl(constraintCheckInGenericBaseTypeReference.ts, 14, 1))
 
     public static People: Derived
->People : Symbol(Container.People, Decl(constraintCheckInGenericBaseTypeReference.ts, 16, 17))
+>People : Symbol(People, Decl(constraintCheckInGenericBaseTypeReference.ts, 16, 17))
 >Derived : Symbol(Derived, Decl(constraintCheckInGenericBaseTypeReference.ts, 6, 1))
 }
