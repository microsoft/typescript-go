--- old.augmentedTypesEnum.types
+++ new.augmentedTypesEnum.types
@@= skipped -2, +2 lines =@@
 === augmentedTypesEnum.ts ===
 // enum then var
 enum e1111 { One } // error
->e1111 : e1111
+>e1111 : e1111.One
 >One : e1111.One
 
 var e1111 = 1; // error
@@= skipped -9, +9 lines =@@
 
 // enum then function
 enum e2 { One } // error
->e2 : e2
+>e2 : e2.One
 >One : e2.One
 
 function e2() { } // error
 >e2 : () => void
 
 enum e3 { One } // error
->e3 : e3
+>e3 : e3.One
 >One : e3.One
 
 var e3 = () => { } // error
@@= skipped -16, +16 lines =@@
 
 // enum then class
 enum e4 { One } // error
->e4 : e4
+>e4 : e4.One
 >One : e4.One
 
 class e4 { public foo() { } } // error
@@= skipped -9, +9 lines =@@
 
 // enum then enum
 enum e5 { One }
->e5 : e5
+>e5 : e5.One
 >One : e5.One
 
 enum e5 { Two } // error
->e5 : e5
+>e5 : e5.One
 >Two : e5.One
 
 enum e5a { One } // error
->e5a : e5a
+>e5a : e5a.One
 >One : e5a.One
 
 enum e5a { One } // error
->e5a : e5a
+>e5a : e5a.One
 >One : e5a.One
 
 // enum then internal module
 enum e6 { One } 
->e6 : e6
+>e6 : e6.One
 >One : e6.One
 
 module e6 { } // ok
+>e6 : typeof e6
 
 enum e6a { One }
->e6a : e6a
+>e6a : e6a.One
 >One : e6a.One
 
 module e6a { var y = 2; } // should be error
@@= skipped -32, +33 lines =@@
 >2 : 2
 
 enum e6b { One }
->e6b : e6b
+>e6b : e6b.One
 >One : e6b.One
 
 module e6b { export var y = 2; } // should be error
