--- old.protoAssignment.symbols
+++ new.protoAssignment.symbols
@@= skipped -4, +4 lines =@@
 >Number : Symbol(Number, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(protoAssignment.ts, 0, 0))
 
     compareTo(other: number);
->compareTo : Symbol(Number.compareTo, Decl(protoAssignment.ts, 0, 45))
+>compareTo : Symbol(compareTo, Decl(protoAssignment.ts, 0, 45))
 >other : Symbol(other, Decl(protoAssignment.ts, 2, 14))
 
 }
 
 Number.prototype.compareTo = function (other: number) {
->Number.prototype.compareTo : Symbol(Number.compareTo, Decl(protoAssignment.ts, 0, 45))
->Number.prototype : Symbol(NumberConstructor.prototype, Decl(lib.es5.d.ts, --, --))
+>Number.prototype.compareTo : Symbol(compareTo, Decl(protoAssignment.ts, 0, 45))
+>Number.prototype : Symbol(prototype, Decl(lib.es5.d.ts, --, --))
 >Number : Symbol(Number, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(protoAssignment.ts, 0, 0))
->prototype : Symbol(NumberConstructor.prototype, Decl(lib.es5.d.ts, --, --))
->compareTo : Symbol(Number.compareTo, Decl(protoAssignment.ts, 0, 45))
+>prototype : Symbol(prototype, Decl(lib.es5.d.ts, --, --))
+>compareTo : Symbol(compareTo, Decl(protoAssignment.ts, 0, 45))
 >other : Symbol(other, Decl(protoAssignment.ts, 6, 39))
 
    return this.valueOf() == other;
