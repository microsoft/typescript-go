//// [tests/cases/compiler/superPropertyAccess1.ts] ////

=== superPropertyAccess1.ts ===
class C {
>C : Symbol(C, Decl(superPropertyAccess1.ts, 0, 0))

    public foo() { }
>foo : Symbol(foo, Decl(superPropertyAccess1.ts, 0, 9))

    public get x() {
>x : Symbol(x, Decl(superPropertyAccess1.ts, 1, 20))

        return 1;
    }

    public bar() { }
>bar : Symbol(bar, Decl(superPropertyAccess1.ts, 4, 5))
}

class D extends C {
>D : Symbol(D, Decl(superPropertyAccess1.ts, 7, 1))
>C : Symbol(C, Decl(superPropertyAccess1.ts, 0, 0))

    public foo() {
>foo : Symbol(foo, Decl(superPropertyAccess1.ts, 9, 19))

        super.bar();
>super.bar : Symbol(bar, Decl(superPropertyAccess1.ts, 4, 5))
>super : Symbol(C, Decl(superPropertyAccess1.ts, 0, 0))
>bar : Symbol(bar, Decl(superPropertyAccess1.ts, 4, 5))

        super.x;  // error
>super.x : Symbol(x, Decl(superPropertyAccess1.ts, 1, 20))
>super : Symbol(C, Decl(superPropertyAccess1.ts, 0, 0))
>x : Symbol(x, Decl(superPropertyAccess1.ts, 1, 20))
    }    

    constructor() {
        super();
>super : Symbol(C, Decl(superPropertyAccess1.ts, 0, 0))

        super.bar();
>super.bar : Symbol(bar, Decl(superPropertyAccess1.ts, 4, 5))
>super : Symbol(C, Decl(superPropertyAccess1.ts, 0, 0))
>bar : Symbol(bar, Decl(superPropertyAccess1.ts, 4, 5))

        super.x;  // error
>super.x : Symbol(x, Decl(superPropertyAccess1.ts, 1, 20))
>super : Symbol(C, Decl(superPropertyAccess1.ts, 0, 0))
>x : Symbol(x, Decl(superPropertyAccess1.ts, 1, 20))
    }

    public get y() {
>y : Symbol(y, Decl(superPropertyAccess1.ts, 19, 5))

        super.bar();
>super.bar : Symbol(bar, Decl(superPropertyAccess1.ts, 4, 5))
>super : Symbol(C, Decl(superPropertyAccess1.ts, 0, 0))
>bar : Symbol(bar, Decl(superPropertyAccess1.ts, 4, 5))

        super.x; // error
>super.x : Symbol(x, Decl(superPropertyAccess1.ts, 1, 20))
>super : Symbol(C, Decl(superPropertyAccess1.ts, 0, 0))
>x : Symbol(x, Decl(superPropertyAccess1.ts, 1, 20))

        return 1;
    }
}
