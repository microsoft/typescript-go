--- old.isolatedDeclarationErrorsClassesExpressions.types
+++ new.isolatedDeclarationErrorsClassesExpressions.types
@@= skipped -12, +12 lines =@@
 
 function id<T extends new (...a: any[]) => any>(cls: T) {
 >id : <T extends new (...a: any[]) => any>(cls: T) => T
+>T : T
 >a : any[]
 >cls : T
 
@@= skipped -22, +23 lines =@@
 }
 
 export const classes = [class {}, class{}] as const
->classes : readonly [typeof (Anonymous class), typeof (Anonymous class)]
->[class {}, class{}] as const : readonly [typeof (Anonymous class), typeof (Anonymous class)]
->[class {}, class{}] : readonly [typeof (Anonymous class), typeof (Anonymous class)]
+>classes : [typeof (Anonymous class), typeof (Anonymous class)]
+>[class {}, class{}] as const : [typeof (Anonymous class), typeof (Anonymous class)]
+>[class {}, class{}] : [typeof (Anonymous class), typeof (Anonymous class)]
 >class {} : typeof (Anonymous class)
 >class{} : typeof (Anonymous class)
 
