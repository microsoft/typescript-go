--- old.genericCallbacksAndClassHierarchy.types
+++ new.genericCallbacksAndClassHierarchy.types
@@= skipped -4, +4 lines =@@
 >M : typeof M
 
     export interface I<T> {
+>I : I<T>
+>T : T
+
         subscribe(callback: (newValue: T) => void ): any;
 >subscribe : (callback: (newValue: T) => void) => any
 >callback : (newValue: T) => void
@@= skipped -7, +10 lines =@@
     }
     export class C1<T> {
 >C1 : C1<T>
+>T : T
 
         public value: I<T>;
 >value : I<T>
     }
     export class A<T> {
 >A : A<T>
+>T : T
 
         public dummy: any;
 >dummy : any
     }
     export class B<T> extends C1<A<T>> { }
 >B : B<T>
+>T : T
 >C1 : C1<A<T>>
 
     export class D<T> {
 >D : D<T>
+>T : T
 
         _subscribe(viewModel: B<T>): void {
 >_subscribe : (viewModel: B<T>) => void
