--- old.reverseMappedTypeIntersectionConstraint.errors.txt
+++ new.reverseMappedTypeIntersectionConstraint.errors.txt
@@= skipped -0, +0 lines =@@
 reverseMappedTypeIntersectionConstraint.ts(19,7): error TS2322: Type '"bar"' is not assignable to type '"foo"'.
-reverseMappedTypeIntersectionConstraint.ts(32,3): error TS2353: Object literal may only specify known properties, and 'extra' does not exist in type '{ entry: "foo"; states: { a: { entry: "foo"; }; }; }'.
-reverseMappedTypeIntersectionConstraint.ts(43,3): error TS2353: Object literal may only specify known properties, and 'z' does not exist in type '{ x: number; y: "y"; }'.
-reverseMappedTypeIntersectionConstraint.ts(59,7): error TS2322: Type '{ [K in keyof T & keyof Stuff]: T[K]; }' is not assignable to type 'T'.
-  '{ [K in keyof T & keyof Stuff]: T[K]; }' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'Stuff'.
-reverseMappedTypeIntersectionConstraint.ts(63,49): error TS2353: Object literal may only specify known properties, and 'extra' does not exist in type '{ field: 1; anotherField: "a"; }'.
-reverseMappedTypeIntersectionConstraint.ts(69,7): error TS2322: Type '{ [K in keyof T & keyof Stuff]: T[K]; }[]' is not assignable to type 'T[]'.
-  Type '{ [K in keyof T & keyof Stuff]: T[K]; }' is not assignable to type 'T'.
-    '{ [K in keyof T & keyof Stuff]: T[K]; }' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'Stuff'.
-reverseMappedTypeIntersectionConstraint.ts(74,36): error TS2353: Object literal may only specify known properties, and 'extra' does not exist in type '{ field: 1; anotherField: "a"; }'.
-reverseMappedTypeIntersectionConstraint.ts(87,12): error TS2353: Object literal may only specify known properties, and 'y' does not exist in type '{ x: 1; }'.
-reverseMappedTypeIntersectionConstraint.ts(98,12): error TS2353: Object literal may only specify known properties, and 'z' does not exist in type '{ x: 1; }'.
-reverseMappedTypeIntersectionConstraint.ts(100,22): error TS2353: Object literal may only specify known properties, and 'z' does not exist in type '{ x: 1; y: "foo"; }'.
-reverseMappedTypeIntersectionConstraint.ts(113,67): error TS2353: Object literal may only specify known properties, and 'extra' does not exist in type '{ prop: "foo"; nested: { prop: string; }; }'.
+reverseMappedTypeIntersectionConstraint.ts(32,3): error TS2353: Object literal may only specify known properties, and 'extra' does not exist in type '{ entry: "foo", states: { a: { entry: "foo" } } }'.
+reverseMappedTypeIntersectionConstraint.ts(43,3): error TS2353: Object literal may only specify known properties, and 'z' does not exist in type '{ x: number, y: "y" }'.
+reverseMappedTypeIntersectionConstraint.ts(59,7): error TS2322: Type '{ [K in keyof T & (keyof Stuff)]: T[K] }' is not assignable to type 'T'.
+  '{ [K in keyof T & (keyof Stuff)]: T[K] }' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'Stuff'.
+reverseMappedTypeIntersectionConstraint.ts(63,49): error TS2353: Object literal may only specify known properties, and 'extra' does not exist in type '{ anotherField: "a", field: 1 }'.
+reverseMappedTypeIntersectionConstraint.ts(69,7): error TS2322: Type '{ [K in keyof T & (keyof Stuff)]: T[K] }[]' is not assignable to type 'T[]'.
+  Type '{ [K in keyof T & (keyof Stuff)]: T[K] }' is not assignable to type 'T'.
+    '{ [K in keyof T & (keyof Stuff)]: T[K] }' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'Stuff'.
+reverseMappedTypeIntersectionConstraint.ts(74,36): error TS2353: Object literal may only specify known properties, and 'extra' does not exist in type '{ anotherField: "a", field: 1 }'.
+reverseMappedTypeIntersectionConstraint.ts(87,12): error TS2353: Object literal may only specify known properties, and 'y' does not exist in type '{ x: 1 }'.
+reverseMappedTypeIntersectionConstraint.ts(98,12): error TS2353: Object literal may only specify known properties, and 'z' does not exist in type '{ x: 1 }'.
+reverseMappedTypeIntersectionConstraint.ts(100,22): error TS2353: Object literal may only specify known properties, and 'z' does not exist in type '{ x: 1, y: "foo" }'.
+reverseMappedTypeIntersectionConstraint.ts(113,67): error TS2353: Object literal may only specify known properties, and 'extra' does not exist in type '{ nested: { prop: string }, prop: "foo" }'.
 reverseMappedTypeIntersectionConstraint.ts(152,21): error TS2585: 'Promise' only refers to a type, but is being used as a value here. Do you need to change your target library? Try changing the 'lib' compiler option to es2015 or later.
-reverseMappedTypeIntersectionConstraint.ts(164,3): error TS2353: Object literal may only specify known properties, and 'extra' does not exist in type '{ types: { actors: { src: "str"; logic: () => any; }; }; invoke: { readonly src: "str"; }; }'.
-reverseMappedTypeIntersectionConstraint.ts(171,3): error TS2353: Object literal may only specify known properties, and 'extra' does not exist in type '{ invoke: { readonly src: "whatever"; }; }'.
+reverseMappedTypeIntersectionConstraint.ts(164,3): error TS2353: Object literal may only specify known properties, and 'extra' does not exist in type '{ invoke: { readonly src: "str" }, types: { actors: { src: "str", logic: () => error } } }'.
+reverseMappedTypeIntersectionConstraint.ts(171,3): error TS2353: Object literal may only specify known properties, and 'extra' does not exist in type '{ invoke: { readonly src: "whatever" } }'.
 
 
 ==== reverseMappedTypeIntersectionConstraint.ts (14 errors) ====
@@= skipped -53, +53 lines =@@
       },
       extra: 12,
       ~~~~~
-!!! error TS2353: Object literal may only specify known properties, and 'extra' does not exist in type '{ entry: "foo"; states: { a: { entry: "foo"; }; }; }'.
+!!! error TS2353: Object literal may only specify known properties, and 'extra' does not exist in type '{ entry: "foo", states: { a: { entry: "foo" } } }'.
     });
     
     
@@= skipped -13, +13 lines =@@
       y: "y",
       z: "z", // undesirable property z is *not* allowed
       ~
-!!! error TS2353: Object literal may only specify known properties, and 'z' does not exist in type '{ x: number; y: "y"; }'.
+!!! error TS2353: Object literal may only specify known properties, and 'z' does not exist in type '{ x: number, y: "y" }'.
     });
     
     checked;
@@= skipped -18, +18 lines =@@
         } else {
           return s
           ~~~~~~
-!!! error TS2322: Type '{ [K in keyof T & keyof Stuff]: T[K]; }' is not assignable to type 'T'.
-!!! error TS2322:   '{ [K in keyof T & keyof Stuff]: T[K]; }' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'Stuff'.
+!!! error TS2322: Type '{ [K in keyof T & (keyof Stuff)]: T[K] }' is not assignable to type 'T'.
+!!! error TS2322:   '{ [K in keyof T & (keyof Stuff)]: T[K] }' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'Stuff'.
         }
     }
     
     doStuffWithStuff({ field: 1, anotherField: 'a', extra: 123 })
                                                     ~~~~~
-!!! error TS2353: Object literal may only specify known properties, and 'extra' does not exist in type '{ field: 1; anotherField: "a"; }'.
+!!! error TS2353: Object literal may only specify known properties, and 'extra' does not exist in type '{ anotherField: "a", field: 1 }'.
     
     function doStuffWithStuffArr<T extends Stuff>(arr: { [K in keyof T & keyof Stuff]: T[K] }[]): T[] {
         if(Math.random() > 0.5) {
@@= skipped -15, +15 lines =@@
         } else {
           return arr
           ~~~~~~
-!!! error TS2322: Type '{ [K in keyof T & keyof Stuff]: T[K]; }[]' is not assignable to type 'T[]'.
-!!! error TS2322:   Type '{ [K in keyof T & keyof Stuff]: T[K]; }' is not assignable to type 'T'.
-!!! error TS2322:     '{ [K in keyof T & keyof Stuff]: T[K]; }' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'Stuff'.
+!!! error TS2322: Type '{ [K in keyof T & (keyof Stuff)]: T[K] }[]' is not assignable to type 'T[]'.
+!!! error TS2322:   Type '{ [K in keyof T & (keyof Stuff)]: T[K] }' is not assignable to type 'T'.
+!!! error TS2322:     '{ [K in keyof T & (keyof Stuff)]: T[K] }' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'Stuff'.
         }
     }
     
     doStuffWithStuffArr([
         { field: 1, anotherField: 'a', extra: 123 },
                                        ~~~~~
-!!! error TS2353: Object literal may only specify known properties, and 'extra' does not exist in type '{ field: 1; anotherField: "a"; }'.
+!!! error TS2353: Object literal may only specify known properties, and 'extra' does not exist in type '{ anotherField: "a", field: 1 }'.
     ])
     
     // -----------------------------------------------------------------------------------------
@@= skipped -24, +24 lines =@@
     
     foo({x: 1, y: 'foo'});
                ~
-!!! error TS2353: Object literal may only specify known properties, and 'y' does not exist in type '{ x: 1; }'.
+!!! error TS2353: Object literal may only specify known properties, and 'y' does not exist in type '{ x: 1 }'.
     
     foo({...{x: 1, y: 'foo'}}); // no error because lack of excess property check by design
     
@@= skipped -13, +13 lines =@@
     baz({x: 1});
     baz({x: 1, z: 123});
                ~
-!!! error TS2353: Object literal may only specify known properties, and 'z' does not exist in type '{ x: 1; }'.
+!!! error TS2353: Object literal may only specify known properties, and 'z' does not exist in type '{ x: 1 }'.
     baz({x: 1, y: 'foo'});
     baz({x: 1, y: 'foo', z: 123});
                          ~
-!!! error TS2353: Object literal may only specify known properties, and 'z' does not exist in type '{ x: 1; y: "foo"; }'.
+!!! error TS2353: Object literal may only specify known properties, and 'z' does not exist in type '{ x: 1, y: "foo" }'.
     
     // -----------------------------------------------------------------------------------------
     
@@= skipped -19, +19 lines =@@
     
     const wnp = withNestedProp({prop: 'foo', nested: { prop: 'bar' }, extra: 10 });
                                                                       ~~~~~
-!!! error TS2353: Object literal may only specify known properties, and 'extra' does not exist in type '{ prop: "foo"; nested: { prop: string; }; }'.
+!!! error TS2353: Object literal may only specify known properties, and 'extra' does not exist in type '{ nested: { prop: string }, prop: "foo" }'.
     
     // -----------------------------------------------------------------------------------------
     
@@= skipped -55, +55 lines =@@
       },
       extra: 10
       ~~~~~
-!!! error TS2353: Object literal may only specify known properties, and 'extra' does not exist in type '{ types: { actors: { src: "str"; logic: () => any; }; }; invoke: { readonly src: "str"; }; }'.
+!!! error TS2353: Object literal may only specify known properties, and 'extra' does not exist in type '{ invoke: { readonly src: "str" }, types: { actors: { src: "str", logic: () => error } } }'.
     });
     
     const config2 = createXMachine({
@@= skipped -9, +9 lines =@@
       },
       extra: 10
       ~~~~~
-!!! error TS2353: Object literal may only specify known properties, and 'extra' does not exist in type '{ invoke: { readonly src: "whatever"; }; }'.
+!!! error TS2353: Object literal may only specify known properties, and 'extra' does not exist in type '{ invoke: { readonly src: "whatever" } }'.
     });
     
