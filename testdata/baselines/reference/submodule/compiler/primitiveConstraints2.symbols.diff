--- old.primitiveConstraints2.symbols
+++ new.primitiveConstraints2.symbols
@@= skipped -5, +5 lines =@@
 >T : Symbol(T, Decl(primitiveConstraints2.ts, 0, 8))
 
    public bar2<U extends T>(x: T, y: U): T {
->bar2 : Symbol(C.bar2, Decl(primitiveConstraints2.ts, 0, 12))
+>bar2 : Symbol(bar2, Decl(primitiveConstraints2.ts, 0, 12))
 >U : Symbol(U, Decl(primitiveConstraints2.ts, 1, 15))
 >T : Symbol(T, Decl(primitiveConstraints2.ts, 0, 8))
 >x : Symbol(x, Decl(primitiveConstraints2.ts, 1, 28))
@@= skipped -18, +18 lines =@@
 >C : Symbol(C, Decl(primitiveConstraints2.ts, 0, 0))
 
 x.bar2(2, ""); // should error
->x.bar2 : Symbol(C.bar2, Decl(primitiveConstraints2.ts, 0, 12))
+>x.bar2 : Symbol(bar2, Decl(primitiveConstraints2.ts, 0, 12))
 >x : Symbol(x, Decl(primitiveConstraints2.ts, 6, 3))
->bar2 : Symbol(C.bar2, Decl(primitiveConstraints2.ts, 0, 12))
+>bar2 : Symbol(bar2, Decl(primitiveConstraints2.ts, 0, 12))
 
 x.bar2<string>(2, ""); // should error
->x.bar2 : Symbol(C.bar2, Decl(primitiveConstraints2.ts, 0, 12))
+>x.bar2 : Symbol(bar2, Decl(primitiveConstraints2.ts, 0, 12))
 >x : Symbol(x, Decl(primitiveConstraints2.ts, 6, 3))
->bar2 : Symbol(C.bar2, Decl(primitiveConstraints2.ts, 0, 12))
+>bar2 : Symbol(bar2, Decl(primitiveConstraints2.ts, 0, 12))
 
