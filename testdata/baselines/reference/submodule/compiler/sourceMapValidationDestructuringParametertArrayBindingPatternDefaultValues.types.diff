--- old.sourceMapValidationDestructuringParametertArrayBindingPatternDefaultValues.types
+++ new.sourceMapValidationDestructuringParametertArrayBindingPatternDefaultValues.types
@@= skipped -18, +18 lines =@@
 >"mowing" : "mowing"

 function foo1([, nameA = "noName"]: Robot = [-1, "name", "skill"]) {
->foo1 : ([, nameA]?: Robot) => void
+>foo1 : ([, nameA = "noName"]?: Robot) => void
 >nameA : string
 >"noName" : "noName"
 >[-1, "name", "skill"] : [number, string, string]
@@= skipped -18, +18 lines =@@
 }

 function foo2([numberB = -1]: Robot = [-1, "name", "skill"]) {
->foo2 : ([numberB]?: Robot) => void
+>foo2 : ([numberB = -1]?: Robot) => void
 >numberB : number
 >-1 : -1
 >1 : 1
@@= skipped -19, +19 lines =@@
 }

 function foo3([numberA2 = -1, nameA2 = "name", skillA2 = "skill"]: Robot = [-1, "name", "skill"]) {
->foo3 : ([numberA2, nameA2, skillA2]?: Robot) => void
+>foo3 : ([numberA2 = -1, nameA2 = "name", skillA2 = "skill"]?: Robot) => void
 >numberA2 : number
 >-1 : -1
 >1 : 1
@@= skipped -23, +23 lines =@@
 }

 function foo4([numberA3 = -1, ...robotAInfo]: Robot = [-1, "name", "skill"]) {
->foo4 : ([numberA3, ...robotAInfo]?: Robot) => void
+>foo4 : ([numberA3 = -1, ...robotAInfo]?: Robot) => void
 >numberA3 : number
 >-1 : -1
 >1 : 1
@@= skipped -21, +21 lines =@@

 foo1(robotA);
 >foo1(robotA) : void
->foo1 : ([, nameA]?: Robot) => void
+>foo1 : ([, nameA = "noName"]?: Robot) => void
 >robotA : Robot

 foo1([2, "trimmer", "trimming"]);
 >foo1([2, "trimmer", "trimming"]) : void
->foo1 : ([, nameA]?: Robot) => void
+>foo1 : ([, nameA = "noName"]?: Robot) => void
 >[2, "trimmer", "trimming"] : [number, string, string]
 >2 : 2
 >"trimmer" : "trimmer"
@@= skipped -13, +13 lines =@@

 foo2(robotA);
 >foo2(robotA) : void
->foo2 : ([numberB]?: Robot) => void
+>foo2 : ([numberB = -1]?: Robot) => void
 >robotA : Robot

 foo2([2, "trimmer", "trimming"]);
 >foo2([2, "trimmer", "trimming"]) : void
->foo2 : ([numberB]?: Robot) => void
+>foo2 : ([numberB = -1]?: Robot) => void
 >[2, "trimmer", "trimming"] : [number, string, string]
 >2 : 2
 >"trimmer" : "trimmer"
@@= skipped -13, +13 lines =@@

 foo3(robotA);
 >foo3(robotA) : void
->foo3 : ([numberA2, nameA2, skillA2]?: Robot) => void
+>foo3 : ([numberA2 = -1, nameA2 = "name", skillA2 = "skill"]?: Robot) => void
 >robotA : Robot

 foo3([2, "trimmer", "trimming"]);
 >foo3([2, "trimmer", "trimming"]) : void
->foo3 : ([numberA2, nameA2, skillA2]?: Robot) => void
+>foo3 : ([numberA2 = -1, nameA2 = "name", skillA2 = "skill"]?: Robot) => void
 >[2, "trimmer", "trimming"] : [number, string, string]
 >2 : 2
 >"trimmer" : "trimmer"
@@= skipped -13, +13 lines =@@

 foo4(robotA);
 >foo4(robotA) : void
->foo4 : ([numberA3, ...robotAInfo]?: Robot) => void
+>foo4 : ([numberA3 = -1, ...robotAInfo]?: Robot) => void
 >robotA : Robot

 foo4([2, "trimmer", "trimming"]);
 >foo4([2, "trimmer", "trimming"]) : void
->foo4 : ([numberA3, ...robotAInfo]?: Robot) => void
+>foo4 : ([numberA3 = -1, ...robotAInfo]?: Robot) => void
 >[2, "trimmer", "trimming"] : [number, string, string]
 >2 : 2
 >"trimmer" : "trimmer"