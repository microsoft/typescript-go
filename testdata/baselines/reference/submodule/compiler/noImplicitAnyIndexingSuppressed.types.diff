--- old.noImplicitAnyIndexingSuppressed.types
+++ new.noImplicitAnyIndexingSuppressed.types
@@= skipped -1, +1 lines =@@
 
 === noImplicitAnyIndexingSuppressed.ts ===
 enum MyEmusEnum {
->MyEmusEnum : MyEmusEnum
+>MyEmusEnum : MyEmusEnum.emu
 
     emu
 >emu : MyEmusEnum.emu
@@= skipped -18, +18 lines =@@
 >strRepresentation2 : string
 >MyEmusEnum[MyEmusEnum.emu] : string
 >MyEmusEnum : typeof MyEmusEnum
->MyEmusEnum.emu : MyEmusEnum
+>MyEmusEnum.emu : MyEmusEnum.emu
 >MyEmusEnum : typeof MyEmusEnum
->emu : MyEmusEnum
+>emu : MyEmusEnum.emu
 
 // Should be okay, as we suppress implicit 'any' property access checks
 var strRepresentation3 = MyEmusEnum["monehh"];
@@= skipped -13, +13 lines =@@
 
 // Should be okay; should be a MyEmusEnum
 var strRepresentation4 = MyEmusEnum["emu"];
->strRepresentation4 : MyEmusEnum
->MyEmusEnum["emu"] : MyEmusEnum
+>strRepresentation4 : MyEmusEnum.emu
+>MyEmusEnum["emu"] : MyEmusEnum.emu
 >MyEmusEnum : typeof MyEmusEnum
 >"emu" : "emu"
 
@@= skipped -44, +44 lines =@@
 >hi : any
 
 interface MyMap<T> {
+>MyMap : MyMap<T>
+>T : T
+
     [key: string]: T;
 >key : string
 }
@@= skipped -30, +33 lines =@@
 >mResult1 : number
 >m[MyEmusEnum.emu] : number
 >m : MyMap<number>
->MyEmusEnum.emu : MyEmusEnum
+>MyEmusEnum.emu : MyEmusEnum.emu
 >MyEmusEnum : typeof MyEmusEnum
->emu : MyEmusEnum
+>emu : MyEmusEnum.emu
 
 var mResult2 = m[MyEmusEnum[MyEmusEnum.emu]];
 >mResult2 : number
@@= skipped -10, +10 lines =@@
 >m : MyMap<number>
 >MyEmusEnum[MyEmusEnum.emu] : string
 >MyEmusEnum : typeof MyEmusEnum
->MyEmusEnum.emu : MyEmusEnum
+>MyEmusEnum.emu : MyEmusEnum.emu
 >MyEmusEnum : typeof MyEmusEnum
->emu : MyEmusEnum
+>emu : MyEmusEnum.emu
 
 var mResult3 = m[hi];
 >mResult3 : number
