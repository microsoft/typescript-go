--- old.spreadOfObjectLiteralAssignableToIndexSignature.types
+++ new.spreadOfObjectLiteralAssignableToIndexSignature.types
@@= skipped -5, +5 lines =@@
 >{} : {}
 
 interface RecordOfRecords extends Record<keyof any, RecordOfRecords> {}
+>RecordOfRecords : RecordOfRecords
+
 const recordOfRecords: RecordOfRecords = {}
 >recordOfRecords : RecordOfRecords
 >{} : {}
@@= skipped -16, +18 lines =@@
 >foo : Record<never, never>
 >undefined : undefined
 >{foo} : { foo: Record<never, never>; }
->foo : Record<never, never>
+>foo : any
 >{} : {}
 
 recordOfRecords.propB = {...(foo && {foo})} // OK
@@= skipped -13, +13 lines =@@
 >foo && {foo} : { foo: Record<never, never>; }
 >foo : Record<never, never>
 >{foo} : { foo: Record<never, never>; }
->foo : Record<never, never>
+>foo : any
 
 recordOfRecords.propC = {...(foo !== undefined && {foo})} // error'd in 3.7 beta, should be OK
 >recordOfRecords.propC = {...(foo !== undefined && {foo})} : { foo?: Record<never, never> | undefined; }
@@= skipped -14, +14 lines =@@
 >foo : Record<never, never>
 >undefined : undefined
 >{foo} : { foo: Record<never, never>; }
->foo : Record<never, never>
+>foo : any
 
 interface RecordOfRecordsOrEmpty extends Record<keyof any, RecordOfRecordsOrEmpty | {}> {}
+>RecordOfRecordsOrEmpty : RecordOfRecordsOrEmpty
+
 const recordsOfRecordsOrEmpty: RecordOfRecordsOrEmpty = {}
 >recordsOfRecordsOrEmpty : RecordOfRecordsOrEmpty
 >{} : {}
 
 recordsOfRecordsOrEmpty.propA = {...(foo !== undefined ? {foo} : {})} // OK
 >recordsOfRecordsOrEmpty.propA = {...(foo !== undefined ? {foo} : {})} : { foo?: Record<never, never> | undefined; }
->recordsOfRecordsOrEmpty.propA : {} | RecordOfRecordsOrEmpty
+>recordsOfRecordsOrEmpty.propA : RecordOfRecordsOrEmpty | {}
 >recordsOfRecordsOrEmpty : RecordOfRecordsOrEmpty
->propA : {} | RecordOfRecordsOrEmpty
+>propA : RecordOfRecordsOrEmpty | {}
 >{...(foo !== undefined ? {foo} : {})} : { foo?: Record<never, never> | undefined; }
 >(foo !== undefined ? {foo} : {}) : { foo: Record<never, never>; } | {}
 >foo !== undefined ? {foo} : {} : { foo: Record<never, never>; } | {}
@@= skipped -19, +21 lines =@@
 >foo : Record<never, never>
 >undefined : undefined
 >{foo} : { foo: Record<never, never>; }
->foo : Record<never, never>
+>foo : any
 >{} : {}
 
 recordsOfRecordsOrEmpty.propB = {...(foo && {foo})} // OK
 >recordsOfRecordsOrEmpty.propB = {...(foo && {foo})} : { foo: Record<never, never>; }
->recordsOfRecordsOrEmpty.propB : {} | RecordOfRecordsOrEmpty
+>recordsOfRecordsOrEmpty.propB : RecordOfRecordsOrEmpty | {}
 >recordsOfRecordsOrEmpty : RecordOfRecordsOrEmpty
->propB : {} | RecordOfRecordsOrEmpty
+>propB : RecordOfRecordsOrEmpty | {}
 >{...(foo && {foo})} : { foo: Record<never, never>; }
 >(foo && {foo}) : { foo: Record<never, never>; }
 >foo && {foo} : { foo: Record<never, never>; }
 >foo : Record<never, never>
 >{foo} : { foo: Record<never, never>; }
->foo : Record<never, never>
+>foo : any
 
 recordsOfRecordsOrEmpty.propC = {...(foo !== undefined && {foo})} // OK
 >recordsOfRecordsOrEmpty.propC = {...(foo !== undefined && {foo})} : { foo?: Record<never, never> | undefined; }
->recordsOfRecordsOrEmpty.propC : {} | RecordOfRecordsOrEmpty
+>recordsOfRecordsOrEmpty.propC : RecordOfRecordsOrEmpty | {}
 >recordsOfRecordsOrEmpty : RecordOfRecordsOrEmpty
->propC : {} | RecordOfRecordsOrEmpty
+>propC : RecordOfRecordsOrEmpty | {}
 >{...(foo !== undefined && {foo})} : { foo?: Record<never, never> | undefined; }
 >(foo !== undefined && {foo}) : false | { foo: Record<never, never>; }
 >foo !== undefined && {foo} : false | { foo: Record<never, never>; }
@@= skipped -27, +27 lines =@@
 >foo : Record<never, never>
 >undefined : undefined
 >{foo} : { foo: Record<never, never>; }
->foo : Record<never, never>
+>foo : any
 
