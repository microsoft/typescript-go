--- old.declarationEmitCommonJsModuleReferencedType.types
+++ new.declarationEmitCommonJsModuleReferencedType.types
@@= skipped -0, +0 lines =@@
 //// [tests/cases/compiler/declarationEmitCommonJsModuleReferencedType.ts] ////
 
 === r/node_modules/foo/node_modules/nested/index.d.ts ===
-
 export interface NestedProps {}
-=== r/node_modules/foo/other/index.d.ts ===
+>NestedProps : NestedProps
 
+=== r/node_modules/foo/other/index.d.ts ===
 export interface OtherIndexProps {}
-=== r/node_modules/foo/other.d.ts ===
+>OtherIndexProps : OtherIndexProps
 
+=== r/node_modules/foo/other.d.ts ===
 export interface OtherProps {}
+>OtherProps : OtherProps
+
 === r/node_modules/foo/index.d.ts ===
 import { OtherProps } from "./other";
 >OtherProps : any
@@= skipped -19, +22 lines =@@
 >NestedProps : any
 
 export interface SomeProps {}
+>SomeProps : SomeProps
 
 export function foo(): [SomeProps, OtherProps, OtherIndexProps, NestedProps];
 >foo : () => [SomeProps, OtherProps, OtherIndexProps, NestedProps]
 
 === node_modules/root/index.d.ts ===
 export interface RootProps {}
+>RootProps : RootProps
 
 export function bar(): RootProps;
 >bar : () => RootProps
 
 === r/entry.ts ===
 import { foo } from "foo";
->foo : () => [import("r/node_modules/foo/index").SomeProps, import("r/node_modules/foo/other").OtherProps, import("r/node_modules/foo/other/index").OtherIndexProps, import("r/node_modules/foo/node_modules/nested/index").NestedProps]
+>foo : () => [SomeProps, OtherProps, OtherIndexProps, NestedProps]
 
 import { bar } from "root";
->bar : () => import("node_modules/root/index").RootProps
+>bar : () => RootProps
 
 export const x = foo();
->x : [import("r/node_modules/foo/index").SomeProps, import("r/node_modules/foo/other").OtherProps, import("r/node_modules/foo/other/index").OtherIndexProps, import("r/node_modules/foo/node_modules/nested/index").NestedProps]
->foo() : [import("r/node_modules/foo/index").SomeProps, import("r/node_modules/foo/other").OtherProps, import("r/node_modules/foo/other/index").OtherIndexProps, import("r/node_modules/foo/node_modules/nested/index").NestedProps]
->foo : () => [import("r/node_modules/foo/index").SomeProps, import("r/node_modules/foo/other").OtherProps, import("r/node_modules/foo/other/index").OtherIndexProps, import("r/node_modules/foo/node_modules/nested/index").NestedProps]
+>x : [SomeProps, OtherProps, OtherIndexProps, NestedProps]
+>foo() : [SomeProps, OtherProps, OtherIndexProps, NestedProps]
+>foo : () => [SomeProps, OtherProps, OtherIndexProps, NestedProps]
 
 export const y = bar();
->y : import("node_modules/root/index").RootProps
->bar() : import("node_modules/root/index").RootProps
->bar : () => import("node_modules/root/index").RootProps
+>y : RootProps
+>bar() : RootProps
+>bar : () => RootProps
 
