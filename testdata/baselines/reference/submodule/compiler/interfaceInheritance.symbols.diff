--- old.interfaceInheritance.symbols
+++ new.interfaceInheritance.symbols
@@= skipped -4, +4 lines =@@
 >I1 : Symbol(I1, Decl(interfaceInheritance.ts, 0, 0))
 
     i1P1: number;
->i1P1 : Symbol(I1.i1P1, Decl(interfaceInheritance.ts, 0, 14))
+>i1P1 : Symbol(i1P1, Decl(interfaceInheritance.ts, 0, 14))
 
     i1P2(): void;
->i1P2 : Symbol(I1.i1P2, Decl(interfaceInheritance.ts, 1, 17))
+>i1P2 : Symbol(i1P2, Decl(interfaceInheritance.ts, 1, 17))
 }
 
 interface I2 extends I1 {
@@= skipped -11, +11 lines =@@
 >I1 : Symbol(I1, Decl(interfaceInheritance.ts, 0, 0))
 
     i2P1: string;
->i2P1 : Symbol(I2.i2P1, Decl(interfaceInheritance.ts, 5, 25))
+>i2P1 : Symbol(i2P1, Decl(interfaceInheritance.ts, 5, 25))
 }
 
 interface I3 {
 >I3 : Symbol(I3, Decl(interfaceInheritance.ts, 7, 1))
 
     i2P1: string; // has a member from i2P1, but not from I1
->i2P1 : Symbol(I3.i2P1, Decl(interfaceInheritance.ts, 9, 14))
+>i2P1 : Symbol(i2P1, Decl(interfaceInheritance.ts, 9, 14))
 }
 
 interface I4 {
 >I4 : Symbol(I4, Decl(interfaceInheritance.ts, 11, 1))
 
 	one: number;
->one : Symbol(I4.one, Decl(interfaceInheritance.ts, 13, 14))
+>one : Symbol(one, Decl(interfaceInheritance.ts, 13, 14))
 }
 
 interface I5 {
 >I5 : Symbol(I5, Decl(interfaceInheritance.ts, 15, 1))
 
 	one: string;
->one : Symbol(I5.one, Decl(interfaceInheritance.ts, 17, 14))
+>one : Symbol(one, Decl(interfaceInheritance.ts, 17, 14))
 }
 
 class C1 implements I2 { // should be an error - it doesn't implement the members of I1
@@= skipped -29, +29 lines =@@
 >I2 : Symbol(I2, Decl(interfaceInheritance.ts, 3, 1))
 
     public i2P1: string;
->i2P1 : Symbol(C1.i2P1, Decl(interfaceInheritance.ts, 21, 24))
+>i2P1 : Symbol(i2P1, Decl(interfaceInheritance.ts, 21, 24))
 }
 
 var i2: I2;
