--- old.nonNullReferenceMatching.types
+++ new.nonNullReferenceMatching.types
@@= skipped -33, +33 lines =@@
 >ref : HTMLElement | null
 
         typeof this.props.thumbYProps!.elementRef === 'function' && this.props.thumbYProps!.elementRef(ref);
->typeof this.props.thumbYProps!.elementRef === 'function' && this.props.thumbYProps!.elementRef(ref) : false | void
+>typeof this.props.thumbYProps!.elementRef === 'function' && this.props.thumbYProps!.elementRef(ref) : void | false
 >typeof this.props.thumbYProps!.elementRef === 'function' : boolean
->typeof this.props.thumbYProps!.elementRef : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof this.props.thumbYProps!.elementRef : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >this.props.thumbYProps!.elementRef : ElementRef | undefined
 >this.props.thumbYProps! : ThumbProps
 >this.props.thumbYProps : ThumbProps | undefined
@@= skipped -24, +24 lines =@@
 >ref : HTMLElement | null
 
         typeof (this.props.thumbYProps!.elementRef) === 'function' && this.props.thumbYProps!.elementRef(ref);
->typeof (this.props.thumbYProps!.elementRef) === 'function' && this.props.thumbYProps!.elementRef(ref) : false | void
+>typeof (this.props.thumbYProps!.elementRef) === 'function' && this.props.thumbYProps!.elementRef(ref) : void | false
 >typeof (this.props.thumbYProps!.elementRef) === 'function' : boolean
->typeof (this.props.thumbYProps!.elementRef) : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof (this.props.thumbYProps!.elementRef) : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >(this.props.thumbYProps!.elementRef) : ElementRef | undefined
 >this.props.thumbYProps!.elementRef : ElementRef | undefined
 >this.props.thumbYProps! : ThumbProps
@@= skipped -25, +25 lines =@@
 >ref : HTMLElement | null
 
         typeof ((this.props).thumbYProps!.elementRef)! === 'function' && this.props.thumbYProps!.elementRef(ref);
->typeof ((this.props).thumbYProps!.elementRef)! === 'function' && this.props.thumbYProps!.elementRef(ref) : false | void
+>typeof ((this.props).thumbYProps!.elementRef)! === 'function' && this.props.thumbYProps!.elementRef(ref) : void | false
 >typeof ((this.props).thumbYProps!.elementRef)! === 'function' : boolean
->typeof ((this.props).thumbYProps!.elementRef)! : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof ((this.props).thumbYProps!.elementRef)! : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >((this.props).thumbYProps!.elementRef)! : ElementRef
 >((this.props).thumbYProps!.elementRef) : ElementRef | undefined
 >(this.props).thumbYProps!.elementRef : ElementRef | undefined
@@= skipped -27, +27 lines =@@
 >ref : HTMLElement | null
 
         typeof this.props.thumbXProps.elementRef === 'function' && this.props.thumbXProps.elementRef(ref);
->typeof this.props.thumbXProps.elementRef === 'function' && this.props.thumbXProps.elementRef(ref) : false | void
+>typeof this.props.thumbXProps.elementRef === 'function' && this.props.thumbXProps.elementRef(ref) : void | false
 >typeof this.props.thumbXProps.elementRef === 'function' : boolean
->typeof this.props.thumbXProps.elementRef : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof this.props.thumbXProps.elementRef : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >this.props.thumbXProps.elementRef : ElementRef | undefined
 >this.props.thumbXProps : ThumbProps
 >this.props : ComponentProps
@@= skipped -22, +22 lines =@@
 >ref : HTMLElement | null
 
         typeof this.props.thumbXProps.elementRef === 'function' && (this.props).thumbXProps.elementRef(ref);
->typeof this.props.thumbXProps.elementRef === 'function' && (this.props).thumbXProps.elementRef(ref) : false | void
+>typeof this.props.thumbXProps.elementRef === 'function' && (this.props).thumbXProps.elementRef(ref) : void | false
 >typeof this.props.thumbXProps.elementRef === 'function' : boolean
->typeof this.props.thumbXProps.elementRef : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof this.props.thumbXProps.elementRef : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >this.props.thumbXProps.elementRef : ElementRef | undefined
 >this.props.thumbXProps : ThumbProps
 >this.props : ComponentProps
@@= skipped -23, +23 lines =@@
 >ref : HTMLElement | null
 
         typeof this.props.thumbXProps.elementRef === 'function' && (this.props.thumbXProps).elementRef(ref);
->typeof this.props.thumbXProps.elementRef === 'function' && (this.props.thumbXProps).elementRef(ref) : false | void
+>typeof this.props.thumbXProps.elementRef === 'function' && (this.props.thumbXProps).elementRef(ref) : void | false
 >typeof this.props.thumbXProps.elementRef === 'function' : boolean
->typeof this.props.thumbXProps.elementRef : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof this.props.thumbXProps.elementRef : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >this.props.thumbXProps.elementRef : ElementRef | undefined
 >this.props.thumbXProps : ThumbProps
 >this.props : ComponentProps
@@= skipped -23, +23 lines =@@
 >ref : HTMLElement | null
 
         typeof this.props.thumbXProps.elementRef === 'function' && ((this.props)!.thumbXProps)!.elementRef(ref);
->typeof this.props.thumbXProps.elementRef === 'function' && ((this.props)!.thumbXProps)!.elementRef(ref) : false | void
+>typeof this.props.thumbXProps.elementRef === 'function' && ((this.props)!.thumbXProps)!.elementRef(ref) : void | false
 >typeof this.props.thumbXProps.elementRef === 'function' : boolean
->typeof this.props.thumbXProps.elementRef : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof this.props.thumbXProps.elementRef : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >this.props.thumbXProps.elementRef : ElementRef | undefined
 >this.props.thumbXProps : ThumbProps
 >this.props : ComponentProps
@@= skipped -26, +26 lines =@@
 >ref : HTMLElement | null
 
         typeof (this.props.thumbXProps).elementRef === 'function' && ((this.props)!.thumbXProps)!.elementRef(ref);
->typeof (this.props.thumbXProps).elementRef === 'function' && ((this.props)!.thumbXProps)!.elementRef(ref) : false | void
+>typeof (this.props.thumbXProps).elementRef === 'function' && ((this.props)!.thumbXProps)!.elementRef(ref) : void | false
 >typeof (this.props.thumbXProps).elementRef === 'function' : boolean
->typeof (this.props.thumbXProps).elementRef : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof (this.props.thumbXProps).elementRef : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >(this.props.thumbXProps).elementRef : ElementRef | undefined
 >(this.props.thumbXProps) : ThumbProps
 >this.props.thumbXProps : ThumbProps
@@= skipped -27, +27 lines =@@
 >ref : HTMLElement | null
 
         typeof this.props!.thumbXProps!.elementRef === 'function' && ((this.props)!.thumbXProps)!.elementRef(ref);
->typeof this.props!.thumbXProps!.elementRef === 'function' && ((this.props)!.thumbXProps)!.elementRef(ref) : false | void
+>typeof this.props!.thumbXProps!.elementRef === 'function' && ((this.props)!.thumbXProps)!.elementRef(ref) : void | false
 >typeof this.props!.thumbXProps!.elementRef === 'function' : boolean
->typeof this.props!.thumbXProps!.elementRef : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof this.props!.thumbXProps!.elementRef : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >this.props!.thumbXProps!.elementRef : ElementRef | undefined
 >this.props!.thumbXProps! : ThumbProps
 >this.props!.thumbXProps : ThumbProps
