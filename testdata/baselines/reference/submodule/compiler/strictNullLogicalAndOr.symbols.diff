--- old.strictNullLogicalAndOr.symbols
+++ new.strictNullLogicalAndOr.symbols
@@= skipped -4, +4 lines =@@
 
 let sinOrCos = Math.random() < .5;
 >sinOrCos : Symbol(sinOrCos, Decl(strictNullLogicalAndOr.ts, 2, 3))
->Math.random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
+>Math.random : Symbol(random, Decl(lib.es5.d.ts, --, --))
 >Math : Symbol(Math, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
+>random : Symbol(random, Decl(lib.es5.d.ts, --, --))
 
 let choice = sinOrCos && Math.sin || Math.cos;
 >choice : Symbol(choice, Decl(strictNullLogicalAndOr.ts, 3, 3))
 >sinOrCos : Symbol(sinOrCos, Decl(strictNullLogicalAndOr.ts, 2, 3))
->Math.sin : Symbol(Math.sin, Decl(lib.es5.d.ts, --, --))
+>Math.sin : Symbol(sin, Decl(lib.es5.d.ts, --, --))
 >Math : Symbol(Math, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->sin : Symbol(Math.sin, Decl(lib.es5.d.ts, --, --))
->Math.cos : Symbol(Math.cos, Decl(lib.es5.d.ts, --, --))
+>sin : Symbol(sin, Decl(lib.es5.d.ts, --, --))
+>Math.cos : Symbol(cos, Decl(lib.es5.d.ts, --, --))
 >Math : Symbol(Math, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->cos : Symbol(Math.cos, Decl(lib.es5.d.ts, --, --))
+>cos : Symbol(cos, Decl(lib.es5.d.ts, --, --))
 
 choice(Math.PI);
 >choice : Symbol(choice, Decl(strictNullLogicalAndOr.ts, 3, 3))
->Math.PI : Symbol(Math.PI, Decl(lib.es5.d.ts, --, --))
+>Math.PI : Symbol(PI, Decl(lib.es5.d.ts, --, --))
 >Math : Symbol(Math, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->PI : Symbol(Math.PI, Decl(lib.es5.d.ts, --, --))
+>PI : Symbol(PI, Decl(lib.es5.d.ts, --, --))
 
 function sq(n?: number): number {
 >sq : Symbol(sq, Decl(strictNullLogicalAndOr.ts, 5, 16))
