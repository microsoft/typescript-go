--- old.typePredicateTopLevelTypeParameter.symbols
+++ new.typePredicateTopLevelTypeParameter.symbols
@@= skipped -15, +15 lines =@@
 
 const admins = ['Mike', 'Joe'].map(e => getPermissions(e));
 >admins : Symbol(admins, Decl(typePredicateTopLevelTypeParameter.ts, 7, 5))
->['Mike', 'Joe'].map : Symbol(Array.map, Decl(lib.es5.d.ts, --, --))
->map : Symbol(Array.map, Decl(lib.es5.d.ts, --, --))
+>['Mike', 'Joe'].map : Symbol(map, Decl(lib.es5.d.ts, --, --))
+>map : Symbol(map, Decl(lib.es5.d.ts, --, --))
 >e : Symbol(e, Decl(typePredicateTopLevelTypeParameter.ts, 7, 35))
 >getPermissions : Symbol(getPermissions, Decl(typePredicateTopLevelTypeParameter.ts, 0, 0))
 >e : Symbol(e, Decl(typePredicateTopLevelTypeParameter.ts, 7, 35))
@@= skipped -21, +21 lines =@@
 
 const foundAdmins = admins.filter(isDefined);  // "admin"[]
 >foundAdmins : Symbol(foundAdmins, Decl(typePredicateTopLevelTypeParameter.ts, 13, 5))
->admins.filter : Symbol(Array.filter, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
+>admins.filter : Symbol(filter, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 >admins : Symbol(admins, Decl(typePredicateTopLevelTypeParameter.ts, 7, 5))
->filter : Symbol(Array.filter, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
+>filter : Symbol(filter, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 >isDefined : Symbol(isDefined, Decl(typePredicateTopLevelTypeParameter.ts, 7, 59))
 
