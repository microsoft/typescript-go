--- old.varianceCallbacksAndIndexedAccesses.symbols
+++ new.varianceCallbacksAndIndexedAccesses.symbols
@@= skipped -38, +38 lines =@@
 >T : Symbol(T, Decl(varianceCallbacksAndIndexedAccesses.ts, 8, 27))
 
     source: WindowLike<T>;
->source : Symbol(MessageEventLike.source, Decl(varianceCallbacksAndIndexedAccesses.ts, 8, 31))
+>source : Symbol(source, Decl(varianceCallbacksAndIndexedAccesses.ts, 8, 31))
 >WindowLike : Symbol(WindowLike, Decl(varianceCallbacksAndIndexedAccesses.ts, 15, 1))
 >T : Symbol(T, Decl(varianceCallbacksAndIndexedAccesses.ts, 8, 27))
 
     origin: string;
->origin : Symbol(MessageEventLike.origin, Decl(varianceCallbacksAndIndexedAccesses.ts, 9, 26))
+>origin : Symbol(origin, Decl(varianceCallbacksAndIndexedAccesses.ts, 9, 26))
 
     data: T;
->data : Symbol(MessageEventLike.data, Decl(varianceCallbacksAndIndexedAccesses.ts, 10, 19))
+>data : Symbol(data, Decl(varianceCallbacksAndIndexedAccesses.ts, 10, 19))
 >T : Symbol(T, Decl(varianceCallbacksAndIndexedAccesses.ts, 8, 27))
 }
 interface PostMessageObject<T> {
@@= skipped -16, +16 lines =@@
 >T : Symbol(T, Decl(varianceCallbacksAndIndexedAccesses.ts, 13, 28))
 
     postMessage(message: T, host: string): void;
->postMessage : Symbol(PostMessageObject.postMessage, Decl(varianceCallbacksAndIndexedAccesses.ts, 13, 32))
+>postMessage : Symbol(postMessage, Decl(varianceCallbacksAndIndexedAccesses.ts, 13, 32))
 >message : Symbol(message, Decl(varianceCallbacksAndIndexedAccesses.ts, 14, 16))
 >T : Symbol(T, Decl(varianceCallbacksAndIndexedAccesses.ts, 13, 28))
 >host : Symbol(host, Decl(varianceCallbacksAndIndexedAccesses.ts, 14, 27))
@@= skipped -12, +12 lines =@@
 >T : Symbol(T, Decl(varianceCallbacksAndIndexedAccesses.ts, 16, 21))
 
     addEventListener(type: "message", handler: Action1<MessageEventLike<T>>): void;
->addEventListener : Symbol(WindowLike.addEventListener, Decl(varianceCallbacksAndIndexedAccesses.ts, 16, 54), Decl(varianceCallbacksAndIndexedAccesses.ts, 17, 83))
+>addEventListener : Symbol(addEventListener, Decl(varianceCallbacksAndIndexedAccesses.ts, 16, 54), Decl(varianceCallbacksAndIndexedAccesses.ts, 17, 83))
 >type : Symbol(type, Decl(varianceCallbacksAndIndexedAccesses.ts, 17, 21))
 >handler : Symbol(handler, Decl(varianceCallbacksAndIndexedAccesses.ts, 17, 37))
 >Action1 : Symbol(Action1, Decl(varianceCallbacksAndIndexedAccesses.ts, 3, 1))
@@= skipped -8, +8 lines =@@
 >T : Symbol(T, Decl(varianceCallbacksAndIndexedAccesses.ts, 16, 21))
 
     addEventListener(type: string, handler: Action1<any>): void;
->addEventListener : Symbol(WindowLike.addEventListener, Decl(varianceCallbacksAndIndexedAccesses.ts, 16, 54), Decl(varianceCallbacksAndIndexedAccesses.ts, 17, 83))
+>addEventListener : Symbol(addEventListener, Decl(varianceCallbacksAndIndexedAccesses.ts, 16, 54), Decl(varianceCallbacksAndIndexedAccesses.ts, 17, 83))
 >type : Symbol(type, Decl(varianceCallbacksAndIndexedAccesses.ts, 18, 21))
 >handler : Symbol(handler, Decl(varianceCallbacksAndIndexedAccesses.ts, 18, 34))
 >Action1 : Symbol(Action1, Decl(varianceCallbacksAndIndexedAccesses.ts, 3, 1))
 
     removeEventListener(type: "message", handler: Action1<MessageEventLike<T>>): void;
->removeEventListener : Symbol(WindowLike.removeEventListener, Decl(varianceCallbacksAndIndexedAccesses.ts, 18, 64), Decl(varianceCallbacksAndIndexedAccesses.ts, 19, 86))
+>removeEventListener : Symbol(removeEventListener, Decl(varianceCallbacksAndIndexedAccesses.ts, 18, 64), Decl(varianceCallbacksAndIndexedAccesses.ts, 19, 86))
 >type : Symbol(type, Decl(varianceCallbacksAndIndexedAccesses.ts, 19, 24))
 >handler : Symbol(handler, Decl(varianceCallbacksAndIndexedAccesses.ts, 19, 40))
 >Action1 : Symbol(Action1, Decl(varianceCallbacksAndIndexedAccesses.ts, 3, 1))
@@= skipped -14, +14 lines =@@
 >T : Symbol(T, Decl(varianceCallbacksAndIndexedAccesses.ts, 16, 21))
 
     removeEventListener(type: string, handler: Action1<any>): void;
->removeEventListener : Symbol(WindowLike.removeEventListener, Decl(varianceCallbacksAndIndexedAccesses.ts, 18, 64), Decl(varianceCallbacksAndIndexedAccesses.ts, 19, 86))
+>removeEventListener : Symbol(removeEventListener, Decl(varianceCallbacksAndIndexedAccesses.ts, 18, 64), Decl(varianceCallbacksAndIndexedAccesses.ts, 19, 86))
 >type : Symbol(type, Decl(varianceCallbacksAndIndexedAccesses.ts, 20, 24))
 >handler : Symbol(handler, Decl(varianceCallbacksAndIndexedAccesses.ts, 20, 37))
 >Action1 : Symbol(Action1, Decl(varianceCallbacksAndIndexedAccesses.ts, 3, 1))
