--- old.symbolLinkDeclarationEmitModuleNamesRootDir.symbols
+++ new.symbolLinkDeclarationEmitModuleNamesRootDir.symbols
@@= skipped -16, +16 lines =@@
 
 export const CONTROLLER_CLASS = BindingKey.create<ControllerClass>(null as any); // line in question
 >CONTROLLER_CLASS : Symbol(CONTROLLER_CLASS, Decl(usage.ts, 3, 12))
->BindingKey.create : Symbol(BindingKey.create, Decl(bindingkey.d.ts, 2, 21))
+>BindingKey.create : Symbol(create, Decl(bindingkey.d.ts, 2, 21))
 >BindingKey : Symbol(BindingKey, Decl(usage.ts, 1, 8))
->create : Symbol(BindingKey.create, Decl(bindingkey.d.ts, 2, 21))
+>create : Symbol(create, Decl(bindingkey.d.ts, 2, 21))
 >ControllerClass : Symbol(ControllerClass, Decl(usage.ts, 0, 8))
 
 === /monorepo/context/src/value-promise.d.ts ===
@@= skipped -21, +21 lines =@@
 >T : Symbol(T, Decl(bindingkey.d.ts, 1, 32))
 
   readonly __type: T;
->__type : Symbol(BindingKey.__type, Decl(bindingkey.d.ts, 1, 36))
+>__type : Symbol(__type, Decl(bindingkey.d.ts, 1, 36))
 >T : Symbol(T, Decl(bindingkey.d.ts, 1, 32))
 
   static create<T extends Constructor<any>>(ctor: T): BindingKey<T>;
->create : Symbol(BindingKey.create, Decl(bindingkey.d.ts, 2, 21))
+>create : Symbol(create, Decl(bindingkey.d.ts, 2, 21))
 >T : Symbol(T, Decl(bindingkey.d.ts, 3, 16))
 >Constructor : Symbol(Constructor, Decl(bindingkey.d.ts, 0, 8))
 >ctor : Symbol(ctor, Decl(bindingkey.d.ts, 3, 44))
