--- old.privacyGloInterface.symbols
+++ new.privacyGloInterface.symbols
@@= skipped -7, +7 lines =@@
 >C1_public : Symbol(C1_public, Decl(privacyGloInterface.ts, 0, 11))
 
         private f1() {
->f1 : Symbol(C1_public.f1, Decl(privacyGloInterface.ts, 1, 28))
+>f1 : Symbol(f1, Decl(privacyGloInterface.ts, 1, 28))
         }
     }
 
@@= skipped -51, +51 lines =@@
 >C2_private : Symbol(C2_private, Decl(privacyGloInterface.ts, 4, 5))
 
         x: C1_public;
->x : Symbol(C3_public.x, Decl(privacyGloInterface.ts, 22, 32))
+>x : Symbol(x, Decl(privacyGloInterface.ts, 22, 32))
 >C1_public : Symbol(C1_public, Decl(privacyGloInterface.ts, 0, 11))
 
         y: C2_private;
->y : Symbol(C3_public.y, Decl(privacyGloInterface.ts, 24, 21))
+>y : Symbol(y, Decl(privacyGloInterface.ts, 24, 21))
 >C2_private : Symbol(C2_private, Decl(privacyGloInterface.ts, 4, 5))
 
         a?: C1_public;
->a : Symbol(C3_public.a, Decl(privacyGloInterface.ts, 25, 22))
+>a : Symbol(a, Decl(privacyGloInterface.ts, 25, 22))
 >C1_public : Symbol(C1_public, Decl(privacyGloInterface.ts, 0, 11))
 
         b?: C2_private;
->b : Symbol(C3_public.b, Decl(privacyGloInterface.ts, 27, 22))
+>b : Symbol(b, Decl(privacyGloInterface.ts, 27, 22))
 >C2_private : Symbol(C2_private, Decl(privacyGloInterface.ts, 4, 5))
 
         f1(a1: C1_public);
->f1 : Symbol(C3_public.f1, Decl(privacyGloInterface.ts, 28, 23))
+>f1 : Symbol(f1, Decl(privacyGloInterface.ts, 28, 23))
 >a1 : Symbol(a1, Decl(privacyGloInterface.ts, 30, 11))
 >C1_public : Symbol(C1_public, Decl(privacyGloInterface.ts, 0, 11))
 
         f2(a1: C2_private);
->f2 : Symbol(C3_public.f2, Decl(privacyGloInterface.ts, 30, 26))
+>f2 : Symbol(f2, Decl(privacyGloInterface.ts, 30, 26))
 >a1 : Symbol(a1, Decl(privacyGloInterface.ts, 31, 11))
 >C2_private : Symbol(C2_private, Decl(privacyGloInterface.ts, 4, 5))
 
         f3(): C1_public;
->f3 : Symbol(C3_public.f3, Decl(privacyGloInterface.ts, 31, 27))
+>f3 : Symbol(f3, Decl(privacyGloInterface.ts, 31, 27))
 >C1_public : Symbol(C1_public, Decl(privacyGloInterface.ts, 0, 11))
 
         f4(): C2_private;
->f4 : Symbol(C3_public.f4, Decl(privacyGloInterface.ts, 32, 24))
+>f4 : Symbol(f4, Decl(privacyGloInterface.ts, 32, 24))
 >C2_private : Symbol(C2_private, Decl(privacyGloInterface.ts, 4, 5))
 
     }
@@= skipped -77, +77 lines =@@
 >C2_private : Symbol(C2_private, Decl(privacyGloInterface.ts, 4, 5))
 
         x: C1_public;
->x : Symbol(C4_private.x, Decl(privacyGloInterface.ts, 49, 32))
+>x : Symbol(x, Decl(privacyGloInterface.ts, 49, 32))
 >C1_public : Symbol(C1_public, Decl(privacyGloInterface.ts, 0, 11))
 
         y: C2_private;
->y : Symbol(C4_private.y, Decl(privacyGloInterface.ts, 51, 21))
+>y : Symbol(y, Decl(privacyGloInterface.ts, 51, 21))
 >C2_private : Symbol(C2_private, Decl(privacyGloInterface.ts, 4, 5))
 
         a?: C1_public;
->a : Symbol(C4_private.a, Decl(privacyGloInterface.ts, 52, 22))
+>a : Symbol(a, Decl(privacyGloInterface.ts, 52, 22))
 >C1_public : Symbol(C1_public, Decl(privacyGloInterface.ts, 0, 11))
 
         b?: C2_private;
->b : Symbol(C4_private.b, Decl(privacyGloInterface.ts, 54, 22))
+>b : Symbol(b, Decl(privacyGloInterface.ts, 54, 22))
 >C2_private : Symbol(C2_private, Decl(privacyGloInterface.ts, 4, 5))
 
         f1(a1: C1_public);
->f1 : Symbol(C4_private.f1, Decl(privacyGloInterface.ts, 55, 23))
+>f1 : Symbol(f1, Decl(privacyGloInterface.ts, 55, 23))
 >a1 : Symbol(a1, Decl(privacyGloInterface.ts, 57, 11))
 >C1_public : Symbol(C1_public, Decl(privacyGloInterface.ts, 0, 11))
 
         f2(a1: C2_private);
->f2 : Symbol(C4_private.f2, Decl(privacyGloInterface.ts, 57, 26))
+>f2 : Symbol(f2, Decl(privacyGloInterface.ts, 57, 26))
 >a1 : Symbol(a1, Decl(privacyGloInterface.ts, 58, 11))
 >C2_private : Symbol(C2_private, Decl(privacyGloInterface.ts, 4, 5))
 
         f3(): C1_public;
->f3 : Symbol(C4_private.f3, Decl(privacyGloInterface.ts, 58, 27))
+>f3 : Symbol(f3, Decl(privacyGloInterface.ts, 58, 27))
 >C1_public : Symbol(C1_public, Decl(privacyGloInterface.ts, 0, 11))
 
         f4(): C2_private;
->f4 : Symbol(C4_private.f4, Decl(privacyGloInterface.ts, 59, 24))
+>f4 : Symbol(f4, Decl(privacyGloInterface.ts, 59, 24))
 >C2_private : Symbol(C2_private, Decl(privacyGloInterface.ts, 4, 5))
 
     }
@@= skipped -40, +40 lines =@@
 >C5_public : Symbol(C5_public, Decl(privacyGloInterface.ts, 63, 1))
 
     private f1() {
->f1 : Symbol(C5_public.f1, Decl(privacyGloInterface.ts, 65, 17))
+>f1 : Symbol(f1, Decl(privacyGloInterface.ts, 65, 17))
     }
 }
 
@@= skipped -27, +27 lines =@@
 >C5_public : Symbol(C5_public, Decl(privacyGloInterface.ts, 63, 1))
 
     x: C5_public;
->x : Symbol(C7_public.x, Decl(privacyGloInterface.ts, 78, 27))
+>x : Symbol(x, Decl(privacyGloInterface.ts, 78, 27))
 >C5_public : Symbol(C5_public, Decl(privacyGloInterface.ts, 63, 1))
 
     a?: C5_public;
->a : Symbol(C7_public.a, Decl(privacyGloInterface.ts, 80, 17))
+>a : Symbol(a, Decl(privacyGloInterface.ts, 80, 17))
 >C5_public : Symbol(C5_public, Decl(privacyGloInterface.ts, 63, 1))
 
     f1(a1: C5_public);
->f1 : Symbol(C7_public.f1, Decl(privacyGloInterface.ts, 82, 18))
+>f1 : Symbol(f1, Decl(privacyGloInterface.ts, 82, 18))
 >a1 : Symbol(a1, Decl(privacyGloInterface.ts, 84, 7))
 >C5_public : Symbol(C5_public, Decl(privacyGloInterface.ts, 63, 1))
 
     f3(): C5_public;
->f3 : Symbol(C7_public.f3, Decl(privacyGloInterface.ts, 84, 22))
+>f3 : Symbol(f3, Decl(privacyGloInterface.ts, 84, 22))
 >C5_public : Symbol(C5_public, Decl(privacyGloInterface.ts, 63, 1))
 }
 
@@= skipped -24, +24 lines =@@
 >m3_i_public : Symbol(m3_i_public, Decl(privacyGloInterface.ts, 88, 11))
 
         f1(): number;
->f1 : Symbol(m3_i_public.f1, Decl(privacyGloInterface.ts, 89, 34))
+>f1 : Symbol(f1, Decl(privacyGloInterface.ts, 89, 34))
     }
 
     interface m3_i_private {
 >m3_i_private : Symbol(m3_i_private, Decl(privacyGloInterface.ts, 91, 5))
 
         f2(): string;
->f2 : Symbol(m3_i_private.f2, Decl(privacyGloInterface.ts, 93, 28))
+>f2 : Symbol(f2, Decl(privacyGloInterface.ts, 93, 28))
     }
 
     interface m3_C1_private extends m3_i_public {
@@= skipped -43, +43 lines =@@
 >glo_i_public : Symbol(glo_i_public, Decl(privacyGloInterface.ts, 110, 1))
 
     f1(): number;
->f1 : Symbol(glo_i_public.f1, Decl(privacyGloInterface.ts, 112, 24))
+>f1 : Symbol(f1, Decl(privacyGloInterface.ts, 112, 24))
 }
 
 interface glo_C3_public extends glo_i_public {
