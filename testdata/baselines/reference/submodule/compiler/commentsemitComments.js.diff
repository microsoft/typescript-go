--- old.commentsemitComments.js
+++ new.commentsemitComments.js
@@= skipped -102, +102 lines =@@
 class c {
     /** constructor comment*/
     constructor() {
-        /** property comment */
-        this.b = 10;
     }
+    /** property comment */
+    b = 10;
     /** function comment */
     myFoo() {
         return this.b;
@@= skipped -29, +29 lines =@@
 (function (m1) {
     /** class b */
     class b {
+        x;
         constructor(x) {
             this.x = x;
         }
@@= skipped -15, +16 lines =@@
 declare function foo(/** parameter comment*/ p: number): void;
 /** variable with function type comment*/
 declare var fooVar: () => void;
-/**class comment*/
 declare class c {
-    /** constructor comment*/
     constructor();
-    /** property comment */
     b: number;
-    /** function comment */
     myFoo(): number;
-    /** getter comment*/
     get prop1(): number;
-    /** setter comment*/
     set prop1(val: number);
-    /** overload signature1*/
     foo1(a: number): string;
-    /** Overload signature 2*/
     foo1(b: string): string;
 }
 /**instance comment*/
@@= skipped -36, +28 lines =@@
 declare var i1_i: i1;
 /** this is module comment*/
 declare namespace m1 {
-    /** class b */
     class b {
         x: number;
         constructor(x: number);
     }
+    /// module m2
     namespace m2 {
     }
 }
+/// this is x
 declare var x: any;