--- old.subSubClassCanAccessProtectedConstructor.symbols
+++ new.subSubClassCanAccessProtectedConstructor.symbols
@@= skipped -5, +5 lines =@@
 
     protected constructor() { }
     public instance1 = new Base(); // allowed
->instance1 : Symbol(Base.instance1, Decl(subSubClassCanAccessProtectedConstructor.ts, 1, 31))
+>instance1 : Symbol(instance1, Decl(subSubClassCanAccessProtectedConstructor.ts, 1, 31))
 >Base : Symbol(Base, Decl(subSubClassCanAccessProtectedConstructor.ts, 0, 0))
 }
 
@@= skipped -9, +9 lines =@@
 >Base : Symbol(Base, Decl(subSubClassCanAccessProtectedConstructor.ts, 0, 0))
 
     public instance1_1 = new Base(); // allowed
->instance1_1 : Symbol(Subclass.instance1_1, Decl(subSubClassCanAccessProtectedConstructor.ts, 5, 29))
+>instance1_1 : Symbol(instance1_1, Decl(subSubClassCanAccessProtectedConstructor.ts, 5, 29))
 >Base : Symbol(Base, Decl(subSubClassCanAccessProtectedConstructor.ts, 0, 0))
 
     public instance1_2 = new Subclass(); // allowed
->instance1_2 : Symbol(Subclass.instance1_2, Decl(subSubClassCanAccessProtectedConstructor.ts, 6, 36))
+>instance1_2 : Symbol(instance1_2, Decl(subSubClassCanAccessProtectedConstructor.ts, 6, 36))
 >Subclass : Symbol(Subclass, Decl(subSubClassCanAccessProtectedConstructor.ts, 3, 1))
 }
 
@@= skipped -13, +13 lines =@@
 >Subclass : Symbol(Subclass, Decl(subSubClassCanAccessProtectedConstructor.ts, 3, 1))
 
     public instance2_1 = new Base(); // allowed
->instance2_1 : Symbol(SubclassOfSubclass.instance2_1, Decl(subSubClassCanAccessProtectedConstructor.ts, 10, 43))
+>instance2_1 : Symbol(instance2_1, Decl(subSubClassCanAccessProtectedConstructor.ts, 10, 43))
 >Base : Symbol(Base, Decl(subSubClassCanAccessProtectedConstructor.ts, 0, 0))
 
     public instance2_2 = new Subclass(); // allowed
->instance2_2 : Symbol(SubclassOfSubclass.instance2_2, Decl(subSubClassCanAccessProtectedConstructor.ts, 11, 36))
+>instance2_2 : Symbol(instance2_2, Decl(subSubClassCanAccessProtectedConstructor.ts, 11, 36))
 >Subclass : Symbol(Subclass, Decl(subSubClassCanAccessProtectedConstructor.ts, 3, 1))
 
     public instance2_3 = new SubclassOfSubclass(); // allowed
->instance2_3 : Symbol(SubclassOfSubclass.instance2_3, Decl(subSubClassCanAccessProtectedConstructor.ts, 12, 40))
+>instance2_3 : Symbol(instance2_3, Decl(subSubClassCanAccessProtectedConstructor.ts, 12, 40))
 >SubclassOfSubclass : Symbol(SubclassOfSubclass, Decl(subSubClassCanAccessProtectedConstructor.ts, 8, 1))
 }
 
