--- old.infinitelyExpandingTypes2.symbols
+++ new.infinitelyExpandingTypes2.symbols
@@= skipped -5, +5 lines =@@
 >T : Symbol(T, Decl(infinitelyExpandingTypes2.ts, 0, 14))
 
     x: Foo<Foo<T>>;
->x : Symbol(Foo.x, Decl(infinitelyExpandingTypes2.ts, 0, 18))
+>x : Symbol(x, Decl(infinitelyExpandingTypes2.ts, 0, 18))
 >Foo : Symbol(Foo, Decl(infinitelyExpandingTypes2.ts, 0, 0))
 >Foo : Symbol(Foo, Decl(infinitelyExpandingTypes2.ts, 0, 0))
 >T : Symbol(T, Decl(infinitelyExpandingTypes2.ts, 0, 14))
@@= skipped -13, +13 lines =@@
 >T : Symbol(T, Decl(infinitelyExpandingTypes2.ts, 4, 14))
 
     y: string;
->y : Symbol(Bar.y, Decl(infinitelyExpandingTypes2.ts, 4, 33))
+>y : Symbol(y, Decl(infinitelyExpandingTypes2.ts, 4, 33))
 }
 
 function f(p: Foo<number>) {
@@= skipped -9, +9 lines =@@
 >Foo : Symbol(Foo, Decl(infinitelyExpandingTypes2.ts, 0, 0))
 
     console.log(p);
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >p : Symbol(p, Decl(infinitelyExpandingTypes2.ts, 8, 11))
 }
 
