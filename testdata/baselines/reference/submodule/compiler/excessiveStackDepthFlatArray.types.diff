--- old.excessiveStackDepthFlatArray.types
+++ new.excessiveStackDepthFlatArray.types
@@= skipped -0, +0 lines =@@
 //// [tests/cases/compiler/excessiveStackDepthFlatArray.ts] ////
 
-=== Performance Stats ===
-Type Count: 1,000
-Instantiation count: 2,500
-
 === index.tsx ===
 interface MiddlewareArray<T> extends Array<T> {}
+>MiddlewareArray : MiddlewareArray<T>
+>T : T
+
 declare function configureStore(options: { middleware: MiddlewareArray<any> }): void;
 >configureStore : (options: { middleware: MiddlewareArray<any>; }) => void
 >options : { middleware: MiddlewareArray<any>; }
@@= skipped -27, +26 lines =@@
 });
 
 declare namespace React {
+>React : any
+
   type DetailedHTMLProps<E extends HTMLAttributes<T>, T> = E;
 >DetailedHTMLProps : E
+>E : E
+>T : T
 
   interface HTMLAttributes<T> {
+>HTMLAttributes : HTMLAttributes<T>
+>T : T
+
     children?: ReactNode;
 >children : ReactNode
   }
@@= skipped -20, +27 lines =@@
 >ReactFragment : ReactFragment
 
   interface ReactNodeArray extends Array<ReactNode> {}
+>ReactNodeArray : ReactNodeArray
 }
 declare namespace JSX {
+>JSX : any
+
   interface IntrinsicElements {
+>IntrinsicElements : IntrinsicElements
+
     ul: React.DetailedHTMLProps<React.HTMLAttributes<HTMLUListElement>, HTMLUListElement>;
->ul : React.HTMLAttributes<HTMLUListElement>
+>ul : HTMLAttributes<HTMLUListElement>
 >React : any
 >React : any
 
     li: React.DetailedHTMLProps<React.HTMLAttributes<HTMLLIElement>, HTMLLIElement>;
->li : React.HTMLAttributes<HTMLLIElement>
+>li : HTMLAttributes<HTMLLIElement>
 >React : any
 >React : any
   }
@@= skipped -51, +56 lines =@@
         <li key={category}>{category}</li> // Error about 'key' only
 ><li key={category}>{category}</li> : any
 >li : any
->key : string
+>key : any
 >category : string
 >category : string
 >li : any
