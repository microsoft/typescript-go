--- old.superPropertyAccess_ES6.errors.txt
+++ new.superPropertyAccess_ES6.errors.txt
@@= skipped -0, +-1 lines =@@
-<no content>
@@= skipped --1, +1 lines =@@
+error TS2318: Cannot find global type 'Array'.
+error TS2318: Cannot find global type 'Function'.
+error TS2318: Cannot find global type 'IArguments'.
+error TS2318: Cannot find global type 'RegExp'.
+error TS2318: Cannot find global type 'String'.
+error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
+error TS2552: Cannot find name 'Number'. Did you mean 'number'?
+error TS2552: Cannot find name 'Object'. Did you mean 'object'?
+
+
+!!! error TS2318: Cannot find global type 'Array'.
+!!! error TS2318: Cannot find global type 'Function'.
+!!! error TS2318: Cannot find global type 'IArguments'.
+!!! error TS2318: Cannot find global type 'RegExp'.
+!!! error TS2318: Cannot find global type 'String'.
+!!! error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
+!!! error TS2552: Cannot find name 'Number'. Did you mean 'number'?
+!!! error TS2552: Cannot find name 'Object'. Did you mean 'object'?
+==== superPropertyAccess_ES6.ts (0 errors) ====
+    class MyBase {
+      getValue(): number { return 1; }
+      get value(): number { return 1; }
+    }
+    
+    class MyDerived extends MyBase {
+      constructor() {
+        super();
+    
+        const f1 = super.getValue();
+        const f2 = super.value;
+      }
+    }
+    
+    var d = new MyDerived();
+    var f3 = d.value;
+    
+    class A {
+        private _property: string;
+        get property() { return this._property; }
+        set property(value: string) { this._property = value }
+    }
+    
+    class B extends A {
+        set property(value: string) {
+            super.property = value + " addition";
+        }
+    }
