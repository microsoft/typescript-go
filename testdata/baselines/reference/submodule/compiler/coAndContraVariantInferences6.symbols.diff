--- old.coAndContraVariantInferences6.symbols
+++ new.coAndContraVariantInferences6.symbols
@@ -7,7 +7,7 @@
 >ExactProps : Symbol(ExactProps, Decl(coAndContraVariantInferences6.ts, 0, 0))
 
   value: "A" | "B";
->value : Symbol(ExactProps.value, Decl(coAndContraVariantInferences6.ts, 2, 22))
+>value : Symbol(value, Decl(coAndContraVariantInferences6.ts, 2, 22))
 }
 interface FunctionComponent<P = {}> {
 >FunctionComponent : Symbol(FunctionComponent, Decl(coAndContraVariantInferences6.ts, 4, 1))
@@ -50,7 +50,7 @@
 
 > {
   type: T;
->type : Symbol(ReactElement.type, Decl(coAndContraVariantInferences6.ts, 19, 3))
+>type : Symbol(type, Decl(coAndContraVariantInferences6.ts, 19, 3))
 >T : Symbol(T, Decl(coAndContraVariantInferences6.ts, 15, 23))
 }
 
@@ -102,10 +102,10 @@
 >stat : Symbol(stat, Decl(coAndContraVariantInferences6.ts, 36, 13))
 
 [].push.apply(props, stat.properties);
->[].push.apply : Symbol(CallableFunction.apply, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->[].push : Symbol(Array.push, Decl(lib.es5.d.ts, --, --))
->push : Symbol(Array.push, Decl(lib.es5.d.ts, --, --))
->apply : Symbol(CallableFunction.apply, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
+>[].push.apply : Symbol(apply, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
+>[].push : Symbol(push, Decl(lib.es5.d.ts, --, --))
+>push : Symbol(push, Decl(lib.es5.d.ts, --, --))
+>apply : Symbol(apply, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 >props : Symbol(props, Decl(coAndContraVariantInferences6.ts, 35, 13))
 >stat : Symbol(stat, Decl(coAndContraVariantInferences6.ts, 36, 13))
 
