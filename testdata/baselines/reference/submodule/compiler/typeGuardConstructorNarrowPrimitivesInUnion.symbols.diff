--- old.typeGuardConstructorNarrowPrimitivesInUnion.symbols
+++ new.typeGuardConstructorNarrowPrimitivesInUnion.symbols
@@= skipped -5, +5 lines =@@
 >var1 : Symbol(var1, Decl(typeGuardConstructorNarrowPrimitivesInUnion.ts, 1, 3))
 
 if (var1.constructor === Number) {
->var1.constructor : Symbol(Object.constructor, Decl(lib.es5.d.ts, --, --))
+>var1.constructor : Symbol(constructor, Decl(lib.es5.d.ts, --, --))
 >var1 : Symbol(var1, Decl(typeGuardConstructorNarrowPrimitivesInUnion.ts, 1, 3))
->constructor : Symbol(Object.constructor, Decl(lib.es5.d.ts, --, --))
+>constructor : Symbol(constructor, Decl(lib.es5.d.ts, --, --))
 >Number : Symbol(Number, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 
     var1; // number
@@= skipped -10, +10 lines =@@
 }
 
 if (var1.constructor === String) {
->var1.constructor : Symbol(Object.constructor, Decl(lib.es5.d.ts, --, --))
+>var1.constructor : Symbol(constructor, Decl(lib.es5.d.ts, --, --))
 >var1 : Symbol(var1, Decl(typeGuardConstructorNarrowPrimitivesInUnion.ts, 1, 3))
->constructor : Symbol(Object.constructor, Decl(lib.es5.d.ts, --, --))
+>constructor : Symbol(constructor, Decl(lib.es5.d.ts, --, --))
 >String : Symbol(String, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 
     var1; // "hello" | "world"
@@= skipped -10, +10 lines =@@
 }
 
 if (var1.constructor === Boolean) {
->var1.constructor : Symbol(Object.constructor, Decl(lib.es5.d.ts, --, --))
+>var1.constructor : Symbol(constructor, Decl(lib.es5.d.ts, --, --))
 >var1 : Symbol(var1, Decl(typeGuardConstructorNarrowPrimitivesInUnion.ts, 1, 3))
->constructor : Symbol(Object.constructor, Decl(lib.es5.d.ts, --, --))
+>constructor : Symbol(constructor, Decl(lib.es5.d.ts, --, --))
 >Boolean : Symbol(Boolean, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 
     var1; // boolean
@@= skipped -10, +10 lines =@@
 }
 
 if (var1.constructor === Array) {
->var1.constructor : Symbol(Object.constructor, Decl(lib.es5.d.ts, --, --))
+>var1.constructor : Symbol(constructor, Decl(lib.es5.d.ts, --, --))
 >var1 : Symbol(var1, Decl(typeGuardConstructorNarrowPrimitivesInUnion.ts, 1, 3))
->constructor : Symbol(Object.constructor, Decl(lib.es5.d.ts, --, --))
+>constructor : Symbol(constructor, Decl(lib.es5.d.ts, --, --))
 >Array : Symbol(Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 
     var1; // number[] | string[]
