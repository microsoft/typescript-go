--- old.declarationEmitTypeofRest.errors.txt
+++ new.declarationEmitTypeofRest.errors.txt
@@= skipped -0, +0 lines =@@
-v2.ts(2,14): error TS2527: The inferred type of 'v2' references an inaccessible 'unique symbol' type. A type annotation is necessary.
+error TS2318: Cannot find global type 'Array'.
+error TS2318: Cannot find global type 'Function'.
+error TS2318: Cannot find global type 'IArguments'.
+error TS2318: Cannot find global type 'RegExp'.
+error TS2318: Cannot find global type 'String'.
+error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
+error TS2552: Cannot find name 'Number'. Did you mean 'number'?
+error TS2552: Cannot find name 'Object'. Did you mean 'object'?
+v2.ts(1,11): error TS2304: Cannot find name 'Symbol'.
 
 
+!!! error TS2318: Cannot find global type 'Array'.
+!!! error TS2318: Cannot find global type 'Function'.
+!!! error TS2318: Cannot find global type 'IArguments'.
+!!! error TS2318: Cannot find global type 'RegExp'.
+!!! error TS2318: Cannot find global type 'String'.
+!!! error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
+!!! error TS2552: Cannot find name 'Number'. Did you mean 'number'?
+!!! error TS2552: Cannot find name 'Object'. Did you mean 'object'?
 ==== v1.ts (0 errors) ====
     export const v1 = (...a: [n: "n", a: "a"]): {
         /** r rest param */
@@= skipped -10, +26 lines =@@
     
 ==== v2.ts (1 errors) ====
     const n = Symbol();
+              ~~~~~~
+!!! error TS2304: Cannot find name 'Symbol'.
     export const v2 = (...a: [n: "n", a: "a"]): {
-                 ~~
-!!! error TS2527: The inferred type of 'v2' references an inaccessible 'unique symbol' type. A type annotation is necessary.
         /** r rest param */
         a: typeof a,
         /** module var */
