--- old.genericCloneReturnTypes.symbols
+++ new.genericCloneReturnTypes.symbols
@@= skipped -5, +5 lines =@@
 >T : Symbol(T, Decl(genericCloneReturnTypes.ts, 0, 10))
 
     public size: number;
->size : Symbol(Bar.size, Decl(genericCloneReturnTypes.ts, 0, 14))
+>size : Symbol(size, Decl(genericCloneReturnTypes.ts, 0, 14))
 
     public t: T;
->t : Symbol(Bar.t, Decl(genericCloneReturnTypes.ts, 2, 24))
+>t : Symbol(t, Decl(genericCloneReturnTypes.ts, 2, 24))
 >T : Symbol(T, Decl(genericCloneReturnTypes.ts, 0, 10))
 
     constructor(x: number) {
 >x : Symbol(x, Decl(genericCloneReturnTypes.ts, 5, 16))
 
         this.size = x;
->this.size : Symbol(Bar.size, Decl(genericCloneReturnTypes.ts, 0, 14))
+>this.size : Symbol(size, Decl(genericCloneReturnTypes.ts, 0, 14))
 >this : Symbol(Bar, Decl(genericCloneReturnTypes.ts, 0, 0))
->size : Symbol(Bar.size, Decl(genericCloneReturnTypes.ts, 0, 14))
+>size : Symbol(size, Decl(genericCloneReturnTypes.ts, 0, 14))
 >x : Symbol(x, Decl(genericCloneReturnTypes.ts, 5, 16))
 
     }
 
     public clone() {
->clone : Symbol(Bar.clone, Decl(genericCloneReturnTypes.ts, 9, 5))
+>clone : Symbol(clone, Decl(genericCloneReturnTypes.ts, 9, 5))
 
         return new Bar<T>(this.size);
 >Bar : Symbol(Bar, Decl(genericCloneReturnTypes.ts, 0, 0))
 >T : Symbol(T, Decl(genericCloneReturnTypes.ts, 0, 10))
->this.size : Symbol(Bar.size, Decl(genericCloneReturnTypes.ts, 0, 14))
+>this.size : Symbol(size, Decl(genericCloneReturnTypes.ts, 0, 14))
 >this : Symbol(Bar, Decl(genericCloneReturnTypes.ts, 0, 0))
->size : Symbol(Bar.size, Decl(genericCloneReturnTypes.ts, 0, 14))
+>size : Symbol(size, Decl(genericCloneReturnTypes.ts, 0, 14))
 
     }
 
@@= skipped -37, +37 lines =@@
 
 var b2 = b.clone();
 >b2 : Symbol(b2, Decl(genericCloneReturnTypes.ts, 21, 3))
->b.clone : Symbol(Bar.clone, Decl(genericCloneReturnTypes.ts, 9, 5))
+>b.clone : Symbol(clone, Decl(genericCloneReturnTypes.ts, 9, 5))
 >b : Symbol(b, Decl(genericCloneReturnTypes.ts, 19, 3))
->clone : Symbol(Bar.clone, Decl(genericCloneReturnTypes.ts, 9, 5))
+>clone : Symbol(clone, Decl(genericCloneReturnTypes.ts, 9, 5))
 
 var b3: Bar<string>;
 >b3 : Symbol(b3, Decl(genericCloneReturnTypes.ts, 22, 3))
