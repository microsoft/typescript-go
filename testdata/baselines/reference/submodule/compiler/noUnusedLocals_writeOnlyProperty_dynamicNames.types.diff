--- old.noUnusedLocals_writeOnlyProperty_dynamicNames.types
+++ new.noUnusedLocals_writeOnlyProperty_dynamicNames.types
@@= skipped -2, +2 lines =@@
 === noUnusedLocals_writeOnlyProperty_dynamicNames.ts ===
 const x = Symbol("x");
 >x : unique symbol
->  : ^^^^^^^^^^^^^
 >Symbol("x") : unique symbol
->            : ^^^^^^^^^^^^^
 >Symbol : SymbolConstructor
->       : ^^^^^^^^^^^^^^^^^
 >"x" : "x"
->    : ^^^
 
 const y = Symbol("y");
 >y : unique symbol
->  : ^^^^^^^^^^^^^
 >Symbol("y") : unique symbol
->            : ^^^^^^^^^^^^^
 >Symbol : SymbolConstructor
->       : ^^^^^^^^^^^^^^^^^
 >"y" : "y"
->    : ^^^
 
 class C {
 >C : C
->  : ^
 
     private [x]: number;
 >[x] : number
->    : ^^^^^^
 >x : unique symbol
->  : ^^^^^^^^^^^^^
 
     private [y]: number;
 >[y] : number
->    : ^^^^^^
 >y : unique symbol
->  : ^^^^^^^^^^^^^
 
     m() {
 >m : () => void
->  : ^^^^^^^^^^
 
         this[x] = 0; // write-only
 >this[x] = 0 : 0
->            : ^
 >this[x] : number
->        : ^^^^^^
 >this : this
->     : ^^^^
 >x : unique symbol
->  : ^^^^^^^^^^^^^
 >0 : 0
->  : ^
 
         this[y];
 >this[y] : number
->        : ^^^^^^
 >this : this
->     : ^^^^
 >y : unique symbol
->  : ^^^^^^^^^^^^^
     }
 }
 
