--- old.unionOfEnumInference.symbols
+++ new.unionOfEnumInference.symbols
@@ -5,9 +5,9 @@
 
 enum Enum { A, B, C }
 >Enum : Symbol(Enum, Decl(unionOfEnumInference.ts, 0, 0))
->A : Symbol(Enum.A, Decl(unionOfEnumInference.ts, 2, 11))
->B : Symbol(Enum.B, Decl(unionOfEnumInference.ts, 2, 14))
->C : Symbol(Enum.C, Decl(unionOfEnumInference.ts, 2, 17))
+>A : Symbol(A, Decl(unionOfEnumInference.ts, 2, 11))
+>B : Symbol(B, Decl(unionOfEnumInference.ts, 2, 14))
+>C : Symbol(C, Decl(unionOfEnumInference.ts, 2, 17))
 
 interface Interface<T extends Enum> {
 >Interface : Symbol(Interface, Decl(unionOfEnumInference.ts, 2, 21))
@@ -15,7 +15,7 @@
 >Enum : Symbol(Enum, Decl(unionOfEnumInference.ts, 0, 0))
 
 	type: T;
->type : Symbol(Interface.type, Decl(unionOfEnumInference.ts, 4, 37))
+>type : Symbol(type, Decl(unionOfEnumInference.ts, 4, 37))
 >T : Symbol(T, Decl(unionOfEnumInference.ts, 4, 20))
 }
 
@@ -32,12 +32,12 @@
 >x : Symbol(x, Decl(unionOfEnumInference.ts, 10, 13))
 >Interface : Symbol(Interface, Decl(unionOfEnumInference.ts, 2, 21))
 >Enum : Symbol(Enum, Decl(unionOfEnumInference.ts, 0, 0))
->A : Symbol(Enum.A, Decl(unionOfEnumInference.ts, 2, 11))
+>A : Symbol(A, Decl(unionOfEnumInference.ts, 2, 11))
 >Enum : Symbol(Enum, Decl(unionOfEnumInference.ts, 0, 0))
->B : Symbol(Enum.B, Decl(unionOfEnumInference.ts, 2, 14))
+>B : Symbol(B, Decl(unionOfEnumInference.ts, 2, 14))
 >Interface : Symbol(Interface, Decl(unionOfEnumInference.ts, 2, 21))
 >Enum : Symbol(Enum, Decl(unionOfEnumInference.ts, 0, 0))
->C : Symbol(Enum.C, Decl(unionOfEnumInference.ts, 2, 17))
+>C : Symbol(C, Decl(unionOfEnumInference.ts, 2, 17))
 
 	foo(x);
 >foo : Symbol(foo, Decl(unionOfEnumInference.ts, 6, 1))
