--- old.isolatedDeclarationsAddUndefined2.symbols
+++ new.isolatedDeclarationsAddUndefined2.symbols
@@= skipped -6, +6 lines =@@
 >Bar : Symbol(Bar, Decl(isolatedDeclarationsAddUndefined2.ts, 0, 0))

     constructor(private x?: Array | undefined) {}
->x : Symbol(Bar.x, Decl(isolatedDeclarationsAddUndefined2.ts, 3, 16))
+>x : Symbol(x, Decl(isolatedDeclarationsAddUndefined2.ts, 3, 16))
 >Array : Symbol(Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 }

@@= skipped -8, +8 lines =@@
 >Bar2 : Symbol(Bar2, Decl(isolatedDeclarationsAddUndefined2.ts, 4, 1))

     constructor(private x?: Array) {}
->x : Symbol(Bar2.x, Decl(isolatedDeclarationsAddUndefined2.ts, 7, 16))
+>x : Symbol(x, Decl(isolatedDeclarationsAddUndefined2.ts, 7, 16))
 >Array : Symbol(Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 }

@@= skipped -8, +8 lines =@@
 >Bar3 : Symbol(Bar3, Decl(isolatedDeclarationsAddUndefined2.ts, 8, 1))

     constructor(private x: Array | undefined) {}
->x : Symbol(Bar3.x, Decl(isolatedDeclarationsAddUndefined2.ts, 11, 16))
+>x : Symbol(x, Decl(isolatedDeclarationsAddUndefined2.ts, 11, 16))
 >Array : Symbol(Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 }

@@= skipped -8, +8 lines =@@
 >Bar4 : Symbol(Bar4, Decl(isolatedDeclarationsAddUndefined2.ts, 12, 1))

     constructor(private x: Array) {}
->x : Symbol(Bar4.x, Decl(isolatedDeclarationsAddUndefined2.ts, 15, 16))
+>x : Symbol(x, Decl(isolatedDeclarationsAddUndefined2.ts, 15, 16))
 >Array : Symbol(Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 }
