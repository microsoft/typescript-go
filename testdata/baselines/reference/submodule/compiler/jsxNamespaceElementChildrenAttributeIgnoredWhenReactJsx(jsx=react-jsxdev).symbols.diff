--- old.jsxNamespaceElementChildrenAttributeIgnoredWhenReactJsx(jsx=react-jsxdev).symbols
+++ new.jsxNamespaceElementChildrenAttributeIgnoredWhenReactJsx(jsx=react-jsxdev).symbols
@@= skipped -7, +7 lines =@@
 >IntrinsicElements : Symbol(IntrinsicElements, Decl(jsx.d.ts, 0, 23))

     h1: { children: string }
->h1 : Symbol(IntrinsicElements.h1, Decl(jsx.d.ts, 1, 31))
+>h1 : Symbol(h1, Decl(jsx.d.ts, 1, 31))
 >children : Symbol(children, Decl(jsx.d.ts, 2, 9))
   }

@@= skipped -11, +11 lines =@@
 >ElementChildrenAttribute : Symbol(ElementChildrenAttribute, Decl(jsx.d.ts, 5, 24))

     offspring: any;
->offspring : Symbol(ElementChildrenAttribute.offspring, Decl(jsx.d.ts, 7, 38))
+>offspring : Symbol(offspring, Decl(jsx.d.ts, 7, 38))
   }
 }

@@= skipped -9, +9 lines =@@
 >Title : Symbol(Title, Decl(test.tsx, 0, 5))
 >props : Symbol(props, Decl(test.tsx, 0, 15))
 >children : Symbol(children, Decl(test.tsx, 0, 23))
->h1 : Symbol(JSX.IntrinsicElements.h1, Decl(jsx.d.ts, 1, 31))
+>h1 : Symbol(h1, Decl(jsx.d.ts, 1, 31))
 >props.children : Symbol(children, Decl(test.tsx, 0, 23))
 >props : Symbol(props, Decl(test.tsx, 0, 15))
 >children : Symbol(children, Decl(test.tsx, 0, 23))
->h1 : Symbol(JSX.IntrinsicElements.h1, Decl(jsx.d.ts, 1, 31))
+>h1 : Symbol(h1, Decl(jsx.d.ts, 1, 31))

 <Title>Hello, world!</Title>;
 >Title : Symbol(Title, Decl(test.tsx, 0, 5))
@@= skipped -14, +14 lines =@@
 >Wrong : Symbol(Wrong, Decl(test.tsx, 4, 5))
 >props : Symbol(props, Decl(test.tsx, 4, 15))
 >offspring : Symbol(offspring, Decl(test.tsx, 4, 23))
->h1 : Symbol(JSX.IntrinsicElements.h1, Decl(jsx.d.ts, 1, 31))
+>h1 : Symbol(h1, Decl(jsx.d.ts, 1, 31))
 >props.offspring : Symbol(offspring, Decl(test.tsx, 4, 23))
 >props : Symbol(props, Decl(test.tsx, 4, 15))
 >offspring : Symbol(offspring, Decl(test.tsx, 4, 23))
->h1 : Symbol(JSX.IntrinsicElements.h1, Decl(jsx.d.ts, 1, 31))
+>h1 : Symbol(h1, Decl(jsx.d.ts, 1, 31))

 <Wrong>Byebye, world!</Wrong>
 >Wrong : Symbol(Wrong, Decl(test.tsx, 4, 5))