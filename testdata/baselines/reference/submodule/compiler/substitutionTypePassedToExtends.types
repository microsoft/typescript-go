//// [tests/cases/compiler/substitutionTypePassedToExtends.ts] ////

=== substitutionTypePassedToExtends.ts ===
type Foo1<A,B> = [A, B] extends unknown[][] ? Bar1<[A, B]> : 'else'
>Foo1 : Foo1<A, B>
>A : A
>B : B

type Bar1<T extends unknown[][]> = T
>Bar1 : T
>T : T

type Foo2<A> = Set<A> extends Set<unknown[]> ? Bar2<Set<A>> : 'else'
>Foo2 : Foo2<A>
>A : A

type Bar2<T extends Set<unknown[]>> = T
>Bar2 : T
>T : T

