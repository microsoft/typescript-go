//// [tests/cases/compiler/declarationEmitPartialReuseComputedProperty.ts] ////

=== a.ts ===
export const n = "A"
>n : "A"
>"A" : "A"

export const poz = 1;
>poz : 1
>1 : 1

export const neg = -1;
>neg : -1
>-1 : -1
>1 : 1

export const o = () => null! as { [n]: string, foo: string, [poz]: number, [neg]: number }
>o : () => { [neg]: number; [poz]: number; A: string; foo: string; }
>() => null! as { [n]: string, foo: string, [poz]: number, [neg]: number } : () => { [neg]: number; [poz]: number; A: string; foo: string; }
>null! as { [n]: string, foo: string, [poz]: number, [neg]: number } : { [neg]: number; [poz]: number; A: string; foo: string; }
>null! : never
>[n] : string
>n : "A"
>foo : string
>[poz] : number
>poz : 1
>[neg] : number
>neg : -1

=== b.ts ===
import { o } from "./a";
>o : () => { [neg]: number; [poz]: number; A: string; foo: string; }

export const g = o
>g : () => { [neg]: number; [poz]: number; A: string; foo: string; }
>o : () => { [neg]: number; [poz]: number; A: string; foo: string; }

