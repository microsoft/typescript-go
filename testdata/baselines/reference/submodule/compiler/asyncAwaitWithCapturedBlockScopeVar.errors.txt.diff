--- old.asyncAwaitWithCapturedBlockScopeVar.errors.txt
+++ new.asyncAwaitWithCapturedBlockScopeVar.errors.txt
@@= skipped -0, +-1 lines =@@
-<no content>
@@= skipped --1, +1 lines =@@
+asyncAwaitWithCapturedBlockScopeVar.ts(5,17): error TS2345: Argument of type '() => number' is not assignable to parameter of type 'undefined'.
+asyncAwaitWithCapturedBlockScopeVar.ts(13,17): error TS2345: Argument of type '() => number' is not assignable to parameter of type 'undefined'.
+asyncAwaitWithCapturedBlockScopeVar.ts(22,17): error TS2345: Argument of type '() => number' is not assignable to parameter of type 'undefined'.
+asyncAwaitWithCapturedBlockScopeVar.ts(31,17): error TS2345: Argument of type '() => number' is not assignable to parameter of type 'undefined'.
+
+
+==== asyncAwaitWithCapturedBlockScopeVar.ts (4 errors) ====
+    async function fn1() {
+        let ar = [];
+        for (let i = 0; i < 1; i++) {
+            await 1;
+            ar.push(() => i);
+                    ~~~~~~~
+!!! error TS2345: Argument of type '() => number' is not assignable to parameter of type 'undefined'.
+        }
+    }
+    
+    async function fn2() {
+        let ar = [];
+        for (let i = 0; i < 1; i++) {
+            await 1;
+            ar.push(() => i);
+                    ~~~~~~~
+!!! error TS2345: Argument of type '() => number' is not assignable to parameter of type 'undefined'.
+            break;
+        }
+    }
+    
+    async function fn3() {
+        let ar = [];
+        for (let i = 0; i < 1; i++) {
+            await 1;
+            ar.push(() => i);
+                    ~~~~~~~
+!!! error TS2345: Argument of type '() => number' is not assignable to parameter of type 'undefined'.
+            continue;
+        }
+    }
+    
+    async function fn4(): Promise<number> {
+        let ar = [];
+        for (let i = 0; i < 1; i++) {
+            await 1;
+            ar.push(() => i);
+                    ~~~~~~~
+!!! error TS2345: Argument of type '() => number' is not assignable to parameter of type 'undefined'.
+            return 1;
+        }
+    }
+    
