--- old.typePredicateFreshLiteralWidening.types
+++ new.typePredicateFreshLiteralWidening.types
@@= skipped -5, +5 lines =@@
 
 type Narrow<A> = (A extends Narrowable ? A : never) | ({
 >Narrow : Narrow<A>
+>A : A
 
     [K in keyof A]: Narrow<A[K]>;
+>K : K
+
 });
 
 const satisfies =
@@= skipped -9, +12 lines =@@
 
   <TWide,>() =>
 ><TWide,>() =>  <TNarrow extends TWide>(narrow: Narrow<TNarrow>) =>    narrow : <TWide>() => <TNarrow extends TWide>(narrow: Narrow<TNarrow>) => Narrow<TNarrow>
+>TWide : TWide
 
   <TNarrow extends TWide>(narrow: Narrow<TNarrow>) =>
 ><TNarrow extends TWide>(narrow: Narrow<TNarrow>) =>    narrow : <TNarrow extends TWide>(narrow: Narrow<TNarrow>) => Narrow<TNarrow>
+>TNarrow : TNarrow
 >narrow : Narrow<TNarrow>
 
     narrow;
@@= skipped -13, +15 lines =@@
 const isNotNull = <T,>(value: T | null): value is T => value !== null;
 >isNotNull : <T>(value: T | null) => value is T
 ><T,>(value: T | null): value is T => value !== null : <T>(value: T | null) => value is T
+>T : T
 >value : T | null
 >value !== null : boolean
 >value : T | null
