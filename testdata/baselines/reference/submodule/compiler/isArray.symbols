//// [tests/cases/compiler/isArray.ts] ////

=== isArray.ts ===
var maybeArray: number | number[];
>maybeArray : Symbol(maybeArray, Decl(isArray.ts, 0, 3))


if (Array.isArray(maybeArray)) {
>Array.isArray : Symbol(isArray, Decl(lib.es5.d.ts, --, --))
>Array : Symbol(Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>isArray : Symbol(isArray, Decl(lib.es5.d.ts, --, --))
>maybeArray : Symbol(maybeArray, Decl(isArray.ts, 0, 3))

    maybeArray.length; // OK
>maybeArray.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
>maybeArray : Symbol(maybeArray, Decl(isArray.ts, 0, 3))
>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
}
else {
    maybeArray.toFixed(); // OK
>maybeArray.toFixed : Symbol(toFixed, Decl(lib.es5.d.ts, --, --))
>maybeArray : Symbol(maybeArray, Decl(isArray.ts, 0, 3))
>toFixed : Symbol(toFixed, Decl(lib.es5.d.ts, --, --))
}
