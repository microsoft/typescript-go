--- old.crashInGetTextOfComputedPropertyName.symbols
+++ new.crashInGetTextOfComputedPropertyName.symbols
@@= skipped -3, +3 lines =@@
 // https://github.com/Microsoft/TypeScript/issues/29006
 export interface A { type: 'a' }
 >A : Symbol(A, Decl(crashInGetTextOfComputedPropertyName.ts, 0, 0))
->type : Symbol(A.type, Decl(crashInGetTextOfComputedPropertyName.ts, 1, 20))
+>type : Symbol(type, Decl(crashInGetTextOfComputedPropertyName.ts, 1, 20))
 
 export interface B { type: 'b' }
 >B : Symbol(B, Decl(crashInGetTextOfComputedPropertyName.ts, 1, 32))
->type : Symbol(B.type, Decl(crashInGetTextOfComputedPropertyName.ts, 2, 20))
+>type : Symbol(type, Decl(crashInGetTextOfComputedPropertyName.ts, 2, 20))
 
 export type AB = A | B
 >AB : Symbol(AB, Decl(crashInGetTextOfComputedPropertyName.ts, 2, 32))
@@= skipped -33, +33 lines =@@
 >ObjWithItems : Symbol(ObjWithItems, Decl(crashInGetTextOfComputedPropertyName.ts, 10, 14))
 
     items: {[s: string]: AB}
->items : Symbol(ObjWithItems.items, Decl(crashInGetTextOfComputedPropertyName.ts, 13, 24))
+>items : Symbol(items, Decl(crashInGetTextOfComputedPropertyName.ts, 13, 24))
 >s : Symbol(s, Decl(crashInGetTextOfComputedPropertyName.ts, 14, 13))
 >AB : Symbol(AB, Decl(crashInGetTextOfComputedPropertyName.ts, 2, 32))
 }
@@= skipped -11, +11 lines =@@
 
 const itemOk2 = objWithItems.items[itemId]
 >itemOk2 : Symbol(itemOk2, Decl(crashInGetTextOfComputedPropertyName.ts, 18, 5))
->objWithItems.items : Symbol(ObjWithItems.items, Decl(crashInGetTextOfComputedPropertyName.ts, 13, 24))
+>objWithItems.items : Symbol(items, Decl(crashInGetTextOfComputedPropertyName.ts, 13, 24))
 >objWithItems : Symbol(objWithItems, Decl(crashInGetTextOfComputedPropertyName.ts, 16, 5))
->items : Symbol(ObjWithItems.items, Decl(crashInGetTextOfComputedPropertyName.ts, 13, 24))
+>items : Symbol(items, Decl(crashInGetTextOfComputedPropertyName.ts, 13, 24))
 >itemId : Symbol(itemId, Decl(crashInGetTextOfComputedPropertyName.ts, 5, 5))
 
 typeof itemOk2 // pass
@@= skipped -10, +10 lines =@@
 
 const {
     items: { [itemId]: itemWithTSError } = {} /*happens when default value is provided*/
->items : Symbol(ObjWithItems.items, Decl(crashInGetTextOfComputedPropertyName.ts, 13, 24))
+>items : Symbol(items, Decl(crashInGetTextOfComputedPropertyName.ts, 13, 24))
 >itemId : Symbol(itemId, Decl(crashInGetTextOfComputedPropertyName.ts, 5, 5))
 >itemWithTSError : Symbol(itemWithTSError, Decl(crashInGetTextOfComputedPropertyName.ts, 22, 12))
 
