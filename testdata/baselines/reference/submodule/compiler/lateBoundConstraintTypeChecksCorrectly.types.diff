--- old.lateBoundConstraintTypeChecksCorrectly.types
+++ new.lateBoundConstraintTypeChecksCorrectly.types
@@= skipped -8, +8 lines =@@
 
 type BothProps = typeof fooProp | typeof barProp;
 >BothProps : BothProps
->fooProp : unique symbol
->barProp : unique symbol
 
 export interface Foo<T> {
+>Foo : Foo<T>
+>T : T
+
   [fooProp]: T;
 >[fooProp] : T
 >fooProp : unique symbol
@@= skipped -15, +16 lines =@@
 
 function f<T extends Foo<number>>(x: T) {
 >f : <T extends Foo<number>>(x: T) => void
+>T : T
 >x : T
 
     const abc = x[fooProp]; // expected: 'T[typeof fooProp]'
@@= skipped -13, +14 lines =@@
      */
     const def: T[typeof fooProp] = x[fooProp];
 >def : T[unique symbol]
->fooProp : unique symbol
 >x[fooProp] : number
 >x : T
 >fooProp : unique symbol
 
     const def2: T[typeof barProp] = x[barProp];
 >def2 : T[unique symbol]
->barProp : unique symbol
 >x[barProp] : string
 >x : T
 >barProp : unique symbol
