--- old.taggedTemplateStringsWithCurriedFunction.js
+++ new.taggedTemplateStringsWithCurriedFunction.js
@@= skipped -13, +13 lines =@@

 //// [taggedTemplateStringsWithCurriedFunction.js]
 // Originated from #38558
+var __assign = (this && this.__assign) || function () {
+    __assign = Object.assign || function(t) {
+        for (var s, i = 1, n = arguments.length; i < n; i++) {
+            s = arguments[i];
+            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
+                t[p] = s[p];
+        }
+        return t;
+    };
+    return __assign.apply(this, arguments);
+};
 const f = _ => (..._) => "";
-f(Object.assign({ x: 0 })) ``;
-f(Object.assign({ x: 0 })) `x`;
-f(Object.assign({ x: 0 })) `x${f}x`;
-f(Object.assign({ x: 0 }, { y: (() => 1)() })) ``;
-f(Object.assign({ x: (() => 1)() }, { y: 1 })) ``;
+f(__assign({ x: 0 })) ``;
+f(__assign({ x: 0 })) `x`;
+f(__assign({ x: 0 })) `x${f}x`;
+f(__assign({ x: 0 }, { y: (() => 1)() })) ``;
+f(__assign({ x: (() => 1)() }, { y: 1 })) ``;