--- old.forOfTransformsExpression.symbols
+++ new.forOfTransformsExpression.symbols
@@= skipped -9, +9 lines =@@
 
 for (var item of items.sort((a, b) => a.name.localeCompare(b.name))) {
 >item : Symbol(item, Decl(forOfTransformsExpression.ts, 2, 8))
->items.sort : Symbol(Array.sort, Decl(lib.es5.d.ts, --, --))
+>items.sort : Symbol(sort, Decl(lib.es5.d.ts, --, --))
 >items : Symbol(items, Decl(forOfTransformsExpression.ts, 1, 3))
->sort : Symbol(Array.sort, Decl(lib.es5.d.ts, --, --))
+>sort : Symbol(sort, Decl(lib.es5.d.ts, --, --))
 >a : Symbol(a, Decl(forOfTransformsExpression.ts, 2, 29))
 >b : Symbol(b, Decl(forOfTransformsExpression.ts, 2, 31))
->a.name.localeCompare : Symbol(String.localeCompare, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
+>a.name.localeCompare : Symbol(localeCompare, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 >a.name : Symbol(name, Decl(forOfTransformsExpression.ts, 1, 14))
 >a : Symbol(a, Decl(forOfTransformsExpression.ts, 2, 29))
 >name : Symbol(name, Decl(forOfTransformsExpression.ts, 1, 14))
->localeCompare : Symbol(String.localeCompare, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
+>localeCompare : Symbol(localeCompare, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 >b.name : Symbol(name, Decl(forOfTransformsExpression.ts, 1, 14))
 >b : Symbol(b, Decl(forOfTransformsExpression.ts, 2, 31))
 >name : Symbol(name, Decl(forOfTransformsExpression.ts, 1, 14))
