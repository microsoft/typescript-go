--- old.collisionCodeGenModuleWithModuleReopening.symbols
+++ new.collisionCodeGenModuleWithModuleReopening.symbols
@@= skipped -9, +9 lines =@@
 }
 var foo = new m1.m1();
 >foo : Symbol(foo, Decl(collisionCodeGenModuleWithModuleReopening.ts, 4, 3))
->m1.m1 : Symbol(m1.m1, Decl(collisionCodeGenModuleWithModuleReopening.ts, 0, 11))
+>m1.m1 : Symbol(m1, Decl(collisionCodeGenModuleWithModuleReopening.ts, 0, 11))
 >m1 : Symbol(m1, Decl(collisionCodeGenModuleWithModuleReopening.ts, 0, 0), Decl(collisionCodeGenModuleWithModuleReopening.ts, 4, 22))
->m1 : Symbol(m1.m1, Decl(collisionCodeGenModuleWithModuleReopening.ts, 0, 11))
+>m1 : Symbol(m1, Decl(collisionCodeGenModuleWithModuleReopening.ts, 0, 11))
 
 module m1 {
 >m1 : Symbol(m1, Decl(collisionCodeGenModuleWithModuleReopening.ts, 0, 0), Decl(collisionCodeGenModuleWithModuleReopening.ts, 4, 22))
@@= skipped -20, +20 lines =@@
 }
 var foo2 = new m1.c1();
 >foo2 : Symbol(foo2, Decl(collisionCodeGenModuleWithModuleReopening.ts, 11, 3), Decl(collisionCodeGenModuleWithModuleReopening.ts, 28, 3))
->m1.c1 : Symbol(m1.c1, Decl(collisionCodeGenModuleWithModuleReopening.ts, 5, 11))
+>m1.c1 : Symbol(c1, Decl(collisionCodeGenModuleWithModuleReopening.ts, 5, 11))
 >m1 : Symbol(m1, Decl(collisionCodeGenModuleWithModuleReopening.ts, 0, 0), Decl(collisionCodeGenModuleWithModuleReopening.ts, 4, 22))
->c1 : Symbol(m1.c1, Decl(collisionCodeGenModuleWithModuleReopening.ts, 5, 11))
+>c1 : Symbol(c1, Decl(collisionCodeGenModuleWithModuleReopening.ts, 5, 11))
 
 module m2 {
 >m2 : Symbol(m2, Decl(collisionCodeGenModuleWithModuleReopening.ts, 11, 23), Decl(collisionCodeGenModuleWithModuleReopening.ts, 19, 23))
@@= skipped -19, +19 lines =@@
 }
 var foo3 = new m2.c1();
 >foo3 : Symbol(foo3, Decl(collisionCodeGenModuleWithModuleReopening.ts, 19, 3), Decl(collisionCodeGenModuleWithModuleReopening.ts, 27, 3))
->m2.c1 : Symbol(m2.c1, Decl(collisionCodeGenModuleWithModuleReopening.ts, 13, 11))
+>m2.c1 : Symbol(c1, Decl(collisionCodeGenModuleWithModuleReopening.ts, 13, 11))
 >m2 : Symbol(m2, Decl(collisionCodeGenModuleWithModuleReopening.ts, 11, 23), Decl(collisionCodeGenModuleWithModuleReopening.ts, 19, 23))
->c1 : Symbol(m2.c1, Decl(collisionCodeGenModuleWithModuleReopening.ts, 13, 11))
+>c1 : Symbol(c1, Decl(collisionCodeGenModuleWithModuleReopening.ts, 13, 11))
 
 module m2 {
 >m2 : Symbol(m2, Decl(collisionCodeGenModuleWithModuleReopening.ts, 11, 23), Decl(collisionCodeGenModuleWithModuleReopening.ts, 19, 23))
@@= skipped -24, +24 lines =@@
 }
 var foo3 = new m2.c1();
 >foo3 : Symbol(foo3, Decl(collisionCodeGenModuleWithModuleReopening.ts, 19, 3), Decl(collisionCodeGenModuleWithModuleReopening.ts, 27, 3))
->m2.c1 : Symbol(m2.c1, Decl(collisionCodeGenModuleWithModuleReopening.ts, 13, 11))
+>m2.c1 : Symbol(c1, Decl(collisionCodeGenModuleWithModuleReopening.ts, 13, 11))
 >m2 : Symbol(m2, Decl(collisionCodeGenModuleWithModuleReopening.ts, 11, 23), Decl(collisionCodeGenModuleWithModuleReopening.ts, 19, 23))
->c1 : Symbol(m2.c1, Decl(collisionCodeGenModuleWithModuleReopening.ts, 13, 11))
+>c1 : Symbol(c1, Decl(collisionCodeGenModuleWithModuleReopening.ts, 13, 11))
 
 var foo2 = new m2.m2();
 >foo2 : Symbol(foo2, Decl(collisionCodeGenModuleWithModuleReopening.ts, 11, 3), Decl(collisionCodeGenModuleWithModuleReopening.ts, 28, 3))
->m2.m2 : Symbol(m2.m2, Decl(collisionCodeGenModuleWithModuleReopening.ts, 20, 11))
+>m2.m2 : Symbol(m2, Decl(collisionCodeGenModuleWithModuleReopening.ts, 20, 11))
 >m2 : Symbol(m2, Decl(collisionCodeGenModuleWithModuleReopening.ts, 11, 23), Decl(collisionCodeGenModuleWithModuleReopening.ts, 19, 23))
->m2 : Symbol(m2.m2, Decl(collisionCodeGenModuleWithModuleReopening.ts, 20, 11))
+>m2 : Symbol(m2, Decl(collisionCodeGenModuleWithModuleReopening.ts, 20, 11))
 
