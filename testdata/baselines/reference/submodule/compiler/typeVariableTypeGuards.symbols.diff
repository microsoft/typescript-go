--- old.typeVariableTypeGuards.symbols
+++ new.typeVariableTypeGuards.symbols
@@= skipped -6, +6 lines =@@
 >Foo : Symbol(Foo, Decl(typeVariableTypeGuards.ts, 0, 0))
 
     foo(): void
->foo : Symbol(Foo.foo, Decl(typeVariableTypeGuards.ts, 2, 15))
+>foo : Symbol(foo, Decl(typeVariableTypeGuards.ts, 2, 15))
 }
 
 class A<P extends Partial<Foo>> {
@@= skipped -10, +10 lines =@@
 >Foo : Symbol(Foo, Decl(typeVariableTypeGuards.ts, 0, 0))
 
     constructor(public props: Readonly<P>) {}
->props : Symbol(A.props, Decl(typeVariableTypeGuards.ts, 7, 16))
+>props : Symbol(props, Decl(typeVariableTypeGuards.ts, 7, 16))
 >Readonly : Symbol(Readonly, Decl(lib.es5.d.ts, --, --))
 >P : Symbol(P, Decl(typeVariableTypeGuards.ts, 6, 8))
 
     doSomething() {
->doSomething : Symbol(A.doSomething, Decl(typeVariableTypeGuards.ts, 7, 45))
+>doSomething : Symbol(doSomething, Decl(typeVariableTypeGuards.ts, 7, 45))
 
         this.props.foo && this.props.foo()
 >this.props.foo : Symbol(foo, Decl(typeVariableTypeGuards.ts, 2, 15))
->this.props : Symbol(A.props, Decl(typeVariableTypeGuards.ts, 7, 16))
+>this.props : Symbol(props, Decl(typeVariableTypeGuards.ts, 7, 16))
 >this : Symbol(A, Decl(typeVariableTypeGuards.ts, 4, 1))
->props : Symbol(A.props, Decl(typeVariableTypeGuards.ts, 7, 16))
+>props : Symbol(props, Decl(typeVariableTypeGuards.ts, 7, 16))
 >foo : Symbol(foo, Decl(typeVariableTypeGuards.ts, 2, 15))
 >this.props.foo : Symbol(foo, Decl(typeVariableTypeGuards.ts, 2, 15))
->this.props : Symbol(A.props, Decl(typeVariableTypeGuards.ts, 7, 16))
+>this.props : Symbol(props, Decl(typeVariableTypeGuards.ts, 7, 16))
 >this : Symbol(A, Decl(typeVariableTypeGuards.ts, 4, 1))
->props : Symbol(A.props, Decl(typeVariableTypeGuards.ts, 7, 16))
+>props : Symbol(props, Decl(typeVariableTypeGuards.ts, 7, 16))
 >foo : Symbol(foo, Decl(typeVariableTypeGuards.ts, 2, 15))
     }
 }
@@= skipped -27, +27 lines =@@
 >Banana : Symbol(Banana, Decl(typeVariableTypeGuards.ts, 11, 1))
 
     color: 'yellow';
->color : Symbol(Banana.color, Decl(typeVariableTypeGuards.ts, 15, 18))
+>color : Symbol(color, Decl(typeVariableTypeGuards.ts, 15, 18))
 }
 
 class Monkey<T extends Banana | undefined> {
@@= skipped -9, +9 lines =@@
 >Banana : Symbol(Banana, Decl(typeVariableTypeGuards.ts, 11, 1))
 
     constructor(public a: T) {}
->a : Symbol(Monkey.a, Decl(typeVariableTypeGuards.ts, 20, 16))
+>a : Symbol(a, Decl(typeVariableTypeGuards.ts, 20, 16))
 >T : Symbol(T, Decl(typeVariableTypeGuards.ts, 19, 13))
 
     render() {
->render : Symbol(Monkey.render, Decl(typeVariableTypeGuards.ts, 20, 31))
+>render : Symbol(render, Decl(typeVariableTypeGuards.ts, 20, 31))
 
         if (this.a) {
->this.a : Symbol(Monkey.a, Decl(typeVariableTypeGuards.ts, 20, 16))
+>this.a : Symbol(a, Decl(typeVariableTypeGuards.ts, 20, 16))
 >this : Symbol(Monkey, Decl(typeVariableTypeGuards.ts, 17, 1))
->a : Symbol(Monkey.a, Decl(typeVariableTypeGuards.ts, 20, 16))
+>a : Symbol(a, Decl(typeVariableTypeGuards.ts, 20, 16))
 
             this.a.color;
->this.a.color : Symbol(Banana.color, Decl(typeVariableTypeGuards.ts, 15, 18))
->this.a : Symbol(Monkey.a, Decl(typeVariableTypeGuards.ts, 20, 16))
+>this.a.color : Symbol(color, Decl(typeVariableTypeGuards.ts, 15, 18))
+>this.a : Symbol(a, Decl(typeVariableTypeGuards.ts, 20, 16))
 >this : Symbol(Monkey, Decl(typeVariableTypeGuards.ts, 17, 1))
->a : Symbol(Monkey.a, Decl(typeVariableTypeGuards.ts, 20, 16))
->color : Symbol(Banana.color, Decl(typeVariableTypeGuards.ts, 15, 18))
+>a : Symbol(a, Decl(typeVariableTypeGuards.ts, 20, 16))
+>color : Symbol(color, Decl(typeVariableTypeGuards.ts, 15, 18))
         }
     }
 }
@@= skipped -32, +32 lines =@@
 >BigBanana : Symbol(BigBanana, Decl(typeVariableTypeGuards.ts, 26, 1))
 
     render() {
->render : Symbol(BigMonkey.render, Decl(typeVariableTypeGuards.ts, 31, 43))
+>render : Symbol(render, Decl(typeVariableTypeGuards.ts, 31, 43))
 
         if (this.a) {
->this.a : Symbol(Monkey.a, Decl(typeVariableTypeGuards.ts, 20, 16))
+>this.a : Symbol(a, Decl(typeVariableTypeGuards.ts, 20, 16))
 >this : Symbol(BigMonkey, Decl(typeVariableTypeGuards.ts, 29, 1))
->a : Symbol(Monkey.a, Decl(typeVariableTypeGuards.ts, 20, 16))
+>a : Symbol(a, Decl(typeVariableTypeGuards.ts, 20, 16))
 
             this.a.color;
->this.a.color : Symbol(Banana.color, Decl(typeVariableTypeGuards.ts, 15, 18))
->this.a : Symbol(Monkey.a, Decl(typeVariableTypeGuards.ts, 20, 16))
+>this.a.color : Symbol(color, Decl(typeVariableTypeGuards.ts, 15, 18))
+>this.a : Symbol(a, Decl(typeVariableTypeGuards.ts, 20, 16))
 >this : Symbol(BigMonkey, Decl(typeVariableTypeGuards.ts, 29, 1))
->a : Symbol(Monkey.a, Decl(typeVariableTypeGuards.ts, 20, 16))
->color : Symbol(Banana.color, Decl(typeVariableTypeGuards.ts, 15, 18))
+>a : Symbol(a, Decl(typeVariableTypeGuards.ts, 20, 16))
+>color : Symbol(color, Decl(typeVariableTypeGuards.ts, 15, 18))
         }
     }
 }
@@= skipped -110, +110 lines =@@
 >obj : Symbol(obj, Decl(typeVariableTypeGuards.ts, 70, 44))
 
         obj[x].length;
->obj[x].length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>obj[x].length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >obj : Symbol(obj, Decl(typeVariableTypeGuards.ts, 70, 44))
 >x : Symbol(x, Decl(typeVariableTypeGuards.ts, 70, 63))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
     }
 }
 
