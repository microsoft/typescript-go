--- old.jsxViaImport.symbols
+++ new.jsxViaImport.symbols
@@= skipped -6, +6 lines =@@
 
 class TestComponent extends React.Component<any, {}> {
 >TestComponent : Symbol(TestComponent, Decl(consumer.tsx, 1, 48))
->React.Component : Symbol(React.Component, Decl(component.d.ts, 3, 22))
+>React.Component : Symbol(Component, Decl(component.d.ts, 3, 22))
 >React : Symbol(React, Decl(component.d.ts, 2, 1))
->Component : Symbol(React.Component, Decl(component.d.ts, 3, 22))
+>Component : Symbol(Component, Decl(component.d.ts, 3, 22))
 
     render() {
->render : Symbol(TestComponent.render, Decl(consumer.tsx, 2, 54))
+>render : Symbol(render, Decl(consumer.tsx, 2, 54))
 
         return <BaseComponent />;
 >BaseComponent : Symbol(BaseComponent, Decl(consumer.tsx, 0, 0))
@@= skipped -18, +18 lines =@@
 
   interface ElementAttributesProperty { props; }
 >ElementAttributesProperty : Symbol(ElementAttributesProperty, Decl(component.d.ts, 0, 20))
->props : Symbol(ElementAttributesProperty.props, Decl(component.d.ts, 1, 39))
+>props : Symbol(props, Decl(component.d.ts, 1, 39))
 }
 declare module React {
 >React : Symbol(React, Decl(component.d.ts, 2, 1))
@@= skipped -16, +16 lines =@@
     var base: React.Component<any, {}>;
 >base : Symbol(base, Decl(component.d.ts, 7, 7))
 >React : Symbol(React, Decl(component.d.ts, 2, 1))
->Component : Symbol(React.Component, Decl(component.d.ts, 3, 22))
+>Component : Symbol(Component, Decl(component.d.ts, 3, 22))
 
     export = base;
 >base : Symbol(base, Decl(component.d.ts, 7, 7))
