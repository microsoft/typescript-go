--- old.signatureCombiningRestParameters2.types
+++ new.signatureCombiningRestParameters2.types
@@= skipped -1, +1 lines =@@
 
 === signatureCombiningRestParameters2.ts ===
 interface Console {
+>Console : Console
+
   log(message?: any, ...optionalParams: any[]): void;
 >log : { (...data: any[]): void; (message?: any, ...optionalParams: any[]): void; }
 >message : any
@@= skipped -12, +14 lines =@@
 
 let originalLog: typeof console.log;
 >originalLog : { (...data: any[]): void; (message?: any, ...optionalParams: any[]): void; }
->console.log : { (...data: any[]): void; (message?: any, ...optionalParams: any[]): void; }
 >console : Console
->log : { (...data: any[]): void; (message?: any, ...optionalParams: any[]): void; }
 
 console.log = (...args) => {
->console.log = (...args) => {  logs.push(...args);} : (args_0?: any, ...args: any[]) => void
+>console.log = (...args) => {  logs.push(...args);} : (...args: [any?, ...any[]]) => void
 >console.log : { (...data: any[]): void; (message?: any, ...optionalParams: any[]): void; }
 >console : Console
 >log : { (...data: any[]): void; (message?: any, ...optionalParams: any[]): void; }
->(...args) => {  logs.push(...args);} : (args_0?: any, ...args: any[]) => void
+>(...args) => {  logs.push(...args);} : (...args: [any?, ...any[]]) => void
 >args : [any?, ...any[]]
 
   logs.push(...args);
