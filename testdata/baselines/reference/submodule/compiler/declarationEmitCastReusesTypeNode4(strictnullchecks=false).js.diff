--- old.declarationEmitCastReusesTypeNode4(strictnullchecks=false).js
+++ new.declarationEmitCastReusesTypeNode4(strictnullchecks=false).js
@@= skipped -38, +38 lines =@@
  */
 export function fnWithPartialAnnotationOnDefaultparam(x = /** @type {P} */(something), b) {}
 
-
-
-//// [input.d.ts]
-export function fn(p?: P): void;
-/** @param {number} req */
-export function fnWithRequiredDefaultParam(p: P, req: number): void;
-/**
- *
- * @param {P} x
- * @param {number} b
- */
-export function fnWithPartialAnnotationOnDefaultparam(x: P, b: number): void;
-export let vLet: P;
-export const vConst: P;
-export class C {
-    constructor(ctorField?: P);
-    field: P;
-    /** @optional */ optField: P;
-    /** @readonly */ readonly roFiled: P;
-    method(p?: P): void;
-    /** @param {number} req */
-    methodWithRequiredDefault(p: P, req: number): void;
-    set x(v: P);
-    get x(): P;
+//// [input.js]
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.C = exports.vConst = exports.vLet = void 0;
+exports.fn = fn;
+exports.fnWithRequiredDefaultParam = fnWithRequiredDefaultParam;
+exports.fnWithPartialAnnotationOnDefaultparam = fnWithPartialAnnotationOnDefaultparam;
+const something = (null);
+exports.vLet = (something);
+exports.vConst = (something);
+function fn(p = (something)) { }
+function fnWithRequiredDefaultParam(p = (something), req) { }
+class C {
+    field = (something);
+    optField = (something);
+    roFiled = (something);
+    method(p = (something)) { }
+    methodWithRequiredDefault(p = (something), req) { }
+    constructor(ctorField = (something)) { }
+    get x() { return (something); }
+    set x(v) { }
 }
-declare const _default: P;
-export default _default;
-export type P = {} & {
-    name?: string;
-};
+exports.C = C;
+exports.default = (something);
+function fnWithPartialAnnotationOnDefaultparam(x = (something), b) { }
