--- old.staticInheritance.symbols
+++ new.staticInheritance.symbols
@@= skipped -9, +9 lines =@@
 >A : Symbol(A, Decl(staticInheritance.ts, 0, 38))
 
     static n: string;
->n : Symbol(A.n, Decl(staticInheritance.ts, 1, 9))
+>n : Symbol(n, Decl(staticInheritance.ts, 1, 9))
 
     p = doThing(A); // OK
->p : Symbol(A.p, Decl(staticInheritance.ts, 2, 21))
+>p : Symbol(p, Decl(staticInheritance.ts, 2, 21))
 >doThing : Symbol(doThing, Decl(staticInheritance.ts, 0, 0))
 >A : Symbol(A, Decl(staticInheritance.ts, 0, 38))
 }
@@= skipped -12, +12 lines =@@
 >A : Symbol(A, Decl(staticInheritance.ts, 0, 38))
 
     p1 = doThing(A); // OK
->p1 : Symbol(B.p1, Decl(staticInheritance.ts, 5, 19))
+>p1 : Symbol(p1, Decl(staticInheritance.ts, 5, 19))
 >doThing : Symbol(doThing, Decl(staticInheritance.ts, 0, 0))
 >A : Symbol(A, Decl(staticInheritance.ts, 0, 38))
 
     p2 = doThing(B); // OK
->p2 : Symbol(B.p2, Decl(staticInheritance.ts, 6, 20))
+>p2 : Symbol(p2, Decl(staticInheritance.ts, 6, 20))
 >doThing : Symbol(doThing, Decl(staticInheritance.ts, 0, 0))
 >B : Symbol(B, Decl(staticInheritance.ts, 4, 1))
 }
