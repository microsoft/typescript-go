--- old.declarationEmitReexportedSymlinkReference3.types
+++ new.declarationEmitReexportedSymlinkReference3.types
@@= skipped -7, +7 lines =@@
 >MetadataAccessor : typeof MetadataAccessor

 export const ADMIN = MetadataAccessor.create<boolean>('1');
->ADMIN : MetadataAccessor<boolean, import("monorepo/pkg1/dist/types").IdType>
->MetadataAccessor.create<boolean>('1') : MetadataAccessor<boolean, import("monorepo/pkg1/dist/types").IdType>
->MetadataAccessor.create : <T, D extends import("monorepo/pkg1/dist/types").IdType = import("monorepo/pkg1/dist/types").IdType>(key: string) => MetadataAccessor<T, D>
+>ADMIN : MetadataAccessor<boolean, import("../../pkg1/dist/types.js").IdType>
+>MetadataAccessor.create<boolean>('1') : MetadataAccessor<boolean, import("../../pkg1/dist/types.js").IdType>
+>MetadataAccessor.create : <T, D extends import("../../pkg1/dist/types.js").IdType = import("../../pkg1/dist/types.js").IdType>(key: string) => MetadataAccessor<T, D>
 >MetadataAccessor : typeof MetadataAccessor
->create : <T, D extends import("monorepo/pkg1/dist/types").IdType = import("monorepo/pkg1/dist/types").IdType>(key: string) => MetadataAccessor<T, D>
+>create : <T, D extends import("../../pkg1/dist/types.js").IdType = import("../../pkg1/dist/types.js").IdType>(key: string) => MetadataAccessor<T, D>
 >'1' : "1"

 === monorepo/pkg1/dist/index.d.ts ===
@@= skipped -47, +47 lines =@@
 export * from './types';
 === monorepo/pkg2/dist/types.d.ts ===
 export {MetadataAccessor} from '@raymondfeng/pkg1';
->MetadataAccessor : typeof import("monorepo/pkg1/dist/types").MetadataAccessor
+>MetadataAccessor : typeof import("../../pkg1/dist/types.js").MetadataAccessor
