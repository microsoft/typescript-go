--- old.flatArrayNoExcessiveStackDepth.types
+++ new.flatArrayNoExcessiveStackDepth.types
@@= skipped -27, +27 lines =@@

     if (typeof value !== "string") {
 >typeof value !== "string" : boolean
->typeof value : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof value : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >value : unknown
 >"string" : "string"

@@= skipped -10, +10 lines =@@
 >"No" : "No"
     }
     const match = value.match(/anything/) || [];
->match : [] | RegExpMatchArray
+>match : RegExpMatchArray | []
 >value.match(/anything/) || [] : RegExpMatchArray | []
 >value.match(/anything/) : RegExpMatchArray | null
 >value.match : { (regexp: string | RegExp): RegExpMatchArray | null; (matcher: { [Symbol.match](string: string): RegExpMatchArray | null; }): RegExpMatchArray | null; }
@@= skipped -10, +10 lines =@@
 >[] : []

     const [, extracted] = match;
-> : undefined
 >extracted : string
->match : [] | RegExpMatchArray
+>match : RegExpMatchArray | []

 };
