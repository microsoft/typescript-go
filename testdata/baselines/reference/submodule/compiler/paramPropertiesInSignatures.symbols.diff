--- old.paramPropertiesInSignatures.symbols
+++ new.paramPropertiesInSignatures.symbols
@@= skipped -4, +4 lines =@@
 >C1 : Symbol(C1, Decl(paramPropertiesInSignatures.ts, 0, 0))
 
 	constructor(public p1:string); // ERROR
->p1 : Symbol(C1.p1, Decl(paramPropertiesInSignatures.ts, 1, 13))
+>p1 : Symbol(p1, Decl(paramPropertiesInSignatures.ts, 1, 13))
 
 	constructor(private p2:number); // ERROR
->p2 : Symbol(C1.p2, Decl(paramPropertiesInSignatures.ts, 2, 13))
+>p2 : Symbol(p2, Decl(paramPropertiesInSignatures.ts, 2, 13))
 
 	constructor(public p3:any) {} // OK
->p3 : Symbol(C1.p3, Decl(paramPropertiesInSignatures.ts, 3, 13))
+>p3 : Symbol(p3, Decl(paramPropertiesInSignatures.ts, 3, 13))
 }
 
 declare class C2 {
 >C2 : Symbol(C2, Decl(paramPropertiesInSignatures.ts, 4, 1))
 
 	constructor(public p1:string); // ERROR
->p1 : Symbol(C2.p1, Decl(paramPropertiesInSignatures.ts, 7, 13))
+>p1 : Symbol(p1, Decl(paramPropertiesInSignatures.ts, 7, 13))
 
 	constructor(private p2:number); // ERROR
->p2 : Symbol(C2.p2, Decl(paramPropertiesInSignatures.ts, 8, 13))
+>p2 : Symbol(p2, Decl(paramPropertiesInSignatures.ts, 8, 13))
 
 	constructor(public p3:any); // ERROR
->p3 : Symbol(C2.p3, Decl(paramPropertiesInSignatures.ts, 9, 13))
+>p3 : Symbol(p3, Decl(paramPropertiesInSignatures.ts, 9, 13))
 }
