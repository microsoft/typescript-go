--- old.bestChoiceType.symbols
+++ new.bestChoiceType.symbols
@@= skipped -3, +3 lines =@@
 // Repro from #10041
 
 (''.match(/ /) || []).map(s => s.toLowerCase());
->(''.match(/ /) || []).map : Symbol(Array.map, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->''.match : Symbol(String.match, Decl(lib.es5.d.ts, --, --))
->match : Symbol(String.match, Decl(lib.es5.d.ts, --, --))
->map : Symbol(Array.map, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
+>(''.match(/ /) || []).map : Symbol(map, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
+>''.match : Symbol(match, Decl(lib.es5.d.ts, --, --))
+>match : Symbol(match, Decl(lib.es5.d.ts, --, --))
+>map : Symbol(map, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 >s : Symbol(s, Decl(bestChoiceType.ts, 2, 26))
 >s : Symbol(s, Decl(bestChoiceType.ts, 2, 26))
 
@@= skipped -14, +14 lines =@@
 
     let x = ''.match(/ /);
 >x : Symbol(x, Decl(bestChoiceType.ts, 7, 7))
->''.match : Symbol(String.match, Decl(lib.es5.d.ts, --, --))
->match : Symbol(String.match, Decl(lib.es5.d.ts, --, --))
+>''.match : Symbol(match, Decl(lib.es5.d.ts, --, --))
+>match : Symbol(match, Decl(lib.es5.d.ts, --, --))
 
     let y = x || [];
 >y : Symbol(y, Decl(bestChoiceType.ts, 8, 7))
@@= skipped -9, +9 lines =@@
 
     let z = y.map(s => s.toLowerCase());
 >z : Symbol(z, Decl(bestChoiceType.ts, 9, 7))
->y.map : Symbol(Array.map, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
+>y.map : Symbol(map, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 >y : Symbol(y, Decl(bestChoiceType.ts, 8, 7))
->map : Symbol(Array.map, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
+>map : Symbol(map, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 >s : Symbol(s, Decl(bestChoiceType.ts, 9, 18))
 >s : Symbol(s, Decl(bestChoiceType.ts, 9, 18))
 }
@@= skipped -12, +12 lines =@@
 
     let x = ''.match(/ /);
 >x : Symbol(x, Decl(bestChoiceType.ts, 13, 7))
->''.match : Symbol(String.match, Decl(lib.es5.d.ts, --, --))
->match : Symbol(String.match, Decl(lib.es5.d.ts, --, --))
+>''.match : Symbol(match, Decl(lib.es5.d.ts, --, --))
+>match : Symbol(match, Decl(lib.es5.d.ts, --, --))
 
     let y = x ? x : [];
 >y : Symbol(y, Decl(bestChoiceType.ts, 14, 7))
@@= skipped -10, +10 lines =@@
 
     let z = y.map(s => s.toLowerCase());
 >z : Symbol(z, Decl(bestChoiceType.ts, 15, 7))
->y.map : Symbol(Array.map, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
+>y.map : Symbol(map, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 >y : Symbol(y, Decl(bestChoiceType.ts, 14, 7))
->map : Symbol(Array.map, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
+>map : Symbol(map, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 >s : Symbol(s, Decl(bestChoiceType.ts, 15, 18))
 >s : Symbol(s, Decl(bestChoiceType.ts, 15, 18))
 }
