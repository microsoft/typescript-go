--- old.exportedInterfaceInaccessibleInCallbackInModule.types
+++ new.exportedInterfaceInaccessibleInCallbackInModule.types
@@= skipped -1, +1 lines =@@
 
 === exportedInterfaceInaccessibleInCallbackInModule.ts ===
 export interface ProgressCallback {
+>ProgressCallback : ProgressCallback
+
 	(progress:any):any;
 >progress : any
 }	
@@= skipped -7, +9 lines =@@
 // --- Generic promise
 export declare class TPromise<V> {
 >TPromise : TPromise<V>
+>V : V
 	
 	constructor(init:(complete: (value:V)=>void, error:(err:any)=>void, progress:ProgressCallback)=>void, oncancel?: any);
 >init : (complete: (value: V) => void, error: (err: any) => void, progress: ProgressCallback) => void
@@= skipped -13, +14 lines =@@
     // removing this method fixes the error squiggle.....
 	public then<U>(success?: (value:V)=>TPromise<U>, error?: (err:any)=>TPromise<U>, progress?:ProgressCallback): TPromise<U>;
 >then : <U>(success?: (value: V) => TPromise<U>, error?: (err: any) => TPromise<U>, progress?: ProgressCallback) => TPromise<U>
+>U : U
 >success : (value: V) => TPromise<U>
 >value : V
 >error : (err: any) => TPromise<U>
