--- old.declarationEmitObjectAssignedDefaultExport.symbols
+++ new.declarationEmitObjectAssignedDefaultExport.symbols
@@= skipped -4, +4 lines =@@
 >Statics : Symbol(Statics, Decl(index.d.ts, 0, 0))
 
     "$$whatever": string;
->"$$whatever" : Symbol(Statics["$$whatever"], Decl(index.d.ts, 0, 19))
+>"$$whatever" : Symbol($$whatever, Decl(index.d.ts, 0, 19))
 }
 declare namespace hoistNonReactStatics {
 >hoistNonReactStatics : Symbol(hoistNonReactStatics, Decl(index.d.ts, 2, 1))
@@= skipped -43, +43 lines =@@
 
     & hoistNonReactStatics.NonReactStatics<TTag>;
 >hoistNonReactStatics : Symbol(hoistNonReactStatics, Decl(index.d.ts, 0, 6))
->NonReactStatics : Symbol(hoistNonReactStatics.NonReactStatics, Decl(index.d.ts, 3, 40))
+>NonReactStatics : Symbol(NonReactStatics, Decl(index.d.ts, 3, 40))
 >TTag : Symbol(TTag, Decl(index.d.ts, 2, 28))
 
 export interface StyledComponentBase<TTag extends string, TTheme = DefaultTheme, TStyle = {}, TWhatever = never> {
@@= skipped -12, +12 lines =@@
 >TWhatever : Symbol(TWhatever, Decl(index.d.ts, 6, 93))
 
     tag: TTag;
->tag : Symbol(StyledComponentBase.tag, Decl(index.d.ts, 6, 114))
+>tag : Symbol(tag, Decl(index.d.ts, 6, 114))
 >TTag : Symbol(TTag, Decl(index.d.ts, 6, 37))
 
     theme: TTheme;
->theme : Symbol(StyledComponentBase.theme, Decl(index.d.ts, 7, 14))
+>theme : Symbol(theme, Decl(index.d.ts, 7, 14))
 >TTheme : Symbol(TTheme, Decl(index.d.ts, 6, 57))
 
     style: TStyle;
->style : Symbol(StyledComponentBase.style, Decl(index.d.ts, 8, 18))
+>style : Symbol(style, Decl(index.d.ts, 8, 18))
 >TStyle : Symbol(TStyle, Decl(index.d.ts, 6, 80))
 
     whatever: TWhatever;
->whatever : Symbol(StyledComponentBase.whatever, Decl(index.d.ts, 9, 18))
+>whatever : Symbol(whatever, Decl(index.d.ts, 9, 18))
 >TWhatever : Symbol(TWhatever, Decl(index.d.ts, 6, 93))
 }
 export interface StyledInterface {
 >StyledInterface : Symbol(StyledInterface, Decl(index.d.ts, 11, 1))
 
     div: (a: TemplateStringsArray) => StyledComponent<"div">;
->div : Symbol(StyledInterface.div, Decl(index.d.ts, 12, 34))
+>div : Symbol(div, Decl(index.d.ts, 12, 34))
 >a : Symbol(a, Decl(index.d.ts, 13, 10))
 >TemplateStringsArray : Symbol(TemplateStringsArray, Decl(lib.es5.d.ts, --, --))
 >StyledComponent : Symbol(StyledComponent, Decl(index.d.ts, 1, 32))
@@= skipped -38, +38 lines =@@
 
 const A = styled.div``;
 >A : Symbol(A, Decl(index.ts, 2, 5))
->styled.div : Symbol(StyledInterface.div, Decl(index.d.ts, 12, 34))
+>styled.div : Symbol(div, Decl(index.d.ts, 12, 34))
 >styled : Symbol(styled, Decl(index.ts, 0, 6))
->div : Symbol(StyledInterface.div, Decl(index.d.ts, 12, 34))
+>div : Symbol(div, Decl(index.d.ts, 12, 34))
 
 const B = styled.div``;
 >B : Symbol(B, Decl(index.ts, 3, 5))
->styled.div : Symbol(StyledInterface.div, Decl(index.d.ts, 12, 34))
+>styled.div : Symbol(div, Decl(index.d.ts, 12, 34))
 >styled : Symbol(styled, Decl(index.ts, 0, 6))
->div : Symbol(StyledInterface.div, Decl(index.d.ts, 12, 34))
+>div : Symbol(div, Decl(index.d.ts, 12, 34))
 
 export const C = styled.div``;
 >C : Symbol(C, Decl(index.ts, 4, 12))
->styled.div : Symbol(StyledInterface.div, Decl(index.d.ts, 12, 34))
+>styled.div : Symbol(div, Decl(index.d.ts, 12, 34))
 >styled : Symbol(styled, Decl(index.ts, 0, 6))
->div : Symbol(StyledInterface.div, Decl(index.d.ts, 12, 34))
+>div : Symbol(div, Decl(index.d.ts, 12, 34))
 
 export default Object.assign(A, {
->Object.assign : Symbol(ObjectConstructor.assign, Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --))
+>Object.assign : Symbol(assign, Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --))
 >Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->assign : Symbol(ObjectConstructor.assign, Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --))
+>assign : Symbol(assign, Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --))
 >A : Symbol(A, Decl(index.ts, 2, 5))
 
     B,
