--- old.enumNumbering1.symbols
+++ new.enumNumbering1.symbols
@@= skipped -4, +4 lines =@@
 >Test : Symbol(Test, Decl(enumNumbering1.ts, 0, 0))
 
     A,
->A : Symbol(Test.A, Decl(enumNumbering1.ts, 0, 11))
+>A : Symbol(A, Decl(enumNumbering1.ts, 0, 11))
 
     B,
->B : Symbol(Test.B, Decl(enumNumbering1.ts, 1, 6))
+>B : Symbol(B, Decl(enumNumbering1.ts, 1, 6))
 
     C = Math.floor(Math.random() * 1000),
->C : Symbol(Test.C, Decl(enumNumbering1.ts, 2, 6))
->Math.floor : Symbol(Math.floor, Decl(lib.es5.d.ts, --, --))
+>C : Symbol(C, Decl(enumNumbering1.ts, 2, 6))
+>Math.floor : Symbol(floor, Decl(lib.es5.d.ts, --, --))
 >Math : Symbol(Math, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->floor : Symbol(Math.floor, Decl(lib.es5.d.ts, --, --))
->Math.random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
+>floor : Symbol(floor, Decl(lib.es5.d.ts, --, --))
+>Math.random : Symbol(random, Decl(lib.es5.d.ts, --, --))
 >Math : Symbol(Math, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
+>random : Symbol(random, Decl(lib.es5.d.ts, --, --))
 
     D = 10,
->D : Symbol(Test.D, Decl(enumNumbering1.ts, 3, 41))
+>D : Symbol(D, Decl(enumNumbering1.ts, 3, 41))
 
     E // Error but shouldn't be
->E : Symbol(Test.E, Decl(enumNumbering1.ts, 4, 11))
+>E : Symbol(E, Decl(enumNumbering1.ts, 4, 11))
 }
 
