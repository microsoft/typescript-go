--- old.lateBoundDestructuringImplicitAnyError.errors.txt
+++ new.lateBoundDestructuringImplicitAnyError.errors.txt
@@= skipped -0, +0 lines =@@
-lateBoundDestructuringImplicitAnyError.ts(2,7): error TS2537: Type '{ prop: string; }' has no matching index signature for type 'string'.
-lateBoundDestructuringImplicitAnyError.ts(13,7): error TS2537: Type '{ [idx: number]: string; }' has no matching index signature for type 'string'.
+lateBoundDestructuringImplicitAnyError.ts(2,7): error TS2537: Type '{ prop: string }' has no matching index signature for type 'string'.
+lateBoundDestructuringImplicitAnyError.ts(13,7): error TS2537: Type '{ [idx: number]: string }' has no matching index signature for type 'string'.
 lateBoundDestructuringImplicitAnyError.ts(21,7): error TS2538: Type 'unique symbol' cannot be used as an index type.
 lateBoundDestructuringImplicitAnyError.ts(23,7): error TS2538: Type 'unique symbol' cannot be used as an index type.
 lateBoundDestructuringImplicitAnyError.ts(25,7): error TS2538: Type 'symbol' cannot be used as an index type.
@@= skipped -9, +9 lines =@@
     let named = "foo";
     let {[named]: prop} = {prop: "foo"};
           ~~~~~
-!!! error TS2537: Type '{ prop: string; }' has no matching index signature for type 'string'.
+!!! error TS2537: Type '{ prop: string }' has no matching index signature for type 'string'.
     void prop;
     
     const numIndexed: {[idx: number]: string} = null as any;
@@= skipped -13, +13 lines =@@
     
     let {[named]: prop2} = numIndexed;
           ~~~~~
-!!! error TS2537: Type '{ [idx: number]: string; }' has no matching index signature for type 'string'.
+!!! error TS2537: Type '{ [idx: number]: string }' has no matching index signature for type 'string'.
     void prop2;
     let {[numed]: prop3} = numIndexed;
     void prop3;
