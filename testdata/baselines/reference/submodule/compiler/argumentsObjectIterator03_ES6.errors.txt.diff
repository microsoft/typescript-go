--- old.argumentsObjectIterator03_ES6.errors.txt
+++ new.argumentsObjectIterator03_ES6.errors.txt
@@= skipped -0, +-1 lines =@@
-<no content>
@@= skipped --1, +1 lines =@@
+error TS2318: Cannot find global type 'Array'.
+error TS2318: Cannot find global type 'Function'.
+error TS2318: Cannot find global type 'IArguments'.
+error TS2318: Cannot find global type 'RegExp'.
+error TS2318: Cannot find global type 'String'.
+error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
+error TS2552: Cannot find name 'Number'. Did you mean 'number'?
+error TS2552: Cannot find name 'Object'. Did you mean 'object'?
+argumentsObjectIterator03_ES6.ts(2,9): error TS2488: Type '{}' must have a '[Symbol.iterator]()' method that returns an iterator.
+argumentsObjectIterator03_ES6.ts(2,10): error TS2339: Property '0' does not exist on type '{}'.
+argumentsObjectIterator03_ES6.ts(2,13): error TS2339: Property '1' does not exist on type '{}'.
+argumentsObjectIterator03_ES6.ts(2,16): error TS2339: Property '2' does not exist on type '{}'.
+
+
+!!! error TS2318: Cannot find global type 'Array'.
+!!! error TS2318: Cannot find global type 'Function'.
+!!! error TS2318: Cannot find global type 'IArguments'.
+!!! error TS2318: Cannot find global type 'RegExp'.
+!!! error TS2318: Cannot find global type 'String'.
+!!! error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
+!!! error TS2552: Cannot find name 'Number'. Did you mean 'number'?
+!!! error TS2552: Cannot find name 'Object'. Did you mean 'object'?
+==== argumentsObjectIterator03_ES6.ts (4 errors) ====
+    function asReversedTuple(a: number, b: string, c: boolean): [boolean, string, number] {
+        let [x, y, z] = arguments;
+            ~~~~~~~~~
+!!! error TS2488: Type '{}' must have a '[Symbol.iterator]()' method that returns an iterator.
+             ~
+!!! error TS2339: Property '0' does not exist on type '{}'.
+                ~
+!!! error TS2339: Property '1' does not exist on type '{}'.
+                   ~
+!!! error TS2339: Property '2' does not exist on type '{}'.
+        
+        return [z, y, x];
+    }
+    
+    
