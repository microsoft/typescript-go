--- old.truthinessCallExpressionCoercion2.errors.txt
+++ new.truthinessCallExpressionCoercion2.errors.txt
@@= skipped -0, +0 lines =@@
-truthinessCallExpressionCoercion2.ts(11,5): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
-truthinessCallExpressionCoercion2.ts(14,10): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
-truthinessCallExpressionCoercion2.ts(41,18): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
-truthinessCallExpressionCoercion2.ts(44,9): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
 truthinessCallExpressionCoercion2.ts(48,9): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
 truthinessCallExpressionCoercion2.ts(52,9): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
 truthinessCallExpressionCoercion2.ts(52,22): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
 truthinessCallExpressionCoercion2.ts(56,9): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
 truthinessCallExpressionCoercion2.ts(60,9): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
 truthinessCallExpressionCoercion2.ts(60,22): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
-truthinessCallExpressionCoercion2.ts(64,11): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
 truthinessCallExpressionCoercion2.ts(93,10): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
-truthinessCallExpressionCoercion2.ts(97,15): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
 truthinessCallExpressionCoercion2.ts(97,28): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
-truthinessCallExpressionCoercion2.ts(101,10): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
-truthinessCallExpressionCoercion2.ts(101,23): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
-truthinessCallExpressionCoercion2.ts(105,15): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
 truthinessCallExpressionCoercion2.ts(105,28): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
-truthinessCallExpressionCoercion2.ts(109,10): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
-truthinessCallExpressionCoercion2.ts(109,23): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
-truthinessCallExpressionCoercion2.ts(116,46): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
-truthinessCallExpressionCoercion2.ts(127,5): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
-truthinessCallExpressionCoercion2.ts(130,10): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
-truthinessCallExpressionCoercion2.ts(150,5): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
 truthinessCallExpressionCoercion2.ts(153,10): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
 truthinessCallExpressionCoercion2.ts(157,15): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
 truthinessCallExpressionCoercion2.ts(157,27): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
-truthinessCallExpressionCoercion2.ts(161,10): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
-truthinessCallExpressionCoercion2.ts(161,22): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
 truthinessCallExpressionCoercion2.ts(165,15): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
 truthinessCallExpressionCoercion2.ts(165,27): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
-truthinessCallExpressionCoercion2.ts(169,10): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
-truthinessCallExpressionCoercion2.ts(169,22): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
-truthinessCallExpressionCoercion2.ts(180,9): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
-truthinessCallExpressionCoercion2.ts(183,14): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
 
 
-==== truthinessCallExpressionCoercion2.ts (35 errors) ====
+==== truthinessCallExpressionCoercion2.ts (14 errors) ====
     declare class A {
         static from(): string;
     }
@@= skipped -46, +25 lines =@@
     function test(required1: () => boolean, required2: () => boolean, b: boolean, optional?: () => boolean) {
         // error
         required1 && console.log('required');
-        ~~~~~~~~~
-!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
     
         // error
         1 && required1 && console.log('required');
-             ~~~~~~~~~
-!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
     
         // ok
         required1 && required1();
@@= skipped -34, +30 lines =@@
     
         // error
         required1 && required2 && required1() && console.log('foo');
-                     ~~~~~~~~~
-!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
     
         // error
         if (required1 && b) {
-            ~~~~~~~~~
-!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
         }
     
         // error
@@= skipped -39, +35 lines =@@
     
         // error
         if (((required1 && b))) {
-              ~~~~~~~~~
-!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
         }
     
         // ok
@@= skipped -37, +35 lines =@@
     
         // error
         if (b && (required1 || required2)) {
-                  ~~~~~~~~~
-!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
                                ~~~~~~~~~
 !!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
         }
     
         // error
         if ((required1 || required2) && b) {
-             ~~~~~~~~~
-!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
-                          ~~~~~~~~~
-!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
         }
     
         // error
         if (b && (required1 ?? required2)) {
-                  ~~~~~~~~~
-!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
                                ~~~~~~~~~
 !!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
         }
     
         // error
         if ((required1 ?? required2) && b) {
-             ~~~~~~~~~
-!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
-                          ~~~~~~~~~
-!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
         }
     }
     
@@= skipped -35, +23 lines =@@
         // error
         typeof window !== 'undefined' && window.console &&
             ((window.console as any).firebug || (window.console.error && window.console.table));
-                                                 ~~~~~~~~~~~~~~~~~~~~
-!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
     }
     
     function checksPropertyAccess() {
@@= skipped -13, +11 lines =@@
     
         // error
         x.foo.bar && console.log('x.foo.bar');
-        ~~~~~~~~~
-!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
     
         // error
         1 && x.foo.bar && console.log('x.foo.bar');
-             ~~~~~~~~~
-!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
     
         // ok
         x.foo.bar && x.foo.bar();
@@= skipped -27, +23 lines =@@
     
         // error
         x1.a.b.c && x2.a.b.c();
-        ~~~~~~~~
-!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
     
         // error, extra parens are on purpose here
         if ((x1.a.b.c)) {
@@= skipped -19, +17 lines =@@
     
         // error
         if ((x1.a.b.c || x2.a.b.c) && 1) {
-             ~~~~~~~~
-!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
-                         ~~~~~~~~
-!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
         }
     
         // error
@@= skipped -16, +12 lines =@@
     
         // error
         if ((x1.a.b.c ?? x2.a.b.c) && 1) {
-             ~~~~~~~~
-!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
-                         ~~~~~~~~
-!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
         }
     }
     
@@= skipped -15, +11 lines =@@
         test() {
             // error
             this.required && console.log('required');
-            ~~~~~~~~~~~~~
-!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
     
             // error
             1 && this.required && console.log('required');
-                 ~~~~~~~~~~~~~
-!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
     
             // ok
             this.required && this.required();
