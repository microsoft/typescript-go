--- old.privacyGloFunc.symbols
+++ new.privacyGloFunc.symbols
@@= skipped -7, +7 lines =@@
 >C1_public : Symbol(C1_public, Decl(privacyGloFunc.ts, 0, 18))
 
         private f1() {
->f1 : Symbol(C1_public.f1, Decl(privacyGloFunc.ts, 1, 28))
+>f1 : Symbol(f1, Decl(privacyGloFunc.ts, 1, 28))
         }
     }
 
@@= skipped -24, +24 lines =@@
         }
 
         private f1_private(m1_c3_f1_arg: C1_public) {
->f1_private : Symbol(C3_public.f1_private, Decl(privacyGloFunc.ts, 13, 9))
+>f1_private : Symbol(f1_private, Decl(privacyGloFunc.ts, 13, 9))
 >m1_c3_f1_arg : Symbol(m1_c3_f1_arg, Decl(privacyGloFunc.ts, 15, 27))
 >C1_public : Symbol(C1_public, Decl(privacyGloFunc.ts, 0, 18))
         }
 
         public f2_public(m1_c3_f2_arg: C1_public) {
->f2_public : Symbol(C3_public.f2_public, Decl(privacyGloFunc.ts, 16, 9))
+>f2_public : Symbol(f2_public, Decl(privacyGloFunc.ts, 16, 9))
 >m1_c3_f2_arg : Symbol(m1_c3_f2_arg, Decl(privacyGloFunc.ts, 18, 25))
 >C1_public : Symbol(C1_public, Decl(privacyGloFunc.ts, 0, 18))
         }
 
         private f3_private(m1_c3_f3_arg: C2_private) {
->f3_private : Symbol(C3_public.f3_private, Decl(privacyGloFunc.ts, 19, 9))
+>f3_private : Symbol(f3_private, Decl(privacyGloFunc.ts, 19, 9))
 >m1_c3_f3_arg : Symbol(m1_c3_f3_arg, Decl(privacyGloFunc.ts, 21, 27))
 >C2_private : Symbol(C2_private, Decl(privacyGloFunc.ts, 4, 5))
         }
 
         public f4_public(m1_c3_f4_arg: C2_private) { // error
->f4_public : Symbol(C3_public.f4_public, Decl(privacyGloFunc.ts, 22, 9))
+>f4_public : Symbol(f4_public, Decl(privacyGloFunc.ts, 22, 9))
 >m1_c3_f4_arg : Symbol(m1_c3_f4_arg, Decl(privacyGloFunc.ts, 24, 25))
 >C2_private : Symbol(C2_private, Decl(privacyGloFunc.ts, 4, 5))
         }
 
         private f5_private() {
->f5_private : Symbol(C3_public.f5_private, Decl(privacyGloFunc.ts, 25, 9))
+>f5_private : Symbol(f5_private, Decl(privacyGloFunc.ts, 25, 9))
 
             return new C1_public();
 >C1_public : Symbol(C1_public, Decl(privacyGloFunc.ts, 0, 18))
         }
 
         public f6_public() {
->f6_public : Symbol(C3_public.f6_public, Decl(privacyGloFunc.ts, 29, 9))
+>f6_public : Symbol(f6_public, Decl(privacyGloFunc.ts, 29, 9))
 
             return new C1_public();
 >C1_public : Symbol(C1_public, Decl(privacyGloFunc.ts, 0, 18))
         }
 
         private f7_private() {
->f7_private : Symbol(C3_public.f7_private, Decl(privacyGloFunc.ts, 33, 9))
+>f7_private : Symbol(f7_private, Decl(privacyGloFunc.ts, 33, 9))
 
             return new C2_private();
 >C2_private : Symbol(C2_private, Decl(privacyGloFunc.ts, 4, 5))
         }
 
         public f8_public() {
->f8_public : Symbol(C3_public.f8_public, Decl(privacyGloFunc.ts, 37, 9))
+>f8_public : Symbol(f8_public, Decl(privacyGloFunc.ts, 37, 9))
 
             return new C2_private();  // error
 >C2_private : Symbol(C2_private, Decl(privacyGloFunc.ts, 4, 5))
         }
 
         private f9_private(): C1_public {
->f9_private : Symbol(C3_public.f9_private, Decl(privacyGloFunc.ts, 41, 9))
+>f9_private : Symbol(f9_private, Decl(privacyGloFunc.ts, 41, 9))
 >C1_public : Symbol(C1_public, Decl(privacyGloFunc.ts, 0, 18))
 
             return new C1_public();
@@= skipped -60, +60 lines =@@
         }
 
         public f10_public(): C1_public {
->f10_public : Symbol(C3_public.f10_public, Decl(privacyGloFunc.ts, 45, 9))
+>f10_public : Symbol(f10_public, Decl(privacyGloFunc.ts, 45, 9))
 >C1_public : Symbol(C1_public, Decl(privacyGloFunc.ts, 0, 18))
 
             return new C1_public();
@@= skipped -8, +8 lines =@@
         }
 
         private f11_private(): C2_private {
->f11_private : Symbol(C3_public.f11_private, Decl(privacyGloFunc.ts, 49, 9))
+>f11_private : Symbol(f11_private, Decl(privacyGloFunc.ts, 49, 9))
 >C2_private : Symbol(C2_private, Decl(privacyGloFunc.ts, 4, 5))
 
             return new C2_private();
@@= skipped -8, +8 lines =@@
         }
 
         public f12_public(): C2_private { // error
->f12_public : Symbol(C3_public.f12_public, Decl(privacyGloFunc.ts, 53, 9))
+>f12_public : Symbol(f12_public, Decl(privacyGloFunc.ts, 53, 9))
 >C2_private : Symbol(C2_private, Decl(privacyGloFunc.ts, 4, 5))
 
             return new C2_private(); //error
@@= skipped -23, +23 lines =@@
 >m1_c4_c1_2 : Symbol(m1_c4_c1_2, Decl(privacyGloFunc.ts, 63, 21))
         }
         private f1_private(m1_c4_f1_arg: C1_public) {
->f1_private : Symbol(C4_private.f1_private, Decl(privacyGloFunc.ts, 64, 9))
+>f1_private : Symbol(f1_private, Decl(privacyGloFunc.ts, 64, 9))
 >m1_c4_f1_arg : Symbol(m1_c4_f1_arg, Decl(privacyGloFunc.ts, 65, 27))
 >C1_public : Symbol(C1_public, Decl(privacyGloFunc.ts, 0, 18))
         }
 
         public f2_public(m1_c4_f2_arg: C1_public) {
->f2_public : Symbol(C4_private.f2_public, Decl(privacyGloFunc.ts, 66, 9))
+>f2_public : Symbol(f2_public, Decl(privacyGloFunc.ts, 66, 9))
 >m1_c4_f2_arg : Symbol(m1_c4_f2_arg, Decl(privacyGloFunc.ts, 68, 25))
 >C1_public : Symbol(C1_public, Decl(privacyGloFunc.ts, 0, 18))
         }
 
         private f3_private(m1_c4_f3_arg: C2_private) {
->f3_private : Symbol(C4_private.f3_private, Decl(privacyGloFunc.ts, 69, 9))
+>f3_private : Symbol(f3_private, Decl(privacyGloFunc.ts, 69, 9))
 >m1_c4_f3_arg : Symbol(m1_c4_f3_arg, Decl(privacyGloFunc.ts, 71, 27))
 >C2_private : Symbol(C2_private, Decl(privacyGloFunc.ts, 4, 5))
         }
 
         public f4_public(m1_c4_f4_arg: C2_private) {
->f4_public : Symbol(C4_private.f4_public, Decl(privacyGloFunc.ts, 72, 9))
+>f4_public : Symbol(f4_public, Decl(privacyGloFunc.ts, 72, 9))
 >m1_c4_f4_arg : Symbol(m1_c4_f4_arg, Decl(privacyGloFunc.ts, 74, 25))
 >C2_private : Symbol(C2_private, Decl(privacyGloFunc.ts, 4, 5))
         }
 
 
         private f5_private() {
->f5_private : Symbol(C4_private.f5_private, Decl(privacyGloFunc.ts, 75, 9))
+>f5_private : Symbol(f5_private, Decl(privacyGloFunc.ts, 75, 9))
 
             return new C1_public();
 >C1_public : Symbol(C1_public, Decl(privacyGloFunc.ts, 0, 18))
         }
 
         public f6_public() {
->f6_public : Symbol(C4_private.f6_public, Decl(privacyGloFunc.ts, 80, 9))
+>f6_public : Symbol(f6_public, Decl(privacyGloFunc.ts, 80, 9))
 
             return new C1_public();
 >C1_public : Symbol(C1_public, Decl(privacyGloFunc.ts, 0, 18))
         }
 
         private f7_private() {
->f7_private : Symbol(C4_private.f7_private, Decl(privacyGloFunc.ts, 84, 9))
+>f7_private : Symbol(f7_private, Decl(privacyGloFunc.ts, 84, 9))
 
             return new C2_private();
 >C2_private : Symbol(C2_private, Decl(privacyGloFunc.ts, 4, 5))
         }
 
         public f8_public() {
->f8_public : Symbol(C4_private.f8_public, Decl(privacyGloFunc.ts, 88, 9))
+>f8_public : Symbol(f8_public, Decl(privacyGloFunc.ts, 88, 9))
 
             return new C2_private();
 >C2_private : Symbol(C2_private, Decl(privacyGloFunc.ts, 4, 5))
@@= skipped -54, +54 lines =@@
 
 
         private f9_private(): C1_public {
->f9_private : Symbol(C4_private.f9_private, Decl(privacyGloFunc.ts, 92, 9))
+>f9_private : Symbol(f9_private, Decl(privacyGloFunc.ts, 92, 9))
 >C1_public : Symbol(C1_public, Decl(privacyGloFunc.ts, 0, 18))
 
             return new C1_public();
@@= skipped -8, +8 lines =@@
         }
 
         public f10_public(): C1_public {
->f10_public : Symbol(C4_private.f10_public, Decl(privacyGloFunc.ts, 97, 9))
+>f10_public : Symbol(f10_public, Decl(privacyGloFunc.ts, 97, 9))
 >C1_public : Symbol(C1_public, Decl(privacyGloFunc.ts, 0, 18))
 
             return new C1_public();
@@= skipped -8, +8 lines =@@
         }
 
         private f11_private(): C2_private {
->f11_private : Symbol(C4_private.f11_private, Decl(privacyGloFunc.ts, 101, 9))
+>f11_private : Symbol(f11_private, Decl(privacyGloFunc.ts, 101, 9))
 >C2_private : Symbol(C2_private, Decl(privacyGloFunc.ts, 4, 5))
 
             return new C2_private();
@@= skipped -8, +8 lines =@@
         }
 
         public f12_public(): C2_private {
->f12_public : Symbol(C4_private.f12_public, Decl(privacyGloFunc.ts, 105, 9))
+>f12_public : Symbol(f12_public, Decl(privacyGloFunc.ts, 105, 9))
 >C2_private : Symbol(C2_private, Decl(privacyGloFunc.ts, 4, 5))
 
             return new C2_private();
@@= skipped -137, +137 lines =@@
 >m2_C1_public : Symbol(m2_C1_public, Decl(privacyGloFunc.ts, 178, 11))
 
         private f() {
->f : Symbol(m2_C1_public.f, Decl(privacyGloFunc.ts, 179, 31))
+>f : Symbol(f, Decl(privacyGloFunc.ts, 179, 31))
         }
     }
 
@@= skipped -24, +24 lines =@@
         }
 
         private f1_private(m2_c3_f1_arg: m2_C1_public) {
->f1_private : Symbol(m2_C3_public.f1_private, Decl(privacyGloFunc.ts, 191, 9))
+>f1_private : Symbol(f1_private, Decl(privacyGloFunc.ts, 191, 9))
 >m2_c3_f1_arg : Symbol(m2_c3_f1_arg, Decl(privacyGloFunc.ts, 193, 27))
 >m2_C1_public : Symbol(m2_C1_public, Decl(privacyGloFunc.ts, 178, 11))
         }
 
         public f2_public(m2_c3_f2_arg: m2_C1_public) {
->f2_public : Symbol(m2_C3_public.f2_public, Decl(privacyGloFunc.ts, 194, 9))
+>f2_public : Symbol(f2_public, Decl(privacyGloFunc.ts, 194, 9))
 >m2_c3_f2_arg : Symbol(m2_c3_f2_arg, Decl(privacyGloFunc.ts, 196, 25))
 >m2_C1_public : Symbol(m2_C1_public, Decl(privacyGloFunc.ts, 178, 11))
         }
 
         private f3_private(m2_c3_f3_arg: m2_C2_private) {
->f3_private : Symbol(m2_C3_public.f3_private, Decl(privacyGloFunc.ts, 197, 9))
+>f3_private : Symbol(f3_private, Decl(privacyGloFunc.ts, 197, 9))
 >m2_c3_f3_arg : Symbol(m2_c3_f3_arg, Decl(privacyGloFunc.ts, 199, 27))
 >m2_C2_private : Symbol(m2_C2_private, Decl(privacyGloFunc.ts, 182, 5))
         }
 
         public f4_public(m2_c3_f4_arg: m2_C2_private) {
->f4_public : Symbol(m2_C3_public.f4_public, Decl(privacyGloFunc.ts, 200, 9))
+>f4_public : Symbol(f4_public, Decl(privacyGloFunc.ts, 200, 9))
 >m2_c3_f4_arg : Symbol(m2_c3_f4_arg, Decl(privacyGloFunc.ts, 202, 25))
 >m2_C2_private : Symbol(m2_C2_private, Decl(privacyGloFunc.ts, 182, 5))
         }
 
         private f5_private() {
->f5_private : Symbol(m2_C3_public.f5_private, Decl(privacyGloFunc.ts, 203, 9))
+>f5_private : Symbol(f5_private, Decl(privacyGloFunc.ts, 203, 9))
 
             return new m2_C1_public();
 >m2_C1_public : Symbol(m2_C1_public, Decl(privacyGloFunc.ts, 178, 11))
         }
 
         public f6_public() {
->f6_public : Symbol(m2_C3_public.f6_public, Decl(privacyGloFunc.ts, 207, 9))
+>f6_public : Symbol(f6_public, Decl(privacyGloFunc.ts, 207, 9))
 
             return new m2_C1_public();
 >m2_C1_public : Symbol(m2_C1_public, Decl(privacyGloFunc.ts, 178, 11))
         }
 
         private f7_private() {
->f7_private : Symbol(m2_C3_public.f7_private, Decl(privacyGloFunc.ts, 211, 9))
+>f7_private : Symbol(f7_private, Decl(privacyGloFunc.ts, 211, 9))
 
             return new m2_C2_private();
 >m2_C2_private : Symbol(m2_C2_private, Decl(privacyGloFunc.ts, 182, 5))
         }
 
         public f8_public() {
->f8_public : Symbol(m2_C3_public.f8_public, Decl(privacyGloFunc.ts, 215, 9))
+>f8_public : Symbol(f8_public, Decl(privacyGloFunc.ts, 215, 9))
 
             return new m2_C2_private();
 >m2_C2_private : Symbol(m2_C2_private, Decl(privacyGloFunc.ts, 182, 5))
         }
 
         private f9_private(): m2_C1_public {
->f9_private : Symbol(m2_C3_public.f9_private, Decl(privacyGloFunc.ts, 219, 9))
+>f9_private : Symbol(f9_private, Decl(privacyGloFunc.ts, 219, 9))
 >m2_C1_public : Symbol(m2_C1_public, Decl(privacyGloFunc.ts, 178, 11))
 
             return new m2_C1_public();
@@= skipped -60, +60 lines =@@
         }
 
         public f10_public(): m2_C1_public {
->f10_public : Symbol(m2_C3_public.f10_public, Decl(privacyGloFunc.ts, 223, 9))
+>f10_public : Symbol(f10_public, Decl(privacyGloFunc.ts, 223, 9))
 >m2_C1_public : Symbol(m2_C1_public, Decl(privacyGloFunc.ts, 178, 11))
 
             return new m2_C1_public();
@@= skipped -8, +8 lines =@@
         }
 
         private f11_private(): m2_C2_private {
->f11_private : Symbol(m2_C3_public.f11_private, Decl(privacyGloFunc.ts, 227, 9))
+>f11_private : Symbol(f11_private, Decl(privacyGloFunc.ts, 227, 9))
 >m2_C2_private : Symbol(m2_C2_private, Decl(privacyGloFunc.ts, 182, 5))
 
             return new m2_C2_private();
@@= skipped -8, +8 lines =@@
         }
 
         public f12_public(): m2_C2_private {
->f12_public : Symbol(m2_C3_public.f12_public, Decl(privacyGloFunc.ts, 231, 9))
+>f12_public : Symbol(f12_public, Decl(privacyGloFunc.ts, 231, 9))
 >m2_C2_private : Symbol(m2_C2_private, Decl(privacyGloFunc.ts, 182, 5))
 
             return new m2_C2_private();
@@= skipped -24, +24 lines =@@
         }
 
         private f1_private(m2_c4_f1_arg: m2_C1_public) {
->f1_private : Symbol(m2_C4_private.f1_private, Decl(privacyGloFunc.ts, 242, 9))
+>f1_private : Symbol(f1_private, Decl(privacyGloFunc.ts, 242, 9))
 >m2_c4_f1_arg : Symbol(m2_c4_f1_arg, Decl(privacyGloFunc.ts, 244, 27))
 >m2_C1_public : Symbol(m2_C1_public, Decl(privacyGloFunc.ts, 178, 11))
         }
 
         public f2_public(m2_c4_f2_arg: m2_C1_public) {
->f2_public : Symbol(m2_C4_private.f2_public, Decl(privacyGloFunc.ts, 245, 9))
+>f2_public : Symbol(f2_public, Decl(privacyGloFunc.ts, 245, 9))
 >m2_c4_f2_arg : Symbol(m2_c4_f2_arg, Decl(privacyGloFunc.ts, 247, 25))
 >m2_C1_public : Symbol(m2_C1_public, Decl(privacyGloFunc.ts, 178, 11))
         }
 
         private f3_private(m2_c4_f3_arg: m2_C2_private) {
->f3_private : Symbol(m2_C4_private.f3_private, Decl(privacyGloFunc.ts, 248, 9))
+>f3_private : Symbol(f3_private, Decl(privacyGloFunc.ts, 248, 9))
 >m2_c4_f3_arg : Symbol(m2_c4_f3_arg, Decl(privacyGloFunc.ts, 250, 27))
 >m2_C2_private : Symbol(m2_C2_private, Decl(privacyGloFunc.ts, 182, 5))
         }
 
         public f4_public(m2_c4_f4_arg: m2_C2_private) {
->f4_public : Symbol(m2_C4_private.f4_public, Decl(privacyGloFunc.ts, 251, 9))
+>f4_public : Symbol(f4_public, Decl(privacyGloFunc.ts, 251, 9))
 >m2_c4_f4_arg : Symbol(m2_c4_f4_arg, Decl(privacyGloFunc.ts, 253, 25))
 >m2_C2_private : Symbol(m2_C2_private, Decl(privacyGloFunc.ts, 182, 5))
         }
 
 
         private f5_private() {
->f5_private : Symbol(m2_C4_private.f5_private, Decl(privacyGloFunc.ts, 254, 9))
+>f5_private : Symbol(f5_private, Decl(privacyGloFunc.ts, 254, 9))
 
             return new m2_C1_public();
 >m2_C1_public : Symbol(m2_C1_public, Decl(privacyGloFunc.ts, 178, 11))
         }
 
         public f6_public() {
->f6_public : Symbol(m2_C4_private.f6_public, Decl(privacyGloFunc.ts, 259, 9))
+>f6_public : Symbol(f6_public, Decl(privacyGloFunc.ts, 259, 9))
 
             return new m2_C1_public();
 >m2_C1_public : Symbol(m2_C1_public, Decl(privacyGloFunc.ts, 178, 11))
         }
 
         private f7_private() {
->f7_private : Symbol(m2_C4_private.f7_private, Decl(privacyGloFunc.ts, 263, 9))
+>f7_private : Symbol(f7_private, Decl(privacyGloFunc.ts, 263, 9))
 
             return new m2_C2_private();
 >m2_C2_private : Symbol(m2_C2_private, Decl(privacyGloFunc.ts, 182, 5))
         }
 
         public f8_public() {
->f8_public : Symbol(m2_C4_private.f8_public, Decl(privacyGloFunc.ts, 267, 9))
+>f8_public : Symbol(f8_public, Decl(privacyGloFunc.ts, 267, 9))
 
             return new m2_C2_private();
 >m2_C2_private : Symbol(m2_C2_private, Decl(privacyGloFunc.ts, 182, 5))
@@= skipped -54, +54 lines =@@
 
 
         private f9_private(): m2_C1_public {
->f9_private : Symbol(m2_C4_private.f9_private, Decl(privacyGloFunc.ts, 271, 9))
+>f9_private : Symbol(f9_private, Decl(privacyGloFunc.ts, 271, 9))
 >m2_C1_public : Symbol(m2_C1_public, Decl(privacyGloFunc.ts, 178, 11))
 
             return new m2_C1_public();
@@= skipped -8, +8 lines =@@
         }
 
         public f10_public(): m2_C1_public {
->f10_public : Symbol(m2_C4_private.f10_public, Decl(privacyGloFunc.ts, 276, 9))
+>f10_public : Symbol(f10_public, Decl(privacyGloFunc.ts, 276, 9))
 >m2_C1_public : Symbol(m2_C1_public, Decl(privacyGloFunc.ts, 178, 11))
 
             return new m2_C1_public();
@@= skipped -8, +8 lines =@@
         }
 
         private f11_private(): m2_C2_private {
->f11_private : Symbol(m2_C4_private.f11_private, Decl(privacyGloFunc.ts, 280, 9))
+>f11_private : Symbol(f11_private, Decl(privacyGloFunc.ts, 280, 9))
 >m2_C2_private : Symbol(m2_C2_private, Decl(privacyGloFunc.ts, 182, 5))
 
             return new m2_C2_private();
@@= skipped -8, +8 lines =@@
         }
 
         public f12_public(): m2_C2_private {
->f12_public : Symbol(m2_C4_private.f12_public, Decl(privacyGloFunc.ts, 284, 9))
+>f12_public : Symbol(f12_public, Decl(privacyGloFunc.ts, 284, 9))
 >m2_C2_private : Symbol(m2_C2_private, Decl(privacyGloFunc.ts, 182, 5))
 
             return new m2_C2_private();
@@= skipped -134, +134 lines =@@
 >C5_private : Symbol(C5_private, Decl(privacyGloFunc.ts, 355, 1))
 
     private f() {
->f : Symbol(C5_private.f, Decl(privacyGloFunc.ts, 357, 18))
+>f : Symbol(f, Decl(privacyGloFunc.ts, 357, 18))
     }
 }
 
@@= skipped -23, +23 lines =@@
 >c7_c1_2 : Symbol(c7_c1_2, Decl(privacyGloFunc.ts, 368, 17))
     }
     private f1_private(c7_f1_arg: C6_public) {
->f1_private : Symbol(C7_public.f1_private, Decl(privacyGloFunc.ts, 369, 5))
+>f1_private : Symbol(f1_private, Decl(privacyGloFunc.ts, 369, 5))
 >c7_f1_arg : Symbol(c7_f1_arg, Decl(privacyGloFunc.ts, 370, 23))
 >C6_public : Symbol(C6_public, Decl(privacyGloFunc.ts, 360, 1))
     }
 
     public f2_public(c7_f2_arg: C6_public) {
->f2_public : Symbol(C7_public.f2_public, Decl(privacyGloFunc.ts, 371, 5))
+>f2_public : Symbol(f2_public, Decl(privacyGloFunc.ts, 371, 5))
 >c7_f2_arg : Symbol(c7_f2_arg, Decl(privacyGloFunc.ts, 373, 21))
 >C6_public : Symbol(C6_public, Decl(privacyGloFunc.ts, 360, 1))
     }
 
     private f3_private(c7_f3_arg: C5_private) {
->f3_private : Symbol(C7_public.f3_private, Decl(privacyGloFunc.ts, 374, 5))
+>f3_private : Symbol(f3_private, Decl(privacyGloFunc.ts, 374, 5))
 >c7_f3_arg : Symbol(c7_f3_arg, Decl(privacyGloFunc.ts, 376, 23))
 >C5_private : Symbol(C5_private, Decl(privacyGloFunc.ts, 355, 1))
     }
 
     public f4_public(c7_f4_arg: C5_private) { //error
->f4_public : Symbol(C7_public.f4_public, Decl(privacyGloFunc.ts, 377, 5))
+>f4_public : Symbol(f4_public, Decl(privacyGloFunc.ts, 377, 5))
 >c7_f4_arg : Symbol(c7_f4_arg, Decl(privacyGloFunc.ts, 379, 21))
 >C5_private : Symbol(C5_private, Decl(privacyGloFunc.ts, 355, 1))
     }
 
     private f5_private() {
->f5_private : Symbol(C7_public.f5_private, Decl(privacyGloFunc.ts, 380, 5))
+>f5_private : Symbol(f5_private, Decl(privacyGloFunc.ts, 380, 5))
 
         return new C6_public();
 >C6_public : Symbol(C6_public, Decl(privacyGloFunc.ts, 360, 1))
     }
 
     public f6_public() {
->f6_public : Symbol(C7_public.f6_public, Decl(privacyGloFunc.ts, 384, 5))
+>f6_public : Symbol(f6_public, Decl(privacyGloFunc.ts, 384, 5))
 
         return new C6_public();
 >C6_public : Symbol(C6_public, Decl(privacyGloFunc.ts, 360, 1))
     }
 
     private f7_private() {
->f7_private : Symbol(C7_public.f7_private, Decl(privacyGloFunc.ts, 388, 5))
+>f7_private : Symbol(f7_private, Decl(privacyGloFunc.ts, 388, 5))
 
         return new C5_private();
 >C5_private : Symbol(C5_private, Decl(privacyGloFunc.ts, 355, 1))
     }
 
     public f8_public() {
->f8_public : Symbol(C7_public.f8_public, Decl(privacyGloFunc.ts, 392, 5))
+>f8_public : Symbol(f8_public, Decl(privacyGloFunc.ts, 392, 5))
 
         return new C5_private(); //error
 >C5_private : Symbol(C5_private, Decl(privacyGloFunc.ts, 355, 1))
     }
 
     private f9_private(): C6_public {
->f9_private : Symbol(C7_public.f9_private, Decl(privacyGloFunc.ts, 396, 5))
+>f9_private : Symbol(f9_private, Decl(privacyGloFunc.ts, 396, 5))
 >C6_public : Symbol(C6_public, Decl(privacyGloFunc.ts, 360, 1))
 
         return new C6_public();
@@= skipped -60, +60 lines =@@
     }
 
     public f10_public(): C6_public {
->f10_public : Symbol(C7_public.f10_public, Decl(privacyGloFunc.ts, 400, 5))
+>f10_public : Symbol(f10_public, Decl(privacyGloFunc.ts, 400, 5))
 >C6_public : Symbol(C6_public, Decl(privacyGloFunc.ts, 360, 1))
 
         return new C6_public();
@@= skipped -8, +8 lines =@@
     }
 
     private f11_private(): C5_private {
->f11_private : Symbol(C7_public.f11_private, Decl(privacyGloFunc.ts, 404, 5))
+>f11_private : Symbol(f11_private, Decl(privacyGloFunc.ts, 404, 5))
 >C5_private : Symbol(C5_private, Decl(privacyGloFunc.ts, 355, 1))
 
         return new C5_private();
@@= skipped -8, +8 lines =@@
     }
 
     public f12_public(): C5_private { //error
->f12_public : Symbol(C7_public.f12_public, Decl(privacyGloFunc.ts, 408, 5))
+>f12_public : Symbol(f12_public, Decl(privacyGloFunc.ts, 408, 5))
 >C5_private : Symbol(C5_private, Decl(privacyGloFunc.ts, 355, 1))
 
         return new C5_private(); //error
@@= skipped -24, +24 lines =@@
     }
         
     private f1_private(c8_f1_arg: C6_public) {
->f1_private : Symbol(C8_private.f1_private, Decl(privacyGloFunc.ts, 419, 5))
+>f1_private : Symbol(f1_private, Decl(privacyGloFunc.ts, 419, 5))
 >c8_f1_arg : Symbol(c8_f1_arg, Decl(privacyGloFunc.ts, 421, 23))
 >C6_public : Symbol(C6_public, Decl(privacyGloFunc.ts, 360, 1))
     }
 
     public f2_public(c8_f2_arg: C6_public) {
->f2_public : Symbol(C8_private.f2_public, Decl(privacyGloFunc.ts, 422, 5))
+>f2_public : Symbol(f2_public, Decl(privacyGloFunc.ts, 422, 5))
 >c8_f2_arg : Symbol(c8_f2_arg, Decl(privacyGloFunc.ts, 424, 21))
 >C6_public : Symbol(C6_public, Decl(privacyGloFunc.ts, 360, 1))
     }
 
     private f3_private(c8_f3_arg: C5_private) {
->f3_private : Symbol(C8_private.f3_private, Decl(privacyGloFunc.ts, 425, 5))
+>f3_private : Symbol(f3_private, Decl(privacyGloFunc.ts, 425, 5))
 >c8_f3_arg : Symbol(c8_f3_arg, Decl(privacyGloFunc.ts, 427, 23))
 >C5_private : Symbol(C5_private, Decl(privacyGloFunc.ts, 355, 1))
     }
 
     public f4_public(c8_f4_arg: C5_private) {
->f4_public : Symbol(C8_private.f4_public, Decl(privacyGloFunc.ts, 428, 5))
+>f4_public : Symbol(f4_public, Decl(privacyGloFunc.ts, 428, 5))
 >c8_f4_arg : Symbol(c8_f4_arg, Decl(privacyGloFunc.ts, 430, 21))
 >C5_private : Symbol(C5_private, Decl(privacyGloFunc.ts, 355, 1))
     }
 
     private f5_private() {
->f5_private : Symbol(C8_private.f5_private, Decl(privacyGloFunc.ts, 431, 5))
+>f5_private : Symbol(f5_private, Decl(privacyGloFunc.ts, 431, 5))
 
         return new C6_public();
 >C6_public : Symbol(C6_public, Decl(privacyGloFunc.ts, 360, 1))
     }
 
     public f6_public() {
->f6_public : Symbol(C8_private.f6_public, Decl(privacyGloFunc.ts, 435, 5))
+>f6_public : Symbol(f6_public, Decl(privacyGloFunc.ts, 435, 5))
 
         return new C6_public();
 >C6_public : Symbol(C6_public, Decl(privacyGloFunc.ts, 360, 1))
     }
 
     private f7_private() {
->f7_private : Symbol(C8_private.f7_private, Decl(privacyGloFunc.ts, 439, 5))
+>f7_private : Symbol(f7_private, Decl(privacyGloFunc.ts, 439, 5))
 
         return new C5_private();
 >C5_private : Symbol(C5_private, Decl(privacyGloFunc.ts, 355, 1))
     }
 
     public f8_public() {
->f8_public : Symbol(C8_private.f8_public, Decl(privacyGloFunc.ts, 443, 5))
+>f8_public : Symbol(f8_public, Decl(privacyGloFunc.ts, 443, 5))
 
         return new C5_private();
 >C5_private : Symbol(C5_private, Decl(privacyGloFunc.ts, 355, 1))
     }
 
     private f9_private(): C6_public {
->f9_private : Symbol(C8_private.f9_private, Decl(privacyGloFunc.ts, 447, 5))
+>f9_private : Symbol(f9_private, Decl(privacyGloFunc.ts, 447, 5))
 >C6_public : Symbol(C6_public, Decl(privacyGloFunc.ts, 360, 1))
 
         return new C6_public();
@@= skipped -60, +60 lines =@@
     }
 
     public f10_public(): C6_public {
->f10_public : Symbol(C8_private.f10_public, Decl(privacyGloFunc.ts, 451, 5))
+>f10_public : Symbol(f10_public, Decl(privacyGloFunc.ts, 451, 5))
 >C6_public : Symbol(C6_public, Decl(privacyGloFunc.ts, 360, 1))
 
         return new C6_public();
@@= skipped -8, +8 lines =@@
     }
 
     private f11_private(): C5_private {
->f11_private : Symbol(C8_private.f11_private, Decl(privacyGloFunc.ts, 455, 5))
+>f11_private : Symbol(f11_private, Decl(privacyGloFunc.ts, 455, 5))
 >C5_private : Symbol(C5_private, Decl(privacyGloFunc.ts, 355, 1))
 
         return new C5_private();
@@= skipped -8, +8 lines =@@
     }
 
     public f12_public(): C5_private {
->f12_public : Symbol(C8_private.f12_public, Decl(privacyGloFunc.ts, 459, 5))
+>f12_public : Symbol(f12_public, Decl(privacyGloFunc.ts, 459, 5))
 >C5_private : Symbol(C5_private, Decl(privacyGloFunc.ts, 355, 1))
 
         return new C5_private();
