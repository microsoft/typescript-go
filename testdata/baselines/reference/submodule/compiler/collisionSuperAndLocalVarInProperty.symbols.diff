--- old.collisionSuperAndLocalVarInProperty.symbols
+++ new.collisionSuperAndLocalVarInProperty.symbols
@@= skipped -7, +7 lines =@@
 >Foo : Symbol(Foo, Decl(collisionSuperAndLocalVarInProperty.ts, 0, 16))
 
    public prop1 = {
->prop1 : Symbol(Foo.prop1, Decl(collisionSuperAndLocalVarInProperty.ts, 1, 11))
+>prop1 : Symbol(prop1, Decl(collisionSuperAndLocalVarInProperty.ts, 1, 11))
 
         doStuff: () => {
 >doStuff : Symbol(doStuff, Decl(collisionSuperAndLocalVarInProperty.ts, 2, 19))
@@= skipped -10, +10 lines =@@
         }
     }
     public _super = 10; // No error
->_super : Symbol(Foo._super, Decl(collisionSuperAndLocalVarInProperty.ts, 6, 5))
+>_super : Symbol(_super, Decl(collisionSuperAndLocalVarInProperty.ts, 6, 5))
 }
 class b extends Foo {
 >b : Symbol(b, Decl(collisionSuperAndLocalVarInProperty.ts, 8, 1))
 >Foo : Symbol(Foo, Decl(collisionSuperAndLocalVarInProperty.ts, 0, 16))
 
     public prop2 = {
->prop2 : Symbol(b.prop2, Decl(collisionSuperAndLocalVarInProperty.ts, 9, 21))
+>prop2 : Symbol(prop2, Decl(collisionSuperAndLocalVarInProperty.ts, 9, 21))
 
         doStuff: () => {
 >doStuff : Symbol(doStuff, Decl(collisionSuperAndLocalVarInProperty.ts, 10, 20))
@@= skipped -17, +17 lines =@@
         }
     }
     public _super = 10; // No error
->_super : Symbol(b._super, Decl(collisionSuperAndLocalVarInProperty.ts, 14, 5))
+>_super : Symbol(_super, Decl(collisionSuperAndLocalVarInProperty.ts, 14, 5))
 }
