--- old.asyncYieldStarContextualType.symbols
+++ new.asyncYieldStarContextualType.symbols
@@= skipped -7, +7 lines =@@
 >E : Symbol(E, Decl(asyncYieldStarContextualType.ts, 1, 19))
 
     [Symbol.iterator](): Generator<E, T, unknown>
->[Symbol.iterator] : Symbol(Result[Symbol.iterator], Decl(asyncYieldStarContextualType.ts, 1, 24))
->Symbol.iterator : Symbol(SymbolConstructor.iterator, Decl(lib.es2015.iterable.d.ts, --, --))
+>[Symbol.iterator] : Symbol([Symbol.iterator], Decl(asyncYieldStarContextualType.ts, 1, 24))
+>Symbol.iterator : Symbol(iterator, Decl(lib.es2015.iterable.d.ts, --, --))
 >Symbol : Symbol(Symbol, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2019.symbol.d.ts, --, --))
->iterator : Symbol(SymbolConstructor.iterator, Decl(lib.es2015.iterable.d.ts, --, --))
+>iterator : Symbol(iterator, Decl(lib.es2015.iterable.d.ts, --, --))
 >Generator : Symbol(Generator, Decl(lib.es2015.generator.d.ts, --, --))
 >E : Symbol(E, Decl(asyncYieldStarContextualType.ts, 1, 19))
 >T : Symbol(T, Decl(asyncYieldStarContextualType.ts, 1, 17))
@@= skipped -60, +60 lines =@@
     //   Result<Author, "NOT_FOUND_AUTHOR>
     const test1 = await authorPromise.then(mapper)
 >test1 : Symbol(test1, Decl(asyncYieldStarContextualType.ts, 16, 9))
->authorPromise.then : Symbol(Promise.then, Decl(lib.es5.d.ts, --, --))
+>authorPromise.then : Symbol(then, Decl(lib.es5.d.ts, --, --))
 >authorPromise : Symbol(authorPromise, Decl(asyncYieldStarContextualType.ts, 9, 13))
->then : Symbol(Promise.then, Decl(lib.es5.d.ts, --, --))
+>then : Symbol(then, Decl(lib.es5.d.ts, --, --))
 >mapper : Symbol(mapper, Decl(asyncYieldStarContextualType.ts, 10, 13))
 
     // With yield*, the type of test2 is
@@= skipped -10, +10 lines =@@
     // But this codepath has no way to produce BookWithAuthor
     const test2 = yield* await authorPromise.then(mapper)
 >test2 : Symbol(test2, Decl(asyncYieldStarContextualType.ts, 21, 9))
->authorPromise.then : Symbol(Promise.then, Decl(lib.es5.d.ts, --, --))
+>authorPromise.then : Symbol(then, Decl(lib.es5.d.ts, --, --))
 >authorPromise : Symbol(authorPromise, Decl(asyncYieldStarContextualType.ts, 9, 13))
->then : Symbol(Promise.then, Decl(lib.es5.d.ts, --, --))
+>then : Symbol(then, Decl(lib.es5.d.ts, --, --))
 >mapper : Symbol(mapper, Decl(asyncYieldStarContextualType.ts, 10, 13))
 
     const x1 = yield* g();
