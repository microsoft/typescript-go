--- old.sourceMapValidationDestructuringVariableStatementArrayBindingPattern3.types
+++ new.sourceMapValidationDestructuringVariableStatementArrayBindingPattern3.types
@@= skipped -1, +1 lines =@@
 
 === sourceMapValidationDestructuringVariableStatementArrayBindingPattern3.ts ===
 declare var console: {
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 
     log(msg: any): void;
 >log : (msg: any) => void
@@= skipped -63, +63 lines =@@
 [, nameA] = robotA;
 >[, nameA] = robotA : Robot
 >[, nameA] : [undefined, string]
-> : undefined
 >nameA : string
 >robotA : Robot
 
 [, nameB] = getRobotB();
 >[, nameB] = getRobotB() : Robot
 >[, nameB] : [undefined, string]
-> : undefined
 >nameB : string
 >getRobotB() : Robot
 >getRobotB : () => Robot
@@= skipped -15, +13 lines =@@
 [, nameB] = [2, "trimmer", "trimming"];
 >[, nameB] = [2, "trimmer", "trimming"] : [number, string, string]
 >[, nameB] : [undefined, string]
-> : undefined
 >nameB : string
 >[2, "trimmer", "trimming"] : [number, string, string]
 >2 : 2
@@= skipped -10, +9 lines =@@
 [, multiSkillB] = multiRobotB;
 >[, multiSkillB] = multiRobotB : MultiSkilledRobot
 >[, multiSkillB] : [undefined, [string, string]]
-> : undefined
 >multiSkillB : [string, string]
 >multiRobotB : MultiSkilledRobot
 
 [, multiSkillB] = getMultiRobotB();
 >[, multiSkillB] = getMultiRobotB() : MultiSkilledRobot
 >[, multiSkillB] : [undefined, [string, string]]
-> : undefined
 >multiSkillB : [string, string]
 >getMultiRobotB() : MultiSkilledRobot
 >getMultiRobotB : () => MultiSkilledRobot
@@= skipped -15, +13 lines =@@
 [, multiSkillB] = ["roomba", ["vacuum", "mopping"]];
 >[, multiSkillB] = ["roomba", ["vacuum", "mopping"]] : [string, [string, string]]
 >[, multiSkillB] : [undefined, [string, string]]
-> : undefined
 >multiSkillB : [string, string]
 >["roomba", ["vacuum", "mopping"]] : [string, [string, string]]
 >"roomba" : "roomba"
@@= skipped -176, +175 lines =@@
     console.log(skillB);
 >console.log(skillB) : void
 >console.log : (msg: any) => void
->console : { log(msg: any): void; }
+>console : { log: (msg: any) => void; }
 >log : (msg: any) => void
 >skillB : string
 }
