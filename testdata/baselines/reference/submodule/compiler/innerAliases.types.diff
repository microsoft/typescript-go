--- old.innerAliases.types
+++ new.innerAliases.types
@@= skipped -2, +2 lines =@@
 === innerAliases.ts ===
 module A {
 >A : typeof A
->  : ^^^^^^^^
 
     export module B {
 >B : typeof B
->  : ^^^^^^^^
 
         export module C {
 >C : typeof C
->  : ^^^^^^^^
 
             export class Class1 {}
 >Class1 : Class1
->       : ^^^^^^
         }
     }
 }
 
 module D {
 >D : typeof D
->  : ^^^^^^^^
 
     import inner = A.B.C; 
->inner : typeof inner
->      : ^^^^^^^^^^^^
+>inner : typeof C
 >A : typeof A
->  : ^^^^^^^^
->B : typeof A.B
->  : ^^^^^^^^^^
->C : typeof inner
->  : ^^^^^^^^^^^^
+>B : typeof B
+>C : typeof C
    
     var c1 = new inner.Class1(); 
->c1 : inner.Class1
->   : ^^^^^^^^^^^^
->new inner.Class1() : inner.Class1
->                   : ^^^^^^^^^^^^
->inner.Class1 : typeof inner.Class1
->             : ^^^^^^^^^^^^^^^^^^^
->inner : typeof inner
->      : ^^^^^^^^^^^^
->Class1 : typeof inner.Class1
->       : ^^^^^^^^^^^^^^^^^^^
+>c1 : Class1
+>new inner.Class1() : Class1
+>inner.Class1 : typeof Class1
+>inner : typeof C
+>Class1 : typeof Class1
 
     export module E { 
 >E : typeof E
->  : ^^^^^^^^
 
         export class Class2 {}
 >Class2 : Class2
->       : ^^^^^^
     }
 }
 
 var c: D.inner.Class1;
->c : D.inner.Class1
->  : ^^^^^^^^^^^^^^
+>c : Class1
 >D : any
->  : ^^^
 >inner : any
->      : ^^^
 
 c = new D.inner.Class1();
 >c = new D.inner.Class1() : any
->                         : ^^^
->c : D.inner.Class1
->  : ^^^^^^^^^^^^^^
+>c : Class1
 >new D.inner.Class1() : any
->                     : ^^^
 >D.inner.Class1 : any
->               : ^^^
 >D.inner : any
->        : ^^^
 >D : typeof D
->  : ^^^^^^^^
 >inner : any
->      : ^^^
 >Class1 : any
->       : ^^^
 
 
