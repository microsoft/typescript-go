--- old.capturedLetConstInLoop2_ES6.symbols
+++ new.capturedLetConstInLoop2_ES6.symbols
@@= skipped -10, +10 lines =@@
 
         let a = arguments.length;
 >a : Symbol(a, Decl(capturedLetConstInLoop2_ES6.ts, 3, 11))
->arguments.length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 >arguments : Symbol(arguments)
->length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 
         (function() { return x + a });
 >x : Symbol(x, Decl(capturedLetConstInLoop2_ES6.ts, 2, 12))
@@= skipped -23, +21 lines =@@
 
         let a = arguments.length;
 >a : Symbol(a, Decl(capturedLetConstInLoop2_ES6.ts, 11, 11))
->arguments.length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 >arguments : Symbol(arguments)
->length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 
         (function() { return x + a });
 >x : Symbol(x, Decl(capturedLetConstInLoop2_ES6.ts, 10, 12))
@@= skipped -25, +23 lines =@@
 
         let a = arguments.length;
 >a : Symbol(a, Decl(capturedLetConstInLoop2_ES6.ts, 19, 11))
->arguments.length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 >arguments : Symbol(arguments)
->length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 
         (function() { return x + a });
 >x : Symbol(x, Decl(capturedLetConstInLoop2_ES6.ts, 18, 12))
@@= skipped -21, +19 lines =@@
     while (1 === 1) {
         let a = arguments.length;
 >a : Symbol(a, Decl(capturedLetConstInLoop2_ES6.ts, 27, 11))
->arguments.length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 >arguments : Symbol(arguments)
->length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 
         (function() { return x + a });
 >x : Symbol(x, Decl(capturedLetConstInLoop2_ES6.ts, 25, 14))
@@= skipped -24, +22 lines =@@
 
         let a = arguments.length;
 >a : Symbol(a, Decl(capturedLetConstInLoop2_ES6.ts, 36, 11))
->arguments.length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 >arguments : Symbol(arguments)
->length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 
         (function() { return x + a });
 >x : Symbol(x, Decl(capturedLetConstInLoop2_ES6.ts, 35, 11))
@@= skipped -26, +24 lines =@@
 
         let a = arguments.length;
 >a : Symbol(a, Decl(capturedLetConstInLoop2_ES6.ts, 44, 11))
->arguments.length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 >arguments : Symbol(arguments)
->length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 
         let x = 1;
 >x : Symbol(x, Decl(capturedLetConstInLoop2_ES6.ts, 45, 11))
@@= skipped -29, +27 lines =@@
 
         let a = arguments.length;
 >a : Symbol(a, Decl(capturedLetConstInLoop2_ES6.ts, 53, 11))
->arguments.length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 >arguments : Symbol(arguments)
->length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 
         (function() { return x + y + a });
 >x : Symbol(x, Decl(capturedLetConstInLoop2_ES6.ts, 52, 12))
@@= skipped -28, +26 lines =@@
 
         let a = arguments.length;
 >a : Symbol(a, Decl(capturedLetConstInLoop2_ES6.ts, 63, 11))
->arguments.length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 >arguments : Symbol(arguments)
->length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 
         (function() { return x + y + a });
 >x : Symbol(x, Decl(capturedLetConstInLoop2_ES6.ts, 62, 11))
@@= skipped -27, +25 lines =@@
 
         let a = arguments.length;
 >a : Symbol(a, Decl(capturedLetConstInLoop2_ES6.ts, 72, 11))
->arguments.length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 >arguments : Symbol(arguments)
->length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 
         (function() { return x + y + a });
 >x : Symbol(x, Decl(capturedLetConstInLoop2_ES6.ts, 71, 11))
@@= skipped -32, +30 lines =@@
 
         let a = arguments.length;
 >a : Symbol(a, Decl(capturedLetConstInLoop2_ES6.ts, 82, 11))
->arguments.length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 >arguments : Symbol(arguments)
->length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 
         (function() { return x + y + a });
 >x : Symbol(x, Decl(capturedLetConstInLoop2_ES6.ts, 81, 11))
@@= skipped -25, +23 lines =@@
 
         const a = arguments.length;
 >a : Symbol(a, Decl(capturedLetConstInLoop2_ES6.ts, 90, 13))
->arguments.length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 >arguments : Symbol(arguments)
->length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 
         (function() { return x + a });
 >x : Symbol(x, Decl(capturedLetConstInLoop2_ES6.ts, 89, 14))
@@= skipped -23, +21 lines =@@
 
         const a = arguments.length;
 >a : Symbol(a, Decl(capturedLetConstInLoop2_ES6.ts, 98, 13))
->arguments.length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 >arguments : Symbol(arguments)
->length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 
         (function() { return x + a });
 >x : Symbol(x, Decl(capturedLetConstInLoop2_ES6.ts, 97, 14))
@@= skipped -24, +22 lines =@@
 
         const a = arguments.length;
 >a : Symbol(a, Decl(capturedLetConstInLoop2_ES6.ts, 106, 13))
->arguments.length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 >arguments : Symbol(arguments)
->length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 
         (function() { return x + a });
 >x : Symbol(x, Decl(capturedLetConstInLoop2_ES6.ts, 105, 14))
@@= skipped -21, +19 lines =@@
     while (1 === 1) {
         const a = arguments.length;
 >a : Symbol(a, Decl(capturedLetConstInLoop2_ES6.ts, 114, 13))
->arguments.length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 >arguments : Symbol(arguments)
->length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 
         (function() { return x + a });
 >x : Symbol(x, Decl(capturedLetConstInLoop2_ES6.ts, 112, 16))
@@= skipped -24, +22 lines =@@
 
         const a = arguments.length;
 >a : Symbol(a, Decl(capturedLetConstInLoop2_ES6.ts, 123, 13))
->arguments.length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 >arguments : Symbol(arguments)
->length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 
         (function() { return x + a });
 >x : Symbol(x, Decl(capturedLetConstInLoop2_ES6.ts, 122, 13))
@@= skipped -25, +23 lines =@@
 
         const a = arguments.length;
 >a : Symbol(a, Decl(capturedLetConstInLoop2_ES6.ts, 131, 13))
->arguments.length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 >arguments : Symbol(arguments)
->length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 
         const x = 1;
 >x : Symbol(x, Decl(capturedLetConstInLoop2_ES6.ts, 132, 13))
@@= skipped -28, +26 lines =@@
 
         const a = arguments.length;
 >a : Symbol(a, Decl(capturedLetConstInLoop2_ES6.ts, 140, 13))
->arguments.length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 >arguments : Symbol(arguments)
->length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 
         (function() { return x + y + a });
 >x : Symbol(x, Decl(capturedLetConstInLoop2_ES6.ts, 139, 14))
@@= skipped -28, +26 lines =@@
 
         const a = arguments.length;
 >a : Symbol(a, Decl(capturedLetConstInLoop2_ES6.ts, 150, 13))
->arguments.length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 >arguments : Symbol(arguments)
->length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 
         (function() { return x + y + a });
 >x : Symbol(x, Decl(capturedLetConstInLoop2_ES6.ts, 149, 13))
@@= skipped -27, +25 lines =@@
 
         const a = arguments.length;
 >a : Symbol(a, Decl(capturedLetConstInLoop2_ES6.ts, 159, 13))
->arguments.length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 >arguments : Symbol(arguments)
->length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 
         (function() { return x + y + a });
 >x : Symbol(x, Decl(capturedLetConstInLoop2_ES6.ts, 158, 13))
@@= skipped -31, +29 lines =@@
 
         const a = arguments.length;
 >a : Symbol(a, Decl(capturedLetConstInLoop2_ES6.ts, 169, 13))
->arguments.length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 >arguments : Symbol(arguments)
->length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 
         (function() { return x + y + a });
 >x : Symbol(x, Decl(capturedLetConstInLoop2_ES6.ts, 168, 13))
