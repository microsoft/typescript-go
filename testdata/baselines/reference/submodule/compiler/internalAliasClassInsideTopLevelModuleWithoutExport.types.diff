--- old.internalAliasClassInsideTopLevelModuleWithoutExport.types
+++ new.internalAliasClassInsideTopLevelModuleWithoutExport.types
@@= skipped -2, +2 lines =@@
 === internalAliasClassInsideTopLevelModuleWithoutExport.ts ===
 export module x {
 >x : typeof x
->  : ^^^^^^^^
 
     export class c {
 >c : c
->  : ^
 
         foo(a: number) {
 >foo : (a: number) => number
->    : ^ ^^      ^^^^^^^^^^^
 >a : number
->  : ^^^^^^
 
             return a;
 >a : number
->  : ^^^^^^
         }
     }
 }
 
 import xc = x.c;
->xc : typeof xc
->   : ^^^^^^^^^
+>xc : typeof c
 >x : typeof x
->  : ^^^^^^^^
->c : xc
->  : ^^
+>c : c
 
 export var cProp = new xc();
->cProp : xc
->      : ^^
->new xc() : xc
->         : ^^
->xc : typeof xc
->   : ^^^^^^^^^
+>cProp : c
+>new xc() : c
+>xc : typeof c
 
 var cReturnVal = cProp.foo(10);
 >cReturnVal : number
->           : ^^^^^^
 >cProp.foo(10) : number
->              : ^^^^^^
 >cProp.foo : (a: number) => number
->          : ^ ^^      ^^^^^^^^^^^
->cProp : xc
->      : ^^
+>cProp : c
 >foo : (a: number) => number
->    : ^ ^^      ^^^^^^^^^^^
 >10 : 10
->   : ^^
 
