--- old.declarationEmitExpressionInExtends6.js
+++ new.declarationEmitExpressionInExtends6.js
@@= skipped -15, +15 lines =@@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.Foo = void 0;
-var Foo = /** @class */ (function () {
-    function Foo() {
-    }
-    return Foo;
-}());
+class Foo {
+}
 exports.Foo = Foo;
 //// [b.js]
 "use strict";
-var __extends = (this && this.__extends) || (function () {
-    var extendStatics = function (d, b) {
-        extendStatics = Object.setPrototypeOf ||
-            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
-            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
-        return extendStatics(d, b);
-    };
-    return function (d, b) {
-        if (typeof b !== "function" && b !== null)
-            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
-        extendStatics(d, b);
-        function __() { this.constructor = d; }
-        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
-    };
-})();
 Object.defineProperty(exports, "__esModule", { value: true });
-var A = require("./a");
-var Foo = A.Foo;
-var default_1 = /** @class */ (function (_super) {
-    __extends(default_1, _super);
-    function default_1() {
-        return _super !== null && _super.apply(this, arguments) || this;
-    }
-    return default_1;
-}(Foo));
-exports.default = default_1;
-
-
-//// [a.d.ts]
-export declare class Foo {
+const A = require("./a");
+const { Foo } = A;
+class default_1 extends Foo {
 }
-//// [b.d.ts]
-import * as A from "./a";
-declare const Foo: typeof A.Foo;
-export default class extends Foo {
-}
-export {};
+exports.default = default_1;
