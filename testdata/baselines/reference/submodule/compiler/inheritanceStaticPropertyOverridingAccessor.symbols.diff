--- old.inheritanceStaticPropertyOverridingAccessor.symbols
+++ new.inheritanceStaticPropertyOverridingAccessor.symbols
@@= skipped -4, +4 lines =@@
 >a : Symbol(a, Decl(inheritanceStaticPropertyOverridingAccessor.ts, 0, 0))
 
     static get x(): () => string {
->x : Symbol(a.x, Decl(inheritanceStaticPropertyOverridingAccessor.ts, 0, 9), Decl(inheritanceStaticPropertyOverridingAccessor.ts, 3, 5))
+>x : Symbol(x, Decl(inheritanceStaticPropertyOverridingAccessor.ts, 0, 9), Decl(inheritanceStaticPropertyOverridingAccessor.ts, 3, 5))
 
         return null;;
     }
     static set x(aValue: () => string) {
->x : Symbol(a.x, Decl(inheritanceStaticPropertyOverridingAccessor.ts, 0, 9), Decl(inheritanceStaticPropertyOverridingAccessor.ts, 3, 5))
+>x : Symbol(x, Decl(inheritanceStaticPropertyOverridingAccessor.ts, 0, 9), Decl(inheritanceStaticPropertyOverridingAccessor.ts, 3, 5))
 >aValue : Symbol(aValue, Decl(inheritanceStaticPropertyOverridingAccessor.ts, 4, 17))
     }
 }
@@= skipped -15, +15 lines =@@
 >a : Symbol(a, Decl(inheritanceStaticPropertyOverridingAccessor.ts, 0, 0))
 
     static x: () => string;
->x : Symbol(b.x, Decl(inheritanceStaticPropertyOverridingAccessor.ts, 8, 19))
+>x : Symbol(x, Decl(inheritanceStaticPropertyOverridingAccessor.ts, 8, 19))
 }
