--- old.typeParameterConstrainedToOuterTypeParameter.types
+++ new.typeParameterConstrainedToOuterTypeParameter.types
@@= skipped -1, +1 lines =@@
 
 === typeParameterConstrainedToOuterTypeParameter.ts ===
 interface A<T> {
+>A : A<T>
+>T : T
+
     <U extends T>(x: U[])
+>U : U
 >x : U[]
->  : ^^^
 }
 
 interface B<T> {
+>B : B<T>
+>T : T
+
     <U extends T>(x: U)
+>U : U
 >x : U
->  : ^
 }
 
 var a: A<string>
 >a : A<string>
->  : ^^^^^^^^^
 
 var b: B<string> = a; // assignment should be legal (both U's get instantiated to any for comparison)
 >b : B<string>
->  : ^^^^^^^^^
 >a : A<string>
->  : ^^^^^^^^^
 
