--- old.genericFunctionsWithOptionalParameters3.symbols
+++ new.genericFunctionsWithOptionalParameters3.symbols
@@= skipped -5, +5 lines =@@
 >T : Symbol(T, Decl(genericFunctionsWithOptionalParameters3.ts, 0, 17))
 
     public add(x: T) { }
->add : Symbol(Collection.add, Decl(genericFunctionsWithOptionalParameters3.ts, 0, 21))
+>add : Symbol(add, Decl(genericFunctionsWithOptionalParameters3.ts, 0, 21))
 >x : Symbol(x, Decl(genericFunctionsWithOptionalParameters3.ts, 1, 15))
 >T : Symbol(T, Decl(genericFunctionsWithOptionalParameters3.ts, 0, 17))
 }
@@= skipped -8, +8 lines =@@
 >Utils : Symbol(Utils, Decl(genericFunctionsWithOptionalParameters3.ts, 2, 1))
 
     fold<T, S>(c?: Collection<T>, folder?: (s: S, t: T) => T, init?: S): T;
->fold : Symbol(Utils.fold, Decl(genericFunctionsWithOptionalParameters3.ts, 3, 17))
+>fold : Symbol(fold, Decl(genericFunctionsWithOptionalParameters3.ts, 3, 17))
 >T : Symbol(T, Decl(genericFunctionsWithOptionalParameters3.ts, 4, 9))
 >S : Symbol(S, Decl(genericFunctionsWithOptionalParameters3.ts, 4, 11))
 >c : Symbol(c, Decl(genericFunctionsWithOptionalParameters3.ts, 4, 15))
@@= skipped -17, +17 lines =@@
 >T : Symbol(T, Decl(genericFunctionsWithOptionalParameters3.ts, 4, 9))
 
     mapReduce<T, U, V>(c: Collection<T>, mapper: (x: T) => U, reducer: (y: U) => V): Collection<V>;
->mapReduce : Symbol(Utils.mapReduce, Decl(genericFunctionsWithOptionalParameters3.ts, 4, 75))
+>mapReduce : Symbol(mapReduce, Decl(genericFunctionsWithOptionalParameters3.ts, 4, 75))
 >T : Symbol(T, Decl(genericFunctionsWithOptionalParameters3.ts, 5, 14))
 >U : Symbol(U, Decl(genericFunctionsWithOptionalParameters3.ts, 5, 16))
 >V : Symbol(V, Decl(genericFunctionsWithOptionalParameters3.ts, 5, 19))
@@= skipped -28, +28 lines =@@
 
 var r3 = utils.mapReduce(c, (x) => { return 1 }, (y) => { return new Date() });
 >r3 : Symbol(r3, Decl(genericFunctionsWithOptionalParameters3.ts, 9, 3))
->utils.mapReduce : Symbol(Utils.mapReduce, Decl(genericFunctionsWithOptionalParameters3.ts, 4, 75))
+>utils.mapReduce : Symbol(mapReduce, Decl(genericFunctionsWithOptionalParameters3.ts, 4, 75))
 >utils : Symbol(utils, Decl(genericFunctionsWithOptionalParameters3.ts, 7, 3))
->mapReduce : Symbol(Utils.mapReduce, Decl(genericFunctionsWithOptionalParameters3.ts, 4, 75))
+>mapReduce : Symbol(mapReduce, Decl(genericFunctionsWithOptionalParameters3.ts, 4, 75))
 >c : Symbol(c, Decl(genericFunctionsWithOptionalParameters3.ts, 8, 3))
 >x : Symbol(x, Decl(genericFunctionsWithOptionalParameters3.ts, 9, 29))
 >y : Symbol(y, Decl(genericFunctionsWithOptionalParameters3.ts, 9, 50))
@@= skipped -10, +10 lines =@@
 
 var r4 = utils.mapReduce(c, (x: string) => { return 1 }, (y: number) => { return new Date() });
 >r4 : Symbol(r4, Decl(genericFunctionsWithOptionalParameters3.ts, 10, 3))
->utils.mapReduce : Symbol(Utils.mapReduce, Decl(genericFunctionsWithOptionalParameters3.ts, 4, 75))
+>utils.mapReduce : Symbol(mapReduce, Decl(genericFunctionsWithOptionalParameters3.ts, 4, 75))
 >utils : Symbol(utils, Decl(genericFunctionsWithOptionalParameters3.ts, 7, 3))
->mapReduce : Symbol(Utils.mapReduce, Decl(genericFunctionsWithOptionalParameters3.ts, 4, 75))
+>mapReduce : Symbol(mapReduce, Decl(genericFunctionsWithOptionalParameters3.ts, 4, 75))
 >c : Symbol(c, Decl(genericFunctionsWithOptionalParameters3.ts, 8, 3))
 >x : Symbol(x, Decl(genericFunctionsWithOptionalParameters3.ts, 10, 29))
 >y : Symbol(y, Decl(genericFunctionsWithOptionalParameters3.ts, 10, 58))
@@= skipped -19, +19 lines =@@
 
 var r5 = utils.mapReduce(c, f1, f2);
 >r5 : Symbol(r5, Decl(genericFunctionsWithOptionalParameters3.ts, 13, 3))
->utils.mapReduce : Symbol(Utils.mapReduce, Decl(genericFunctionsWithOptionalParameters3.ts, 4, 75))
+>utils.mapReduce : Symbol(mapReduce, Decl(genericFunctionsWithOptionalParameters3.ts, 4, 75))
 >utils : Symbol(utils, Decl(genericFunctionsWithOptionalParameters3.ts, 7, 3))
->mapReduce : Symbol(Utils.mapReduce, Decl(genericFunctionsWithOptionalParameters3.ts, 4, 75))
+>mapReduce : Symbol(mapReduce, Decl(genericFunctionsWithOptionalParameters3.ts, 4, 75))
 >c : Symbol(c, Decl(genericFunctionsWithOptionalParameters3.ts, 8, 3))
 >f1 : Symbol(f1, Decl(genericFunctionsWithOptionalParameters3.ts, 11, 3))
 >f2 : Symbol(f2, Decl(genericFunctionsWithOptionalParameters3.ts, 12, 3))
