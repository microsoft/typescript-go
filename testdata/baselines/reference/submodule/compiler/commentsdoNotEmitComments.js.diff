--- old.commentsdoNotEmitComments.js
+++ new.commentsdoNotEmitComments.js
@@= skipped -95, +95 lines =@@

 //// [commentsdoNotEmitComments.js]
 var myVariable = 10;
-function foo(p) {
+function foo(/** parameter comment*/ p) {
 }
 var fooVar;
 foo(50);
 fooVar();
-var c = (function () {
-    function c() {
-        this.b = 10;
-    }
-    c.prototype.myFoo = function () {
-        return this.b;
-    };
-    Object.defineProperty(c.prototype, "prop1", {
-        get: function () {
-            return this.b;
-        },
-        set: function (val) {
-            this.b = val;
-        },
-        enumerable: false,
-        configurable: true
-    });
-    c.prototype.foo1 = function (aOrb) {
+class c {
+    constructor() {
+    }
+    b = 10;
+    myFoo() {
+        return this.b;
+    }
+    get prop1() {
+        return this.b;
+    }
+    set prop1(val) {
+        this.b = val;
+    }
+    foo1(aOrb) {
         return aOrb.toString();
-    };
-    return c;
-}());
+    }
+}
 var i = new c();
 var i1_i;
 var m1;
 (function (m1) {
-    var b = (function () {
-        function b(x) {
+    class b {
+        x;
+        constructor(x) {
             this.x = x;
         }
-        return b;
-    }());
+    }
     m1.b = b;
 })(m1 || (m1 = {}));
-var shade = 1;
+var color;
+(function (color) {
+    color[color["red"] = 0] = "red";
+    color[color["green"] = 1] = "green";
+    color[color["blue"] = 2] = "blue";
+})(color || (color = {}));
+var shade = color.green;


 //// [commentsdoNotEmitComments.d.ts]
 declare var myVariable: number;
-declare function foo(p: number): void;
+declare function foo(/** parameter comment*/ p: number): void;
 declare var fooVar: () => void;
 declare class c {
     constructor();
@@= skipped -58, +59 lines =@@
 declare var i: c;
 interface i1 {
     (a: number): number;
-    new (b: string): any;
+    new (b: string);
     [a: number]: string;
-    myFoo(a: number): string;
+    myFoo(/*param prop*/ a: number): string;
     prop: string;
 }
 declare var i1_i: i1;