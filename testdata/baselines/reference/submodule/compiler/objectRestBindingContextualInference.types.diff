--- old.objectRestBindingContextualInference.types
+++ new.objectRestBindingContextualInference.types
@@= skipped -4, +4 lines =@@
 
 type ImageHolder<K extends string> = {
 >ImageHolder : ImageHolder<K>
+>K : K
 
   [P in K]: string;
+>P : P
+
 };
 
 type SetupImageRefs<K extends string> = {
 >SetupImageRefs : SetupImageRefs<K>
+>K : K
 
   [P in K]: File;
+>P : P
+
 };
 
 type SetupImages<K extends string> = SetupImageRefs<K> & {
 >SetupImages : SetupImages<K>
+>K : K
 
   prepare: () => { type: K };
 >prepare : () => { type: K; }
@@= skipped -20, +27 lines =@@
 };
 
 interface TestInterface {
+>TestInterface : TestInterface
+
   name: string;
 >name : string
 
@@= skipped -9, +11 lines =@@
 
 declare function setupImages<R extends ImageHolder<K>, K extends string>(
 >setupImages : <R extends ImageHolder<K>, K extends string>(item: R, keys: K[]) => SetupImages<K>
+>R : R
+>K : K
 
   item: R,
 >item : R
