--- old.chainedAssignment3.symbols
+++ new.chainedAssignment3.symbols
@@= skipped -4, +4 lines =@@
 >A : Symbol(A, Decl(chainedAssignment3.ts, 0, 0))
 
     id: number;
->id : Symbol(A.id, Decl(chainedAssignment3.ts, 0, 9))
+>id : Symbol(id, Decl(chainedAssignment3.ts, 0, 9))
 }
 
 class B extends A {
@@= skipped -8, +8 lines =@@
 >A : Symbol(A, Decl(chainedAssignment3.ts, 0, 0))
 
     value: string;
->value : Symbol(B.value, Decl(chainedAssignment3.ts, 4, 19))
+>value : Symbol(value, Decl(chainedAssignment3.ts, 4, 19))
 }
 
 var a: A;
@@= skipped -26, +26 lines =@@
 >B : Symbol(B, Decl(chainedAssignment3.ts, 2, 1))
 
 a.id = b.value = null;
->a.id : Symbol(A.id, Decl(chainedAssignment3.ts, 0, 9))
+>a.id : Symbol(id, Decl(chainedAssignment3.ts, 0, 9))
 >a : Symbol(a, Decl(chainedAssignment3.ts, 8, 3))
->id : Symbol(A.id, Decl(chainedAssignment3.ts, 0, 9))
->b.value : Symbol(B.value, Decl(chainedAssignment3.ts, 4, 19))
+>id : Symbol(id, Decl(chainedAssignment3.ts, 0, 9))
+>b.value : Symbol(value, Decl(chainedAssignment3.ts, 4, 19))
 >b : Symbol(b, Decl(chainedAssignment3.ts, 9, 3))
->value : Symbol(B.value, Decl(chainedAssignment3.ts, 4, 19))
+>value : Symbol(value, Decl(chainedAssignment3.ts, 4, 19))
 
 // error cases
 b = a = new A();
