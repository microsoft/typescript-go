--- old.mergedModuleDeclarationCodeGen4.symbols
+++ new.mergedModuleDeclarationCodeGen4.symbols
@@= skipped -8, +8 lines =@@
 
         export module my.buz {
 >my : Symbol(my, Decl(mergedModuleDeclarationCodeGen4.ts, 1, 27), Decl(mergedModuleDeclarationCodeGen4.ts, 6, 9))
->buz : Symbol(buz, Decl(mergedModuleDeclarationCodeGen4.ts, 2, 25), Decl(mergedModuleDeclarationCodeGen4.ts, 7, 25))
+>buz : Symbol(buz, Decl(mergedModuleDeclarationCodeGen4.ts, 2, 25))
 
             export module data {
->data : Symbol(data, Decl(mergedModuleDeclarationCodeGen4.ts, 2, 30), Decl(mergedModuleDeclarationCodeGen4.ts, 7, 30))
+>data : Symbol(data, Decl(mergedModuleDeclarationCodeGen4.ts, 2, 30))
 
                 export function foo() { }
 >foo : Symbol(foo, Decl(mergedModuleDeclarationCodeGen4.ts, 3, 32))
@@= skipped -11, +11 lines =@@
         }
         export module my.buz {
 >my : Symbol(my, Decl(mergedModuleDeclarationCodeGen4.ts, 1, 27), Decl(mergedModuleDeclarationCodeGen4.ts, 6, 9))
->buz : Symbol(buz, Decl(mergedModuleDeclarationCodeGen4.ts, 2, 25), Decl(mergedModuleDeclarationCodeGen4.ts, 7, 25))
+>buz : Symbol(buz, Decl(mergedModuleDeclarationCodeGen4.ts, 7, 25))
 
             export module data {
->data : Symbol(data, Decl(mergedModuleDeclarationCodeGen4.ts, 2, 30), Decl(mergedModuleDeclarationCodeGen4.ts, 7, 30))
+>data : Symbol(data, Decl(mergedModuleDeclarationCodeGen4.ts, 7, 30))
 
                 export function bar(contain, my, buz, data) {
 >bar : Symbol(bar, Decl(mergedModuleDeclarationCodeGen4.ts, 8, 32))
@@= skipped -13, +13 lines =@@
 >data : Symbol(data, Decl(mergedModuleDeclarationCodeGen4.ts, 9, 53))
 
                     foo();
->foo : Symbol(foo, Decl(mergedModuleDeclarationCodeGen4.ts, 3, 32))
                 }
             }
         }
