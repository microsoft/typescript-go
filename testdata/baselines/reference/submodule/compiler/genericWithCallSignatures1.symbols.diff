--- old.genericWithCallSignatures1.symbols
+++ new.genericWithCallSignatures1.symbols
@@= skipped -5, +5 lines =@@
 >MyClass : Symbol(MyClass, Decl(genericWithCallSignatures_1.ts, 0, 0))
 
     public callableThing: CallableExtention<string>;
->callableThing : Symbol(MyClass.callableThing, Decl(genericWithCallSignatures_1.ts, 1, 15))
+>callableThing : Symbol(callableThing, Decl(genericWithCallSignatures_1.ts, 1, 15))
 >CallableExtention : Symbol(CallableExtention, Decl(genericWithCallSignatures_0.ts, 3, 1))
 
     public myMethod() {
->myMethod : Symbol(MyClass.myMethod, Decl(genericWithCallSignatures_1.ts, 2, 52))
+>myMethod : Symbol(myMethod, Decl(genericWithCallSignatures_1.ts, 2, 52))
 
         var x = <string> this.callableThing();
 >x : Symbol(x, Decl(genericWithCallSignatures_1.ts, 5, 11))
->this.callableThing : Symbol(MyClass.callableThing, Decl(genericWithCallSignatures_1.ts, 1, 15))
+>this.callableThing : Symbol(callableThing, Decl(genericWithCallSignatures_1.ts, 1, 15))
 >this : Symbol(MyClass, Decl(genericWithCallSignatures_1.ts, 0, 0))
->callableThing : Symbol(MyClass.callableThing, Decl(genericWithCallSignatures_1.ts, 1, 15))
+>callableThing : Symbol(callableThing, Decl(genericWithCallSignatures_1.ts, 1, 15))
     }
 }
 === genericWithCallSignatures_0.ts ===
