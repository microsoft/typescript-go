--- old.collectionPatternNoError.symbols
+++ new.collectionPatternNoError.symbols
@@= skipped -14, +14 lines =@@
 >Message : Symbol(Message, Decl(collectionPatternNoError.ts, 2, 1))
 
   clone(): this {
->clone : Symbol(Message.clone, Decl(collectionPatternNoError.ts, 3, 15))
+>clone : Symbol(clone, Decl(collectionPatternNoError.ts, 3, 15))
 
     return this;
 >this : Symbol(Message, Decl(collectionPatternNoError.ts, 2, 1))
@@= skipped -13, +13 lines =@@
 >Message : Symbol(Message, Decl(collectionPatternNoError.ts, 2, 1))
 
   methodOnMessageList(): T[];
->methodOnMessageList : Symbol(MessageList.methodOnMessageList, Decl(collectionPatternNoError.ts, 8, 58))
+>methodOnMessageList : Symbol(methodOnMessageList, Decl(collectionPatternNoError.ts, 8, 58))
 >T : Symbol(T, Decl(collectionPatternNoError.ts, 8, 22))
 }
 
@@= skipped -26, +26 lines =@@
 
   constructor(
     private readonly message: MsgConstructor<T>,
->message : Symbol(DataProvider.message, Decl(collectionPatternNoError.ts, 17, 14))
+>message : Symbol(message, Decl(collectionPatternNoError.ts, 17, 14))
 >MsgConstructor : Symbol(MsgConstructor, Decl(collectionPatternNoError.ts, 0, 0))
 >T : Symbol(T, Decl(collectionPatternNoError.ts, 16, 19))
 
     private readonly messageList: MsgConstructor<U>,
->messageList : Symbol(DataProvider.messageList, Decl(collectionPatternNoError.ts, 18, 48))
+>messageList : Symbol(messageList, Decl(collectionPatternNoError.ts, 18, 48))
 >MsgConstructor : Symbol(MsgConstructor, Decl(collectionPatternNoError.ts, 0, 0))
 >U : Symbol(U, Decl(collectionPatternNoError.ts, 16, 37))
 
   ) { }
 
   fetch() {
->fetch : Symbol(DataProvider.fetch, Decl(collectionPatternNoError.ts, 20, 7))
+>fetch : Symbol(fetch, Decl(collectionPatternNoError.ts, 20, 7))
 
     const messageList = fetchMsg(this.messageList);
 >messageList : Symbol(messageList, Decl(collectionPatternNoError.ts, 23, 9))
 >fetchMsg : Symbol(fetchMsg, Decl(collectionPatternNoError.ts, 10, 1))
->this.messageList : Symbol(DataProvider.messageList, Decl(collectionPatternNoError.ts, 18, 48))
+>this.messageList : Symbol(messageList, Decl(collectionPatternNoError.ts, 18, 48))
 >this : Symbol(DataProvider, Decl(collectionPatternNoError.ts, 14, 1))
->messageList : Symbol(DataProvider.messageList, Decl(collectionPatternNoError.ts, 18, 48))
+>messageList : Symbol(messageList, Decl(collectionPatternNoError.ts, 18, 48))
 
     messageList.methodOnMessageList();
->messageList.methodOnMessageList : Symbol(MessageList.methodOnMessageList, Decl(collectionPatternNoError.ts, 8, 58))
+>messageList.methodOnMessageList : Symbol(methodOnMessageList, Decl(collectionPatternNoError.ts, 8, 58))
 >messageList : Symbol(messageList, Decl(collectionPatternNoError.ts, 23, 9))
->methodOnMessageList : Symbol(MessageList.methodOnMessageList, Decl(collectionPatternNoError.ts, 8, 58))
+>methodOnMessageList : Symbol(methodOnMessageList, Decl(collectionPatternNoError.ts, 8, 58))
   }
 }
 
@@= skipped -52, +52 lines =@@
 >U : Symbol(U, Decl(collectionPatternNoError.ts, 30, 11))
 
   fetchMsg(messageList).methodOnMessageList();
->fetchMsg(messageList).methodOnMessageList : Symbol(MessageList.methodOnMessageList, Decl(collectionPatternNoError.ts, 8, 58))
+>fetchMsg(messageList).methodOnMessageList : Symbol(methodOnMessageList, Decl(collectionPatternNoError.ts, 8, 58))
 >fetchMsg : Symbol(fetchMsg, Decl(collectionPatternNoError.ts, 10, 1))
 >messageList : Symbol(messageList, Decl(collectionPatternNoError.ts, 33, 29))
->methodOnMessageList : Symbol(MessageList.methodOnMessageList, Decl(collectionPatternNoError.ts, 8, 58))
+>methodOnMessageList : Symbol(methodOnMessageList, Decl(collectionPatternNoError.ts, 8, 58))
 }
 
