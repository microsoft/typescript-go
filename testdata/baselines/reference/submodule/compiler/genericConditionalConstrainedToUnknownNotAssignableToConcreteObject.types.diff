--- old.genericConditionalConstrainedToUnknownNotAssignableToConcreteObject.types
+++ new.genericConditionalConstrainedToUnknownNotAssignableToConcreteObject.types
@@= skipped -1, +1 lines =@@
 
 === genericConditionalConstrainedToUnknownNotAssignableToConcreteObject.ts ===
 interface A { x: number }
+>A : A
 >x : number
 
 declare function isA(a: unknown): a is A;
@@= skipped -8, +9 lines =@@
 
 type FunctionsObj<T> = {
 >FunctionsObj : FunctionsObj<T>
+>T : T
 
     [K in keyof T]: () => unknown
+>K : K
 }
 
 function g<
 >g : <T extends FunctionsObj<T>, M extends keyof T>(a2: ReturnType<T[M]>, x: A) => void
 
     T extends FunctionsObj<T>,
+>T : T
+
     M extends keyof T
+>M : M
+
 >(a2: ReturnType<T[M]>, x: A) {
 >a2 : ReturnType<T[M]>
 >x : A
@@= skipped -25, +31 lines =@@
 >g2 : <T extends FunctionsObj<T>, M extends keyof T>(a2: ReturnType<T[M]>) => void
 
     T extends FunctionsObj<T>,
+>T : T
+
     M extends keyof T
+>M : M
+
 >(a2: ReturnType<T[M]>) {
 >a2 : ReturnType<T[M]>
 
