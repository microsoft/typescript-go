--- old.strictOptionalProperties1.symbols
+++ new.strictOptionalProperties1.symbols
@@ -99,9 +99,9 @@
 >a : Symbol(a, Decl(strictOptionalProperties1.ts, 9, 18))
     }
     if (obj.hasOwnProperty('a')) {
->obj.hasOwnProperty : Symbol(Object.hasOwnProperty, Decl(lib.es5.d.ts, --, --))
+>obj.hasOwnProperty : Symbol(hasOwnProperty, Decl(lib.es5.d.ts, --, --))
 >obj : Symbol(obj, Decl(strictOptionalProperties1.ts, 9, 12))
->hasOwnProperty : Symbol(Object.hasOwnProperty, Decl(lib.es5.d.ts, --, --))
+>hasOwnProperty : Symbol(hasOwnProperty, Decl(lib.es5.d.ts, --, --))
 
         obj.a;
 >obj.a : Symbol(a, Decl(strictOptionalProperties1.ts, 9, 18))
@@ -161,9 +161,9 @@
 >b : Symbol(b, Decl(strictOptionalProperties1.ts, 9, 30))
     }
     if (obj.hasOwnProperty('b')) {
->obj.hasOwnProperty : Symbol(Object.hasOwnProperty, Decl(lib.es5.d.ts, --, --))
+>obj.hasOwnProperty : Symbol(hasOwnProperty, Decl(lib.es5.d.ts, --, --))
 >obj : Symbol(obj, Decl(strictOptionalProperties1.ts, 9, 12))
->hasOwnProperty : Symbol(Object.hasOwnProperty, Decl(lib.es5.d.ts, --, --))
+>hasOwnProperty : Symbol(hasOwnProperty, Decl(lib.es5.d.ts, --, --))
 
         obj.b;
 >obj.b : Symbol(b, Decl(strictOptionalProperties1.ts, 9, 30))
@@ -243,15 +243,15 @@
     let x = t[0];  // string | undefined
 >x : Symbol(x, Decl(strictOptionalProperties1.ts, 57, 7))
 >t : Symbol(t, Decl(strictOptionalProperties1.ts, 56, 12))
->0 : Symbol(0)
+>0 : Symbol("0")
 
     t[0] = 'hello';
 >t : Symbol(t, Decl(strictOptionalProperties1.ts, 56, 12))
->0 : Symbol(0)
+>0 : Symbol("0")
 
     t[0] = undefined;  // Error
 >t : Symbol(t, Decl(strictOptionalProperties1.ts, 56, 12))
->0 : Symbol(0)
+>0 : Symbol("0")
 >undefined : Symbol(undefined)
 }
 
@@ -401,10 +401,10 @@
 >key : Symbol(key, Decl(strictOptionalProperties1.ts, 116, 5))
 
     foo?: string;  // Should be ok
->foo : Symbol(Test.foo, Decl(strictOptionalProperties1.ts, 116, 26))
+>foo : Symbol(foo, Decl(strictOptionalProperties1.ts, 116, 26))
 
     bar?: string | undefined;  // Error
->bar : Symbol(Test.bar, Decl(strictOptionalProperties1.ts, 117, 17))
+>bar : Symbol(bar, Decl(strictOptionalProperties1.ts, 117, 17))
 }
 
 // Strict optional properties and inference
@@ -554,7 +554,7 @@
 >Bar : Symbol(Bar, Decl(strictOptionalProperties1.ts, 168, 1))
 
     bar?: number;
->bar : Symbol(Bar.bar, Decl(strictOptionalProperties1.ts, 170, 15))
+>bar : Symbol(bar, Decl(strictOptionalProperties1.ts, 170, 15))
 }
 
 function aa(input: Bar): void {
@@ -565,9 +565,9 @@
     const notUndefinedVal = expectNotUndefined(input.bar);
 >notUndefinedVal : Symbol(notUndefinedVal, Decl(strictOptionalProperties1.ts, 175, 9))
 >expectNotUndefined : Symbol(expectNotUndefined, Decl(strictOptionalProperties1.ts, 161, 36))
->input.bar : Symbol(Bar.bar, Decl(strictOptionalProperties1.ts, 170, 15))
+>input.bar : Symbol(bar, Decl(strictOptionalProperties1.ts, 170, 15))
 >input : Symbol(input, Decl(strictOptionalProperties1.ts, 174, 12))
->bar : Symbol(Bar.bar, Decl(strictOptionalProperties1.ts, 170, 15))
+>bar : Symbol(bar, Decl(strictOptionalProperties1.ts, 170, 15))
 
     bb(notUndefinedVal);
 >bb : Symbol(bb, Decl(strictOptionalProperties1.ts, 177, 1))
@@ -582,19 +582,19 @@
 >U1 : Symbol(U1, Decl(strictOptionalProperties1.ts, 179, 41))
 
     name: string
->name : Symbol(U1.name, Decl(strictOptionalProperties1.ts, 181, 14))
+>name : Symbol(name, Decl(strictOptionalProperties1.ts, 181, 14))
 
     email?: string | number | undefined
->email : Symbol(U1.email, Decl(strictOptionalProperties1.ts, 182, 16))
+>email : Symbol(email, Decl(strictOptionalProperties1.ts, 182, 16))
 }
 interface U2 {
 >U2 : Symbol(U2, Decl(strictOptionalProperties1.ts, 184, 1))
 
     name: string
->name : Symbol(U2.name, Decl(strictOptionalProperties1.ts, 185, 14))
+>name : Symbol(name, Decl(strictOptionalProperties1.ts, 185, 14))
 
     email?: string | number
->email : Symbol(U2.email, Decl(strictOptionalProperties1.ts, 186, 16))
+>email : Symbol(email, Decl(strictOptionalProperties1.ts, 186, 16))
 }
 declare const e: string | boolean | undefined
 >e : Symbol(e, Decl(strictOptionalProperties1.ts, 189, 13))
@@ -608,15 +608,15 @@
 >U2 : Symbol(U2, Decl(strictOptionalProperties1.ts, 184, 1))
 
 u1.email = e // error, but only because boolean isn't in email's type
->u1.email : Symbol(U1.email, Decl(strictOptionalProperties1.ts, 182, 16))
+>u1.email : Symbol(email, Decl(strictOptionalProperties1.ts, 182, 16))
 >u1 : Symbol(u1, Decl(strictOptionalProperties1.ts, 190, 13))
->email : Symbol(U1.email, Decl(strictOptionalProperties1.ts, 182, 16))
+>email : Symbol(email, Decl(strictOptionalProperties1.ts, 182, 16))
 >e : Symbol(e, Decl(strictOptionalProperties1.ts, 189, 13))
 
 u2.email = e // error, and suggest adding undefined
->u2.email : Symbol(U2.email, Decl(strictOptionalProperties1.ts, 186, 16))
+>u2.email : Symbol(email, Decl(strictOptionalProperties1.ts, 186, 16))
 >u2 : Symbol(u2, Decl(strictOptionalProperties1.ts, 191, 11))
->email : Symbol(U2.email, Decl(strictOptionalProperties1.ts, 186, 16))
+>email : Symbol(email, Decl(strictOptionalProperties1.ts, 186, 16))
 >e : Symbol(e, Decl(strictOptionalProperties1.ts, 189, 13))
 
 u2 = {
@@ -678,14 +678,14 @@
 >PropsFromReact : Symbol(PropsFromReact, Decl(strictOptionalProperties1.ts, 210, 6))
 
     onClick?: () => void;
->onClick : Symbol(PropsFromReact.onClick, Decl(strictOptionalProperties1.ts, 214, 26))
+>onClick : Symbol(onClick, Decl(strictOptionalProperties1.ts, 214, 26))
 }
 
 interface PropsFromMaterialUI {
 >PropsFromMaterialUI : Symbol(PropsFromMaterialUI, Decl(strictOptionalProperties1.ts, 216, 1))
 
     onClick?: (() => void) | undefined;
->onClick : Symbol(PropsFromMaterialUI.onClick, Decl(strictOptionalProperties1.ts, 218, 31))
+>onClick : Symbol(onClick, Decl(strictOptionalProperties1.ts, 218, 31))
 }
 
 type TheTypeFromMaterialUI = PropsFromReact & PropsFromMaterialUI;
@@ -698,7 +698,7 @@
 >TheTypeFromMaterialUI : Symbol(TheTypeFromMaterialUI, Decl(strictOptionalProperties1.ts, 220, 1))
 
     value: string;
->value : Symbol(NavBottomListItem.value, Decl(strictOptionalProperties1.ts, 224, 59))
+>value : Symbol(value, Decl(strictOptionalProperties1.ts, 224, 59))
 }
 
 // Repro from #46004
