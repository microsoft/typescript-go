--- old.promisePermutations2.errors.txt
+++ new.promisePermutations2.errors.txt
@@= skipped -91, +91 lines =@@
   Property 'catch' is missing in type 'IPromise<string>' but required in type 'Promise<number>'.
 promisePermutations2.ts(155,21): error TS2769: No overload matches this call.
   The last overload gave the following error.
-    Argument of type '{ (x: number): IPromise<number>; (x: string): IPromise<string>; }' is not assignable to parameter of type '(value: number) => IPromise<string>'.
+    Argument of type '{ (x: number): IPromise<number>, (x: string): IPromise<string> }' is not assignable to parameter of type '(value: number) => IPromise<string>'.
       Type 'IPromise<number>' is not assignable to type 'IPromise<string>'.
         Type 'number' is not assignable to type 'string'.
-promisePermutations2.ts(157,21): error TS2345: Argument of type '{ (x: number): IPromise<number>; (x: string): IPromise<string>; }' is not assignable to parameter of type '(value: number) => IPromise<string>'.
+promisePermutations2.ts(157,21): error TS2345: Argument of type '{ (x: number): IPromise<number>, (x: string): IPromise<string> }' is not assignable to parameter of type '(value: number) => IPromise<string>'.
   Type 'IPromise<number>' is not assignable to type 'IPromise<string>'.
     Type 'number' is not assignable to type 'string'.
-promisePermutations2.ts(158,21): error TS2345: Argument of type '{ (x: number): Promise<number>; (x: string): Promise<string>; }' is not assignable to parameter of type '(value: number) => Promise<string>'.
+promisePermutations2.ts(158,21): error TS2345: Argument of type '{ (x: number): Promise<number>, (x: string): Promise<string> }' is not assignable to parameter of type '(value: number) => Promise<string>'.
   Type 'Promise<number>' is not assignable to type 'Promise<string>'.
     Type 'number' is not assignable to type 'string'.
-promisePermutations2.ts(159,21): error TS2345: Argument of type '{ (x: number): Promise<number>; (x: string): Promise<string>; }' is not assignable to parameter of type '(value: number) => IPromise<string>'.
-  Call signature return types 'Promise<number>' and 'IPromise<string>' are incompatible.
-    The types of 'then' are incompatible between these types.
-      Type '{ <TResult1 = number, TResult2 = never>(onfulfilled?: (value: number) => TResult1 | PromiseLike<TResult1>, onrejected?: (reason: any) => TResult2 | PromiseLike<TResult2>): Promise<TResult1 | TResult2>; <U>(success?: (value: number) => U, error?: (error: any) => U, progress?: (progress: any) => void): Promise<U>; }' is not assignable to type '{ <U>(success?: (value: string) => IPromise<U>, error?: (error: any) => IPromise<U>, progress?: (progress: any) => void): IPromise<U>; <U>(success?: (value: string) => IPromise<U>, error?: (error: any) => U, progress?: (progress: any) => void): IPromise<U>; <U>(success?: (value: string) => U, error?: (error: any) => IPromise<U>, progress?: (progress: any) => void): IPromise<U>; <U>(success?: (value: string) => U, error?: (error: any) => U, progress?: (progress: any) => void): IPromise<U>; }'.
+promisePermutations2.ts(159,21): error TS2345: Argument of type '{ (x: number): Promise<number>, (x: string): Promise<string> }' is not assignable to parameter of type '(value: number) => IPromise<string>'.
+  Type 'Promise<number>' is not assignable to type 'IPromise<string>'.
+    Types of property 'then' are incompatible.
+      Type '{ <TResult1, TResult2>(onfulfilled?: (value: number) => TResult1 | PromiseLike<TResult1>, onrejected?: (reason: any) => TResult2 | PromiseLike<TResult2>): Promise<TResult1 | TResult2>, <U>(success?: (value: number) => U, error?: (error: any) => U, progress?: (progress: any) => void): Promise<U> }' is not assignable to type '{ <U>(success?: (value: string) => IPromise<U>, error?: (error: any) => IPromise<U>, progress?: (progress: any) => void): IPromise<U>, <U>(success?: (value: string) => IPromise<U>, error?: (error: any) => U, progress?: (progress: any) => void): IPromise<U>, <U>(success?: (value: string) => U, error?: (error: any) => IPromise<U>, progress?: (progress: any) => void): IPromise<U>, <U>(success?: (value: string) => U, error?: (error: any) => U, progress?: (progress: any) => void): IPromise<U> }'.
         Types of parameters 'onfulfilled' and 'success' are incompatible.
           Types of parameters 'value' and 'value' are incompatible.
             Type 'number' is not assignable to type 'string'.
@@= skipped -310, +310 lines =@@
                         ~~~~~~~~~~~~~~
 !!! error TS2769: No overload matches this call.
 !!! error TS2769:   The last overload gave the following error.
-!!! error TS2769:     Argument of type '{ (x: number): IPromise<number>; (x: string): IPromise<string>; }' is not assignable to parameter of type '(value: number) => IPromise<string>'.
+!!! error TS2769:     Argument of type '{ (x: number): IPromise<number>, (x: string): IPromise<string> }' is not assignable to parameter of type '(value: number) => IPromise<string>'.
 !!! error TS2769:       Type 'IPromise<number>' is not assignable to type 'IPromise<string>'.
 !!! error TS2769:         Type 'number' is not assignable to type 'string'.
 !!! related TS2771 promisePermutations2.ts:12:5: The last overload is declared here.
     var s11: Promise<number>;
     var s11a = s11.then(testFunction11, testFunction11, testFunction11); // ok
                         ~~~~~~~~~~~~~~
-!!! error TS2345: Argument of type '{ (x: number): IPromise<number>; (x: string): IPromise<string>; }' is not assignable to parameter of type '(value: number) => IPromise<string>'.
+!!! error TS2345: Argument of type '{ (x: number): IPromise<number>, (x: string): IPromise<string> }' is not assignable to parameter of type '(value: number) => IPromise<string>'.
 !!! error TS2345:   Type 'IPromise<number>' is not assignable to type 'IPromise<string>'.
 !!! error TS2345:     Type 'number' is not assignable to type 'string'.
     var s11b = s11.then(testFunction11P, testFunction11P, testFunction11P); // ok
                         ~~~~~~~~~~~~~~~
-!!! error TS2345: Argument of type '{ (x: number): Promise<number>; (x: string): Promise<string>; }' is not assignable to parameter of type '(value: number) => Promise<string>'.
+!!! error TS2345: Argument of type '{ (x: number): Promise<number>, (x: string): Promise<string> }' is not assignable to parameter of type '(value: number) => Promise<string>'.
 !!! error TS2345:   Type 'Promise<number>' is not assignable to type 'Promise<string>'.
 !!! error TS2345:     Type 'number' is not assignable to type 'string'.
     var s11c = s11.then(testFunction11P, testFunction11, testFunction11); // ok
                         ~~~~~~~~~~~~~~~
-!!! error TS2345: Argument of type '{ (x: number): Promise<number>; (x: string): Promise<string>; }' is not assignable to parameter of type '(value: number) => IPromise<string>'.
-!!! error TS2345:   Call signature return types 'Promise<number>' and 'IPromise<string>' are incompatible.
-!!! error TS2345:     The types of 'then' are incompatible between these types.
-!!! error TS2345:       Type '{ <TResult1 = number, TResult2 = never>(onfulfilled?: (value: number) => TResult1 | PromiseLike<TResult1>, onrejected?: (reason: any) => TResult2 | PromiseLike<TResult2>): Promise<TResult1 | TResult2>; <U>(success?: (value: number) => U, error?: (error: any) => U, progress?: (progress: any) => void): Promise<U>; }' is not assignable to type '{ <U>(success?: (value: string) => IPromise<U>, error?: (error: any) => IPromise<U>, progress?: (progress: any) => void): IPromise<U>; <U>(success?: (value: string) => IPromise<U>, error?: (error: any) => U, progress?: (progress: any) => void): IPromise<U>; <U>(success?: (value: string) => U, error?: (error: any) => IPromise<U>, progress?: (progress: any) => void): IPromise<U>; <U>(success?: (value: string) => U, error?: (error: any) => U, progress?: (progress: any) => void): IPromise<U>; }'.
+!!! error TS2345: Argument of type '{ (x: number): Promise<number>, (x: string): Promise<string> }' is not assignable to parameter of type '(value: number) => IPromise<string>'.
+!!! error TS2345:   Type 'Promise<number>' is not assignable to type 'IPromise<string>'.
+!!! error TS2345:     Types of property 'then' are incompatible.
+!!! error TS2345:       Type '{ <TResult1, TResult2>(onfulfilled?: (value: number) => TResult1 | PromiseLike<TResult1>, onrejected?: (reason: any) => TResult2 | PromiseLike<TResult2>): Promise<TResult1 | TResult2>, <U>(success?: (value: number) => U, error?: (error: any) => U, progress?: (progress: any) => void): Promise<U> }' is not assignable to type '{ <U>(success?: (value: string) => IPromise<U>, error?: (error: any) => IPromise<U>, progress?: (progress: any) => void): IPromise<U>, <U>(success?: (value: string) => IPromise<U>, error?: (error: any) => U, progress?: (progress: any) => void): IPromise<U>, <U>(success?: (value: string) => U, error?: (error: any) => IPromise<U>, progress?: (progress: any) => void): IPromise<U>, <U>(success?: (value: string) => U, error?: (error: any) => U, progress?: (progress: any) => void): IPromise<U> }'.
 !!! error TS2345:         Types of parameters 'onfulfilled' and 'success' are incompatible.
 !!! error TS2345:           Types of parameters 'value' and 'value' are incompatible.
 !!! error TS2345:             Type 'number' is not assignable to type 'string'.
