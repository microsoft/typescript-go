--- old.promisePermutations2.errors.txt
+++ new.promisePermutations2.errors.txt
@@= skipped -88, +88 lines =@@
       Type 'IPromise<string>' is not assignable to type 'IPromise<number>'.
         Type 'string' is not assignable to type 'number'.
 promisePermutations2.ts(151,36): error TS2345: Argument of type '(x: any) => IPromise<string>' is not assignable to parameter of type '(error: any) => Promise<number>'.
-  Type 'IPromise<string>' is missing the following properties from type 'Promise<number>': catch, [Symbol.toStringTag]
+  Property 'catch' is missing in type 'IPromise<string>' but required in type 'Promise<number>'.
 promisePermutations2.ts(155,21): error TS2769: No overload matches this call.
   The last overload gave the following error.
     Argument of type '{ (x: number): IPromise<number>; (x: string): IPromise<string>; }' is not assignable to parameter of type '(value: number) => IPromise<string>'.
@@= skipped -13, +13 lines =@@
   Type 'Promise<number>' is not assignable to type 'Promise<string>'.
     Type 'number' is not assignable to type 'string'.
 promisePermutations2.ts(159,21): error TS2345: Argument of type '{ (x: number): Promise<number>; (x: string): Promise<string>; }' is not assignable to parameter of type '(value: number) => IPromise<string>'.
-  Call signature return types 'Promise<number>' and 'IPromise<string>' are incompatible.
-    The types of 'then' are incompatible between these types.
+  Type 'Promise<number>' is not assignable to type 'IPromise<string>'.
+    Types of property 'then' are incompatible.
       Type '{ <TResult1 = number, TResult2 = never>(onfulfilled?: (value: number) => TResult1 | PromiseLike<TResult1>, onrejected?: (reason: any) => TResult2 | PromiseLike<TResult2>): Promise<TResult1 | TResult2>; <U>(success?: (value: number) => U, error?: (error: any) => U, progress?: (progress: any) => void): Promise<U>; }' is not assignable to type '{ <U>(success?: (value: string) => IPromise<U>, error?: (error: any) => IPromise<U>, progress?: (progress: any) => void): IPromise<U>; <U>(success?: (value: string) => IPromise<U>, error?: (error: any) => U, progress?: (progress: any) => void): IPromise<U>; <U>(success?: (value: string) => U, error?: (error: any) => IPromise<U>, progress?: (progress: any) => void): IPromise<U>; <U>(success?: (value: string) => U, error?: (error: any) => U, progress?: (progress: any) => void): IPromise<U>; }'.
         Types of parameters 'onfulfilled' and 'success' are incompatible.
           Types of parameters 'value' and 'value' are incompatible.
@@= skipped -291, +291 lines =@@
     var s10f = s10.then(testFunctionP, sIPromise, nIPromise); // error
                                        ~~~~~~~~~
 !!! error TS2345: Argument of type '(x: any) => IPromise<string>' is not assignable to parameter of type '(error: any) => Promise<number>'.
-!!! error TS2345:   Type 'IPromise<string>' is missing the following properties from type 'Promise<number>': catch, [Symbol.toStringTag]
+!!! error TS2345:   Property 'catch' is missing in type 'IPromise<string>' but required in type 'Promise<number>'.
+!!! related TS2728 lib.es5.d.ts:--:--: 'catch' is declared here.
     var s10g = s10.then(testFunctionP, nIPromise, sIPromise).then(sPromise, sIPromise, sIPromise); // ok
     
     var r11: IPromise<number>;
@@= skipped -26, +27 lines =@@
     var s11c = s11.then(testFunction11P, testFunction11, testFunction11); // ok
                         ~~~~~~~~~~~~~~~
 !!! error TS2345: Argument of type '{ (x: number): Promise<number>; (x: string): Promise<string>; }' is not assignable to parameter of type '(value: number) => IPromise<string>'.
-!!! error TS2345:   Call signature return types 'Promise<number>' and 'IPromise<string>' are incompatible.
-!!! error TS2345:     The types of 'then' are incompatible between these types.
+!!! error TS2345:   Type 'Promise<number>' is not assignable to type 'IPromise<string>'.
+!!! error TS2345:     Types of property 'then' are incompatible.
 !!! error TS2345:       Type '{ <TResult1 = number, TResult2 = never>(onfulfilled?: (value: number) => TResult1 | PromiseLike<TResult1>, onrejected?: (reason: any) => TResult2 | PromiseLike<TResult2>): Promise<TResult1 | TResult2>; <U>(success?: (value: number) => U, error?: (error: any) => U, progress?: (progress: any) => void): Promise<U>; }' is not assignable to type '{ <U>(success?: (value: string) => IPromise<U>, error?: (error: any) => IPromise<U>, progress?: (progress: any) => void): IPromise<U>; <U>(success?: (value: string) => IPromise<U>, error?: (error: any) => U, progress?: (progress: any) => void): IPromise<U>; <U>(success?: (value: string) => U, error?: (error: any) => IPromise<U>, progress?: (progress: any) => void): IPromise<U>; <U>(success?: (value: string) => U, error?: (error: any) => U, progress?: (progress: any) => void): IPromise<U>; }'.
 !!! error TS2345:         Types of parameters 'onfulfilled' and 'success' are incompatible.
 !!! error TS2345:           Types of parameters 'value' and 'value' are incompatible.