--- old.es6ImportNamedImportAmd.symbols
+++ new.es6ImportNamedImportAmd.symbols
@@ -37,7 +37,6 @@
 >a : Symbol(a, Decl(es6ImportNamedImportAmd_1.ts, 1, 8))
 
 import { a as b } from "es6ImportNamedImportAmd_0";
->a : Symbol(a, Decl(es6ImportNamedImportAmd_0.ts, 0, 10))
 >b : Symbol(b, Decl(es6ImportNamedImportAmd_1.ts, 3, 8))
 
 var xxxx = b;
@@ -46,7 +45,6 @@
 
 import { x, a as y } from "es6ImportNamedImportAmd_0";
 >x : Symbol(x, Decl(es6ImportNamedImportAmd_1.ts, 5, 8))
->a : Symbol(a, Decl(es6ImportNamedImportAmd_0.ts, 0, 10))
 >y : Symbol(y, Decl(es6ImportNamedImportAmd_1.ts, 5, 11))
 
 var xxxx = x;
@@ -58,7 +56,6 @@
 >y : Symbol(y, Decl(es6ImportNamedImportAmd_1.ts, 5, 11))
 
 import { x as z,  } from "es6ImportNamedImportAmd_0";
->x : Symbol(x, Decl(es6ImportNamedImportAmd_0.ts, 1, 10))
 >z : Symbol(z, Decl(es6ImportNamedImportAmd_1.ts, 8, 8))
 
 var xxxx = z;
@@ -85,9 +82,7 @@
 >x1 : Symbol(x1, Decl(es6ImportNamedImportAmd_1.ts, 12, 12))
 
 import { a1 as a11, x1 as x11 } from "es6ImportNamedImportAmd_0";
->a1 : Symbol(a1, Decl(es6ImportNamedImportAmd_0.ts, 3, 10))
 >a11 : Symbol(a11, Decl(es6ImportNamedImportAmd_1.ts, 15, 8))
->x1 : Symbol(x1, Decl(es6ImportNamedImportAmd_0.ts, 4, 10))
 >x11 : Symbol(x11, Decl(es6ImportNamedImportAmd_1.ts, 15, 19))
 
 var xxxx = a11;
@@ -106,7 +101,6 @@
 >z1 : Symbol(z1, Decl(es6ImportNamedImportAmd_1.ts, 18, 8))
 
 import { z2 as z3 } from "es6ImportNamedImportAmd_0";
->z2 : Symbol(z3, Decl(es6ImportNamedImportAmd_0.ts, 6, 10))
 >z3 : Symbol(z3, Decl(es6ImportNamedImportAmd_1.ts, 20, 8))
 
 var z2 = z3; // z2 shouldn't give redeclare error
@@ -119,6 +113,5 @@
 
 // These are elided
 import { aaaa as bbbb } from "es6ImportNamedImportAmd_0";
->aaaa : Symbol(aaaa, Decl(es6ImportNamedImportAmd_0.ts, 7, 10))
 >bbbb : Symbol(bbbb, Decl(es6ImportNamedImportAmd_1.ts, 26, 8))
 
