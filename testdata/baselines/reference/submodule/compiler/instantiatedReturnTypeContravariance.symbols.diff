--- old.instantiatedReturnTypeContravariance.symbols
+++ new.instantiatedReturnTypeContravariance.symbols
@@= skipped -5, +5 lines =@@
 >T : Symbol(T, Decl(instantiatedReturnTypeContravariance.ts, 0, 12))
 
 name: string;
->name : Symbol(B.name, Decl(instantiatedReturnTypeContravariance.ts, 0, 16))
+>name : Symbol(name, Decl(instantiatedReturnTypeContravariance.ts, 0, 16))
 
 x(): T;
->x : Symbol(B.x, Decl(instantiatedReturnTypeContravariance.ts, 2, 13))
+>x : Symbol(x, Decl(instantiatedReturnTypeContravariance.ts, 2, 13))
 >T : Symbol(T, Decl(instantiatedReturnTypeContravariance.ts, 0, 12))
 
 }
@@= skipped -12, +12 lines =@@
 >c : Symbol(c, Decl(instantiatedReturnTypeContravariance.ts, 6, 1))
 
 foo(): B<void> {
->foo : Symbol(c.foo, Decl(instantiatedReturnTypeContravariance.ts, 8, 9))
+>foo : Symbol(foo, Decl(instantiatedReturnTypeContravariance.ts, 8, 9))
 >B : Symbol(B, Decl(instantiatedReturnTypeContravariance.ts, 0, 0))
 
 return null;
@@= skipped -14, +14 lines =@@
 >c : Symbol(c, Decl(instantiatedReturnTypeContravariance.ts, 6, 1))
 
 foo(): B<number> {
->foo : Symbol(d.foo, Decl(instantiatedReturnTypeContravariance.ts, 18, 19))
+>foo : Symbol(foo, Decl(instantiatedReturnTypeContravariance.ts, 18, 19))
 >B : Symbol(B, Decl(instantiatedReturnTypeContravariance.ts, 0, 0))
 
 return null;
