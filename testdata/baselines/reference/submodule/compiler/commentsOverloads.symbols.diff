--- old.commentsOverloads.symbols
+++ new.commentsOverloads.symbols
@@= skipped -98, +98 lines =@@
 
     /** foo 1*/
     foo(a: number): number;
->foo : Symbol(i1.foo, Decl(commentsOverloads.ts, 37, 24), Decl(commentsOverloads.ts, 39, 27), Decl(commentsOverloads.ts, 41, 27), Decl(commentsOverloads.ts, 43, 31))
+>foo : Symbol(foo, Decl(commentsOverloads.ts, 37, 24), Decl(commentsOverloads.ts, 39, 27), Decl(commentsOverloads.ts, 41, 27), Decl(commentsOverloads.ts, 43, 31))
 >a : Symbol(a, Decl(commentsOverloads.ts, 39, 8))
 
     /** foo 2*/
     foo(b: string): number;
->foo : Symbol(i1.foo, Decl(commentsOverloads.ts, 37, 24), Decl(commentsOverloads.ts, 39, 27), Decl(commentsOverloads.ts, 41, 27), Decl(commentsOverloads.ts, 43, 31))
+>foo : Symbol(foo, Decl(commentsOverloads.ts, 37, 24), Decl(commentsOverloads.ts, 39, 27), Decl(commentsOverloads.ts, 41, 27), Decl(commentsOverloads.ts, 43, 31))
 >b : Symbol(b, Decl(commentsOverloads.ts, 41, 8))
 
     // foo 3
     foo(arr: number[]): number;
->foo : Symbol(i1.foo, Decl(commentsOverloads.ts, 37, 24), Decl(commentsOverloads.ts, 39, 27), Decl(commentsOverloads.ts, 41, 27), Decl(commentsOverloads.ts, 43, 31))
+>foo : Symbol(foo, Decl(commentsOverloads.ts, 37, 24), Decl(commentsOverloads.ts, 39, 27), Decl(commentsOverloads.ts, 41, 27), Decl(commentsOverloads.ts, 43, 31))
 >arr : Symbol(arr, Decl(commentsOverloads.ts, 43, 8))
 
     /** foo 4 */
     foo(arr: string[]): number;
->foo : Symbol(i1.foo, Decl(commentsOverloads.ts, 37, 24), Decl(commentsOverloads.ts, 39, 27), Decl(commentsOverloads.ts, 41, 27), Decl(commentsOverloads.ts, 43, 31))
+>foo : Symbol(foo, Decl(commentsOverloads.ts, 37, 24), Decl(commentsOverloads.ts, 39, 27), Decl(commentsOverloads.ts, 41, 27), Decl(commentsOverloads.ts, 43, 31))
 >arr : Symbol(arr, Decl(commentsOverloads.ts, 45, 8))
 
     foo2(a: number): number;
->foo2 : Symbol(i1.foo2, Decl(commentsOverloads.ts, 45, 31), Decl(commentsOverloads.ts, 47, 28))
+>foo2 : Symbol(foo2, Decl(commentsOverloads.ts, 45, 31), Decl(commentsOverloads.ts, 47, 28))
 >a : Symbol(a, Decl(commentsOverloads.ts, 47, 9))
 
     /** foo2 2*/
     foo2(b: string): number;
->foo2 : Symbol(i1.foo2, Decl(commentsOverloads.ts, 45, 31), Decl(commentsOverloads.ts, 47, 28))
+>foo2 : Symbol(foo2, Decl(commentsOverloads.ts, 45, 31), Decl(commentsOverloads.ts, 47, 28))
 >b : Symbol(b, Decl(commentsOverloads.ts, 49, 9))
 
     foo3(a: number): number;
->foo3 : Symbol(i1.foo3, Decl(commentsOverloads.ts, 49, 28), Decl(commentsOverloads.ts, 50, 28))
+>foo3 : Symbol(foo3, Decl(commentsOverloads.ts, 49, 28), Decl(commentsOverloads.ts, 50, 28))
 >a : Symbol(a, Decl(commentsOverloads.ts, 50, 9))
 
     foo3(b: string): number;
->foo3 : Symbol(i1.foo3, Decl(commentsOverloads.ts, 49, 28), Decl(commentsOverloads.ts, 50, 28))
+>foo3 : Symbol(foo3, Decl(commentsOverloads.ts, 49, 28), Decl(commentsOverloads.ts, 50, 28))
 >b : Symbol(b, Decl(commentsOverloads.ts, 51, 9))
 
     /** foo4 1*/
     foo4(a: number): number;
->foo4 : Symbol(i1.foo4, Decl(commentsOverloads.ts, 51, 28), Decl(commentsOverloads.ts, 53, 28), Decl(commentsOverloads.ts, 54, 28))
+>foo4 : Symbol(foo4, Decl(commentsOverloads.ts, 51, 28), Decl(commentsOverloads.ts, 53, 28), Decl(commentsOverloads.ts, 54, 28))
 >a : Symbol(a, Decl(commentsOverloads.ts, 53, 9))
 
     foo4(b: string): number;
->foo4 : Symbol(i1.foo4, Decl(commentsOverloads.ts, 51, 28), Decl(commentsOverloads.ts, 53, 28), Decl(commentsOverloads.ts, 54, 28))
+>foo4 : Symbol(foo4, Decl(commentsOverloads.ts, 51, 28), Decl(commentsOverloads.ts, 53, 28), Decl(commentsOverloads.ts, 54, 28))
 >b : Symbol(b, Decl(commentsOverloads.ts, 54, 9))
 
     /** foo4 any */
     foo4(c: any): any;
->foo4 : Symbol(i1.foo4, Decl(commentsOverloads.ts, 51, 28), Decl(commentsOverloads.ts, 53, 28), Decl(commentsOverloads.ts, 54, 28))
+>foo4 : Symbol(foo4, Decl(commentsOverloads.ts, 51, 28), Decl(commentsOverloads.ts, 53, 28), Decl(commentsOverloads.ts, 54, 28))
 >c : Symbol(c, Decl(commentsOverloads.ts, 56, 9))
 
     /// new 1
@@= skipped -123, +123 lines =@@
 >c : Symbol(c, Decl(commentsOverloads.ts, 87, 1))
 
     public prop1(a: number): number;
->prop1 : Symbol(c.prop1, Decl(commentsOverloads.ts, 88, 9), Decl(commentsOverloads.ts, 89, 36), Decl(commentsOverloads.ts, 90, 36))
+>prop1 : Symbol(prop1, Decl(commentsOverloads.ts, 88, 9), Decl(commentsOverloads.ts, 89, 36), Decl(commentsOverloads.ts, 90, 36))
 >a : Symbol(a, Decl(commentsOverloads.ts, 89, 17))
 
     public prop1(b: string): number;
->prop1 : Symbol(c.prop1, Decl(commentsOverloads.ts, 88, 9), Decl(commentsOverloads.ts, 89, 36), Decl(commentsOverloads.ts, 90, 36))
+>prop1 : Symbol(prop1, Decl(commentsOverloads.ts, 88, 9), Decl(commentsOverloads.ts, 89, 36), Decl(commentsOverloads.ts, 90, 36))
 >b : Symbol(b, Decl(commentsOverloads.ts, 90, 17))
 
     public prop1(aorb: any) {
->prop1 : Symbol(c.prop1, Decl(commentsOverloads.ts, 88, 9), Decl(commentsOverloads.ts, 89, 36), Decl(commentsOverloads.ts, 90, 36))
+>prop1 : Symbol(prop1, Decl(commentsOverloads.ts, 88, 9), Decl(commentsOverloads.ts, 89, 36), Decl(commentsOverloads.ts, 90, 36))
 >aorb : Symbol(aorb, Decl(commentsOverloads.ts, 91, 17))
 
         return 10;
     }
     /** prop2 1*/
     public prop2(a: number): number;
->prop2 : Symbol(c.prop2, Decl(commentsOverloads.ts, 93, 5), Decl(commentsOverloads.ts, 95, 36), Decl(commentsOverloads.ts, 96, 36))
+>prop2 : Symbol(prop2, Decl(commentsOverloads.ts, 93, 5), Decl(commentsOverloads.ts, 95, 36), Decl(commentsOverloads.ts, 96, 36))
 >a : Symbol(a, Decl(commentsOverloads.ts, 95, 17))
 
     public prop2(b: string): number;
->prop2 : Symbol(c.prop2, Decl(commentsOverloads.ts, 93, 5), Decl(commentsOverloads.ts, 95, 36), Decl(commentsOverloads.ts, 96, 36))
+>prop2 : Symbol(prop2, Decl(commentsOverloads.ts, 93, 5), Decl(commentsOverloads.ts, 95, 36), Decl(commentsOverloads.ts, 96, 36))
 >b : Symbol(b, Decl(commentsOverloads.ts, 96, 17))
 
     public prop2(aorb: any) {
->prop2 : Symbol(c.prop2, Decl(commentsOverloads.ts, 93, 5), Decl(commentsOverloads.ts, 95, 36), Decl(commentsOverloads.ts, 96, 36))
+>prop2 : Symbol(prop2, Decl(commentsOverloads.ts, 93, 5), Decl(commentsOverloads.ts, 95, 36), Decl(commentsOverloads.ts, 96, 36))
 >aorb : Symbol(aorb, Decl(commentsOverloads.ts, 97, 17))
 
         return 10;
     }
     public prop3(a: number): number;
->prop3 : Symbol(c.prop3, Decl(commentsOverloads.ts, 99, 5), Decl(commentsOverloads.ts, 100, 36), Decl(commentsOverloads.ts, 102, 36))
+>prop3 : Symbol(prop3, Decl(commentsOverloads.ts, 99, 5), Decl(commentsOverloads.ts, 100, 36), Decl(commentsOverloads.ts, 102, 36))
 >a : Symbol(a, Decl(commentsOverloads.ts, 100, 17))
 
     /** prop3 2*/
     public prop3(b: string): number;
->prop3 : Symbol(c.prop3, Decl(commentsOverloads.ts, 99, 5), Decl(commentsOverloads.ts, 100, 36), Decl(commentsOverloads.ts, 102, 36))
+>prop3 : Symbol(prop3, Decl(commentsOverloads.ts, 99, 5), Decl(commentsOverloads.ts, 100, 36), Decl(commentsOverloads.ts, 102, 36))
 >b : Symbol(b, Decl(commentsOverloads.ts, 102, 17))
 
     public prop3(aorb: any) {
->prop3 : Symbol(c.prop3, Decl(commentsOverloads.ts, 99, 5), Decl(commentsOverloads.ts, 100, 36), Decl(commentsOverloads.ts, 102, 36))
+>prop3 : Symbol(prop3, Decl(commentsOverloads.ts, 99, 5), Decl(commentsOverloads.ts, 100, 36), Decl(commentsOverloads.ts, 102, 36))
 >aorb : Symbol(aorb, Decl(commentsOverloads.ts, 103, 17))
 
         return 10;
     }
     /** prop4 1*/
     public prop4(a: number): number;
->prop4 : Symbol(c.prop4, Decl(commentsOverloads.ts, 105, 5), Decl(commentsOverloads.ts, 107, 36), Decl(commentsOverloads.ts, 109, 36))
+>prop4 : Symbol(prop4, Decl(commentsOverloads.ts, 105, 5), Decl(commentsOverloads.ts, 107, 36), Decl(commentsOverloads.ts, 109, 36))
 >a : Symbol(a, Decl(commentsOverloads.ts, 107, 17))
 
     /** prop4 2*/
     public prop4(b: string): number;
->prop4 : Symbol(c.prop4, Decl(commentsOverloads.ts, 105, 5), Decl(commentsOverloads.ts, 107, 36), Decl(commentsOverloads.ts, 109, 36))
+>prop4 : Symbol(prop4, Decl(commentsOverloads.ts, 105, 5), Decl(commentsOverloads.ts, 107, 36), Decl(commentsOverloads.ts, 109, 36))
 >b : Symbol(b, Decl(commentsOverloads.ts, 109, 17))
 
     public prop4(aorb: any) {
->prop4 : Symbol(c.prop4, Decl(commentsOverloads.ts, 105, 5), Decl(commentsOverloads.ts, 107, 36), Decl(commentsOverloads.ts, 109, 36))
+>prop4 : Symbol(prop4, Decl(commentsOverloads.ts, 105, 5), Decl(commentsOverloads.ts, 107, 36), Decl(commentsOverloads.ts, 109, 36))
 >aorb : Symbol(aorb, Decl(commentsOverloads.ts, 110, 17))
 
         return 10;
     }
     /** prop5 1*/
     public prop5(a: number): number;
->prop5 : Symbol(c.prop5, Decl(commentsOverloads.ts, 112, 5), Decl(commentsOverloads.ts, 114, 36), Decl(commentsOverloads.ts, 116, 36))
+>prop5 : Symbol(prop5, Decl(commentsOverloads.ts, 112, 5), Decl(commentsOverloads.ts, 114, 36), Decl(commentsOverloads.ts, 116, 36))
 >a : Symbol(a, Decl(commentsOverloads.ts, 114, 17))
 
     /** prop5 2*/
     public prop5(b: string): number;
->prop5 : Symbol(c.prop5, Decl(commentsOverloads.ts, 112, 5), Decl(commentsOverloads.ts, 114, 36), Decl(commentsOverloads.ts, 116, 36))
+>prop5 : Symbol(prop5, Decl(commentsOverloads.ts, 112, 5), Decl(commentsOverloads.ts, 114, 36), Decl(commentsOverloads.ts, 116, 36))
 >b : Symbol(b, Decl(commentsOverloads.ts, 116, 17))
 
     /** Prop5 implementaion*/
     public prop5(aorb: any) {
->prop5 : Symbol(c.prop5, Decl(commentsOverloads.ts, 112, 5), Decl(commentsOverloads.ts, 114, 36), Decl(commentsOverloads.ts, 116, 36))
+>prop5 : Symbol(prop5, Decl(commentsOverloads.ts, 112, 5), Decl(commentsOverloads.ts, 114, 36), Decl(commentsOverloads.ts, 116, 36))
 >aorb : Symbol(aorb, Decl(commentsOverloads.ts, 118, 17))
 
         return 10;
