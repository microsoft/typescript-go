--- old.excessPropertyCheckWithEmptyObject.symbols
+++ new.excessPropertyCheckWithEmptyObject.symbols
@@= skipped -4, +4 lines =@@
 
 // Excess property error expected here
 Object.defineProperty(window, "prop", { value: "v1.0.0", readonly: false });
->Object.defineProperty : Symbol(ObjectConstructor.defineProperty, Decl(lib.es5.d.ts, --, --))
+>Object.defineProperty : Symbol(defineProperty, Decl(lib.es5.d.ts, --, --))
 >Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->defineProperty : Symbol(ObjectConstructor.defineProperty, Decl(lib.es5.d.ts, --, --))
+>defineProperty : Symbol(defineProperty, Decl(lib.es5.d.ts, --, --))
 >window : Symbol(window, Decl(lib.dom.d.ts, --, --))
 >value : Symbol(value, Decl(excessPropertyCheckWithEmptyObject.ts, 3, 39))
 >readonly : Symbol(readonly, Decl(excessPropertyCheckWithEmptyObject.ts, 3, 56))
 
 interface A { x?: string }
 >A : Symbol(A, Decl(excessPropertyCheckWithEmptyObject.ts, 3, 76))
->x : Symbol(A.x, Decl(excessPropertyCheckWithEmptyObject.ts, 5, 13))
+>x : Symbol(x, Decl(excessPropertyCheckWithEmptyObject.ts, 5, 13))
 
 // Excess property error expected here
 let a: A & ThisType<any> = { y: 10 };
