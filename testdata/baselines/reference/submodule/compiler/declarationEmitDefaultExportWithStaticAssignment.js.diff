--- old.declarationEmitDefaultExportWithStaticAssignment.js
+++ new.declarationEmitDefaultExportWithStaticAssignment.js
@@= skipped -42, +42 lines =@@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.default = Example;
-var foo_1 = require("./foo");
+const foo_1 = require("./foo");
 function Example() { }
 Example.Foo = foo_1.Foo;
 //// [index2.js]
@@= skipped -8, +8 lines =@@
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.Foo = void 0;
 exports.default = Example;
-var foo_1 = require("./foo");
+const foo_1 = require("./foo");
 Object.defineProperty(exports, "Foo", { enumerable: true, get: function () { return foo_1.Foo; } });
 function Example() { }
 Example.Foo = foo_1.Foo;
@@= skipped -32, +32 lines =@@
 }
 //// [index1.d.ts]
 declare function Example(): void;
+export default Example;
 declare namespace Example {
-    var Foo: typeof import("./foo").Foo;
+    const Foo: typeof import("./foo").Foo;
 }
-export default Example;
 //// [index2.d.ts]
 import { Foo } from './foo';
 export { Foo };
 declare function Example(): void;
+export default Example;
 declare namespace Example {
-    var Foo: typeof import("./foo").Foo;
+    const Foo: typeof import("./foo").Foo;
 }
-export default Example;
 //// [index3.d.ts]
 export declare class Bar {
 }
 declare function Example(): void;
+export default Example;
 declare namespace Example {
-    var Bar: typeof import("./index3").Bar;
+    const Bar: typeof import("./index3").Bar;
 }
-export default Example;
 //// [index4.d.ts]
 export declare function C(): any;
 export declare namespace C {
-    var A: () => void;
-    var B: () => void;
+    const A: () => void;
+}
+export declare namespace C {
+    const B: () => void;
 }