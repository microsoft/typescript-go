--- old.useUnknownInCatchVariables01.symbols
+++ new.useUnknownInCatchVariables01.symbols
@@= skipped -22, +22 lines =@@
         // works!
         // We've narrowed 'e' down to the type 'string'.
         console.log(e.toUpperCase());
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
->e.toUpperCase : Symbol(String.toUpperCase, Decl(lib.es5.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
+>e.toUpperCase : Symbol(toUpperCase, Decl(lib.es5.d.ts, --, --))
 >e : Symbol(e, Decl(useUnknownInCatchVariables01.ts, 3, 7))
->toUpperCase : Symbol(String.toUpperCase, Decl(lib.es5.d.ts, --, --))
+>toUpperCase : Symbol(toUpperCase, Decl(lib.es5.d.ts, --, --))
     }
     if (e instanceof Error) {
 >e : Symbol(e, Decl(useUnknownInCatchVariables01.ts, 3, 7))
 >Error : Symbol(Error, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 
         e.stack?.toUpperCase();
->e.stack?.toUpperCase : Symbol(String.toUpperCase, Decl(lib.es5.d.ts, --, --))
->e.stack : Symbol(Error.stack, Decl(lib.es5.d.ts, --, --))
+>e.stack?.toUpperCase : Symbol(toUpperCase, Decl(lib.es5.d.ts, --, --))
+>e.stack : Symbol(stack, Decl(lib.es5.d.ts, --, --))
 >e : Symbol(e, Decl(useUnknownInCatchVariables01.ts, 3, 7))
->stack : Symbol(Error.stack, Decl(lib.es5.d.ts, --, --))
->toUpperCase : Symbol(String.toUpperCase, Decl(lib.es5.d.ts, --, --))
+>stack : Symbol(stack, Decl(lib.es5.d.ts, --, --))
+>toUpperCase : Symbol(toUpperCase, Decl(lib.es5.d.ts, --, --))
     }
     if (typeof e === "number") {
 >e : Symbol(e, Decl(useUnknownInCatchVariables01.ts, 3, 7))
 
         e.toExponential();
->e.toExponential : Symbol(Number.toExponential, Decl(lib.es5.d.ts, --, --))
+>e.toExponential : Symbol(toExponential, Decl(lib.es5.d.ts, --, --))
 >e : Symbol(e, Decl(useUnknownInCatchVariables01.ts, 3, 7))
->toExponential : Symbol(Number.toExponential, Decl(lib.es5.d.ts, --, --))
+>toExponential : Symbol(toExponential, Decl(lib.es5.d.ts, --, --))
 
         e++;
 >e : Symbol(e, Decl(useUnknownInCatchVariables01.ts, 3, 7))
