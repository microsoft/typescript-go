--- old.eventEmitterPatternWithRecordOfFunction.symbols
+++ new.eventEmitterPatternWithRecordOfFunction.symbols
@@= skipped -4, +4 lines =@@
 >A : Symbol(A, Decl(eventEmitterPatternWithRecordOfFunction.ts, 0, 0))
 
     emit(event: string, ...args: any[]): boolean;
->emit : Symbol(A.emit, Decl(eventEmitterPatternWithRecordOfFunction.ts, 0, 13))
+>emit : Symbol(emit, Decl(eventEmitterPatternWithRecordOfFunction.ts, 0, 13))
 >event : Symbol(event, Decl(eventEmitterPatternWithRecordOfFunction.ts, 1, 9))
 >args : Symbol(args, Decl(eventEmitterPatternWithRecordOfFunction.ts, 1, 23))
 }
@@= skipped -25, +25 lines =@@
 >A : Symbol(A, Decl(eventEmitterPatternWithRecordOfFunction.ts, 0, 0))
 
     emit<Event extends keyof M>(event: Event, ...args: Args<M[Event]>): boolean;
->emit : Symbol(B.emit, Decl(eventEmitterPatternWithRecordOfFunction.ts, 8, 43))
+>emit : Symbol(emit, Decl(eventEmitterPatternWithRecordOfFunction.ts, 8, 43))
 >Event : Symbol(Event, Decl(eventEmitterPatternWithRecordOfFunction.ts, 9, 9))
 >M : Symbol(M, Decl(eventEmitterPatternWithRecordOfFunction.ts, 8, 12))
 >event : Symbol(event, Decl(eventEmitterPatternWithRecordOfFunction.ts, 9, 32))
