//// [tests/cases/compiler/declarationEmitTypeAliasWithTypeParameters6.ts] ////

=== declarationEmitTypeAliasWithTypeParameters6.ts ===
type Foo<T, Y> = {
>Foo : Foo<T, Y>
>T : T
>Y : Y

    foo<U, J>(): Foo<U, J>
>foo : <U, J>() => Foo<U, J>
>U : U
>J : J

};
type SubFoo<R, S> = Foo<S, R>;
>SubFoo : SubFoo<R, S>
>R : R
>S : S

function foo() {
>foo : () => SubFoo<number, string>

    return {} as SubFoo<number, string>;
>{} as SubFoo<number, string> : SubFoo<number, string>
>{} : {}
}

