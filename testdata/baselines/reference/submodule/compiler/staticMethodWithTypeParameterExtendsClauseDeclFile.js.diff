--- old.staticMethodWithTypeParameterExtendsClauseDeclFile.js
+++ new.staticMethodWithTypeParameterExtendsClauseDeclFile.js
@@= skipped -26, +26 lines =@@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.publicClassWithWithPrivateTypeParameters = exports.publicClass = void 0;
-var privateClass = /** @class */ (function () {
-    function privateClass() {
-    }
-    return privateClass;
-}());
-var publicClass = /** @class */ (function () {
-    function publicClass() {
-    }
-    return publicClass;
-}());
+class privateClass {
+}
+class publicClass {
+}
 exports.publicClass = publicClass;
-var publicClassWithWithPrivateTypeParameters = /** @class */ (function () {
-    function publicClassWithWithPrivateTypeParameters() {
-    }
-    publicClassWithWithPrivateTypeParameters.myPrivateStaticMethod1 = function () {
-    };
-    publicClassWithWithPrivateTypeParameters.prototype.myPrivateMethod1 = function () {
-    };
-    publicClassWithWithPrivateTypeParameters.myPrivateStaticMethod2 = function () {
-    };
-    publicClassWithWithPrivateTypeParameters.prototype.myPrivateMethod2 = function () {
-    };
-    publicClassWithWithPrivateTypeParameters.myPublicStaticMethod = function () {
-    };
-    publicClassWithWithPrivateTypeParameters.prototype.myPublicMethod = function () {
-    };
-    return publicClassWithWithPrivateTypeParameters;
-}());
+class publicClassWithWithPrivateTypeParameters {
+    static myPrivateStaticMethod1() {
+    }
+    myPrivateMethod1() {
+    }
+    static myPrivateStaticMethod2() {
+    }
+    myPrivateMethod2() {
+    }
+    static myPublicStaticMethod() {
+    }
+    myPublicMethod() {
+    }
+}
 exports.publicClassWithWithPrivateTypeParameters = publicClassWithWithPrivateTypeParameters;

