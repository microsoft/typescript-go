--- old.checkSuperCallBeforeThisAccessing1.symbols
+++ new.checkSuperCallBeforeThisAccessing1.symbols
@@= skipped -8, +8 lines =@@
 >Based : Symbol(Based, Decl(checkSuperCallBeforeThisAccessing1.ts, 0, 0))
 
     public x: number;
->x : Symbol(Derived.x, Decl(checkSuperCallBeforeThisAccessing1.ts, 1, 29))
+>x : Symbol(x, Decl(checkSuperCallBeforeThisAccessing1.ts, 1, 29))
 
     constructor() {
         super();
@@= skipped -10, +10 lines =@@
 >this : Symbol(Derived, Decl(checkSuperCallBeforeThisAccessing1.ts, 0, 15))
 
         this.x = 10;
->this.x : Symbol(Derived.x, Decl(checkSuperCallBeforeThisAccessing1.ts, 1, 29))
+>this.x : Symbol(x, Decl(checkSuperCallBeforeThisAccessing1.ts, 1, 29))
 >this : Symbol(Derived, Decl(checkSuperCallBeforeThisAccessing1.ts, 0, 15))
->x : Symbol(Derived.x, Decl(checkSuperCallBeforeThisAccessing1.ts, 1, 29))
+>x : Symbol(x, Decl(checkSuperCallBeforeThisAccessing1.ts, 1, 29))
 
         var that = this;
 >that : Symbol(that, Decl(checkSuperCallBeforeThisAccessing1.ts, 7, 11))
