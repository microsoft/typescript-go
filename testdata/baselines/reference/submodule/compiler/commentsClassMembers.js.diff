--- old.commentsClassMembers.js
+++ new.commentsClassMembers.js
@@= skipped -221, +221 lines =@@
 //// [commentsClassMembers.js]
 /** This is comment for c1*/
 class c1 {
+    /** p1 is property of c1*/
+    p1;
     /** sum with property*/
     p2(/** number to add*/ b) {
         return this.p1 + b;
@@= skipped -12, +14 lines =@@
     set p3(/** this is value*/ value) {
         this.p1 = this.p2(value);
     } // trailing comment Setter
+    /** pp1 is property of c1*/
+    pp1;
     /** sum with property*/
     pp2(/** number to add*/ b) {
         return this.p1 + b;
@@= skipped -15, +17 lines =@@
     /** Constructor method*/
     constructor() {
     }
+    /** s1 is static property of c1*/
+    static s1;
     /** static sum with property*/
     static s2(/** number to add*/ b) {
         return c1.s1 + b;
@@= skipped -12, +14 lines =@@
     static set s3(/** this is value*/ value) {
         c1.s1 = c1.s2(value);
     } /*trailing comment 2 */ /*setter*/
+    nc_p1;
     nc_p2(b) {
         return this.nc_p1 + b;
     }
@@= skipped -9, +10 lines =@@
     set nc_p3(value) {
         this.nc_p1 = this.nc_p2(value);
     }
+    nc_pp1;
     nc_pp2(b) {
         return this.nc_pp1 + b;
     }
@@= skipped -9, +10 lines =@@
     set nc_pp3(value) {
         this.nc_pp1 = this.nc_pp2(value);
     }
+    static nc_s1;
     static nc_s2(b) {
         return c1.nc_s1 + b;
     }
@@= skipped -9, +10 lines =@@
     static set nc_s3(value) {
         c1.nc_s1 = c1.nc_s2(value);
     }
+    // p1 is property of c1
+    a_p1;
     // sum with property
     a_p2(b) {
         return this.a_p1 + b;
@@= skipped -12, +14 lines =@@
     set a_p3(value) {
         this.a_p1 = this.a_p2(value);
     }
+    // pp1 is property of c1
+    a_pp1;
     // sum with property
     a_pp2(b) {
         return this.a_p1 + b;
@@= skipped -12, +14 lines =@@
     set a_pp3(value) {
         this.a_pp1 = this.a_pp2(value);
     }
+    // s1 is static property of c1
+    static a_s1;
     // static sum with property
     static a_s2(b) {
         return c1.a_s1 + b;
@@= skipped -12, +14 lines =@@
     static set a_s3(value) {
         c1.a_s1 = c1.a_s2(value);
     }
+    /** p1 is property of c1 */
+    b_p1;
     /** sum with property */
     b_p2(b) {
         return this.b_p1 + b;
@@= skipped -12, +14 lines =@@
     set b_p3(value) {
         this.b_p1 = this.b_p2(value);
     }
+    /** pp1 is property of c1 */
+    b_pp1;
     /** sum with property */
     b_pp2(b) {
         return this.b_p1 + b;
@@= skipped -12, +14 lines =@@
     set b_pp3(value) {
         this.b_pp1 = this.b_pp2(value);
     }
+    /** s1 is static property of c1 */
+    static b_s1;
     /** static sum with property */
     static b_s2(b) {
         return c1.b_s1 + b;
@@= skipped -39, +41 lines =@@
 c1.nc_s3 = i1_s_ncprop;
 var i1_c = c1;
 class cProperties {
-    constructor() {
-        this.x = 10; /*trailing comment for property*/
-        this.y = 10; // trailing comment of // style
-    }
+    val;
     /** getter only property*/
     get p1() {
         return this.val;
@@= skipped -18, +15 lines =@@
     set nc_p2(value) {
         this.val = value;
     } /* trailing comment of setter only*/
+    x = 10; /*trailing comment for property*/
+    y = 10; // trailing comment of // style
 }
 var cProperties_i = new cProperties();
 cProperties_i.p2 = cProperties_i.p1;
@@= skipped -12, +14 lines =@@
     /** p1 is property of c1*/
     p1: number;
     /** sum with property*/
-    p2(/** number to add*/ b: number): number;
+    p2(/** number to add*/ b: number): number; /* trailing comment of method*/
     /** getter property*/
-    get p3(): number;
+    get p3(): number; // trailing comment Getter
     /** setter property*/
-    set p3(/** this is value*/ value: number);
+    set p3(/** this is value*/ value: number); // trailing comment Setter
     /** pp1 is property of c1*/
     private pp1;
     /** sum with property*/
@@= skipped -20, +20 lines =@@
     /** static sum with property*/
     static s2(/** number to add*/ b: number): number;
     /** static getter property*/
-    static get s3(): number;
+    static get s3(): number; /*trailing comment 1 getter*/
     /** setter property*/
-    static set s3(/** this is value*/ value: number);
+    static set s3(/** this is value*/ value: number); /*trailing comment 2 */ /*setter*/
     nc_p1: number;
     nc_p2(b: number): number;
     get nc_p3(): number;
@@= skipped -15, +15 lines =@@
     static nc_s2(b: number): number;
     static get nc_s3(): number;
     static set nc_s3(value: number);
+    // p1 is property of c1
     a_p1: number;
+    // sum with property
     a_p2(b: number): number;
+    // getter property
     get a_p3(): number;
+    // setter property
     set a_p3(value: number);
+    // pp1 is property of c1
     private a_pp1;
+    // sum with property
     private a_pp2;
+    // getter property
     private get a_pp3();
+    // setter property
     private set a_pp3(value);
+    // s1 is static property of c1
     static a_s1: number;
+    // static sum with property
     static a_s2(b: number): number;
+    // static getter property
     static get a_s3(): number;
+    // setter property
     static set a_s3(value: number);
     /** p1 is property of c1 */
     b_p1: number;
@@= skipped -60, +72 lines =@@
 declare class cProperties {
     private val;
     /** getter only property*/
-    get p1(): number;
+    get p1(): number; // trailing comment of only getter
     get nc_p1(): number;
     /**setter only property*/
     set p2(value: number);
-    set nc_p2(value: number);
-    x: number;
-    private y;
+    set nc_p2(value: number); /* trailing comment of setter only*/
+    x: number; /*trailing comment for property*/
+    private y; // trailing comment of // style
 }
 declare var cProperties_i: cProperties;