--- old.overloadCrash.symbols
+++ new.overloadCrash.symbols
@@= skipped -2, +2 lines =@@
 === overloadCrash.ts ===
 interface I1 {a:number; b:number;};
 >I1 : Symbol(I1, Decl(overloadCrash.ts, 0, 0))
->a : Symbol(I1.a, Decl(overloadCrash.ts, 0, 14))
->b : Symbol(I1.b, Decl(overloadCrash.ts, 0, 23))
+>a : Symbol(a, Decl(overloadCrash.ts, 0, 14))
+>b : Symbol(b, Decl(overloadCrash.ts, 0, 23))
 
 interface I2 {c:number; d:number;};
 >I2 : Symbol(I2, Decl(overloadCrash.ts, 0, 35))
->c : Symbol(I2.c, Decl(overloadCrash.ts, 1, 14))
->d : Symbol(I2.d, Decl(overloadCrash.ts, 1, 23))
+>c : Symbol(c, Decl(overloadCrash.ts, 1, 14))
+>d : Symbol(d, Decl(overloadCrash.ts, 1, 23))
 
 interface I3 {a:number; b:number; c:number; d:number;};
 >I3 : Symbol(I3, Decl(overloadCrash.ts, 1, 35))
->a : Symbol(I3.a, Decl(overloadCrash.ts, 2, 14))
->b : Symbol(I3.b, Decl(overloadCrash.ts, 2, 23))
->c : Symbol(I3.c, Decl(overloadCrash.ts, 2, 33))
->d : Symbol(I3.d, Decl(overloadCrash.ts, 2, 43))
+>a : Symbol(a, Decl(overloadCrash.ts, 2, 14))
+>b : Symbol(b, Decl(overloadCrash.ts, 2, 23))
+>c : Symbol(c, Decl(overloadCrash.ts, 2, 33))
+>d : Symbol(d, Decl(overloadCrash.ts, 2, 43))
 
 declare function foo(...n:I1[]);
 >foo : Symbol(foo, Decl(overloadCrash.ts, 2, 55), Decl(overloadCrash.ts, 4, 32))
