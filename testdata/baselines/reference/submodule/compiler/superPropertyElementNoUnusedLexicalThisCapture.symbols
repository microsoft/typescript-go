//// [tests/cases/compiler/superPropertyElementNoUnusedLexicalThisCapture.ts] ////

=== superPropertyElementNoUnusedLexicalThisCapture.ts ===
class A { x() {} }
>A : Symbol(A, Decl(superPropertyElementNoUnusedLexicalThisCapture.ts, 0, 0))
>x : Symbol(x, Decl(superPropertyElementNoUnusedLexicalThisCapture.ts, 0, 9))

class B extends A {
>B : Symbol(B, Decl(superPropertyElementNoUnusedLexicalThisCapture.ts, 0, 18))
>A : Symbol(A, Decl(superPropertyElementNoUnusedLexicalThisCapture.ts, 0, 0))

    constructor() {
        super();
>super : Symbol(A, Decl(superPropertyElementNoUnusedLexicalThisCapture.ts, 0, 0))
    }
    foo() {
>foo : Symbol(foo, Decl(superPropertyElementNoUnusedLexicalThisCapture.ts, 5, 5))

        return () => {
            super.x;
>super.x : Symbol(x, Decl(superPropertyElementNoUnusedLexicalThisCapture.ts, 0, 9))
>super : Symbol(A, Decl(superPropertyElementNoUnusedLexicalThisCapture.ts, 0, 0))
>x : Symbol(x, Decl(superPropertyElementNoUnusedLexicalThisCapture.ts, 0, 9))
        }
    }
    bar() {
>bar : Symbol(bar, Decl(superPropertyElementNoUnusedLexicalThisCapture.ts, 10, 5))

        return () => {
            super["x"];
>super : Symbol(A, Decl(superPropertyElementNoUnusedLexicalThisCapture.ts, 0, 0))
>"x" : Symbol(x, Decl(superPropertyElementNoUnusedLexicalThisCapture.ts, 0, 9))
        }
    }
}
