--- old.asyncAwaitWithCapturedBlockScopeVar.symbols
+++ new.asyncAwaitWithCapturedBlockScopeVar.symbols
@@ -14,9 +14,7 @@
 
         await 1;
         ar.push(() => i);
->ar.push : Symbol(Array.push, Decl(lib.es5.d.ts, --, --))
 >ar : Symbol(ar, Decl(asyncAwaitWithCapturedBlockScopeVar.ts, 1, 7))
->push : Symbol(Array.push, Decl(lib.es5.d.ts, --, --))
 >i : Symbol(i, Decl(asyncAwaitWithCapturedBlockScopeVar.ts, 2, 12))
     }
 }
@@ -34,9 +32,7 @@
 
         await 1;
         ar.push(() => i);
->ar.push : Symbol(Array.push, Decl(lib.es5.d.ts, --, --))
 >ar : Symbol(ar, Decl(asyncAwaitWithCapturedBlockScopeVar.ts, 9, 7))
->push : Symbol(Array.push, Decl(lib.es5.d.ts, --, --))
 >i : Symbol(i, Decl(asyncAwaitWithCapturedBlockScopeVar.ts, 10, 12))
 
         break;
@@ -56,9 +52,7 @@
 
         await 1;
         ar.push(() => i);
->ar.push : Symbol(Array.push, Decl(lib.es5.d.ts, --, --))
 >ar : Symbol(ar, Decl(asyncAwaitWithCapturedBlockScopeVar.ts, 18, 7))
->push : Symbol(Array.push, Decl(lib.es5.d.ts, --, --))
 >i : Symbol(i, Decl(asyncAwaitWithCapturedBlockScopeVar.ts, 19, 12))
 
         continue;
@@ -67,7 +61,7 @@
 
 async function fn4(): Promise<number> {
 >fn4 : Symbol(fn4, Decl(asyncAwaitWithCapturedBlockScopeVar.ts, 24, 1))
->Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>Promise : Symbol(Promise)
 
     let ar = [];
 >ar : Symbol(ar, Decl(asyncAwaitWithCapturedBlockScopeVar.ts, 27, 7))
@@ -79,9 +73,7 @@
 
         await 1;
         ar.push(() => i);
->ar.push : Symbol(Array.push, Decl(lib.es5.d.ts, --, --))
 >ar : Symbol(ar, Decl(asyncAwaitWithCapturedBlockScopeVar.ts, 27, 7))
->push : Symbol(Array.push, Decl(lib.es5.d.ts, --, --))
 >i : Symbol(i, Decl(asyncAwaitWithCapturedBlockScopeVar.ts, 28, 12))
 
         return 1;
