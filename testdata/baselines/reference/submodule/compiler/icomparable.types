//// [tests/cases/compiler/icomparable.ts] ////

=== icomparable.ts ===
    interface IComparable<T> {
>IComparable : IComparable<T>
>T : T

       compareTo(other: T);
>compareTo : (other: T) => any
>other : T
    }

    declare function sort<U extends IComparable<any>>(items: U[]): U[];
>sort : <U extends IComparable<any>>(items: U[]) => U[]
>U : U
>items : U[]

    interface StringComparable extends IComparable<string> {
>StringComparable : StringComparable
    }

    var sc: StringComparable[];
>sc : StringComparable[]

    var x = sort(sc);
>x : StringComparable[]
>sort(sc) : StringComparable[]
>sort : <U extends IComparable<any>>(items: U[]) => U[]
>sc : StringComparable[]

