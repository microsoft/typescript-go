--- old.mutuallyRecursiveGenericBaseTypes1.symbols
+++ new.mutuallyRecursiveGenericBaseTypes1.symbols
@@= skipped -5, +5 lines =@@
 >T : Symbol(T, Decl(mutuallyRecursiveGenericBaseTypes1.ts, 0, 12))
 
     foo(): B<T>; // instead of B does see this
->foo : Symbol(A.foo, Decl(mutuallyRecursiveGenericBaseTypes1.ts, 0, 16), Decl(mutuallyRecursiveGenericBaseTypes1.ts, 1, 16))
+>foo : Symbol(foo, Decl(mutuallyRecursiveGenericBaseTypes1.ts, 0, 16), Decl(mutuallyRecursiveGenericBaseTypes1.ts, 1, 16))
 >B : Symbol(B, Decl(mutuallyRecursiveGenericBaseTypes1.ts, 5, 1))
 >T : Symbol(T, Decl(mutuallyRecursiveGenericBaseTypes1.ts, 0, 12))
 
     foo(): void; // instead of B does see this
->foo : Symbol(A.foo, Decl(mutuallyRecursiveGenericBaseTypes1.ts, 0, 16), Decl(mutuallyRecursiveGenericBaseTypes1.ts, 1, 16))
+>foo : Symbol(foo, Decl(mutuallyRecursiveGenericBaseTypes1.ts, 0, 16), Decl(mutuallyRecursiveGenericBaseTypes1.ts, 1, 16))
  
     foo2(): B<number>;
->foo2 : Symbol(A.foo2, Decl(mutuallyRecursiveGenericBaseTypes1.ts, 2, 16))
+>foo2 : Symbol(foo2, Decl(mutuallyRecursiveGenericBaseTypes1.ts, 2, 16))
 >B : Symbol(B, Decl(mutuallyRecursiveGenericBaseTypes1.ts, 5, 1))
 }
  
@@= skipped -19, +19 lines =@@
 >T : Symbol(T, Decl(mutuallyRecursiveGenericBaseTypes1.ts, 7, 12))
 
     bar(): void;
->bar : Symbol(B.bar, Decl(mutuallyRecursiveGenericBaseTypes1.ts, 7, 29))
+>bar : Symbol(bar, Decl(mutuallyRecursiveGenericBaseTypes1.ts, 7, 29))
 }
  
 var b: B<number>;
@@= skipped -8, +8 lines =@@
 >B : Symbol(B, Decl(mutuallyRecursiveGenericBaseTypes1.ts, 5, 1))
 
 b.foo(); // should not error
->b.foo : Symbol(A.foo, Decl(mutuallyRecursiveGenericBaseTypes1.ts, 0, 16), Decl(mutuallyRecursiveGenericBaseTypes1.ts, 1, 16))
+>b.foo : Symbol(foo, Decl(mutuallyRecursiveGenericBaseTypes1.ts, 0, 16), Decl(mutuallyRecursiveGenericBaseTypes1.ts, 1, 16))
 >b : Symbol(b, Decl(mutuallyRecursiveGenericBaseTypes1.ts, 11, 3))
->foo : Symbol(A.foo, Decl(mutuallyRecursiveGenericBaseTypes1.ts, 0, 16), Decl(mutuallyRecursiveGenericBaseTypes1.ts, 1, 16))
+>foo : Symbol(foo, Decl(mutuallyRecursiveGenericBaseTypes1.ts, 0, 16), Decl(mutuallyRecursiveGenericBaseTypes1.ts, 1, 16))
 
  
 
