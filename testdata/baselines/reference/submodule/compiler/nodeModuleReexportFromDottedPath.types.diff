--- old.nodeModuleReexportFromDottedPath.types
+++ new.nodeModuleReexportFromDottedPath.types
@@= skipped -1, +1 lines =@@
 
 === /node_modules/.prisma/client/index.d.ts ===
 export interface PrismaClientOptions {
+>PrismaClientOptions : PrismaClientOptions
+
   rejectOnNotFound?: any;
 >rejectOnNotFound : any
 }
 
 export class PrismaClient<T extends PrismaClientOptions = PrismaClientOptions> {
 >PrismaClient : PrismaClient<T>
+>T : T
 
   private fetcher;
 >fetcher : any
@@= skipped -21, +24 lines =@@
 
 declare const enhancePrisma: <TPrismaClientCtor>(client: TPrismaClientCtor) => TPrismaClientCtor & { enhanced: unknown };
 >enhancePrisma : <TPrismaClientCtor>(client: TPrismaClientCtor) => TPrismaClientCtor & { enhanced: unknown; }
+>TPrismaClientCtor : TPrismaClientCtor
 >client : TPrismaClientCtor
 >enhanced : unknown
 
@@= skipped -10, +11 lines =@@
 >PrismaClient : typeof PrismaClient
 
 export default new EnhancedPrisma();
->new EnhancedPrisma() : PrismaClient<import("/node_modules/.prisma/client/index").PrismaClientOptions>
+>new EnhancedPrisma() : PrismaClient<PrismaClientOptions>
 >EnhancedPrisma : typeof PrismaClient & { enhanced: unknown; }
 
