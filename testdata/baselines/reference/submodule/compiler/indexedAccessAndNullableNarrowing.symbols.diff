--- old.indexedAccessAndNullableNarrowing.symbols
+++ new.indexedAccessAndNullableNarrowing.symbols
@@= skipped -107, +107 lines =@@
 >State : Symbol(State, Decl(indexedAccessAndNullableNarrowing.ts, 21, 37))
 
     setState<K extends keyof S>(key: K, value: S[K]): void;
->setState : Symbol(Store.setState, Decl(indexedAccessAndNullableNarrowing.ts, 29, 28))
+>setState : Symbol(setState, Decl(indexedAccessAndNullableNarrowing.ts, 29, 28))
 >K : Symbol(K, Decl(indexedAccessAndNullableNarrowing.ts, 30, 13))
 >S : Symbol(S, Decl(indexedAccessAndNullableNarrowing.ts, 29, 16))
 >key : Symbol(key, Decl(indexedAccessAndNullableNarrowing.ts, 30, 32))
@@= skipped -49, +49 lines =@@
 >undefined : Symbol(undefined)
 
     store.setState(key, value);
->store.setState : Symbol(Store.setState, Decl(indexedAccessAndNullableNarrowing.ts, 29, 28))
+>store.setState : Symbol(setState, Decl(indexedAccessAndNullableNarrowing.ts, 29, 28))
 >store : Symbol(store, Decl(indexedAccessAndNullableNarrowing.ts, 37, 2))
->setState : Symbol(Store.setState, Decl(indexedAccessAndNullableNarrowing.ts, 29, 28))
+>setState : Symbol(setState, Decl(indexedAccessAndNullableNarrowing.ts, 29, 28))
 >key : Symbol(key, Decl(indexedAccessAndNullableNarrowing.ts, 37, 28))
 >value : Symbol(value, Decl(indexedAccessAndNullableNarrowing.ts, 38, 9))
 
@@= skipped -11, +11 lines =@@
 >undefined : Symbol(undefined)
 
     store.setState(key, value);
->store.setState : Symbol(Store.setState, Decl(indexedAccessAndNullableNarrowing.ts, 29, 28))
+>store.setState : Symbol(setState, Decl(indexedAccessAndNullableNarrowing.ts, 29, 28))
 >store : Symbol(store, Decl(indexedAccessAndNullableNarrowing.ts, 37, 2))
->setState : Symbol(Store.setState, Decl(indexedAccessAndNullableNarrowing.ts, 29, 28))
+>setState : Symbol(setState, Decl(indexedAccessAndNullableNarrowing.ts, 29, 28))
 >key : Symbol(key, Decl(indexedAccessAndNullableNarrowing.ts, 37, 28))
 >value : Symbol(value, Decl(indexedAccessAndNullableNarrowing.ts, 38, 9))
 }
