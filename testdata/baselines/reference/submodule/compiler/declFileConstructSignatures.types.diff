--- old.declFileConstructSignatures.types
+++ new.declFileConstructSignatures.types
@@= skipped -1, +1 lines =@@
 
 === declFileConstructSignatures_0.ts ===
 export interface IConstructSignature {
+>IConstructSignature : IConstructSignature
+
     /** This comment should appear for foo*/
     new (): string;
 }
 
 export interface IConstructSignatureWithParameters {
+>IConstructSignatureWithParameters : IConstructSignatureWithParameters
+
     /** This is comment for function signature*/
     new (/** this is comment about a*/a: string,
 >a : string
@@= skipped -15, +19 lines =@@
 }
 
 export interface IConstructSignatureWithRestParameters {
+>IConstructSignatureWithRestParameters : IConstructSignatureWithRestParameters
+
     new (a: string, ...rests: string[]): string;
 >a : string
 >rests : string[]
 }
 
 export interface IConstructSignatureWithOverloads {
+>IConstructSignatureWithOverloads : IConstructSignatureWithOverloads
+
     new (a: string): string;
 >a : string
 
@@= skipped -14, +18 lines =@@
 }
 
 export interface IConstructSignatureWithTypeParameters<T> {
+>IConstructSignatureWithTypeParameters : IConstructSignatureWithTypeParameters<T>
+>T : T
+
     /** This comment should appear for foo*/
     new (a: T): T;
 >a : T
 }
 
 export interface IConstructSignatureWithOwnTypeParametes {
+>IConstructSignatureWithOwnTypeParametes : IConstructSignatureWithOwnTypeParametes
+
     new <T extends IConstructSignature>(a: T): T;
+>T : T
 >a : T
 }
 
 === declFileConstructSignatures_1.ts ===
 interface IGlobalConstructSignature {
+>IGlobalConstructSignature : IGlobalConstructSignature
+
     /** This comment should appear for foo*/
     new (): string;
 }
 
 interface IGlobalConstructSignatureWithParameters {
+>IGlobalConstructSignatureWithParameters : IGlobalConstructSignatureWithParameters
+
     /** This is comment for function signature*/
     new (/** this is comment about a*/a: string,
 >a : string
@@= skipped -27, +37 lines =@@
 }
 
 interface IGlobalConstructSignatureWithRestParameters {
+>IGlobalConstructSignatureWithRestParameters : IGlobalConstructSignatureWithRestParameters
 
     new (a: string, ...rests: string[]): string;
 >a : string
@@= skipped -8, +9 lines =@@
 }
 
 interface IGlobalConstructSignatureWithOverloads {
+>IGlobalConstructSignatureWithOverloads : IGlobalConstructSignatureWithOverloads
+
     new (a: string): string;
 >a : string
 
@@= skipped -8, +10 lines =@@
 }
 
 interface IGlobalConstructSignatureWithTypeParameters<T> {
+>IGlobalConstructSignatureWithTypeParameters : IGlobalConstructSignatureWithTypeParameters<T>
+>T : T
+
     /** This comment should appear for foo*/
     new (a: T): T;
 >a : T
 }
 
 interface IGlobalConstructSignatureWithOwnTypeParametes {
+>IGlobalConstructSignatureWithOwnTypeParametes : IGlobalConstructSignatureWithOwnTypeParametes
+
     new <T extends IGlobalConstructSignature>(a: T): T;
+>T : T
 >a : T
 }
