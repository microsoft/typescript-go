--- old.substitutionTypesCompareCorrectlyInRestrictiveInstances.types
+++ new.substitutionTypesCompareCorrectlyInRestrictiveInstances.types
@@= skipped -2, +2 lines =@@
 === substitutionTypesCompareCorrectlyInRestrictiveInstances.ts ===
 type UnionKeys<T> = T extends any ? keyof T : never;
 >UnionKeys : UnionKeys<T>
+>T : T
 
 type BugHelper<T, TAll> = T extends any ? Exclude<UnionKeys<TAll>, keyof T> : never
 >BugHelper : BugHelper<T, TAll>
+>T : T
+>TAll : TAll
 
 type Bug<TAll> =  BugHelper<TAll, TAll>
 >Bug : Bug<TAll>
+>TAll : TAll
 
 type Q = UnionKeys<{ a : any } | { b: any }>    // should be "a" | "b"
 >Q : Q
