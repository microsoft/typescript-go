--- old.declarationEmitObjectAssignedDefaultExport.errors.txt
+++ new.declarationEmitObjectAssignedDefaultExport.errors.txt
@@= skipped -0, +0 lines =@@
-index.ts(7,1): error TS2742: The inferred type of 'default' cannot be named without a reference to 'styled-components/node_modules/hoist-non-react-statics'. This is likely not portable. A type annotation is necessary.
+error TS2318: Cannot find global type 'Array'.
+error TS2318: Cannot find global type 'Function'.
+error TS2318: Cannot find global type 'IArguments'.
+error TS2318: Cannot find global type 'RegExp'.
+error TS2318: Cannot find global type 'String'.
+error TS2318: Cannot find global type 'TemplateStringsArray'.
+error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
+error TS2552: Cannot find name 'Number'. Did you mean 'number'?
+error TS2552: Cannot find name 'Object'. Did you mean 'object'?
+index.ts(7,16): error TS2304: Cannot find name 'Object'.
+node_modules/styled-components/index.d.ts(14,14): error TS2304: Cannot find name 'TemplateStringsArray'.
+node_modules/styled-components/node_modules/hoist-non-react-statics/index.d.ts(5,38): error TS2304: Cannot find name 'Exclude'.
 
 
-==== node_modules/styled-components/node_modules/hoist-non-react-statics/index.d.ts (0 errors) ====
+!!! error TS2318: Cannot find global type 'Array'.
+!!! error TS2318: Cannot find global type 'Function'.
+!!! error TS2318: Cannot find global type 'IArguments'.
+!!! error TS2318: Cannot find global type 'RegExp'.
+!!! error TS2318: Cannot find global type 'String'.
+!!! error TS2318: Cannot find global type 'TemplateStringsArray'.
+!!! error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
+!!! error TS2552: Cannot find name 'Number'. Did you mean 'number'?
+!!! error TS2552: Cannot find name 'Object'. Did you mean 'object'?
+==== node_modules/styled-components/node_modules/hoist-non-react-statics/index.d.ts (1 errors) ====
     interface Statics {
         "$$whatever": string;
     }
     declare namespace hoistNonReactStatics {
         type NonReactStatics<T> = {[X in Exclude<keyof T, keyof Statics>]: T[X]}
+                                         ~~~~~~~
+!!! error TS2304: Cannot find name 'Exclude'.
     }
     export = hoistNonReactStatics;
-==== node_modules/styled-components/index.d.ts (0 errors) ====
+==== node_modules/styled-components/index.d.ts (1 errors) ====
     import * as hoistNonReactStatics from "hoist-non-react-statics";
     export interface DefaultTheme {}
     export type StyledComponent<TTag extends string, TTheme = DefaultTheme, TStyle = {}, TWhatever = never> =
@@= skipped -23, +45 lines =@@
     }
     export interface StyledInterface {
         div: (a: TemplateStringsArray) => StyledComponent<"div">;
+                 ~~~~~~~~~~~~~~~~~~~~
+!!! error TS2304: Cannot find name 'TemplateStringsArray'.
     }
     
     declare const styled: StyledInterface;
@@= skipped -12, +14 lines =@@
     export const C = styled.div``;
     
     export default Object.assign(A, {
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+                   ~~~~~~
+!!! error TS2304: Cannot find name 'Object'.
         B,
-    ~~~~~~
         C
-    ~~~~~
     });
-    ~~~
-!!! error TS2742: The inferred type of 'default' cannot be named without a reference to 'styled-components/node_modules/hoist-non-react-statics'. This is likely not portable. A type annotation is necessary.
     
