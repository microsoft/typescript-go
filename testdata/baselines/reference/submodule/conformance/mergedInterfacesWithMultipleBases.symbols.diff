--- old.mergedInterfacesWithMultipleBases.symbols
+++ new.mergedInterfacesWithMultipleBases.symbols
@@= skipped -7, +7 lines =@@
 >C : Symbol(C, Decl(mergedInterfacesWithMultipleBases.ts, 0, 0))
 
     a: number;
->a : Symbol(C.a, Decl(mergedInterfacesWithMultipleBases.ts, 3, 9))
+>a : Symbol(a, Decl(mergedInterfacesWithMultipleBases.ts, 3, 9))
 }
 
 class C2 {
 >C2 : Symbol(C2, Decl(mergedInterfacesWithMultipleBases.ts, 5, 1))
 
     b: number;
->b : Symbol(C2.b, Decl(mergedInterfacesWithMultipleBases.ts, 7, 10))
+>b : Symbol(b, Decl(mergedInterfacesWithMultipleBases.ts, 7, 10))
 }
 
 interface A extends C {
@@= skipped -15, +15 lines =@@
 >C : Symbol(C, Decl(mergedInterfacesWithMultipleBases.ts, 0, 0))
 
     y: string;
->y : Symbol(A.y, Decl(mergedInterfacesWithMultipleBases.ts, 11, 23))
+>y : Symbol(y, Decl(mergedInterfacesWithMultipleBases.ts, 11, 23))
 }
 
 interface A extends C2 {
@@= skipped -8, +8 lines =@@
 >C2 : Symbol(C2, Decl(mergedInterfacesWithMultipleBases.ts, 5, 1))
 
     z: string;
->z : Symbol(A.z, Decl(mergedInterfacesWithMultipleBases.ts, 15, 24))
+>z : Symbol(z, Decl(mergedInterfacesWithMultipleBases.ts, 15, 24))
 }
 
 class D implements A {
@@= skipped -8, +8 lines =@@
 >A : Symbol(A, Decl(mergedInterfacesWithMultipleBases.ts, 9, 1), Decl(mergedInterfacesWithMultipleBases.ts, 13, 1))
 
     a: number;
->a : Symbol(D.a, Decl(mergedInterfacesWithMultipleBases.ts, 19, 22))
+>a : Symbol(a, Decl(mergedInterfacesWithMultipleBases.ts, 19, 22))
 
     b: number;
->b : Symbol(D.b, Decl(mergedInterfacesWithMultipleBases.ts, 20, 14))
+>b : Symbol(b, Decl(mergedInterfacesWithMultipleBases.ts, 20, 14))
 
     y: string;
->y : Symbol(D.y, Decl(mergedInterfacesWithMultipleBases.ts, 21, 14))
+>y : Symbol(y, Decl(mergedInterfacesWithMultipleBases.ts, 21, 14))
 
     z: string;
->z : Symbol(D.z, Decl(mergedInterfacesWithMultipleBases.ts, 22, 14))
+>z : Symbol(z, Decl(mergedInterfacesWithMultipleBases.ts, 22, 14))
 }
 
 var a: A;
@@= skipped -18, +18 lines =@@
 
 var r = a.a;
 >r : Symbol(r, Decl(mergedInterfacesWithMultipleBases.ts, 27, 3))
->a.a : Symbol(C.a, Decl(mergedInterfacesWithMultipleBases.ts, 3, 9))
+>a.a : Symbol(a, Decl(mergedInterfacesWithMultipleBases.ts, 3, 9))
 >a : Symbol(a, Decl(mergedInterfacesWithMultipleBases.ts, 26, 3))
->a : Symbol(C.a, Decl(mergedInterfacesWithMultipleBases.ts, 3, 9))
+>a : Symbol(a, Decl(mergedInterfacesWithMultipleBases.ts, 3, 9))
 
 // generic interfaces in a module
 module M {
@@= skipped -13, +13 lines =@@
 >T : Symbol(T, Decl(mergedInterfacesWithMultipleBases.ts, 31, 12))
 
         a: T;
->a : Symbol(C.a, Decl(mergedInterfacesWithMultipleBases.ts, 31, 16))
+>a : Symbol(a, Decl(mergedInterfacesWithMultipleBases.ts, 31, 16))
 >T : Symbol(T, Decl(mergedInterfacesWithMultipleBases.ts, 31, 12))
     }
 
@@= skipped -9, +9 lines =@@
 >T : Symbol(T, Decl(mergedInterfacesWithMultipleBases.ts, 35, 13))
 
         b: T;
->b : Symbol(C2.b, Decl(mergedInterfacesWithMultipleBases.ts, 35, 17))
+>b : Symbol(b, Decl(mergedInterfacesWithMultipleBases.ts, 35, 17))
 >T : Symbol(T, Decl(mergedInterfacesWithMultipleBases.ts, 35, 13))
     }
 
@@= skipped -11, +11 lines =@@
 >T : Symbol(T, Decl(mergedInterfacesWithMultipleBases.ts, 39, 16), Decl(mergedInterfacesWithMultipleBases.ts, 43, 16))
 
         y: T;
->y : Symbol(A.y, Decl(mergedInterfacesWithMultipleBases.ts, 39, 33))
+>y : Symbol(y, Decl(mergedInterfacesWithMultipleBases.ts, 39, 33))
 >T : Symbol(T, Decl(mergedInterfacesWithMultipleBases.ts, 39, 16), Decl(mergedInterfacesWithMultipleBases.ts, 43, 16))
     }
 
@@= skipped -10, +10 lines =@@
 >C2 : Symbol(C2, Decl(mergedInterfacesWithMultipleBases.ts, 33, 5))
 
         z: T;
->z : Symbol(A.z, Decl(mergedInterfacesWithMultipleBases.ts, 43, 39))
+>z : Symbol(z, Decl(mergedInterfacesWithMultipleBases.ts, 43, 39))
 >T : Symbol(T, Decl(mergedInterfacesWithMultipleBases.ts, 39, 16), Decl(mergedInterfacesWithMultipleBases.ts, 43, 16))
     }
 
@@= skipped -9, +9 lines =@@
 >A : Symbol(A, Decl(mergedInterfacesWithMultipleBases.ts, 37, 5), Decl(mergedInterfacesWithMultipleBases.ts, 41, 5))
 
         a: boolean;
->a : Symbol(D.a, Decl(mergedInterfacesWithMultipleBases.ts, 47, 35))
+>a : Symbol(a, Decl(mergedInterfacesWithMultipleBases.ts, 47, 35))
 
         b: string;
->b : Symbol(D.b, Decl(mergedInterfacesWithMultipleBases.ts, 48, 19))
+>b : Symbol(b, Decl(mergedInterfacesWithMultipleBases.ts, 48, 19))
 
         y: boolean;
->y : Symbol(D.y, Decl(mergedInterfacesWithMultipleBases.ts, 49, 18))
+>y : Symbol(y, Decl(mergedInterfacesWithMultipleBases.ts, 49, 18))
 
         z: boolean;
->z : Symbol(D.z, Decl(mergedInterfacesWithMultipleBases.ts, 50, 19))
+>z : Symbol(z, Decl(mergedInterfacesWithMultipleBases.ts, 50, 19))
     }
 }
