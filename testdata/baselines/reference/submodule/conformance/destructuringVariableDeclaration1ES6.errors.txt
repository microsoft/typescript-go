error TS2318: Cannot find global type 'Array'.
error TS2318: Cannot find global type 'Function'.
error TS2318: Cannot find global type 'IArguments'.
error TS2318: Cannot find global type 'Iterable'.
error TS2318: Cannot find global type 'RegExp'.
error TS2318: Cannot find global type 'String'.
error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
error TS2552: Cannot find name 'Number'. Did you mean 'number'?
error TS2552: Cannot find name 'Object'. Did you mean 'object'?
destructuringVariableDeclaration1ES6.ts(4,5): error TS2488: Type '[number, [[string]], boolean]' must have a '[Symbol.iterator]()' method that returns an iterator.
destructuringVariableDeclaration1ES6.ts(4,10): error TS2488: Type '[[string]]' must have a '[Symbol.iterator]()' method that returns an iterator.
destructuringVariableDeclaration1ES6.ts(4,11): error TS2488: Type '[string]' must have a '[Symbol.iterator]()' method that returns an iterator.
destructuringVariableDeclaration1ES6.ts(10,5): error TS2488: Type '[number, false, { t1: false; t2: string; }]' must have a '[Symbol.iterator]()' method that returns an iterator.
destructuringVariableDeclaration1ES6.ts(11,5): error TS2488: Type '[undefined, undefined, undefined]' must have a '[Symbol.iterator]()' method that returns an iterator.
destructuringVariableDeclaration1ES6.ts(16,5): error TS2488: Type '{}' must have a '[Symbol.iterator]()' method that returns an iterator.
destructuringVariableDeclaration1ES6.ts(23,5): error TS2488: Type '[number, string]' must have a '[Symbol.iterator]()' method that returns an iterator.
destructuringVariableDeclaration1ES6.ts(29,5): error TS2488: Type '[number, string, ...error[]]' must have a '[Symbol.iterator]()' method that returns an iterator.
destructuringVariableDeclaration1ES6.ts(32,9): error TS2488: Type '[number, number, { b1: number; b4: number; }]' must have a '[Symbol.iterator]()' method that returns an iterator.
destructuringVariableDeclaration1ES6.ts(33,9): error TS2488: Type '[number, number, { f3: number; f5: number; }]' must have a '[Symbol.iterator]()' method that returns an iterator.


!!! error TS2318: Cannot find global type 'Array'.
!!! error TS2318: Cannot find global type 'Function'.
!!! error TS2318: Cannot find global type 'IArguments'.
!!! error TS2318: Cannot find global type 'Iterable'.
!!! error TS2318: Cannot find global type 'RegExp'.
!!! error TS2318: Cannot find global type 'String'.
!!! error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
!!! error TS2552: Cannot find name 'Number'. Did you mean 'number'?
!!! error TS2552: Cannot find name 'Object'. Did you mean 'object'?
==== destructuringVariableDeclaration1ES6.ts (10 errors) ====
    // The type T associated with a destructuring variable declaration is determined as follows:
    //      If the declaration includes a type annotation, T is that type.
    var {a1, a2}: { a1: number, a2: string } = { a1: 10, a2: "world" }
    var [a3, [[a4]], a5]: [number, [[string]], boolean] = [1, [["hello"]], true];
        ~~~~~~~~~~~~~~~~
!!! error TS2488: Type '[number, [[string]], boolean]' must have a '[Symbol.iterator]()' method that returns an iterator.
             ~~~~~~
!!! error TS2488: Type '[[string]]' must have a '[Symbol.iterator]()' method that returns an iterator.
              ~~~~
!!! error TS2488: Type '[string]' must have a '[Symbol.iterator]()' method that returns an iterator.
    
    // The type T associated with a destructuring variable declaration is determined as follows:
    //      Otherwise, if the declaration includes an initializer expression, T is the type of that initializer expression.
    var { b1: { b11 } = { b11: "string" }  } = { b1: { b11: "world" } };
    var temp = { t1: true, t2: "false" };
    var [b2 = 3, b3 = true, b4 = temp] = [3, false, { t1: false, t2: "hello" }];
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2488: Type '[number, false, { t1: false; t2: string; }]' must have a '[Symbol.iterator]()' method that returns an iterator.
    var [b5 = 3, b6 = true, b7 = temp] = [undefined, undefined, undefined];
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2488: Type '[undefined, undefined, undefined]' must have a '[Symbol.iterator]()' method that returns an iterator.
    
    // The type T associated with a binding element is determined as follows:
    //      If the binding element is a rest element, T is an array type with
    //          an element type E, where E is the type of the numeric index signature of S.
    var [...c1] = [1,2,3]; 
        ~~~~~~~
!!! error TS2488: Type '{}' must have a '[Symbol.iterator]()' method that returns an iterator.
    var [...c2] = [1,2,3, "string"]; 
    
    // The type T associated with a binding element is determined as follows:
    //      Otherwise, if S is a tuple- like type (section 3.3.3):
    //          	Let N be the zero-based index of the binding element in the array binding pattern.
    // 	            If S has a property with the numerical name N, T is the type of that property.
    var [d1,d2] = [1,"string"]	
        ~~~~~~~
!!! error TS2488: Type '[number, string]' must have a '[Symbol.iterator]()' method that returns an iterator.
    
    // The type T associated with a binding element is determined as follows:
    //      Otherwise, if S is a tuple- like type (section 3.3.3):
    //              Otherwise, if S has a numeric index signature, T is the type of the numeric index signature.
    var temp1 = [true, false, true]
    var [d3, d4] = [1, "string", ...temp1];
        ~~~~~~~~
!!! error TS2488: Type '[number, string, ...error[]]' must have a '[Symbol.iterator]()' method that returns an iterator.
    
    //  Combining both forms of destructuring,
    var {e: [e1, e2, e3 = { b1: 1000, b4: 200 }]} = { e: [1, 2, { b1: 4, b4: 0 }] }; 
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2488: Type '[number, number, { b1: number; b4: number; }]' must have a '[Symbol.iterator]()' method that returns an iterator.
    var {f: [f1, f2, { f3: f4, f5 }, , ]} = { f: [1, 2, { f3: 4, f5: 0 }] };
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2488: Type '[number, number, { f3: number; f5: number; }]' must have a '[Symbol.iterator]()' method that returns an iterator.
    
    // When a destructuring variable declaration, binding property, or binding element specifies
    // an initializer expression, the type of the initializer expression is required to be assignable
    // to the widened form of the type associated with the destructuring variable declaration, binding property, or binding element.
    var {g: {g1 = [undefined, null]}}: { g: { g1: any[] } } = { g: { g1: [1, 2] } };
    var {h: {h1 = [undefined, null]}}: { h: { h1: number[] } } = { h: { h1: [1, 2] } };
    
    