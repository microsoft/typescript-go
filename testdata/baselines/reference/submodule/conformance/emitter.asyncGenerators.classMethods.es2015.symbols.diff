--- old.emitter.asyncGenerators.classMethods.es2015.symbols
+++ new.emitter.asyncGenerators.classMethods.es2015.symbols
@@ -5,7 +5,7 @@
 >C1 : Symbol(C1, Decl(C1.ts, 0, 0))
 
     async * f() {
->f : Symbol(C1.f, Decl(C1.ts, 0, 10))
+>f : Symbol(f, Decl(C1.ts, 0, 10))
     }
 }
 === C2.ts ===
@@ -13,7 +13,7 @@
 >C2 : Symbol(C2, Decl(C2.ts, 0, 0))
 
     async * f() {
->f : Symbol(C2.f, Decl(C2.ts, 0, 10))
+>f : Symbol(f, Decl(C2.ts, 0, 10))
 
         const x = yield;
 >x : Symbol(x, Decl(C2.ts, 2, 13))
@@ -24,7 +24,7 @@
 >C3 : Symbol(C3, Decl(C3.ts, 0, 0))
 
     async * f() {
->f : Symbol(C3.f, Decl(C3.ts, 0, 10))
+>f : Symbol(f, Decl(C3.ts, 0, 10))
 
         const x = yield 1;
 >x : Symbol(x, Decl(C3.ts, 2, 13))
@@ -35,7 +35,7 @@
 >C4 : Symbol(C4, Decl(C4.ts, 0, 0))
 
     async * f() {
->f : Symbol(C4.f, Decl(C4.ts, 0, 10))
+>f : Symbol(f, Decl(C4.ts, 0, 10))
 
         const x = yield* [1];
 >x : Symbol(x, Decl(C4.ts, 2, 13))
@@ -46,7 +46,7 @@
 >C5 : Symbol(C5, Decl(C5.ts, 0, 0))
 
     async * f() {
->f : Symbol(C5.f, Decl(C5.ts, 0, 10))
+>f : Symbol(f, Decl(C5.ts, 0, 10))
 
         const x = yield* (async function*() { yield 1; })();
 >x : Symbol(x, Decl(C5.ts, 2, 13))
@@ -57,7 +57,7 @@
 >C6 : Symbol(C6, Decl(C6.ts, 0, 0))
 
     async * f() {
->f : Symbol(C6.f, Decl(C6.ts, 0, 10))
+>f : Symbol(f, Decl(C6.ts, 0, 10))
 
         const x = await 1;
 >x : Symbol(x, Decl(C6.ts, 2, 13))
@@ -68,7 +68,7 @@
 >C7 : Symbol(C7, Decl(C7.ts, 0, 0))
 
     async * f() {
->f : Symbol(C7.f, Decl(C7.ts, 0, 10))
+>f : Symbol(f, Decl(C7.ts, 0, 10))
 
         return 1;
     }
@@ -78,15 +78,15 @@
 >C8 : Symbol(C8, Decl(C8.ts, 0, 0))
 
     g() {
->g : Symbol(C8.g, Decl(C8.ts, 0, 10))
+>g : Symbol(g, Decl(C8.ts, 0, 10))
     }
     async * f() {
->f : Symbol(C8.f, Decl(C8.ts, 2, 5))
+>f : Symbol(f, Decl(C8.ts, 2, 5))
 
         this.g();
->this.g : Symbol(C8.g, Decl(C8.ts, 0, 10))
+>this.g : Symbol(g, Decl(C8.ts, 0, 10))
 >this : Symbol(C8, Decl(C8.ts, 0, 0))
->g : Symbol(C8.g, Decl(C8.ts, 0, 10))
+>g : Symbol(g, Decl(C8.ts, 0, 10))
     }
 }
 === C9.ts ===
@@ -94,19 +94,19 @@
 >B9 : Symbol(B9, Decl(C9.ts, 0, 0))
 
     g() {}
->g : Symbol(B9.g, Decl(C9.ts, 0, 10))
+>g : Symbol(g, Decl(C9.ts, 0, 10))
 }
 class C9 extends B9 {
 >C9 : Symbol(C9, Decl(C9.ts, 2, 1))
 >B9 : Symbol(B9, Decl(C9.ts, 0, 0))
 
     async * f() {
->f : Symbol(C9.f, Decl(C9.ts, 3, 21))
+>f : Symbol(f, Decl(C9.ts, 3, 21))
 
         super.g();
->super.g : Symbol(B9.g, Decl(C9.ts, 0, 10))
+>super.g : Symbol(g, Decl(C9.ts, 0, 10))
 >super : Symbol(B9, Decl(C9.ts, 0, 0))
->g : Symbol(B9.g, Decl(C9.ts, 0, 10))
+>g : Symbol(g, Decl(C9.ts, 0, 10))
     }
 }
 
