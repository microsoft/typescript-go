--- old.anyAssignabilityInInheritance.types
+++ new.anyAssignabilityInInheritance.types
@@= skipped -3, +3 lines =@@
 // any is not a subtype of any other types, errors expected on all the below derived classes unless otherwise noted
 
 interface I {
+>I : I
+
     [x: string]: any;
 >x : string
 
@@= skipped -111, +113 lines =@@
 >a : any
 
 interface I8 { foo: string }
+>I8 : I8
 >foo : string
 
 declare function foo9(x: I8): I8;
@@= skipped -36, +37 lines =@@
 
 class A2<T> { foo: T; }
 >A2 : A2<T>
+>T : T
 >foo : T
 
 declare function foo11(x: A2<string>): A2<string>;
@@= skipped -35, +36 lines =@@
 declare function foo13(x: <T>(x: T) => T): <T>(x: T) => T;
 >foo13 : { (x: <T>(x: T) => T): <T>(x: T) => T; (x: any): any; }
 >x : <T>(x: T) => T
+>T : T
 >x : T
+>T : T
 >x : T
 
 declare function foo13(x: any): any;
@@= skipped -14, +16 lines =@@
 >a : any
 
 enum E { A }
->E : E
+>E : E.A
 >A : E.A
 
 declare function foo14(x: E): E;
->foo14 : { (x: E): E; (x: any): any; }
->x : E
+>foo14 : { (x: E.A): E.A; (x: any): any; }
+>x : E.A
 
 declare function foo14(x: any): any;
->foo14 : { (x: E): E; (x: any): any; }
+>foo14 : { (x: E.A): E.A; (x: any): any; }
 >x : any
 
 var r3 = foo3(a); // any
@@= skipped -30, +30 lines =@@
 declare function foo15(x: typeof f): typeof f;
 >foo15 : { (x: typeof f): typeof f; (x: any): any; }
 >x : typeof f
->f : typeof f
->f : typeof f
 
 declare function foo15(x: any): any;
 >foo15 : { (x: typeof f): typeof f; (x: any): any; }
