--- old.decoratedBlockScopedClass2.js
+++ new.decoratedBlockScopedClass2.js
@@= skipped -17, +17 lines =@@


 //// [a.js]
-var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
-    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
-    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
-    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
-    return c > 3 && r && Object.defineProperty(target, key, r), r;
-};
-var Foo_1;
 function decorator() {
     return (target) => { };
 }
 try {
-    let Foo = Foo_1 = class Foo {
+    @decorator()
+    class Foo {
         static func() {
-            return new Foo_1();
+            return new Foo();
         }
-    };
-    Foo = Foo_1 = __decorate([
-        decorator()
-    ], Foo);
+    }
     Foo.func();
 }
 catch (e) { }