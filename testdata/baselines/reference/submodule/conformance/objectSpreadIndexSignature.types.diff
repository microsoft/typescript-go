--- old.objectSpreadIndexSignature.types
+++ new.objectSpreadIndexSignature.types
@@= skipped -15, +15 lines =@@
 >n : string
 
 let i = { ...indexed1, b: 11 };
->i : { b: number; a: number; }
->{ ...indexed1, b: 11 } : { b: number; a: number; }
+>i : { a: number; b: number; }
+>{ ...indexed1, b: 11 } : { a: number; b: number; }
 >indexed1 : { [n: string]: number; a: number; }
 >b : number
 >11 : 11
@@= skipped -9, +9 lines =@@
 // only indexed has indexer, so i[101]: any
 i[101];
 >i[101] : any
->i : { b: number; a: number; }
+>i : { a: number; b: number; }
 >101 : 101
 
 let ii = { ...indexed1, ...indexed2 };
->ii : { [x: string]: number | boolean; c: boolean; a: number; }
->{ ...indexed1, ...indexed2 } : { [x: string]: number | boolean; c: boolean; a: number; }
+>ii : { [x: string]: number | boolean; a: number; c: boolean; }
+>{ ...indexed1, ...indexed2 } : { [x: string]: number | boolean; a: number; c: boolean; }
 >indexed1 : { [n: string]: number; a: number; }
 >indexed2 : { [n: string]: boolean; c: boolean; }
 
 // both have indexer, so i[1001]: number | boolean
 ii[1001];
 >ii[1001] : number | boolean
->ii : { [x: string]: number | boolean; c: boolean; a: number; }
+>ii : { [x: string]: number | boolean; a: number; c: boolean; }
 >1001 : 1001
 
 declare const b: boolean;
