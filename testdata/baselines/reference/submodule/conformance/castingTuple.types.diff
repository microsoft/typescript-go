--- old.castingTuple.types
+++ new.castingTuple.types
@@= skipped -1, +1 lines =@@
 
 === castingTuple.ts ===
 interface I { }
+>I : I
+
 class A { a = 10; }
 >A : A
 >a : number
@@= skipped -24, +26 lines =@@
 >f : any
 
 enum E1 { one }
->E1 : E1
+>E1 : E1.one
 >one : E1.one
 
 enum E2 { one }
->E2 : E2
+>E2 : E2.one
 >one : E2.one
 
 // no error
@@= skipped -65, +65 lines =@@
 >5 : 5
 
 var t10: [E1, E2] = [E1.one, E2.one];
->t10 : [E1, E2]
->[E1.one, E2.one] : [E1, E2]
->E1.one : E1
+>t10 : [E1.one, E2.one]
+>[E1.one, E2.one] : [E1.one, E2.one]
+>E1.one : E1.one
 >E1 : typeof E1
->one : E1
->E2.one : E2
+>one : E1.one
+>E2.one : E2.one
 >E2 : typeof E2
->one : E2
+>one : E2.one
 
 var t11 = <[number, number]>t10;
 >t11 : [number, number]
 ><[number, number]>t10 : [number, number]
->t10 : [E1, E2]
+>t10 : [E1.one, E2.one]
 
 var array1 = <{}[]>emptyObjTuple;
 >array1 : {}[]
