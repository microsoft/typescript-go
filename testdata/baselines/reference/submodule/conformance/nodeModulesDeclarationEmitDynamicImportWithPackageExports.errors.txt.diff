--- old.nodeModulesDeclarationEmitDynamicImportWithPackageExports.errors.txt
+++ new.nodeModulesDeclarationEmitDynamicImportWithPackageExports.errors.txt
@@= skipped -0, +0 lines =@@
-<no content>
+other.cts(5,14): error TS2742: The inferred type of 'f' cannot be named without a reference to './node_modules/inner/index.js'. This is likely not portable. A type annotation is necessary.
+other.mts(5,14): error TS2742: The inferred type of 'f' cannot be named without a reference to './node_modules/inner/index.js'. This is likely not portable. A type annotation is necessary.
+other.ts(5,14): error TS2742: The inferred type of 'f' cannot be named without a reference to './node_modules/inner/index.js'. This is likely not portable. A type annotation is necessary.
+other2.cts(2,14): error TS2742: The inferred type of 'd' cannot be named without a reference to './node_modules/inner/index.d.cts'. This is likely not portable. A type annotation is necessary.
+other2.mts(2,14): error TS2742: The inferred type of 'd' cannot be named without a reference to './node_modules/inner/index.d.cts'. This is likely not portable. A type annotation is necessary.
+other2.mts(3,14): error TS2742: The inferred type of 'e' cannot be named without a reference to './node_modules/inner/index.d.mts'. This is likely not portable. A type annotation is necessary.
+other2.ts(2,14): error TS2742: The inferred type of 'd' cannot be named without a reference to './node_modules/inner/index.d.cts'. This is likely not portable. A type annotation is necessary.
+other2.ts(3,14): error TS2742: The inferred type of 'e' cannot be named without a reference to './node_modules/inner/index.d.mts'. This is likely not portable. A type annotation is necessary.
+
+
+==== index.ts (0 errors) ====
+    // esm format file
+    export {};
+==== index.mts (0 errors) ====
+    // esm format file
+    export {};
+==== index.cts (0 errors) ====
+    // cjs format file
+    export {};
+==== other.ts (1 errors) ====
+    // esm format file
+    export const a = await import("package/cjs");
+    export const b = await import("package/mjs");
+    export const c = await import("package");
+    export const f = await import("inner");
+                 ~
+!!! error TS2742: The inferred type of 'f' cannot be named without a reference to './node_modules/inner/index.js'. This is likely not portable. A type annotation is necessary.
+==== other2.ts (2 errors) ====
+    // esm format file
+    export const d = await import("inner/cjs");
+                 ~
+!!! error TS2742: The inferred type of 'd' cannot be named without a reference to './node_modules/inner/index.d.cts'. This is likely not portable. A type annotation is necessary.
+    export const e = await import("inner/mjs");
+                 ~
+!!! error TS2742: The inferred type of 'e' cannot be named without a reference to './node_modules/inner/index.d.mts'. This is likely not portable. A type annotation is necessary.
+==== other.mts (1 errors) ====
+    // esm format file
+    export const a = await import("package/cjs");
+    export const b = await import("package/mjs");
+    export const c = await import("package");
+    export const f = await import("inner");
+                 ~
+!!! error TS2742: The inferred type of 'f' cannot be named without a reference to './node_modules/inner/index.js'. This is likely not portable. A type annotation is necessary.
+==== other2.mts (2 errors) ====
+    // esm format file
+    export const d = await import("inner/cjs");
+                 ~
+!!! error TS2742: The inferred type of 'd' cannot be named without a reference to './node_modules/inner/index.d.cts'. This is likely not portable. A type annotation is necessary.
+    export const e = await import("inner/mjs");
+                 ~
+!!! error TS2742: The inferred type of 'e' cannot be named without a reference to './node_modules/inner/index.d.mts'. This is likely not portable. A type annotation is necessary.
+==== other.cts (1 errors) ====
+    // cjs format file, no TLA
+    export const a = import("package/cjs");
+    export const b = import("package/mjs");
+    export const c = import("package");
+    export const f = import("inner");
+                 ~
+!!! error TS2742: The inferred type of 'f' cannot be named without a reference to './node_modules/inner/index.js'. This is likely not portable. A type annotation is necessary.
+==== other2.cts (1 errors) ====
+    // cjs format file, no TLA
+    export const d = import("inner/cjs");
+                 ~
+!!! error TS2742: The inferred type of 'd' cannot be named without a reference to './node_modules/inner/index.d.cts'. This is likely not portable. A type annotation is necessary.
+    export const e = import("inner/mjs");
+==== node_modules/inner/index.d.ts (0 errors) ====
+    // cjs format file
+    export const cjsMain = true;
+==== node_modules/inner/index.d.mts (0 errors) ====
+    // esm format file
+    export const esm = true;
+==== node_modules/inner/index.d.cts (0 errors) ====
+    // cjs format file
+    export const cjsNonmain = true;
+==== package.json (0 errors) ====
+    {
+        "name": "package",
+        "private": true,
+        "type": "module",
+        "exports": {
+            "./cjs": "./index.cjs",
+            "./mjs": "./index.mjs",
+            ".": "./index.js"
+        }
+    }
+==== node_modules/inner/package.json (0 errors) ====
+    {
+        "name": "inner",
+        "private": true,
+        "exports": {
+            "./cjs": "./index.cjs",
+            "./mjs": "./index.mjs",
+            ".": "./index.js"
+        }
+    }