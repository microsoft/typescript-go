--- old.superCallParameterContextualTyping1.symbols
+++ new.superCallParameterContextualTyping1.symbols
@@= skipped -6, +6 lines =@@
 >T2 : Symbol(T2, Decl(superCallParameterContextualTyping1.ts, 0, 11))
 
     constructor(private map: (value: T1) => T2) {
->map : Symbol(A.map, Decl(superCallParameterContextualTyping1.ts, 1, 16))
+>map : Symbol(map, Decl(superCallParameterContextualTyping1.ts, 1, 16))
 >value : Symbol(value, Decl(superCallParameterContextualTyping1.ts, 1, 30))
 >T1 : Symbol(T1, Decl(superCallParameterContextualTyping1.ts, 0, 8))
 >T2 : Symbol(T2, Decl(superCallParameterContextualTyping1.ts, 0, 11))
@@= skipped -17, +17 lines =@@
 >super : Symbol(A, Decl(superCallParameterContextualTyping1.ts, 0, 0))
 >value : Symbol(value, Decl(superCallParameterContextualTyping1.ts, 8, 26))
 >String : Symbol(String, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->value.toExponential : Symbol(Number.toExponential, Decl(lib.es5.d.ts, --, --))
+>value.toExponential : Symbol(toExponential, Decl(lib.es5.d.ts, --, --))
 >value : Symbol(value, Decl(superCallParameterContextualTyping1.ts, 8, 26))
->toExponential : Symbol(Number.toExponential, Decl(lib.es5.d.ts, --, --))
+>toExponential : Symbol(toExponential, Decl(lib.es5.d.ts, --, --))
 }
 
