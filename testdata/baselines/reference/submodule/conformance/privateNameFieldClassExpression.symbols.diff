--- old.privateNameFieldClassExpression.symbols
+++ new.privateNameFieldClassExpression.symbols
@@= skipped -4, +4 lines =@@
 >B : Symbol(B, Decl(privateNameFieldClassExpression.ts, 0, 0))
 
     #foo = class {
->#foo : Symbol(B.#foo, Decl(privateNameFieldClassExpression.ts, 0, 9))
+>#foo : Symbol(#foo, Decl(privateNameFieldClassExpression.ts, 0, 9))
 
         constructor() {
             console.log("hello");
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
->console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
         }
         static test = 123;
->test : Symbol((Anonymous class).test, Decl(privateNameFieldClassExpression.ts, 4, 9))
+>test : Symbol(test, Decl(privateNameFieldClassExpression.ts, 4, 9))
 
     };
     #foo2 = class Foo {
->#foo2 : Symbol(B.#foo2, Decl(privateNameFieldClassExpression.ts, 6, 6))
+>#foo2 : Symbol(#foo2, Decl(privateNameFieldClassExpression.ts, 6, 6))
 >Foo : Symbol(Foo, Decl(privateNameFieldClassExpression.ts, 7, 11))
 
         static otherClass = 123;
->otherClass : Symbol(Foo.otherClass, Decl(privateNameFieldClassExpression.ts, 7, 23))
+>otherClass : Symbol(otherClass, Decl(privateNameFieldClassExpression.ts, 7, 23))
 
     };
 }
