--- old.apparentTypeSupertype.types
+++ new.apparentTypeSupertype.types
@@= skipped -5, +5 lines =@@
 
 class Base {
 >Base : Base
->     : ^^^^
 
     x: string;
 >x : string
->  : ^^^^^^
 }
 
 // is String (S) a subtype of U extends String (T)? Would only be true if we used the apparent type of U (T)
 class Derived<U extends String> extends Base { // error
 >Derived : Derived<U>
->        : ^^^^^^^^^^
+>U : U
 >Base : Base
->     : ^^^^
 
     x: U;
 >x : U
->  : ^
 }
