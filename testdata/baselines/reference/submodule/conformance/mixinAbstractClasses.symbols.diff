--- old.mixinAbstractClasses.symbols
+++ new.mixinAbstractClasses.symbols
@@= skipped -4, +4 lines =@@
 >Mixin : Symbol(Mixin, Decl(mixinAbstractClasses.ts, 2, 1), Decl(mixinAbstractClasses.ts, 0, 0))
 
     mixinMethod(): void;
->mixinMethod : Symbol(Mixin.mixinMethod, Decl(mixinAbstractClasses.ts, 0, 17))
+>mixinMethod : Symbol(mixinMethod, Decl(mixinAbstractClasses.ts, 0, 17))
 }
 
 function Mixin<TBaseClass extends abstract new (...args: any) => any>(baseClass: TBaseClass): TBaseClass & (abstract new (...args: any) => Mixin) {
@@= skipped -19, +19 lines =@@
 >Mixin : Symbol(Mixin, Decl(mixinAbstractClasses.ts, 2, 1), Decl(mixinAbstractClasses.ts, 0, 0))
 
         mixinMethod() {
->mixinMethod : Symbol(MixinClass.mixinMethod, Decl(mixinAbstractClasses.ts, 5, 66))
+>mixinMethod : Symbol(mixinMethod, Decl(mixinAbstractClasses.ts, 5, 66))
         }
     }
     return MixinClass;
@@= skipped -11, +11 lines =@@
 >ConcreteBase : Symbol(ConcreteBase, Decl(mixinAbstractClasses.ts, 10, 1))
 
     baseMethod() {}
->baseMethod : Symbol(ConcreteBase.baseMethod, Decl(mixinAbstractClasses.ts, 12, 20))
+>baseMethod : Symbol(baseMethod, Decl(mixinAbstractClasses.ts, 12, 20))
 }
 
 abstract class AbstractBase {
 >AbstractBase : Symbol(AbstractBase, Decl(mixinAbstractClasses.ts, 14, 1))
 
     abstract abstractBaseMethod(): void;
->abstractBaseMethod : Symbol(AbstractBase.abstractBaseMethod, Decl(mixinAbstractClasses.ts, 16, 29))
+>abstractBaseMethod : Symbol(abstractBaseMethod, Decl(mixinAbstractClasses.ts, 16, 29))
 }
 
 class DerivedFromConcrete extends Mixin(ConcreteBase) {
@@= skipped -21, +21 lines =@@
 >DerivedFromConcrete : Symbol(DerivedFromConcrete, Decl(mixinAbstractClasses.ts, 18, 1))
 
 wasConcrete.baseMethod();
->wasConcrete.baseMethod : Symbol(ConcreteBase.baseMethod, Decl(mixinAbstractClasses.ts, 12, 20))
+>wasConcrete.baseMethod : Symbol(baseMethod, Decl(mixinAbstractClasses.ts, 12, 20))
 >wasConcrete : Symbol(wasConcrete, Decl(mixinAbstractClasses.ts, 23, 5))
->baseMethod : Symbol(ConcreteBase.baseMethod, Decl(mixinAbstractClasses.ts, 12, 20))
+>baseMethod : Symbol(baseMethod, Decl(mixinAbstractClasses.ts, 12, 20))
 
 wasConcrete.mixinMethod();
->wasConcrete.mixinMethod : Symbol(Mixin.mixinMethod, Decl(mixinAbstractClasses.ts, 0, 17))
+>wasConcrete.mixinMethod : Symbol(mixinMethod, Decl(mixinAbstractClasses.ts, 0, 17))
 >wasConcrete : Symbol(wasConcrete, Decl(mixinAbstractClasses.ts, 23, 5))
->mixinMethod : Symbol(Mixin.mixinMethod, Decl(mixinAbstractClasses.ts, 0, 17))
+>mixinMethod : Symbol(mixinMethod, Decl(mixinAbstractClasses.ts, 0, 17))
 
 class DerivedFromAbstract extends Mixin(AbstractBase) {
 >DerivedFromAbstract : Symbol(DerivedFromAbstract, Decl(mixinAbstractClasses.ts, 25, 26))
@@= skipped -15, +15 lines =@@
 >AbstractBase : Symbol(AbstractBase, Decl(mixinAbstractClasses.ts, 14, 1))
 
     abstractBaseMethod() {}
->abstractBaseMethod : Symbol(DerivedFromAbstract.abstractBaseMethod, Decl(mixinAbstractClasses.ts, 27, 55))
+>abstractBaseMethod : Symbol(abstractBaseMethod, Decl(mixinAbstractClasses.ts, 27, 55))
 }
 
 const wasAbstract = new DerivedFromAbstract();
@@= skipped -8, +8 lines =@@
 >DerivedFromAbstract : Symbol(DerivedFromAbstract, Decl(mixinAbstractClasses.ts, 25, 26))
 
 wasAbstract.abstractBaseMethod();
->wasAbstract.abstractBaseMethod : Symbol(DerivedFromAbstract.abstractBaseMethod, Decl(mixinAbstractClasses.ts, 27, 55))
+>wasAbstract.abstractBaseMethod : Symbol(abstractBaseMethod, Decl(mixinAbstractClasses.ts, 27, 55))
 >wasAbstract : Symbol(wasAbstract, Decl(mixinAbstractClasses.ts, 31, 5))
->abstractBaseMethod : Symbol(DerivedFromAbstract.abstractBaseMethod, Decl(mixinAbstractClasses.ts, 27, 55))
+>abstractBaseMethod : Symbol(abstractBaseMethod, Decl(mixinAbstractClasses.ts, 27, 55))
 
 wasAbstract.mixinMethod();
->wasAbstract.mixinMethod : Symbol(Mixin.mixinMethod, Decl(mixinAbstractClasses.ts, 0, 17))
+>wasAbstract.mixinMethod : Symbol(mixinMethod, Decl(mixinAbstractClasses.ts, 0, 17))
 >wasAbstract : Symbol(wasAbstract, Decl(mixinAbstractClasses.ts, 31, 5))
->mixinMethod : Symbol(Mixin.mixinMethod, Decl(mixinAbstractClasses.ts, 0, 17))
+>mixinMethod : Symbol(mixinMethod, Decl(mixinAbstractClasses.ts, 0, 17))
 
