--- old.instanceofOperatorWithInvalidStaticToString.symbols
+++ new.instanceofOperatorWithInvalidStaticToString.symbols
@@ -5,7 +5,7 @@
 >StaticToString : Symbol(StaticToString, Decl(instanceofOperatorWithInvalidStaticToString.ts, 0, 0))
 
     static toString(): void;
->toString : Symbol(StaticToString.toString, Decl(instanceofOperatorWithInvalidStaticToString.ts, 0, 30))
+>toString : Symbol(toString, Decl(instanceofOperatorWithInvalidStaticToString.ts, 0, 30))
 }
 
 function foo(staticToString: StaticToString) {
@@ -22,7 +22,7 @@
 >StaticToNumber : Symbol(StaticToNumber, Decl(instanceofOperatorWithInvalidStaticToString.ts, 6, 1))
 
     static toNumber(): void;
->toNumber : Symbol(StaticToNumber.toNumber, Decl(instanceofOperatorWithInvalidStaticToString.ts, 8, 30))
+>toNumber : Symbol(toNumber, Decl(instanceofOperatorWithInvalidStaticToString.ts, 8, 30))
 }
 function bar(staticToNumber: StaticToNumber) {
 >bar : Symbol(bar, Decl(instanceofOperatorWithInvalidStaticToString.ts, 10, 1))
@@ -38,7 +38,7 @@
 >NormalToString : Symbol(NormalToString, Decl(instanceofOperatorWithInvalidStaticToString.ts, 13, 1))
 
     toString(): void;
->toString : Symbol(NormalToString.toString, Decl(instanceofOperatorWithInvalidStaticToString.ts, 15, 30))
+>toString : Symbol(toString, Decl(instanceofOperatorWithInvalidStaticToString.ts, 15, 30))
 }
 function baz(normal: NormalToString) {
 >baz : Symbol(baz, Decl(instanceofOperatorWithInvalidStaticToString.ts, 17, 1))
