--- old.parserRealSource1.types
+++ new.parserRealSource1.types
@@= skipped -16, +16 lines =@@
 >false : false
 
         export interface IDiagnosticWriter {
+>IDiagnosticWriter : IDiagnosticWriter
+
             Alert(output: string): void;
 >Alert : (output: string) => void
 >output : string
@@= skipped -65, +67 lines =@@
     }
 
     export interface ILogger {
+>ILogger : ILogger
+
         information(): boolean;
 >information : () => boolean
 
@@= skipped -293, +295 lines =@@
                     result += "\\t";
 >result += "\\t" : string
 >result : string
->"\\t" : "\\t"
+>"\\t" : "\t"
 
                     break;
                 case 0x0a: // line feed
@@= skipped -9, +9 lines =@@
                     result += "\\n";
 >result += "\\n" : string
 >result : string
->"\\n" : "\\n"
+>"\\n" : "\n"
 
                     break;
                 case 0x0b: // vertical tab
@@= skipped -9, +9 lines =@@
                     result += "\\v";
 >result += "\\v" : string
 >result : string
->"\\v" : "\\v"
+>"\\v" : "\v"
 
                     break;
                 case 0x0c: // form feed
@@= skipped -9, +9 lines =@@
                     result += "\\f";
 >result += "\\f" : string
 >result : string
->"\\f" : "\\f"
+>"\\f" : "\f"
 
                     break;
                 case 0x0d: // carriage return
@@= skipped -9, +9 lines =@@
                     result += "\\r";
 >result += "\\r" : string
 >result : string
->"\\r" : "\\r"
+>"\\r" : "\r"
 
                     break;
                 case 0x22:  // double quote
@@= skipped -9, +9 lines =@@
                     result += "\\\"";
 >result += "\\\"" : string
 >result : string
->"\\\"" : "\\\""
+>"\\\"" : "\""
 
                     break;
                 case 0x27: // single quote
@@= skipped -9, +9 lines =@@
                     result += "\\\'";
 >result += "\\\'" : string
 >result : string
->"\\\'" : "\\'"
+>"\\\'" : "\'"
 
                     break;
                 case 0x5c: // Backslash
@@= skipped -9, +9 lines =@@
                     result += "\\";
 >result += "\\" : string
 >result : string
->"\\" : "\\"
+>"\\" : "\"
 
                     break;
                 default:
