--- old.enumBasics.types
+++ new.enumBasics.types
@@= skipped -47, +47 lines =@@
 };
 var e: typeof E1;
 >e : typeof E1
->E1 : typeof E1
 
 // Reverse mapping of enum returns string name of property 
 var s = E1[e.A];
@@= skipped -91, +90 lines =@@
 
 // Enum with computed member initializer of type 'any'
 enum E7 {
->E7 : E7
+>E7 : E7.A
 
     A = 'foo'['foo']
 >A : E7.A
->'foo'['foo'] : error
+>'foo'['foo'] : any
 >'foo' : "foo"
 >'foo' : "foo"
 }
 
 // Enum with computed member initializer of type number
 enum E8 {
->E8 : E8
+>E8 : E8.B
 
     B = 'foo'['foo']
 >B : E8.B
->'foo'['foo'] : error
+>'foo'['foo'] : any
 >'foo' : "foo"
 >'foo' : "foo"
 }
 
 //Enum with computed member intializer of same enum type
 enum E9 {
->E9 : E9
+>E9 : E9.A
 
     A,
 >A : E9.A
 
     B = A
 >B : E9.A
->A : E9
+>A : E9.A
 }
 
 // (refer to .js to validate)
 // Enum constant members are propagated
 var doNotPropagate = [
->doNotPropagate : (E8 | E7 | E4 | E3)[]
->[    E8.B, E7.A, E4.Z, E3.X, E3.Y, E3.Z] : (E8 | E7 | E4 | E3)[]
+>doNotPropagate : (E4.Z | E7.A | E8.B | E3)[]
+>[    E8.B, E7.A, E4.Z, E3.X, E3.Y, E3.Z] : (E4.Z | E7.A | E8.B | E3)[]
 
     E8.B, E7.A, E4.Z, E3.X, E3.Y, E3.Z
->E8.B : E8
+>E8.B : E8.B
 >E8 : typeof E8
->B : E8
->E7.A : E7
+>B : E8.B
+>E7.A : E7.A
 >E7 : typeof E7
->A : E7
+>A : E7.A
 >E4.Z : E4.Z
 >E4 : typeof E4
 >Z : E4.Z
@@= skipped -61, +61 lines =@@
 ];
 // Enum computed members are not propagated
 var doPropagate = [
->doPropagate : (E9 | E6 | E5)[]
->[    E9.A, E9.B, E6.B, E6.C, E6.A, E5.A, E5.B, E5.C] : (E9 | E6 | E5)[]
+>doPropagate : (E9.A | E5 | E6)[]
+>[    E9.A, E9.B, E6.B, E6.C, E6.A, E5.A, E5.B, E5.C] : (E9.A | E5 | E6)[]
 
     E9.A, E9.B, E6.B, E6.C, E6.A, E5.A, E5.B, E5.C
->E9.A : E9
+>E9.A : E9.A
 >E9 : typeof E9
->A : E9
->E9.B : E9
+>A : E9.A
+>E9.B : E9.A
 >E9 : typeof E9
->B : E9
+>B : E9.A
 >E6.B : E6.A
 >E6 : typeof E6
 >B : E6.A
