--- old.interfaceExtendsObjectIntersectionErrors.types
+++ new.interfaceExtendsObjectIntersectionErrors.types
@@= skipped -16, +16 lines =@@
 
 type T5 = { [P in 'a' | 'b' | 'c']: string };
 >T5 : T5
+>P : P
 
 interface I1 extends T1 { a: string }
+>I1 : I1
 >a : string
 
 interface I2 extends T2 { b: string }
+>I2 : I2
 >b : string
 
 interface I3 extends T3 { length: string }
+>I3 : I3
 >length : string
 
 interface I4 extends T4 { 0: number }
+>I4 : I4
 >0 : number
 
 interface I5 extends T5 { c: number }
+>I5 : I5
 >c : number
 
 type Constructor<T> = new () => T;
 >Constructor : Constructor<T>
+>T : T
 
 declare function Constructor<T>(): Constructor<T>;
 >Constructor : <T>() => Constructor<T>
+>T : T
 
 class C1 extends Constructor<T1>() { a: string }
 >C1 : C1
@@= skipped -69, +77 lines =@@
 
 type TCX = typeof CX;
 >TCX : typeof CX
->CX : typeof CX
 
 type TEX = typeof EX;
 >TEX : typeof EX
->EX : typeof EX
 
 type TNX = typeof NX;
 >TNX : typeof NX
->NX : typeof NX
 
 interface I10 extends TCX { a: number }
+>I10 : I10
 >a : number
 
 interface I11 extends TEX { C: string }
+>I11 : I11
 >C : string
 
 interface I12 extends TNX { a: number }
+>I12 : I12
 >a : number
 
 interface I14 extends TCX { [x: string]: number }
+>I14 : I14
 >x : string
 
 interface I15 extends TEX { [x: string]: number }
+>I15 : I15
 >x : string
 
 interface I16 extends TNX { [x: string]: number }
+>I16 : I16
 >x : string
 
 type Identifiable<T> = { _id: string } & T;
 >Identifiable : Identifiable<T>
+>T : T
 >_id : string
 
 interface I20 extends Partial<T1> { a: string }
+>I20 : I20
 >a : string
 
 interface I21 extends Readonly<T1> { a: string }
+>I21 : I21
 >a : string
 
 interface I22 extends Identifiable<T1> { a: string }
+>I22 : I22
 >a : string
 
 interface I23 extends Identifiable<T1 & { b: number}> { a: string }
+>I23 : I23
 >b : number
 >a : string
 
@@= skipped -51, +59 lines =@@
 >b : string
 
 interface I30 extends U { x: string }
+>I30 : I30
 >x : string
 
 interface I31<T> extends T { x: string }
+>I31 : I31<T>
+>T : T
 >x : string
 
