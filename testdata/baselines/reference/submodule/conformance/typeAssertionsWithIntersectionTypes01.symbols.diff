--- old.typeAssertionsWithIntersectionTypes01.symbols
+++ new.typeAssertionsWithIntersectionTypes01.symbols
@@= skipped -4, +4 lines =@@
 >I1 : Symbol(I1, Decl(typeAssertionsWithIntersectionTypes01.ts, 0, 0))
 
     p1: number
->p1 : Symbol(I1.p1, Decl(typeAssertionsWithIntersectionTypes01.ts, 0, 14))
+>p1 : Symbol(p1, Decl(typeAssertionsWithIntersectionTypes01.ts, 0, 14))
 }
 
 interface I2 extends I1 {
@@= skipped -8, +8 lines =@@
 >I1 : Symbol(I1, Decl(typeAssertionsWithIntersectionTypes01.ts, 0, 0))
 
     p2: number;
->p2 : Symbol(I2.p2, Decl(typeAssertionsWithIntersectionTypes01.ts, 4, 25))
+>p2 : Symbol(p2, Decl(typeAssertionsWithIntersectionTypes01.ts, 4, 25))
 }
 
 interface I3 {
 >I3 : Symbol(I3, Decl(typeAssertionsWithIntersectionTypes01.ts, 6, 1))
 
     p3: number;
->p3 : Symbol(I3.p3, Decl(typeAssertionsWithIntersectionTypes01.ts, 8, 14))
+>p3 : Symbol(p3, Decl(typeAssertionsWithIntersectionTypes01.ts, 8, 14))
 }
 
 var x = { p1: 10, p2: 20, p3: 30 };
