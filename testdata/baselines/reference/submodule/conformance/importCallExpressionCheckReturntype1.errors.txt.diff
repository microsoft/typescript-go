--- old.importCallExpressionCheckReturntype1.errors.txt
+++ new.importCallExpressionCheckReturntype1.errors.txt
@@= skipped -0, +0 lines =@@
-1.ts(4,5): error TS2322: Type 'Promise<typeof import("defaultPath")>' is not assignable to type 'Promise<typeof import("anotherModule")>'.
-  Property 'D' is missing in type 'typeof import("defaultPath")' but required in type 'typeof import("anotherModule")'.
-1.ts(5,10): error TS2352: Conversion of type 'Promise<typeof import("defaultPath")>' to type 'Promise<typeof import("anotherModule")>' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
-  Property 'D' is missing in type 'typeof import("defaultPath")' but required in type 'typeof import("anotherModule")'.
+error TS2318: Cannot find global type 'Array'.
+error TS2318: Cannot find global type 'Function'.
+error TS2318: Cannot find global type 'IArguments'.
+error TS2318: Cannot find global type 'Promise'.
+error TS2318: Cannot find global type 'RegExp'.
+error TS2318: Cannot find global type 'String'.
+error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
+error TS2552: Cannot find name 'Number'. Did you mean 'number'?
+error TS2552: Cannot find name 'Object'. Did you mean 'object'?
+1.ts(4,9): error TS2583: Cannot find name 'Promise'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.
+1.ts(4,41): error TS2711: A dynamic import call returns a 'Promise'. Make sure you have a declaration for 'Promise' or include 'ES2015' in your '--lib' option.
+1.ts(5,10): error TS2711: A dynamic import call returns a 'Promise'. Make sure you have a declaration for 'Promise' or include 'ES2015' in your '--lib' option.
+1.ts(5,37): error TS2583: Cannot find name 'Promise'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.
+1.ts(6,9): error TS2583: Cannot find name 'Promise'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.
+1.ts(6,24): error TS2711: A dynamic import call returns a 'Promise'. Make sure you have a declaration for 'Promise' or include 'ES2015' in your '--lib' option.
 
 
+!!! error TS2318: Cannot find global type 'Array'.
+!!! error TS2318: Cannot find global type 'Function'.
+!!! error TS2318: Cannot find global type 'IArguments'.
+!!! error TS2318: Cannot find global type 'Promise'.
+!!! error TS2318: Cannot find global type 'RegExp'.
+!!! error TS2318: Cannot find global type 'String'.
+!!! error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
+!!! error TS2552: Cannot find name 'Number'. Did you mean 'number'?
+!!! error TS2552: Cannot find name 'Object'. Did you mean 'object'?
 ==== anotherModule.ts (0 errors) ====
     export class D{}
     
 ==== defaultPath.ts (0 errors) ====
     export class C {}
     
-==== 1.ts (2 errors) ====
+==== 1.ts (6 errors) ====
     import * as defaultModule from "./defaultPath";
     import * as anotherModule from "./anotherModule";
     
     let p1: Promise<typeof anotherModule> = import("./defaultPath");
-        ~~
-!!! error TS2322: Type 'Promise<typeof import("defaultPath")>' is not assignable to type 'Promise<typeof import("anotherModule")>'.
-!!! error TS2322:   Property 'D' is missing in type 'typeof import("defaultPath")' but required in type 'typeof import("anotherModule")'.
-!!! related TS2728 anotherModule.ts:1:14: 'D' is declared here.
+            ~~~~~~~
+!!! error TS2583: Cannot find name 'Promise'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.
+                                            ~~~~~~~~~~~~~~~~~~~~~~~
+!!! error TS2711: A dynamic import call returns a 'Promise'. Make sure you have a declaration for 'Promise' or include 'ES2015' in your '--lib' option.
     let p2 = import("./defaultPath") as Promise<typeof anotherModule>;
-             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS2352: Conversion of type 'Promise<typeof import("defaultPath")>' to type 'Promise<typeof import("anotherModule")>' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
-!!! error TS2352:   Property 'D' is missing in type 'typeof import("defaultPath")' but required in type 'typeof import("anotherModule")'.
-!!! related TS2728 anotherModule.ts:1:14: 'D' is declared here.
+             ~~~~~~~~~~~~~~~~~~~~~~~
+!!! error TS2711: A dynamic import call returns a 'Promise'. Make sure you have a declaration for 'Promise' or include 'ES2015' in your '--lib' option.
+                                        ~~~~~~~
+!!! error TS2583: Cannot find name 'Promise'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.
     let p3: Promise<any> = import("./defaultPath");
+            ~~~~~~~
+!!! error TS2583: Cannot find name 'Promise'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.
+                           ~~~~~~~~~~~~~~~~~~~~~~~
+!!! error TS2711: A dynamic import call returns a 'Promise'. Make sure you have a declaration for 'Promise' or include 'ES2015' in your '--lib' option.
     
