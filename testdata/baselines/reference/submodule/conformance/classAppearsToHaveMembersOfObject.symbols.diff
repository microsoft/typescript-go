--- old.classAppearsToHaveMembersOfObject.symbols
+++ new.classAppearsToHaveMembersOfObject.symbols
@@= skipped -2, +2 lines =@@
 === classAppearsToHaveMembersOfObject.ts ===
 class C { foo: string; }
 >C : Symbol(C, Decl(classAppearsToHaveMembersOfObject.ts, 0, 0))
->foo : Symbol(C.foo, Decl(classAppearsToHaveMembersOfObject.ts, 0, 9))
+>foo : Symbol(foo, Decl(classAppearsToHaveMembersOfObject.ts, 0, 9))
 
 var c: C;
 >c : Symbol(c, Decl(classAppearsToHaveMembersOfObject.ts, 2, 3))
@@= skipped -8, +8 lines =@@
 
 var r = c.toString();
 >r : Symbol(r, Decl(classAppearsToHaveMembersOfObject.ts, 3, 3))
->c.toString : Symbol(Object.toString, Decl(lib.es5.d.ts, --, --))
+>c.toString : Symbol(toString, Decl(lib.es5.d.ts, --, --))
 >c : Symbol(c, Decl(classAppearsToHaveMembersOfObject.ts, 2, 3))
->toString : Symbol(Object.toString, Decl(lib.es5.d.ts, --, --))
+>toString : Symbol(toString, Decl(lib.es5.d.ts, --, --))
 
 var r2 = c.hasOwnProperty('');
 >r2 : Symbol(r2, Decl(classAppearsToHaveMembersOfObject.ts, 4, 3))
->c.hasOwnProperty : Symbol(Object.hasOwnProperty, Decl(lib.es5.d.ts, --, --))
+>c.hasOwnProperty : Symbol(hasOwnProperty, Decl(lib.es5.d.ts, --, --))
 >c : Symbol(c, Decl(classAppearsToHaveMembersOfObject.ts, 2, 3))
->hasOwnProperty : Symbol(Object.hasOwnProperty, Decl(lib.es5.d.ts, --, --))
+>hasOwnProperty : Symbol(hasOwnProperty, Decl(lib.es5.d.ts, --, --))
 
 var o: Object = c;
 >o : Symbol(o, Decl(classAppearsToHaveMembersOfObject.ts, 5, 3))
