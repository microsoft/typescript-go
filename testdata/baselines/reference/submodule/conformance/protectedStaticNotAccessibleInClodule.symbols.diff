--- old.protectedStaticNotAccessibleInClodule.symbols
+++ new.protectedStaticNotAccessibleInClodule.symbols
@@= skipped -6, +6 lines =@@
 >C : Symbol(C, Decl(protectedStaticNotAccessibleInClodule.ts, 0, 0), Decl(protectedStaticNotAccessibleInClodule.ts, 5, 1))
 
     public static foo: string;
->foo : Symbol(C.foo, Decl(protectedStaticNotAccessibleInClodule.ts, 2, 9))
+>foo : Symbol(foo, Decl(protectedStaticNotAccessibleInClodule.ts, 2, 9))
 
     protected static bar: string;
->bar : Symbol(C.bar, Decl(protectedStaticNotAccessibleInClodule.ts, 3, 30))
+>bar : Symbol(bar, Decl(protectedStaticNotAccessibleInClodule.ts, 3, 30))
 }
 
 module C {
@@= skipped -11, +11 lines =@@
 
     export var f = C.foo; // OK
 >f : Symbol(f, Decl(protectedStaticNotAccessibleInClodule.ts, 8, 14))
->C.foo : Symbol(C.foo, Decl(protectedStaticNotAccessibleInClodule.ts, 2, 9))
+>C.foo : Symbol(foo, Decl(protectedStaticNotAccessibleInClodule.ts, 2, 9))
 >C : Symbol(C, Decl(protectedStaticNotAccessibleInClodule.ts, 0, 0), Decl(protectedStaticNotAccessibleInClodule.ts, 5, 1))
->foo : Symbol(C.foo, Decl(protectedStaticNotAccessibleInClodule.ts, 2, 9))
+>foo : Symbol(foo, Decl(protectedStaticNotAccessibleInClodule.ts, 2, 9))
 
     export var b = C.bar; // error
 >b : Symbol(b, Decl(protectedStaticNotAccessibleInClodule.ts, 9, 14))
->C.bar : Symbol(C.bar, Decl(protectedStaticNotAccessibleInClodule.ts, 3, 30))
+>C.bar : Symbol(bar, Decl(protectedStaticNotAccessibleInClodule.ts, 3, 30))
 >C : Symbol(C, Decl(protectedStaticNotAccessibleInClodule.ts, 0, 0), Decl(protectedStaticNotAccessibleInClodule.ts, 5, 1))
->bar : Symbol(C.bar, Decl(protectedStaticNotAccessibleInClodule.ts, 3, 30))
+>bar : Symbol(bar, Decl(protectedStaticNotAccessibleInClodule.ts, 3, 30))
 }
