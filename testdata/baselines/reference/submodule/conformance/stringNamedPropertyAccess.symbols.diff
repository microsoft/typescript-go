--- old.stringNamedPropertyAccess.symbols
+++ new.stringNamedPropertyAccess.symbols
@@= skipped -4, +4 lines =@@
 >C : Symbol(C, Decl(stringNamedPropertyAccess.ts, 0, 0))
 
     "a b": number;
->"a b" : Symbol(C["a b"], Decl(stringNamedPropertyAccess.ts, 0, 9))
+>"a b" : Symbol("a b", Decl(stringNamedPropertyAccess.ts, 0, 9))
 
     static "c d": number;
->"c d" : Symbol(C["c d"], Decl(stringNamedPropertyAccess.ts, 1, 18))
+>"c d" : Symbol("c d", Decl(stringNamedPropertyAccess.ts, 1, 18))
 }
 var c: C;
 >c : Symbol(c, Decl(stringNamedPropertyAccess.ts, 4, 3))
@@= skipped -12, +12 lines =@@
 var r1 = c["a b"];
 >r1 : Symbol(r1, Decl(stringNamedPropertyAccess.ts, 5, 3))
 >c : Symbol(c, Decl(stringNamedPropertyAccess.ts, 4, 3))
->"a b" : Symbol(C["a b"], Decl(stringNamedPropertyAccess.ts, 0, 9))
+>"a b" : Symbol("a b", Decl(stringNamedPropertyAccess.ts, 0, 9))
 
 var r1b = C['c d'];
 >r1b : Symbol(r1b, Decl(stringNamedPropertyAccess.ts, 6, 3))
 >C : Symbol(C, Decl(stringNamedPropertyAccess.ts, 0, 0))
->'c d' : Symbol(C["c d"], Decl(stringNamedPropertyAccess.ts, 1, 18))
+>'c d' : Symbol("c d", Decl(stringNamedPropertyAccess.ts, 1, 18))
 
 interface I {
 >I : Symbol(I, Decl(stringNamedPropertyAccess.ts, 6, 19))
 
     "a b": number;
->"a b" : Symbol(I["a b"], Decl(stringNamedPropertyAccess.ts, 8, 13))
+>"a b" : Symbol("a b", Decl(stringNamedPropertyAccess.ts, 8, 13))
 }
 var i: I;
 >i : Symbol(i, Decl(stringNamedPropertyAccess.ts, 11, 3))
@@= skipped -20, +20 lines =@@
 var r2 = i["a b"];
 >r2 : Symbol(r2, Decl(stringNamedPropertyAccess.ts, 12, 3))
 >i : Symbol(i, Decl(stringNamedPropertyAccess.ts, 11, 3))
->"a b" : Symbol(I["a b"], Decl(stringNamedPropertyAccess.ts, 8, 13))
+>"a b" : Symbol("a b", Decl(stringNamedPropertyAccess.ts, 8, 13))
 
 var a: {
 >a : Symbol(a, Decl(stringNamedPropertyAccess.ts, 14, 3))
