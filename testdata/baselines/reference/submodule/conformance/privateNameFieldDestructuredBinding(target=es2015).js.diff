--- old.privateNameFieldDestructuredBinding(target=es2015).js
+++ new.privateNameFieldDestructuredBinding(target=es2015).js
@@= skipped -26, +26 lines =@@


 //// [privateNameFieldDestructuredBinding.js]
+var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
+    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
+    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
+    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
+};
 var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
     if (kind === "m") throw new TypeError("Private method is not writable");
     if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
@@= skipped -8, +13 lines =@@
 };
 var _A_field;
 class A {
+    otherObject = new A();
     testObject() {
         return { x: 10, y: 6 };
     }
@@= skipped -7, +8 lines =@@
         return [10, 11];
     }
     constructor() {
-        var _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;
         _A_field.set(this, 1);
-        this.otherObject = new A();
         let y;
-        (_b = this, { x: ({ set value(_m) { __classPrivateFieldSet(_b, _A_field, _m, "f"); } }).value, y } = this.testObject());
-        (_c = this, [({ set value(_m) { __classPrivateFieldSet(_c, _A_field, _m, "f"); } }).value, y] = this.testArray());
-        (_d = this, _e = this, { a: ({ set value(_m) { __classPrivateFieldSet(_d, _A_field, _m, "f"); } }).value, b: [({ set value(_m) { __classPrivateFieldSet(_e, _A_field, _m, "f"); } }).value] } = { a: 1, b: [2] });
-        _f = this, _g = this, [({ set value(_m) { __classPrivateFieldSet(_f, _A_field, _m, "f"); } }).value, [({ set value(_m) { __classPrivateFieldSet(_g, _A_field, _m, "f"); } }).value]] = [1, [2]];
-        (_h = this, _j = this, { a: ({ set value(_m) { __classPrivateFieldSet(_h, _A_field, _m, "f"); } }).value = 1, b: [({ set value(_m) { __classPrivateFieldSet(_j, _A_field, _m, "f"); } }).value = 1] } = { b: [] });
-        _k = this, [({ set value(_m) { __classPrivateFieldSet(_k, _A_field, _m, "f"); } }).value = 2] = [];
-        _l = this.otherObject, [({ set value(_m) { __classPrivateFieldSet(_l, _A_field, _m, "f"); } }).value = 2] = [];
+        ({ x: __classPrivateFieldGet(this, _A_field, "f"), y } = this.testObject());
+        ([__classPrivateFieldGet(this, _A_field, "f"), y] = this.testArray());
+        ({ a: __classPrivateFieldGet(this, _A_field, "f"), b: [__classPrivateFieldGet(this, _A_field, "f")] } = { a: 1, b: [2] });
+        [__classPrivateFieldGet(this, _A_field, "f"), [__classPrivateFieldGet(this, _A_field, "f")]] = [1, [2]];
+        ({ a: __classPrivateFieldSet(this, _A_field, 1, "f"), b: [__classPrivateFieldSet(this, _A_field, 1, "f")] } = { b: [] });
+        [__classPrivateFieldSet(this, _A_field, 2, "f")] = [];
+        [__classPrivateFieldSet(this.otherObject, _A_field, 2, "f")] = [];
     }
     static test(_a) {
-        [({ set value(_b) { __classPrivateFieldSet(_a, _A_field, _b, "f"); } }).value] = [2];
+        [__classPrivateFieldGet(_a, _A_field, "f")] = [2];
     }
 }
 _A_field = new WeakMap();