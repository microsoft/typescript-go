--- old.nodeModulesDeclarationEmitDynamicImportWithPackageExports(module=node18).types
+++ new.nodeModulesDeclarationEmitDynamicImportWithPackageExports(module=node18).types
@@= skipped -14, +14 lines =@@
 === other.ts ===
 // esm format file
 export const a = await import("package/cjs");
->a : { default: typeof import("index"); }
->await import("package/cjs") : { default: typeof import("index"); }
->import("package/cjs") : Promise<{ default: typeof import("index"); }>
+>a : typeof import("index")
+>await import("package/cjs") : typeof import("index")
+>import("package/cjs") : Promise<typeof import("index")>
 >"package/cjs" : "package/cjs"

 export const b = await import("package/mjs");
@@= skipped -18, +18 lines =@@
 >"package" : "package"

 export const f = await import("inner");
->f : { cjsMain: true; default: typeof import("node_modules/inner/index"); }
->await import("inner") : { cjsMain: true; default: typeof import("node_modules/inner/index"); }
->import("inner") : Promise<{ cjsMain: true; default: typeof import("node_modules/inner/index"); }>
+>f : typeof import("node_modules/inner/index")
+>await import("inner") : typeof import("node_modules/inner/index")
+>import("inner") : Promise<typeof import("node_modules/inner/index")>
 >"inner" : "inner"

 === other2.ts ===
 // esm format file
 export const d = await import("inner/cjs");
->d : { cjsNonmain: true; default: typeof import("node_modules/inner/index"); }
->await import("inner/cjs") : { cjsNonmain: true; default: typeof import("node_modules/inner/index"); }
->import("inner/cjs") : Promise<{ cjsNonmain: true; default: typeof import("node_modules/inner/index"); }>
+>d : typeof import("node_modules/inner/index")
+>await import("inner/cjs") : typeof import("node_modules/inner/index")
+>import("inner/cjs") : Promise<typeof import("node_modules/inner/index")>
 >"inner/cjs" : "inner/cjs"

 export const e = await import("inner/mjs");
@@= skipped -22, +22 lines =@@
 === other.mts ===
 // esm format file
 export const a = await import("package/cjs");
->a : { default: typeof import("index"); }
->await import("package/cjs") : { default: typeof import("index"); }
->import("package/cjs") : Promise<{ default: typeof import("index"); }>
+>a : typeof import("index")
+>await import("package/cjs") : typeof import("index")
+>import("package/cjs") : Promise<typeof import("index")>
 >"package/cjs" : "package/cjs"

 export const b = await import("package/mjs");
@@= skipped -18, +18 lines =@@
 >"package" : "package"

 export const f = await import("inner");
->f : { cjsMain: true; default: typeof import("node_modules/inner/index"); }
->await import("inner") : { cjsMain: true; default: typeof import("node_modules/inner/index"); }
->import("inner") : Promise<{ cjsMain: true; default: typeof import("node_modules/inner/index"); }>
+>f : typeof import("node_modules/inner/index")
+>await import("inner") : typeof import("node_modules/inner/index")
+>import("inner") : Promise<typeof import("node_modules/inner/index")>
 >"inner" : "inner"

 === other2.mts ===
 // esm format file
 export const d = await import("inner/cjs");
->d : { cjsNonmain: true; default: typeof import("node_modules/inner/index"); }
->await import("inner/cjs") : { cjsNonmain: true; default: typeof import("node_modules/inner/index"); }
->import("inner/cjs") : Promise<{ cjsNonmain: true; default: typeof import("node_modules/inner/index"); }>
+>d : typeof import("node_modules/inner/index")
+>await import("inner/cjs") : typeof import("node_modules/inner/index")
+>import("inner/cjs") : Promise<typeof import("node_modules/inner/index")>
 >"inner/cjs" : "inner/cjs"

 export const e = await import("inner/mjs");
@@= skipped -22, +22 lines =@@
 === other.cts ===
 // cjs format file, no TLA
 export const a = import("package/cjs");
->a : Promise<{ default: typeof import("index"); }>
->import("package/cjs") : Promise<{ default: typeof import("index"); }>
+>a : Promise<typeof import("index")>
+>import("package/cjs") : Promise<typeof import("index")>
 >"package/cjs" : "package/cjs"

 export const b = import("package/mjs");
@@= skipped -15, +15 lines =@@
 >"package" : "package"

 export const f = import("inner");
->f : Promise<{ cjsMain: true; default: typeof import("node_modules/inner/index"); }>
->import("inner") : Promise<{ cjsMain: true; default: typeof import("node_modules/inner/index"); }>
+>f : Promise<typeof import("node_modules/inner/index")>
+>import("inner") : Promise<typeof import("node_modules/inner/index")>
 >"inner" : "inner"

 === other2.cts ===
 // cjs format file, no TLA
 export const d = import("inner/cjs");
->d : Promise<{ cjsNonmain: true; default: typeof import("node_modules/inner/index"); }>
->import("inner/cjs") : Promise<{ cjsNonmain: true; default: typeof import("node_modules/inner/index"); }>
+>d : Promise<typeof import("node_modules/inner/index")>
+>import("inner/cjs") : Promise<typeof import("node_modules/inner/index")>
 >"inner/cjs" : "inner/cjs"

 export const e = import("inner/mjs");