--- old.jsDeclarationsFunctions.symbols
+++ new.jsDeclarationsFunctions.symbols
@@= skipped -4, +4 lines =@@
 >a : Symbol(a, Decl(index.js, 0, 0))
 
 export function b() {}
->b : Symbol(b, Decl(index.js, 0, 22), Decl(index.js, 2, 22))
+>b : Symbol(b, Decl(index.js, 0, 22))
 
 b.cat = "cat";
->b.cat : Symbol(b.cat, Decl(index.js, 2, 22))
->b : Symbol(b, Decl(index.js, 0, 22), Decl(index.js, 2, 22))
->cat : Symbol(b.cat, Decl(index.js, 2, 22))
+>b.cat : Symbol(cat, Decl(index.js, 2, 22))
+>b : Symbol(b, Decl(index.js, 0, 22))
+>cat : Symbol(cat, Decl(index.js, 2, 22))
 
 export function c() {}
->c : Symbol(c, Decl(index.js, 3, 14), Decl(index.js, 5, 22))
+>c : Symbol(c, Decl(index.js, 3, 14))
 
 c.Cls = class {}
->c.Cls : Symbol(c.Cls, Decl(index.js, 5, 22))
->c : Symbol(c, Decl(index.js, 3, 14), Decl(index.js, 5, 22))
->Cls : Symbol(c.Cls, Decl(index.js, 5, 22))
+>c.Cls : Symbol(Cls, Decl(index.js, 5, 22))
+>c : Symbol(c, Decl(index.js, 3, 14))
+>Cls : Symbol(Cls, Decl(index.js, 5, 22))
 
 /**
  * @param {number} a
@@= skipped -41, +41 lines =@@
  * @param {T} a
  */
 export function f(a) {
->f : Symbol(f, Decl(index.js, 21, 58), Decl(index.js, 29, 1))
+>f : Symbol(f, Decl(index.js, 21, 58))
 >a : Symbol(a, Decl(index.js, 27, 18))
 
     return a;
 >a : Symbol(a, Decl(index.js, 27, 18))
 }
 f.self = f;
->f.self : Symbol(f.self, Decl(index.js, 29, 1))
->f : Symbol(f, Decl(index.js, 21, 58), Decl(index.js, 29, 1))
->self : Symbol(f.self, Decl(index.js, 29, 1))
->f : Symbol(f, Decl(index.js, 21, 58), Decl(index.js, 29, 1))
+>f.self : Symbol(self, Decl(index.js, 29, 1))
+>f : Symbol(f, Decl(index.js, 21, 58))
+>self : Symbol(self, Decl(index.js, 29, 1))
+>f : Symbol(f, Decl(index.js, 21, 58))
 
 /**
  * @param {{x: string}} a
@@= skipped -22, +22 lines =@@
 >b : Symbol(b, Decl(index.js, 36, 13))
 
     return a.x && b.y();
->a.x : Symbol(x, Decl(index.js, 33, 12))
 >a : Symbol(a, Decl(index.js, 36, 11))
->x : Symbol(x, Decl(index.js, 33, 12))
->b.y : Symbol(y, Decl(index.js, 34, 12))
 >b : Symbol(b, Decl(index.js, 36, 13))
->y : Symbol(y, Decl(index.js, 34, 12))
 }
 
 export { g };
@@= skipped -21, +17 lines =@@
 >b : Symbol(b, Decl(index.js, 46, 14))
 
     return a.x && b.y();
->a.x : Symbol(x, Decl(index.js, 43, 12))
 >a : Symbol(a, Decl(index.js, 46, 12))
->x : Symbol(x, Decl(index.js, 43, 12))
->b.y : Symbol(y, Decl(index.js, 44, 12))
 >b : Symbol(b, Decl(index.js, 46, 14))
->y : Symbol(y, Decl(index.js, 44, 12))
 }
 
 export { hh as h };
