--- old.taggedTemplateStringsWithTypedTagsES6.errors.txt
+++ new.taggedTemplateStringsWithTypedTagsES6.errors.txt
@@= skipped -0, +-1 lines =@@
-<no content>
@@= skipped --1, +1 lines =@@
+error TS2318: Cannot find global type 'Array'.
+error TS2318: Cannot find global type 'Function'.
+error TS2318: Cannot find global type 'IArguments'.
+error TS2318: Cannot find global type 'RegExp'.
+error TS2318: Cannot find global type 'String'.
+error TS2318: Cannot find global type 'TemplateStringsArray'.
+error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
+error TS2552: Cannot find name 'Number'. Did you mean 'number'?
+error TS2552: Cannot find name 'Object'. Did you mean 'object'?
+taggedTemplateStringsWithTypedTagsES6.ts(2,19): error TS2304: Cannot find name 'TemplateStringsArray'.
+
+
+!!! error TS2318: Cannot find global type 'Array'.
+!!! error TS2318: Cannot find global type 'Function'.
+!!! error TS2318: Cannot find global type 'IArguments'.
+!!! error TS2318: Cannot find global type 'RegExp'.
+!!! error TS2318: Cannot find global type 'String'.
+!!! error TS2318: Cannot find global type 'TemplateStringsArray'.
+!!! error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
+!!! error TS2552: Cannot find name 'Number'. Did you mean 'number'?
+!!! error TS2552: Cannot find name 'Object'. Did you mean 'object'?
+==== taggedTemplateStringsWithTypedTagsES6.ts (1 errors) ====
+    interface I {
+        (stringParts: TemplateStringsArray, ...rest: number[]): I;
+                      ~~~~~~~~~~~~~~~~~~~~
+!!! error TS2304: Cannot find name 'TemplateStringsArray'.
+        g: I;
+        h: I;
+        member: I;
+        thisIsNotATag(x: string): void
+        [x: number]: I;
+    }
+    
+    var f: I;
+    
+    f `abc`
+    
+    f `abc${1}def${2}ghi`;
+    
+    f `abc`.member
+    
+    f `abc${1}def${2}ghi`.member;
+    
+    f `abc`["member"];
+    
+    f `abc${1}def${2}ghi`["member"];
+    
+    f `abc`[0].member `abc${1}def${2}ghi`;
+    
+    f `abc${1}def${2}ghi`["member"].member `abc${1}def${2}ghi`;
+    
+    f.thisIsNotATag(`abc`);
+    
+    f.thisIsNotATag(`abc${1}def${2}ghi`);
+    
