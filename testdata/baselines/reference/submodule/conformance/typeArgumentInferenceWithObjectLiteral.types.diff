--- old.typeArgumentInferenceWithObjectLiteral.types
+++ new.typeArgumentInferenceWithObjectLiteral.types
@@= skipped -1, +1 lines =@@
 
 === typeArgumentInferenceWithObjectLiteral.ts ===
 interface Computed<T> {
+>Computed : Computed<T>
+>T : T
+
     read(): T;
 >read : () => T
 
@@= skipped -10, +13 lines =@@
 
 function foo<T>(x: Computed<T>) { }
 >foo : <T>(x: Computed<T>) => void
+>T : T
 >x : Computed<T>
 
 var s: string;
@@= skipped -57, +58 lines =@@
 
 declare function f1<T, U>(a: { w: (x: T) => U; r: () => T; }, b: T): U;
 >f1 : <T, U>(a: { w: (x: T) => U; r: () => T; }, b: T) => U
+>T : T
+>U : U
 >a : { w: (x: T) => U; r: () => T; }
 >w : (x: T) => U
 >x : T
