//// [tests/cases/conformance/classes/members/instanceAndStaticMembers/typeOfThisInStaticMembers10.ts] ////

=== typeOfThisInStaticMembers10.ts ===
declare const foo: any;
>foo : Symbol(foo, Decl(typeOfThisInStaticMembers10.ts, 0, 13))

@foo
>foo : Symbol(foo, Decl(typeOfThisInStaticMembers10.ts, 0, 13))

class C {
>C : Symbol(C, Decl(typeOfThisInStaticMembers10.ts, 0, 23))

    static a = 1;
>a : Symbol(a, Decl(typeOfThisInStaticMembers10.ts, 3, 9))

    static b = this.a + 1;
>b : Symbol(b, Decl(typeOfThisInStaticMembers10.ts, 4, 17))
>this.a : Symbol(a, Decl(typeOfThisInStaticMembers10.ts, 3, 9))
>this : Symbol(C, Decl(typeOfThisInStaticMembers10.ts, 0, 23))
>a : Symbol(a, Decl(typeOfThisInStaticMembers10.ts, 3, 9))
}

@foo
>foo : Symbol(foo, Decl(typeOfThisInStaticMembers10.ts, 0, 13))

class D extends C {
>D : Symbol(D, Decl(typeOfThisInStaticMembers10.ts, 6, 1))
>C : Symbol(C, Decl(typeOfThisInStaticMembers10.ts, 0, 23))

    static c = 2;
>c : Symbol(c, Decl(typeOfThisInStaticMembers10.ts, 9, 19))

    static d = this.c + 1;
>d : Symbol(d, Decl(typeOfThisInStaticMembers10.ts, 10, 17))
>this.c : Symbol(c, Decl(typeOfThisInStaticMembers10.ts, 9, 19))
>this : Symbol(D, Decl(typeOfThisInStaticMembers10.ts, 6, 1))
>c : Symbol(c, Decl(typeOfThisInStaticMembers10.ts, 9, 19))

    static e = super.a + this.c + 1;
>e : Symbol(e, Decl(typeOfThisInStaticMembers10.ts, 11, 26))
>super.a : Symbol(a, Decl(typeOfThisInStaticMembers10.ts, 3, 9))
>super : Symbol(C, Decl(typeOfThisInStaticMembers10.ts, 0, 23))
>a : Symbol(a, Decl(typeOfThisInStaticMembers10.ts, 3, 9))
>this.c : Symbol(c, Decl(typeOfThisInStaticMembers10.ts, 9, 19))
>this : Symbol(D, Decl(typeOfThisInStaticMembers10.ts, 6, 1))
>c : Symbol(c, Decl(typeOfThisInStaticMembers10.ts, 9, 19))

    static f = () => this.c + 1;
>f : Symbol(f, Decl(typeOfThisInStaticMembers10.ts, 12, 36))
>this.c : Symbol(c, Decl(typeOfThisInStaticMembers10.ts, 9, 19))
>this : Symbol(D, Decl(typeOfThisInStaticMembers10.ts, 6, 1))
>c : Symbol(c, Decl(typeOfThisInStaticMembers10.ts, 9, 19))

    static ff = function () { this.c + 1 }
>ff : Symbol(ff, Decl(typeOfThisInStaticMembers10.ts, 13, 32))

    static foo () {
>foo : Symbol(foo, Decl(typeOfThisInStaticMembers10.ts, 14, 42))

        return this.c + 1;
>this.c : Symbol(c, Decl(typeOfThisInStaticMembers10.ts, 9, 19))
>this : Symbol(D, Decl(typeOfThisInStaticMembers10.ts, 6, 1))
>c : Symbol(c, Decl(typeOfThisInStaticMembers10.ts, 9, 19))
    }
    static get fa () {
>fa : Symbol(fa, Decl(typeOfThisInStaticMembers10.ts, 17, 5), Decl(typeOfThisInStaticMembers10.ts, 20, 5))

        return this.c + 1;
>this.c : Symbol(c, Decl(typeOfThisInStaticMembers10.ts, 9, 19))
>this : Symbol(D, Decl(typeOfThisInStaticMembers10.ts, 6, 1))
>c : Symbol(c, Decl(typeOfThisInStaticMembers10.ts, 9, 19))
    }
    static set fa (v: number) {
>fa : Symbol(fa, Decl(typeOfThisInStaticMembers10.ts, 17, 5), Decl(typeOfThisInStaticMembers10.ts, 20, 5))
>v : Symbol(v, Decl(typeOfThisInStaticMembers10.ts, 21, 19))

        this.c = v + 1;
>this.c : Symbol(c, Decl(typeOfThisInStaticMembers10.ts, 9, 19))
>this : Symbol(D, Decl(typeOfThisInStaticMembers10.ts, 6, 1))
>c : Symbol(c, Decl(typeOfThisInStaticMembers10.ts, 9, 19))
>v : Symbol(v, Decl(typeOfThisInStaticMembers10.ts, 21, 19))
    }
}

class CC {
>CC : Symbol(CC, Decl(typeOfThisInStaticMembers10.ts, 24, 1))

    static a = 1;
>a : Symbol(a, Decl(typeOfThisInStaticMembers10.ts, 26, 10))

    static b = this.a + 1;
>b : Symbol(b, Decl(typeOfThisInStaticMembers10.ts, 27, 17))
>this.a : Symbol(a, Decl(typeOfThisInStaticMembers10.ts, 26, 10))
>this : Symbol(CC, Decl(typeOfThisInStaticMembers10.ts, 24, 1))
>a : Symbol(a, Decl(typeOfThisInStaticMembers10.ts, 26, 10))
}

class DD extends CC {
>DD : Symbol(DD, Decl(typeOfThisInStaticMembers10.ts, 29, 1))
>CC : Symbol(CC, Decl(typeOfThisInStaticMembers10.ts, 24, 1))

    static c = 2;
>c : Symbol(c, Decl(typeOfThisInStaticMembers10.ts, 31, 21))

    static d = this.c + 1;
>d : Symbol(d, Decl(typeOfThisInStaticMembers10.ts, 32, 17))
>this.c : Symbol(c, Decl(typeOfThisInStaticMembers10.ts, 31, 21))
>this : Symbol(DD, Decl(typeOfThisInStaticMembers10.ts, 29, 1))
>c : Symbol(c, Decl(typeOfThisInStaticMembers10.ts, 31, 21))

    static e = super.a + this.c + 1;
>e : Symbol(e, Decl(typeOfThisInStaticMembers10.ts, 33, 26))
>super.a : Symbol(a, Decl(typeOfThisInStaticMembers10.ts, 26, 10))
>super : Symbol(CC, Decl(typeOfThisInStaticMembers10.ts, 24, 1))
>a : Symbol(a, Decl(typeOfThisInStaticMembers10.ts, 26, 10))
>this.c : Symbol(c, Decl(typeOfThisInStaticMembers10.ts, 31, 21))
>this : Symbol(DD, Decl(typeOfThisInStaticMembers10.ts, 29, 1))
>c : Symbol(c, Decl(typeOfThisInStaticMembers10.ts, 31, 21))

    static f = () => this.c + 1;
>f : Symbol(f, Decl(typeOfThisInStaticMembers10.ts, 34, 36))
>this.c : Symbol(c, Decl(typeOfThisInStaticMembers10.ts, 31, 21))
>this : Symbol(DD, Decl(typeOfThisInStaticMembers10.ts, 29, 1))
>c : Symbol(c, Decl(typeOfThisInStaticMembers10.ts, 31, 21))

    static ff = function () { this.c + 1 }
>ff : Symbol(ff, Decl(typeOfThisInStaticMembers10.ts, 35, 32))

    static foo () {
>foo : Symbol(foo, Decl(typeOfThisInStaticMembers10.ts, 36, 42))

        return this.c + 1;
>this.c : Symbol(c, Decl(typeOfThisInStaticMembers10.ts, 31, 21))
>this : Symbol(DD, Decl(typeOfThisInStaticMembers10.ts, 29, 1))
>c : Symbol(c, Decl(typeOfThisInStaticMembers10.ts, 31, 21))
    }
    static get fa () {
>fa : Symbol(fa, Decl(typeOfThisInStaticMembers10.ts, 39, 5), Decl(typeOfThisInStaticMembers10.ts, 42, 5))

        return this.c + 1;
>this.c : Symbol(c, Decl(typeOfThisInStaticMembers10.ts, 31, 21))
>this : Symbol(DD, Decl(typeOfThisInStaticMembers10.ts, 29, 1))
>c : Symbol(c, Decl(typeOfThisInStaticMembers10.ts, 31, 21))
    }
    static set fa (v: number) {
>fa : Symbol(fa, Decl(typeOfThisInStaticMembers10.ts, 39, 5), Decl(typeOfThisInStaticMembers10.ts, 42, 5))
>v : Symbol(v, Decl(typeOfThisInStaticMembers10.ts, 43, 19))

        this.c = v + 1;
>this.c : Symbol(c, Decl(typeOfThisInStaticMembers10.ts, 31, 21))
>this : Symbol(DD, Decl(typeOfThisInStaticMembers10.ts, 29, 1))
>c : Symbol(c, Decl(typeOfThisInStaticMembers10.ts, 31, 21))
>v : Symbol(v, Decl(typeOfThisInStaticMembers10.ts, 43, 19))
    }
}

