--- old.objectTypeWithRecursiveWrappedPropertyCheckedNominally.symbols
+++ new.objectTypeWithRecursiveWrappedPropertyCheckedNominally.symbols
@@= skipped -7, +7 lines =@@
 >T : Symbol(T, Decl(objectTypeWithRecursiveWrappedPropertyCheckedNominally.ts, 2, 11))
 
     data: T;
->data : Symbol(List.data, Decl(objectTypeWithRecursiveWrappedPropertyCheckedNominally.ts, 2, 15))
+>data : Symbol(data, Decl(objectTypeWithRecursiveWrappedPropertyCheckedNominally.ts, 2, 15))
 >T : Symbol(T, Decl(objectTypeWithRecursiveWrappedPropertyCheckedNominally.ts, 2, 11))
 
     next: List<List<T>>;
->next : Symbol(List.next, Decl(objectTypeWithRecursiveWrappedPropertyCheckedNominally.ts, 3, 12))
+>next : Symbol(next, Decl(objectTypeWithRecursiveWrappedPropertyCheckedNominally.ts, 3, 12))
 >List : Symbol(List, Decl(objectTypeWithRecursiveWrappedPropertyCheckedNominally.ts, 0, 0))
 >List : Symbol(List, Decl(objectTypeWithRecursiveWrappedPropertyCheckedNominally.ts, 0, 0))
 >T : Symbol(T, Decl(objectTypeWithRecursiveWrappedPropertyCheckedNominally.ts, 2, 11))
@@= skipped -15, +15 lines =@@
 >T : Symbol(T, Decl(objectTypeWithRecursiveWrappedPropertyCheckedNominally.ts, 7, 13))
 
     data: T;
->data : Symbol(MyList.data, Decl(objectTypeWithRecursiveWrappedPropertyCheckedNominally.ts, 7, 17))
+>data : Symbol(data, Decl(objectTypeWithRecursiveWrappedPropertyCheckedNominally.ts, 7, 17))
 >T : Symbol(T, Decl(objectTypeWithRecursiveWrappedPropertyCheckedNominally.ts, 7, 13))
 
     next: MyList<MyList<T>>;
->next : Symbol(MyList.next, Decl(objectTypeWithRecursiveWrappedPropertyCheckedNominally.ts, 8, 12))
+>next : Symbol(next, Decl(objectTypeWithRecursiveWrappedPropertyCheckedNominally.ts, 8, 12))
 >MyList : Symbol(MyList, Decl(objectTypeWithRecursiveWrappedPropertyCheckedNominally.ts, 5, 1))
 >MyList : Symbol(MyList, Decl(objectTypeWithRecursiveWrappedPropertyCheckedNominally.ts, 5, 1))
 >T : Symbol(T, Decl(objectTypeWithRecursiveWrappedPropertyCheckedNominally.ts, 7, 13))
