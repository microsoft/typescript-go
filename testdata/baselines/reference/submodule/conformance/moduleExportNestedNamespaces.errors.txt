mod.js(1,1): error TS2580: Cannot find name 'module'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.
mod.js(2,1): error TS2580: Cannot find name 'module'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.
mod.js(5,1): error TS2580: Cannot find name 'module'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.
mod.js(7,14): error TS2339: Property 'p' does not exist on type 'Classic'.
use.js(3,15): error TS2339: Property 'n' does not exist on type 'typeof import("mod")'.
use.js(5,21): error TS2339: Property 'Classic' does not exist on type 'typeof import("mod")'.


==== mod.js (4 errors) ====
    module.exports.n = {};
    ~~~~~~
!!! error TS2580: Cannot find name 'module'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.
    module.exports.n.K = function C() {
    ~~~~~~
!!! error TS2580: Cannot find name 'module'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.
        this.x = 10;
    }
    module.exports.Classic = class {
    ~~~~~~
!!! error TS2580: Cannot find name 'module'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.
        constructor() {
            this.p = 1
                 ~
!!! error TS2339: Property 'p' does not exist on type 'Classic'.
        }
    }
    
==== use.js (2 errors) ====
    import * as s from './mod'
    
    var k = new s.n.K()
                  ~
!!! error TS2339: Property 'n' does not exist on type 'typeof import("mod")'.
    k.x
    var classic = new s.Classic()
                        ~~~~~~~
!!! error TS2339: Property 'Classic' does not exist on type 'typeof import("mod")'.
    
    
    /** @param {s.n.K} c
        @param {s.Classic} classic */
    function f(c, classic) {
        c.x
        classic.p
    }
    