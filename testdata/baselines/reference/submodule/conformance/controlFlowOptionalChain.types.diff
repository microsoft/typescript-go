--- old.controlFlowOptionalChain.types
+++ new.controlFlowOptionalChain.types
@@= skipped -27, +27 lines =@@

 a.toString();
 >a.toString() : string
->a.toString : (radix?: number) => string
+>a.toString : (radix?: number | undefined) => string
 >a : number
->toString : (radix?: number) => string
+>toString : (radix?: number | undefined) => string

 let b: number;
 >b : number
@@= skipped -18, +18 lines =@@

 b.toString();
 >b.toString() : string
->b.toString : (radix?: number) => string
+>b.toString : (radix?: number | undefined) => string
 >b : number
->toString : (radix?: number) => string
+>toString : (radix?: number | undefined) => string

 let c: number;
 >c : number
@@= skipped -16, +16 lines =@@

 c.toString();
 >c.toString() : string
->c.toString : (radix?: number) => string
+>c.toString : (radix?: number | undefined) => string
 >c : number
->toString : (radix?: number) => string
+>toString : (radix?: number | undefined) => string

 let d: number;
 >d : number
@@= skipped -18, +18 lines =@@

 d.toString();
 >d.toString() : string
->d.toString : (radix?: number) => string
+>d.toString : (radix?: number | undefined) => string
 >d : number
->toString : (radix?: number) => string
+>toString : (radix?: number | undefined) => string

 // type predicates
 declare const f: undefined | ((x: any) => x is number);
@@= skipped -171, +171 lines =@@
 >x : 1 | 2

 declare const o4: { x?: { y: boolean } };
->o4 : { x?: { y: boolean; }; }
+>o4 : { x?: { y: boolean; } | undefined; }
 >x : { y: boolean; } | undefined
 >y : boolean

 if (o4.x?.y) {
 >o4.x?.y : boolean | undefined
 >o4.x : { y: boolean; } | undefined
->o4 : { x?: { y: boolean; }; }
+>o4 : { x?: { y: boolean; } | undefined; }
 >x : { y: boolean; } | undefined
 >y : boolean | undefined

     o4.x; // { y: boolean }
 >o4.x : { y: boolean; }
->o4 : { x?: { y: boolean; }; }
+>o4 : { x?: { y: boolean; } | undefined; }
 >x : { y: boolean; }

     o4.x.y; // true
 >o4.x.y : true
 >o4.x : { y: boolean; }
->o4 : { x?: { y: boolean; }; }
+>o4 : { x?: { y: boolean; } | undefined; }
 >x : { y: boolean; }
 >y : true

     o4.x?.y; // true
 >o4.x?.y : true
 >o4.x : { y: boolean; }
->o4 : { x?: { y: boolean; }; }
+>o4 : { x?: { y: boolean; } | undefined; }
 >x : { y: boolean; }
 >y : true
 }
 else {
     o4.x;
 >o4.x : { y: boolean; } | undefined
->o4 : { x?: { y: boolean; }; }
+>o4 : { x?: { y: boolean; } | undefined; }
 >x : { y: boolean; } | undefined

     o4.x?.y;
 >o4.x?.y : boolean | undefined
 >o4.x : { y: boolean; } | undefined
->o4 : { x?: { y: boolean; }; }
+>o4 : { x?: { y: boolean; } | undefined; }
 >x : { y: boolean; } | undefined
 >y : boolean | undefined

     o4.x.y;
 >o4.x.y : boolean
 >o4.x : { y: boolean; } | undefined
->o4 : { x?: { y: boolean; }; }
+>o4 : { x?: { y: boolean; } | undefined; }
 >x : { y: boolean; } | undefined
 >y : boolean
 }
 o4.x;
 >o4.x : { y: boolean; } | undefined
->o4 : { x?: { y: boolean; }; }
+>o4 : { x?: { y: boolean; } | undefined; }
 >x : { y: boolean; } | undefined

 o4.x?.y;
 >o4.x?.y : boolean | undefined
 >o4.x : { y: boolean; } | undefined
->o4 : { x?: { y: boolean; }; }
+>o4 : { x?: { y: boolean; } | undefined; }
 >x : { y: boolean; } | undefined
 >y : boolean | undefined

 o4.x.y;
 >o4.x.y : boolean
 >o4.x : { y: boolean; } | undefined
->o4 : { x?: { y: boolean; }; }
+>o4 : { x?: { y: boolean; } | undefined; }
 >x : { y: boolean; } | undefined
 >y : boolean

 declare const o5: { x?: { y: { z?: { w: boolean } } } };
->o5 : { x?: { y: { z?: { w: boolean; }; }; }; }
->x : { y: { z?: { w: boolean; }; }; } | undefined
->y : { z?: { w: boolean; }; }
+>o5 : { x?: { y: { z?: { w: boolean; } | undefined; }; } | undefined; }
+>x : { y: { z?: { w: boolean; } | undefined; }; } | undefined
+>y : { z?: { w: boolean; } | undefined; }
 >z : { w: boolean; } | undefined
 >w : boolean

 if (o5.x?.y.z?.w) {
 >o5.x?.y.z?.w : boolean | undefined
 >o5.x?.y.z : { w: boolean; } | undefined
->o5.x?.y : { z?: { w: boolean; }; } | undefined
->o5.x : { y: { z?: { w: boolean; }; }; } | undefined
->o5 : { x?: { y: { z?: { w: boolean; }; }; }; }
->x : { y: { z?: { w: boolean; }; }; } | undefined
->y : { z?: { w: boolean; }; } | undefined
+>o5.x?.y : { z?: { w: boolean; } | undefined; } | undefined
+>o5.x : { y: { z?: { w: boolean; } | undefined; }; } | undefined
+>o5 : { x?: { y: { z?: { w: boolean; } | undefined; }; } | undefined; }
+>x : { y: { z?: { w: boolean; } | undefined; }; } | undefined
+>y : { z?: { w: boolean; } | undefined; } | undefined
 >z : { w: boolean; } | undefined
 >w : boolean | undefined

     o5.x;
->o5.x : { y: { z?: { w: boolean; }; }; }
->o5 : { x?: { y: { z?: { w: boolean; }; }; }; }
->x : { y: { z?: { w: boolean; }; }; }
+>o5.x : { y: { z?: { w: boolean; } | undefined; }; }
+>o5 : { x?: { y: { z?: { w: boolean; } | undefined; }; } | undefined; }
+>x : { y: { z?: { w: boolean; } | undefined; }; }

     o5.x.y;
->o5.x.y : { z?: { w: boolean; }; }
->o5.x : { y: { z?: { w: boolean; }; }; }
->o5 : { x?: { y: { z?: { w: boolean; }; }; }; }
->x : { y: { z?: { w: boolean; }; }; }
->y : { z?: { w: boolean; }; }
+>o5.x.y : { z?: { w: boolean; } | undefined; }
+>o5.x : { y: { z?: { w: boolean; } | undefined; }; }
+>o5 : { x?: { y: { z?: { w: boolean; } | undefined; }; } | undefined; }
+>x : { y: { z?: { w: boolean; } | undefined; }; }
+>y : { z?: { w: boolean; } | undefined; }

     o5.x.y.z;
 >o5.x.y.z : { w: boolean; }
->o5.x.y : { z?: { w: boolean; }; }
->o5.x : { y: { z?: { w: boolean; }; }; }
->o5 : { x?: { y: { z?: { w: boolean; }; }; }; }
->x : { y: { z?: { w: boolean; }; }; }
->y : { z?: { w: boolean; }; }
+>o5.x.y : { z?: { w: boolean; } | undefined; }
+>o5.x : { y: { z?: { w: boolean; } | undefined; }; }
+>o5 : { x?: { y: { z?: { w: boolean; } | undefined; }; } | undefined; }
+>x : { y: { z?: { w: boolean; } | undefined; }; }
+>y : { z?: { w: boolean; } | undefined; }
 >z : { w: boolean; }

     o5.x.y.z.w; // true
 >o5.x.y.z.w : true
 >o5.x.y.z : { w: boolean; }
->o5.x.y : { z?: { w: boolean; }; }
->o5.x : { y: { z?: { w: boolean; }; }; }
->o5 : { x?: { y: { z?: { w: boolean; }; }; }; }
->x : { y: { z?: { w: boolean; }; }; }
->y : { z?: { w: boolean; }; }
+>o5.x.y : { z?: { w: boolean; } | undefined; }
+>o5.x : { y: { z?: { w: boolean; } | undefined; }; }
+>o5 : { x?: { y: { z?: { w: boolean; } | undefined; }; } | undefined; }
+>x : { y: { z?: { w: boolean; } | undefined; }; }
+>y : { z?: { w: boolean; } | undefined; }
 >z : { w: boolean; }
 >w : true

     o5.x.y.z?.w; // true
 >o5.x.y.z?.w : true
 >o5.x.y.z : { w: boolean; }
->o5.x.y : { z?: { w: boolean; }; }
->o5.x : { y: { z?: { w: boolean; }; }; }
->o5 : { x?: { y: { z?: { w: boolean; }; }; }; }
->x : { y: { z?: { w: boolean; }; }; }
->y : { z?: { w: boolean; }; }
+>o5.x.y : { z?: { w: boolean; } | undefined; }
+>o5.x : { y: { z?: { w: boolean; } | undefined; }; }
+>o5 : { x?: { y: { z?: { w: boolean; } | undefined; }; } | undefined; }
+>x : { y: { z?: { w: boolean; } | undefined; }; }
+>y : { z?: { w: boolean; } | undefined; }
 >z : { w: boolean; }
 >w : true

     o5.x?.y.z.w; // true
 >o5.x?.y.z.w : true
 >o5.x?.y.z : { w: boolean; }
->o5.x?.y : { z?: { w: boolean; }; }
->o5.x : { y: { z?: { w: boolean; }; }; }
->o5 : { x?: { y: { z?: { w: boolean; }; }; }; }
->x : { y: { z?: { w: boolean; }; }; }
->y : { z?: { w: boolean; }; }
+>o5.x?.y : { z?: { w: boolean; } | undefined; }
+>o5.x : { y: { z?: { w: boolean; } | undefined; }; }
+>o5 : { x?: { y: { z?: { w: boolean; } | undefined; }; } | undefined; }
+>x : { y: { z?: { w: boolean; } | undefined; }; }
+>y : { z?: { w: boolean; } | undefined; }
 >z : { w: boolean; }
 >w : true

     o5.x?.y.z?.w; // true
 >o5.x?.y.z?.w : true
 >o5.x?.y.z : { w: boolean; }
->o5.x?.y : { z?: { w: boolean; }; }
->o5.x : { y: { z?: { w: boolean; }; }; }
->o5 : { x?: { y: { z?: { w: boolean; }; }; }; }
->x : { y: { z?: { w: boolean; }; }; }
->y : { z?: { w: boolean; }; }
+>o5.x?.y : { z?: { w: boolean; } | undefined; }
+>o5.x : { y: { z?: { w: boolean; } | undefined; }; }
+>o5 : { x?: { y: { z?: { w: boolean; } | undefined; }; } | undefined; }
+>x : { y: { z?: { w: boolean; } | undefined; }; }
+>y : { z?: { w: boolean; } | undefined; }
 >z : { w: boolean; }
 >w : true
 }
 else {
     o5.x;
->o5.x : { y: { z?: { w: boolean; }; }; } | undefined
->o5 : { x?: { y: { z?: { w: boolean; }; }; }; }
->x : { y: { z?: { w: boolean; }; }; } | undefined
+>o5.x : { y: { z?: { w: boolean; } | undefined; }; } | undefined
+>o5 : { x?: { y: { z?: { w: boolean; } | undefined; }; } | undefined; }
+>x : { y: { z?: { w: boolean; } | undefined; }; } | undefined

     o5.x?.y;
->o5.x?.y : { z?: { w: boolean; }; } | undefined
->o5.x : { y: { z?: { w: boolean; }; }; } | undefined
->o5 : { x?: { y: { z?: { w: boolean; }; }; }; }
->x : { y: { z?: { w: boolean; }; }; } | undefined
->y : { z?: { w: boolean; }; } | undefined
+>o5.x?.y : { z?: { w: boolean; } | undefined; } | undefined
+>o5.x : { y: { z?: { w: boolean; } | undefined; }; } | undefined
+>o5 : { x?: { y: { z?: { w: boolean; } | undefined; }; } | undefined; }
+>x : { y: { z?: { w: boolean; } | undefined; }; } | undefined
+>y : { z?: { w: boolean; } | undefined; } | undefined

     o5.x?.y.z;
 >o5.x?.y.z : { w: boolean; } | undefined
->o5.x?.y : { z?: { w: boolean; }; } | undefined
->o5.x : { y: { z?: { w: boolean; }; }; } | undefined
->o5 : { x?: { y: { z?: { w: boolean; }; }; }; }
->x : { y: { z?: { w: boolean; }; }; } | undefined
->y : { z?: { w: boolean; }; } | undefined
+>o5.x?.y : { z?: { w: boolean; } | undefined; } | undefined
+>o5.x : { y: { z?: { w: boolean; } | undefined; }; } | undefined
+>o5 : { x?: { y: { z?: { w: boolean; } | undefined; }; } | undefined; }
+>x : { y: { z?: { w: boolean; } | undefined; }; } | undefined
+>y : { z?: { w: boolean; } | undefined; } | undefined
 >z : { w: boolean; } | undefined

     o5.x?.y.z?.w;
 >o5.x?.y.z?.w : boolean | undefined
 >o5.x?.y.z : { w: boolean; } | undefined
->o5.x?.y : { z?: { w: boolean; }; } | undefined
->o5.x : { y: { z?: { w: boolean; }; }; } | undefined
->o5 : { x?: { y: { z?: { w: boolean; }; }; }; }
->x : { y: { z?: { w: boolean; }; }; } | undefined
->y : { z?: { w: boolean; }; } | undefined
+>o5.x?.y : { z?: { w: boolean; } | undefined; } | undefined
+>o5.x : { y: { z?: { w: boolean; } | undefined; }; } | undefined
+>o5 : { x?: { y: { z?: { w: boolean; } | undefined; }; } | undefined; }
+>x : { y: { z?: { w: boolean; } | undefined; }; } | undefined
+>y : { z?: { w: boolean; } | undefined; } | undefined
 >z : { w: boolean; } | undefined
 >w : boolean | undefined

     o5.x.y;
->o5.x.y : { z?: { w: boolean; }; }
->o5.x : { y: { z?: { w: boolean; }; }; } | undefined
->o5 : { x?: { y: { z?: { w: boolean; }; }; }; }
->x : { y: { z?: { w: boolean; }; }; } | undefined
->y : { z?: { w: boolean; }; }
+>o5.x.y : { z?: { w: boolean; } | undefined; }
+>o5.x : { y: { z?: { w: boolean; } | undefined; }; } | undefined
+>o5 : { x?: { y: { z?: { w: boolean; } | undefined; }; } | undefined; }
+>x : { y: { z?: { w: boolean; } | undefined; }; } | undefined
+>y : { z?: { w: boolean; } | undefined; }

     o5.x.y.z.w;
 >o5.x.y.z.w : boolean
 >o5.x.y.z : { w: boolean; } | undefined
->o5.x.y : { z?: { w: boolean; }; }
->o5.x : { y: { z?: { w: boolean; }; }; } | undefined
->o5 : { x?: { y: { z?: { w: boolean; }; }; }; }
->x : { y: { z?: { w: boolean; }; }; } | undefined
->y : { z?: { w: boolean; }; }
+>o5.x.y : { z?: { w: boolean; } | undefined; }
+>o5.x : { y: { z?: { w: boolean; } | undefined; }; } | undefined
+>o5 : { x?: { y: { z?: { w: boolean; } | undefined; }; } | undefined; }
+>x : { y: { z?: { w: boolean; } | undefined; }; } | undefined
+>y : { z?: { w: boolean; } | undefined; }
 >z : { w: boolean; } | undefined
 >w : boolean
 }
 o5.x;
->o5.x : { y: { z?: { w: boolean; }; }; } | undefined
->o5 : { x?: { y: { z?: { w: boolean; }; }; }; }
->x : { y: { z?: { w: boolean; }; }; } | undefined
+>o5.x : { y: { z?: { w: boolean; } | undefined; }; } | undefined
+>o5 : { x?: { y: { z?: { w: boolean; } | undefined; }; } | undefined; }
+>x : { y: { z?: { w: boolean; } | undefined; }; } | undefined

 o5.x?.y;
->o5.x?.y : { z?: { w: boolean; }; } | undefined
->o5.x : { y: { z?: { w: boolean; }; }; } | undefined
->o5 : { x?: { y: { z?: { w: boolean; }; }; }; }
->x : { y: { z?: { w: boolean; }; }; } | undefined
->y : { z?: { w: boolean; }; } | undefined
+>o5.x?.y : { z?: { w: boolean; } | undefined; } | undefined
+>o5.x : { y: { z?: { w: boolean; } | undefined; }; } | undefined
+>o5 : { x?: { y: { z?: { w: boolean; } | undefined; }; } | undefined; }
+>x : { y: { z?: { w: boolean; } | undefined; }; } | undefined
+>y : { z?: { w: boolean; } | undefined; } | undefined

 o5.x?.y.z;
 >o5.x?.y.z : { w: boolean; } | undefined
->o5.x?.y : { z?: { w: boolean; }; } | undefined
->o5.x : { y: { z?: { w: boolean; }; }; } | undefined
->o5 : { x?: { y: { z?: { w: boolean; }; }; }; }
->x : { y: { z?: { w: boolean; }; }; } | undefined
->y : { z?: { w: boolean; }; } | undefined
+>o5.x?.y : { z?: { w: boolean; } | undefined; } | undefined
+>o5.x : { y: { z?: { w: boolean; } | undefined; }; } | undefined
+>o5 : { x?: { y: { z?: { w: boolean; } | undefined; }; } | undefined; }
+>x : { y: { z?: { w: boolean; } | undefined; }; } | undefined
+>y : { z?: { w: boolean; } | undefined; } | undefined
 >z : { w: boolean; } | undefined

 o5.x?.y.z?.w;
 >o5.x?.y.z?.w : boolean | undefined
 >o5.x?.y.z : { w: boolean; } | undefined
->o5.x?.y : { z?: { w: boolean; }; } | undefined
->o5.x : { y: { z?: { w: boolean; }; }; } | undefined
->o5 : { x?: { y: { z?: { w: boolean; }; }; }; }
->x : { y: { z?: { w: boolean; }; }; } | undefined
->y : { z?: { w: boolean; }; } | undefined
+>o5.x?.y : { z?: { w: boolean; } | undefined; } | undefined
+>o5.x : { y: { z?: { w: boolean; } | undefined; }; } | undefined
+>o5 : { x?: { y: { z?: { w: boolean; } | undefined; }; } | undefined; }
+>x : { y: { z?: { w: boolean; } | undefined; }; } | undefined
+>y : { z?: { w: boolean; } | undefined; } | undefined
 >z : { w: boolean; } | undefined
 >w : boolean | undefined

 o5.x.y;
->o5.x.y : { z?: { w: boolean; }; }
->o5.x : { y: { z?: { w: boolean; }; }; } | undefined
->o5 : { x?: { y: { z?: { w: boolean; }; }; }; }
->x : { y: { z?: { w: boolean; }; }; } | undefined
->y : { z?: { w: boolean; }; }
+>o5.x.y : { z?: { w: boolean; } | undefined; }
+>o5.x : { y: { z?: { w: boolean; } | undefined; }; } | undefined
+>o5 : { x?: { y: { z?: { w: boolean; } | undefined; }; } | undefined; }
+>x : { y: { z?: { w: boolean; } | undefined; }; } | undefined
+>y : { z?: { w: boolean; } | undefined; }

 o5.x.y.z.w;
 >o5.x.y.z.w : boolean
 >o5.x.y.z : { w: boolean; } | undefined
->o5.x.y : { z?: { w: boolean; }; }
->o5.x : { y: { z?: { w: boolean; }; }; } | undefined
->o5 : { x?: { y: { z?: { w: boolean; }; }; }; }
->x : { y: { z?: { w: boolean; }; }; } | undefined
->y : { z?: { w: boolean; }; }
+>o5.x.y : { z?: { w: boolean; } | undefined; }
+>o5.x : { y: { z?: { w: boolean; } | undefined; }; } | undefined
+>o5 : { x?: { y: { z?: { w: boolean; } | undefined; }; } | undefined; }
+>x : { y: { z?: { w: boolean; } | undefined; }; } | undefined
+>y : { z?: { w: boolean; } | undefined; }
 >z : { w: boolean; } | undefined
 >w : boolean

@@= skipped -1154, +1154 lines =@@

     if (typeof o?.foo === "number") {
 >typeof o?.foo === "number" : boolean
->typeof o?.foo : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof o?.foo : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >o?.foo : string | number | undefined
 >o : Thing | undefined
 >foo : string | number | undefined
@@= skipped -13, +13 lines =@@
     }
     if (typeof o?.["foo"] === "number") {
 >typeof o?.["foo"] === "number" : boolean
->typeof o?.["foo"] : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof o?.["foo"] : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >o?.["foo"] : string | number | undefined
 >o : Thing | undefined
 >"foo" : "foo"
@@= skipped -13, +13 lines =@@
     }
     if (typeof o?.bar() === "number") {
 >typeof o?.bar() === "number" : boolean
->typeof o?.bar() : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof o?.bar() : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >o?.bar() : number | undefined
 >o?.bar : (() => number) | undefined
 >o : Thing | undefined
@@= skipped -32, +32 lines =@@

     if (typeof o?.foo === "number") {
 >typeof o?.foo === "number" : boolean
->typeof o?.foo : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof o?.foo : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >o?.foo : string | number | undefined
 >o : Thing | null
 >foo : string | number | undefined
@@= skipped -13, +13 lines =@@
     }
     if (typeof o?.["foo"] === "number") {
 >typeof o?.["foo"] === "number" : boolean
->typeof o?.["foo"] : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof o?.["foo"] : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >o?.["foo"] : string | number | undefined
 >o : Thing | null
 >"foo" : "foo"
@@= skipped -13, +13 lines =@@
     }
     if (typeof o?.bar() === "number") {
 >typeof o?.bar() === "number" : boolean
->typeof o?.bar() : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof o?.bar() : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >o?.bar() : number | undefined
 >o?.bar : (() => number) | undefined
 >o : Thing | null
@@= skipped -32, +32 lines =@@

     if (typeof o?.foo === "number") {
 >typeof o?.foo === "number" : boolean
->typeof o?.foo : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof o?.foo : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >o?.foo : string | number | undefined
 >o : Thing | undefined
 >foo : string | number | undefined
@@= skipped -19, +19 lines =@@
     }
     if (typeof o?.foo !== "number") {
 >typeof o?.foo !== "number" : boolean
->typeof o?.foo : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof o?.foo : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >o?.foo : string | number | undefined
 >o : Thing | undefined
 >foo : string | number | undefined
@@= skipped -19, +19 lines =@@
     }
     if (typeof o?.foo == "number") {
 >typeof o?.foo == "number" : boolean
->typeof o?.foo : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof o?.foo : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >o?.foo : string | number | undefined
 >o : Thing | undefined
 >foo : string | number | undefined
@@= skipped -19, +19 lines =@@
     }
     if (typeof o?.foo != "number") {
 >typeof o?.foo != "number" : boolean
->typeof o?.foo : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof o?.foo : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >o?.foo : string | number | undefined
 >o : Thing | undefined
 >foo : string | number | undefined
@@= skipped -25, +25 lines =@@

     if (typeof o?.foo === "undefined") {
 >typeof o?.foo === "undefined" : boolean
->typeof o?.foo : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof o?.foo : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >o?.foo : string | number | undefined
 >o : Thing | undefined
 >foo : string | number | undefined
@@= skipped -19, +19 lines =@@
     }
     if (typeof o?.foo !== "undefined") {
 >typeof o?.foo !== "undefined" : boolean
->typeof o?.foo : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof o?.foo : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >o?.foo : string | number | undefined
 >o : Thing | undefined
 >foo : string | number | undefined
@@= skipped -19, +19 lines =@@
     }
     if (typeof o?.foo == "undefined") {
 >typeof o?.foo == "undefined" : boolean
->typeof o?.foo : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof o?.foo : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >o?.foo : string | number | undefined
 >o : Thing | undefined
 >foo : string | number | undefined
@@= skipped -19, +19 lines =@@
     }
     if (typeof o?.foo != "undefined") {
 >typeof o?.foo != "undefined" : boolean
->typeof o?.foo : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof o?.foo : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >o?.foo : string | number | undefined
 >o : Thing | undefined
 >foo : string | number | undefined
@@= skipped -76, +76 lines =@@
 >assert(typeof o?.foo === "number") : void
 >assert : (x: unknown) => asserts x
 >typeof o?.foo === "number" : boolean
->typeof o?.foo : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof o?.foo : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >o?.foo : string | number | undefined
 >o : Thing | undefined
 >foo : string | number | undefined
@@= skipped -81, +81 lines =@@
 >o : Thing | undefined

     switch (typeof o?.foo) {
->typeof o?.foo : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof o?.foo : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >o?.foo : string | number | undefined
 >o : Thing | undefined
 >foo : string | number | undefined
@@= skipped -57, +57 lines =@@
 >radius : number

 function getArea(shape?: Shape) {
->getArea : (shape?: Shape) => number
+>getArea : (shape?: Shape | undefined) => number
 >shape : Shape | undefined

     switch (shape?.type) {
->shape?.type : "rectangle" | "circle" | undefined
+>shape?.type : "circle" | "rectangle" | undefined
 >shape : Shape | undefined
->type : "rectangle" | "circle" | undefined
+>type : "circle" | "rectangle" | undefined

         case 'circle':
 >'circle' : "circle"
@@= skipped -156, +156 lines =@@
 >0 : 0

 declare const arr: { tag: ("left" | "right") }[];
->arr : { tag: ("left" | "right"); }[]
+>arr : { tag: "left" | "right"; }[]
 >tag : "left" | "right"

 while (arr[i]?.tag === "left") {
 >arr[i]?.tag === "left" : boolean
 >arr[i]?.tag : "left" | "right"
->arr[i] : { tag: ("left" | "right"); }
->arr : { tag: ("left" | "right"); }[]
+>arr[i] : { tag: "left" | "right"; }
+>arr : { tag: "left" | "right"; }[]
 >i : number
 >tag : "left" | "right"
 >"left" : "left"
@@= skipped -20, +20 lines =@@
     if (arr[i]?.tag === "right") {
 >arr[i]?.tag === "right" : boolean
 >arr[i]?.tag : "left" | "right"
->arr[i] : { tag: ("left" | "right"); }
->arr : { tag: ("left" | "right"); }[]
+>arr[i] : { tag: "left" | "right"; }
+>arr : { tag: "left" | "right"; }[]
 >i : number
 >tag : "left" | "right"
 >"right" : "right"