--- old.numberPropertyAccess.symbols
+++ new.numberPropertyAccess.symbols
@@= skipped -5, +5 lines =@@
 
 var a = x.toExponential();
 >a : Symbol(a, Decl(numberPropertyAccess.ts, 1, 3))
->x.toExponential : Symbol(Number.toExponential, Decl(lib.es5.d.ts, --, --))
+>x.toExponential : Symbol(toExponential, Decl(lib.es5.d.ts, --, --))
 >x : Symbol(x, Decl(numberPropertyAccess.ts, 0, 3))
->toExponential : Symbol(Number.toExponential, Decl(lib.es5.d.ts, --, --))
+>toExponential : Symbol(toExponential, Decl(lib.es5.d.ts, --, --))
 
 var b = x.hasOwnProperty('toFixed');
 >b : Symbol(b, Decl(numberPropertyAccess.ts, 2, 3))
->x.hasOwnProperty : Symbol(Object.hasOwnProperty, Decl(lib.es5.d.ts, --, --))
+>x.hasOwnProperty : Symbol(hasOwnProperty, Decl(lib.es5.d.ts, --, --))
 >x : Symbol(x, Decl(numberPropertyAccess.ts, 0, 3))
->hasOwnProperty : Symbol(Object.hasOwnProperty, Decl(lib.es5.d.ts, --, --))
+>hasOwnProperty : Symbol(hasOwnProperty, Decl(lib.es5.d.ts, --, --))
 
 var c = x['toExponential']();
 >c : Symbol(c, Decl(numberPropertyAccess.ts, 4, 3))
 >x : Symbol(x, Decl(numberPropertyAccess.ts, 0, 3))
->'toExponential' : Symbol(Number.toExponential, Decl(lib.es5.d.ts, --, --))
+>'toExponential' : Symbol(toExponential, Decl(lib.es5.d.ts, --, --))
 
 var d = x['hasOwnProperty']('toFixed');
 >d : Symbol(d, Decl(numberPropertyAccess.ts, 5, 3))
 >x : Symbol(x, Decl(numberPropertyAccess.ts, 0, 3))
->'hasOwnProperty' : Symbol(Object.hasOwnProperty, Decl(lib.es5.d.ts, --, --))
+>'hasOwnProperty' : Symbol(hasOwnProperty, Decl(lib.es5.d.ts, --, --))
 
