--- old.subtypingWithCallSignaturesWithRestParameters.symbols
+++ new.subtypingWithCallSignaturesWithRestParameters.symbols
@@ -7,22 +7,22 @@
 >Base : Symbol(Base, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 0, 0))
 
     a: (...args: number[]) => number;
->a : Symbol(Base.a, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 2, 16))
+>a : Symbol(a, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 2, 16))
 >args : Symbol(args, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 3, 8))
 
     a2: (x: number, ...z: number[]) => number;
->a2 : Symbol(Base.a2, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 3, 37))
+>a2 : Symbol(a2, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 3, 37))
 >x : Symbol(x, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 4, 9))
 >z : Symbol(z, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 4, 19))
 
     a3: (x: number, y?: string, ...z: number[]) => number;
->a3 : Symbol(Base.a3, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 4, 46))
+>a3 : Symbol(a3, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 4, 46))
 >x : Symbol(x, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 5, 9))
 >y : Symbol(y, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 5, 19))
 >z : Symbol(z, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 5, 31))
 
     a4: (x?: number, y?: string, ...z: number[]) => number;
->a4 : Symbol(Base.a4, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 5, 58))
+>a4 : Symbol(a4, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 5, 58))
 >x : Symbol(x, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 6, 9))
 >y : Symbol(y, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 6, 20))
 >z : Symbol(z, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 6, 32))
@@ -33,7 +33,7 @@
 >Base : Symbol(Base, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 0, 0))
 
     a: () => number; // ok, same number of required params
->a : Symbol(I1.a, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 9, 27))
+>a : Symbol(a, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 9, 27))
 }
 
 interface I1B extends Base {
@@ -41,7 +41,7 @@
 >Base : Symbol(Base, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 0, 0))
 
     a: (...args: number[]) => number; // ok, same number of required params
->a : Symbol(I1B.a, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 13, 28))
+>a : Symbol(a, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 13, 28))
 >args : Symbol(args, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 14, 8))
 }
 
@@ -50,7 +50,7 @@
 >Base : Symbol(Base, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 0, 0))
 
     a: (...args: string[]) => number; // error, type mismatch
->a : Symbol(I1C.a, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 17, 28))
+>a : Symbol(a, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 17, 28))
 >args : Symbol(args, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 18, 8))
 }
 
@@ -59,7 +59,7 @@
 >Base : Symbol(Base, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 0, 0))
 
     a: (x?: number) => number; // ok, same number of required params
->a : Symbol(I2.a, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 21, 27))
+>a : Symbol(a, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 21, 27))
 >x : Symbol(x, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 22, 8))
 }
 
@@ -68,7 +68,7 @@
 >Base : Symbol(Base, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 0, 0))
 
     a: (x?: number, y?: number, z?: number) => number; // ok, same number of required params
->a : Symbol(I2B.a, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 25, 28))
+>a : Symbol(a, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 25, 28))
 >x : Symbol(x, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 26, 8))
 >y : Symbol(y, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 26, 19))
 >z : Symbol(z, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 26, 31))
@@ -79,7 +79,7 @@
 >Base : Symbol(Base, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 0, 0))
 
     a: (x: number) => number; // ok, all present params match
->a : Symbol(I3.a, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 29, 27))
+>a : Symbol(a, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 29, 27))
 >x : Symbol(x, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 30, 8))
 }
 
@@ -88,7 +88,7 @@
 >Base : Symbol(Base, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 0, 0))
 
     a: (x?: string) => number; // error, incompatible type
->a : Symbol(I3B.a, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 33, 28))
+>a : Symbol(a, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 33, 28))
 >x : Symbol(x, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 34, 8))
 }
 
@@ -99,7 +99,7 @@
 >Base : Symbol(Base, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 0, 0))
 
     a2: () => number; // ok, fewer required params
->a2 : Symbol(I4.a2, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 39, 27))
+>a2 : Symbol(a2, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 39, 27))
 }
 
 interface I4B extends Base {
@@ -107,7 +107,7 @@
 >Base : Symbol(Base, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 0, 0))
 
     a2: (...args: number[]) => number; // ok, fewer required params
->a2 : Symbol(I4B.a2, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 43, 28))
+>a2 : Symbol(a2, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 43, 28))
 >args : Symbol(args, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 44, 9))
 }
 
@@ -116,7 +116,7 @@
 >Base : Symbol(Base, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 0, 0))
 
     a2: (x?: number) => number; // ok, fewer required params
->a2 : Symbol(I5.a2, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 47, 27))
+>a2 : Symbol(a2, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 47, 27))
 >x : Symbol(x, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 48, 9))
 }
 
@@ -125,7 +125,7 @@
 >Base : Symbol(Base, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 0, 0))
 
     a2: (x: number) => number; // ok, same number of required params
->a2 : Symbol(I6.a2, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 51, 27))
+>a2 : Symbol(a2, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 51, 27))
 >x : Symbol(x, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 52, 9))
 }
 
@@ -134,7 +134,7 @@
 >Base : Symbol(Base, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 0, 0))
 
     a2: (x: number, ...args: number[]) => number; // ok, same number of required params
->a2 : Symbol(I6B.a2, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 55, 28))
+>a2 : Symbol(a2, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 55, 28))
 >x : Symbol(x, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 56, 9))
 >args : Symbol(args, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 56, 19))
 }
@@ -144,7 +144,7 @@
 >Base : Symbol(Base, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 0, 0))
 
     a2: (x: number, ...args: string[]) => number; // error
->a2 : Symbol(I6C.a2, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 59, 28))
+>a2 : Symbol(a2, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 59, 28))
 >x : Symbol(x, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 60, 9))
 >args : Symbol(args, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 60, 19))
 }
@@ -154,7 +154,7 @@
 >Base : Symbol(Base, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 0, 0))
 
     a2: (x: number, y: number) => number; // ok, all present params match
->a2 : Symbol(I6D.a2, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 63, 28))
+>a2 : Symbol(a2, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 63, 28))
 >x : Symbol(x, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 64, 9))
 >y : Symbol(y, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 64, 19))
 }
@@ -164,7 +164,7 @@
 >Base : Symbol(Base, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 0, 0))
 
     a2: (x: number, y?: number) => number; // ok, same number of required params
->a2 : Symbol(I6E.a2, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 67, 28))
+>a2 : Symbol(a2, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 67, 28))
 >x : Symbol(x, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 68, 9))
 >y : Symbol(y, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 68, 19))
 }
@@ -176,7 +176,7 @@
 >Base : Symbol(Base, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 0, 0))
 
     a3: () => number; // ok, fewer required params
->a3 : Symbol(I7.a3, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 73, 27))
+>a3 : Symbol(a3, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 73, 27))
 }
 
 interface I8 extends Base {
@@ -184,7 +184,7 @@
 >Base : Symbol(Base, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 0, 0))
 
     a3: (x?: number) => number; // ok, fewer required params
->a3 : Symbol(I8.a3, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 77, 27))
+>a3 : Symbol(a3, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 77, 27))
 >x : Symbol(x, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 78, 9))
 }
 
@@ -193,7 +193,7 @@
 >Base : Symbol(Base, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 0, 0))
 
     a3: (x: number) => number; // ok, same number of required params
->a3 : Symbol(I9.a3, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 81, 27))
+>a3 : Symbol(a3, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 81, 27))
 >x : Symbol(x, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 82, 9))
 }
 
@@ -202,7 +202,7 @@
 >Base : Symbol(Base, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 0, 0))
 
     a3: (x: number, y: string) => number;  // ok, all present params match
->a3 : Symbol(I10.a3, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 85, 28))
+>a3 : Symbol(a3, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 85, 28))
 >x : Symbol(x, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 86, 9))
 >y : Symbol(y, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 86, 19))
 }
@@ -212,7 +212,7 @@
 >Base : Symbol(Base, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 0, 0))
 
     a3: (x: number, y?: number, z?: number) => number;  // error
->a3 : Symbol(I10B.a3, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 89, 29))
+>a3 : Symbol(a3, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 89, 29))
 >x : Symbol(x, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 90, 9))
 >y : Symbol(y, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 90, 19))
 >z : Symbol(z, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 90, 31))
@@ -223,7 +223,7 @@
 >Base : Symbol(Base, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 0, 0))
 
     a3: (x: number, ...z: number[]) => number;  // error
->a3 : Symbol(I10C.a3, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 93, 29))
+>a3 : Symbol(a3, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 93, 29))
 >x : Symbol(x, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 94, 9))
 >z : Symbol(z, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 94, 19))
 }
@@ -233,7 +233,7 @@
 >Base : Symbol(Base, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 0, 0))
 
     a3: (x: string, y?: string, z?: string) => number;  // error, incompatible types
->a3 : Symbol(I10D.a3, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 97, 29))
+>a3 : Symbol(a3, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 97, 29))
 >x : Symbol(x, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 98, 9))
 >y : Symbol(y, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 98, 19))
 >z : Symbol(z, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 98, 31))
@@ -244,7 +244,7 @@
 >Base : Symbol(Base, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 0, 0))
 
     a3: (x: number, ...z: string[]) => number;  // error
->a3 : Symbol(I10E.a3, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 101, 29))
+>a3 : Symbol(a3, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 101, 29))
 >x : Symbol(x, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 102, 9))
 >z : Symbol(z, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 102, 19))
 }
@@ -254,7 +254,7 @@
 >Base : Symbol(Base, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 0, 0))
 
     a4: () => number; // ok, fewer required params
->a4 : Symbol(I11.a4, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 105, 28))
+>a4 : Symbol(a4, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 105, 28))
 }
 
 interface I12 extends Base {
@@ -262,7 +262,7 @@
 >Base : Symbol(Base, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 0, 0))
 
     a4: (x?: number, y?: number) => number; // error, type mismatch
->a4 : Symbol(I12.a4, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 109, 28))
+>a4 : Symbol(a4, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 109, 28))
 >x : Symbol(x, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 110, 9))
 >y : Symbol(y, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 110, 20))
 }
@@ -272,7 +272,7 @@
 >Base : Symbol(Base, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 0, 0))
 
     a4: (x: number) => number; // ok, all present params match
->a4 : Symbol(I13.a4, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 113, 28))
+>a4 : Symbol(a4, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 113, 28))
 >x : Symbol(x, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 114, 9))
 }
 
@@ -281,7 +281,7 @@
 >Base : Symbol(Base, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 0, 0))
 
     a4: (x: number, y?: number) => number;  // error, second param has type mismatch
->a4 : Symbol(I14.a4, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 117, 28))
+>a4 : Symbol(a4, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 117, 28))
 >x : Symbol(x, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 118, 9))
 >y : Symbol(y, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 118, 19))
 }
@@ -291,7 +291,7 @@
 >Base : Symbol(Base, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 0, 0))
 
     a4: (x?: number, y?: string) => number;  // ok, same number of required params with matching types
->a4 : Symbol(I15.a4, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 121, 28))
+>a4 : Symbol(a4, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 121, 28))
 >x : Symbol(x, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 122, 9))
 >y : Symbol(y, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 122, 20))
 }
@@ -301,7 +301,7 @@
 >Base : Symbol(Base, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 0, 0))
 
     a4: (x: number, ...args: string[]) => number;  // error, rest param has type mismatch
->a4 : Symbol(I16.a4, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 125, 28))
+>a4 : Symbol(a4, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 125, 28))
 >x : Symbol(x, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 126, 9))
 >args : Symbol(args, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 126, 19))
 }
@@ -311,7 +311,7 @@
 >Base : Symbol(Base, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 0, 0))
 
     a4: (...args: number[]) => number; // error
->a4 : Symbol(I17.a4, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 129, 28))
+>a4 : Symbol(a4, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 129, 28))
 >args : Symbol(args, Decl(subtypingWithCallSignaturesWithRestParameters.ts, 130, 9))
 }
 
