--- old.undefinedIsSubtypeOfEverything.symbols
+++ new.undefinedIsSubtypeOfEverything.symbols
@@= skipped -6, +6 lines =@@
 >Base : Symbol(Base, Decl(undefinedIsSubtypeOfEverything.ts, 0, 0))
 
     foo: typeof undefined;
->foo : Symbol(Base.foo, Decl(undefinedIsSubtypeOfEverything.ts, 2, 12))
+>foo : Symbol(foo, Decl(undefinedIsSubtypeOfEverything.ts, 2, 12))
 >undefined : Symbol(undefined)
 } 
 
@@= skipped -9, +9 lines =@@
 >Base : Symbol(Base, Decl(undefinedIsSubtypeOfEverything.ts, 0, 0))
 
     foo: any;
->foo : Symbol(D0.foo, Decl(undefinedIsSubtypeOfEverything.ts, 6, 23))
+>foo : Symbol(foo, Decl(undefinedIsSubtypeOfEverything.ts, 6, 23))
 }
 
 class DA extends Base {
@@= skipped -8, +8 lines =@@
 >Base : Symbol(Base, Decl(undefinedIsSubtypeOfEverything.ts, 0, 0))
 
     foo: typeof undefined; 
->foo : Symbol(DA.foo, Decl(undefinedIsSubtypeOfEverything.ts, 10, 23))
+>foo : Symbol(foo, Decl(undefinedIsSubtypeOfEverything.ts, 10, 23))
 >undefined : Symbol(undefined)
 }
 
@@= skipped -9, +9 lines =@@
 >Base : Symbol(Base, Decl(undefinedIsSubtypeOfEverything.ts, 0, 0))
 
     foo: string;
->foo : Symbol(D1.foo, Decl(undefinedIsSubtypeOfEverything.ts, 14, 23))
+>foo : Symbol(foo, Decl(undefinedIsSubtypeOfEverything.ts, 14, 23))
 }
 
 class D1A extends Base {
@@= skipped -8, +8 lines =@@
 >Base : Symbol(Base, Decl(undefinedIsSubtypeOfEverything.ts, 0, 0))
 
     foo: String;
->foo : Symbol(D1A.foo, Decl(undefinedIsSubtypeOfEverything.ts, 18, 24))
+>foo : Symbol(foo, Decl(undefinedIsSubtypeOfEverything.ts, 18, 24))
 >String : Symbol(String, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 }
 
@@= skipped -10, +10 lines =@@
 >Base : Symbol(Base, Decl(undefinedIsSubtypeOfEverything.ts, 0, 0))
 
     foo: number;
->foo : Symbol(D2.foo, Decl(undefinedIsSubtypeOfEverything.ts, 23, 23))
+>foo : Symbol(foo, Decl(undefinedIsSubtypeOfEverything.ts, 23, 23))
 }
 
 class D2A extends Base {
@@= skipped -8, +8 lines =@@
 >Base : Symbol(Base, Decl(undefinedIsSubtypeOfEverything.ts, 0, 0))
 
     foo: Number;
->foo : Symbol(D2A.foo, Decl(undefinedIsSubtypeOfEverything.ts, 27, 24))
+>foo : Symbol(foo, Decl(undefinedIsSubtypeOfEverything.ts, 27, 24))
 >Number : Symbol(Number, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 }
 
@@= skipped -10, +10 lines =@@
 >Base : Symbol(Base, Decl(undefinedIsSubtypeOfEverything.ts, 0, 0))
 
     foo: boolean;
->foo : Symbol(D3.foo, Decl(undefinedIsSubtypeOfEverything.ts, 32, 23))
+>foo : Symbol(foo, Decl(undefinedIsSubtypeOfEverything.ts, 32, 23))
 }
 
 class D3A extends Base {
@@= skipped -8, +8 lines =@@
 >Base : Symbol(Base, Decl(undefinedIsSubtypeOfEverything.ts, 0, 0))
 
     foo: Boolean;
->foo : Symbol(D3A.foo, Decl(undefinedIsSubtypeOfEverything.ts, 36, 24))
+>foo : Symbol(foo, Decl(undefinedIsSubtypeOfEverything.ts, 36, 24))
 >Boolean : Symbol(Boolean, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 }
 
@@= skipped -10, +10 lines =@@
 >Base : Symbol(Base, Decl(undefinedIsSubtypeOfEverything.ts, 0, 0))
 
     foo: RegExp;
->foo : Symbol(D4.foo, Decl(undefinedIsSubtypeOfEverything.ts, 41, 23))
+>foo : Symbol(foo, Decl(undefinedIsSubtypeOfEverything.ts, 41, 23))
 >RegExp : Symbol(RegExp, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 }
 
@@= skipped -9, +9 lines =@@
 >Base : Symbol(Base, Decl(undefinedIsSubtypeOfEverything.ts, 0, 0))
 
     foo: Date;
->foo : Symbol(D5.foo, Decl(undefinedIsSubtypeOfEverything.ts, 45, 23))
+>foo : Symbol(foo, Decl(undefinedIsSubtypeOfEverything.ts, 45, 23))
 >Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --))
 }
 
@@= skipped -10, +10 lines =@@
 >Base : Symbol(Base, Decl(undefinedIsSubtypeOfEverything.ts, 0, 0))
 
     foo: number[];
->foo : Symbol(D6.foo, Decl(undefinedIsSubtypeOfEverything.ts, 50, 23))
+>foo : Symbol(foo, Decl(undefinedIsSubtypeOfEverything.ts, 50, 23))
 }
 
 class D7 extends Base {
@@= skipped -8, +8 lines =@@
 >Base : Symbol(Base, Decl(undefinedIsSubtypeOfEverything.ts, 0, 0))
 
     foo: { bar: number };
->foo : Symbol(D7.foo, Decl(undefinedIsSubtypeOfEverything.ts, 54, 23))
+>foo : Symbol(foo, Decl(undefinedIsSubtypeOfEverything.ts, 54, 23))
 >bar : Symbol(bar, Decl(undefinedIsSubtypeOfEverything.ts, 55, 10))
 }
 
@@= skipped -10, +10 lines =@@
 >Base : Symbol(Base, Decl(undefinedIsSubtypeOfEverything.ts, 0, 0))
 
     foo: D7;
->foo : Symbol(D8.foo, Decl(undefinedIsSubtypeOfEverything.ts, 59, 23))
+>foo : Symbol(foo, Decl(undefinedIsSubtypeOfEverything.ts, 59, 23))
 >D7 : Symbol(D7, Decl(undefinedIsSubtypeOfEverything.ts, 52, 1))
 }
 
@@= skipped -8, +8 lines =@@
 >I1 : Symbol(I1, Decl(undefinedIsSubtypeOfEverything.ts, 61, 1))
 
     bar: string;
->bar : Symbol(I1.bar, Decl(undefinedIsSubtypeOfEverything.ts, 63, 14))
+>bar : Symbol(bar, Decl(undefinedIsSubtypeOfEverything.ts, 63, 14))
 }
 class D9 extends Base {
 >D9 : Symbol(D9, Decl(undefinedIsSubtypeOfEverything.ts, 65, 1))
 >Base : Symbol(Base, Decl(undefinedIsSubtypeOfEverything.ts, 0, 0))
 
     foo: I1;
->foo : Symbol(D9.foo, Decl(undefinedIsSubtypeOfEverything.ts, 66, 23))
+>foo : Symbol(foo, Decl(undefinedIsSubtypeOfEverything.ts, 66, 23))
 >I1 : Symbol(I1, Decl(undefinedIsSubtypeOfEverything.ts, 61, 1))
 }
 
@@= skipped -17, +17 lines =@@
 >Base : Symbol(Base, Decl(undefinedIsSubtypeOfEverything.ts, 0, 0))
 
     foo: () => number;
->foo : Symbol(D10.foo, Decl(undefinedIsSubtypeOfEverything.ts, 71, 24))
+>foo : Symbol(foo, Decl(undefinedIsSubtypeOfEverything.ts, 71, 24))
 }
 
 enum E { A }
 >E : Symbol(E, Decl(undefinedIsSubtypeOfEverything.ts, 73, 1))
->A : Symbol(E.A, Decl(undefinedIsSubtypeOfEverything.ts, 75, 8))
+>A : Symbol(A, Decl(undefinedIsSubtypeOfEverything.ts, 75, 8))
 
 class D11 extends Base {
 >D11 : Symbol(D11, Decl(undefinedIsSubtypeOfEverything.ts, 75, 12))
 >Base : Symbol(Base, Decl(undefinedIsSubtypeOfEverything.ts, 0, 0))
 
     foo: E;
->foo : Symbol(D11.foo, Decl(undefinedIsSubtypeOfEverything.ts, 76, 24))
+>foo : Symbol(foo, Decl(undefinedIsSubtypeOfEverything.ts, 76, 24))
 >E : Symbol(E, Decl(undefinedIsSubtypeOfEverything.ts, 73, 1))
 }
 
@@= skipped -30, +30 lines =@@
 >Base : Symbol(Base, Decl(undefinedIsSubtypeOfEverything.ts, 0, 0))
 
     foo: typeof f;
->foo : Symbol(D12.foo, Decl(undefinedIsSubtypeOfEverything.ts, 84, 24))
+>foo : Symbol(foo, Decl(undefinedIsSubtypeOfEverything.ts, 84, 24))
 >f : Symbol(f, Decl(undefinedIsSubtypeOfEverything.ts, 78, 1), Decl(undefinedIsSubtypeOfEverything.ts, 80, 16))
 }
 
 
 class c { baz: string }
 >c : Symbol(c, Decl(undefinedIsSubtypeOfEverything.ts, 86, 1), Decl(undefinedIsSubtypeOfEverything.ts, 89, 23))
->baz : Symbol(c.baz, Decl(undefinedIsSubtypeOfEverything.ts, 89, 9))
+>baz : Symbol(baz, Decl(undefinedIsSubtypeOfEverything.ts, 89, 9))
 
 module c {
 >c : Symbol(c, Decl(undefinedIsSubtypeOfEverything.ts, 86, 1), Decl(undefinedIsSubtypeOfEverything.ts, 89, 23))
@@= skipped -20, +20 lines =@@
 >Base : Symbol(Base, Decl(undefinedIsSubtypeOfEverything.ts, 0, 0))
 
     foo: typeof c;
->foo : Symbol(D13.foo, Decl(undefinedIsSubtypeOfEverything.ts, 93, 24))
+>foo : Symbol(foo, Decl(undefinedIsSubtypeOfEverything.ts, 93, 24))
 >c : Symbol(c, Decl(undefinedIsSubtypeOfEverything.ts, 86, 1), Decl(undefinedIsSubtypeOfEverything.ts, 89, 23))
 }
 
@@= skipped -11, +11 lines =@@
 >Base : Symbol(Base, Decl(undefinedIsSubtypeOfEverything.ts, 0, 0))
 
     foo: T;
->foo : Symbol(D14.foo, Decl(undefinedIsSubtypeOfEverything.ts, 98, 27))
+>foo : Symbol(foo, Decl(undefinedIsSubtypeOfEverything.ts, 98, 27))
 >T : Symbol(T, Decl(undefinedIsSubtypeOfEverything.ts, 98, 10))
 }
 
@@= skipped -12, +12 lines =@@
 >Base : Symbol(Base, Decl(undefinedIsSubtypeOfEverything.ts, 0, 0))
 
     foo: U;
->foo : Symbol(D15.foo, Decl(undefinedIsSubtypeOfEverything.ts, 103, 30))
+>foo : Symbol(foo, Decl(undefinedIsSubtypeOfEverything.ts, 103, 30))
 >U : Symbol(U, Decl(undefinedIsSubtypeOfEverything.ts, 103, 12))
 }
 
@@= skipped -14, +14 lines =@@
 >Base : Symbol(Base, Decl(undefinedIsSubtypeOfEverything.ts, 0, 0))
 
     foo: Object;
->foo : Symbol(D16.foo, Decl(undefinedIsSubtypeOfEverything.ts, 112, 24))
+>foo : Symbol(foo, Decl(undefinedIsSubtypeOfEverything.ts, 112, 24))
 >Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 }
 
@@= skipped -10, +10 lines =@@
 >Base : Symbol(Base, Decl(undefinedIsSubtypeOfEverything.ts, 0, 0))
 
     foo: {};
->foo : Symbol(D17.foo, Decl(undefinedIsSubtypeOfEverything.ts, 117, 24))
+>foo : Symbol(foo, Decl(undefinedIsSubtypeOfEverything.ts, 117, 24))
 }
 
