error TS2318: Cannot find global type 'Array'.
error TS2318: Cannot find global type 'Function'.
error TS2318: Cannot find global type 'IArguments'.
error TS2318: Cannot find global type 'RegExp'.
error TS2318: Cannot find global type 'String'.
error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
error TS2552: Cannot find name 'Number'. Did you mean 'number'?
error TS2552: Cannot find name 'Object'. Did you mean 'object'?
privateWriteOnlyAccessorRead.ts(9,5): error TS2584: Cannot find name 'console'. Do you need to change your target library? Try changing the 'lib' compiler option to include 'dom'.
privateWriteOnlyAccessorRead.ts(9,17): error TS2806: Private accessor was defined without a getter.
privateWriteOnlyAccessorRead.ts(12,5): error TS2806: Private accessor was defined without a getter.
privateWriteOnlyAccessorRead.ts(17,13): error TS2806: Private accessor was defined without a getter.
privateWriteOnlyAccessorRead.ts(19,17): error TS2806: Private accessor was defined without a getter.
privateWriteOnlyAccessorRead.ts(22,18): error TS2806: Private accessor was defined without a getter.
privateWriteOnlyAccessorRead.ts(24,5): error TS2488: Type '[number, number, number]' must have a '[Symbol.iterator]()' method that returns an iterator.
privateWriteOnlyAccessorRead.ts(26,9): error TS2806: Private accessor was defined without a getter.
privateWriteOnlyAccessorRead.ts(27,12): error TS2806: Private accessor was defined without a getter.
privateWriteOnlyAccessorRead.ts(30,5): error TS2806: Private accessor was defined without a getter.


!!! error TS2318: Cannot find global type 'Array'.
!!! error TS2318: Cannot find global type 'Function'.
!!! error TS2318: Cannot find global type 'IArguments'.
!!! error TS2318: Cannot find global type 'RegExp'.
!!! error TS2318: Cannot find global type 'String'.
!!! error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
!!! error TS2552: Cannot find name 'Number'. Did you mean 'number'?
!!! error TS2552: Cannot find name 'Object'. Did you mean 'object'?
==== privateWriteOnlyAccessorRead.ts (10 errors) ====
    class Test {
      set #value(v: { foo: { bar: number } }) {}
      set #valueRest(v: number[]) {}
      set #valueOne(v: number) {}
      set #valueCompound(v: number) {}
    
      m() {
        const foo = { bar: 1 };
        console.log(this.#value); // error
        ~~~~~~~
!!! error TS2584: Cannot find name 'console'. Do you need to change your target library? Try changing the 'lib' compiler option to include 'dom'.
                    ~~~~~~~~~~~
!!! error TS2806: Private accessor was defined without a getter.
        this.#value = { foo }; // ok
        this.#value = { foo }; // ok
        this.#value.foo = foo; // error
        ~~~~~~~~~~~
!!! error TS2806: Private accessor was defined without a getter.
    
        ({ o: this.#value } = { o: { foo } }); //ok
        ({ ...this.#value } = { foo }); //ok
    
        ({ foo: this.#value.foo } = { foo }); //error
                ~~~~~~~~~~~
!!! error TS2806: Private accessor was defined without a getter.
        ({
          foo: { ...this.#value.foo },
                    ~~~~~~~~~~~
!!! error TS2806: Private accessor was defined without a getter.
        } = { foo }); //error
    
        let r = { o: this.#value }; //error
                     ~~~~~~~~~~~
!!! error TS2806: Private accessor was defined without a getter.
    
        [this.#valueOne, ...this.#valueRest] = [1, 2, 3];
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2488: Type '[number, number, number]' must have a '[Symbol.iterator]()' method that returns an iterator.
        let arr = [
            this.#valueOne,
            ~~~~~~~~~~~~~~
!!! error TS2806: Private accessor was defined without a getter.
            ...this.#valueRest
               ~~~~~~~~~~~~~~~
!!! error TS2806: Private accessor was defined without a getter.
        ];
    
        this.#valueCompound += 3;
        ~~~~~~~~~~~~~~~~~~~
!!! error TS2806: Private accessor was defined without a getter.
      }
    }
    new Test().m();
    