--- old.emitCompoundExponentiationAssignmentWithIndexingOnLHS1.js
+++ new.emitCompoundExponentiationAssignmentWithIndexingOnLHS1.js
@@= skipped -17, +17 lines =@@
 array3[j0++] **= array3[j1++] **= array3[j0++] **= 1;

 //// [emitCompoundExponentiationAssignmentWithIndexingOnLHS1.js]
-var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;
+var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _n, _o;
 var array0 = [1, 2, 3];
 var i0 = 0;
 (_a = array0)[_b = ++i0] = Math.pow(_a[_b], 2);
@@= skipped -12, +12 lines =@@
 (_g = array2)[_h = ++i2] = Math.pow(_g[_h], Math.pow(array2[++i2], 2));
 var array3 = [2, 2, 3];
 var j0 = 0, j1 = 1;
-(_o = array3)[_p = j0++] = Math.pow(_o[_p], (_l = array3)[_m = j1++] = Math.pow(_l[_m], (_j = array3)[_k = j0++] = Math.pow(_j[_k], 1)));
+(_n = array3)[_o = j0++] = Math.pow(_n[_o], (_l = array3)[_m = j1++] = Math.pow(_l[_m], (_j = array3)[_k = j0++] = Math.pow(_j[_k], 1)));