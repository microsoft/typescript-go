--- old.intersectionsAndEmptyObjects.errors.txt
+++ new.intersectionsAndEmptyObjects.errors.txt
@@= skipped -0, +0 lines =@@
-<no content>
+intersectionsAndEmptyObjects.ts(39,16): error TS2345: Argument of type '{}' is not assignable to parameter of type 'Dictionary'.
+  Index signature for type 'string' is missing in type '{}'.
+intersectionsAndEmptyObjects.ts(40,34): error TS2345: Argument of type '{}' is not assignable to parameter of type 'Dictionary'.
+  Index signature for type 'string' is missing in type '{}'.
+intersectionsAndEmptyObjects.ts(47,34): error TS2345: Argument of type '{}' is not assignable to parameter of type 'Dictionary'.
+  Index signature for type 'string' is missing in type '{}'.
+intersectionsAndEmptyObjects.ts(49,38): error TS2345: Argument of type '{}' is not assignable to parameter of type 'Dictionary'.
+  Index signature for type 'string' is missing in type '{}'.
+intersectionsAndEmptyObjects.ts(69,29): error TS2344: Type '{}' does not satisfy the constraint '{ [key: string]: boolean; }'.
+  Index signature for type 'string' is missing in type '{}'.
+intersectionsAndEmptyObjects.ts(70,37): error TS2344: Type '{}' does not satisfy the constraint '{ [key: string]: boolean; }'.
+  Index signature for type 'string' is missing in type '{}'.
+intersectionsAndEmptyObjects.ts(75,29): error TS2344: Type 'IUnknownChoiceList' does not satisfy the constraint '{ [key: string]: boolean; }'.
+  Index signature for type 'string' is missing in type 'IUnknownChoiceList'.
+intersectionsAndEmptyObjects.ts(76,37): error TS2344: Type 'IUnknownChoiceList' does not satisfy the constraint '{ [key: string]: boolean; }'.
+  Index signature for type 'string' is missing in type 'IUnknownChoiceList'.
+
+
+==== intersectionsAndEmptyObjects.ts (8 errors) ====
+    // Empty object type literals are removed from intersections types
+    // that contain other object types
+    
+    type A = { a: number };
+    type B = { b: string };
+    type C = {};
+    
+    let x01: A & B;
+    let x02: A & C;
+    let x03: B & C;
+    let x04: A & B & C;
+    let x05: string & C;
+    let x06: C & string;
+    let x07: C;
+    let x08: C & {};
+    let x09: {} & A & {} & B & {} & C & {};
+    
+    interface D {}
+    interface E {}
+    
+    let x10: A & D;
+    let x11: C & D;
+    let x12: A & B & C & D;
+    let x13: D & E;
+    let x14: A & B & C & D & E;
+    
+    // Repro from #20225
+    
+    type Dictionary = { [name: string]: string };
+    
+    const intersectDictionaries = <F1 extends Dictionary, F2 extends Dictionary>(
+      d1: F1,
+      d2: F2,
+    ): F1 & F2 => Object.assign({}, d1, d2);
+    
+    const testDictionary = <T extends Dictionary>(_value: T) => { };
+    
+    const d1 = {};
+    testDictionary(d1);
+                   ~~
+!!! error TS2345: Argument of type '{}' is not assignable to parameter of type 'Dictionary'.
+!!! error TS2345:   Index signature for type 'string' is missing in type '{}'.
+    const d2 = intersectDictionaries(d1, d1);
+                                     ~~
+!!! error TS2345: Argument of type '{}' is not assignable to parameter of type 'Dictionary'.
+!!! error TS2345:   Index signature for type 'string' is missing in type '{}'.
+    testDictionary(d2);
+    
+    const d3 = {
+      s: '',
+    };
+    testDictionary(d3);
+    const d4 = intersectDictionaries(d1, d3);
+                                     ~~
+!!! error TS2345: Argument of type '{}' is not assignable to parameter of type 'Dictionary'.
+!!! error TS2345:   Index signature for type 'string' is missing in type '{}'.
+    testDictionary(d4);
+    const d5 = intersectDictionaries(d3, d1);
+                                         ~~
+!!! error TS2345: Argument of type '{}' is not assignable to parameter of type 'Dictionary'.
+!!! error TS2345:   Index signature for type 'string' is missing in type '{}'.
+    testDictionary(d5);
+    const d6 = intersectDictionaries(d3, d3);
+    testDictionary(d6);
+    
+    // Repro from #27044
+    
+    type choices<IChoiceList extends {
+        [key: string]: boolean;
+    }> = IChoiceList & {
+        shoes:boolean;
+        food:boolean;
+    };
+    
+    type IMyChoiceList = {
+        car: true
+    };
+    
+    type IUnknownChoiceList = {};
+    
+    var defaultChoices: choices<{}>;
+                                ~~
+!!! error TS2344: Type '{}' does not satisfy the constraint '{ [key: string]: boolean; }'.
+!!! error TS2344:   Index signature for type 'string' is missing in type '{}'.
+    var defaultChoicesAndEmpty: choices<{} & {}>;
+                                        ~~~~~~~
+!!! error TS2344: Type '{}' does not satisfy the constraint '{ [key: string]: boolean; }'.
+!!! error TS2344:   Index signature for type 'string' is missing in type '{}'.
+    
+    var myChoices: choices<IMyChoiceList>;
+    var myChoicesAndEmpty: choices<IMyChoiceList & {}>;
+    
+    var unknownChoices: choices<IUnknownChoiceList>;
+                                ~~~~~~~~~~~~~~~~~~
+!!! error TS2344: Type 'IUnknownChoiceList' does not satisfy the constraint '{ [key: string]: boolean; }'.
+!!! error TS2344:   Index signature for type 'string' is missing in type 'IUnknownChoiceList'.
+    var unknownChoicesAndEmpty: choices<IUnknownChoiceList & {}>;
+                                        ~~~~~~~~~~~~~~~~~~~~~~~
+!!! error TS2344: Type 'IUnknownChoiceList' does not satisfy the constraint '{ [key: string]: boolean; }'.
+!!! error TS2344:   Index signature for type 'string' is missing in type 'IUnknownChoiceList'.
+    
+    // Repro from #38672
+    
+    type Foo1 = { x: string } & { [x: number]: Foo1 };
+    type Foo2 = { x: string } & { [K in number]: Foo2 };
+    
+    // Repro from #40239
+    
+    declare function mock<M>(_: Promise<M>): {} & M;
+    mock(import('./ex'))
+    
+==== ex.d.ts (0 errors) ====
+    export {}
+    