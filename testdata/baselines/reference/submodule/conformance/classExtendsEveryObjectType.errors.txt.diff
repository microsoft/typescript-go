--- old.classExtendsEveryObjectType.errors.txt
+++ new.classExtendsEveryObjectType.errors.txt
@@= skipped -0, +0 lines =@@
 classExtendsEveryObjectType.ts(4,17): error TS2689: Cannot extend an interface 'I'. Did you mean 'implements'?
-classExtendsEveryObjectType.ts(6,18): error TS2507: Type '{ foo: any; }' is not a constructor function type.
+classExtendsEveryObjectType.ts(6,18): error TS2507: Type '{ foo: error; }' is not a constructor function type.
 classExtendsEveryObjectType.ts(6,25): error TS2693: 'string' only refers to a type, but is being used as a value here.
 classExtendsEveryObjectType.ts(6,31): error TS1005: ',' expected.
 classExtendsEveryObjectType.ts(8,18): error TS2507: Type '{ foo: string; }' is not a constructor function type.
-classExtendsEveryObjectType.ts(11,18): error TS2507: Type 'typeof M' is not a constructor function type.
+classExtendsEveryObjectType.ts(11,18): error TS2507: Type '{ x: number; }' is not a constructor function type.
 classExtendsEveryObjectType.ts(14,18): error TS2507: Type '() => void' is not a constructor function type.
 classExtendsEveryObjectType.ts(16,18): error TS2507: Type 'undefined[]' is not a constructor function type.
 
@@= skipped -17, +17 lines =@@
     
     class C2 extends { foo: string; } { } // error
                      ~~~~~~~~~~~~~~~~
-!!! error TS2507: Type '{ foo: any; }' is not a constructor function type.
+!!! error TS2507: Type '{ foo: error; }' is not a constructor function type.
                             ~~~~~~
 !!! error TS2693: 'string' only refers to a type, but is being used as a value here.
                                   ~
@@= skipped -13, +13 lines =@@
     module M { export var x = 1; }
     class C4 extends M { } // error
                      ~
-!!! error TS2507: Type 'typeof M' is not a constructor function type.
+!!! error TS2507: Type '{ x: number; }' is not a constructor function type.
     
     function foo() { }
     class C5 extends foo { } // error
