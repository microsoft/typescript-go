--- old.typeGuardsInModule.types
+++ new.typeGuardsInModule.types
@@= skipped -23, +23 lines =@@
 >num : number
 >typeof var1 === "string" && var1.length : number
 >typeof var1 === "string" : boolean
->typeof var1 : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof var1 : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >var1 : string | number
 >"string" : "string"
 >var1.length : number
@@= skipped -13, +13 lines =@@
 
     if (typeof var2 === "string") {
 >typeof var2 === "string" : boolean
->typeof var2 : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof var2 : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >var2 : string | number
 >"string" : "string"
 
@@= skipped -24, +24 lines =@@
 
     if (typeof var3 === "string") {
 >typeof var3 === "string" : boolean
->typeof var3 : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof var3 : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >var3 : string | number
 >"string" : "string"
 
@@= skipped -35, +35 lines =@@
 >num : number
 >typeof var1 === "string" && var1.length : number
 >typeof var1 === "string" : boolean
->typeof var1 : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof var1 : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >var1 : string | number
 >"string" : "string"
 >var1.length : number
@@= skipped -13, +13 lines =@@
 >num : number
 >typeof var2 === "string" && var2.length : number
 >typeof var2 === "string" : boolean
->typeof var2 : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof var2 : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >var2 : string | number
 >"string" : "string"
 >var2.length : number
@@= skipped -13, +13 lines =@@
 >strOrNum : string | number
 >typeof var3 === "string" && var3 : string
 >typeof var3 === "string" : boolean
->typeof var3 : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof var3 : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >var3 : string | number
 >"string" : "string"
 >var3 : string
@@= skipped -11, +11 lines =@@
 
         if (typeof var4 === "string") {
 >typeof var4 === "string" : boolean
->typeof var4 : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof var4 : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >var4 : string | number
 >"string" : "string"
 
@@= skipped -24, +24 lines =@@
 
         if (typeof var5 === "string") {
 >typeof var5 === "string" : boolean
->typeof var5 : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof var5 : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >var5 : string | number
 >"string" : "string"
 
@@= skipped -28, +28 lines =@@
 >num : number
 >typeof var1 === "string" && var1.length : number
 >typeof var1 === "string" : boolean
->typeof var1 : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof var1 : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >var1 : string | number
 >"string" : "string"
 >var1.length : number
@@= skipped -13, +13 lines =@@
 
     if (typeof var2 === "string") {
 >typeof var2 === "string" : boolean
->typeof var2 : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof var2 : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >var2 : string | number
 >"string" : "string"
 
@@= skipped -24, +24 lines =@@
 
     if (typeof var3 === "string") {
 >typeof var3 === "string" : boolean
->typeof var3 : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof var3 : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >var3 : string | number
 >"string" : "string"
 
