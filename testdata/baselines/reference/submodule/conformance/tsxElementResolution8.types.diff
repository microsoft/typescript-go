--- old.tsxElementResolution8.types
+++ new.tsxElementResolution8.types
@@= skipped -1, +1 lines =@@
 
 === file.tsx ===
 declare module JSX {
+>JSX : any
+
 	interface Element { }
+>Element : Element
+
 	interface IntrinsicElements { }
+>IntrinsicElements : IntrinsicElements
 }
 
 // Error
 var Div = 3;
 >Div : number
->    : ^^^^^^
 >3 : 3
->  : ^
 
 <Div />;
-><Div /> : JSX.Element
->        : ^^^^^^^^^^^
+><Div /> : any
 >Div : number
->    : ^^^^^^
 
 // OK
 function Fact(): any { return null; }
 >Fact : () => any
->     : ^^^^^^   
 
 <Fact />
-><Fact /> : JSX.Element
->         : ^^^^^^^^^^^
+><Fact /> : any
 >Fact : () => any
->     : ^^^^^^   
 
 // Error
 function Fnum(): number{ return 42; }
 >Fnum : () => number
->     : ^^^^^^      
 >42 : 42
->   : ^^
 
 <Fnum />
-><Fnum /> : JSX.Element
->         : ^^^^^^^^^^^
+><Fnum /> : any
 >Fnum : () => number
->     : ^^^^^^      
 
 interface Obj1 {
+>Obj1 : Obj1
+
 	new(): {};
 	(): number;
 }
 var Obj1: Obj1;
 >Obj1 : Obj1
->     : ^^^^
 
 <Obj1 />; // OK, prefer construct signatures
-><Obj1 /> : JSX.Element
->         : ^^^^^^^^^^^
+><Obj1 /> : any
 >Obj1 : Obj1
->     : ^^^^
 
 interface Obj2 {
+>Obj2 : Obj2
+
 	(): number;
 }
 var Obj2: Obj2;
 >Obj2 : Obj2
->     : ^^^^
 
 <Obj2 />; // Error
-><Obj2 /> : JSX.Element
->         : ^^^^^^^^^^^
+><Obj2 /> : any
 >Obj2 : Obj2
->     : ^^^^
 
 interface Obj3 {
+>Obj3 : Obj3
 }
 var Obj3: Obj3;
 >Obj3 : Obj3
->     : ^^^^
 
 <Obj3 />; // Error
-><Obj3 /> : JSX.Element
->         : ^^^^^^^^^^^
+><Obj3 /> : any
 >Obj3 : Obj3
->     : ^^^^
 
