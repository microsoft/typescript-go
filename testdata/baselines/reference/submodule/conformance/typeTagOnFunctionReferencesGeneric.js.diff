--- old.typeTagOnFunctionReferencesGeneric.js
+++ new.typeTagOnFunctionReferencesGeneric.js
@@= skipped -19, +19 lines =@@

 //// [typeTagOnFunctionReferencesGeneric.js]
 "use strict";
-/**
- * @typedef {<T>(m : T) => T} IFn
- */
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.inJs = inJs;
+/**
+ * @typedef {<T>(m : T) => T} IFn
+ */
 /**@type {IFn}*/
 function inJs(l) {
     return l;
@@= skipped -18, +18 lines =@@


 //// [typeTagOnFunctionReferencesGeneric.d.ts]
-export function inJs<T>(m: T): T;
 export type IFn = <T>(m: T) => T;
+/**
+ * @typedef {<T>(m : T) => T} IFn
+ */
+/**@type {IFn}*/
+export declare function inJs(l: T): T;
+
+
+//// [DtsFileErrors]
+
+
+out/typeTagOnFunctionReferencesGeneric.d.ts(6,33): error TS2304: Cannot find name 'T'.
+out/typeTagOnFunctionReferencesGeneric.d.ts(6,37): error TS2304: Cannot find name 'T'.
+
+
+==== out/typeTagOnFunctionReferencesGeneric.d.ts (2 errors) ====
+    export type IFn = <T>(m: T) => T;
+    /**
+     * @typedef {<T>(m : T) => T} IFn
+     */
+    /**@type {IFn}*/
+    export declare function inJs(l: T): T;
+                                    ~
+!!! error TS2304: Cannot find name 'T'.
+                                        ~
+!!! error TS2304: Cannot find name 'T'.
+    