--- old.namedTupleMembersErrors.errors.txt
+++ new.namedTupleMembersErrors.errors.txt
@@= skipped -0, +0 lines =@@
-namedTupleMembersErrors.ts(10,29): error TS5086: A labeled tuple element is declared as optional with a question mark after the name and before the colon, rather than after the type.
-namedTupleMembersErrors.ts(12,46): error TS5087: A labeled tuple element is declared as rest with a '...' before the name, rather than before the type.
-namedTupleMembersErrors.ts(14,49): error TS5087: A labeled tuple element is declared as rest with a '...' before the name, rather than before the type.
-namedTupleMembersErrors.ts(14,52): error TS17019: '?' at the end of a type is not valid TypeScript syntax. Did you mean to write 'string[]'?
-namedTupleMembersErrors.ts(16,39): error TS5085: A tuple member cannot be both optional and rest.
+namedTupleMembersErrors.ts(14,60): error TS1005: ',' expected.
+namedTupleMembersErrors.ts(14,61): error TS1110: Type expected.
 namedTupleMembersErrors.ts(18,44): error TS2574: A rest element type must be an array type.
 namedTupleMembersErrors.ts(20,13): error TS2456: Type alias 'RecusiveRestUnlabeled' circularly references itself.
 namedTupleMembersErrors.ts(21,13): error TS2456: Type alias 'RecusiveRest' circularly references itself.
 
 
-==== namedTupleMembersErrors.ts (8 errors) ====
+==== namedTupleMembersErrors.ts (5 errors) ====
     export type Segment1 = [length: number, number];
     export type Segment2 = [number, size: number];
     
@@= skipped -18, +15 lines =@@
     export type Pair2 = [any, last?: any]; 
     
     export type Opt = [element: string?]; // question mark on element disallowed
-                                ~~~~~~~
-!!! error TS5086: A labeled tuple element is declared as optional with a question mark after the name and before the colon, rather than after the type.
     
     export type Trailing = [first: string, rest: ...string[]]; // dots on element disallowed
-                                                 ~~~~~~~~~~~
-!!! error TS5087: A labeled tuple element is declared as rest with a '...' before the name, rather than before the type.
     
     export type OptTrailing = [first: string, rest: ...string[]?]; // dots+question on element disallowed
-                                                    ~~~~~~~~~~~~
-!!! error TS5087: A labeled tuple element is declared as rest with a '...' before the name, rather than before the type.
-                                                       ~~~~~~~~~
-!!! error TS17019: '?' at the end of a type is not valid TypeScript syntax. Did you mean to write 'string[]'?
+                                                               ~
+!!! error TS1005: ',' expected.
+                                                                ~
+!!! error TS1110: Type expected.
     
     export type OptRest = [first: string, ...rest?: string[]]; // rest+optional disallowed
-                                          ~~~~~~~~~~~~~~~~~~
-!!! error TS5085: A tuple member cannot be both optional and rest.
     
     export type NonArrayRest = [first: string, ...rest: number]; // non-arraylike rest, disallowed
                                                ~~~~~~~~~~~~~~~
