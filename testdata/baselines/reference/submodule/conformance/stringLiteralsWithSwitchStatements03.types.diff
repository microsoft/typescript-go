--- old.stringLiteralsWithSwitchStatements03.types
+++ new.stringLiteralsWithSwitchStatements03.types
@@= skipped -4, +4 lines =@@
 >x : "foo"
 
 let y: "foo" | "bar"; 
->y : "foo" | "bar"
+>y : "bar" | "foo"
 
 let z: "bar";
 >z : "bar"
@@= skipped -12, +12 lines =@@
 >x : "foo"
 
     case randBool() ? "foo" : "baz":
->randBool() ? "foo" : "baz" : "foo" | "baz"
+>randBool() ? "foo" : "baz" : "baz" | "foo"
 >randBool() : boolean
 >randBool : () => boolean
 >"foo" : "foo"
@@= skipped -29, +29 lines =@@
     case (x, y, ("baz")):
 >(x, y, ("baz")) : "baz"
 >x, y, ("baz") : "baz"
->x, y : "foo" | "bar"
+>x, y : "bar" | "foo"
 >x : "foo"
->y : "foo" | "bar"
+>y : "bar" | "foo"
 >("baz") : "baz"
 >"baz" : "baz"
 
@@= skipped -10, +10 lines =@@
 >x : never
 
         y;
->y : "foo" | "bar"
+>y : "bar" | "foo"
 
         break;
     case (("foo" || ("bar"))):
->(("foo" || ("bar"))) : "foo" | "bar"
->("foo" || ("bar")) : "foo" | "bar"
->"foo" || ("bar") : "foo" | "bar"
+>(("foo" || ("bar"))) : "bar" | "foo"
+>("foo" || ("bar")) : "bar" | "foo"
+>"foo" || ("bar") : "bar" | "foo"
 >"foo" : "foo"
 >("bar") : "bar"
 >"bar" : "bar"
