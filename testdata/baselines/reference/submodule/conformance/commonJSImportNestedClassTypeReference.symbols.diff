--- old.commonJSImportNestedClassTypeReference.symbols
+++ new.commonJSImportNestedClassTypeReference.symbols
@@= skipped -3, +3 lines =@@
 const { K } = require("./mod1");
 >K : Symbol(K, Decl(main.js, 0, 7))
 >require : Symbol(require)
->"./mod1" : Symbol("mod1", Decl(mod1.js, 0, 0))
+>"./mod1" : Symbol("./mod1", Decl(mod1.js, 0, 0))

 /** @param {K} k */
 function f(k) {
@@= skipped -8, +8 lines =@@
 >k : Symbol(k, Decl(main.js, 2, 11))

     k.values()
->k.values : Symbol(K.values, Decl(mod1.js, 1, 13))
 >k : Symbol(k, Decl(main.js, 2, 11))
->values : Symbol(K.values, Decl(mod1.js, 1, 13))
 }

 === mod1.js ===
 var NS = {}
->NS : Symbol(NS, Decl(mod1.js, 0, 3), Decl(mod1.js, 0, 11))
+>NS : Symbol(NS, Decl(mod1.js, 0, 3))

 NS.K =class {
 >NS.K : Symbol(K, Decl(mod1.js, 0, 11))
->NS : Symbol(NS, Decl(mod1.js, 0, 3), Decl(mod1.js, 0, 11))
+>NS : Symbol(NS, Decl(mod1.js, 0, 3))
 >K : Symbol(K, Decl(mod1.js, 0, 11))

     values() {
@@= skipped -19, +17 lines =@@

         return new NS.K()
 >NS.K : Symbol(K, Decl(mod1.js, 0, 11))
->NS : Symbol(NS, Decl(mod1.js, 0, 3), Decl(mod1.js, 0, 11))
+>NS : Symbol(NS, Decl(mod1.js, 0, 3))
 >K : Symbol(K, Decl(mod1.js, 0, 11))
     }
 }
 exports.K = NS.K;
 >exports.K : Symbol(K, Decl(mod1.js, 5, 1))
->exports : Symbol(K, Decl(mod1.js, 5, 1))
+>exports : Symbol("./mod1", Decl(mod1.js, 0, 0))
 >K : Symbol(K, Decl(mod1.js, 5, 1))
 >NS.K : Symbol(K, Decl(mod1.js, 0, 11))
->NS : Symbol(NS, Decl(mod1.js, 0, 3), Decl(mod1.js, 0, 11))
+>NS : Symbol(NS, Decl(mod1.js, 0, 3))
 >K : Symbol(K, Decl(mod1.js, 0, 11))
