//// [tests/cases/conformance/jsdoc/declarations/jsDeclarationsFunctionsCjs.ts] ////

=== index.js ===
module.exports.a = function a() {}
>module.exports.a = function a() {} : () => void
>module.exports.a : () => void
>module.exports : typeof import(".")
>module : { "\"index\"": typeof import("."); }
>exports : typeof import(".")
>a : () => void
>function a() {} : () => void
>a : () => void

module.exports.b = function b() {}
>module.exports.b = function b() {} : () => void
>module.exports.b : () => void
>module.exports : typeof import(".")
>module : { "\"index\"": typeof import("."); }
>exports : typeof import(".")
>b : () => void
>function b() {} : () => void
>b : () => void

module.exports.b.cat = "cat";
>module.exports.b.cat = "cat" : "cat"
>module.exports.b.cat : any
>module.exports.b : () => void
>module.exports : typeof import(".")
>module : { "\"index\"": typeof import("."); }
>exports : typeof import(".")
>b : () => void
>cat : any
>"cat" : "cat"

module.exports.c = function c() {}
>module.exports.c = function c() {} : () => void
>module.exports.c : () => void
>module.exports : typeof import(".")
>module : { "\"index\"": typeof import("."); }
>exports : typeof import(".")
>c : () => void
>function c() {} : () => void
>c : () => void

module.exports.c.Cls = class {}
>module.exports.c.Cls = class {} : typeof Cls
>module.exports.c.Cls : any
>module.exports.c : () => void
>module.exports : typeof import(".")
>module : { "\"index\"": typeof import("."); }
>exports : typeof import(".")
>c : () => void
>Cls : any
>class {} : typeof Cls

/**
 * @param {number} a
 * @param {number} b
 * @return {string} 
 */
module.exports.d = function d(a, b) { return /** @type {*} */(null); }
>module.exports.d = function d(a, b) { return /** @type {*} */(null); } : (a: any, b: any) => any
>module.exports.d : (a: any, b: any) => any
>module.exports : typeof import(".")
>module : { "\"index\"": typeof import("."); }
>exports : typeof import(".")
>d : (a: any, b: any) => any
>function d(a, b) { return /** @type {*} */(null); } : (a: any, b: any) => any
>d : (a: any, b: any) => any
>a : any
>b : any
>(null) : any

/**
 * @template T,U
 * @param {T} a
 * @param {U} b
 * @return {T & U} 
 */
module.exports.e = function e(a, b) { return /** @type {*} */(null); }
>module.exports.e = function e(a, b) { return /** @type {*} */(null); } : (a: any, b: any) => any
>module.exports.e : (a: any, b: any) => any
>module.exports : typeof import(".")
>module : { "\"index\"": typeof import("."); }
>exports : typeof import(".")
>e : (a: any, b: any) => any
>function e(a, b) { return /** @type {*} */(null); } : (a: any, b: any) => any
>e : (a: any, b: any) => any
>a : any
>b : any
>(null) : any

/**
 * @template T
 * @param {T} a
 */
module.exports.f = function f(a) {
>module.exports.f = function f(a) {    return a;} : (a: any) => any
>module.exports.f : (a: any) => any
>module.exports : typeof import(".")
>module : { "\"index\"": typeof import("."); }
>exports : typeof import(".")
>f : (a: any) => any
>function f(a) {    return a;} : (a: any) => any
>f : (a: any) => any
>a : any

    return a;
>a : any
}
module.exports.f.self = module.exports.f;
>module.exports.f.self = module.exports.f : (a: any) => any
>module.exports.f.self : any
>module.exports.f : (a: any) => any
>module.exports : typeof import(".")
>module : { "\"index\"": typeof import("."); }
>exports : typeof import(".")
>f : (a: any) => any
>self : any
>module.exports.f : (a: any) => any
>module.exports : typeof import(".")
>module : { "\"index\"": typeof import("."); }
>exports : typeof import(".")
>f : (a: any) => any

/**
 * @param {{x: string}} a
 * @param {{y: typeof module.exports.b}} b
 */
function g(a, b) {
>g : (a: { x: string; }, b: { y: any; }) => any
>a : { x: string; }
>b : { y: any; }

    return a.x && b.y();
>a.x && b.y() : any
>a.x : string
>a : { x: string; }
>x : string
>b.y() : any
>b.y : any
>b : { y: any; }
>y : any
}

module.exports.g = g;
>module.exports.g = g : (a: { x: string; }, b: { y: any; }) => any
>module.exports.g : (a: { x: string; }, b: { y: any; }) => any
>module.exports : typeof import(".")
>module : { "\"index\"": typeof import("."); }
>exports : typeof import(".")
>g : (a: { x: string; }, b: { y: any; }) => any
>g : (a: { x: string; }, b: { y: any; }) => any

/**
 * @param {{x: string}} a
 * @param {{y: typeof module.exports.b}} b
 */
function hh(a, b) {
>hh : (a: { x: string; }, b: { y: any; }) => any
>a : { x: string; }
>b : { y: any; }

    return a.x && b.y();
>a.x && b.y() : any
>a.x : string
>a : { x: string; }
>x : string
>b.y() : any
>b.y : any
>b : { y: any; }
>y : any
}

module.exports.h = hh;
>module.exports.h = hh : (a: { x: string; }, b: { y: any; }) => any
>module.exports.h : (a: { x: string; }, b: { y: any; }) => any
>module.exports : typeof import(".")
>module : { "\"index\"": typeof import("."); }
>exports : typeof import(".")
>h : (a: { x: string; }, b: { y: any; }) => any
>hh : (a: { x: string; }, b: { y: any; }) => any

module.exports.i = function i() {}
>module.exports.i = function i() {} : () => void
>module.exports.i : () => void
>module.exports : typeof import(".")
>module : { "\"index\"": typeof import("."); }
>exports : typeof import(".")
>i : () => void
>function i() {} : () => void
>i : () => void

module.exports.ii = module.exports.i;
>module.exports.ii = module.exports.i : () => void
>module.exports.ii : () => void
>module.exports : typeof import(".")
>module : { "\"index\"": typeof import("."); }
>exports : typeof import(".")
>ii : () => void
>module.exports.i : () => void
>module.exports : typeof import(".")
>module : { "\"index\"": typeof import("."); }
>exports : typeof import(".")
>i : () => void

// note that this last one doesn't make much sense in cjs, since exports aren't hoisted bindings
module.exports.jj = module.exports.j;
>module.exports.jj = module.exports.j : () => void
>module.exports.jj : () => void
>module.exports : typeof import(".")
>module : { "\"index\"": typeof import("."); }
>exports : typeof import(".")
>jj : () => void
>module.exports.j : () => void
>module.exports : typeof import(".")
>module : { "\"index\"": typeof import("."); }
>exports : typeof import(".")
>j : () => void

module.exports.j = function j() {}
>module.exports.j = function j() {} : () => void
>module.exports.j : () => void
>module.exports : typeof import(".")
>module : { "\"index\"": typeof import("."); }
>exports : typeof import(".")
>j : () => void
>function j() {} : () => void
>j : () => void

