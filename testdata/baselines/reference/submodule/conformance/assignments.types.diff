--- old.assignments.types
+++ new.assignments.types
@@= skipped -10, +10 lines =@@
 //  Assign to an interface
 
 module M { }
+>M : any
+
 M = null; // Error
 >M = null : null
->         : ^^^^
 >M : any
->  : ^^^
 
 class C { }
 >C : C
->  : ^
 
 C = null; // Error
 >C = null : null
->         : ^^^^
 >C : any
->  : ^^^
 
 enum E { A }
->E : E
->  : ^
+>E : E.A
 >A : E.A
->  : ^^^
 
 E = null; // Error
 >E = null : null
->         : ^^^^
 >E : any
->  : ^^^
 
 E.A = null; // OK per spec, Error per implementation (509581)
 >E.A = null : null
->           : ^^^^
 >E.A : any
->    : ^^^
 >E : typeof E
->  : ^^^^^^^^
 >A : any
->  : ^^^
 
 function fn() { }
 >fn : () => void
->   : ^^^^^^^^^^
 
 fn = null; // Should be error
 >fn = null : null
->          : ^^^^
 >fn : any
->   : ^^^
 
 var v;
 >v : any
->  : ^^^
 
 v = null; // OK
 >v = null : null
->         : ^^^^
 >v : any
->  : ^^^
 
 function fn2(p) {
 >fn2 : (p: any) => void
->    : ^ ^^^^^^^^^^^^^^
 >p : any
->  : ^^^
 
     p = null; // OK
 >p = null : null
->         : ^^^^
 >p : any
->  : ^^^
 }
 
 interface I { }
+>I : I
+
 I = null; // Error
 >I = null : null
->         : ^^^^
 >I : any
->  : ^^^
 
