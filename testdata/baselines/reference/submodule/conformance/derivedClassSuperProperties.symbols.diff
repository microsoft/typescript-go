--- old.derivedClassSuperProperties.symbols
+++ new.derivedClassSuperProperties.symbols
@@= skipped -10, +10 lines =@@
 >a : Symbol(a, Decl(derivedClassSuperProperties.ts, 3, 16))
 
     receivesAnything(param?) { }
->receivesAnything : Symbol(Base.receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
+>receivesAnything : Symbol(receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
 >param : Symbol(param, Decl(derivedClassSuperProperties.ts, 5, 21))
 }
 
@@= skipped -9, +9 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
     prop = true;
->prop : Symbol(Derived1.prop, Decl(derivedClassSuperProperties.ts, 8, 29))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 8, 29))
 
     constructor() {
         super.receivesAnything();
->super.receivesAnything : Symbol(Base.receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
+>super.receivesAnything : Symbol(receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
 >super : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
->receivesAnything : Symbol(Base.receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
+>receivesAnything : Symbol(receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
 
         super();
 >super : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
@@= skipped -18, +18 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
     prop = true;
->prop : Symbol(Derived2.prop, Decl(derivedClassSuperProperties.ts, 16, 29))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 16, 29))
 
     constructor() {
         super.receivesAnything(this);
->super.receivesAnything : Symbol(Base.receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
+>super.receivesAnything : Symbol(receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
 >super : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
->receivesAnything : Symbol(Base.receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
+>receivesAnything : Symbol(receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
 >this : Symbol(Derived2, Decl(derivedClassSuperProperties.ts, 14, 1))
 
         super();
@@= skipped -19, +19 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
     prop = true;
->prop : Symbol(Derived3.prop, Decl(derivedClassSuperProperties.ts, 24, 29))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 24, 29))
 
     constructor() {
         super.receivesAnything();
->super.receivesAnything : Symbol(Base.receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
+>super.receivesAnything : Symbol(receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
 >super : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
->receivesAnything : Symbol(Base.receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
+>receivesAnything : Symbol(receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
 
         super(this);
 >super : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
@@= skipped -19, +19 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
     prop = true;
->prop : Symbol(Derived4.prop, Decl(derivedClassSuperProperties.ts, 32, 29))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 32, 29))
 
     constructor() {
         super.receivesAnything(this);
->super.receivesAnything : Symbol(Base.receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
+>super.receivesAnything : Symbol(receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
 >super : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
->receivesAnything : Symbol(Base.receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
+>receivesAnything : Symbol(receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
 >this : Symbol(Derived4, Decl(derivedClassSuperProperties.ts, 30, 1))
 
         super(this);
@@= skipped -20, +20 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
     prop = true;
->prop : Symbol(Derived5.prop, Decl(derivedClassSuperProperties.ts, 40, 29))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 40, 29))
 
     constructor() {
         super();
 >super : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
         super.receivesAnything();
->super.receivesAnything : Symbol(Base.receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
+>super.receivesAnything : Symbol(receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
 >super : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
->receivesAnything : Symbol(Base.receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
+>receivesAnything : Symbol(receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
     }
 }
 
@@= skipped -18, +18 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
     prop = true;
->prop : Symbol(Derived6.prop, Decl(derivedClassSuperProperties.ts, 48, 29))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 48, 29))
 
     constructor() {
         super(this);
@@= skipped -8, +8 lines =@@
 >this : Symbol(Derived6, Decl(derivedClassSuperProperties.ts, 46, 1))
 
         super.receivesAnything();
->super.receivesAnything : Symbol(Base.receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
+>super.receivesAnything : Symbol(receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
 >super : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
->receivesAnything : Symbol(Base.receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
+>receivesAnything : Symbol(receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
     }
 }
 
@@= skipped -11, +11 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
     prop = true;
->prop : Symbol(Derived7.prop, Decl(derivedClassSuperProperties.ts, 56, 29))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 56, 29))
 
     constructor() {
         super();
 >super : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
         super.receivesAnything(this);
->super.receivesAnything : Symbol(Base.receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
+>super.receivesAnything : Symbol(receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
 >super : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
->receivesAnything : Symbol(Base.receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
+>receivesAnything : Symbol(receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
 >this : Symbol(Derived7, Decl(derivedClassSuperProperties.ts, 54, 1))
     }
 }
@@= skipped -19, +19 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
     prop = true;
->prop : Symbol(Derived8.prop, Decl(derivedClassSuperProperties.ts, 64, 29))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 64, 29))
 
     constructor() {
         super(this);
@@= skipped -8, +8 lines =@@
 >this : Symbol(Derived8, Decl(derivedClassSuperProperties.ts, 62, 1))
 
         super.receivesAnything(this);
->super.receivesAnything : Symbol(Base.receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
+>super.receivesAnything : Symbol(receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
 >super : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
->receivesAnything : Symbol(Base.receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
+>receivesAnything : Symbol(receivesAnything, Decl(derivedClassSuperProperties.ts, 3, 23))
 >this : Symbol(Derived8, Decl(derivedClassSuperProperties.ts, 62, 1))
     }
 }
@@= skipped -12, +12 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
     prop = true;
->prop : Symbol(DerivedWithArrowFunction.prop, Decl(derivedClassSuperProperties.ts, 72, 45))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 72, 45))
 
     constructor() {
         (() => this)();
@@= skipped -16, +16 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
     prop = true;
->prop : Symbol(DerivedWithArrowFunctionParameter.prop, Decl(derivedClassSuperProperties.ts, 80, 54))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 80, 54))
 
     constructor() {
         const lambda = (param = this) => {};
@@= skipped -18, +18 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
     prop = true;
->prop : Symbol(DerivedWithDecoratorOnClass.prop, Decl(derivedClassSuperProperties.ts, 88, 48))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 88, 48))
 
     constructor() {
         @decorate(this)
@@= skipped -20, +20 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
     prop = true;
->prop : Symbol(DerivedWithDecoratorOnClassMethod.prop, Decl(derivedClassSuperProperties.ts, 98, 54))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 98, 54))
 
     constructor() {
         class InnerClass {
@@= skipped -11, +11 lines =@@
 >this : Symbol(DerivedWithDecoratorOnClassMethod, Decl(derivedClassSuperProperties.ts, 96, 1))
 
             innerMethod() { }
->innerMethod : Symbol(InnerClass.innerMethod, Decl(derivedClassSuperProperties.ts, 101, 26))
+>innerMethod : Symbol(innerMethod, Decl(derivedClassSuperProperties.ts, 101, 26))
         }
 
         super();
@@= skipped -13, +13 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
     prop = true;
->prop : Symbol(DerivedWithDecoratorOnClassProperty.prop, Decl(derivedClassSuperProperties.ts, 110, 56))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 110, 56))
 
     constructor() {
         class InnerClass {
@@= skipped -11, +11 lines =@@
 >this : Symbol(DerivedWithDecoratorOnClassProperty, Decl(derivedClassSuperProperties.ts, 108, 1))
 
             innerProp = true;
->innerProp : Symbol(InnerClass.innerProp, Decl(derivedClassSuperProperties.ts, 113, 26))
+>innerProp : Symbol(innerProp, Decl(derivedClassSuperProperties.ts, 113, 26))
         }
 
         super();
@@= skipped -13, +13 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
     prop = true;
->prop : Symbol(DerivedWithFunctionDeclaration.prop, Decl(derivedClassSuperProperties.ts, 122, 51))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 122, 51))
 
     constructor() {
         function declaration() {
@@= skipped -18, +18 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
     prop = true;
->prop : Symbol(DerivedWithFunctionDeclarationAndThisParam.prop, Decl(derivedClassSuperProperties.ts, 132, 63))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 132, 63))
 
     constructor() {
         function declaration(param = this) {
@@= skipped -20, +20 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
     prop = true;
->prop : Symbol(DerivedWithFunctionExpression.prop, Decl(derivedClassSuperProperties.ts, 142, 50))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 142, 50))
 
     constructor() {
         (function () {
@@= skipped -16, +16 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
     prop = true;
->prop : Symbol(DerivedWithParenthesis.prop, Decl(derivedClassSuperProperties.ts, 152, 43))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 152, 43))
 
     constructor() {
         (super());
@@= skipped -13, +13 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
     prop = true;
->prop : Symbol(DerivedWithParenthesisAfterStatement.prop, Decl(derivedClassSuperProperties.ts, 159, 57))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 159, 57))
 
     constructor() {
         this.prop;
->this.prop : Symbol(DerivedWithParenthesisAfterStatement.prop, Decl(derivedClassSuperProperties.ts, 159, 57))
+>this.prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 159, 57))
 >this : Symbol(DerivedWithParenthesisAfterStatement, Decl(derivedClassSuperProperties.ts, 157, 1))
->prop : Symbol(DerivedWithParenthesisAfterStatement.prop, Decl(derivedClassSuperProperties.ts, 159, 57))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 159, 57))
 
         (super());
 >super : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
@@= skipped -18, +18 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
     prop = true;
->prop : Symbol(DerivedWithParenthesisBeforeStatement.prop, Decl(derivedClassSuperProperties.ts, 167, 58))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 167, 58))
 
     constructor() {
         (super());
 >super : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
         this.prop;
->this.prop : Symbol(DerivedWithParenthesisBeforeStatement.prop, Decl(derivedClassSuperProperties.ts, 167, 58))
+>this.prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 167, 58))
 >this : Symbol(DerivedWithParenthesisBeforeStatement, Decl(derivedClassSuperProperties.ts, 165, 1))
->prop : Symbol(DerivedWithParenthesisBeforeStatement.prop, Decl(derivedClassSuperProperties.ts, 167, 58))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 167, 58))
     }
 }
 
@@= skipped -18, +18 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
     prop = true;
->prop : Symbol(DerivedWithClassDeclaration.prop, Decl(derivedClassSuperProperties.ts, 175, 48))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 175, 48))
 
     constructor() {
         class InnerClass {
 >InnerClass : Symbol(InnerClass, Decl(derivedClassSuperProperties.ts, 177, 19))
 
             private method() {
->method : Symbol(InnerClass.method, Decl(derivedClassSuperProperties.ts, 178, 26))
+>method : Symbol(method, Decl(derivedClassSuperProperties.ts, 178, 26))
 
                 return this;
 >this : Symbol(InnerClass, Decl(derivedClassSuperProperties.ts, 177, 19))
             }
             private property = 7;
->property : Symbol(InnerClass.property, Decl(derivedClassSuperProperties.ts, 181, 13))
+>property : Symbol(property, Decl(derivedClassSuperProperties.ts, 181, 13))
 
             constructor() {
                 this.property;
->this.property : Symbol(InnerClass.property, Decl(derivedClassSuperProperties.ts, 181, 13))
+>this.property : Symbol(property, Decl(derivedClassSuperProperties.ts, 181, 13))
 >this : Symbol(InnerClass, Decl(derivedClassSuperProperties.ts, 177, 19))
->property : Symbol(InnerClass.property, Decl(derivedClassSuperProperties.ts, 181, 13))
+>property : Symbol(property, Decl(derivedClassSuperProperties.ts, 181, 13))
 
                 this.method();
->this.method : Symbol(InnerClass.method, Decl(derivedClassSuperProperties.ts, 178, 26))
+>this.method : Symbol(method, Decl(derivedClassSuperProperties.ts, 178, 26))
 >this : Symbol(InnerClass, Decl(derivedClassSuperProperties.ts, 177, 19))
->method : Symbol(InnerClass.method, Decl(derivedClassSuperProperties.ts, 178, 26))
+>method : Symbol(method, Decl(derivedClassSuperProperties.ts, 178, 26))
             }
         }
         super();
@@= skipped -37, +37 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
     memberClass = class { };
->memberClass : Symbol(DerivedWithClassDeclarationExtendingMember.memberClass, Decl(derivedClassSuperProperties.ts, 192, 63))
+>memberClass : Symbol(memberClass, Decl(derivedClassSuperProperties.ts, 192, 63))
 
     constructor() {
         class InnerClass extends this.memberClass {
 >InnerClass : Symbol(InnerClass, Decl(derivedClassSuperProperties.ts, 194, 19))
->this.memberClass : Symbol(DerivedWithClassDeclarationExtendingMember.memberClass, Decl(derivedClassSuperProperties.ts, 192, 63))
+>this.memberClass : Symbol(memberClass, Decl(derivedClassSuperProperties.ts, 192, 63))
 >this : Symbol(DerivedWithClassDeclarationExtendingMember, Decl(derivedClassSuperProperties.ts, 190, 1))
->memberClass : Symbol(DerivedWithClassDeclarationExtendingMember.memberClass, Decl(derivedClassSuperProperties.ts, 192, 63))
+>memberClass : Symbol(memberClass, Decl(derivedClassSuperProperties.ts, 192, 63))
 
             private method() {
->method : Symbol(InnerClass.method, Decl(derivedClassSuperProperties.ts, 195, 51))
+>method : Symbol(method, Decl(derivedClassSuperProperties.ts, 195, 51))
 
                 return this;
 >this : Symbol(InnerClass, Decl(derivedClassSuperProperties.ts, 194, 19))
             }
             private property = 7;
->property : Symbol(InnerClass.property, Decl(derivedClassSuperProperties.ts, 198, 13))
+>property : Symbol(property, Decl(derivedClassSuperProperties.ts, 198, 13))
 
             constructor() {
                 super();
 >super : Symbol((Anonymous class), Decl(derivedClassSuperProperties.ts, 193, 17))
 
                 this.property;
->this.property : Symbol(InnerClass.property, Decl(derivedClassSuperProperties.ts, 198, 13))
+>this.property : Symbol(property, Decl(derivedClassSuperProperties.ts, 198, 13))
 >this : Symbol(InnerClass, Decl(derivedClassSuperProperties.ts, 194, 19))
->property : Symbol(InnerClass.property, Decl(derivedClassSuperProperties.ts, 198, 13))
+>property : Symbol(property, Decl(derivedClassSuperProperties.ts, 198, 13))
 
                 this.method();
->this.method : Symbol(InnerClass.method, Decl(derivedClassSuperProperties.ts, 195, 51))
+>this.method : Symbol(method, Decl(derivedClassSuperProperties.ts, 195, 51))
 >this : Symbol(InnerClass, Decl(derivedClassSuperProperties.ts, 194, 19))
->method : Symbol(InnerClass.method, Decl(derivedClassSuperProperties.ts, 195, 51))
+>method : Symbol(method, Decl(derivedClassSuperProperties.ts, 195, 51))
             }
         }
         super();
@@= skipped -43, +43 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
     prop = true;
->prop : Symbol(DerivedWithClassExpression.prop, Decl(derivedClassSuperProperties.ts, 210, 47))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 210, 47))
 
     constructor() {
         console.log(class {
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 
             private method() {
->method : Symbol((Anonymous class).method, Decl(derivedClassSuperProperties.ts, 213, 27))
+>method : Symbol(method, Decl(derivedClassSuperProperties.ts, 213, 27))
 
                 return this;
 >this : Symbol((Anonymous class), Decl(derivedClassSuperProperties.ts, 213, 20))
             }
             private property = 7;
->property : Symbol((Anonymous class).property, Decl(derivedClassSuperProperties.ts, 216, 13))
+>property : Symbol(property, Decl(derivedClassSuperProperties.ts, 216, 13))
 
             constructor() {
                 this.property;
->this.property : Symbol((Anonymous class).property, Decl(derivedClassSuperProperties.ts, 216, 13))
+>this.property : Symbol(property, Decl(derivedClassSuperProperties.ts, 216, 13))
 >this : Symbol((Anonymous class), Decl(derivedClassSuperProperties.ts, 213, 20))
->property : Symbol((Anonymous class).property, Decl(derivedClassSuperProperties.ts, 216, 13))
+>property : Symbol(property, Decl(derivedClassSuperProperties.ts, 216, 13))
 
                 this.method();
->this.method : Symbol((Anonymous class).method, Decl(derivedClassSuperProperties.ts, 213, 27))
+>this.method : Symbol(method, Decl(derivedClassSuperProperties.ts, 213, 27))
 >this : Symbol((Anonymous class), Decl(derivedClassSuperProperties.ts, 213, 20))
->method : Symbol((Anonymous class).method, Decl(derivedClassSuperProperties.ts, 213, 27))
+>method : Symbol(method, Decl(derivedClassSuperProperties.ts, 213, 27))
             }
         });
         super();
@@= skipped -39, +39 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
     memberClass = class { };
->memberClass : Symbol(DerivedWithClassExpressionExtendingMember.memberClass, Decl(derivedClassSuperProperties.ts, 227, 62))
+>memberClass : Symbol(memberClass, Decl(derivedClassSuperProperties.ts, 227, 62))
 
     constructor() {
         console.log(class extends this.memberClass { });
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
->this.memberClass : Symbol(DerivedWithClassExpressionExtendingMember.memberClass, Decl(derivedClassSuperProperties.ts, 227, 62))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
+>this.memberClass : Symbol(memberClass, Decl(derivedClassSuperProperties.ts, 227, 62))
 >this : Symbol(DerivedWithClassExpressionExtendingMember, Decl(derivedClassSuperProperties.ts, 225, 1))
->memberClass : Symbol(DerivedWithClassExpressionExtendingMember.memberClass, Decl(derivedClassSuperProperties.ts, 227, 62))
+>memberClass : Symbol(memberClass, Decl(derivedClassSuperProperties.ts, 227, 62))
 
         super();
 >super : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
@@= skipped -21, +21 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
     prop = true;
->prop : Symbol(DerivedWithDerivedClassExpression.prop, Decl(derivedClassSuperProperties.ts, 235, 54))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 235, 54))
 
     constructor() {
         console.log(class extends Base {
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
             constructor() {
@@= skipped -14, +14 lines =@@
 >super : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
             }
             public foo() {
->foo : Symbol((Anonymous class).foo, Decl(derivedClassSuperProperties.ts, 241, 13))
+>foo : Symbol(foo, Decl(derivedClassSuperProperties.ts, 241, 13))
 
                 return this;
 >this : Symbol((Anonymous class), Decl(derivedClassSuperProperties.ts, 238, 20))
             }
             public bar = () => this;
->bar : Symbol((Anonymous class).bar, Decl(derivedClassSuperProperties.ts, 244, 13))
+>bar : Symbol(bar, Decl(derivedClassSuperProperties.ts, 244, 13))
 >this : Symbol((Anonymous class), Decl(derivedClassSuperProperties.ts, 238, 20))
 
         });
@@= skipped -20, +20 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
     prop = true;
->prop : Symbol(DerivedWithNewDerivedClassExpression.prop, Decl(derivedClassSuperProperties.ts, 251, 57))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 251, 57))
 
     constructor() {
         console.log(new class extends Base {
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
             constructor() {
@@= skipped -24, +24 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
     prop = true;
->prop : Symbol(DerivedWithObjectAccessors.prop, Decl(derivedClassSuperProperties.ts, 263, 47))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 263, 47))
 
     constructor() {
         const obj = {
@@= skipped -29, +29 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
     propName = "prop";
->propName : Symbol(DerivedWithObjectAccessorsUsingThisInKeys.propName, Decl(derivedClassSuperProperties.ts, 278, 62))
+>propName : Symbol(propName, Decl(derivedClassSuperProperties.ts, 278, 62))
 
     constructor() {
         const obj = {
@@= skipped -11, +11 lines =@@
 
             get [this.propName]() {
 >[this.propName] : Symbol([this.propName], Decl(derivedClassSuperProperties.ts, 282, 26))
->this.propName : Symbol(DerivedWithObjectAccessorsUsingThisInKeys.propName, Decl(derivedClassSuperProperties.ts, 278, 62))
+>this.propName : Symbol(propName, Decl(derivedClassSuperProperties.ts, 278, 62))
 >this : Symbol(DerivedWithObjectAccessorsUsingThisInKeys, Decl(derivedClassSuperProperties.ts, 276, 1))
->propName : Symbol(DerivedWithObjectAccessorsUsingThisInKeys.propName, Decl(derivedClassSuperProperties.ts, 278, 62))
+>propName : Symbol(propName, Decl(derivedClassSuperProperties.ts, 278, 62))
 
                 return true;
             },
             set [this.propName](param) {
 >[this.propName] : Symbol([this.propName], Decl(derivedClassSuperProperties.ts, 285, 14))
->this.propName : Symbol(DerivedWithObjectAccessorsUsingThisInKeys.propName, Decl(derivedClassSuperProperties.ts, 278, 62))
+>this.propName : Symbol(propName, Decl(derivedClassSuperProperties.ts, 278, 62))
 >this : Symbol(DerivedWithObjectAccessorsUsingThisInKeys, Decl(derivedClassSuperProperties.ts, 276, 1))
->propName : Symbol(DerivedWithObjectAccessorsUsingThisInKeys.propName, Decl(derivedClassSuperProperties.ts, 278, 62))
+>propName : Symbol(propName, Decl(derivedClassSuperProperties.ts, 278, 62))
 >param : Symbol(param, Decl(derivedClassSuperProperties.ts, 286, 32))
 
                 this._prop = param;
@@= skipped -27, +27 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
     propName = "prop";
->propName : Symbol(DerivedWithObjectAccessorsUsingThisInBodies.propName, Decl(derivedClassSuperProperties.ts, 294, 64))
+>propName : Symbol(propName, Decl(derivedClassSuperProperties.ts, 294, 64))
 
     constructor() {
         const obj = {
@@= skipped -32, +32 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
     propName = "prop";
->propName : Symbol(DerivedWithObjectComputedPropertyBody.propName, Decl(derivedClassSuperProperties.ts, 310, 58))
+>propName : Symbol(propName, Decl(derivedClassSuperProperties.ts, 310, 58))
 
     constructor() {
         const obj = {
@@= skipped -8, +8 lines =@@
 
             prop: this.propName,
 >prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 313, 21))
->this.propName : Symbol(DerivedWithObjectComputedPropertyBody.propName, Decl(derivedClassSuperProperties.ts, 310, 58))
+>this.propName : Symbol(propName, Decl(derivedClassSuperProperties.ts, 310, 58))
 >this : Symbol(DerivedWithObjectComputedPropertyBody, Decl(derivedClassSuperProperties.ts, 308, 1))
->propName : Symbol(DerivedWithObjectComputedPropertyBody.propName, Decl(derivedClassSuperProperties.ts, 310, 58))
+>propName : Symbol(propName, Decl(derivedClassSuperProperties.ts, 310, 58))
 
         };
         super();
@@= skipped -15, +15 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
     propName = "prop";
->propName : Symbol(DerivedWithObjectComputedPropertyName.propName, Decl(derivedClassSuperProperties.ts, 320, 58))
+>propName : Symbol(propName, Decl(derivedClassSuperProperties.ts, 320, 58))
 
     constructor() {
         const obj = {
@@= skipped -8, +8 lines =@@
 
             [this.propName]: true,
 >[this.propName] : Symbol([this.propName], Decl(derivedClassSuperProperties.ts, 323, 21))
->this.propName : Symbol(DerivedWithObjectComputedPropertyName.propName, Decl(derivedClassSuperProperties.ts, 320, 58))
+>this.propName : Symbol(propName, Decl(derivedClassSuperProperties.ts, 320, 58))
 >this : Symbol(DerivedWithObjectComputedPropertyName, Decl(derivedClassSuperProperties.ts, 318, 1))
->propName : Symbol(DerivedWithObjectComputedPropertyName.propName, Decl(derivedClassSuperProperties.ts, 320, 58))
+>propName : Symbol(propName, Decl(derivedClassSuperProperties.ts, 320, 58))
 
         };
         super();
@@= skipped -15, +15 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
     prop = true;
->prop : Symbol(DerivedWithObjectMethod.prop, Decl(derivedClassSuperProperties.ts, 330, 44))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 330, 44))
 
     constructor() {
         const obj = {
@@= skipped -28, +28 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
         prop = true;
->prop : Symbol((Anonymous class).prop, Decl(derivedClassSuperProperties.ts, 345, 24))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 345, 24))
 
         constructor() {
             for(super();;) {}
@@= skipped -11, +11 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
         prop = true;
->prop : Symbol((Anonymous class).prop, Decl(derivedClassSuperProperties.ts, 351, 24))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 351, 24))
 
         constructor() {
             for(a; super();) {}
@@= skipped -12, +12 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
         prop = true;
->prop : Symbol((Anonymous class).prop, Decl(derivedClassSuperProperties.ts, 357, 24))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 357, 24))
 
         constructor() {
             for(a; b; super()) {}
@@= skipped -13, +13 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
         prop = true;
->prop : Symbol((Anonymous class).prop, Decl(derivedClassSuperProperties.ts, 363, 24))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 363, 24))
 
         constructor() {
             for(; ; super()) { break; }
@@= skipped -11, +11 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
         prop = true;
->prop : Symbol((Anonymous class).prop, Decl(derivedClassSuperProperties.ts, 369, 24))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 369, 24))
 
         constructor() {
             for (const x of super()) {}
@@= skipped -12, +12 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
         prop = true;
->prop : Symbol((Anonymous class).prop, Decl(derivedClassSuperProperties.ts, 375, 24))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 375, 24))
 
         constructor() {
             while (super()) {}
@@= skipped -11, +11 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
         prop = true;
->prop : Symbol((Anonymous class).prop, Decl(derivedClassSuperProperties.ts, 381, 24))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 381, 24))
 
         constructor() {
             do {} while (super());
@@= skipped -11, +11 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
         prop = true;
->prop : Symbol((Anonymous class).prop, Decl(derivedClassSuperProperties.ts, 387, 24))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 387, 24))
 
         constructor() {
             if (super()) {}
@@= skipped -11, +11 lines =@@
 >Base : Symbol(Base, Decl(derivedClassSuperProperties.ts, 0, 28))
 
         prop = true;
->prop : Symbol((Anonymous class).prop, Decl(derivedClassSuperProperties.ts, 393, 24))
+>prop : Symbol(prop, Decl(derivedClassSuperProperties.ts, 393, 24))
 
         constructor() {
             switch (super()) {}
