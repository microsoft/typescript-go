--- old.nodeModulesResolveJsonModule(module=node18).types
+++ new.nodeModulesResolveJsonModule(module=node18).types
@@= skipped -2, +2 lines =@@
 === index.ts ===
 import pkg from "./package.json" with { type: "json" };
 >pkg : { name: string; version: string; type: string; default: string; }
->type : error
+>type : any

 export const name = pkg.name;
 >name : string
@@= skipped -10, +10 lines =@@

 import * as ns from "./package.json" with { type: "json" };
 >ns : { default: { name: string; version: string; type: string; default: string; }; }
->type : error
+>type : any

 export const thing = ns;
 >thing : { default: { name: string; version: string; type: string; default: string; }; }
@@= skipped -25, +25 lines =@@
 >name : string

 import * as ns from "./package.json";
->ns : { default: { name: string; version: string; type: string; default: string; }; name: string; version: string; type: string; }
+>ns : { name: string; version: string; type: string; default: { name: string; version: string; type: string; default: string; }; }

 export const thing = ns;
->thing : { default: { name: string; version: string; type: string; default: string; }; name: string; version: string; type: string; }
->ns : { default: { name: string; version: string; type: string; default: string; }; name: string; version: string; type: string; }
+>thing : { name: string; version: string; type: string; default: { name: string; version: string; type: string; default: string; }; }
+>ns : { name: string; version: string; type: string; default: { name: string; version: string; type: string; default: string; }; }

 export const name2 = ns.default.name;
 >name2 : string
 >ns.default.name : string
 >ns.default : { name: string; version: string; type: string; default: string; }
->ns : { default: { name: string; version: string; type: string; default: string; }; name: string; version: string; type: string; }
+>ns : { name: string; version: string; type: string; default: { name: string; version: string; type: string; default: string; }; }
 >default : { name: string; version: string; type: string; default: string; }
 >name : string

 === index.mts ===
 import pkg from "./package.json" with { type: "json" };
 >pkg : { name: string; version: string; type: string; default: string; }
->type : error
+>type : any

 export const name = pkg.name;
 >name : string
@@= skipped -27, +27 lines =@@

 import * as ns from "./package.json" with { type: "json" };
 >ns : { default: { name: string; version: string; type: string; default: string; }; }
->type : error
+>type : any

 export const thing = ns;
 >thing : { default: { name: string; version: string; type: string; default: string; }; }