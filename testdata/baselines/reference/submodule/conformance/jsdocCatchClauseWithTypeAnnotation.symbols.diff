--- old.jsdocCatchClauseWithTypeAnnotation.symbols
+++ new.jsdocCatchClauseWithTypeAnnotation.symbols
@@= skipped -40, +40 lines =@@
 
     try { } catch (/** @type {unknown} */ err) { console.log(err); } // should be OK
 >err : Symbol(err, Decl(foo.js, 17, 19))
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >err : Symbol(err, Decl(foo.js, 17, 19))
 
     try { } catch (/** @type {Unknown} */ err) { console.log(err); } // should be OK
 >err : Symbol(err, Decl(foo.js, 18, 19))
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >err : Symbol(err, Decl(foo.js, 18, 19))
 
     try { } catch (/** @type {unknown} */ err) { err.foo; }          // error in the body
@@= skipped -27, +27 lines =@@
 >err : Symbol(err, Decl(foo.js, 22, 19))
 
     try { console.log(); }
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 
     // @ts-ignore
     catch (/** @type {number} */ err) { // e should not be a `number`
 >err : Symbol(err, Decl(foo.js, 26, 11))
 
         console.log(err.toLowerCase());
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >err : Symbol(err, Decl(foo.js, 26, 11))
     }
 
@@= skipped -46, +46 lines =@@
 
     try { } catch (/** @type {unknown} */ { x }) { console.log(x); } // error in the destructure
 >x : Symbol(x, Decl(foo.js, 45, 43))
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >x : Symbol(x, Decl(foo.js, 45, 43))
 
     try { } catch (/** @type {Unknown} */ { x }) { console.log(x); } // error in the destructure
 >x : Symbol(x, Decl(foo.js, 46, 43))
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >x : Symbol(x, Decl(foo.js, 46, 43))
 
     try { } catch (/** @type {Error} */ { x }) { }                   // error in the type
