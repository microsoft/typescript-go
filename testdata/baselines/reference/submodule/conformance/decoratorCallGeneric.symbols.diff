--- old.decoratorCallGeneric.symbols
+++ new.decoratorCallGeneric.symbols
@@= skipped -5, +5 lines =@@
 >T : Symbol(T, Decl(decoratorCallGeneric.ts, 0, 12))
 
     prototype: T,
->prototype : Symbol(I.prototype, Decl(decoratorCallGeneric.ts, 0, 16))
+>prototype : Symbol(prototype, Decl(decoratorCallGeneric.ts, 0, 16))
 >T : Symbol(T, Decl(decoratorCallGeneric.ts, 0, 12))
 
     m: () => T
->m : Symbol(I.m, Decl(decoratorCallGeneric.ts, 1, 17))
+>m : Symbol(m, Decl(decoratorCallGeneric.ts, 1, 17))
 >T : Symbol(T, Decl(decoratorCallGeneric.ts, 0, 12))
 }
 function dec<T>(c: I<T>) { }
@@= skipped -21, +21 lines =@@
 >C : Symbol(C, Decl(decoratorCallGeneric.ts, 4, 28))
 
     _brand: any;
->_brand : Symbol(C._brand, Decl(decoratorCallGeneric.ts, 7, 9))
+>_brand : Symbol(_brand, Decl(decoratorCallGeneric.ts, 7, 9))
 
     static m() {}
->m : Symbol(C.m, Decl(decoratorCallGeneric.ts, 8, 16))
+>m : Symbol(m, Decl(decoratorCallGeneric.ts, 8, 16))
 }
 
