--- old.es2022IntlAPIs.symbols
+++ new.es2022IntlAPIs.symbols
@@= skipped -11, +11 lines =@@
 
   var formatter = new Intl.DateTimeFormat('en-US', {
 >formatter : Symbol(formatter, Decl(es2022IntlAPIs.ts, 3, 5))
->Intl.DateTimeFormat : Symbol(Intl.DateTimeFormat, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2017.intl.d.ts, --, --), Decl(lib.es2021.intl.d.ts, --, --))
+>Intl.DateTimeFormat : Symbol(DateTimeFormat, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2017.intl.d.ts, --, --), Decl(lib.es2021.intl.d.ts, --, --))
 >Intl : Symbol(Intl, Decl(lib.es5.d.ts, --, --), Decl(lib.es2016.intl.d.ts, --, --), Decl(lib.es2017.intl.d.ts, --, --), Decl(lib.es2018.intl.d.ts, --, --), Decl(lib.es2019.intl.d.ts, --, --) ... and 4 more)
->DateTimeFormat : Symbol(Intl.DateTimeFormat, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2017.intl.d.ts, --, --), Decl(lib.es2021.intl.d.ts, --, --))
+>DateTimeFormat : Symbol(DateTimeFormat, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2017.intl.d.ts, --, --), Decl(lib.es2021.intl.d.ts, --, --))
 
     timeZone: 'America/Los_Angeles',
 >timeZone : Symbol(timeZone, Decl(es2022IntlAPIs.ts, 3, 52))
@@= skipped -24, +24 lines =@@
 
   var supported = Intl.supportedValuesOf(key);
 >supported : Symbol(supported, Decl(es2022IntlAPIs.ts, 11, 5))
->Intl.supportedValuesOf : Symbol(Intl.supportedValuesOf, Decl(lib.es2022.intl.d.ts, --, --))
+>Intl.supportedValuesOf : Symbol(supportedValuesOf, Decl(lib.es2022.intl.d.ts, --, --))
 >Intl : Symbol(Intl, Decl(lib.es5.d.ts, --, --), Decl(lib.es2016.intl.d.ts, --, --), Decl(lib.es2017.intl.d.ts, --, --), Decl(lib.es2018.intl.d.ts, --, --), Decl(lib.es2019.intl.d.ts, --, --) ... and 4 more)
->supportedValuesOf : Symbol(Intl.supportedValuesOf, Decl(lib.es2022.intl.d.ts, --, --))
+>supportedValuesOf : Symbol(supportedValuesOf, Decl(lib.es2022.intl.d.ts, --, --))
 >key : Symbol(key, Decl(es2022IntlAPIs.ts, 10, 10))
 }
 
