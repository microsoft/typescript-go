--- old.subtypesOfTypeParameterWithConstraints4.types
+++ new.subtypesOfTypeParameterWithConstraints4.types
@@= skipped -8, +8 lines =@@
 
 function f<T extends Foo, U extends Foo, V>(t: T, u: U, v: V) {
 >f : <T extends Foo, U extends Foo, V>(t: T, u: U, v: V) => void
+>T : T
+>U : U
+>V : V
 >t : T
 >u : U
 >v : V
@@= skipped -85, +88 lines =@@
 
     // ok
     var r6 = true ? v : new Foo();
->r6 : Foo | V
->true ? v : new Foo() : Foo | V
+>r6 : V | Foo
+>true ? v : new Foo() : V | Foo
 >true : true
 >v : V
 >new Foo() : Foo
 >Foo : typeof Foo
 
     var r6 = true ? new Foo() : v;
->r6 : Foo | V
->true ? new Foo() : v : Foo | V
+>r6 : V | Foo
+>true ? new Foo() : v : V | Foo
 >true : true
 >new Foo() : Foo
 >Foo : typeof Foo
@@= skipped -19, +19 lines =@@
 
 class B1<T> {
 >B1 : B1<T>
+>T : T
 
     foo: T;
 >foo : T
@@= skipped -7, +8 lines =@@
 
 class D1<T extends Foo, U extends Foo, V> extends B1<Foo> {
 >D1 : D1<T, U, V>
+>T : T
+>U : U
+>V : V
 >B1 : B1<Foo>
 
     [x: string]: Foo;
@@= skipped -11, +14 lines =@@
 
 class D2<T extends Foo, U extends Foo, V> extends B1<Foo> {
 >D2 : D2<T, U, V>
+>T : T
+>U : U
+>V : V
 >B1 : B1<Foo>
 
     [x: string]: Foo;
@@= skipped -11, +14 lines =@@
 
 class D3<T extends Foo, U extends Foo, V> extends B1<Foo> {
 >D3 : D3<T, U, V>
+>T : T
+>U : U
+>V : V
 >B1 : B1<Foo>
 
     [x: string]: Foo;
@@= skipped -11, +14 lines =@@
 
 class D4<T extends Foo, U extends Foo, V> extends B1<T> {
 >D4 : D4<T, U, V>
+>T : T
+>U : U
+>V : V
 >B1 : B1<T>
 
     [x: string]: T;
@@= skipped -11, +14 lines =@@
 
 class D5<T extends Foo, U extends Foo, V> extends B1<T> {
 >D5 : D5<T, U, V>
+>T : T
+>U : U
+>V : V
 >B1 : B1<T>
 
     [x: string]: T;
@@= skipped -11, +14 lines =@@
 
 class D6<T extends Foo, U extends Foo, V> extends B1<T> {
 >D6 : D6<T, U, V>
+>T : T
+>U : U
+>V : V
 >B1 : B1<T>
 
     [x: string]: T;
@@= skipped -11, +14 lines =@@
 
 class D7<T extends Foo, U extends Foo, V> extends B1<U> {
 >D7 : D7<T, U, V>
+>T : T
+>U : U
+>V : V
 >B1 : B1<U>
 
     [x: string]: U;
@@= skipped -11, +14 lines =@@
 
 class D8<T extends Foo, U extends Foo, V> extends B1<U> {
 >D8 : D8<T, U, V>
+>T : T
+>U : U
+>V : V
 >B1 : B1<U>
 
     [x: string]: U;
@@= skipped -11, +14 lines =@@
 
 class D9<T extends Foo, U extends Foo, V> extends B1<U> {
 >D9 : D9<T, U, V>
+>T : T
+>U : U
+>V : V
 >B1 : B1<U>
 
     [x: string]: U;
