--- old.importCallExpressionInExportEqualsUMD.js
+++ new.importCallExpressionInExportEqualsUMD.js
@@= skipped -7, +7 lines =@@
     const something = await import("./something");
 };
 
-//// [something.js]
-(function (factory) {
-    if (typeof module === "object" && typeof module.exports === "object") {
-        var v = factory(require, exports);
-        if (v !== undefined) module.exports = v;
-    }
-    else if (typeof define === "function" && define.amd) {
-        define(["require", "exports"], factory);
-    }
-})(function (require, exports) {
-    "use strict";
-    return 42;
-});
 //// [index.js]
-(function (factory) {
-    if (typeof module === "object" && typeof module.exports === "object") {
-        var v = factory(require, exports);
-        if (v !== undefined) module.exports = v;
-    }
-    else if (typeof define === "function" && define.amd) {
-        define(["require", "exports"], factory);
-    }
-})(function (require, exports) {
-    "use strict";
-    var __syncRequire = typeof module === "object" && typeof module.exports === "object";
-    return async function () {
-        const something = await (__syncRequire ? Promise.resolve().then(() => require("./something")) : new Promise((resolve_1, reject_1) => { require(["./something"], resolve_1, reject_1); }));
-    };
-});
+"use strict";
+module.exports = async function () {
+    const something = await Promise.resolve().then(() => require("./something"));
+};
+//// [something.js]
+"use strict";
+module.exports = 42;
