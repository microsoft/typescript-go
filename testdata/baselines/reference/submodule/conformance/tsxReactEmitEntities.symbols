//// [tests/cases/conformance/jsx/tsxReactEmitEntities.tsx] ////

=== file.tsx ===
declare module JSX {
>JSX : Symbol(JSX, Decl(file.tsx, 0, 0))

	interface Element { }
>Element : Symbol(Element, Decl(file.tsx, 0, 20))

	interface IntrinsicElements {
>IntrinsicElements : Symbol(IntrinsicElements, Decl(file.tsx, 1, 22))

		[s: string]: any;
>s : Symbol(s, Decl(file.tsx, 3, 3))
	}
}
declare var React: any;
>React : Symbol(React, Decl(file.tsx, 6, 11))

<div>Dot goes here: &middot; &notAnEntity; </div>;
<div>Be careful of &quot;-ed strings!</div>;
<div>&#0123;&#123;braces&#x7d;&#x7D;</div>;
// Escapes do nothing
<div>\n</div>;

// Also works in string literal attributes
<div attr="&#0123;&hellip;&#x7D;\"></div>;
>attr : Symbol(attr, Decl(file.tsx, 15, 4))

// Does not happen for a string literal that happens to be inside an attribute (and escapes then work)
<div attr={"&#0123;&hellip;&#x7D;\""}></div>;
>attr : Symbol(attr, Decl(file.tsx, 17, 4))

// Preserves single quotes
<div attr='"'></div>;
>attr : Symbol(attr, Decl(file.tsx, 19, 4))

// https://github.com/microsoft/TypeScript/issues/35732
<div>&#x1F408;&#x1F415;&#128007;&#128017;</div>;
