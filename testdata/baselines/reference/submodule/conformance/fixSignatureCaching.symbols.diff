--- old.fixSignatureCaching.symbols
+++ new.fixSignatureCaching.symbols
@@= skipped -774, +774 lines =@@

     var hasOwnProp = Object.prototype.hasOwnProperty,
 >hasOwnProp : Symbol(hasOwnProp, Decl(fixSignatureCaching.ts, 289, 7))
->Object.prototype.hasOwnProperty : Symbol(Object.hasOwnProperty, Decl(lib.es5.d.ts, --, --))
->Object.prototype : Symbol(ObjectConstructor.prototype, Decl(lib.es5.d.ts, --, --))
+>Object.prototype.hasOwnProperty : Symbol(hasOwnProperty, Decl(lib.es5.d.ts, --, --))
+>Object.prototype : Symbol(prototype, Decl(lib.es5.d.ts, --, --))
 >Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->prototype : Symbol(ObjectConstructor.prototype, Decl(lib.es5.d.ts, --, --))
->hasOwnProperty : Symbol(Object.hasOwnProperty, Decl(lib.es5.d.ts, --, --))
+>prototype : Symbol(prototype, Decl(lib.es5.d.ts, --, --))
+>hasOwnProperty : Symbol(hasOwnProperty, Decl(lib.es5.d.ts, --, --))

         isArray;
 >isArray : Symbol(isArray, Decl(fixSignatureCaching.ts, 289, 53))
@@= skipped -23, +23 lines =@@
 >Array : Symbol(Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))

         Array.isArray : function (value) { return Object.prototype.toString.call(value) === '[object Array]'; };
->Array.isArray : Symbol(ArrayConstructor.isArray, Decl(lib.es5.d.ts, --, --))
+>Array.isArray : Symbol(isArray, Decl(lib.es5.d.ts, --, --))
 >Array : Symbol(Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->isArray : Symbol(ArrayConstructor.isArray, Decl(lib.es5.d.ts, --, --))
+>isArray : Symbol(isArray, Decl(lib.es5.d.ts, --, --))
 >value : Symbol(value, Decl(fixSignatureCaching.ts, 297, 34))
->Object.prototype.toString.call : Symbol(Function.call, Decl(lib.es5.d.ts, --, --))
->Object.prototype.toString : Symbol(Object.toString, Decl(lib.es5.d.ts, --, --))
->Object.prototype : Symbol(ObjectConstructor.prototype, Decl(lib.es5.d.ts, --, --))
+>Object.prototype.toString.call : Symbol(call, Decl(lib.es5.d.ts, --, --))
+>Object.prototype.toString : Symbol(toString, Decl(lib.es5.d.ts, --, --))
+>Object.prototype : Symbol(prototype, Decl(lib.es5.d.ts, --, --))
 >Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->prototype : Symbol(ObjectConstructor.prototype, Decl(lib.es5.d.ts, --, --))
->toString : Symbol(Object.toString, Decl(lib.es5.d.ts, --, --))
->call : Symbol(Function.call, Decl(lib.es5.d.ts, --, --))
+>prototype : Symbol(prototype, Decl(lib.es5.d.ts, --, --))
+>toString : Symbol(toString, Decl(lib.es5.d.ts, --, --))
+>call : Symbol(call, Decl(lib.es5.d.ts, --, --))
 >value : Symbol(value, Decl(fixSignatureCaching.ts, 297, 34))

     isArray = 'isArray' in Array
@@= skipped -19, +19 lines =@@

         ? function (value) { return Object.prototype.toString.call(value) === '[object Array]'; }
 >value : Symbol(value, Decl(fixSignatureCaching.ts, 299, 20))
->Object.prototype.toString.call : Symbol(Function.call, Decl(lib.es5.d.ts, --, --))
->Object.prototype.toString : Symbol(Object.toString, Decl(lib.es5.d.ts, --, --))
->Object.prototype : Symbol(ObjectConstructor.prototype, Decl(lib.es5.d.ts, --, --))
+>Object.prototype.toString.call : Symbol(call, Decl(lib.es5.d.ts, --, --))
+>Object.prototype.toString : Symbol(toString, Decl(lib.es5.d.ts, --, --))
+>Object.prototype : Symbol(prototype, Decl(lib.es5.d.ts, --, --))
 >Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->prototype : Symbol(ObjectConstructor.prototype, Decl(lib.es5.d.ts, --, --))
->toString : Symbol(Object.toString, Decl(lib.es5.d.ts, --, --))
->call : Symbol(Function.call, Decl(lib.es5.d.ts, --, --))
+>prototype : Symbol(prototype, Decl(lib.es5.d.ts, --, --))
+>toString : Symbol(toString, Decl(lib.es5.d.ts, --, --))
+>call : Symbol(call, Decl(lib.es5.d.ts, --, --))
 >value : Symbol(value, Decl(fixSignatureCaching.ts, 299, 20))

         : Array.isArray;
@@= skipped -71, +71 lines =@@
 >object : Symbol(object, Decl(fixSignatureCaching.ts, 320, 34))

             if (hasOwnProp.call(object, key)) {
->hasOwnProp.call : Symbol(Function.call, Decl(lib.es5.d.ts, --, --))
+>hasOwnProp.call : Symbol(call, Decl(lib.es5.d.ts, --, --))
 >hasOwnProp : Symbol(hasOwnProp, Decl(fixSignatureCaching.ts, 289, 7))
->call : Symbol(Function.call, Decl(lib.es5.d.ts, --, --))
+>call : Symbol(call, Decl(lib.es5.d.ts, --, --))
 >object : Symbol(object, Decl(fixSignatureCaching.ts, 320, 34))
 >key : Symbol(key, Decl(fixSignatureCaching.ts, 321, 16))

@@= skipped -34, +34 lines =@@
 >mobileDetectRules : Symbol(mobileDetectRules, Decl(fixSignatureCaching.ts, 329, 47))

             if (hasOwnProp.call(mobileDetectRules.props, key)) {
->hasOwnProp.call : Symbol(Function.call, Decl(lib.es5.d.ts, --, --))
+>hasOwnProp.call : Symbol(call, Decl(lib.es5.d.ts, --, --))
 >hasOwnProp : Symbol(hasOwnProp, Decl(fixSignatureCaching.ts, 289, 7))
->call : Symbol(Function.call, Decl(lib.es5.d.ts, --, --))
+>call : Symbol(call, Decl(lib.es5.d.ts, --, --))
 >mobileDetectRules : Symbol(mobileDetectRules, Decl(fixSignatureCaching.ts, 329, 47))
 >key : Symbol(key, Decl(fixSignatureCaching.ts, 329, 11))

@@= skipped -112, +112 lines =@@
 >rules : Symbol(rules, Decl(fixSignatureCaching.ts, 368, 30))

             if (hasOwnProp.call(rules, key)) {
->hasOwnProp.call : Symbol(Function.call, Decl(lib.es5.d.ts, --, --))
+>hasOwnProp.call : Symbol(call, Decl(lib.es5.d.ts, --, --))
 >hasOwnProp : Symbol(hasOwnProp, Decl(fixSignatureCaching.ts, 289, 7))
->call : Symbol(Function.call, Decl(lib.es5.d.ts, --, --))
+>call : Symbol(call, Decl(lib.es5.d.ts, --, --))
 >rules : Symbol(rules, Decl(fixSignatureCaching.ts, 368, 30))
 >key : Symbol(key, Decl(fixSignatureCaching.ts, 369, 16))

@@= skipped -39, +39 lines =@@
 >rules : Symbol(rules, Decl(fixSignatureCaching.ts, 386, 32))

             if (hasOwnProp.call(rules, key)) {
->hasOwnProp.call : Symbol(Function.call, Decl(lib.es5.d.ts, --, --))
+>hasOwnProp.call : Symbol(call, Decl(lib.es5.d.ts, --, --))
 >hasOwnProp : Symbol(hasOwnProp, Decl(fixSignatureCaching.ts, 289, 7))
->call : Symbol(Function.call, Decl(lib.es5.d.ts, --, --))
+>call : Symbol(call, Decl(lib.es5.d.ts, --, --))
 >rules : Symbol(rules, Decl(fixSignatureCaching.ts, 386, 32))
 >key : Symbol(key, Decl(fixSignatureCaching.ts, 388, 16))

@@= skipped -12, +12 lines =@@
 >userAgent : Symbol(userAgent, Decl(fixSignatureCaching.ts, 386, 38))

                     result.push(key);
->result.push : Symbol(Array.push, Decl(lib.es5.d.ts, --, --))
+>result.push : Symbol(push, Decl(lib.es5.d.ts, --, --))
 >result : Symbol(result, Decl(fixSignatureCaching.ts, 387, 11))
->push : Symbol(Array.push, Decl(lib.es5.d.ts, --, --))
+>push : Symbol(push, Decl(lib.es5.d.ts, --, --))
 >key : Symbol(key, Decl(fixSignatureCaching.ts, 388, 16))
                 }
             }
@@= skipped -34, +34 lines =@@
 >match : Symbol(match, Decl(fixSignatureCaching.ts, 407, 67))

         if (hasOwnProp.call(props, propertyName)) {
->hasOwnProp.call : Symbol(Function.call, Decl(lib.es5.d.ts, --, --))
+>hasOwnProp.call : Symbol(call, Decl(lib.es5.d.ts, --, --))
 >hasOwnProp : Symbol(hasOwnProp, Decl(fixSignatureCaching.ts, 289, 7))
->call : Symbol(Function.call, Decl(lib.es5.d.ts, --, --))
+>call : Symbol(call, Decl(lib.es5.d.ts, --, --))
 >props : Symbol(props, Decl(fixSignatureCaching.ts, 407, 11))
 >propertyName : Symbol(propertyName, Decl(fixSignatureCaching.ts, 406, 35))

@@= skipped -200, +200 lines =@@

             phoneSized = MobileDetect.isPhoneSized(maxPhoneWidth);
 >phoneSized : Symbol(phoneSized, Decl(fixSignatureCaching.ts, 470, 26))
->MobileDetect.isPhoneSized : Symbol(MobileDetect.isPhoneSized, Decl(fixSignatureCaching.ts, 961, 57), Decl(fixSignatureCaching.ts, 965, 12))
+>MobileDetect.isPhoneSized : Symbol(isPhoneSized, Decl(fixSignatureCaching.ts, 961, 57), Decl(fixSignatureCaching.ts, 965, 12))
 >MobileDetect : Symbol(MobileDetect, Decl(fixSignatureCaching.ts, 644, 6))
->isPhoneSized : Symbol(MobileDetect.isPhoneSized, Decl(fixSignatureCaching.ts, 961, 57), Decl(fixSignatureCaching.ts, 965, 12))
+>isPhoneSized : Symbol(isPhoneSized, Decl(fixSignatureCaching.ts, 961, 57), Decl(fixSignatureCaching.ts, 965, 12))
 >maxPhoneWidth : Symbol(maxPhoneWidth, Decl(fixSignatureCaching.ts, 466, 60))

             if (phoneSized === undefined) {
@@= skipped -287, +287 lines =@@
 >impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))

         return window.screen.width < window.screen.height ?
->window.screen.width : Symbol(Screen.width, Decl(lib.dom.d.ts, --, --))
->window.screen : Symbol(screen, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))
->window : Symbol(window, Decl(lib.dom.d.ts, --, --))
->screen : Symbol(screen, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))
->width : Symbol(Screen.width, Decl(lib.dom.d.ts, --, --))
->window.screen.height : Symbol(Screen.height, Decl(lib.dom.d.ts, --, --))
->window.screen : Symbol(screen, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))
->window : Symbol(window, Decl(lib.dom.d.ts, --, --))
->screen : Symbol(screen, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))
->height : Symbol(Screen.height, Decl(lib.dom.d.ts, --, --))
+>window.screen.width : Symbol(width, Decl(lib.dom.d.ts, --, --))
+>window.screen : Symbol(screen, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))
+>window : Symbol(window, Decl(lib.dom.d.ts, --, --))
+>screen : Symbol(screen, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))
+>width : Symbol(width, Decl(lib.dom.d.ts, --, --))
+>window.screen.height : Symbol(height, Decl(lib.dom.d.ts, --, --))
+>window.screen : Symbol(screen, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))
+>window : Symbol(window, Decl(lib.dom.d.ts, --, --))
+>screen : Symbol(screen, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))
+>height : Symbol(height, Decl(lib.dom.d.ts, --, --))

             window.screen.width :
->window.screen.width : Symbol(Screen.width, Decl(lib.dom.d.ts, --, --))
+>window.screen.width : Symbol(width, Decl(lib.dom.d.ts, --, --))
 >window.screen : Symbol(screen, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))
 >window : Symbol(window, Decl(lib.dom.d.ts, --, --))
 >screen : Symbol(screen, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))
->width : Symbol(Screen.width, Decl(lib.dom.d.ts, --, --))
+>width : Symbol(width, Decl(lib.dom.d.ts, --, --))

             window.screen.height;
->window.screen.height : Symbol(Screen.height, Decl(lib.dom.d.ts, --, --))
+>window.screen.height : Symbol(height, Decl(lib.dom.d.ts, --, --))
 >window.screen : Symbol(screen, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))
 >window : Symbol(window, Decl(lib.dom.d.ts, --, --))
 >screen : Symbol(screen, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))
->height : Symbol(Screen.height, Decl(lib.dom.d.ts, --, --))
+>height : Symbol(height, Decl(lib.dom.d.ts, --, --))

     };

@@= skipped -69, +69 lines =@@
     }

     MobileDetect.prototype = {
->MobileDetect.prototype : Symbol(Function.prototype, Decl(lib.es5.d.ts, --, --))
+>MobileDetect.prototype : Symbol(prototype, Decl(fixSignatureCaching.ts, 678, 5))
 >MobileDetect : Symbol(MobileDetect, Decl(fixSignatureCaching.ts, 644, 6))
->prototype : Symbol(Function.prototype, Decl(lib.es5.d.ts, --, --))
+>prototype : Symbol(prototype, Decl(fixSignatureCaching.ts, 678, 5))

         constructor: MobileDetect,
 >constructor : Symbol(constructor, Decl(fixSignatureCaching.ts, 680, 30))
@@= skipped -344, +344 lines =@@
 >maxPhoneWidth : Symbol(maxPhoneWidth, Decl(fixSignatureCaching.ts, 942, 32))

             return MobileDetect.isPhoneSized(maxPhoneWidth || this.maxPhoneWidth);
->MobileDetect.isPhoneSized : Symbol(MobileDetect.isPhoneSized, Decl(fixSignatureCaching.ts, 961, 57), Decl(fixSignatureCaching.ts, 965, 12))
+>MobileDetect.isPhoneSized : Symbol(isPhoneSized, Decl(fixSignatureCaching.ts, 961, 57), Decl(fixSignatureCaching.ts, 965, 12))
 >MobileDetect : Symbol(MobileDetect, Decl(fixSignatureCaching.ts, 644, 6))
->isPhoneSized : Symbol(MobileDetect.isPhoneSized, Decl(fixSignatureCaching.ts, 961, 57), Decl(fixSignatureCaching.ts, 965, 12))
+>isPhoneSized : Symbol(isPhoneSized, Decl(fixSignatureCaching.ts, 961, 57), Decl(fixSignatureCaching.ts, 965, 12))
 >maxPhoneWidth : Symbol(maxPhoneWidth, Decl(fixSignatureCaching.ts, 942, 32))

         },
@@= skipped -34, +34 lines =@@
 >screen : Symbol(screen, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))

         MobileDetect.isPhoneSized = function (maxPhoneWidth) {
->MobileDetect.isPhoneSized : Symbol(MobileDetect.isPhoneSized, Decl(fixSignatureCaching.ts, 961, 57), Decl(fixSignatureCaching.ts, 965, 12))
+>MobileDetect.isPhoneSized : Symbol(isPhoneSized, Decl(fixSignatureCaching.ts, 961, 57), Decl(fixSignatureCaching.ts, 965, 12))
 >MobileDetect : Symbol(MobileDetect, Decl(fixSignatureCaching.ts, 644, 6))
->isPhoneSized : Symbol(MobileDetect.isPhoneSized, Decl(fixSignatureCaching.ts, 961, 57), Decl(fixSignatureCaching.ts, 965, 12))
+>isPhoneSized : Symbol(isPhoneSized, Decl(fixSignatureCaching.ts, 961, 57), Decl(fixSignatureCaching.ts, 965, 12))
 >maxPhoneWidth : Symbol(maxPhoneWidth, Decl(fixSignatureCaching.ts, 962, 46))

             return maxPhoneWidth < 0 ? undefined : impl.getDeviceSmallerSide() <= maxPhoneWidth;
@@= skipped -14, +14 lines =@@
         };
     } else {
         MobileDetect.isPhoneSized = function () {};
->MobileDetect.isPhoneSized : Symbol(MobileDetect.isPhoneSized, Decl(fixSignatureCaching.ts, 961, 57), Decl(fixSignatureCaching.ts, 965, 12))
+>MobileDetect.isPhoneSized : Symbol(isPhoneSized, Decl(fixSignatureCaching.ts, 961, 57), Decl(fixSignatureCaching.ts, 965, 12))
 >MobileDetect : Symbol(MobileDetect, Decl(fixSignatureCaching.ts, 644, 6))
->isPhoneSized : Symbol(MobileDetect.isPhoneSized, Decl(fixSignatureCaching.ts, 961, 57), Decl(fixSignatureCaching.ts, 965, 12))
+>isPhoneSized : Symbol(isPhoneSized, Decl(fixSignatureCaching.ts, 961, 57), Decl(fixSignatureCaching.ts, 965, 12))
     }

     // should not be replaced by a completely new object - just overwrite existing methods
     MobileDetect._impl = impl;
->MobileDetect._impl : Symbol(MobileDetect._impl, Decl(fixSignatureCaching.ts, 967, 5))
+>MobileDetect._impl : Symbol(_impl, Decl(fixSignatureCaching.ts, 967, 5))
 >MobileDetect : Symbol(MobileDetect, Decl(fixSignatureCaching.ts, 644, 6))
->_impl : Symbol(MobileDetect._impl, Decl(fixSignatureCaching.ts, 967, 5))
+>_impl : Symbol(_impl, Decl(fixSignatureCaching.ts, 967, 5))
 >impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))

     MobileDetect.version = '1.3.3 2016-07-31';
->MobileDetect.version : Symbol(MobileDetect.version, Decl(fixSignatureCaching.ts, 970, 30))
+>MobileDetect.version : Symbol(version, Decl(fixSignatureCaching.ts, 970, 30))
 >MobileDetect : Symbol(MobileDetect, Decl(fixSignatureCaching.ts, 644, 6))
->version : Symbol(MobileDetect.version, Decl(fixSignatureCaching.ts, 970, 30))
+>version : Symbol(version, Decl(fixSignatureCaching.ts, 970, 30))

     return MobileDetect;
 >MobileDetect : Symbol(MobileDetect, Decl(fixSignatureCaching.ts, 644, 6))