--- old.computedPropertyNamesContextualType7_ES5.types
+++ new.computedPropertyNamesContextualType7_ES5.types
@@= skipped -1, +1 lines =@@
 
 === computedPropertyNamesContextualType7_ES5.ts ===
 interface I<T> {
+>I : I<T>
+>T : T
+
     [n: number]: T;
 >n : number
 }
 interface J<T> {
+>J : J<T>
+>T : T
+
     [s: string]: T;
 >s : string
 }
 
 declare function foo<T>(obj: I<T>): T;
 >foo : <T>(obj: I<T>) => T
+>T : T
 >obj : I<T>
 
 declare function g<T>(obj: J<T>): T;
 >g : <T>(obj: J<T>) => T
+>T : T
 >obj : J<T>
 
 foo({
->foo({    0: () => { },    ["hi" + "bye"]: true,    [0 + 1]: 0,    [+"hi"]: [0]}) : number | (() => void) | number[]
+>foo({    0: () => { },    ["hi" + "bye"]: true,    [0 + 1]: 0,    [+"hi"]: [0]}) : number | number[] | () => void
 >foo : <T>(obj: I<T>) => T
->{    0: () => { },    ["hi" + "bye"]: true,    [0 + 1]: 0,    [+"hi"]: [0]} : { [x: string]: number | boolean | (() => void) | number[]; [x: number]: number | (() => void) | number[]; 0: () => void; }
+>{    0: () => { },    ["hi" + "bye"]: true,    [0 + 1]: 0,    [+"hi"]: [0]} : { [x: string]: number | boolean | number[] | () => void; [x: number]: number | number[] | () => void; 0: () => void; }
 
     0: () => { },
 >0 : () => void
