--- old.destructuringCatch.types
+++ new.destructuringCatch.types
@@= skipped -3, +3 lines =@@
 try {
     throw [0, 1];
 >[0, 1] : number[]
->       : ^^^^^^^^
 >0 : 0
->  : ^
 >1 : 1
->  : ^
 }
 catch ([a, b]) {
 >a : any
->  : ^^^
 >b : any
->  : ^^^
 
     a + b;
 >a + b : any
@@= skipped -21, +16 lines =@@
 try {
     throw { a: 0, b: 1 };
 >{ a: 0, b: 1 } : { a: number; b: number; }
->               : ^^^^^^^^^^^^^^^^^^^^^^^^^
 >a : number
->  : ^^^^^^
 >0 : 0
->  : ^
 >b : number
->  : ^^^^^^
 >1 : 1
->  : ^
 }
 catch ({a, b}) {
 >a : any
->  : ^^^
 >b : any
->  : ^^^
 
     a + b;
 >a + b : any
@@= skipped -25, +18 lines =@@
 try {
     throw [{ x: [0], z: 1 }];
 >[{ x: [0], z: 1 }] : { x: number[]; z: number; }[]
->                   : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 >{ x: [0], z: 1 } : { x: number[]; z: number; }
->                 : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
 >x : number[]
->  : ^^^^^^^^
 >[0] : number[]
->    : ^^^^^^^^
 >0 : 0
->  : ^
 >z : number
->  : ^^^^^^
 >1 : 1
->  : ^
 }
 catch ([{x: [y], z}]) {
 >x : any
->  : ^^^
 >y : any
->  : ^^^
 >z : any
->  : ^^^
 
     y + z;
 >y + z : any
@@= skipped -33, +23 lines =@@
 }
 catch (/*Test comment ranges*/[/*a*/a]) {
 >a : any
->  : ^^^
 
 }
 
