--- old.importCallExpressionInCJS2.js
+++ new.importCallExpressionInCJS2.js
@@= skipped -17, +17 lines =@@
 
 compute(import("./0"));
 
-//// [0.js]
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.foo = foo;
-function foo() { return "foo"; }
-//// [1.js]
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.backup = backup;
-function backup() { return "backup"; }
 //// [2.js]
 async function compute(promise) {
     let j = await promise;
@@= skipped -20, +10 lines =@@
     return j.foo();
 }
 compute(Promise.resolve().then(() => require("./0")));
+//// [1.js]
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.backup = backup;
+function backup() { return "backup"; }
+//// [0.js]
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.foo = foo;
+function foo() { return "foo"; }
