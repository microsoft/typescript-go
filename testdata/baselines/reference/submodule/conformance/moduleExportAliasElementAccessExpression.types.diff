--- old.moduleExportAliasElementAccessExpression.types
+++ new.moduleExportAliasElementAccessExpression.types
@@= skipped -2, +2 lines =@@
 === moduleExportAliasElementAccessExpression.js ===
 function D () { }
 >D : () => void
->  : ^^^^^^^^^^
 
 exports["D"] = D;
 >exports["D"] = D : () => void
->                 : ^^^^^^^^^^
->exports["D"] : () => void
->             : ^^^^^^^^^^
->exports : typeof import("moduleExportAliasElementAccessExpression")
->        : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+>exports["D"] : any
+>exports : any
 >"D" : "D"
->    : ^^^
 >D : () => void
->  : ^^^^^^^^^^
 
  // (the only package I could find that uses spaces in identifiers is webidl-conversions)
 exports["Does not work yet"] = D;
 >exports["Does not work yet"] = D : () => void
->                                 : ^^^^^^^^^^
->exports["Does not work yet"] : () => void
->                             : ^^^^^^^^^^
->exports : typeof import("moduleExportAliasElementAccessExpression")
->        : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+>exports["Does not work yet"] : any
+>exports : any
 >"Does not work yet" : "Does not work yet"
->                    : ^^^^^^^^^^^^^^^^^^^
 >D : () => void
->  : ^^^^^^^^^^
 
