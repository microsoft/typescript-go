--- old.accessorsAreNotContextuallyTyped.symbols
+++ new.accessorsAreNotContextuallyTyped.symbols
@@= skipped -6, +6 lines =@@
 >C : Symbol(C, Decl(accessorsAreNotContextuallyTyped.ts, 0, 0))
 
     set x(v: (a: string) => string) {
->x : Symbol(C.x, Decl(accessorsAreNotContextuallyTyped.ts, 2, 9), Decl(accessorsAreNotContextuallyTyped.ts, 4, 5))
+>x : Symbol(x, Decl(accessorsAreNotContextuallyTyped.ts, 2, 9), Decl(accessorsAreNotContextuallyTyped.ts, 4, 5))
 >v : Symbol(v, Decl(accessorsAreNotContextuallyTyped.ts, 3, 10))
 >a : Symbol(a, Decl(accessorsAreNotContextuallyTyped.ts, 3, 14))
     }
 
     get x() {
->x : Symbol(C.x, Decl(accessorsAreNotContextuallyTyped.ts, 2, 9), Decl(accessorsAreNotContextuallyTyped.ts, 4, 5))
+>x : Symbol(x, Decl(accessorsAreNotContextuallyTyped.ts, 2, 9), Decl(accessorsAreNotContextuallyTyped.ts, 4, 5))
 
         return (x: string) => "";
 >x : Symbol(x, Decl(accessorsAreNotContextuallyTyped.ts, 7, 16))
@@= skipped -19, +19 lines =@@
 
 var r = c.x(''); // string
 >r : Symbol(r, Decl(accessorsAreNotContextuallyTyped.ts, 12, 3))
->c.x : Symbol(C.x, Decl(accessorsAreNotContextuallyTyped.ts, 2, 9), Decl(accessorsAreNotContextuallyTyped.ts, 4, 5))
+>c.x : Symbol(x, Decl(accessorsAreNotContextuallyTyped.ts, 2, 9), Decl(accessorsAreNotContextuallyTyped.ts, 4, 5))
 >c : Symbol(c, Decl(accessorsAreNotContextuallyTyped.ts, 11, 3))
->x : Symbol(C.x, Decl(accessorsAreNotContextuallyTyped.ts, 2, 9), Decl(accessorsAreNotContextuallyTyped.ts, 4, 5))
+>x : Symbol(x, Decl(accessorsAreNotContextuallyTyped.ts, 2, 9), Decl(accessorsAreNotContextuallyTyped.ts, 4, 5))
 
