--- old.stringLiteralTypesOverloads02.js
+++ new.stringLiteralTypesOverloads02.js
@@= skipped -67, +67 lines =@@
 }
 var Consts1;
 (function (Consts1) {
-    var EMPTY_STRING = getFalsyPrimitive("string");
-    var ZERO = getFalsyPrimitive('number');
-    var FALSE = getFalsyPrimitive("boolean");
+    const EMPTY_STRING = getFalsyPrimitive("string");
+    const ZERO = getFalsyPrimitive('number');
+    const FALSE = getFalsyPrimitive("boolean");
 })(Consts1 || (Consts1 = {}));
-var string = "string";
-var number = "number";
-var boolean = "boolean";
-var stringOrNumber = string || number;
-var stringOrBoolean = string || boolean;
-var booleanOrNumber = number || boolean;
-var stringOrBooleanOrNumber = stringOrBoolean || number;
+const string = "string";
+const number = "number";
+const boolean = "boolean";
+const stringOrNumber = string || number;
+const stringOrBoolean = string || boolean;
+const booleanOrNumber = number || boolean;
+const stringOrBooleanOrNumber = stringOrBoolean || number;
 var Consts2;
 (function (Consts2) {
-    var EMPTY_STRING = getFalsyPrimitive(string);
-    var ZERO = getFalsyPrimitive(number);
-    var FALSE = getFalsyPrimitive(boolean);
-    var a = getFalsyPrimitive(stringOrNumber);
-    var b = getFalsyPrimitive(stringOrBoolean);
-    var c = getFalsyPrimitive(booleanOrNumber);
-    var d = getFalsyPrimitive(stringOrBooleanOrNumber);
+    const EMPTY_STRING = getFalsyPrimitive(string);
+    const ZERO = getFalsyPrimitive(number);
+    const FALSE = getFalsyPrimitive(boolean);
+    const a = getFalsyPrimitive(stringOrNumber);
+    const b = getFalsyPrimitive(stringOrBoolean);
+    const c = getFalsyPrimitive(booleanOrNumber);
+    const d = getFalsyPrimitive(stringOrBooleanOrNumber);
 })(Consts2 || (Consts2 = {}));

