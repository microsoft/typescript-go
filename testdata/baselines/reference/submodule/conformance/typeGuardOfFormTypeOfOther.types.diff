--- old.typeGuardOfFormTypeOfOther.types
+++ new.typeGuardOfFormTypeOfOther.types
@@= skipped -47, +47 lines =@@
 
 if (typeof strOrC === "Object") {
 >typeof strOrC === "Object" : boolean
->typeof strOrC : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof strOrC : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >strOrC : string | C
 >"Object" : "Object"
 
@@= skipped -16, +16 lines =@@
 }
 if (typeof numOrC === "Object") {
 >typeof numOrC === "Object" : boolean
->typeof numOrC : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof numOrC : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >numOrC : number | C
 >"Object" : "Object"
 
@@= skipped -16, +16 lines =@@
 }
 if (typeof boolOrC === "Object") {
 >typeof boolOrC === "Object" : boolean
->typeof boolOrC : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof boolOrC : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >boolOrC : boolean | C
 >"Object" : "Object"
 
@@= skipped -16, +16 lines =@@
 }
 if (typeof strOrC === "Object" as string) { // comparison is OK with cast
 >typeof strOrC === "Object" as string : boolean
->typeof strOrC : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof strOrC : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >strOrC : string | C
 >"Object" as string : string
 >"Object" : "Object"
@@= skipped -18, +18 lines =@@
 
 if (typeof strOrNumOrBool === "Object") {
 >typeof strOrNumOrBool === "Object" : boolean
->typeof strOrNumOrBool : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof strOrNumOrBool : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >strOrNumOrBool : string | number | boolean
 >"Object" : "Object"
 
@@= skipped -19, +19 lines =@@
 //  - when false, narrows the type of x by typeof x === s when true.
 if (typeof strOrC !== "Object") {
 >typeof strOrC !== "Object" : boolean
->typeof strOrC : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof strOrC : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >strOrC : string | C
 >"Object" : "Object"
 
@@= skipped -16, +16 lines =@@
 }
 if (typeof numOrC !== "Object") {
 >typeof numOrC !== "Object" : boolean
->typeof numOrC : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof numOrC : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >numOrC : number | C
 >"Object" : "Object"
 
@@= skipped -16, +16 lines =@@
 }
 if (typeof boolOrC !== "Object") {
 >typeof boolOrC !== "Object" : boolean
->typeof boolOrC : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof boolOrC : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >boolOrC : boolean | C
 >"Object" : "Object"
 
@@= skipped -17, +17 lines =@@
 
 if (typeof strOrNumOrBool !== "Object") {
 >typeof strOrNumOrBool !== "Object" : boolean
->typeof strOrNumOrBool : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof strOrNumOrBool : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >strOrNumOrBool : string | number | boolean
 >"Object" : "Object"
 
