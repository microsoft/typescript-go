--- old.thisTypeInBasePropertyAndDerivedContainerOfBase01.symbols
+++ new.thisTypeInBasePropertyAndDerivedContainerOfBase01.symbols
@@= skipped -6, +6 lines =@@
 >Foo : Symbol(Foo, Decl(thisTypeInBasePropertyAndDerivedContainerOfBase01.ts, 2, 1))
 
     item: T
->item : Symbol(BoxOfFoo.item, Decl(thisTypeInBasePropertyAndDerivedContainerOfBase01.ts, 0, 35))
+>item : Symbol(item, Decl(thisTypeInBasePropertyAndDerivedContainerOfBase01.ts, 0, 35))
 >T : Symbol(T, Decl(thisTypeInBasePropertyAndDerivedContainerOfBase01.ts, 0, 19))
 }
 
@@= skipped -8, +8 lines =@@
 >Foo : Symbol(Foo, Decl(thisTypeInBasePropertyAndDerivedContainerOfBase01.ts, 2, 1))
 
     self: this;
->self : Symbol(Foo.self, Decl(thisTypeInBasePropertyAndDerivedContainerOfBase01.ts, 4, 15))
+>self : Symbol(self, Decl(thisTypeInBasePropertyAndDerivedContainerOfBase01.ts, 4, 15))
 }
 
 interface Bar extends Foo {
@@= skipped -8, +8 lines =@@
 >Foo : Symbol(Foo, Decl(thisTypeInBasePropertyAndDerivedContainerOfBase01.ts, 2, 1))
 
     other: BoxOfFoo<this>;
->other : Symbol(Bar.other, Decl(thisTypeInBasePropertyAndDerivedContainerOfBase01.ts, 8, 27))
+>other : Symbol(other, Decl(thisTypeInBasePropertyAndDerivedContainerOfBase01.ts, 8, 27))
 >BoxOfFoo : Symbol(BoxOfFoo, Decl(thisTypeInBasePropertyAndDerivedContainerOfBase01.ts, 0, 0))
 }
