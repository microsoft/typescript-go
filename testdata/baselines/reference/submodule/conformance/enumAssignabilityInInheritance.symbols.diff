--- old.enumAssignabilityInInheritance.symbols
+++ new.enumAssignabilityInInheritance.symbols
@@= skipped -5, +5 lines =@@
 
 enum E { A }
 >E : Symbol(E, Decl(enumAssignabilityInInheritance.ts, 0, 0))
->A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 
 interface I0 {
 >I0 : Symbol(I0, Decl(enumAssignabilityInInheritance.ts, 3, 12))
@@= skipped -10, +10 lines =@@
 >E : Symbol(E, Decl(enumAssignabilityInInheritance.ts, 0, 0))
 
     foo: E; // identical and subtype, ok
->foo : Symbol(I0.foo, Decl(enumAssignabilityInInheritance.ts, 6, 19))
+>foo : Symbol(foo, Decl(enumAssignabilityInInheritance.ts, 6, 19))
 >E : Symbol(E, Decl(enumAssignabilityInInheritance.ts, 0, 0))
 }
 
@@= skipped -22, +22 lines =@@
 var r = foo(E.A); // E
 >r : Symbol(r, Decl(enumAssignabilityInInheritance.ts, 14, 3))
 >foo : Symbol(foo, Decl(enumAssignabilityInInheritance.ts, 8, 1), Decl(enumAssignabilityInInheritance.ts, 11, 30), Decl(enumAssignabilityInInheritance.ts, 12, 40))
->E.A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>E.A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 >E : Symbol(E, Decl(enumAssignabilityInInheritance.ts, 0, 0))
->A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 
 var r2 = foo(1); // number
 >r2 : Symbol(r2, Decl(enumAssignabilityInInheritance.ts, 15, 3))
@@= skipped -25, +25 lines =@@
 var r4 = foo2(E.A);
 >r4 : Symbol(r4, Decl(enumAssignabilityInInheritance.ts, 21, 3), Decl(enumAssignabilityInInheritance.ts, 26, 3), Decl(enumAssignabilityInInheritance.ts, 31, 3), Decl(enumAssignabilityInInheritance.ts, 36, 3), Decl(enumAssignabilityInInheritance.ts, 41, 3) ... and 11 more)
 >foo2 : Symbol(foo2, Decl(enumAssignabilityInInheritance.ts, 16, 24), Decl(enumAssignabilityInInheritance.ts, 18, 41))
->E.A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>E.A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 >E : Symbol(E, Decl(enumAssignabilityInInheritance.ts, 0, 0))
->A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 
 declare function foo3(x: boolean): boolean;
 >foo3 : Symbol(foo3, Decl(enumAssignabilityInInheritance.ts, 21, 19), Decl(enumAssignabilityInInheritance.ts, 23, 43))
@@= skipped -17, +17 lines =@@
 var r4 = foo3(E.A);
 >r4 : Symbol(r4, Decl(enumAssignabilityInInheritance.ts, 21, 3), Decl(enumAssignabilityInInheritance.ts, 26, 3), Decl(enumAssignabilityInInheritance.ts, 31, 3), Decl(enumAssignabilityInInheritance.ts, 36, 3), Decl(enumAssignabilityInInheritance.ts, 41, 3) ... and 11 more)
 >foo3 : Symbol(foo3, Decl(enumAssignabilityInInheritance.ts, 21, 19), Decl(enumAssignabilityInInheritance.ts, 23, 43))
->E.A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>E.A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 >E : Symbol(E, Decl(enumAssignabilityInInheritance.ts, 0, 0))
->A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 
 declare function foo4(x: Date): Date;
 >foo4 : Symbol(foo4, Decl(enumAssignabilityInInheritance.ts, 26, 19), Decl(enumAssignabilityInInheritance.ts, 28, 37))
@@= skipped -19, +19 lines =@@
 var r4 = foo4(E.A);
 >r4 : Symbol(r4, Decl(enumAssignabilityInInheritance.ts, 21, 3), Decl(enumAssignabilityInInheritance.ts, 26, 3), Decl(enumAssignabilityInInheritance.ts, 31, 3), Decl(enumAssignabilityInInheritance.ts, 36, 3), Decl(enumAssignabilityInInheritance.ts, 41, 3) ... and 11 more)
 >foo4 : Symbol(foo4, Decl(enumAssignabilityInInheritance.ts, 26, 19), Decl(enumAssignabilityInInheritance.ts, 28, 37))
->E.A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>E.A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 >E : Symbol(E, Decl(enumAssignabilityInInheritance.ts, 0, 0))
->A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 
 declare function foo5(x: RegExp): RegExp;
 >foo5 : Symbol(foo5, Decl(enumAssignabilityInInheritance.ts, 31, 19), Decl(enumAssignabilityInInheritance.ts, 33, 41))
@@= skipped -19, +19 lines =@@
 var r4 = foo5(E.A);
 >r4 : Symbol(r4, Decl(enumAssignabilityInInheritance.ts, 21, 3), Decl(enumAssignabilityInInheritance.ts, 26, 3), Decl(enumAssignabilityInInheritance.ts, 31, 3), Decl(enumAssignabilityInInheritance.ts, 36, 3), Decl(enumAssignabilityInInheritance.ts, 41, 3) ... and 11 more)
 >foo5 : Symbol(foo5, Decl(enumAssignabilityInInheritance.ts, 31, 19), Decl(enumAssignabilityInInheritance.ts, 33, 41))
->E.A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>E.A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 >E : Symbol(E, Decl(enumAssignabilityInInheritance.ts, 0, 0))
->A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 
 declare function foo6(x: { bar: number }): { bar: number };
 >foo6 : Symbol(foo6, Decl(enumAssignabilityInInheritance.ts, 36, 19), Decl(enumAssignabilityInInheritance.ts, 38, 59))
@@= skipped -19, +19 lines =@@
 var r4 = foo6(E.A);
 >r4 : Symbol(r4, Decl(enumAssignabilityInInheritance.ts, 21, 3), Decl(enumAssignabilityInInheritance.ts, 26, 3), Decl(enumAssignabilityInInheritance.ts, 31, 3), Decl(enumAssignabilityInInheritance.ts, 36, 3), Decl(enumAssignabilityInInheritance.ts, 41, 3) ... and 11 more)
 >foo6 : Symbol(foo6, Decl(enumAssignabilityInInheritance.ts, 36, 19), Decl(enumAssignabilityInInheritance.ts, 38, 59))
->E.A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>E.A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 >E : Symbol(E, Decl(enumAssignabilityInInheritance.ts, 0, 0))
->A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 
 declare function foo7(x: number[]): number[];
 >foo7 : Symbol(foo7, Decl(enumAssignabilityInInheritance.ts, 41, 19), Decl(enumAssignabilityInInheritance.ts, 43, 45))
@@= skipped -17, +17 lines =@@
 var r4 = foo7(E.A);
 >r4 : Symbol(r4, Decl(enumAssignabilityInInheritance.ts, 21, 3), Decl(enumAssignabilityInInheritance.ts, 26, 3), Decl(enumAssignabilityInInheritance.ts, 31, 3), Decl(enumAssignabilityInInheritance.ts, 36, 3), Decl(enumAssignabilityInInheritance.ts, 41, 3) ... and 11 more)
 >foo7 : Symbol(foo7, Decl(enumAssignabilityInInheritance.ts, 41, 19), Decl(enumAssignabilityInInheritance.ts, 43, 45))
->E.A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>E.A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 >E : Symbol(E, Decl(enumAssignabilityInInheritance.ts, 0, 0))
->A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 
 interface I8 { foo: string; }
 >I8 : Symbol(I8, Decl(enumAssignabilityInInheritance.ts, 46, 19))
->foo : Symbol(I8.foo, Decl(enumAssignabilityInInheritance.ts, 48, 14))
+>foo : Symbol(foo, Decl(enumAssignabilityInInheritance.ts, 48, 14))
 
 declare function foo8(x: I8): I8;
 >foo8 : Symbol(foo8, Decl(enumAssignabilityInInheritance.ts, 48, 29), Decl(enumAssignabilityInInheritance.ts, 49, 33))
@@= skipped -23, +23 lines =@@
 var r4 = foo8(E.A);
 >r4 : Symbol(r4, Decl(enumAssignabilityInInheritance.ts, 21, 3), Decl(enumAssignabilityInInheritance.ts, 26, 3), Decl(enumAssignabilityInInheritance.ts, 31, 3), Decl(enumAssignabilityInInheritance.ts, 36, 3), Decl(enumAssignabilityInInheritance.ts, 41, 3) ... and 11 more)
 >foo8 : Symbol(foo8, Decl(enumAssignabilityInInheritance.ts, 48, 29), Decl(enumAssignabilityInInheritance.ts, 49, 33))
->E.A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>E.A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 >E : Symbol(E, Decl(enumAssignabilityInInheritance.ts, 0, 0))
->A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 
 class A { foo: number; }
 >A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 52, 19))
->foo : Symbol(A.foo, Decl(enumAssignabilityInInheritance.ts, 54, 9))
+>foo : Symbol(foo, Decl(enumAssignabilityInInheritance.ts, 54, 9))
 
 declare function foo9(x: A): A;
 >foo9 : Symbol(foo9, Decl(enumAssignabilityInInheritance.ts, 54, 24), Decl(enumAssignabilityInInheritance.ts, 55, 31))
@@= skipped -23, +23 lines =@@
 var r4 = foo9(E.A);
 >r4 : Symbol(r4, Decl(enumAssignabilityInInheritance.ts, 21, 3), Decl(enumAssignabilityInInheritance.ts, 26, 3), Decl(enumAssignabilityInInheritance.ts, 31, 3), Decl(enumAssignabilityInInheritance.ts, 36, 3), Decl(enumAssignabilityInInheritance.ts, 41, 3) ... and 11 more)
 >foo9 : Symbol(foo9, Decl(enumAssignabilityInInheritance.ts, 54, 24), Decl(enumAssignabilityInInheritance.ts, 55, 31))
->E.A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>E.A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 >E : Symbol(E, Decl(enumAssignabilityInInheritance.ts, 0, 0))
->A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 
 class A2<T> { foo: T; }
 >A2 : Symbol(A2, Decl(enumAssignabilityInInheritance.ts, 58, 19))
 >T : Symbol(T, Decl(enumAssignabilityInInheritance.ts, 60, 9))
->foo : Symbol(A2.foo, Decl(enumAssignabilityInInheritance.ts, 60, 13))
+>foo : Symbol(foo, Decl(enumAssignabilityInInheritance.ts, 60, 13))
 >T : Symbol(T, Decl(enumAssignabilityInInheritance.ts, 60, 9))
 
 declare function foo10(x: A2<number>): A2<number>;
@@= skipped -25, +25 lines =@@
 var r4 = foo10(E.A);
 >r4 : Symbol(r4, Decl(enumAssignabilityInInheritance.ts, 21, 3), Decl(enumAssignabilityInInheritance.ts, 26, 3), Decl(enumAssignabilityInInheritance.ts, 31, 3), Decl(enumAssignabilityInInheritance.ts, 36, 3), Decl(enumAssignabilityInInheritance.ts, 41, 3) ... and 11 more)
 >foo10 : Symbol(foo10, Decl(enumAssignabilityInInheritance.ts, 60, 23), Decl(enumAssignabilityInInheritance.ts, 61, 50))
->E.A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>E.A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 >E : Symbol(E, Decl(enumAssignabilityInInheritance.ts, 0, 0))
->A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 
 declare function foo11(x: (x) => number): (x) => number;
 >foo11 : Symbol(foo11, Decl(enumAssignabilityInInheritance.ts, 64, 20), Decl(enumAssignabilityInInheritance.ts, 66, 56))
@@= skipped -19, +19 lines =@@
 var r4 = foo11(E.A);
 >r4 : Symbol(r4, Decl(enumAssignabilityInInheritance.ts, 21, 3), Decl(enumAssignabilityInInheritance.ts, 26, 3), Decl(enumAssignabilityInInheritance.ts, 31, 3), Decl(enumAssignabilityInInheritance.ts, 36, 3), Decl(enumAssignabilityInInheritance.ts, 41, 3) ... and 11 more)
 >foo11 : Symbol(foo11, Decl(enumAssignabilityInInheritance.ts, 64, 20), Decl(enumAssignabilityInInheritance.ts, 66, 56))
->E.A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>E.A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 >E : Symbol(E, Decl(enumAssignabilityInInheritance.ts, 0, 0))
->A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 
 declare function foo12(x: <T>(x: T) => T): <T>(x: T) => T;
 >foo12 : Symbol(foo12, Decl(enumAssignabilityInInheritance.ts, 69, 20), Decl(enumAssignabilityInInheritance.ts, 71, 58))
@@= skipped -25, +25 lines =@@
 var r4 = foo12(E.A);
 >r4 : Symbol(r4, Decl(enumAssignabilityInInheritance.ts, 21, 3), Decl(enumAssignabilityInInheritance.ts, 26, 3), Decl(enumAssignabilityInInheritance.ts, 31, 3), Decl(enumAssignabilityInInheritance.ts, 36, 3), Decl(enumAssignabilityInInheritance.ts, 41, 3) ... and 11 more)
 >foo12 : Symbol(foo12, Decl(enumAssignabilityInInheritance.ts, 69, 20), Decl(enumAssignabilityInInheritance.ts, 71, 58))
->E.A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>E.A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 >E : Symbol(E, Decl(enumAssignabilityInInheritance.ts, 0, 0))
->A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 
 enum E2 { A }
 >E2 : Symbol(E2, Decl(enumAssignabilityInInheritance.ts, 74, 20))
->A : Symbol(E2.A, Decl(enumAssignabilityInInheritance.ts, 76, 9))
+>A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 76, 9))
 
 declare function foo13(x: E2): E2;
 >foo13 : Symbol(foo13, Decl(enumAssignabilityInInheritance.ts, 76, 13), Decl(enumAssignabilityInInheritance.ts, 77, 34))
@@= skipped -23, +23 lines =@@
 var r4 = foo13(E.A);
 >r4 : Symbol(r4, Decl(enumAssignabilityInInheritance.ts, 21, 3), Decl(enumAssignabilityInInheritance.ts, 26, 3), Decl(enumAssignabilityInInheritance.ts, 31, 3), Decl(enumAssignabilityInInheritance.ts, 36, 3), Decl(enumAssignabilityInInheritance.ts, 41, 3) ... and 11 more)
 >foo13 : Symbol(foo13, Decl(enumAssignabilityInInheritance.ts, 76, 13), Decl(enumAssignabilityInInheritance.ts, 77, 34))
->E.A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>E.A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 >E : Symbol(E, Decl(enumAssignabilityInInheritance.ts, 0, 0))
->A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 
 function f() { }
 >f : Symbol(f, Decl(enumAssignabilityInInheritance.ts, 80, 20), Decl(enumAssignabilityInInheritance.ts, 82, 16))
@@= skipped -28, +28 lines =@@
 var r4 = foo14(E.A);
 >r4 : Symbol(r4, Decl(enumAssignabilityInInheritance.ts, 21, 3), Decl(enumAssignabilityInInheritance.ts, 26, 3), Decl(enumAssignabilityInInheritance.ts, 31, 3), Decl(enumAssignabilityInInheritance.ts, 36, 3), Decl(enumAssignabilityInInheritance.ts, 41, 3) ... and 11 more)
 >foo14 : Symbol(foo14, Decl(enumAssignabilityInInheritance.ts, 85, 1), Decl(enumAssignabilityInInheritance.ts, 86, 46))
->E.A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>E.A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 >E : Symbol(E, Decl(enumAssignabilityInInheritance.ts, 0, 0))
->A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 
 class CC { baz: string }
 >CC : Symbol(CC, Decl(enumAssignabilityInInheritance.ts, 89, 20), Decl(enumAssignabilityInInheritance.ts, 91, 24))
->baz : Symbol(CC.baz, Decl(enumAssignabilityInInheritance.ts, 91, 10))
+>baz : Symbol(baz, Decl(enumAssignabilityInInheritance.ts, 91, 10))
 
 module CC {
 >CC : Symbol(CC, Decl(enumAssignabilityInInheritance.ts, 89, 20), Decl(enumAssignabilityInInheritance.ts, 91, 24))
@@= skipped -29, +29 lines =@@
 var r4 = foo15(E.A);
 >r4 : Symbol(r4, Decl(enumAssignabilityInInheritance.ts, 21, 3), Decl(enumAssignabilityInInheritance.ts, 26, 3), Decl(enumAssignabilityInInheritance.ts, 31, 3), Decl(enumAssignabilityInInheritance.ts, 36, 3), Decl(enumAssignabilityInInheritance.ts, 41, 3) ... and 11 more)
 >foo15 : Symbol(foo15, Decl(enumAssignabilityInInheritance.ts, 94, 1), Decl(enumAssignabilityInInheritance.ts, 95, 34))
->E.A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>E.A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 >E : Symbol(E, Decl(enumAssignabilityInInheritance.ts, 0, 0))
->A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 
 declare function foo16(x: Object): Object;
 >foo16 : Symbol(foo16, Decl(enumAssignabilityInInheritance.ts, 98, 20), Decl(enumAssignabilityInInheritance.ts, 100, 42))
@@= skipped -19, +19 lines =@@
 var r4 = foo16(E.A);
 >r4 : Symbol(r4, Decl(enumAssignabilityInInheritance.ts, 21, 3), Decl(enumAssignabilityInInheritance.ts, 26, 3), Decl(enumAssignabilityInInheritance.ts, 31, 3), Decl(enumAssignabilityInInheritance.ts, 36, 3), Decl(enumAssignabilityInInheritance.ts, 41, 3) ... and 11 more)
 >foo16 : Symbol(foo16, Decl(enumAssignabilityInInheritance.ts, 98, 20), Decl(enumAssignabilityInInheritance.ts, 100, 42))
->E.A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>E.A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 >E : Symbol(E, Decl(enumAssignabilityInInheritance.ts, 0, 0))
->A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 
 declare function foo17(x: {}): {};
 >foo17 : Symbol(foo17, Decl(enumAssignabilityInInheritance.ts, 103, 20), Decl(enumAssignabilityInInheritance.ts, 105, 34))
@@= skipped -17, +17 lines =@@
 var r4 = foo16(E.A);
 >r4 : Symbol(r4, Decl(enumAssignabilityInInheritance.ts, 21, 3), Decl(enumAssignabilityInInheritance.ts, 26, 3), Decl(enumAssignabilityInInheritance.ts, 31, 3), Decl(enumAssignabilityInInheritance.ts, 36, 3), Decl(enumAssignabilityInInheritance.ts, 41, 3) ... and 11 more)
 >foo16 : Symbol(foo16, Decl(enumAssignabilityInInheritance.ts, 98, 20), Decl(enumAssignabilityInInheritance.ts, 100, 42))
->E.A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>E.A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 >E : Symbol(E, Decl(enumAssignabilityInInheritance.ts, 0, 0))
->A : Symbol(E.A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
+>A : Symbol(A, Decl(enumAssignabilityInInheritance.ts, 3, 8))
 
