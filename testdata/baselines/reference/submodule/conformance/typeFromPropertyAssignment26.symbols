//// [tests/cases/conformance/salsa/typeFromPropertyAssignment26.ts] ////

=== bug24730.js ===
var UI = {}
>UI : Symbol(UI, Decl(bug24730.js, 0, 3))

UI.TreeElement = class {
>UI.TreeElement : Symbol(TreeElement, Decl(bug24730.js, 0, 11))
>UI : Symbol(UI, Decl(bug24730.js, 0, 3))
>TreeElement : Symbol(TreeElement, Decl(bug24730.js, 0, 11))

    constructor() {
        this.treeOutline = 12
>this.treeOutline : Symbol(treeOutline, Decl(bug24730.js, 2, 19))
>this : Symbol(TreeElement, Decl(bug24730.js, 1, 16))
>treeOutline : Symbol(treeOutline, Decl(bug24730.js, 2, 19))
    }
};
UI.context = new UI.TreeElement()
>UI.context : Symbol(context, Decl(bug24730.js, 5, 2))
>UI : Symbol(UI, Decl(bug24730.js, 0, 3))
>context : Symbol(context, Decl(bug24730.js, 5, 2))
>UI.TreeElement : Symbol(TreeElement, Decl(bug24730.js, 0, 11))
>UI : Symbol(UI, Decl(bug24730.js, 0, 3))
>TreeElement : Symbol(TreeElement, Decl(bug24730.js, 0, 11))

class C extends UI.TreeElement {
>C : Symbol(C, Decl(bug24730.js, 6, 33))
>UI.TreeElement : Symbol(TreeElement, Decl(bug24730.js, 0, 11))
>UI : Symbol(UI, Decl(bug24730.js, 0, 3))
>TreeElement : Symbol(TreeElement, Decl(bug24730.js, 0, 11))

    onpopulate() {
>onpopulate : Symbol(onpopulate, Decl(bug24730.js, 8, 32))

        this.doesNotExist
>this : Symbol(C, Decl(bug24730.js, 6, 33))

        this.treeOutline.doesntExistEither()
>this.treeOutline : Symbol(treeOutline, Decl(bug24730.js, 2, 19))
>this : Symbol(C, Decl(bug24730.js, 6, 33))
>treeOutline : Symbol(treeOutline, Decl(bug24730.js, 2, 19))
    }
};

