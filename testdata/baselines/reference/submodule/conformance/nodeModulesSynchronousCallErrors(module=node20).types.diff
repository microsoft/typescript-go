--- old.nodeModulesSynchronousCallErrors(module=node20).types
+++ new.nodeModulesSynchronousCallErrors(module=node20).types
@@= skipped -24, +24 lines =@@
 >"../index.js" : "../index.js"

     const mod4 = await import ("./index.js");
->mod4 : { default: typeof mod2; f(): Promise<void>; }
->await import ("./index.js") : { default: typeof mod2; f(): Promise<void>; }
->import ("./index.js") : Promise<{ default: typeof mod2; f(): Promise<void>; }>
+>mod4 : { f(): Promise<void>; default: typeof mod2; }
+>await import ("./index.js") : { f(): Promise<void>; default: typeof mod2; }
+>import ("./index.js") : Promise<{ f(): Promise<void>; default: typeof mod2; }>
 >"./index.js" : "./index.js"

     h();
@@= skipped -34, +34 lines =@@
 >"./index.js" : "./index.js"

     const mod4 = await import ("./subfolder/index.js");
->mod4 : { default: typeof mod2; f(): Promise<void>; }
->await import ("./subfolder/index.js") : { default: typeof mod2; f(): Promise<void>; }
->import ("./subfolder/index.js") : Promise<{ default: typeof mod2; f(): Promise<void>; }>
+>mod4 : { f(): Promise<void>; default: typeof mod2; }
+>await import ("./subfolder/index.js") : { f(): Promise<void>; default: typeof mod2; }
+>import ("./subfolder/index.js") : Promise<{ f(): Promise<void>; default: typeof mod2; }>
 >"./subfolder/index.js" : "./subfolder/index.js"

     f();