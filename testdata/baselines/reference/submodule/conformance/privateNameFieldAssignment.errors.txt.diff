--- old.privateNameFieldAssignment.errors.txt
+++ new.privateNameFieldAssignment.errors.txt
@@= skipped -0, +-1 lines =@@
-<no content>
@@= skipped --1, +1 lines =@@
+error TS2318: Cannot find global type 'Array'.
+error TS2318: Cannot find global type 'Function'.
+error TS2318: Cannot find global type 'IArguments'.
+error TS2318: Cannot find global type 'RegExp'.
+error TS2318: Cannot find global type 'String'.
+error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
+error TS2552: Cannot find name 'Number'. Did you mean 'number'?
+error TS2552: Cannot find name 'Object'. Did you mean 'object'?
+
+
+!!! error TS2318: Cannot find global type 'Array'.
+!!! error TS2318: Cannot find global type 'Function'.
+!!! error TS2318: Cannot find global type 'IArguments'.
+!!! error TS2318: Cannot find global type 'RegExp'.
+!!! error TS2318: Cannot find global type 'String'.
+!!! error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
+!!! error TS2552: Cannot find name 'Number'. Did you mean 'number'?
+!!! error TS2552: Cannot find name 'Object'. Did you mean 'object'?
+==== privateNameFieldAssignment.ts (0 errors) ====
+    class A {
+        #field = 0;
+        constructor() {
+            this.#field = 1;
+            this.#field += 2;
+            this.#field -= 3;
+            this.#field /= 4;
+            this.#field *= 5;
+            this.#field **= 6;
+            this.#field %= 7;
+            this.#field <<= 8;
+            this.#field >>= 9;
+            this.#field >>>= 10;
+            this.#field &= 11;
+            this.#field |= 12;
+            this.#field ^= 13;
+            A.getInstance().#field = 1;
+            A.getInstance().#field += 2;
+            A.getInstance().#field -= 3;
+            A.getInstance().#field /= 4;
+            A.getInstance().#field *= 5;
+            A.getInstance().#field **= 6;
+            A.getInstance().#field %= 7;
+            A.getInstance().#field <<= 8;
+            A.getInstance().#field >>= 9;
+            A.getInstance().#field >>>= 10;
+            A.getInstance().#field &= 11;
+            A.getInstance().#field |= 12;
+            A.getInstance().#field ^= 13;
+        }
+        static getInstance() {
+            return new A();
+        }
+    }
+    
