prefixPostfix.js(18,12): error TS7006: Parameter 'x' implicitly has an 'any' type.
prefixPostfix.js(18,15): error TS7006: Parameter 'y' implicitly has an 'any' type.
prefixPostfix.js(18,18): error TS7006: Parameter 'z' implicitly has an 'any' type.
prefixPostfix.js(18,21): error TS7006: Parameter 'a' implicitly has an 'any' type.
prefixPostfix.js(18,24): error TS7006: Parameter 'b' implicitly has an 'any' type.
prefixPostfix.js(18,27): error TS7006: Parameter 'c' implicitly has an 'any' type.
prefixPostfix.js(18,30): error TS7006: Parameter 'e' implicitly has an 'any' type.
prefixPostfix.js(18,33): error TS7006: Parameter 'f' implicitly has an 'any' type.
prefixPostfix.js(18,36): error TS7006: Parameter 'g' implicitly has an 'any' type.
prefixPostfix.js(18,39): error TS7006: Parameter 'h' implicitly has an 'any' type.
prefixPostfix.js(18,42): error TS7006: Parameter 'i' implicitly has an 'any' type.
prefixPostfix.js(18,45): error TS7006: Parameter 'j' implicitly has an 'any' type.
prefixPostfix.js(18,48): error TS7006: Parameter 'k' implicitly has an 'any' type.
prefixPostfix.js(18,51): error TS7006: Parameter 'l' implicitly has an 'any' type.
prefixPostfix.js(18,54): error TS7006: Parameter 'm' implicitly has an 'any' type.


==== prefixPostfix.js (15 errors) ====
    /**
     * @param {number![]} x - number[]
     * @param {!number[]} y - number[]
     * @param {(number[])!} z - number[]
     * @param {number?[]} a - parse error without parentheses
     * @param {?number[]} b - number[] | null
     * @param {(number[])?} c - number[] | null
     * @param {...?number} e - (number | null)[]
     * @param {...number?} f - number[] | null
     * @param {...number!?} g - number[] | null
     * @param {...number?!} h - parse error without parentheses (also nonsensical)
     * @param {...number[]} i - number[][]
     * @param {...number![]?} j - number[][] | null
     * @param {...number?[]!} k - parse error without parentheses
     * @param {number extends number ? true : false} l - conditional types work
     * @param {[number, number?]} m - [number, (number | undefined)?]
     */
    function f(x, y, z, a, b, c, e, f, g, h, i, j, k, l, m) {
               ~
!!! error TS7006: Parameter 'x' implicitly has an 'any' type.
                  ~
!!! error TS7006: Parameter 'y' implicitly has an 'any' type.
                     ~
!!! error TS7006: Parameter 'z' implicitly has an 'any' type.
                        ~
!!! error TS7006: Parameter 'a' implicitly has an 'any' type.
                           ~
!!! error TS7006: Parameter 'b' implicitly has an 'any' type.
                              ~
!!! error TS7006: Parameter 'c' implicitly has an 'any' type.
                                 ~
!!! error TS7006: Parameter 'e' implicitly has an 'any' type.
                                    ~
!!! error TS7006: Parameter 'f' implicitly has an 'any' type.
                                       ~
!!! error TS7006: Parameter 'g' implicitly has an 'any' type.
                                          ~
!!! error TS7006: Parameter 'h' implicitly has an 'any' type.
                                             ~
!!! error TS7006: Parameter 'i' implicitly has an 'any' type.
                                                ~
!!! error TS7006: Parameter 'j' implicitly has an 'any' type.
                                                   ~
!!! error TS7006: Parameter 'k' implicitly has an 'any' type.
                                                      ~
!!! error TS7006: Parameter 'l' implicitly has an 'any' type.
                                                         ~
!!! error TS7006: Parameter 'm' implicitly has an 'any' type.
    }
    