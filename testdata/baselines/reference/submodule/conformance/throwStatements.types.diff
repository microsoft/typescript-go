--- old.throwStatements.types
+++ new.throwStatements.types
@@= skipped -3, +3 lines =@@
 // all legal
 
 interface I {
+>I : I
+
     id: number;
 >id : number
 }
@@= skipped -13, +15 lines =@@
 
 class D<T>{
 >D : D<T>
+>T : T
 
     source: T;
 >source : T
@@= skipped -147, +148 lines =@@
 >aModule : typeof M
 
 throw typeof M;
->typeof M : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof M : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >M : typeof M
 
 var aClassInModule = new M.A();
->aClassInModule : M.A
->new M.A() : M.A
->M.A : typeof M.A
+>aClassInModule : A
+>new M.A() : A
+>M.A : typeof A
 >M : typeof M
->A : typeof M.A
+>A : typeof A
 
 throw aClassInModule;
->aClassInModule : M.A
+>aClassInModule : A
 
 var aFunctionInModule = M.F2;
 >aFunctionInModule : (x: number) => string
@@= skipped -49, +49 lines =@@
 
 throw <T>(x:T) => 42;
 ><T>(x:T) => 42 : <T>(x: T) => number
+>T : T
 >x : T
 >42 : 42
 
