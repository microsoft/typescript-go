--- old.functionCalls.symbols
+++ new.functionCalls.symbols
@@= skipped -27, +27 lines =@@
 // Invoke function call on value of a subtype of Function with no call signatures with no type arguments
 interface SubFunc extends Function {
 >SubFunc : Symbol(SubFunc, Decl(functionCalls.ts, 9, 26))
->Function : Symbol(Function, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>Function : Symbol(Function, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))

     prop: number;
 >prop : Symbol(SubFunc.prop, Decl(functionCalls.ts, 13, 36))
@@= skipped -34, +34 lines =@@
 // These should be errors
 var func: Function;
 >func : Symbol(func, Decl(functionCalls.ts, 30, 3))
->Function : Symbol(Function, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>Function : Symbol(Function, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))

 func<number>(0);
 >func : Symbol(func, Decl(functionCalls.ts, 30, 3))