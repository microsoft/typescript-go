--- old.asyncArrowFunctionCapturesArguments_es6.symbols
+++ new.asyncArrowFunctionCapturesArguments_es6.symbols
@@ -5,16 +5,14 @@
 >C : Symbol(C, Decl(asyncArrowFunctionCapturesArguments_es6.ts, 0, 0))
 
    method() {
->method : Symbol(C.method, Decl(asyncArrowFunctionCapturesArguments_es6.ts, 0, 9))
+>method : Symbol(method, Decl(asyncArrowFunctionCapturesArguments_es6.ts, 0, 9))
 
       function other() {}
 >other : Symbol(other, Decl(asyncArrowFunctionCapturesArguments_es6.ts, 1, 13))
 
       var fn = async () => await other.apply(this, arguments);
 >fn : Symbol(fn, Decl(asyncArrowFunctionCapturesArguments_es6.ts, 3, 9))
->other.apply : Symbol(Function.apply, Decl(lib.es5.d.ts, --, --))
 >other : Symbol(other, Decl(asyncArrowFunctionCapturesArguments_es6.ts, 1, 13))
->apply : Symbol(Function.apply, Decl(lib.es5.d.ts, --, --))
 >this : Symbol(C, Decl(asyncArrowFunctionCapturesArguments_es6.ts, 0, 0))
 >arguments : Symbol(arguments)
    }
@@ -24,7 +22,5 @@
 >f : Symbol(f, Decl(asyncArrowFunctionCapturesArguments_es6.ts, 5, 1))
 
    return async () => async () => arguments.length;
->arguments.length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 >arguments : Symbol(arguments)
->length : Symbol(IArguments.length, Decl(lib.es5.d.ts, --, --))
 }
