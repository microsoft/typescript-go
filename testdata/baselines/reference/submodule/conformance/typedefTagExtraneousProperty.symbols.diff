--- old.typedefTagExtraneousProperty.symbols
+++ new.typedefTagExtraneousProperty.symbols
@@= skipped -1, +1 lines =@@
 
 === typedefTagExtraneousProperty.js ===
 /** @typedef {Object.<string,string>} Mmap
+>Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
+
  * @property {string} ignoreMe - should be ignored
  */
 
 /** @type {Mmap} */
 var y = { bye: "no" };
->y : Symbol(y, Decl(typedefTagExtraneousProperty.js, 5, 3), Decl(typedefTagExtraneousProperty.js, 6, 1), Decl(typedefTagExtraneousProperty.js, 7, 57))
+>y : Symbol(y, Decl(typedefTagExtraneousProperty.js, 5, 3))
 >bye : Symbol(bye, Decl(typedefTagExtraneousProperty.js, 5, 9))
 
 y
->y : Symbol(y, Decl(typedefTagExtraneousProperty.js, 5, 3), Decl(typedefTagExtraneousProperty.js, 6, 1), Decl(typedefTagExtraneousProperty.js, 7, 57))
+>y : Symbol(y, Decl(typedefTagExtraneousProperty.js, 5, 3))
 
 y.ignoreMe = "ok but just because of the index signature"
->y : Symbol(y, Decl(typedefTagExtraneousProperty.js, 5, 3), Decl(typedefTagExtraneousProperty.js, 6, 1), Decl(typedefTagExtraneousProperty.js, 7, 57))
+>y : Symbol(y, Decl(typedefTagExtraneousProperty.js, 5, 3))
 
 y['hi'] = "yes"
->y : Symbol(y, Decl(typedefTagExtraneousProperty.js, 5, 3), Decl(typedefTagExtraneousProperty.js, 6, 1), Decl(typedefTagExtraneousProperty.js, 7, 57))
+>y : Symbol(y, Decl(typedefTagExtraneousProperty.js, 5, 3))
 
