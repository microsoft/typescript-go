//// [tests/cases/conformance/jsx/tsxUnionTypeComponent1.tsx] ////

=== file.tsx ===
import React = require('react');
>React : Symbol(React, Decl(file.tsx, 0, 0))

interface ComponentProps {
>ComponentProps : Symbol(ComponentProps, Decl(file.tsx, 0, 32))

    AnyComponent: React.StatelessComponent<any> | React.ComponentClass<any>;
>AnyComponent : Symbol(AnyComponent, Decl(file.tsx, 2, 26))
>React : Symbol(React, Decl(file.tsx, 0, 0))
>StatelessComponent : Symbol(StatelessComponent)
>React : Symbol(React, Decl(file.tsx, 0, 0))
>ComponentClass : Symbol(ComponentClass)
}

class MyComponent extends React.Component<ComponentProps, {}> {
>MyComponent : Symbol(MyComponent, Decl(file.tsx, 4, 1))
>React.Component : Symbol(unknown)
>React : Symbol(React, Decl(file.tsx, 0, 0))
>Component : Symbol(unknown)
>ComponentProps : Symbol(ComponentProps, Decl(file.tsx, 0, 32))

    render() {
>render : Symbol(render, Decl(file.tsx, 6, 63))

        const { AnyComponent } = this.props;
>AnyComponent : Symbol(AnyComponent, Decl(file.tsx, 8, 15))
>this : Symbol(MyComponent, Decl(file.tsx, 4, 1))

        return (<AnyComponent />);
>AnyComponent : Symbol(AnyComponent, Decl(file.tsx, 8, 15))
    }
}

// Stateless Component As Props
<MyComponent AnyComponent={() => <button>test</button>}/>
>MyComponent : Symbol(MyComponent, Decl(file.tsx, 4, 1))
>AnyComponent : Symbol(AnyComponent, Decl(file.tsx, 14, 12))

// Component Class as Props
class MyButtonComponent extends React.Component<{},{}> {
>MyButtonComponent : Symbol(MyButtonComponent, Decl(file.tsx, 14, 57))
>React.Component : Symbol(unknown)
>React : Symbol(React, Decl(file.tsx, 0, 0))
>Component : Symbol(unknown)
}

<MyComponent AnyComponent={MyButtonComponent} />
>MyComponent : Symbol(MyComponent, Decl(file.tsx, 4, 1))
>AnyComponent : Symbol(AnyComponent, Decl(file.tsx, 20, 12))
>MyButtonComponent : Symbol(MyButtonComponent, Decl(file.tsx, 14, 57))


