--- old.functionConstraintSatisfaction3.types
+++ new.functionConstraintSatisfaction3.types
@@= skipped -4, +4 lines =@@
 
 function foo<T extends (x: string) => string>(x: T): T { return x; }
 >foo : <T extends (x: string) => string>(x: T) => T
+>T : T
 >x : string
 >x : T
 >x : T
 
 interface I {
+>I : I
+
     (): string;
 }
 var i: I;
@@= skipped -72, +75 lines =@@
 >c : { (): string; (x: any): string; }
 
 interface I2<T> {
+>I2 : I2<T>
+>T : T
+
     (x: T): T;
 >x : T
 }
@@= skipped -8, +11 lines =@@
 
 class C2<T> {
 >C2 : C2<T>
+>T : T
 
     foo: T;
 >foo : T
@@= skipped -7, +8 lines =@@
 
 var a2: { <T>(x: T): T };
 >a2 : <T>(x: T) => T
+>T : T
 >x : T
 
 var b2: { new <T>(x: T): T };
 >b2 : new <T>(x: T) => T
+>T : T
 >x : T
 
 var c2: { <T>(x: T): T; <T>(x: T, y: T): T };
 >c2 : { <T>(x: T): T; <T>(x: T, y: T): T; }
+>T : T
 >x : T
+>T : T
 >x : T
 >y : T
 
@@= skipped -17, +21 lines =@@
 >foo(function <U>(x: U) { return x; }) : <U>(x: U) => U
 >foo : <T extends (x: string) => string>(x: T) => T
 >function <U>(x: U) { return x; } : <U>(x: U) => U
+>U : U
 >x : U
 >x : U
 
@@= skipped -8, +9 lines =@@
 >foo(<U extends string>(x: U) => x) : <U extends string>(x: U) => U
 >foo : <T extends (x: string) => string>(x: T) => T
 ><U extends string>(x: U) => x : <U extends string>(x: U) => U
+>U : U
 >x : U
 >x : U
 
