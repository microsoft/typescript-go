--- old.conditionalOperatorWithoutIdenticalBCT.symbols
+++ new.conditionalOperatorWithoutIdenticalBCT.symbols
@@= skipped -3, +3 lines =@@
 //Cond ? Expr1 : Expr2,  Expr1 and Expr2 have no identical best common type
 class X { propertyX: any; propertyX1: number; propertyX2: string };
 >X : Symbol(X, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 0, 0))
->propertyX : Symbol(X.propertyX, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 9))
->propertyX1 : Symbol(X.propertyX1, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 25))
->propertyX2 : Symbol(X.propertyX2, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 45))
+>propertyX : Symbol(propertyX, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 9))
+>propertyX1 : Symbol(propertyX1, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 25))
+>propertyX2 : Symbol(propertyX2, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 45))
 
 class A extends X { propertyA: number };
 >A : Symbol(A, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 67))
 >X : Symbol(X, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 0, 0))
->propertyA : Symbol(A.propertyA, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 2, 19))
+>propertyA : Symbol(propertyA, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 2, 19))
 
 class B extends X { propertyB: string };
 >B : Symbol(B, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 2, 40))
 >X : Symbol(X, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 0, 0))
->propertyB : Symbol(B.propertyB, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 3, 19))
+>propertyB : Symbol(propertyB, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 3, 19))
 
 var x: X;
 >x : Symbol(x, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 5, 3))
@@= skipped -61, +61 lines =@@
 >t : Symbol(t, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 18, 14))
 >X : Symbol(X, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 0, 0))
 >m : Symbol(m, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 18, 40))
->m.propertyX1 : Symbol(X.propertyX1, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 25))
+>m.propertyX1 : Symbol(propertyX1, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 25))
 >m : Symbol(m, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 18, 40))
->propertyX1 : Symbol(X.propertyX1, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 25))
+>propertyX1 : Symbol(propertyX1, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 25))
 >n : Symbol(n, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 18, 62))
->n.propertyX2 : Symbol(X.propertyX2, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 45))
+>n.propertyX2 : Symbol(propertyX2, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 45))
 >n : Symbol(n, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 18, 62))
->propertyX2 : Symbol(X.propertyX2, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 45))
+>propertyX2 : Symbol(propertyX2, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 45))
 
 var result5: (t: X) => string = true ? (m) => m.propertyX1 : (n) => n.propertyX2;
 >result5 : Symbol(result5, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 19, 3))
 >t : Symbol(t, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 19, 14))
 >X : Symbol(X, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 0, 0))
 >m : Symbol(m, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 19, 40))
->m.propertyX1 : Symbol(X.propertyX1, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 25))
+>m.propertyX1 : Symbol(propertyX1, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 25))
 >m : Symbol(m, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 19, 40))
->propertyX1 : Symbol(X.propertyX1, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 25))
+>propertyX1 : Symbol(propertyX1, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 25))
 >n : Symbol(n, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 19, 62))
->n.propertyX2 : Symbol(X.propertyX2, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 45))
+>n.propertyX2 : Symbol(propertyX2, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 45))
 >n : Symbol(n, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 19, 62))
->propertyX2 : Symbol(X.propertyX2, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 45))
+>propertyX2 : Symbol(propertyX2, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 45))
 
 var result6: (t: X) => boolean = true ? (m) => m.propertyX1 : (n) => n.propertyX2;
 >result6 : Symbol(result6, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 20, 3))
 >t : Symbol(t, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 20, 14))
 >X : Symbol(X, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 0, 0))
 >m : Symbol(m, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 20, 41))
->m.propertyX1 : Symbol(X.propertyX1, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 25))
+>m.propertyX1 : Symbol(propertyX1, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 25))
 >m : Symbol(m, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 20, 41))
->propertyX1 : Symbol(X.propertyX1, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 25))
+>propertyX1 : Symbol(propertyX1, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 25))
 >n : Symbol(n, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 20, 63))
->n.propertyX2 : Symbol(X.propertyX2, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 45))
+>n.propertyX2 : Symbol(propertyX2, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 45))
 >n : Symbol(n, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 20, 63))
->propertyX2 : Symbol(X.propertyX2, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 45))
+>propertyX2 : Symbol(propertyX2, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 45))
 
 var result61: (t: X) => number| string = true ? (m) => m.propertyX1 : (n) => n.propertyX2;
 >result61 : Symbol(result61, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 21, 3))
 >t : Symbol(t, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 21, 15))
 >X : Symbol(X, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 0, 0))
 >m : Symbol(m, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 21, 49))
->m.propertyX1 : Symbol(X.propertyX1, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 25))
+>m.propertyX1 : Symbol(propertyX1, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 25))
 >m : Symbol(m, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 21, 49))
->propertyX1 : Symbol(X.propertyX1, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 25))
+>propertyX1 : Symbol(propertyX1, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 25))
 >n : Symbol(n, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 21, 71))
->n.propertyX2 : Symbol(X.propertyX2, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 45))
+>n.propertyX2 : Symbol(propertyX2, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 45))
 >n : Symbol(n, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 21, 71))
->propertyX2 : Symbol(X.propertyX2, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 45))
+>propertyX2 : Symbol(propertyX2, Decl(conditionalOperatorWithoutIdenticalBCT.ts, 1, 45))
 
