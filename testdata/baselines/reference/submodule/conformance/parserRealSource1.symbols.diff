--- old.parserRealSource1.symbols
+++ new.parserRealSource1.symbols
@@= skipped -18, +18 lines =@@
 >IDiagnosticWriter : Symbol(IDiagnosticWriter, Decl(parserRealSource1.ts, 7, 33))
 
             Alert(output: string): void;
->Alert : Symbol(IDiagnosticWriter.Alert, Decl(parserRealSource1.ts, 8, 44))
+>Alert : Symbol(Alert, Decl(parserRealSource1.ts, 8, 44))
 >output : Symbol(output, Decl(parserRealSource1.ts, 9, 18))
         }
 
@@= skipped -19, +19 lines =@@
 >diagnosticWriter : Symbol(diagnosticWriter, Decl(parserRealSource1.ts, 12, 18))
 
                 diagnosticWriter.Alert(output);
->diagnosticWriter.Alert : Symbol(IDiagnosticWriter.Alert, Decl(parserRealSource1.ts, 8, 44))
+>diagnosticWriter.Alert : Symbol(Alert, Decl(parserRealSource1.ts, 8, 44))
 >diagnosticWriter : Symbol(diagnosticWriter, Decl(parserRealSource1.ts, 12, 18))
->Alert : Symbol(IDiagnosticWriter.Alert, Decl(parserRealSource1.ts, 8, 44))
+>Alert : Symbol(Alert, Decl(parserRealSource1.ts, 8, 44))
 >output : Symbol(output, Decl(parserRealSource1.ts, 16, 30))
             }
         }
@@= skipped -44, +44 lines =@@
 >ILogger : Symbol(ILogger, Decl(parserRealSource1.ts, 36, 5))
 
         information(): boolean;
->information : Symbol(ILogger.information, Decl(parserRealSource1.ts, 38, 30))
+>information : Symbol(information, Decl(parserRealSource1.ts, 38, 30))
 
         debug(): boolean;
->debug : Symbol(ILogger.debug, Decl(parserRealSource1.ts, 39, 31))
+>debug : Symbol(debug, Decl(parserRealSource1.ts, 39, 31))
 
         warning(): boolean;
->warning : Symbol(ILogger.warning, Decl(parserRealSource1.ts, 40, 25))
+>warning : Symbol(warning, Decl(parserRealSource1.ts, 40, 25))
 
         error(): boolean;
->error : Symbol(ILogger.error, Decl(parserRealSource1.ts, 41, 27))
+>error : Symbol(error, Decl(parserRealSource1.ts, 41, 27))
 
         fatal(): boolean;
->fatal : Symbol(ILogger.fatal, Decl(parserRealSource1.ts, 42, 25))
+>fatal : Symbol(fatal, Decl(parserRealSource1.ts, 42, 25))
 
         log(s: string): void;
->log : Symbol(ILogger.log, Decl(parserRealSource1.ts, 43, 25))
+>log : Symbol(log, Decl(parserRealSource1.ts, 43, 25))
 >s : Symbol(s, Decl(parserRealSource1.ts, 44, 12))
     }
 
@@= skipped -24, +24 lines =@@
 >ILogger : Symbol(ILogger, Decl(parserRealSource1.ts, 36, 5))
 
         public information(): boolean { return false; }
->information : Symbol(NullLogger.information, Decl(parserRealSource1.ts, 47, 48))
+>information : Symbol(information, Decl(parserRealSource1.ts, 47, 48))
 
         public debug(): boolean { return false; }
->debug : Symbol(NullLogger.debug, Decl(parserRealSource1.ts, 48, 55))
+>debug : Symbol(debug, Decl(parserRealSource1.ts, 48, 55))
 
         public warning(): boolean { return false; }
->warning : Symbol(NullLogger.warning, Decl(parserRealSource1.ts, 49, 49))
+>warning : Symbol(warning, Decl(parserRealSource1.ts, 49, 49))
 
         public error(): boolean { return false; }
->error : Symbol(NullLogger.error, Decl(parserRealSource1.ts, 50, 51))
+>error : Symbol(error, Decl(parserRealSource1.ts, 50, 51))
 
         public fatal(): boolean { return false; }
->fatal : Symbol(NullLogger.fatal, Decl(parserRealSource1.ts, 51, 49))
+>fatal : Symbol(fatal, Decl(parserRealSource1.ts, 51, 49))
 
         public log(s: string): void {
->log : Symbol(NullLogger.log, Decl(parserRealSource1.ts, 52, 49))
+>log : Symbol(log, Decl(parserRealSource1.ts, 52, 49))
 >s : Symbol(s, Decl(parserRealSource1.ts, 53, 19))
         }
     }
@@= skipped -25, +25 lines =@@
 >ILogger : Symbol(ILogger, Decl(parserRealSource1.ts, 36, 5))
 
         private _information: boolean;
->_information : Symbol(LoggerAdapter._information, Decl(parserRealSource1.ts, 57, 51))
+>_information : Symbol(_information, Decl(parserRealSource1.ts, 57, 51))
 
         private _debug: boolean;
->_debug : Symbol(LoggerAdapter._debug, Decl(parserRealSource1.ts, 58, 38))
+>_debug : Symbol(_debug, Decl(parserRealSource1.ts, 58, 38))
 
         private _warning: boolean;
->_warning : Symbol(LoggerAdapter._warning, Decl(parserRealSource1.ts, 59, 32))
+>_warning : Symbol(_warning, Decl(parserRealSource1.ts, 59, 32))
 
         private _error: boolean;
->_error : Symbol(LoggerAdapter._error, Decl(parserRealSource1.ts, 60, 34))
+>_error : Symbol(_error, Decl(parserRealSource1.ts, 60, 34))
 
         private _fatal: boolean;
->_fatal : Symbol(LoggerAdapter._fatal, Decl(parserRealSource1.ts, 61, 32))
+>_fatal : Symbol(_fatal, Decl(parserRealSource1.ts, 61, 32))
 
         constructor (public logger: ILogger) { 
->logger : Symbol(LoggerAdapter.logger, Decl(parserRealSource1.ts, 64, 21))
+>logger : Symbol(logger, Decl(parserRealSource1.ts, 64, 21))
 >ILogger : Symbol(ILogger, Decl(parserRealSource1.ts, 36, 5))
 
             this._information = this.logger.information();
->this._information : Symbol(LoggerAdapter._information, Decl(parserRealSource1.ts, 57, 51))
+>this._information : Symbol(_information, Decl(parserRealSource1.ts, 57, 51))
 >this : Symbol(LoggerAdapter, Decl(parserRealSource1.ts, 55, 5))
->_information : Symbol(LoggerAdapter._information, Decl(parserRealSource1.ts, 57, 51))
->this.logger.information : Symbol(ILogger.information, Decl(parserRealSource1.ts, 38, 30))
->this.logger : Symbol(LoggerAdapter.logger, Decl(parserRealSource1.ts, 64, 21))
+>_information : Symbol(_information, Decl(parserRealSource1.ts, 57, 51))
+>this.logger.information : Symbol(information, Decl(parserRealSource1.ts, 38, 30))
+>this.logger : Symbol(logger, Decl(parserRealSource1.ts, 64, 21))
 >this : Symbol(LoggerAdapter, Decl(parserRealSource1.ts, 55, 5))
->logger : Symbol(LoggerAdapter.logger, Decl(parserRealSource1.ts, 64, 21))
->information : Symbol(ILogger.information, Decl(parserRealSource1.ts, 38, 30))
+>logger : Symbol(logger, Decl(parserRealSource1.ts, 64, 21))
+>information : Symbol(information, Decl(parserRealSource1.ts, 38, 30))
 
             this._debug = this.logger.debug();
->this._debug : Symbol(LoggerAdapter._debug, Decl(parserRealSource1.ts, 58, 38))
+>this._debug : Symbol(_debug, Decl(parserRealSource1.ts, 58, 38))
 >this : Symbol(LoggerAdapter, Decl(parserRealSource1.ts, 55, 5))
->_debug : Symbol(LoggerAdapter._debug, Decl(parserRealSource1.ts, 58, 38))
->this.logger.debug : Symbol(ILogger.debug, Decl(parserRealSource1.ts, 39, 31))
->this.logger : Symbol(LoggerAdapter.logger, Decl(parserRealSource1.ts, 64, 21))
+>_debug : Symbol(_debug, Decl(parserRealSource1.ts, 58, 38))
+>this.logger.debug : Symbol(debug, Decl(parserRealSource1.ts, 39, 31))
+>this.logger : Symbol(logger, Decl(parserRealSource1.ts, 64, 21))
 >this : Symbol(LoggerAdapter, Decl(parserRealSource1.ts, 55, 5))
->logger : Symbol(LoggerAdapter.logger, Decl(parserRealSource1.ts, 64, 21))
->debug : Symbol(ILogger.debug, Decl(parserRealSource1.ts, 39, 31))
+>logger : Symbol(logger, Decl(parserRealSource1.ts, 64, 21))
+>debug : Symbol(debug, Decl(parserRealSource1.ts, 39, 31))
 
             this._warning = this.logger.warning();
->this._warning : Symbol(LoggerAdapter._warning, Decl(parserRealSource1.ts, 59, 32))
+>this._warning : Symbol(_warning, Decl(parserRealSource1.ts, 59, 32))
 >this : Symbol(LoggerAdapter, Decl(parserRealSource1.ts, 55, 5))
->_warning : Symbol(LoggerAdapter._warning, Decl(parserRealSource1.ts, 59, 32))
->this.logger.warning : Symbol(ILogger.warning, Decl(parserRealSource1.ts, 40, 25))
->this.logger : Symbol(LoggerAdapter.logger, Decl(parserRealSource1.ts, 64, 21))
+>_warning : Symbol(_warning, Decl(parserRealSource1.ts, 59, 32))
+>this.logger.warning : Symbol(warning, Decl(parserRealSource1.ts, 40, 25))
+>this.logger : Symbol(logger, Decl(parserRealSource1.ts, 64, 21))
 >this : Symbol(LoggerAdapter, Decl(parserRealSource1.ts, 55, 5))
->logger : Symbol(LoggerAdapter.logger, Decl(parserRealSource1.ts, 64, 21))
->warning : Symbol(ILogger.warning, Decl(parserRealSource1.ts, 40, 25))
+>logger : Symbol(logger, Decl(parserRealSource1.ts, 64, 21))
+>warning : Symbol(warning, Decl(parserRealSource1.ts, 40, 25))
 
             this._error = this.logger.error();
->this._error : Symbol(LoggerAdapter._error, Decl(parserRealSource1.ts, 60, 34))
+>this._error : Symbol(_error, Decl(parserRealSource1.ts, 60, 34))
 >this : Symbol(LoggerAdapter, Decl(parserRealSource1.ts, 55, 5))
->_error : Symbol(LoggerAdapter._error, Decl(parserRealSource1.ts, 60, 34))
->this.logger.error : Symbol(ILogger.error, Decl(parserRealSource1.ts, 41, 27))
->this.logger : Symbol(LoggerAdapter.logger, Decl(parserRealSource1.ts, 64, 21))
+>_error : Symbol(_error, Decl(parserRealSource1.ts, 60, 34))
+>this.logger.error : Symbol(error, Decl(parserRealSource1.ts, 41, 27))
+>this.logger : Symbol(logger, Decl(parserRealSource1.ts, 64, 21))
 >this : Symbol(LoggerAdapter, Decl(parserRealSource1.ts, 55, 5))
->logger : Symbol(LoggerAdapter.logger, Decl(parserRealSource1.ts, 64, 21))
->error : Symbol(ILogger.error, Decl(parserRealSource1.ts, 41, 27))
+>logger : Symbol(logger, Decl(parserRealSource1.ts, 64, 21))
+>error : Symbol(error, Decl(parserRealSource1.ts, 41, 27))
 
             this._fatal = this.logger.fatal();
->this._fatal : Symbol(LoggerAdapter._fatal, Decl(parserRealSource1.ts, 61, 32))
+>this._fatal : Symbol(_fatal, Decl(parserRealSource1.ts, 61, 32))
 >this : Symbol(LoggerAdapter, Decl(parserRealSource1.ts, 55, 5))
->_fatal : Symbol(LoggerAdapter._fatal, Decl(parserRealSource1.ts, 61, 32))
->this.logger.fatal : Symbol(ILogger.fatal, Decl(parserRealSource1.ts, 42, 25))
->this.logger : Symbol(LoggerAdapter.logger, Decl(parserRealSource1.ts, 64, 21))
+>_fatal : Symbol(_fatal, Decl(parserRealSource1.ts, 61, 32))
+>this.logger.fatal : Symbol(fatal, Decl(parserRealSource1.ts, 42, 25))
+>this.logger : Symbol(logger, Decl(parserRealSource1.ts, 64, 21))
 >this : Symbol(LoggerAdapter, Decl(parserRealSource1.ts, 55, 5))
->logger : Symbol(LoggerAdapter.logger, Decl(parserRealSource1.ts, 64, 21))
->fatal : Symbol(ILogger.fatal, Decl(parserRealSource1.ts, 42, 25))
+>logger : Symbol(logger, Decl(parserRealSource1.ts, 64, 21))
+>fatal : Symbol(fatal, Decl(parserRealSource1.ts, 42, 25))
         }
 
 
         public information(): boolean { return this._information; }
->information : Symbol(LoggerAdapter.information, Decl(parserRealSource1.ts, 70, 9))
->this._information : Symbol(LoggerAdapter._information, Decl(parserRealSource1.ts, 57, 51))
+>information : Symbol(information, Decl(parserRealSource1.ts, 70, 9))
+>this._information : Symbol(_information, Decl(parserRealSource1.ts, 57, 51))
 >this : Symbol(LoggerAdapter, Decl(parserRealSource1.ts, 55, 5))
->_information : Symbol(LoggerAdapter._information, Decl(parserRealSource1.ts, 57, 51))
+>_information : Symbol(_information, Decl(parserRealSource1.ts, 57, 51))
 
         public debug(): boolean { return this._debug; }
->debug : Symbol(LoggerAdapter.debug, Decl(parserRealSource1.ts, 73, 67))
->this._debug : Symbol(LoggerAdapter._debug, Decl(parserRealSource1.ts, 58, 38))
+>debug : Symbol(debug, Decl(parserRealSource1.ts, 73, 67))
+>this._debug : Symbol(_debug, Decl(parserRealSource1.ts, 58, 38))
 >this : Symbol(LoggerAdapter, Decl(parserRealSource1.ts, 55, 5))
->_debug : Symbol(LoggerAdapter._debug, Decl(parserRealSource1.ts, 58, 38))
+>_debug : Symbol(_debug, Decl(parserRealSource1.ts, 58, 38))
 
         public warning(): boolean { return this._warning; }
->warning : Symbol(LoggerAdapter.warning, Decl(parserRealSource1.ts, 74, 55))
->this._warning : Symbol(LoggerAdapter._warning, Decl(parserRealSource1.ts, 59, 32))
+>warning : Symbol(warning, Decl(parserRealSource1.ts, 74, 55))
+>this._warning : Symbol(_warning, Decl(parserRealSource1.ts, 59, 32))
 >this : Symbol(LoggerAdapter, Decl(parserRealSource1.ts, 55, 5))
->_warning : Symbol(LoggerAdapter._warning, Decl(parserRealSource1.ts, 59, 32))
+>_warning : Symbol(_warning, Decl(parserRealSource1.ts, 59, 32))
 
         public error(): boolean { return this._error; }
->error : Symbol(LoggerAdapter.error, Decl(parserRealSource1.ts, 75, 59))
->this._error : Symbol(LoggerAdapter._error, Decl(parserRealSource1.ts, 60, 34))
+>error : Symbol(error, Decl(parserRealSource1.ts, 75, 59))
+>this._error : Symbol(_error, Decl(parserRealSource1.ts, 60, 34))
 >this : Symbol(LoggerAdapter, Decl(parserRealSource1.ts, 55, 5))
->_error : Symbol(LoggerAdapter._error, Decl(parserRealSource1.ts, 60, 34))
+>_error : Symbol(_error, Decl(parserRealSource1.ts, 60, 34))
 
         public fatal(): boolean { return this._fatal; }
->fatal : Symbol(LoggerAdapter.fatal, Decl(parserRealSource1.ts, 76, 55))
->this._fatal : Symbol(LoggerAdapter._fatal, Decl(parserRealSource1.ts, 61, 32))
+>fatal : Symbol(fatal, Decl(parserRealSource1.ts, 76, 55))
+>this._fatal : Symbol(_fatal, Decl(parserRealSource1.ts, 61, 32))
 >this : Symbol(LoggerAdapter, Decl(parserRealSource1.ts, 55, 5))
->_fatal : Symbol(LoggerAdapter._fatal, Decl(parserRealSource1.ts, 61, 32))
+>_fatal : Symbol(_fatal, Decl(parserRealSource1.ts, 61, 32))
 
         public log(s: string): void {
->log : Symbol(LoggerAdapter.log, Decl(parserRealSource1.ts, 77, 55))
+>log : Symbol(log, Decl(parserRealSource1.ts, 77, 55))
 >s : Symbol(s, Decl(parserRealSource1.ts, 78, 19))
 
             this.logger.log(s);
->this.logger.log : Symbol(ILogger.log, Decl(parserRealSource1.ts, 43, 25))
->this.logger : Symbol(LoggerAdapter.logger, Decl(parserRealSource1.ts, 64, 21))
+>this.logger.log : Symbol(log, Decl(parserRealSource1.ts, 43, 25))
+>this.logger : Symbol(logger, Decl(parserRealSource1.ts, 64, 21))
 >this : Symbol(LoggerAdapter, Decl(parserRealSource1.ts, 55, 5))
->logger : Symbol(LoggerAdapter.logger, Decl(parserRealSource1.ts, 64, 21))
->log : Symbol(ILogger.log, Decl(parserRealSource1.ts, 43, 25))
+>logger : Symbol(logger, Decl(parserRealSource1.ts, 64, 21))
+>log : Symbol(log, Decl(parserRealSource1.ts, 43, 25))
 >s : Symbol(s, Decl(parserRealSource1.ts, 78, 19))
         }
     }
@@= skipped -119, +119 lines =@@
 >ILogger : Symbol(ILogger, Decl(parserRealSource1.ts, 36, 5))
 
         public logContents = [];
->logContents : Symbol(BufferedLogger.logContents, Decl(parserRealSource1.ts, 83, 52))
+>logContents : Symbol(logContents, Decl(parserRealSource1.ts, 83, 52))
 
         public information(): boolean { return false; }
->information : Symbol(BufferedLogger.information, Decl(parserRealSource1.ts, 84, 32))
+>information : Symbol(information, Decl(parserRealSource1.ts, 84, 32))
 
         public debug(): boolean { return false; }
->debug : Symbol(BufferedLogger.debug, Decl(parserRealSource1.ts, 86, 55))
+>debug : Symbol(debug, Decl(parserRealSource1.ts, 86, 55))
 
         public warning(): boolean { return false; }
->warning : Symbol(BufferedLogger.warning, Decl(parserRealSource1.ts, 87, 49))
+>warning : Symbol(warning, Decl(parserRealSource1.ts, 87, 49))
 
         public error(): boolean { return false; }
->error : Symbol(BufferedLogger.error, Decl(parserRealSource1.ts, 88, 51))
+>error : Symbol(error, Decl(parserRealSource1.ts, 88, 51))
 
         public fatal(): boolean { return false; }
->fatal : Symbol(BufferedLogger.fatal, Decl(parserRealSource1.ts, 89, 49))
+>fatal : Symbol(fatal, Decl(parserRealSource1.ts, 89, 49))
 
         public log(s: string): void {
->log : Symbol(BufferedLogger.log, Decl(parserRealSource1.ts, 90, 49))
+>log : Symbol(log, Decl(parserRealSource1.ts, 90, 49))
 >s : Symbol(s, Decl(parserRealSource1.ts, 91, 19))
 
             this.logContents.push(s);
->this.logContents.push : Symbol(Array.push, Decl(lib.es5.d.ts, --, --))
->this.logContents : Symbol(BufferedLogger.logContents, Decl(parserRealSource1.ts, 83, 52))
+>this.logContents.push : Symbol(push, Decl(lib.es5.d.ts, --, --))
+>this.logContents : Symbol(logContents, Decl(parserRealSource1.ts, 83, 52))
 >this : Symbol(BufferedLogger, Decl(parserRealSource1.ts, 81, 5))
->logContents : Symbol(BufferedLogger.logContents, Decl(parserRealSource1.ts, 83, 52))
->push : Symbol(Array.push, Decl(lib.es5.d.ts, --, --))
+>logContents : Symbol(logContents, Decl(parserRealSource1.ts, 83, 52))
+>push : Symbol(push, Decl(lib.es5.d.ts, --, --))
 >s : Symbol(s, Decl(parserRealSource1.ts, 91, 19))
         }
     }
@@= skipped -51, +51 lines =@@
 >Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --))
 
         logger.log(funcDescription + " completed in " + (end - start) + " msec");
->logger.log : Symbol(ILogger.log, Decl(parserRealSource1.ts, 43, 25))
+>logger.log : Symbol(log, Decl(parserRealSource1.ts, 43, 25))
 >logger : Symbol(logger, Decl(parserRealSource1.ts, 96, 33))
->log : Symbol(ILogger.log, Decl(parserRealSource1.ts, 43, 25))
+>log : Symbol(log, Decl(parserRealSource1.ts, 43, 25))
 >funcDescription : Symbol(funcDescription, Decl(parserRealSource1.ts, 96, 49))
 >end : Symbol(end, Decl(parserRealSource1.ts, 99, 11))
 >start : Symbol(start, Decl(parserRealSource1.ts, 97, 11))
@@= skipped -25, +25 lines =@@
 
             var ch = value.charCodeAt(index);
 >ch : Symbol(ch, Decl(parserRealSource1.ts, 108, 15))
->value.charCodeAt : Symbol(String.charCodeAt, Decl(lib.es5.d.ts, --, --))
+>value.charCodeAt : Symbol(charCodeAt, Decl(lib.es5.d.ts, --, --))
 >value : Symbol(value, Decl(parserRealSource1.ts, 104, 36))
->charCodeAt : Symbol(String.charCodeAt, Decl(lib.es5.d.ts, --, --))
+>charCodeAt : Symbol(charCodeAt, Decl(lib.es5.d.ts, --, --))
 >index : Symbol(index, Decl(parserRealSource1.ts, 107, 23))
 
             switch (ch) {
@@= skipped -51, +51 lines =@@
                 default:
                     result += value.charAt(index);
 >result : Symbol(result, Decl(parserRealSource1.ts, 105, 11))
->value.charAt : Symbol(String.charAt, Decl(lib.es5.d.ts, --, --))
+>value.charAt : Symbol(charAt, Decl(lib.es5.d.ts, --, --))
 >value : Symbol(value, Decl(parserRealSource1.ts, 104, 36))
->charAt : Symbol(String.charAt, Decl(lib.es5.d.ts, --, --))
+>charAt : Symbol(charAt, Decl(lib.es5.d.ts, --, --))
 >index : Symbol(index, Decl(parserRealSource1.ts, 107, 23))
             }
         }
 
         var tooLong = (value.length > length);
 >tooLong : Symbol(tooLong, Decl(parserRealSource1.ts, 139, 11))
->value.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>value.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >value : Symbol(value, Decl(parserRealSource1.ts, 104, 36))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >length : Symbol(length, Decl(parserRealSource1.ts, 104, 50))
 
         if (tooLong) {
@@= skipped -34, +34 lines =@@
 
             for (var i = value.length - mid; i < value.length; i++) addChar(i);
 >i : Symbol(i, Decl(parserRealSource1.ts, 142, 20), Decl(parserRealSource1.ts, 144, 20), Decl(parserRealSource1.ts, 148, 20))
->value.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>value.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >value : Symbol(value, Decl(parserRealSource1.ts, 104, 36))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >mid : Symbol(mid, Decl(parserRealSource1.ts, 141, 15))
 >i : Symbol(i, Decl(parserRealSource1.ts, 142, 20), Decl(parserRealSource1.ts, 144, 20), Decl(parserRealSource1.ts, 148, 20))
->value.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>value.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >value : Symbol(value, Decl(parserRealSource1.ts, 104, 36))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >i : Symbol(i, Decl(parserRealSource1.ts, 142, 20), Decl(parserRealSource1.ts, 144, 20), Decl(parserRealSource1.ts, 148, 20))
 >addChar : Symbol(addChar, Decl(parserRealSource1.ts, 107, 11))
 >i : Symbol(i, Decl(parserRealSource1.ts, 142, 20), Decl(parserRealSource1.ts, 144, 20), Decl(parserRealSource1.ts, 148, 20))
@@= skipped -15, +15 lines =@@
         else {
             length = value.length;
 >length : Symbol(length, Decl(parserRealSource1.ts, 104, 50))
->value.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>value.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >value : Symbol(value, Decl(parserRealSource1.ts, 104, 36))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 
             for (var i = 0; i < length; i++) addChar(i);
 >i : Symbol(i, Decl(parserRealSource1.ts, 142, 20), Decl(parserRealSource1.ts, 144, 20), Decl(parserRealSource1.ts, 148, 20))
