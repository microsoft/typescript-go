--- old.emitter.forAwait(target=es2018).js
+++ new.emitter.forAwait(target=es2018).js
@@= skipped -49, +49 lines =@@
     }
 }
 
-//// [file1.js]
-async function f1() {
+//// [file7.js]
+async function* f7() {
     let y;
-    for await (const x of y) {
+    for (;;) {
+        for await (const x of y) {
+        }
     }
 }
-//// [file2.js]
-async function f2() {
-    let x, y;
-    for await (x of y) {
+//// [file6.js]
+async function* f6() {
+    let y;
+    outer: for await (const x of y) {
+        continue outer;
     }
 }
-//// [file3.js]
-async function* f3() {
+//// [file5.js]
+async function f5() {
     let y;
-    for await (const x of y) {
+    outer: for await (const x of y) {
+        continue outer;
     }
 }
 //// [file4.js]
@@= skipped -24, +28 lines =@@
     for await (x of y) {
     }
 }
-//// [file5.js]
-// https://github.com/Microsoft/TypeScript/issues/21363
-async function f5() {
+//// [file3.js]
+async function* f3() {
     let y;
-    outer: for await (const x of y) {
-        continue outer;
+    for await (const x of y) {
     }
 }
-//// [file6.js]
-// https://github.com/Microsoft/TypeScript/issues/21363
-async function* f6() {
-    let y;
-    outer: for await (const x of y) {
-        continue outer;
+//// [file2.js]
+async function f2() {
+    let x, y;
+    for await (x of y) {
     }
 }
-//// [file7.js]
-// https://github.com/microsoft/TypeScript/issues/36166
-async function* f7() {
+//// [file1.js]
+async function f1() {
     let y;
-    for (;;) {
-        for await (const x of y) {
-        }
+    for await (const x of y) {
     }
 }
