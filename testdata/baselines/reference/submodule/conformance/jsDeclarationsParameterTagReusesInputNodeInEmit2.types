//// [tests/cases/conformance/jsdoc/declarations/jsDeclarationsParameterTagReusesInputNodeInEmit2.ts] ////

=== base.js ===
class Base {
>Base : Base

    constructor() {}
}

const BaseFactory = () => {
>BaseFactory : { (): Base; Base: typeof Base; }
>() => {    return new Base();} : { (): Base; Base: typeof Base; }

    return new Base();
>new Base() : Base
>Base : typeof Base

};

BaseFactory.Base = Base;
>BaseFactory.Base = Base : typeof Base
>BaseFactory.Base : typeof Base
>BaseFactory : { (): Base; Base: typeof Base; }
>Base : typeof Base
>Base : typeof Base

module.exports = BaseFactory;
>module.exports = BaseFactory : { (): Base; Base: typeof Base; }
>module.exports : typeof import("base")
>module : { "base": typeof import("base"); }
>exports : typeof import("base")
>BaseFactory : { (): Base; Base: typeof Base; }

=== file.js ===
/** @typedef {typeof import('./base')} BaseFactory */

/**
 *
 * @param {InstanceType<BaseFactory["Base"]>} base
 * @returns {InstanceType<BaseFactory["Base"]>}
 */
const test = (base) => {
>test : (base: Base) => Base
>(base) => {    return base;} : (base: Base) => Base
>base : Base

    return base;
>base : Base

};

