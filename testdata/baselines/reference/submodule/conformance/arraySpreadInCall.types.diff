--- old.arraySpreadInCall.types
+++ new.arraySpreadInCall.types
@@= skipped -100, +100 lines =@@
 
 declare function f2<T extends unknown[]>(...args: T): T;
 >f2 : <T extends unknown[]>(...args: T) => T
+>T : T
 >args : T
 
 const x21 = f2(...[1, 'foo'])
@@= skipped -44, +45 lines =@@
 
 declare function f3<T extends readonly unknown[]>(...args: T): T;
 >f3 : <T extends readonly unknown[]>(...args: T) => T
+>T : T
 >args : T
 
 const x31 = f3(...[1, 'foo'])
@@= skipped -43, +44 lines =@@
 >'foo' : "foo"
 
 declare function f4<const T extends readonly unknown[]>(...args: T): T;
->f4 : <const T extends readonly unknown[]>(...args: T) => T
+>f4 : <T extends readonly unknown[]>(...args: T) => T
+>T : T
 >args : T
 
 const x41 = f4(...[1, 'foo'])
->x41 : readonly [number, string]
->f4(...[1, 'foo']) : readonly [number, string]
->f4 : <const T extends readonly unknown[]>(...args: T) => T
+>x41 : [number, string]
+>f4(...[1, 'foo']) : [number, string]
+>f4 : <T extends readonly unknown[]>(...args: T) => T
 >...[1, 'foo'] : string | number
 >[1, 'foo'] : [number, string]
 >1 : 1
 >'foo' : "foo"
 
 const x42 = f4(true, ...[1, 'foo'])
->x42 : readonly [true, number, string]
->f4(true, ...[1, 'foo']) : readonly [true, number, string]
->f4 : <const T extends readonly unknown[]>(...args: T) => T
+>x42 : [true, number, string]
+>f4(true, ...[1, 'foo']) : [true, number, string]
+>f4 : <T extends readonly unknown[]>(...args: T) => T
 >true : true
 >...[1, 'foo'] : string | number
 >[1, 'foo'] : [number, string]
@@= skipped -23, +24 lines =@@
 >'foo' : "foo"
 
 const x43 = f4(...([1, 'foo']))
->x43 : readonly [number, string]
->f4(...([1, 'foo'])) : readonly [number, string]
->f4 : <const T extends readonly unknown[]>(...args: T) => T
+>x43 : [number, string]
+>f4(...([1, 'foo'])) : [number, string]
+>f4 : <T extends readonly unknown[]>(...args: T) => T
 >...([1, 'foo']) : string | number
 >([1, 'foo']) : [number, string]
 >[1, 'foo'] : [number, string]
@@= skipped -10, +10 lines =@@
 >'foo' : "foo"
 
 const x44 = f4(true, ...([1, 'foo']))
->x44 : readonly [true, number, string]
->f4(true, ...([1, 'foo'])) : readonly [true, number, string]
->f4 : <const T extends readonly unknown[]>(...args: T) => T
+>x44 : [true, number, string]
+>f4(true, ...([1, 'foo'])) : [true, number, string]
+>f4 : <T extends readonly unknown[]>(...args: T) => T
 >true : true
 >...([1, 'foo']) : string | number
 >([1, 'foo']) : [number, string]
@@= skipped -12, +12 lines =@@
 
 // dicovered in #52845#issuecomment-1459132562
 interface IAction {
+>IAction : IAction
+
     run(event?: unknown): unknown;
 >run : (event?: unknown) => unknown
 >event : unknown
