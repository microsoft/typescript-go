--- old.typeofClass2.symbols
+++ new.typeofClass2.symbols
@@= skipped -13, +13 lines =@@
 >x : Symbol(x, Decl(typeofClass2.ts, 3, 16))
 
     static foo(x: number);
->foo : Symbol(C.foo, Decl(typeofClass2.ts, 3, 22), Decl(typeofClass2.ts, 5, 26), Decl(typeofClass2.ts, 6, 21))
+>foo : Symbol(foo, Decl(typeofClass2.ts, 3, 22), Decl(typeofClass2.ts, 5, 26), Decl(typeofClass2.ts, 6, 21))
 >x : Symbol(x, Decl(typeofClass2.ts, 5, 15))
 
     static foo(x: C);
->foo : Symbol(C.foo, Decl(typeofClass2.ts, 3, 22), Decl(typeofClass2.ts, 5, 26), Decl(typeofClass2.ts, 6, 21))
+>foo : Symbol(foo, Decl(typeofClass2.ts, 3, 22), Decl(typeofClass2.ts, 5, 26), Decl(typeofClass2.ts, 6, 21))
 >x : Symbol(x, Decl(typeofClass2.ts, 6, 15))
 >C : Symbol(C, Decl(typeofClass2.ts, 0, 0))
 
     static foo(x) { }
->foo : Symbol(C.foo, Decl(typeofClass2.ts, 3, 22), Decl(typeofClass2.ts, 5, 26), Decl(typeofClass2.ts, 6, 21))
+>foo : Symbol(foo, Decl(typeofClass2.ts, 3, 22), Decl(typeofClass2.ts, 5, 26), Decl(typeofClass2.ts, 6, 21))
 >x : Symbol(x, Decl(typeofClass2.ts, 7, 15))
 
     static bar(x) { }
->bar : Symbol(C.bar, Decl(typeofClass2.ts, 7, 21))
+>bar : Symbol(bar, Decl(typeofClass2.ts, 7, 21))
 >x : Symbol(x, Decl(typeofClass2.ts, 9, 15))
 }
 
@@= skipped -22, +22 lines =@@
 >C : Symbol(C, Decl(typeofClass2.ts, 0, 0))
 
     static baz(x: number) { }
->baz : Symbol(D.baz, Decl(typeofClass2.ts, 12, 19))
+>baz : Symbol(baz, Decl(typeofClass2.ts, 12, 19))
 >x : Symbol(x, Decl(typeofClass2.ts, 13, 15))
 
     foo() { }
->foo : Symbol(D.foo, Decl(typeofClass2.ts, 13, 29))
+>foo : Symbol(foo, Decl(typeofClass2.ts, 13, 29))
 }
 
 var d: D;
