--- old.newWithSpreadES5.types
+++ new.newWithSpreadES5.types
@@= skipped -12, +12 lines =@@
 >x : string[]
 
 interface A {
+>A : A
+
     f: {
 >f : new (x: number, y: number, ...z: string[]) => any
 
@@= skipped -20, +22 lines =@@
 }
 
 interface C {
+>C : C
+
     "a-b": typeof B;
 >"a-b" : typeof B
->B : typeof B
 }
 
 interface D {
+>D : D
+
     1: typeof B;
 >1 : typeof B
->B : typeof B
 }
 
 var a: string[];
@@= skipped -414, +416 lines =@@
 
 // Element access expression with a number
 new i["a-b"][1](1, 2, "string");
->new i["a-b"][1](1, 2, "string") : error
->i["a-b"][1] : error
->i["a-b"] : error
+>new i["a-b"][1](1, 2, "string") : any
+>i["a-b"][1] : any
+>i["a-b"] : any
 >i : C[][]
 >"a-b" : "a-b"
 >1 : 1
@@= skipped -11, +11 lines =@@
 >"string" : "string"
 
 new i["a-b"][1](1, 2, ...a);
->new i["a-b"][1](1, 2, ...a) : error
->i["a-b"][1] : error
->i["a-b"] : error
+>new i["a-b"][1](1, 2, ...a) : any
+>i["a-b"][1] : any
+>i["a-b"] : any
 >i : C[][]
 >"a-b" : "a-b"
 >1 : 1
@@= skipped -12, +12 lines =@@
 >a : string[]
 
 new i["a-b"][1](1, 2, ...a, "string");
->new i["a-b"][1](1, 2, ...a, "string") : error
->i["a-b"][1] : error
->i["a-b"] : error
+>new i["a-b"][1](1, 2, ...a, "string") : any
+>i["a-b"][1] : any
+>i["a-b"] : any
 >i : C[][]
 >"a-b" : "a-b"
 >1 : 1
