--- old.jsdocTemplateClass.symbols
+++ new.jsdocTemplateClass.symbols
@@= skipped -14, +14 lines =@@
 >x : Symbol(x, Decl(templateTagOnClasses.js, 8, 17))
 
         this.a = x
->this.a : Symbol(Foo.a, Decl(templateTagOnClasses.js, 8, 21))
 >this : Symbol(Foo, Decl(templateTagOnClasses.js, 0, 0))
->a : Symbol(Foo.a, Decl(templateTagOnClasses.js, 8, 21))
 >x : Symbol(x, Decl(templateTagOnClasses.js, 8, 17))
     }
     /**
@@= skipped -13, +11 lines =@@
      * @return {T}
      */
     foo(x, y, alpha) {
->foo : Symbol(Foo.foo, Decl(templateTagOnClasses.js, 10, 5))
+>foo : Symbol(foo, Decl(templateTagOnClasses.js, 10, 5))
 >x : Symbol(x, Decl(templateTagOnClasses.js, 18, 8))
 >y : Symbol(y, Decl(templateTagOnClasses.js, 18, 10))
 >alpha : Symbol(alpha, Decl(templateTagOnClasses.js, 18, 13))
@@= skipped -12, +12 lines =@@
     }
 }
 var f = new Foo(1)
->f : Symbol(f, Decl(templateTagOnClasses.js, 22, 3), Decl(templateTagOnClasses.js, 23, 22))
+>f : Symbol(f, Decl(templateTagOnClasses.js, 22, 3))
 >Foo : Symbol(Foo, Decl(templateTagOnClasses.js, 0, 0))
 
 var g = new Foo(false)
@@= skipped -8, +8 lines =@@
 >Foo : Symbol(Foo, Decl(templateTagOnClasses.js, 0, 0))
 
 f.a = g.a
->f.a : Symbol(Foo.a, Decl(templateTagOnClasses.js, 8, 21))
->f : Symbol(f, Decl(templateTagOnClasses.js, 22, 3), Decl(templateTagOnClasses.js, 23, 22))
->a : Symbol(Foo.a, Decl(templateTagOnClasses.js, 8, 21))
->g.a : Symbol(Foo.a, Decl(templateTagOnClasses.js, 8, 21))
+>f : Symbol(f, Decl(templateTagOnClasses.js, 22, 3))
 >g : Symbol(g, Decl(templateTagOnClasses.js, 23, 3))
->a : Symbol(Foo.a, Decl(templateTagOnClasses.js, 8, 21))
 
