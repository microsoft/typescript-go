--- old.arrowFunctionExpressions.symbols
+++ new.arrowFunctionExpressions.symbols
@@= skipped -4, +4 lines =@@
 var a = (p: string) => p.length;
 >a : Symbol(a, Decl(arrowFunctionExpressions.ts, 1, 3), Decl(arrowFunctionExpressions.ts, 2, 3))
 >p : Symbol(p, Decl(arrowFunctionExpressions.ts, 1, 9))
->p.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>p.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >p : Symbol(p, Decl(arrowFunctionExpressions.ts, 1, 9))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 
 var a = (p: string) => { return p.length; }
 >a : Symbol(a, Decl(arrowFunctionExpressions.ts, 1, 3), Decl(arrowFunctionExpressions.ts, 2, 3))
 >p : Symbol(p, Decl(arrowFunctionExpressions.ts, 2, 9))
->p.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>p.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >p : Symbol(p, Decl(arrowFunctionExpressions.ts, 2, 9))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 
 // Identifier => Block is equivalent to(Identifier) => Block
 var b = j => { return 0; }
@@= skipped -91, +91 lines =@@
 >MyClass : Symbol(MyClass, Decl(arrowFunctionExpressions.ts, 24, 37))
 
     m = (n) => n + 1;
->m : Symbol(MyClass.m, Decl(arrowFunctionExpressions.ts, 28, 15))
+>m : Symbol(m, Decl(arrowFunctionExpressions.ts, 28, 15))
 >n : Symbol(n, Decl(arrowFunctionExpressions.ts, 29, 9))
 >n : Symbol(n, Decl(arrowFunctionExpressions.ts, 29, 9))
 
     p = (n) => n && this;
->p : Symbol(MyClass.p, Decl(arrowFunctionExpressions.ts, 29, 21))
+>p : Symbol(p, Decl(arrowFunctionExpressions.ts, 29, 21))
 >n : Symbol(n, Decl(arrowFunctionExpressions.ts, 30, 9))
 >n : Symbol(n, Decl(arrowFunctionExpressions.ts, 30, 9))
 >this : Symbol(MyClass, Decl(arrowFunctionExpressions.ts, 24, 37))
 
     fn() {
->fn : Symbol(MyClass.fn, Decl(arrowFunctionExpressions.ts, 30, 25))
+>fn : Symbol(fn, Decl(arrowFunctionExpressions.ts, 30, 25))
 
         var m = (n) => n + 1;
 >m : Symbol(m, Decl(arrowFunctionExpressions.ts, 33, 11))
@@= skipped -53, +53 lines =@@
 >n : Symbol(n, Decl(arrowFunctionExpressions.ts, 45, 15))
 
     arr(3)(4).toExponential();
->arr(3)(4).toExponential : Symbol(Number.toExponential, Decl(lib.es5.d.ts, --, --))
+>arr(3)(4).toExponential : Symbol(toExponential, Decl(lib.es5.d.ts, --, --))
 >arr : Symbol(arr, Decl(arrowFunctionExpressions.ts, 45, 7))
->toExponential : Symbol(Number.toExponential, Decl(lib.es5.d.ts, --, --))
+>toExponential : Symbol(toExponential, Decl(lib.es5.d.ts, --, --))
 }
 
 // Arrow function used in function
@@= skipped -15, +15 lines =@@
 >n : Symbol(n, Decl(arrowFunctionExpressions.ts, 51, 15))
 
     arr(4).charAt(0);
->arr(4).charAt : Symbol(String.charAt, Decl(lib.es5.d.ts, --, --))
+>arr(4).charAt : Symbol(charAt, Decl(lib.es5.d.ts, --, --))
 >arr : Symbol(arr, Decl(arrowFunctionExpressions.ts, 51, 7))
->charAt : Symbol(String.charAt, Decl(lib.es5.d.ts, --, --))
+>charAt : Symbol(charAt, Decl(lib.es5.d.ts, --, --))
 }
 
 // Arrow function used in nested function in function
@@= skipped -60, +60 lines =@@
 >innerFn : Symbol(innerFn, Decl(arrowFunctionExpressions.ts, 77, 30))
 
             return () => n.length;
->n.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>n.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >n : Symbol(n, Decl(arrowFunctionExpressions.ts, 77, 15))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
         }
         return innerFn;
 >innerFn : Symbol(innerFn, Decl(arrowFunctionExpressions.ts, 77, 30))
@@= skipped -15, +15 lines =@@
 >someOuterFn : Symbol(someOuterFn, Decl(arrowFunctionExpressions.ts, 72, 14))
 
 h.toExponential();
->h.toExponential : Symbol(Number.toExponential, Decl(lib.es5.d.ts, --, --))
+>h.toExponential : Symbol(toExponential, Decl(lib.es5.d.ts, --, --))
 >h : Symbol(h, Decl(arrowFunctionExpressions.ts, 85, 3))
->toExponential : Symbol(Number.toExponential, Decl(lib.es5.d.ts, --, --))
+>toExponential : Symbol(toExponential, Decl(lib.es5.d.ts, --, --))
 
 // Arrow function used in try/catch/finally in function
 function tryCatchFn() {
