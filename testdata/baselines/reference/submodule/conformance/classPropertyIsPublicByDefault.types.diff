--- old.classPropertyIsPublicByDefault.types
+++ new.classPropertyIsPublicByDefault.types
@@= skipped -2, +2 lines =@@
 === classPropertyIsPublicByDefault.ts ===
 class C {
 >C : C
->  : ^
 
     x: string;
 >x : string
->  : ^^^^^^
 
     get y() { return null; }
 >y : any
@@= skipped -15, +13 lines =@@
 
     foo() { }
 >foo : () => void
->    : ^^^^^^^^^^
 
     static a: string;
 >a : string
->  : ^^^^^^
 
     static get b() { return null; }
 >b : any
@@= skipped -15, +13 lines =@@
 
     static foo() { }
 >foo : () => void
->    : ^^^^^^^^^^
 }
 
 var c: C;
 >c : C
->  : ^
 
 c.x;
 >c.x : string
->    : ^^^^^^
 >c : C
->  : ^
 >x : string
->  : ^^^^^^
 
 c.y;
 >c.y : any
 >c : C
->  : ^
 >y : any
->  : ^^^
 
 c.y = 1;
 >c.y = 1 : 1
->        : ^
 >c.y : any
 >c : C
->  : ^
 >y : any
->  : ^^^
 >1 : 1
->  : ^
 
 c.foo();
 >c.foo() : void
->        : ^^^^
 >c.foo : () => void
->      : ^^^^^^^^^^
 >c : C
->  : ^
 >foo : () => void
->    : ^^^^^^^^^^
 
 C.a;
 >C.a : string
->    : ^^^^^^
 >C : typeof C
->  : ^^^^^^^^
 >a : string
->  : ^^^^^^
 
 C.b();
 >C.b() : any
 >C.b : any
 >C : typeof C
->  : ^^^^^^^^
 >b : any
->  : ^^^
 
 C.b = 1;
 >C.b = 1 : 1
->        : ^
 >C.b : any
 >C : typeof C
->  : ^^^^^^^^
 >b : any
->  : ^^^
 >1 : 1
->  : ^
 
 C.foo();
 >C.foo() : void
->        : ^^^^
 >C.foo : () => void
->      : ^^^^^^^^^^
 >C : typeof C
->  : ^^^^^^^^
 >foo : () => void
->    : ^^^^^^^^^^
 
