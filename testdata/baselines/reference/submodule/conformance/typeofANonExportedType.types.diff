--- old.typeofANonExportedType.types
+++ new.typeofANonExportedType.types
@@= skipped -6, +6 lines =@@
 
 export var r1: typeof x;
 >r1 : number
->x : number
 
 var y = { foo: '' };
 >y : { foo: string; }
@@= skipped -10, +9 lines =@@
 
 export var r2: typeof y;
 >r2 : { foo: string; }
->y : { foo: string; }
 
 class C {
 >C : C
@@= skipped -16, +15 lines =@@
 
 export var r3: typeof C;
 >r3 : typeof C
->C : typeof C
 
 export var r4: typeof c;
 >r4 : C
->c : C
 
 export var r4b: typeof c2;
 >r4b : C
->c2 : C
 
 interface I {
+>I : I
+
     foo: string;
 >foo : string
 }
@@= skipped -22, +21 lines =@@
 
 export var r5: typeof i;
 >r5 : I
->i : I
 
 export var r5: typeof i2;
 >r5 : I
->i2 : I
 
 module M {
 >M : typeof M
@@= skipped -22, +20 lines =@@
 }
 export var r6: typeof M;
 >r6 : typeof M
->M : typeof M
 
 export var r7: typeof M.foo;
 >r7 : string
->M.foo : string
 >M : typeof M
->foo : string
 
 import Z = M;
 >Z : typeof M
@@= skipped -14, +11 lines =@@
 
 export var r8: typeof Z;
 >r8 : typeof M
->Z : typeof M
 
 export var r9: typeof Z.foo;
 >r9 : string
->Z.foo : string
 >Z : typeof M
->foo : string
 
 enum E {
->E : E
+>E : E.A
 
     A
 >A : E.A
 }
 export var r10: typeof E;
 >r10 : typeof E
->E : typeof E
 
 export var r11: typeof E.A;
->r11 : E
->E.A : E
+>r11 : E.A
 >E : typeof E
->A : E
 
 export var r12: typeof r12;
 >r12 : any
->r12 : any
 
 function foo() { }
 >foo : typeof foo
@@= skipped -47, +40 lines =@@
 }
 export var r13: typeof foo;
 >r13 : typeof foo
->foo : typeof foo
 
