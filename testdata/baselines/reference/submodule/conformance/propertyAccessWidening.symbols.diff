--- old.propertyAccessWidening.symbols
+++ new.propertyAccessWidening.symbols
@@= skipped -13, +13 lines =@@
 
     const table = [{cells: headerNames }].concat(t);
 >table : Symbol(table, Decl(propertyAccessWidening.ts, 4, 9))
->[{cells: headerNames }].concat : Symbol(Array.concat, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
+>[{cells: headerNames }].concat : Symbol(concat, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 >cells : Symbol(cells, Decl(propertyAccessWidening.ts, 4, 20))
 >headerNames : Symbol(headerNames, Decl(propertyAccessWidening.ts, 2, 12))
->concat : Symbol(Array.concat, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
+>concat : Symbol(concat, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 >t : Symbol(t, Decl(propertyAccessWidening.ts, 3, 7))
 }
 
@@= skipped -20, +20 lines =@@
 >table : Symbol(table, Decl(propertyAccessWidening.ts, 9, 9))
 >cells : Symbol(cells, Decl(propertyAccessWidening.ts, 9, 20))
 >headerNames : Symbol(headerNames, Decl(propertyAccessWidening.ts, 7, 12))
->"concat" : Symbol(Array.concat, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
+>"concat" : Symbol(concat, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 >t : Symbol(t, Decl(propertyAccessWidening.ts, 8, 7))
 }
 
