--- old.checkJsdocTypedefInParamTag1.symbols
+++ new.checkJsdocTypedefInParamTag1.symbols
@@= skipped -3, +3 lines =@@
 // @ts-check
 /**
  * @typedef {Object} Opts
+>Opts : Symbol(Opts, Decl(0.js, 12, 1))
+
  * @property {string} x
+>x : Symbol(x, Decl(0.js, 12, 1))
+
  * @property {string=} y
+>y : Symbol(y, Decl(0.js, 12, 1))
+
  * @property {string} [z]
+>z : Symbol(z, Decl(0.js, 12, 1))
+
  * @property {string} [w="hi"]
+>w : Symbol(w, Decl(0.js, 12, 1))
+
  *
  * @param {Opts} opts
  */
@@= skipped -12, +22 lines =@@
 >opts : Symbol(opts, Decl(0.js, 10, 13))
 
     opts.x;
->opts.x : Symbol(x, Decl(0.js, 3, 3))
+>opts.x : Symbol(x, Decl(0.js, 12, 1))
 >opts : Symbol(opts, Decl(0.js, 10, 13))
->x : Symbol(x, Decl(0.js, 3, 3))
+>x : Symbol(x, Decl(0.js, 12, 1))
 }
 
 foo({x: 'abc'});
@@= skipped -11, +11 lines =@@
 
 /**
  * @typedef {Object} AnotherOpts
+>AnotherOpts : Symbol(AnotherOpts, Decl(0.js, 25, 1))
+
  * @property anotherX {string}
+>anotherX : Symbol(anotherX, Decl(0.js, 25, 1))
+
  * @property anotherY {string=}
+>anotherY : Symbol(anotherY, Decl(0.js, 25, 1))
+
  * 
  * @param {AnotherOpts} opts
  */
@@= skipped -10, +16 lines =@@
 >opts : Symbol(opts, Decl(0.js, 23, 14))
 
     opts.anotherX;
->opts.anotherX : Symbol(anotherX, Decl(0.js, 18, 3))
+>opts.anotherX : Symbol(anotherX, Decl(0.js, 25, 1))
 >opts : Symbol(opts, Decl(0.js, 23, 14))
->anotherX : Symbol(anotherX, Decl(0.js, 18, 3))
+>anotherX : Symbol(anotherX, Decl(0.js, 25, 1))
 }
 
 foo1({anotherX: "world"});
@@= skipped -11, +11 lines =@@
 
 /**
  * @typedef {object} Opts1
+>Opts1 : Symbol(Opts1, Decl(0.js, 40, 1))
+
  * @property {string} x
+>x : Symbol(x, Decl(0.js, 40, 1))
+
  * @property {string=} y
+>y : Symbol(y, Decl(0.js, 40, 1))
+
  * @property {string} [z]
+>z : Symbol(z, Decl(0.js, 40, 1))
+
  * @property {string} [w="hi"]
+>w : Symbol(w, Decl(0.js, 40, 1))
+
  *
  * @param {Opts1} opts
  */
@@= skipped -12, +22 lines =@@
 >opts : Symbol(opts, Decl(0.js, 38, 14))
 
     opts.x;
->opts.x : Symbol(x, Decl(0.js, 31, 3))
+>opts.x : Symbol(x, Decl(0.js, 40, 1))
 >opts : Symbol(opts, Decl(0.js, 38, 14))
->x : Symbol(x, Decl(0.js, 31, 3))
+>x : Symbol(x, Decl(0.js, 40, 1))
 }
 foo2({x: 'abc'});
 >foo2 : Symbol(foo2, Decl(0.js, 27, 26))
