--- old.functionLiteralForOverloads2.types
+++ new.functionLiteralForOverloads2.types
@@= skipped -4, +4 lines =@@
 
 class C {
 >C : C
->  : ^
 
     constructor(x: string);
 >x : string
->  : ^^^^^^
 
     constructor(x: number);
 >x : number
->  : ^^^^^^
 
     constructor(x) { }
 >x : any
@@= skipped -16, +13 lines =@@
 
 class D<T> {
 >D : D<T>
->  : ^^^^
+>T : T
 
     constructor(x: string);
 >x : string
->  : ^^^^^^
 
     constructor(x: number);
 >x : number
->  : ^^^^^^
 
     constructor(x) { }
 >x : any
@@= skipped -16, +14 lines =@@
 
 var f: {
 >f : { new (x: string): C; new (x: number): C; }
->  : ^^^^^^^ ^^      ^^^ ^^^^^^^ ^^      ^^^ ^^^
 
     new(x: string): C;
 >x : string
->  : ^^^^^^
 
     new(x: number): C;
 >x : number
->  : ^^^^^^
 
 } = C;
 >C : typeof C
->  : ^^^^^^^^
 
 var f2: {
 >f2 : { new <T>(x: string): C; new <T>(x: number): C; }
->   : ^^^^^^^ ^^ ^^      ^^^ ^^^^^^^ ^^ ^^      ^^^ ^^^
 
     new<T>(x: string): C;
+>T : T
 >x : string
->  : ^^^^^^
 
     new<T>(x: number): C;
+>T : T
 >x : number
->  : ^^^^^^
 
 } = C;
 >C : typeof C
->  : ^^^^^^^^
 
 var f3: {
 >f3 : { new <T>(x: string): D<T>; new <T>(x: number): D<T>; }
->   : ^^^^^^^ ^^ ^^      ^^^    ^^^^^^^ ^^ ^^      ^^^    ^^^
 
     new<T>(x: string): D<T>;
+>T : T
 >x : string
->  : ^^^^^^
 
     new<T>(x: number): D<T>;
+>T : T
 >x : number
->  : ^^^^^^
 
 } = D;
 >D : typeof D
->  : ^^^^^^^^
 
