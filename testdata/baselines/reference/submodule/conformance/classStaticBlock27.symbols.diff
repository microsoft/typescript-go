--- old.classStaticBlock27.symbols
+++ new.classStaticBlock27.symbols
@@= skipped -6, +6 lines =@@
 >Foo : Symbol(Foo, Decl(classStaticBlock27.ts, 2, 4))
 
     static prop = 1
->prop : Symbol(Foo.prop, Decl(classStaticBlock27.ts, 2, 16))
+>prop : Symbol(prop, Decl(classStaticBlock27.ts, 2, 16))
 
     static {
         console.log(Foo.prop);
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
->Foo.prop : Symbol(Foo.prop, Decl(classStaticBlock27.ts, 2, 16))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
+>Foo.prop : Symbol(prop, Decl(classStaticBlock27.ts, 2, 16))
 >Foo : Symbol(Foo, Decl(classStaticBlock27.ts, 2, 4))
->prop : Symbol(Foo.prop, Decl(classStaticBlock27.ts, 2, 16))
+>prop : Symbol(prop, Decl(classStaticBlock27.ts, 2, 16))
 
         Foo.prop++;
->Foo.prop : Symbol(Foo.prop, Decl(classStaticBlock27.ts, 2, 16))
+>Foo.prop : Symbol(prop, Decl(classStaticBlock27.ts, 2, 16))
 >Foo : Symbol(Foo, Decl(classStaticBlock27.ts, 2, 4))
->prop : Symbol(Foo.prop, Decl(classStaticBlock27.ts, 2, 16))
+>prop : Symbol(prop, Decl(classStaticBlock27.ts, 2, 16))
     }
     static {
         console.log(Foo.prop);
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
->Foo.prop : Symbol(Foo.prop, Decl(classStaticBlock27.ts, 2, 16))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
+>Foo.prop : Symbol(prop, Decl(classStaticBlock27.ts, 2, 16))
 >Foo : Symbol(Foo, Decl(classStaticBlock27.ts, 2, 4))
->prop : Symbol(Foo.prop, Decl(classStaticBlock27.ts, 2, 16))
+>prop : Symbol(prop, Decl(classStaticBlock27.ts, 2, 16))
 
         Foo.prop++;
->Foo.prop : Symbol(Foo.prop, Decl(classStaticBlock27.ts, 2, 16))
+>Foo.prop : Symbol(prop, Decl(classStaticBlock27.ts, 2, 16))
 >Foo : Symbol(Foo, Decl(classStaticBlock27.ts, 2, 4))
->prop : Symbol(Foo.prop, Decl(classStaticBlock27.ts, 2, 16))
+>prop : Symbol(prop, Decl(classStaticBlock27.ts, 2, 16))
     }
     static {
         console.log(Foo.prop);
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
->Foo.prop : Symbol(Foo.prop, Decl(classStaticBlock27.ts, 2, 16))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
+>Foo.prop : Symbol(prop, Decl(classStaticBlock27.ts, 2, 16))
 >Foo : Symbol(Foo, Decl(classStaticBlock27.ts, 2, 4))
->prop : Symbol(Foo.prop, Decl(classStaticBlock27.ts, 2, 16))
+>prop : Symbol(prop, Decl(classStaticBlock27.ts, 2, 16))
 
         Foo.prop++;
->Foo.prop : Symbol(Foo.prop, Decl(classStaticBlock27.ts, 2, 16))
+>Foo.prop : Symbol(prop, Decl(classStaticBlock27.ts, 2, 16))
 >Foo : Symbol(Foo, Decl(classStaticBlock27.ts, 2, 4))
->prop : Symbol(Foo.prop, Decl(classStaticBlock27.ts, 2, 16))
+>prop : Symbol(prop, Decl(classStaticBlock27.ts, 2, 16))
     }
 }
