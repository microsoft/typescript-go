--- old.derivedClassWithPrivateInstanceShadowingPublicInstance.symbols
+++ new.derivedClassWithPrivateInstanceShadowingPublicInstance.symbols
@@= skipped -4, +4 lines =@@
 >Base : Symbol(Base, Decl(derivedClassWithPrivateInstanceShadowingPublicInstance.ts, 0, 0))
 
     public x: string;
->x : Symbol(Base.x, Decl(derivedClassWithPrivateInstanceShadowingPublicInstance.ts, 0, 12))
+>x : Symbol(x, Decl(derivedClassWithPrivateInstanceShadowingPublicInstance.ts, 0, 12))
 
     public fn(): string {
->fn : Symbol(Base.fn, Decl(derivedClassWithPrivateInstanceShadowingPublicInstance.ts, 1, 21))
+>fn : Symbol(fn, Decl(derivedClassWithPrivateInstanceShadowingPublicInstance.ts, 1, 21))
 
         return '';
     }
 
     public get a() { return 1; }
->a : Symbol(Base.a, Decl(derivedClassWithPrivateInstanceShadowingPublicInstance.ts, 4, 5), Decl(derivedClassWithPrivateInstanceShadowingPublicInstance.ts, 6, 32))
+>a : Symbol(a, Decl(derivedClassWithPrivateInstanceShadowingPublicInstance.ts, 4, 5), Decl(derivedClassWithPrivateInstanceShadowingPublicInstance.ts, 6, 32))
 
     public set a(v) { }
->a : Symbol(Base.a, Decl(derivedClassWithPrivateInstanceShadowingPublicInstance.ts, 4, 5), Decl(derivedClassWithPrivateInstanceShadowingPublicInstance.ts, 6, 32))
+>a : Symbol(a, Decl(derivedClassWithPrivateInstanceShadowingPublicInstance.ts, 4, 5), Decl(derivedClassWithPrivateInstanceShadowingPublicInstance.ts, 6, 32))
 >v : Symbol(v, Decl(derivedClassWithPrivateInstanceShadowingPublicInstance.ts, 7, 17))
 }
 
@@= skipped -22, +22 lines =@@
 >Base : Symbol(Base, Decl(derivedClassWithPrivateInstanceShadowingPublicInstance.ts, 0, 0))
 
     private x: string; 
->x : Symbol(Derived.x, Decl(derivedClassWithPrivateInstanceShadowingPublicInstance.ts, 11, 28))
+>x : Symbol(x, Decl(derivedClassWithPrivateInstanceShadowingPublicInstance.ts, 11, 28))
 
     private fn(): string {
->fn : Symbol(Derived.fn, Decl(derivedClassWithPrivateInstanceShadowingPublicInstance.ts, 12, 22))
+>fn : Symbol(fn, Decl(derivedClassWithPrivateInstanceShadowingPublicInstance.ts, 12, 22))
 
         return '';
     }
 
     private get a() { return 1; }
->a : Symbol(Derived.a, Decl(derivedClassWithPrivateInstanceShadowingPublicInstance.ts, 15, 5), Decl(derivedClassWithPrivateInstanceShadowingPublicInstance.ts, 17, 33))
+>a : Symbol(a, Decl(derivedClassWithPrivateInstanceShadowingPublicInstance.ts, 15, 5), Decl(derivedClassWithPrivateInstanceShadowingPublicInstance.ts, 17, 33))
 
     private set a(v) { }
->a : Symbol(Derived.a, Decl(derivedClassWithPrivateInstanceShadowingPublicInstance.ts, 15, 5), Decl(derivedClassWithPrivateInstanceShadowingPublicInstance.ts, 17, 33))
+>a : Symbol(a, Decl(derivedClassWithPrivateInstanceShadowingPublicInstance.ts, 15, 5), Decl(derivedClassWithPrivateInstanceShadowingPublicInstance.ts, 17, 33))
 >v : Symbol(v, Decl(derivedClassWithPrivateInstanceShadowingPublicInstance.ts, 18, 18))
 }
 
