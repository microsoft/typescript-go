--- old.conditionalOperatorWithoutIdenticalBCT.types
+++ new.conditionalOperatorWithoutIdenticalBCT.types
@@= skipped -65, +65 lines =@@
 var result4: (t: X) => number = true ? (m) => m.propertyX1 : (n) => n.propertyX2;
 >result4 : (t: X) => number
 >t : X
->true ? (m) => m.propertyX1 : (n) => n.propertyX2 : ((m: X) => number) | ((n: X) => string)
+>true ? (m) => m.propertyX1 : (n) => n.propertyX2 : (m: X) => number | (n: X) => string
 >true : true
 >(m) => m.propertyX1 : (m: X) => number
 >m : X
@@= skipped -16, +16 lines =@@
 var result5: (t: X) => string = true ? (m) => m.propertyX1 : (n) => n.propertyX2;
 >result5 : (t: X) => string
 >t : X
->true ? (m) => m.propertyX1 : (n) => n.propertyX2 : ((m: X) => number) | ((n: X) => string)
+>true ? (m) => m.propertyX1 : (n) => n.propertyX2 : (m: X) => number | (n: X) => string
 >true : true
 >(m) => m.propertyX1 : (m: X) => number
 >m : X
@@= skipped -16, +16 lines =@@
 var result6: (t: X) => boolean = true ? (m) => m.propertyX1 : (n) => n.propertyX2;
 >result6 : (t: X) => boolean
 >t : X
->true ? (m) => m.propertyX1 : (n) => n.propertyX2 : ((m: X) => number) | ((n: X) => string)
+>true ? (m) => m.propertyX1 : (n) => n.propertyX2 : (m: X) => number | (n: X) => string
 >true : true
 >(m) => m.propertyX1 : (m: X) => number
 >m : X
@@= skipped -14, +14 lines =@@
 >propertyX2 : string
 
 var result61: (t: X) => number| string = true ? (m) => m.propertyX1 : (n) => n.propertyX2;
->result61 : (t: X) => number | string
+>result61 : (t: X) => string | number
 >t : X
->true ? (m) => m.propertyX1 : (n) => n.propertyX2 : ((m: X) => number) | ((n: X) => string)
+>true ? (m) => m.propertyX1 : (n) => n.propertyX2 : (m: X) => number | (n: X) => string
 >true : true
 >(m) => m.propertyX1 : (m: X) => number
 >m : X
