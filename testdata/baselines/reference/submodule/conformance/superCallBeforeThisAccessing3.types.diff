--- old.superCallBeforeThisAccessing3.types
+++ new.superCallBeforeThisAccessing3.types
@@= skipped -2, +2 lines =@@
 === superCallBeforeThisAccessing3.ts ===
 class Base {
 >Base : Base
->     : ^^^^
 
     constructor(c) { }
 >c : any
->  : ^^^
 }
 class D extends Base {
 >D : D
->  : ^
 >Base : Base
->     : ^^^^
 
     private _t;
 >_t : any
->   : ^^^
 
     constructor() {
         let x = () => { this._t };
 >x : () => void
->  : ^^^^^^^^^^
 >() => { this._t } : () => void
->                  : ^^^^^^^^^^
 >this._t : any
->        : ^^^
 >this : this
->     : ^^^^
 >_t : any
->   : ^^^
 
         x();  // no error; we only check super is called before this when the container is a constructor
 >x() : void
->    : ^^^^
 >x : () => void
->  : ^^^^^^^^^^
 
         this._t;  // error
 >this._t : any
->        : ^^^
 >this : this
->     : ^^^^
 >_t : any
->   : ^^^
 
         super(undefined);
 >super(undefined) : void
->                 : ^^^^
 >super : typeof Base
->      : ^^^^^^^^^^^
 >undefined : undefined
->          : ^^^^^^^^^
     }
 }
 
