error TS2318: Cannot find global type 'Array'.
error TS2318: Cannot find global type 'Function'.
error TS2318: Cannot find global type 'IArguments'.
error TS2318: Cannot find global type 'RegExp'.
error TS2318: Cannot find global type 'String'.
error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
error TS2552: Cannot find name 'Number'. Did you mean 'number'?
error TS2552: Cannot find name 'Object'. Did you mean 'object'?


!!! error TS2318: Cannot find global type 'Array'.
!!! error TS2318: Cannot find global type 'Function'.
!!! error TS2318: Cannot find global type 'IArguments'.
!!! error TS2318: Cannot find global type 'RegExp'.
!!! error TS2318: Cannot find global type 'String'.
!!! error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
!!! error TS2552: Cannot find name 'Number'. Did you mean 'number'?
!!! error TS2552: Cannot find name 'Object'. Did you mean 'object'?
==== file.js (0 errors) ====
    class X {
        /**
          * Cancels the request, sending a cancellation to the other party
          * @param {Object} error __auto_generated__
          * @param {string?} error.reason the error reason to send the cancellation with
          * @param {string?} error.code the error code to send the cancellation with
          * @returns {Promise.<*>} resolves when the event has been sent.
          */ 
        async cancel({reason, code}) {}
    }
    
    class Y {
        /**
          * Cancels the request, sending a cancellation to the other party
          * @param {Object} error __auto_generated__
          * @param {string?} error.reason the error reason to send the cancellation with
          * @param {Object} error.suberr
          * @param {string?} error.suberr.reason the error reason to send the cancellation with
          * @param {string?} error.suberr.code the error code to send the cancellation with
          * @returns {Promise.<*>} resolves when the event has been sent.
          */ 
        async cancel({reason, suberr}) {}
    }
    