--- old.propertyOverridesAccessors.symbols
+++ new.propertyOverridesAccessors.symbols
@@= skipped -4, +4 lines =@@
 >A : Symbol(A, Decl(propertyOverridesAccessors.ts, 0, 0))
 
     get p() { return 'oh no' }
->p : Symbol(A.p, Decl(propertyOverridesAccessors.ts, 0, 9))
+>p : Symbol(p, Decl(propertyOverridesAccessors.ts, 0, 9))
 }
 class B extends A {
 >B : Symbol(B, Decl(propertyOverridesAccessors.ts, 2, 1))
 >A : Symbol(A, Decl(propertyOverridesAccessors.ts, 0, 0))
 
     p = 'yep' // error
->p : Symbol(B.p, Decl(propertyOverridesAccessors.ts, 3, 19))
+>p : Symbol(p, Decl(propertyOverridesAccessors.ts, 3, 19))
 }
 class C {
 >C : Symbol(C, Decl(propertyOverridesAccessors.ts, 5, 1))
 
     _secret = 11
->_secret : Symbol(C._secret, Decl(propertyOverridesAccessors.ts, 6, 9))
+>_secret : Symbol(_secret, Decl(propertyOverridesAccessors.ts, 6, 9))
 
     get p() { return this._secret }
->p : Symbol(C.p, Decl(propertyOverridesAccessors.ts, 7, 16), Decl(propertyOverridesAccessors.ts, 8, 35))
->this._secret : Symbol(C._secret, Decl(propertyOverridesAccessors.ts, 6, 9))
+>p : Symbol(p, Decl(propertyOverridesAccessors.ts, 7, 16), Decl(propertyOverridesAccessors.ts, 8, 35))
+>this._secret : Symbol(_secret, Decl(propertyOverridesAccessors.ts, 6, 9))
 >this : Symbol(C, Decl(propertyOverridesAccessors.ts, 5, 1))
->_secret : Symbol(C._secret, Decl(propertyOverridesAccessors.ts, 6, 9))
+>_secret : Symbol(_secret, Decl(propertyOverridesAccessors.ts, 6, 9))
 
     set p(value) { this._secret = value }
->p : Symbol(C.p, Decl(propertyOverridesAccessors.ts, 7, 16), Decl(propertyOverridesAccessors.ts, 8, 35))
+>p : Symbol(p, Decl(propertyOverridesAccessors.ts, 7, 16), Decl(propertyOverridesAccessors.ts, 8, 35))
 >value : Symbol(value, Decl(propertyOverridesAccessors.ts, 9, 10))
->this._secret : Symbol(C._secret, Decl(propertyOverridesAccessors.ts, 6, 9))
+>this._secret : Symbol(_secret, Decl(propertyOverridesAccessors.ts, 6, 9))
 >this : Symbol(C, Decl(propertyOverridesAccessors.ts, 5, 1))
->_secret : Symbol(C._secret, Decl(propertyOverridesAccessors.ts, 6, 9))
+>_secret : Symbol(_secret, Decl(propertyOverridesAccessors.ts, 6, 9))
 >value : Symbol(value, Decl(propertyOverridesAccessors.ts, 9, 10))
 }
 class D extends C {
@@= skipped -34, +34 lines =@@
 >C : Symbol(C, Decl(propertyOverridesAccessors.ts, 5, 1))
 
     p = 101 // error
->p : Symbol(D.p, Decl(propertyOverridesAccessors.ts, 11, 19))
+>p : Symbol(p, Decl(propertyOverridesAccessors.ts, 11, 19))
 }
 
