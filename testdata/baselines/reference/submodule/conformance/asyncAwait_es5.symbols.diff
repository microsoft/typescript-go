--- old.asyncAwait_es5.symbols
+++ new.asyncAwait_es5.symbols
@@= skipped -89, +89 lines =@@
 >C : Symbol(C, Decl(asyncAwait_es5.ts, 25, 2))
 
 	async m1() { }
->m1 : Symbol(C.m1, Decl(asyncAwait_es5.ts, 27, 9))
+>m1 : Symbol(m1, Decl(asyncAwait_es5.ts, 27, 9))
 
 	async m2(): Promise<void> { }
->m2 : Symbol(C.m2, Decl(asyncAwait_es5.ts, 28, 15))
+>m2 : Symbol(m2, Decl(asyncAwait_es5.ts, 28, 15))
 >Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --))
 
 	async m3(): MyPromise<void> { }
->m3 : Symbol(C.m3, Decl(asyncAwait_es5.ts, 29, 30))
+>m3 : Symbol(m3, Decl(asyncAwait_es5.ts, 29, 30))
 >MyPromise : Symbol(MyPromise, Decl(asyncAwait_es5.ts, 0, 0), Decl(asyncAwait_es5.ts, 1, 11))
 
 	static async m4() { }
->m4 : Symbol(C.m4, Decl(asyncAwait_es5.ts, 30, 32))
+>m4 : Symbol(m4, Decl(asyncAwait_es5.ts, 30, 32))
 
 	static async m5(): Promise<void> { }
->m5 : Symbol(C.m5, Decl(asyncAwait_es5.ts, 31, 22))
+>m5 : Symbol(m5, Decl(asyncAwait_es5.ts, 31, 22))
 >Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --))
 
 	static async m6(): MyPromise<void> { }
->m6 : Symbol(C.m6, Decl(asyncAwait_es5.ts, 32, 37))
+>m6 : Symbol(m6, Decl(asyncAwait_es5.ts, 32, 37))
 >MyPromise : Symbol(MyPromise, Decl(asyncAwait_es5.ts, 0, 0), Decl(asyncAwait_es5.ts, 1, 11))
 }
 
