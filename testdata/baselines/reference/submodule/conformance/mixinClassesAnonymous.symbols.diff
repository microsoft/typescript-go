--- old.mixinClassesAnonymous.symbols
+++ new.mixinClassesAnonymous.symbols
@@ -11,8 +11,8 @@
 >Base : Symbol(Base, Decl(mixinClassesAnonymous.ts, 0, 47))
 
     constructor(public x: number, public y: number) {}
->x : Symbol(Base.x, Decl(mixinClassesAnonymous.ts, 3, 16))
->y : Symbol(Base.y, Decl(mixinClassesAnonymous.ts, 3, 33))
+>x : Symbol(x, Decl(mixinClassesAnonymous.ts, 3, 16))
+>y : Symbol(y, Decl(mixinClassesAnonymous.ts, 3, 33))
 }
 
 class Derived extends Base {
@@ -22,7 +22,7 @@
     constructor(x: number, y: number, public z: number) {
 >x : Symbol(x, Decl(mixinClassesAnonymous.ts, 7, 16))
 >y : Symbol(y, Decl(mixinClassesAnonymous.ts, 7, 26))
->z : Symbol(Derived.z, Decl(mixinClassesAnonymous.ts, 7, 37))
+>z : Symbol(z, Decl(mixinClassesAnonymous.ts, 7, 37))
 
         super(x, y);
 >super : Symbol(Base, Decl(mixinClassesAnonymous.ts, 0, 47))
@@ -41,19 +41,19 @@
 >superClass : Symbol(superClass, Decl(mixinClassesAnonymous.ts, 12, 48))
 
     static message = "hello";
->message : Symbol((Anonymous class).message, Decl(mixinClassesAnonymous.ts, 12, 92))
+>message : Symbol(message, Decl(mixinClassesAnonymous.ts, 12, 92))
 
     print() {
->print : Symbol((Anonymous class).print, Decl(mixinClassesAnonymous.ts, 13, 29))
+>print : Symbol(print, Decl(mixinClassesAnonymous.ts, 13, 29))
 
         const output = this.x + "," + this.y;
 >output : Symbol(output, Decl(mixinClassesAnonymous.ts, 15, 13))
->this.x : Symbol(Base.x, Decl(mixinClassesAnonymous.ts, 3, 16))
+>this.x : Symbol(x, Decl(mixinClassesAnonymous.ts, 3, 16))
 >this : Symbol((Anonymous class), Decl(mixinClassesAnonymous.ts, 12, 65))
->x : Symbol(Base.x, Decl(mixinClassesAnonymous.ts, 3, 16))
->this.y : Symbol(Base.y, Decl(mixinClassesAnonymous.ts, 3, 33))
+>x : Symbol(x, Decl(mixinClassesAnonymous.ts, 3, 16))
+>this.y : Symbol(y, Decl(mixinClassesAnonymous.ts, 3, 33))
 >this : Symbol((Anonymous class), Decl(mixinClassesAnonymous.ts, 12, 65))
->y : Symbol(Base.y, Decl(mixinClassesAnonymous.ts, 3, 33))
+>y : Symbol(y, Decl(mixinClassesAnonymous.ts, 3, 33))
     }
 }
 
@@ -69,7 +69,7 @@
 >superClass : Symbol(superClass, Decl(mixinClassesAnonymous.ts, 19, 43))
 
         _tag: string;
->_tag : Symbol(C._tag, Decl(mixinClassesAnonymous.ts, 20, 32))
+>_tag : Symbol(_tag, Decl(mixinClassesAnonymous.ts, 20, 32))
 
         constructor(...args: any[]) {
 >args : Symbol(args, Decl(mixinClassesAnonymous.ts, 22, 20))
@@ -79,9 +79,9 @@
 >args : Symbol(args, Decl(mixinClassesAnonymous.ts, 22, 20))
 
             this._tag = "hello";
->this._tag : Symbol(C._tag, Decl(mixinClassesAnonymous.ts, 20, 32))
+>this._tag : Symbol(_tag, Decl(mixinClassesAnonymous.ts, 20, 32))
 >this : Symbol(C, Decl(mixinClassesAnonymous.ts, 19, 59))
->_tag : Symbol(C._tag, Decl(mixinClassesAnonymous.ts, 20, 32))
+>_tag : Symbol(_tag, Decl(mixinClassesAnonymous.ts, 20, 32))
         }
     }
     return C;
@@ -100,9 +100,9 @@
 >Derived : Symbol(Derived, Decl(mixinClassesAnonymous.ts, 4, 1))
 
 Thing2.message;
->Thing2.message : Symbol((Anonymous class).message, Decl(mixinClassesAnonymous.ts, 12, 92))
+>Thing2.message : Symbol(message, Decl(mixinClassesAnonymous.ts, 12, 92))
 >Thing2 : Symbol(Thing2, Decl(mixinClassesAnonymous.ts, 31, 5))
->message : Symbol((Anonymous class).message, Decl(mixinClassesAnonymous.ts, 12, 92))
+>message : Symbol(message, Decl(mixinClassesAnonymous.ts, 12, 92))
 
 function f1() {
 >f1 : Symbol(f1, Decl(mixinClassesAnonymous.ts, 32, 15))
@@ -112,14 +112,14 @@
 >Thing1 : Symbol(Thing1, Decl(mixinClassesAnonymous.ts, 30, 5))
 
     thing.x;
->thing.x : Symbol(Base.x, Decl(mixinClassesAnonymous.ts, 3, 16))
+>thing.x : Symbol(x, Decl(mixinClassesAnonymous.ts, 3, 16))
 >thing : Symbol(thing, Decl(mixinClassesAnonymous.ts, 35, 9))
->x : Symbol(Base.x, Decl(mixinClassesAnonymous.ts, 3, 16))
+>x : Symbol(x, Decl(mixinClassesAnonymous.ts, 3, 16))
 
     thing._tag;
->thing._tag : Symbol(C._tag, Decl(mixinClassesAnonymous.ts, 20, 32))
+>thing._tag : Symbol(_tag, Decl(mixinClassesAnonymous.ts, 20, 32))
 >thing : Symbol(thing, Decl(mixinClassesAnonymous.ts, 35, 9))
->_tag : Symbol(C._tag, Decl(mixinClassesAnonymous.ts, 20, 32))
+>_tag : Symbol(_tag, Decl(mixinClassesAnonymous.ts, 20, 32))
 }
 
 function f2() {
@@ -130,19 +130,19 @@
 >Thing2 : Symbol(Thing2, Decl(mixinClassesAnonymous.ts, 31, 5))
 
     thing.x;
->thing.x : Symbol(Base.x, Decl(mixinClassesAnonymous.ts, 3, 16))
+>thing.x : Symbol(x, Decl(mixinClassesAnonymous.ts, 3, 16))
 >thing : Symbol(thing, Decl(mixinClassesAnonymous.ts, 41, 9))
->x : Symbol(Base.x, Decl(mixinClassesAnonymous.ts, 3, 16))
+>x : Symbol(x, Decl(mixinClassesAnonymous.ts, 3, 16))
 
     thing._tag;
->thing._tag : Symbol(C._tag, Decl(mixinClassesAnonymous.ts, 20, 32))
+>thing._tag : Symbol(_tag, Decl(mixinClassesAnonymous.ts, 20, 32))
 >thing : Symbol(thing, Decl(mixinClassesAnonymous.ts, 41, 9))
->_tag : Symbol(C._tag, Decl(mixinClassesAnonymous.ts, 20, 32))
+>_tag : Symbol(_tag, Decl(mixinClassesAnonymous.ts, 20, 32))
 
     thing.print();
->thing.print : Symbol((Anonymous class).print, Decl(mixinClassesAnonymous.ts, 13, 29))
+>thing.print : Symbol(print, Decl(mixinClassesAnonymous.ts, 13, 29))
 >thing : Symbol(thing, Decl(mixinClassesAnonymous.ts, 41, 9))
->print : Symbol((Anonymous class).print, Decl(mixinClassesAnonymous.ts, 13, 29))
+>print : Symbol(print, Decl(mixinClassesAnonymous.ts, 13, 29))
 }
 
 class Thing3 extends Thing2 {
@@ -154,18 +154,18 @@
 
         super(10, 20, 30);
         this._tag = tag;
->this._tag : Symbol(C._tag, Decl(mixinClassesAnonymous.ts, 20, 32))
+>this._tag : Symbol(_tag, Decl(mixinClassesAnonymous.ts, 20, 32))
 >this : Symbol(Thing3, Decl(mixinClassesAnonymous.ts, 45, 1))
->_tag : Symbol(C._tag, Decl(mixinClassesAnonymous.ts, 20, 32))
+>_tag : Symbol(_tag, Decl(mixinClassesAnonymous.ts, 20, 32))
 >tag : Symbol(tag, Decl(mixinClassesAnonymous.ts, 48, 16))
     }
     test() {
->test : Symbol(Thing3.test, Decl(mixinClassesAnonymous.ts, 51, 5))
+>test : Symbol(test, Decl(mixinClassesAnonymous.ts, 51, 5))
 
         this.print();
->this.print : Symbol((Anonymous class).print, Decl(mixinClassesAnonymous.ts, 13, 29))
+>this.print : Symbol(print, Decl(mixinClassesAnonymous.ts, 13, 29))
 >this : Symbol(Thing3, Decl(mixinClassesAnonymous.ts, 45, 1))
->print : Symbol((Anonymous class).print, Decl(mixinClassesAnonymous.ts, 13, 29))
+>print : Symbol(print, Decl(mixinClassesAnonymous.ts, 13, 29))
     }
 }
 
@@ -182,7 +182,7 @@
 >Base : Symbol(Base, Decl(mixinClassesAnonymous.ts, 59, 53))
 
         timestamp = new Date();
->timestamp : Symbol((Anonymous class).timestamp, Decl(mixinClassesAnonymous.ts, 60, 31))
+>timestamp : Symbol(timestamp, Decl(mixinClassesAnonymous.ts, 60, 31))
 >Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --))
 
     };
