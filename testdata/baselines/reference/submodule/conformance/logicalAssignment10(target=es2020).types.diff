--- old.logicalAssignment10(target=es2020).types
+++ new.logicalAssignment10(target=es2020).types
@@= skipped -2, +2 lines =@@
 === logicalAssignment10.ts ===
 var count = 0;
 >count : number
->      : ^^^^^^
 >0 : 0
->  : ^
 
 var obj = {};
 >obj : {}
->    : ^^
 >{} : {}
->   : ^^
 
 function incr() {
 >incr : () => number
->     : ^^^^^^^^^^^^
 
     return ++count;
 >++count : number
->        : ^^^^^^
 >count : number
->      : ^^^^^^
 }
 
 const oobj = {
 >oobj : { obj: {}; }
->     : ^^^^^^^^^^^^
 >{    obj} : { obj: {}; }
->          : ^^^^^^^^^^^^
 
     obj
->obj : {}
->    : ^^
+>obj : any
 }
 
 obj[incr()] ??= incr();
->obj[incr()] ??= incr() : error
->obj[incr()] : error
+>obj[incr()] ??= incr() : any
+>obj[incr()] : any
 >obj : {}
->    : ^^
 >incr() : number
->       : ^^^^^^
 >incr : () => number
->     : ^^^^^^^^^^^^
 >incr() : number
->       : ^^^^^^
 >incr : () => number
->     : ^^^^^^^^^^^^
 
 oobj["obj"][incr()] ??= incr();
->oobj["obj"][incr()] ??= incr() : error
->oobj["obj"][incr()] : error
+>oobj["obj"][incr()] ??= incr() : any
+>oobj["obj"][incr()] : any
 >oobj["obj"] : {}
->            : ^^
 >oobj : { obj: {}; }
->     : ^^^^^^^^^^^^
 >"obj" : "obj"
->      : ^^^^^
 >incr() : number
->       : ^^^^^^
 >incr : () => number
->     : ^^^^^^^^^^^^
 >incr() : number
->       : ^^^^^^
 >incr : () => number
->     : ^^^^^^^^^^^^
 
