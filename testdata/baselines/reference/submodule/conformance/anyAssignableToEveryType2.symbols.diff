--- old.anyAssignableToEveryType2.symbols
+++ new.anyAssignableToEveryType2.symbols
@@= skipped -9, +9 lines =@@
 >x : Symbol(x, Decl(anyAssignableToEveryType2.ts, 3, 5))
 
     foo: any; // ok, any identical to itself
->foo : Symbol(I.foo, Decl(anyAssignableToEveryType2.ts, 3, 21))
+>foo : Symbol(foo, Decl(anyAssignableToEveryType2.ts, 3, 21))
 }
 
 
@@= skipped -11, +11 lines =@@
 >x : Symbol(x, Decl(anyAssignableToEveryType2.ts, 9, 5))
 
     foo: any;
->foo : Symbol(I2.foo, Decl(anyAssignableToEveryType2.ts, 9, 24))
+>foo : Symbol(foo, Decl(anyAssignableToEveryType2.ts, 9, 24))
 }
 
 
@@= skipped -11, +11 lines =@@
 >x : Symbol(x, Decl(anyAssignableToEveryType2.ts, 15, 5))
 
     foo: any;
->foo : Symbol(I3.foo, Decl(anyAssignableToEveryType2.ts, 15, 24))
+>foo : Symbol(foo, Decl(anyAssignableToEveryType2.ts, 15, 24))
 }
 
 
@@= skipped -11, +11 lines =@@
 >x : Symbol(x, Decl(anyAssignableToEveryType2.ts, 21, 5))
 
     foo: any;
->foo : Symbol(I4.foo, Decl(anyAssignableToEveryType2.ts, 21, 25))
+>foo : Symbol(foo, Decl(anyAssignableToEveryType2.ts, 21, 25))
 }
 
 
@@= skipped -12, +12 lines =@@
 >Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --))
 
     foo: any;
->foo : Symbol(I5.foo, Decl(anyAssignableToEveryType2.ts, 27, 22))
+>foo : Symbol(foo, Decl(anyAssignableToEveryType2.ts, 27, 22))
 }
 
 
@@= skipped -12, +12 lines =@@
 >RegExp : Symbol(RegExp, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 
     foo: any;
->foo : Symbol(I6.foo, Decl(anyAssignableToEveryType2.ts, 33, 24))
+>foo : Symbol(foo, Decl(anyAssignableToEveryType2.ts, 33, 24))
 }
 
 
@@= skipped -12, +12 lines =@@
 >bar : Symbol(bar, Decl(anyAssignableToEveryType2.ts, 39, 18))
 
     foo: any;
->foo : Symbol(I7.foo, Decl(anyAssignableToEveryType2.ts, 39, 33))
+>foo : Symbol(foo, Decl(anyAssignableToEveryType2.ts, 39, 33))
 }
 
 
@@= skipped -11, +11 lines =@@
 >x : Symbol(x, Decl(anyAssignableToEveryType2.ts, 45, 5))
 
     foo: any;
->foo : Symbol(I8.foo, Decl(anyAssignableToEveryType2.ts, 45, 26))
+>foo : Symbol(foo, Decl(anyAssignableToEveryType2.ts, 45, 26))
 }
 
 
@@= skipped -12, +12 lines =@@
 >I8 : Symbol(I8, Decl(anyAssignableToEveryType2.ts, 41, 1))
 
     foo: any;
->foo : Symbol(I9.foo, Decl(anyAssignableToEveryType2.ts, 51, 20))
+>foo : Symbol(foo, Decl(anyAssignableToEveryType2.ts, 51, 20))
 }
 
 class A { foo: number; }
 >A : Symbol(A, Decl(anyAssignableToEveryType2.ts, 53, 1))
->foo : Symbol(A.foo, Decl(anyAssignableToEveryType2.ts, 55, 9))
+>foo : Symbol(foo, Decl(anyAssignableToEveryType2.ts, 55, 9))
 
 interface I10 {
 >I10 : Symbol(I10, Decl(anyAssignableToEveryType2.ts, 55, 24))
@@= skipped -15, +15 lines =@@
 >A : Symbol(A, Decl(anyAssignableToEveryType2.ts, 53, 1))
 
     foo: any;
->foo : Symbol(I10.foo, Decl(anyAssignableToEveryType2.ts, 57, 19))
+>foo : Symbol(foo, Decl(anyAssignableToEveryType2.ts, 57, 19))
 }
 
 class A2<T> { foo: T; }
 >A2 : Symbol(A2, Decl(anyAssignableToEveryType2.ts, 59, 1))
 >T : Symbol(T, Decl(anyAssignableToEveryType2.ts, 61, 9))
->foo : Symbol(A2.foo, Decl(anyAssignableToEveryType2.ts, 61, 13))
+>foo : Symbol(foo, Decl(anyAssignableToEveryType2.ts, 61, 13))
 >T : Symbol(T, Decl(anyAssignableToEveryType2.ts, 61, 9))
 
 interface I11 {
@@= skipped -17, +17 lines =@@
 >A2 : Symbol(A2, Decl(anyAssignableToEveryType2.ts, 59, 1))
 
     foo: any;
->foo : Symbol(I11.foo, Decl(anyAssignableToEveryType2.ts, 63, 28))
+>foo : Symbol(foo, Decl(anyAssignableToEveryType2.ts, 63, 28))
 }
 
 
@@= skipped -12, +12 lines =@@
 >x : Symbol(x, Decl(anyAssignableToEveryType2.ts, 69, 18))
 
     foo: any;
->foo : Symbol(I12.foo, Decl(anyAssignableToEveryType2.ts, 69, 31))
+>foo : Symbol(foo, Decl(anyAssignableToEveryType2.ts, 69, 31))
 }
 
 
@@= skipped -15, +15 lines =@@
 >T : Symbol(T, Decl(anyAssignableToEveryType2.ts, 75, 18))
 
     foo: any;
->foo : Symbol(I13.foo, Decl(anyAssignableToEveryType2.ts, 75, 32))
+>foo : Symbol(foo, Decl(anyAssignableToEveryType2.ts, 75, 32))
 }
 
 
 enum E { A }
 >E : Symbol(E, Decl(anyAssignableToEveryType2.ts, 77, 1))
->A : Symbol(E.A, Decl(anyAssignableToEveryType2.ts, 80, 8))
+>A : Symbol(A, Decl(anyAssignableToEveryType2.ts, 80, 8))
 
 interface I14 {
 >I14 : Symbol(I14, Decl(anyAssignableToEveryType2.ts, 80, 12))
@@= skipped -16, +16 lines =@@
 >E : Symbol(E, Decl(anyAssignableToEveryType2.ts, 77, 1))
 
     foo: any;
->foo : Symbol(I14.foo, Decl(anyAssignableToEveryType2.ts, 82, 19))
+>foo : Symbol(foo, Decl(anyAssignableToEveryType2.ts, 82, 19))
 }
 
 
@@= skipped -21, +21 lines =@@
 >f : Symbol(f, Decl(anyAssignableToEveryType2.ts, 84, 1), Decl(anyAssignableToEveryType2.ts, 87, 16))
 
     foo: any;
->foo : Symbol(I15.foo, Decl(anyAssignableToEveryType2.ts, 92, 26))
+>foo : Symbol(foo, Decl(anyAssignableToEveryType2.ts, 92, 26))
 }
 
 
 class c { baz: string }
 >c : Symbol(c, Decl(anyAssignableToEveryType2.ts, 94, 1), Decl(anyAssignableToEveryType2.ts, 97, 23))
->baz : Symbol(c.baz, Decl(anyAssignableToEveryType2.ts, 97, 9))
+>baz : Symbol(baz, Decl(anyAssignableToEveryType2.ts, 97, 9))
 
 module c {
 >c : Symbol(c, Decl(anyAssignableToEveryType2.ts, 94, 1), Decl(anyAssignableToEveryType2.ts, 97, 23))
@@= skipped -22, +22 lines =@@
 >c : Symbol(c, Decl(anyAssignableToEveryType2.ts, 94, 1), Decl(anyAssignableToEveryType2.ts, 97, 23))
 
     foo: any;
->foo : Symbol(I16.foo, Decl(anyAssignableToEveryType2.ts, 102, 26))
+>foo : Symbol(foo, Decl(anyAssignableToEveryType2.ts, 102, 26))
 }
 
 
@@= skipped -13, +13 lines =@@
 >T : Symbol(T, Decl(anyAssignableToEveryType2.ts, 107, 14))
 
     foo: any;
->foo : Symbol(I17.foo, Decl(anyAssignableToEveryType2.ts, 108, 19))
+>foo : Symbol(foo, Decl(anyAssignableToEveryType2.ts, 108, 19))
 }
 
 
@@= skipped -15, +15 lines =@@
 >U : Symbol(U, Decl(anyAssignableToEveryType2.ts, 113, 16))
 
     foo: any;
->foo : Symbol(I18.foo, Decl(anyAssignableToEveryType2.ts, 114, 19))
+>foo : Symbol(foo, Decl(anyAssignableToEveryType2.ts, 114, 19))
 }
 
 
@@= skipped -12, +12 lines =@@
 >Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 
     foo: any;
->foo : Symbol(I19.foo, Decl(anyAssignableToEveryType2.ts, 120, 24))
+>foo : Symbol(foo, Decl(anyAssignableToEveryType2.ts, 120, 24))
 }
 
 
@@= skipped -11, +11 lines =@@
 >x : Symbol(x, Decl(anyAssignableToEveryType2.ts, 126, 5))
 
     foo: any;
->foo : Symbol(I20.foo, Decl(anyAssignableToEveryType2.ts, 126, 20))
+>foo : Symbol(foo, Decl(anyAssignableToEveryType2.ts, 126, 20))
 }
 
