--- old.mixinClassesAnnotated.symbols
+++ new.mixinClassesAnnotated.symbols
@@ -11,8 +11,8 @@
 >Base : Symbol(Base, Decl(mixinClassesAnnotated.ts, 0, 47))
 
     constructor(public x: number, public y: number) {}
->x : Symbol(Base.x, Decl(mixinClassesAnnotated.ts, 3, 16))
->y : Symbol(Base.y, Decl(mixinClassesAnnotated.ts, 3, 33))
+>x : Symbol(x, Decl(mixinClassesAnnotated.ts, 3, 16))
+>y : Symbol(y, Decl(mixinClassesAnnotated.ts, 3, 33))
 }
 
 class Derived extends Base {
@@ -22,7 +22,7 @@
     constructor(x: number, y: number, public z: number) {
 >x : Symbol(x, Decl(mixinClassesAnnotated.ts, 7, 16))
 >y : Symbol(y, Decl(mixinClassesAnnotated.ts, 7, 26))
->z : Symbol(Derived.z, Decl(mixinClassesAnnotated.ts, 7, 37))
+>z : Symbol(z, Decl(mixinClassesAnnotated.ts, 7, 37))
 
         super(x, y);
 >super : Symbol(Base, Decl(mixinClassesAnnotated.ts, 0, 47))
@@ -35,7 +35,7 @@
 >Printable : Symbol(Printable, Decl(mixinClassesAnnotated.ts, 10, 1), Decl(mixinClassesAnnotated.ts, 16, 5))
 
     print(): void;
->print : Symbol(Printable.print, Decl(mixinClassesAnnotated.ts, 12, 21))
+>print : Symbol(print, Decl(mixinClassesAnnotated.ts, 12, 21))
 }
 
 const Printable = <T extends Constructor<Base>>(superClass: T): Constructor<Printable> & { message: string } & T =>
@@ -54,19 +54,19 @@
 >superClass : Symbol(superClass, Decl(mixinClassesAnnotated.ts, 16, 48))
 
         static message = "hello";
->message : Symbol((Anonymous class).message, Decl(mixinClassesAnnotated.ts, 17, 30))
+>message : Symbol(message, Decl(mixinClassesAnnotated.ts, 17, 30))
 
         print() {
->print : Symbol((Anonymous class).print, Decl(mixinClassesAnnotated.ts, 18, 33))
+>print : Symbol(print, Decl(mixinClassesAnnotated.ts, 18, 33))
 
             const output = this.x + "," + this.y;
 >output : Symbol(output, Decl(mixinClassesAnnotated.ts, 20, 17))
->this.x : Symbol(Base.x, Decl(mixinClassesAnnotated.ts, 3, 16))
+>this.x : Symbol(x, Decl(mixinClassesAnnotated.ts, 3, 16))
 >this : Symbol((Anonymous class), Decl(mixinClassesAnnotated.ts, 16, 115))
->x : Symbol(Base.x, Decl(mixinClassesAnnotated.ts, 3, 16))
->this.y : Symbol(Base.y, Decl(mixinClassesAnnotated.ts, 3, 33))
+>x : Symbol(x, Decl(mixinClassesAnnotated.ts, 3, 16))
+>this.y : Symbol(y, Decl(mixinClassesAnnotated.ts, 3, 33))
 >this : Symbol((Anonymous class), Decl(mixinClassesAnnotated.ts, 16, 115))
->y : Symbol(Base.y, Decl(mixinClassesAnnotated.ts, 3, 33))
+>y : Symbol(y, Decl(mixinClassesAnnotated.ts, 3, 33))
         }
     }
 
@@ -74,7 +74,7 @@
 >Tagged : Symbol(Tagged, Decl(mixinClassesAnnotated.ts, 26, 1), Decl(mixinClassesAnnotated.ts, 22, 5))
 
     _tag: string;
->_tag : Symbol(Tagged._tag, Decl(mixinClassesAnnotated.ts, 24, 18))
+>_tag : Symbol(_tag, Decl(mixinClassesAnnotated.ts, 24, 18))
 }
 
 function Tagged<T extends Constructor<{}>>(superClass: T): Constructor<Tagged> & T {
@@ -92,7 +92,7 @@
 >superClass : Symbol(superClass, Decl(mixinClassesAnnotated.ts, 28, 43))
 
         _tag: string;
->_tag : Symbol(C._tag, Decl(mixinClassesAnnotated.ts, 29, 32))
+>_tag : Symbol(_tag, Decl(mixinClassesAnnotated.ts, 29, 32))
 
         constructor(...args: any[]) {
 >args : Symbol(args, Decl(mixinClassesAnnotated.ts, 31, 20))
@@ -102,9 +102,9 @@
 >args : Symbol(args, Decl(mixinClassesAnnotated.ts, 31, 20))
 
             this._tag = "hello";
->this._tag : Symbol(C._tag, Decl(mixinClassesAnnotated.ts, 29, 32))
+>this._tag : Symbol(_tag, Decl(mixinClassesAnnotated.ts, 29, 32))
 >this : Symbol(C, Decl(mixinClassesAnnotated.ts, 28, 84))
->_tag : Symbol(C._tag, Decl(mixinClassesAnnotated.ts, 29, 32))
+>_tag : Symbol(_tag, Decl(mixinClassesAnnotated.ts, 29, 32))
         }
     }
     return C;
@@ -135,14 +135,14 @@
 >Thing1 : Symbol(Thing1, Decl(mixinClassesAnnotated.ts, 39, 5))
 
     thing.x;
->thing.x : Symbol(Base.x, Decl(mixinClassesAnnotated.ts, 3, 16))
+>thing.x : Symbol(x, Decl(mixinClassesAnnotated.ts, 3, 16))
 >thing : Symbol(thing, Decl(mixinClassesAnnotated.ts, 44, 9))
->x : Symbol(Base.x, Decl(mixinClassesAnnotated.ts, 3, 16))
+>x : Symbol(x, Decl(mixinClassesAnnotated.ts, 3, 16))
 
     thing._tag;
->thing._tag : Symbol(Tagged._tag, Decl(mixinClassesAnnotated.ts, 24, 18))
+>thing._tag : Symbol(_tag, Decl(mixinClassesAnnotated.ts, 24, 18))
 >thing : Symbol(thing, Decl(mixinClassesAnnotated.ts, 44, 9))
->_tag : Symbol(Tagged._tag, Decl(mixinClassesAnnotated.ts, 24, 18))
+>_tag : Symbol(_tag, Decl(mixinClassesAnnotated.ts, 24, 18))
 }
 
 function f2() {
@@ -153,19 +153,19 @@
 >Thing2 : Symbol(Thing2, Decl(mixinClassesAnnotated.ts, 40, 5))
 
     thing.x;
->thing.x : Symbol(Base.x, Decl(mixinClassesAnnotated.ts, 3, 16))
+>thing.x : Symbol(x, Decl(mixinClassesAnnotated.ts, 3, 16))
 >thing : Symbol(thing, Decl(mixinClassesAnnotated.ts, 50, 9))
->x : Symbol(Base.x, Decl(mixinClassesAnnotated.ts, 3, 16))
+>x : Symbol(x, Decl(mixinClassesAnnotated.ts, 3, 16))
 
     thing._tag;
->thing._tag : Symbol(Tagged._tag, Decl(mixinClassesAnnotated.ts, 24, 18))
+>thing._tag : Symbol(_tag, Decl(mixinClassesAnnotated.ts, 24, 18))
 >thing : Symbol(thing, Decl(mixinClassesAnnotated.ts, 50, 9))
->_tag : Symbol(Tagged._tag, Decl(mixinClassesAnnotated.ts, 24, 18))
+>_tag : Symbol(_tag, Decl(mixinClassesAnnotated.ts, 24, 18))
 
     thing.print();
->thing.print : Symbol(Printable.print, Decl(mixinClassesAnnotated.ts, 12, 21))
+>thing.print : Symbol(print, Decl(mixinClassesAnnotated.ts, 12, 21))
 >thing : Symbol(thing, Decl(mixinClassesAnnotated.ts, 50, 9))
->print : Symbol(Printable.print, Decl(mixinClassesAnnotated.ts, 12, 21))
+>print : Symbol(print, Decl(mixinClassesAnnotated.ts, 12, 21))
 }
 
 class Thing3 extends Thing2 {
@@ -177,18 +177,18 @@
 
         super(10, 20, 30);
         this._tag = tag;
->this._tag : Symbol(Tagged._tag, Decl(mixinClassesAnnotated.ts, 24, 18))
+>this._tag : Symbol(_tag, Decl(mixinClassesAnnotated.ts, 24, 18))
 >this : Symbol(Thing3, Decl(mixinClassesAnnotated.ts, 54, 1))
->_tag : Symbol(Tagged._tag, Decl(mixinClassesAnnotated.ts, 24, 18))
+>_tag : Symbol(_tag, Decl(mixinClassesAnnotated.ts, 24, 18))
 >tag : Symbol(tag, Decl(mixinClassesAnnotated.ts, 57, 16))
     }
     test() {
->test : Symbol(Thing3.test, Decl(mixinClassesAnnotated.ts, 60, 5))
+>test : Symbol(test, Decl(mixinClassesAnnotated.ts, 60, 5))
 
         this.print();
->this.print : Symbol(Printable.print, Decl(mixinClassesAnnotated.ts, 12, 21))
+>this.print : Symbol(print, Decl(mixinClassesAnnotated.ts, 12, 21))
 >this : Symbol(Thing3, Decl(mixinClassesAnnotated.ts, 54, 1))
->print : Symbol(Printable.print, Decl(mixinClassesAnnotated.ts, 12, 21))
+>print : Symbol(print, Decl(mixinClassesAnnotated.ts, 12, 21))
     }
 }
 
