--- old.stringNamedPropertyDuplicates.symbols
+++ new.stringNamedPropertyDuplicates.symbols
@@= skipped -4, +4 lines =@@
 >C : Symbol(C, Decl(stringNamedPropertyDuplicates.ts, 0, 0))
 
     "a b": number;
->"a b" : Symbol(C["a b"], Decl(stringNamedPropertyDuplicates.ts, 0, 9), Decl(stringNamedPropertyDuplicates.ts, 1, 18))
+>"a b" : Symbol("a b", Decl(stringNamedPropertyDuplicates.ts, 0, 9), Decl(stringNamedPropertyDuplicates.ts, 1, 18))
 
     "a b": number;
->"a b" : Symbol(C["a b"], Decl(stringNamedPropertyDuplicates.ts, 0, 9), Decl(stringNamedPropertyDuplicates.ts, 1, 18))
+>"a b" : Symbol("a b", Decl(stringNamedPropertyDuplicates.ts, 0, 9), Decl(stringNamedPropertyDuplicates.ts, 1, 18))
 
     static "c d": number;
->"c d" : Symbol(C["c d"], Decl(stringNamedPropertyDuplicates.ts, 2, 18), Decl(stringNamedPropertyDuplicates.ts, 3, 25))
+>"c d" : Symbol("c d", Decl(stringNamedPropertyDuplicates.ts, 2, 18), Decl(stringNamedPropertyDuplicates.ts, 3, 25))
 
     static "c d": number;
->"c d" : Symbol(C["c d"], Decl(stringNamedPropertyDuplicates.ts, 2, 18), Decl(stringNamedPropertyDuplicates.ts, 3, 25))
+>"c d" : Symbol("c d", Decl(stringNamedPropertyDuplicates.ts, 2, 18), Decl(stringNamedPropertyDuplicates.ts, 3, 25))
 }
 
 interface I {
 >I : Symbol(I, Decl(stringNamedPropertyDuplicates.ts, 5, 1))
 
     "a b": number;
->"a b" : Symbol(I["a b"], Decl(stringNamedPropertyDuplicates.ts, 7, 13), Decl(stringNamedPropertyDuplicates.ts, 8, 18))
+>"a b" : Symbol("a b", Decl(stringNamedPropertyDuplicates.ts, 7, 13), Decl(stringNamedPropertyDuplicates.ts, 8, 18))
 
     "a b": number;
->"a b" : Symbol(I["a b"], Decl(stringNamedPropertyDuplicates.ts, 7, 13), Decl(stringNamedPropertyDuplicates.ts, 8, 18))
+>"a b" : Symbol("a b", Decl(stringNamedPropertyDuplicates.ts, 7, 13), Decl(stringNamedPropertyDuplicates.ts, 8, 18))
 }
 
 var a: {
