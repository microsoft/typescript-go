--- old.genericCallWithGenericSignatureArguments3.errors.txt
+++ new.genericCallWithGenericSignatureArguments3.errors.txt
@@= skipped -0, +0 lines =@@
+genericCallWithGenericSignatureArguments3.ts(13,27): error TS2322: Type 'string' is not assignable to type 'null'.
 genericCallWithGenericSignatureArguments3.ts(32,19): error TS2345: Argument of type '(a1: (y: string) => string) => (n: Object) => 1' is not assignable to parameter of type '(x: (a: string) => boolean) => (n: Object) => 1'.
   Types of parameters 'a1' and 'x' are incompatible.
     Type '(a: string) => boolean' is not assignable to type '(y: string) => string'.
@@= skipped -5, +6 lines =@@
   Type 'number' is not assignable to type '(n: Object) => 1'.
 
 
-==== genericCallWithGenericSignatureArguments3.ts (2 errors) ====
+==== genericCallWithGenericSignatureArguments3.ts (3 errors) ====
     // When a function expression is inferentially typed (section 4.9.3) and a type assigned to a parameter in that expression references type parameters for which inferences are being made, 
     // the corresponding inferred type arguments to become fixed and no further candidate inferences are made for them.
     
@@= skipped -14, +14 lines =@@
     var r2 = foo('', (x: string) => '', (x: Object) => ''); // string => string
     var r3 = foo(null, (x: Object) => '', (x: string) => ''); // Object => Object
     var r4 = foo(null, (x) => '', (x) => ''); // any => any
+                              ~~
+!!! error TS2322: Type 'string' is not assignable to type 'null'.
+!!! related TS6502 genericCallWithGenericSignatureArguments3.ts:4:26: The expected type comes from the return type of this signature.
     var r5 = foo(new Object(), (x) => '', (x) => ''); // Object => Object
     
     enum E { A }
