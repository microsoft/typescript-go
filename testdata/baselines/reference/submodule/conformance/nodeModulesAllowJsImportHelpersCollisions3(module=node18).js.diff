--- old.nodeModulesAllowJsImportHelpersCollisions3(module=node18).js
+++ new.nodeModulesAllowJsImportHelpersCollisions3(module=node18).js
@@= skipped -30, +30 lines =@@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.baz = exports.foo = exports.default = void 0;
-var tslib_1 = require("tslib");
 // cjs format file
-var fs_1 = require("fs");
-Object.defineProperty(exports, "default", { enumerable: true, get: function () { return tslib_1.__importDefault(fs_1).default; } });
-var fs_2 = require("fs");
-Object.defineProperty(exports, "foo", { enumerable: true, get: function () { return tslib_1.__importDefault(fs_2).default; } });
-var fs_3 = require("fs");
+const fs_1 = require("fs");
+Object.defineProperty(exports, "default", { enumerable: true, get: function () { return fs_1.default; } });
+const fs_2 = require("fs");
+Object.defineProperty(exports, "foo", { enumerable: true, get: function () { return fs_2.default; } });
+const fs_3 = require("fs");
 Object.defineProperty(exports, "baz", { enumerable: true, get: function () { return fs_3.bar; } });
 //// [index.js]
-// esm format file
-export { default } from "fs";
-export { default as foo } from "fs";
-export { bar as baz } from "fs";
-
-
-//// [index.d.ts]
-export { default, default as foo, bar as baz } from "fs";
-//// [index.d.ts]
-export { default, default as foo, bar as baz } from "fs";
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.baz = exports.foo = exports.default = void 0;
+// esm format file
+const fs_1 = require("fs");
+Object.defineProperty(exports, "default", { enumerable: true, get: function () { return fs_1.default; } });
+const fs_2 = require("fs");
+Object.defineProperty(exports, "foo", { enumerable: true, get: function () { return fs_2.default; } });
+const fs_3 = require("fs");
+Object.defineProperty(exports, "baz", { enumerable: true, get: function () { return fs_3.bar; } });
+
+
+//// [index.d.ts]
+// cjs format file
+export { default } from "fs";
+export { default as foo } from "fs";
+export { bar as baz } from "fs";
+//// [index.d.ts]
+// esm format file
+export { default } from "fs";
+export { default as foo } from "fs";
+export { bar as baz } from "fs";