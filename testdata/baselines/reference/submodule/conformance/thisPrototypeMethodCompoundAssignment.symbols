//// [tests/cases/conformance/jsdoc/thisPrototypeMethodCompoundAssignment.ts] ////

=== thisPrototypeMethodCompoundAssignment.ts ===
Element.prototype.remove ??= function () {
>Element.prototype.remove : Symbol(remove, Decl(lib.dom.d.ts, --, --))
>Element.prototype : Symbol(prototype, Decl(lib.dom.d.ts, --, --))
>Element : Symbol(Element, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))
>prototype : Symbol(prototype, Decl(lib.dom.d.ts, --, --))
>remove : Symbol(remove, Decl(lib.dom.d.ts, --, --))

  this.parentNode?.removeChild(this);
>this.parentNode?.removeChild : Symbol(removeChild, Decl(lib.dom.d.ts, --, --))
>this.parentNode : Symbol(parentNode, Decl(lib.dom.d.ts, --, --))
>this : Symbol(Element, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))
>parentNode : Symbol(parentNode, Decl(lib.dom.d.ts, --, --))
>removeChild : Symbol(removeChild, Decl(lib.dom.d.ts, --, --))
>this : Symbol(Element, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))

};

