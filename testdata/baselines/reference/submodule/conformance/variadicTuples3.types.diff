--- old.variadicTuples3.types
+++ new.variadicTuples3.types
@@= skipped -4, +4 lines =@@
 
 function test1<T extends any[], P extends any[]>(): [...T, ...P] {
 >test1 : <T extends any[], P extends any[]>() => [...T, ...P]
->      : ^ ^^^^^^^^^     ^^ ^^^^^^^^^     ^^^^^^^            
+>T : T
+>P : P
 
   let x: any[] = [];
 >x : any[]
->  : ^^^^^
 >[] : never[]
->   : ^^^^^^^
 
   return x;
 >x : any[]
->  : ^^^^^
 }
 
 function test2<T extends any[], P extends any[]>(): [...T, ...P] {
 >test2 : <T extends any[], P extends any[]>() => [...T, ...P]
->      : ^ ^^^^^^^^^     ^^ ^^^^^^^^^     ^^^^^^^            
+>T : T
+>P : P
 
   let x: [any, any] = [null, null];
 >x : [any, any]
->  : ^^^^^^^^^^
 >[null, null] : [null, null]
->             : ^^^^^^^^^^^^
 
   return x;
 >x : [any, any]
->  : ^^^^^^^^^^
 }
 
 function test3<T extends any[], P extends any[]>(): [...T, ...P] {
 >test3 : <T extends any[], P extends any[]>() => [...T, ...P]
->      : ^ ^^^^^^^^^     ^^ ^^^^^^^^^     ^^^^^^^            
+>T : T
+>P : P
 
   let x: [any, any, any] = [null, null, null];
 >x : [any, any, any]
->  : ^^^^^^^^^^^^^^^
 >[null, null, null] : [null, null, null]
->                   : ^^^^^^^^^^^^^^^^^^
 
   return x;
 >x : [any, any, any]
->  : ^^^^^^^^^^^^^^^
 }
 
