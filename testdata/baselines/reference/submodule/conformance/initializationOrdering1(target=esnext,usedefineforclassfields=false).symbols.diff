--- old.initializationOrdering1(target=esnext,usedefineforclassfields=false).symbols
+++ new.initializationOrdering1(target=esnext,usedefineforclassfields=false).symbols
@@= skipped -4, +4 lines =@@
 >Helper : Symbol(Helper, Decl(initializationOrdering1.ts, 0, 0))
 
     create(): boolean {
->create : Symbol(Helper.create, Decl(initializationOrdering1.ts, 0, 14))
+>create : Symbol(create, Decl(initializationOrdering1.ts, 0, 14))
 
         return true
     }
@@= skipped -10, +10 lines =@@
 >Broken : Symbol(Broken, Decl(initializationOrdering1.ts, 4, 1))
 
     constructor(readonly facade: Helper) {
->facade : Symbol(Broken.facade, Decl(initializationOrdering1.ts, 7, 16))
+>facade : Symbol(facade, Decl(initializationOrdering1.ts, 7, 16))
 >Helper : Symbol(Helper, Decl(initializationOrdering1.ts, 0, 0))
 
         console.log(this.bug)
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
->this.bug : Symbol(Broken.bug, Decl(initializationOrdering1.ts, 9, 5))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
+>this.bug : Symbol(bug, Decl(initializationOrdering1.ts, 9, 5))
 >this : Symbol(Broken, Decl(initializationOrdering1.ts, 4, 1))
->bug : Symbol(Broken.bug, Decl(initializationOrdering1.ts, 9, 5))
+>bug : Symbol(bug, Decl(initializationOrdering1.ts, 9, 5))
     }
     bug = this.facade.create()
->bug : Symbol(Broken.bug, Decl(initializationOrdering1.ts, 9, 5))
->this.facade.create : Symbol(Helper.create, Decl(initializationOrdering1.ts, 0, 14))
->this.facade : Symbol(Broken.facade, Decl(initializationOrdering1.ts, 7, 16))
+>bug : Symbol(bug, Decl(initializationOrdering1.ts, 9, 5))
+>this.facade.create : Symbol(create, Decl(initializationOrdering1.ts, 0, 14))
+>this.facade : Symbol(facade, Decl(initializationOrdering1.ts, 7, 16))
 >this : Symbol(Broken, Decl(initializationOrdering1.ts, 4, 1))
->facade : Symbol(Broken.facade, Decl(initializationOrdering1.ts, 7, 16))
->create : Symbol(Helper.create, Decl(initializationOrdering1.ts, 0, 14))
+>facade : Symbol(facade, Decl(initializationOrdering1.ts, 7, 16))
+>create : Symbol(create, Decl(initializationOrdering1.ts, 0, 14))
 
 }
 
