//// [tests/cases/conformance/expressions/superPropertyAccess/superSymbolIndexedAccess2.ts] ////

=== superSymbolIndexedAccess2.ts ===
class Foo {
>Foo : Symbol(Foo, Decl(superSymbolIndexedAccess2.ts, 0, 0))

    [Symbol.isConcatSpreadable]() {
>[Symbol.isConcatSpreadable] : Symbol([Symbol.isConcatSpreadable], Decl(superSymbolIndexedAccess2.ts, 0, 11))

        return 0;
    }
}

class Bar extends Foo {
>Bar : Symbol(Bar, Decl(superSymbolIndexedAccess2.ts, 4, 1))
>Foo : Symbol(Foo, Decl(superSymbolIndexedAccess2.ts, 0, 0))

    [Symbol.isConcatSpreadable]() {
>[Symbol.isConcatSpreadable] : Symbol([Symbol.isConcatSpreadable], Decl(superSymbolIndexedAccess2.ts, 6, 23))

        return super[Symbol.isConcatSpreadable]();
>super : Symbol(Foo, Decl(superSymbolIndexedAccess2.ts, 0, 0))
    }
}
