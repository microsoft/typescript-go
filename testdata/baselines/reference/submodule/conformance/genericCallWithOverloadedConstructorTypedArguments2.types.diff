--- old.genericCallWithOverloadedConstructorTypedArguments2.types
+++ new.genericCallWithOverloadedConstructorTypedArguments2.types
@@= skipped -17, +17 lines =@@
     }
 
     function foo4(cb: typeof a) {
->foo4 : (cb: typeof a) => { new (x: boolean): boolean; new (x: string): string; }
+>foo4 : (cb: { new (x: boolean): boolean; new (x: string): string; }) => { new (x: boolean): boolean; new (x: string): string; }
 >cb : { new (x: boolean): boolean; new (x: string): string; }
->a : { new (x: boolean): boolean; new (x: string): string; }
 
         return cb;
 >cb : { new (x: boolean): boolean; new (x: string): string; }
@@= skipped -10, +9 lines =@@
 
     var b: { new <T, U>(x: T): U }
 >b : new <T, U>(x: T) => U
+>T : T
+>U : U
 >x : T
 
     var r3 = foo4(b); // ok
 >r3 : { new (x: boolean): boolean; new (x: string): string; }
 >foo4(b) : { new (x: boolean): boolean; new (x: string): string; }
->foo4 : (cb: typeof a) => { new (x: boolean): boolean; new (x: string): string; }
+>foo4 : (cb: { new (x: boolean): boolean; new (x: string): string; }) => { new (x: boolean): boolean; new (x: string): string; }
 >b : new <T, U>(x: T) => U
 }
 
@@= skipped -14, +16 lines =@@
 
     function foo5<T>(cb: { new(x: T): string; new(x: number): T }) {
 >foo5 : <T>(cb: { new (x: T): string; new (x: number): T; }) => { new (x: T): string; new (x: number): T; }
+>T : T
 >cb : { new (x: T): string; new (x: number): T; }
 >x : T
 >x : number
@@= skipped -10, +11 lines =@@
 
     var a: { new <T>(x: T): T };
 >a : new <T>(x: T) => T
+>T : T
 >x : T
 
     var r6 = foo5(a); // ok
@@= skipped -10, +11 lines =@@
 
     function foo6<T>(cb: { new(x: T): string; new(x: T, y?: T): string }) {
 >foo6 : <T>(cb: { new (x: T): string; new (x: T, y?: T): string; }) => { new (x: T): string; new (x: T, y?: T): string; }
+>T : T
 >cb : { new (x: T): string; new (x: T, y?: T): string; }
 >x : T
 >x : T
@@= skipped -11, +12 lines =@@
 
     var b: { new <T>(x: T, y: T): string };
 >b : new <T>(x: T, y: T) => string
+>T : T
 >x : T
 >y : T
 
@@= skipped -11, +12 lines =@@
 
     function foo7<T>(x:T, cb: { new(x: T): string; new(x: T, y?: T): string }) {
 >foo7 : <T>(x: T, cb: { new (x: T): string; new (x: T, y?: T): string; }) => { new (x: T): string; new (x: T, y?: T): string; }
+>T : T
 >x : T
 >cb : { new (x: T): string; new (x: T, y?: T): string; }
 >x : T
@@= skipped -19, +20 lines =@@
 
     var c: { new<T>(x: T): number; new<T>(x: number): T; }
 >c : { new <T>(x: T): number; new <T>(x: number): T; }
+>T : T
 >x : T
+>T : T
 >x : number
 
     var r14 = foo7(1, c); // ok
