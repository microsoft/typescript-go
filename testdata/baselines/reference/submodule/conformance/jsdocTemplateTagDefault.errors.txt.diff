--- old.jsdocTemplateTagDefault.errors.txt
+++ new.jsdocTemplateTagDefault.errors.txt
@@= skipped -0, +0 lines =@@
-file.js(9,20): error TS2322: Type 'number' is not assignable to type 'string'.
-file.js(22,34): error TS1005: '=' expected.
-file.js(27,35): error TS1110: Type expected.
-file.js(33,14): error TS2706: Required type parameters may not follow optional type parameters.
-file.js(38,17): error TS2744: Type parameter defaults can only reference previously declared type parameters.
-file.js(53,14): error TS2706: Required type parameters may not follow optional type parameters.
-file.js(60,17): error TS2744: Type parameter defaults can only reference previously declared type parameters.
+file.js(6,12): error TS2304: Cannot find name 'A'.
+file.js(8,12): error TS2304: Cannot find name 'A'.
+file.js(10,12): error TS2304: Cannot find name 'A'.
+file.js(12,12): error TS2304: Cannot find name 'A'.
 
 
-==== file.js (7 errors) ====
+==== file.js (4 errors) ====
     /**
      * @template {string | number} [T=string] - ok: defaults are permitted
      * @typedef {[T]} A
      */
     
     /** @type {A} */ // ok, default for `T` in `A` is `string`
+               ~
+!!! error TS2304: Cannot find name 'A'.
     const aDefault1 = [""];
     /** @type {A} */ // error: `number` is not assignable to string`
+               ~
+!!! error TS2304: Cannot find name 'A'.
     const aDefault2 = [0];
-                       ~
-!!! error TS2322: Type 'number' is not assignable to type 'string'.
     /** @type {A<string>} */ // ok, `T` is provided for `A`
+               ~
+!!! error TS2304: Cannot find name 'A'.
     const aString = [""];
     /** @type {A<number>} */ // ok, `T` is provided for `A`
+               ~
+!!! error TS2304: Cannot find name 'A'.
     const aNumber = [0];
     
     /**
@@= skipped -31, +34 lines =@@
     
     /**
      * @template {string | number} [T] - error: default requires an `=type`
-                                     ~
-!!! error TS1005: '=' expected.
      * @typedef {[T]} C
      */
     
     /**
      * @template {string | number} [T=] - error: default requires a `type`
-                                      ~
-!!! error TS1110: Type expected.
      * @typedef {[T]} D
      */
     
     /**
      * @template {string | number} [T=string]
      * @template U - error: Required type parameters cannot follow optional type parameters
-                 ~
-!!! error TS2706: Required type parameters may not follow optional type parameters.
      * @typedef {[T, U]} E
      */
     
     /**
      * @template [T=U] - error: Type parameter defaults can only reference previously declared type parameters.
-                    ~
-!!! error TS2744: Type parameter defaults can only reference previously declared type parameters.
      * @template [U=T]
      * @typedef {[T, U]} G
      */
@@= skipped -39, +31 lines =@@
      /**
      * @template {string | number} [T=string]
      * @template U - error: Required type parameters cannot follow optional type parameters
-                 ~
-!!! error TS2706: Required type parameters may not follow optional type parameters.
      * @param {T} a
      * @param {U} b
      */
@@= skipped -9, +7 lines =@@
     
     /**
      * @template [T=U] - error: Type parameter defaults can only reference previously declared type parameters.
-                    ~
-!!! error TS2744: Type parameter defaults can only reference previously declared type parameters.
      * @template [U=T]
      * @param {T} a
      * @param {U} b
