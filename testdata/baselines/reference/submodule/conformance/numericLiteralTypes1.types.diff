--- old.numericLiteralTypes1.types
+++ new.numericLiteralTypes1.types
@@= skipped -366, +366 lines =@@
 }
 
 function f15(x: 0 | false, y: 1 | "one") {
->f15 : (x: 0 | false, y: 1 | "one") => void
->x : false | 0
+>f15 : (x: 0 | false, y: "one" | 1) => void
+>x : 0 | false
 >false : false
->y : 1 | "one"
+>y : "one" | 1
 
     var a = x && y;
->a : false | 0
->x && y : false | 0
->x : false | 0
->y : 1 | "one"
+>a : 0 | false
+>x && y : 0 | false
+>x : 0 | false
+>y : "one" | 1
 
     var b = y && x;
->b : false | 0
->y && x : false | 0
->y : 1 | "one"
->x : false | 0
+>b : 0 | false
+>y && x : 0 | false
+>y : "one" | 1
+>x : 0 | false
 
     var c = x || y;
->c : 1 | "one"
->x || y : 1 | "one"
->x : false | 0
->y : 1 | "one"
+>c : "one" | 1
+>x || y : "one" | 1
+>x : 0 | false
+>y : "one" | 1
 
     var d = y || x;
->d : false | 0 | 1 | "one"
->y || x : false | 0 | 1 | "one"
->y : 1 | "one"
->x : false | 0
+>d : "one" | 0 | 1 | false
+>y || x : "one" | 0 | 1 | false
+>y : "one" | 1
+>x : 0 | false
 
     var e = !x;
 >e : boolean
 >!x : true
->x : false | 0
+>x : 0 | false
 
     var f = !y;
 >f : boolean
 >!y : boolean
->y : 1 | "one"
+>y : "one" | 1
 }
 
 type Item =
