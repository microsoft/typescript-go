--- old.typeFromPropertyAssignment28.types
+++ new.typeFromPropertyAssignment28.types
@@= skipped -3, +3 lines =@@
 // mixed prototype-assignment+class declaration
 class C { constructor() { this.p = 1; } }
 >C : C
->  : ^
 >this.p = 1 : 1
->           : ^
 >this.p : any
->       : ^^^
 >this : this
->     : ^^^^
 >p : any
->  : ^^^
 >1 : 1
->  : ^
 
 // Property assignment does nothing.
 // You have to use Object.defineProperty(C, "prototype", { q: 2 })
@@= skipped -18, +12 lines =@@
 // (Object.defineProperty isn't recognised as a JS special assignment right now.)
 C.prototype = { q: 2 };
 >C.prototype = { q: 2 } : { q: number; }
->                       : ^^^^^^^^^^^^^^
 >C.prototype : C
->            : ^
 >C : typeof C
->  : ^^^^^^^^
 >prototype : C
->          : ^
 >{ q: 2 } : { q: number; }
->         : ^^^^^^^^^^^^^^
 >q : number
->  : ^^^^^^
 >2 : 2
->  : ^
 
 const c = new C()
 >c : C
->  : ^
 >new C() : C
->        : ^
 >C : typeof C
->  : ^^^^^^^^
 
 c.p
->c.p : number
->    : ^^^^^^
+>c.p : any
 >c : C
->  : ^
->p : number
->  : ^^^^^^
+>p : any
 
 c.q
 >c.q : any
->    : ^^^
 >c : C
->  : ^
 >q : any
->  : ^^^
 
