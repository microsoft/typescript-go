--- old.importAttributes1(module=es2015).types
+++ new.importAttributes1(module=es2015).types
@@= skipped -64, +64 lines =@@

 === 3.ts ===
 const a = import('./0')
->a : Promise<typeof import("0")>
->import('./0') : Promise<typeof import("0")>
+>a : Promise<typeof import("./0")>
+>import('./0') : Promise<typeof import("./0")>
 >'./0' : "./0"

 const b = import('./0', { with: { type: "json" } })
->b : Promise<typeof import("0")>
->import('./0', { with: { type: "json" } }) : Promise<typeof import("0")>
+>b : Promise<typeof import("./0")>
+>import('./0', { with: { type: "json" } }) : Promise<typeof import("./0")>
 >'./0' : "./0"
 >{ with: { type: "json" } } : { with: { type: string; }; }
 >with : { type: string; }
@@= skipped -15, +15 lines =@@
 >"json" : "json"

 const c = import('./0', { with: { type: "json", ttype: "typo" } })
->c : Promise<typeof import("0")>
->import('./0', { with: { type: "json", ttype: "typo" } }) : Promise<typeof import("0")>
+>c : Promise<typeof import("./0")>
+>import('./0', { with: { type: "json", ttype: "typo" } }) : Promise<typeof import("./0")>
 >'./0' : "./0"
 >{ with: { type: "json", ttype: "typo" } } : { with: { type: string; ttype: string; }; }
 >with : { type: string; ttype: string; }
@@= skipped -12, +12 lines =@@
 >"typo" : "typo"

 const d = import('./0', { with: {} })
->d : Promise<typeof import("0")>
->import('./0', { with: {} }) : Promise<typeof import("0")>
+>d : Promise<typeof import("./0")>
+>import('./0', { with: {} }) : Promise<typeof import("./0")>
 >'./0' : "./0"
 >{ with: {} } : { with: {}; }
 >with : {}
 >{} : {}

 const dd = import('./0', {})
->dd : Promise<typeof import("0")>
->import('./0', {}) : Promise<typeof import("0")>
+>dd : Promise<typeof import("./0")>
+>import('./0', {}) : Promise<typeof import("./0")>
 >'./0' : "./0"
 >{} : {}

@@= skipped -17, +17 lines =@@
 >foo : () => any

 const e = import('./0', foo())
->e : Promise<typeof import("0")>
->import('./0', foo()) : Promise<typeof import("0")>
+>e : Promise<typeof import("./0")>
+>import('./0', foo()) : Promise<typeof import("./0")>
 >'./0' : "./0"
 >foo() : any
 >foo : () => any
@@= skipped -11, +11 lines =@@
 >import() : Promise<any>

 const g = import('./0', {}, {})
->g : Promise<typeof import("0")>
->import('./0', {}, {}) : Promise<typeof import("0")>
+>g : Promise<typeof import("./0")>
+>import('./0', {}, {}) : Promise<typeof import("./0")>
 >'./0' : "./0"
 >{} : {}
 >{} : {}

 const h = import('./0', { with: { type: "json" }},)
->h : Promise<typeof import("0")>
->import('./0', { with: { type: "json" }},) : Promise<typeof import("0")>
+>h : Promise<typeof import("./0")>
+>import('./0', { with: { type: "json" }},) : Promise<typeof import("./0")>
 >'./0' : "./0"
 >{ with: { type: "json" }} : { with: { type: string; }; }
 >with : { type: string; }