--- old.instanceMemberAssignsToClassPrototype.symbols
+++ new.instanceMemberAssignsToClassPrototype.symbols
@@= skipped -4, +4 lines =@@
 >C : Symbol(C, Decl(instanceMemberAssignsToClassPrototype.ts, 0, 0))
 
     foo() {
->foo : Symbol(C.foo, Decl(instanceMemberAssignsToClassPrototype.ts, 0, 9))
+>foo : Symbol(foo, Decl(instanceMemberAssignsToClassPrototype.ts, 0, 9))
 
         C.prototype.foo = () => { }
->C.prototype.foo : Symbol(C.foo, Decl(instanceMemberAssignsToClassPrototype.ts, 0, 9))
->C.prototype : Symbol(C.prototype)
+>C.prototype.foo : Symbol(foo, Decl(instanceMemberAssignsToClassPrototype.ts, 0, 9))
+>C.prototype : Symbol(prototype)
 >C : Symbol(C, Decl(instanceMemberAssignsToClassPrototype.ts, 0, 0))
->prototype : Symbol(C.prototype)
->foo : Symbol(C.foo, Decl(instanceMemberAssignsToClassPrototype.ts, 0, 9))
+>prototype : Symbol(prototype)
+>foo : Symbol(foo, Decl(instanceMemberAssignsToClassPrototype.ts, 0, 9))
     }
 
     bar(x: number): number {
->bar : Symbol(C.bar, Decl(instanceMemberAssignsToClassPrototype.ts, 3, 5))
+>bar : Symbol(bar, Decl(instanceMemberAssignsToClassPrototype.ts, 3, 5))
 >x : Symbol(x, Decl(instanceMemberAssignsToClassPrototype.ts, 5, 8))
 
         C.prototype.bar = () => { } // error
->C.prototype.bar : Symbol(C.bar, Decl(instanceMemberAssignsToClassPrototype.ts, 3, 5))
->C.prototype : Symbol(C.prototype)
+>C.prototype.bar : Symbol(bar, Decl(instanceMemberAssignsToClassPrototype.ts, 3, 5))
+>C.prototype : Symbol(prototype)
 >C : Symbol(C, Decl(instanceMemberAssignsToClassPrototype.ts, 0, 0))
->prototype : Symbol(C.prototype)
->bar : Symbol(C.bar, Decl(instanceMemberAssignsToClassPrototype.ts, 3, 5))
+>prototype : Symbol(prototype)
+>bar : Symbol(bar, Decl(instanceMemberAssignsToClassPrototype.ts, 3, 5))
 
         C.prototype.bar = (x) => x; // ok
->C.prototype.bar : Symbol(C.bar, Decl(instanceMemberAssignsToClassPrototype.ts, 3, 5))
->C.prototype : Symbol(C.prototype)
+>C.prototype.bar : Symbol(bar, Decl(instanceMemberAssignsToClassPrototype.ts, 3, 5))
+>C.prototype : Symbol(prototype)
 >C : Symbol(C, Decl(instanceMemberAssignsToClassPrototype.ts, 0, 0))
->prototype : Symbol(C.prototype)
->bar : Symbol(C.bar, Decl(instanceMemberAssignsToClassPrototype.ts, 3, 5))
+>prototype : Symbol(prototype)
+>bar : Symbol(bar, Decl(instanceMemberAssignsToClassPrototype.ts, 3, 5))
 >x : Symbol(x, Decl(instanceMemberAssignsToClassPrototype.ts, 7, 27))
 >x : Symbol(x, Decl(instanceMemberAssignsToClassPrototype.ts, 7, 27))
 
         C.prototype.bar = (x: number) => 1; // ok
->C.prototype.bar : Symbol(C.bar, Decl(instanceMemberAssignsToClassPrototype.ts, 3, 5))
->C.prototype : Symbol(C.prototype)
+>C.prototype.bar : Symbol(bar, Decl(instanceMemberAssignsToClassPrototype.ts, 3, 5))
+>C.prototype : Symbol(prototype)
 >C : Symbol(C, Decl(instanceMemberAssignsToClassPrototype.ts, 0, 0))
->prototype : Symbol(C.prototype)
->bar : Symbol(C.bar, Decl(instanceMemberAssignsToClassPrototype.ts, 3, 5))
+>prototype : Symbol(prototype)
+>bar : Symbol(bar, Decl(instanceMemberAssignsToClassPrototype.ts, 3, 5))
 >x : Symbol(x, Decl(instanceMemberAssignsToClassPrototype.ts, 8, 27))
 
         return 1;
