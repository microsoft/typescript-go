--- old.usingDeclarationsWithESClassDecorators.10(module=system,target=es5).js
+++ new.usingDeclarationsWithESClassDecorators.10(module=system,target=es5).js
@@= skipped -12, +12 lines =@@


 //// [usingDeclarationsWithESClassDecorators.10.js]
-System.register([], function (exports_1, context_1) {
-    "use strict";
-    var default_1, after, env_1;
-    var __moduleName = context_1 && context_1.id;
-    return {
-        setters: [],
-        execute: function () {
-            default_1 = (() => {
-                let default_1 = (() => {
-                    let _classDecorators = [dec];
-                    let _classDescriptor;
-                    let _classExtraInitializers = [];
-                    let _classThis;
-                    var default_1 = _classThis = class {
-                    };
-                    __setFunctionName(_classThis, "default");
-                    (() => {
-                        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
-                        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
-                        default_1 = _classThis = _classDescriptor.value;
-                        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
-                        __runInitializers(_classThis, _classExtraInitializers);
-                    })();
-                    return default_1 = _classThis;
-                })();
-                return default_1;
-            })();
-            exports_1("default", default_1);
-            env_1 = { stack: [], error: void 0, hasError: false };
-            try {
-                after = __addDisposableResource(env_1, null, false);
-            }
-            catch (e_1) {
-                env_1.error = e_1;
-                env_1.hasError = true;
-            }
-            finally {
-                __disposeResources(env_1);
-            }
-        }
-    };
-});
+"use strict";
+var after;
+Object.defineProperty(exports, "__esModule", { value: true });
+@dec
+class default_1 {
+}
+exports.default = default_1;
+const env_1 = { stack: [], error: void 0, hasError: false };
+try {
+    after = __addDisposableResource(env_1, null, false);
+}
+catch (e_1) {
+    env_1.error = e_1;
+    env_1.hasError = true;
+}
+finally {
+    __disposeResources(env_1);
+}