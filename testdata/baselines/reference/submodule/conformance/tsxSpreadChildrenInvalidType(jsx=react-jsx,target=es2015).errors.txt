error TS2318: Cannot find global type 'Array'.
error TS2318: Cannot find global type 'Function'.
error TS2318: Cannot find global type 'IArguments'.
error TS2318: Cannot find global type 'RegExp'.
error TS2318: Cannot find global type 'String'.
error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
error TS2552: Cannot find name 'Number'. Did you mean 'number'?
error TS2552: Cannot find name 'Object'. Did you mean 'object'?


!!! error TS2318: Cannot find global type 'Array'.
!!! error TS2318: Cannot find global type 'Function'.
!!! error TS2318: Cannot find global type 'IArguments'.
!!! error TS2318: Cannot find global type 'RegExp'.
!!! error TS2318: Cannot find global type 'String'.
!!! error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
!!! error TS2552: Cannot find name 'Number'. Did you mean 'number'?
!!! error TS2552: Cannot find name 'Object'. Did you mean 'object'?
==== tsxSpreadChildrenInvalidType.tsx (0 errors) ====
    declare module JSX {
    	interface Element { }
    	interface IntrinsicElements {
    		[s: string]: any;
    	}
    }
    declare var React: any;
    
    interface TodoProp {
        id: number;
        todo: string;
    }
    interface TodoListProps {
        todos: TodoProp[];
    }
    function Todo(prop: { key: number, todo: string }) {
        return <div>{prop.key.toString() + prop.todo}</div>;
    }
    function TodoList({ todos }: TodoListProps) {
        return <div>
            {...<Todo key={todos[0].id} todo={todos[0].todo} />}
        </div>;
    }
    function TodoListNoError({ todos }: TodoListProps) {
        // any is not checked
        return <div>
            {...(<Todo key={todos[0].id} todo={todos[0].todo} /> as any)}
        </div>;
    }
    let x: TodoListProps;
        <TodoList {...x}/>
    