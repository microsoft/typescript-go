--- old.getSetAccessorContextualTyping.symbols
+++ new.getSetAccessorContextualTyping.symbols
@@= skipped -8, +8 lines =@@
 >C : Symbol(C, Decl(getSetAccessorContextualTyping.ts, 0, 0))
 
     set X(x: number) { }
->X : Symbol(C.X, Decl(getSetAccessorContextualTyping.ts, 4, 9), Decl(getSetAccessorContextualTyping.ts, 5, 24))
+>X : Symbol(X, Decl(getSetAccessorContextualTyping.ts, 4, 9), Decl(getSetAccessorContextualTyping.ts, 5, 24))
 >x : Symbol(x, Decl(getSetAccessorContextualTyping.ts, 5, 10))
 
     get X() {
->X : Symbol(C.X, Decl(getSetAccessorContextualTyping.ts, 4, 9), Decl(getSetAccessorContextualTyping.ts, 5, 24))
+>X : Symbol(X, Decl(getSetAccessorContextualTyping.ts, 4, 9), Decl(getSetAccessorContextualTyping.ts, 5, 24))
 
         return "string";  // Error; get contextual type by set accessor parameter type annotation
     }
 
     set Y(y) { }
->Y : Symbol(C.Y, Decl(getSetAccessorContextualTyping.ts, 8, 5), Decl(getSetAccessorContextualTyping.ts, 10, 16))
+>Y : Symbol(Y, Decl(getSetAccessorContextualTyping.ts, 8, 5), Decl(getSetAccessorContextualTyping.ts, 10, 16))
 >y : Symbol(y, Decl(getSetAccessorContextualTyping.ts, 10, 10))
 
     get Y() {
->Y : Symbol(C.Y, Decl(getSetAccessorContextualTyping.ts, 8, 5), Decl(getSetAccessorContextualTyping.ts, 10, 16))
+>Y : Symbol(Y, Decl(getSetAccessorContextualTyping.ts, 8, 5), Decl(getSetAccessorContextualTyping.ts, 10, 16))
 
         return true;
     }
 
     set W(w) { }
->W : Symbol(C.W, Decl(getSetAccessorContextualTyping.ts, 13, 5), Decl(getSetAccessorContextualTyping.ts, 15, 16))
+>W : Symbol(W, Decl(getSetAccessorContextualTyping.ts, 13, 5), Decl(getSetAccessorContextualTyping.ts, 15, 16))
 >w : Symbol(w, Decl(getSetAccessorContextualTyping.ts, 15, 10))
 
     get W(): boolean {
->W : Symbol(C.W, Decl(getSetAccessorContextualTyping.ts, 13, 5), Decl(getSetAccessorContextualTyping.ts, 15, 16))
+>W : Symbol(W, Decl(getSetAccessorContextualTyping.ts, 13, 5), Decl(getSetAccessorContextualTyping.ts, 15, 16))
 
         return true;
     }
 
     set Z(z: number) { }
->Z : Symbol(C.Z, Decl(getSetAccessorContextualTyping.ts, 18, 5), Decl(getSetAccessorContextualTyping.ts, 20, 24))
+>Z : Symbol(Z, Decl(getSetAccessorContextualTyping.ts, 18, 5), Decl(getSetAccessorContextualTyping.ts, 20, 24))
 >z : Symbol(z, Decl(getSetAccessorContextualTyping.ts, 20, 10))
 
     get Z() {
->Z : Symbol(C.Z, Decl(getSetAccessorContextualTyping.ts, 18, 5), Decl(getSetAccessorContextualTyping.ts, 20, 24))
+>Z : Symbol(Z, Decl(getSetAccessorContextualTyping.ts, 18, 5), Decl(getSetAccessorContextualTyping.ts, 20, 24))
 
         return 1;
     }
