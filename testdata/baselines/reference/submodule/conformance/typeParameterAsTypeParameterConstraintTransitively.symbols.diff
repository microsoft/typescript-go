--- old.typeParameterAsTypeParameterConstraintTransitively.symbols
+++ new.typeParameterAsTypeParameterConstraintTransitively.symbols
@@= skipped -5, +5 lines =@@
 
 interface A { foo: number }
 >A : Symbol(A, Decl(typeParameterAsTypeParameterConstraintTransitively.ts, 0, 0))
->foo : Symbol(A.foo, Decl(typeParameterAsTypeParameterConstraintTransitively.ts, 3, 13))
+>foo : Symbol(foo, Decl(typeParameterAsTypeParameterConstraintTransitively.ts, 3, 13))
 
 interface B extends A { bar: string; }
 >B : Symbol(B, Decl(typeParameterAsTypeParameterConstraintTransitively.ts, 3, 27))
 >A : Symbol(A, Decl(typeParameterAsTypeParameterConstraintTransitively.ts, 0, 0))
->bar : Symbol(B.bar, Decl(typeParameterAsTypeParameterConstraintTransitively.ts, 4, 23))
+>bar : Symbol(bar, Decl(typeParameterAsTypeParameterConstraintTransitively.ts, 4, 23))
 
 interface C extends B { baz: boolean; }
 >C : Symbol(C, Decl(typeParameterAsTypeParameterConstraintTransitively.ts, 4, 38))
 >B : Symbol(B, Decl(typeParameterAsTypeParameterConstraintTransitively.ts, 3, 27))
->baz : Symbol(C.baz, Decl(typeParameterAsTypeParameterConstraintTransitively.ts, 5, 23))
+>baz : Symbol(baz, Decl(typeParameterAsTypeParameterConstraintTransitively.ts, 5, 23))
 
 var a: A;
 >a : Symbol(a, Decl(typeParameterAsTypeParameterConstraintTransitively.ts, 6, 3))
