--- old.override2.symbols
+++ new.override2.symbols
@@= skipped -4, +4 lines =@@
 >AB : Symbol(AB, Decl(override2.ts, 0, 0))
 
     abstract foo(v: string): void;
->foo : Symbol(AB.foo, Decl(override2.ts, 0, 19))
+>foo : Symbol(foo, Decl(override2.ts, 0, 19))
 >v : Symbol(v, Decl(override2.ts, 1, 17))
 
     abstract bar(v: string): void;
->bar : Symbol(AB.bar, Decl(override2.ts, 1, 34))
+>bar : Symbol(bar, Decl(override2.ts, 1, 34))
 >v : Symbol(v, Decl(override2.ts, 3, 17))
 
     abstract baz(v: string): void;
->baz : Symbol(AB.baz, Decl(override2.ts, 3, 34))
+>baz : Symbol(baz, Decl(override2.ts, 3, 34))
 >v : Symbol(v, Decl(override2.ts, 4, 17))
 }
 
@@= skipped -23, +23 lines =@@
 >AB : Symbol(AB, Decl(override2.ts, 0, 0))
 
     abstract foo(v: ''): void // need override?
->foo : Symbol(AD2.foo, Decl(override2.ts, 11, 31))
+>foo : Symbol(foo, Decl(override2.ts, 11, 31))
 >v : Symbol(v, Decl(override2.ts, 12, 17))
 }
 
@@= skipped -9, +9 lines =@@
 >AB : Symbol(AB, Decl(override2.ts, 0, 0))
 
     override foo(v: ''): void { } // need override?
->foo : Symbol(AD3.foo, Decl(override2.ts, 15, 31))
+>foo : Symbol(foo, Decl(override2.ts, 15, 31))
 >v : Symbol(v, Decl(override2.ts, 16, 17))
 
     abstract bar(): void;
->bar : Symbol(AD3.bar, Decl(override2.ts, 16, 33))
+>bar : Symbol(bar, Decl(override2.ts, 16, 33))
 
     baz(): void { }
->baz : Symbol(AD3.baz, Decl(override2.ts, 17, 25))
+>baz : Symbol(baz, Decl(override2.ts, 17, 25))
 }
 
 class D4 extends AB {
@@= skipped -15, +15 lines =@@
 >AB : Symbol(AB, Decl(override2.ts, 0, 0))
 
     override foo(v: ''): void {}
->foo : Symbol(D4.foo, Decl(override2.ts, 21, 21))
+>foo : Symbol(foo, Decl(override2.ts, 21, 21))
 >v : Symbol(v, Decl(override2.ts, 22, 17))
 
     override bar(v: ''): void {}
->bar : Symbol(D4.bar, Decl(override2.ts, 22, 32))
+>bar : Symbol(bar, Decl(override2.ts, 22, 32))
 >v : Symbol(v, Decl(override2.ts, 23, 17))
 
     baz(): void { }
->baz : Symbol(D4.baz, Decl(override2.ts, 23, 32))
+>baz : Symbol(baz, Decl(override2.ts, 23, 32))
 }
