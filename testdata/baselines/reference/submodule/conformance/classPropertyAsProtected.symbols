//// [tests/cases/conformance/classes/members/accessibility/classPropertyAsProtected.ts] ////

=== classPropertyAsProtected.ts ===
class C {
>C : Symbol(C, Decl(classPropertyAsProtected.ts, 0, 0))

    protected x: string;
>x : Symbol(x, Decl(classPropertyAsProtected.ts, 0, 9))

    protected get y() { return null; }
>y : Symbol(y, Decl(classPropertyAsProtected.ts, 1, 24), Decl(classPropertyAsProtected.ts, 2, 38))

    protected set y(x) { }
>y : Symbol(y, Decl(classPropertyAsProtected.ts, 1, 24), Decl(classPropertyAsProtected.ts, 2, 38))
>x : Symbol(x, Decl(classPropertyAsProtected.ts, 3, 20))

    protected foo() { }
>foo : Symbol(foo, Decl(classPropertyAsProtected.ts, 3, 26))

    protected static a: string;
>a : Symbol(a, Decl(classPropertyAsProtected.ts, 4, 23))

    protected static get b() { return null; }
>b : Symbol(b, Decl(classPropertyAsProtected.ts, 6, 31), Decl(classPropertyAsProtected.ts, 7, 45))

    protected static set b(x) { }
>b : Symbol(b, Decl(classPropertyAsProtected.ts, 6, 31), Decl(classPropertyAsProtected.ts, 7, 45))
>x : Symbol(x, Decl(classPropertyAsProtected.ts, 8, 27))

    protected static foo() { }
>foo : Symbol(foo, Decl(classPropertyAsProtected.ts, 8, 33))
}

var c: C;
>c : Symbol(c, Decl(classPropertyAsProtected.ts, 12, 3))
>C : Symbol(C, Decl(classPropertyAsProtected.ts, 0, 0))

// all errors
c.x;
>c.x : Symbol(x, Decl(classPropertyAsProtected.ts, 0, 9))
>c : Symbol(c, Decl(classPropertyAsProtected.ts, 12, 3))
>x : Symbol(x, Decl(classPropertyAsProtected.ts, 0, 9))

c.y;
>c.y : Symbol(y, Decl(classPropertyAsProtected.ts, 1, 24), Decl(classPropertyAsProtected.ts, 2, 38))
>c : Symbol(c, Decl(classPropertyAsProtected.ts, 12, 3))
>y : Symbol(y, Decl(classPropertyAsProtected.ts, 1, 24), Decl(classPropertyAsProtected.ts, 2, 38))

c.y = 1;
>c.y : Symbol(y, Decl(classPropertyAsProtected.ts, 1, 24), Decl(classPropertyAsProtected.ts, 2, 38))
>c : Symbol(c, Decl(classPropertyAsProtected.ts, 12, 3))
>y : Symbol(y, Decl(classPropertyAsProtected.ts, 1, 24), Decl(classPropertyAsProtected.ts, 2, 38))

c.foo();
>c.foo : Symbol(foo, Decl(classPropertyAsProtected.ts, 3, 26))
>c : Symbol(c, Decl(classPropertyAsProtected.ts, 12, 3))
>foo : Symbol(foo, Decl(classPropertyAsProtected.ts, 3, 26))

C.a;
>C.a : Symbol(a, Decl(classPropertyAsProtected.ts, 4, 23))
>C : Symbol(C, Decl(classPropertyAsProtected.ts, 0, 0))
>a : Symbol(a, Decl(classPropertyAsProtected.ts, 4, 23))

C.b();
>C.b : Symbol(b, Decl(classPropertyAsProtected.ts, 6, 31), Decl(classPropertyAsProtected.ts, 7, 45))
>C : Symbol(C, Decl(classPropertyAsProtected.ts, 0, 0))
>b : Symbol(b, Decl(classPropertyAsProtected.ts, 6, 31), Decl(classPropertyAsProtected.ts, 7, 45))

C.b = 1;
>C.b : Symbol(b, Decl(classPropertyAsProtected.ts, 6, 31), Decl(classPropertyAsProtected.ts, 7, 45))
>C : Symbol(C, Decl(classPropertyAsProtected.ts, 0, 0))
>b : Symbol(b, Decl(classPropertyAsProtected.ts, 6, 31), Decl(classPropertyAsProtected.ts, 7, 45))

C.foo();
>C.foo : Symbol(foo, Decl(classPropertyAsProtected.ts, 8, 33))
>C : Symbol(C, Decl(classPropertyAsProtected.ts, 0, 0))
>foo : Symbol(foo, Decl(classPropertyAsProtected.ts, 8, 33))

