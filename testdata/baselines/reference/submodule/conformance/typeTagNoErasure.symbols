//// [tests/cases/conformance/jsdoc/typeTagNoErasure.ts] ////

=== typeTagNoErasure.js ===
/** @template T @typedef {<T1 extends T>(data: T1) => T1} Test */
>T1 : Symbol(T1, Decl(typeTagNoErasure.js, 0, 27))
>T : Symbol(T)
>data : Symbol(data, Decl(typeTagNoErasure.js, 0, 41))
>T1 : Symbol(T1, Decl(typeTagNoErasure.js, 0, 27))
>T1 : Symbol(T1, Decl(typeTagNoErasure.js, 0, 27))

/** @type {Test<number>} */
const test = dibbity => dibbity
>test : Symbol(test, Decl(typeTagNoErasure.js, 3, 5))
>dibbity : Symbol(dibbity, Decl(typeTagNoErasure.js, 3, 12))
>dibbity : Symbol(dibbity, Decl(typeTagNoErasure.js, 3, 12))

test(1) // ok, T=1
>test : Symbol(test, Decl(typeTagNoErasure.js, 3, 5))

test('hi') // error, T=number
>test : Symbol(test, Decl(typeTagNoErasure.js, 3, 5))

