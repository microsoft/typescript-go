--- old.destructuringEvaluationOrder(target=es5).js
+++ new.destructuringEvaluationOrder(target=es5).js
@@= skipped -35, +35 lines =@@
     return t;
 };
 // https://github.com/microsoft/TypeScript/issues/39205
-var trace = [];
-var order = function (n) { return trace.push(n); };
+let trace = [];
+let order = (n) => trace.push(n);
 // order(0) should evaluate before order(1) because the first element is undefined
-var _a = [], _b = _a[0], _c = _b === void 0 ? order(0) : _b, _d = order(1), x = _c[_d];
+let [{ [order(1)]: x } = order(0)] = [];
 // order(0) should not evaluate because the first element is defined
-var _e = [{}], _f = _e[0], _g = _f === void 0 ? order(0) : _f, _h = order(1), y = _g[_h];
+let [{ [order(1)]: y } = order(0)] = [{}];
 // order(0) should evaluate first (destructuring of object literal {})
 // order(1) should evaluate next (initializer because property is undefined)
 // order(2) should evaluate last (evaluate object binding pattern from initializer)
-var _j = {}, _k = order(0), _l = _j[_k], _m = _l === void 0 ? order(1) : _l, _o = order(2), z = _m[_o], w = __rest(_j, [typeof _k === "symbol" ? _k : _k + ""]);
+let _a = {}, _b = order(0), _c = _a[_b], _d = _c === void 0 ? order(1) : _c, _e = order(2), z = _d[_e], w = __rest(_a, [typeof _b === "symbol" ? _b : _b + ""]);
 // https://github.com/microsoft/TypeScript/issues/39181
 // b = a must occur *after* 'a' has been assigned
-var _p = [{ x: 1 }], _q = _p[0], _r = _p[1], a = __rest(_q, []), b = _r === void 0 ? a : _r;
+let [_f, _g] = [{ x: 1 }], a = __rest(_f, []), b = _g === void 0 ? a : _g;