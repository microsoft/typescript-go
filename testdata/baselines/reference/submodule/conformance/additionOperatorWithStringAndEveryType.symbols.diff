--- old.additionOperatorWithStringAndEveryType.symbols
+++ new.additionOperatorWithStringAndEveryType.symbols
@@= skipped -2, +2 lines =@@
 === additionOperatorWithStringAndEveryType.ts ===
 enum E { a, b, c }
 >E : Symbol(E, Decl(additionOperatorWithStringAndEveryType.ts, 0, 0))
->a : Symbol(E.a, Decl(additionOperatorWithStringAndEveryType.ts, 0, 8))
->b : Symbol(E.b, Decl(additionOperatorWithStringAndEveryType.ts, 0, 11))
->c : Symbol(E.c, Decl(additionOperatorWithStringAndEveryType.ts, 0, 14))
+>a : Symbol(a, Decl(additionOperatorWithStringAndEveryType.ts, 0, 8))
+>b : Symbol(b, Decl(additionOperatorWithStringAndEveryType.ts, 0, 11))
+>c : Symbol(c, Decl(additionOperatorWithStringAndEveryType.ts, 0, 14))
 
 var a: any;
 >a : Symbol(a, Decl(additionOperatorWithStringAndEveryType.ts, 2, 3))
@@= skipped -112, +112 lines =@@
 var r16 = x + E.a;
 >r16 : Symbol(r16, Decl(additionOperatorWithStringAndEveryType.ts, 33, 3))
 >x : Symbol(x, Decl(additionOperatorWithStringAndEveryType.ts, 10, 3))
->E.a : Symbol(E.a, Decl(additionOperatorWithStringAndEveryType.ts, 0, 8))
+>E.a : Symbol(a, Decl(additionOperatorWithStringAndEveryType.ts, 0, 8))
 >E : Symbol(E, Decl(additionOperatorWithStringAndEveryType.ts, 0, 0))
->a : Symbol(E.a, Decl(additionOperatorWithStringAndEveryType.ts, 0, 8))
+>a : Symbol(a, Decl(additionOperatorWithStringAndEveryType.ts, 0, 8))
 
 var r17 = x + '';
 >r17 : Symbol(r17, Decl(additionOperatorWithStringAndEveryType.ts, 34, 3))
