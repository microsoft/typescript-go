error TS2318: Cannot find global type 'Array'.
error TS2318: Cannot find global type 'Function'.
error TS2318: Cannot find global type 'IArguments'.
error TS2318: Cannot find global type 'RegExp'.
error TS2318: Cannot find global type 'String'.
error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
error TS2552: Cannot find name 'Number'. Did you mean 'number'?
error TS2552: Cannot find name 'Object'. Did you mean 'object'?
unionAndIntersectionInference1.ts(13,13): error TS2304: Cannot find name 'Math'.
unionAndIntersectionInference1.ts(52,10): error TS2339: Property 'toUpperCase' does not exist on type 'string'.
unionAndIntersectionInference1.ts(80,29): error TS2583: Cannot find name 'Promise'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.
unionAndIntersectionInference1.ts(80,47): error TS2583: Cannot find name 'Promise'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.
unionAndIntersectionInference1.ts(95,38): error TS2304: Cannot find name 'Object'.


!!! error TS2318: Cannot find global type 'Array'.
!!! error TS2318: Cannot find global type 'Function'.
!!! error TS2318: Cannot find global type 'IArguments'.
!!! error TS2318: Cannot find global type 'RegExp'.
!!! error TS2318: Cannot find global type 'String'.
!!! error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
!!! error TS2552: Cannot find name 'Number'. Did you mean 'number'?
!!! error TS2552: Cannot find name 'Object'. Did you mean 'object'?
==== unionAndIntersectionInference1.ts (5 errors) ====
    // Repro from #2264
    
    interface Y { 'i am a very certain type': Y }
    var y: Y = <Y>undefined;
    function destructure<a, r>(
        something: a | Y,
        haveValue: (value: a) => r,
        haveY: (value: Y) => r
    ): r {
        return something === y ? haveY(y) : haveValue(<a>something);
    }
    
    var value = Math.random() > 0.5 ? 'hey!' : <Y>undefined;
                ~~~~
!!! error TS2304: Cannot find name 'Math'.
    
    var result = destructure(value, text => 'string', y => 'other one'); // text: string, y: Y
    
    // Repro from #4212
    
    function isVoid<a>(value: void | a): value is void {
        return undefined;
    }
    
    function isNonVoid<a>(value: void | a) : value is a {
        return undefined;
    }
    
    function foo1<a>(value: void|a): void {
        if (isVoid(value)) {
            value; // value is void
        } else {
            value; // value is a
        }
    }
    
    function baz1<a>(value: void|a): void {
          if (isNonVoid(value)) {
              value; // value is a
          } else {
              value; // value is void
          }
    }
    
    // Repro from #5417
    
    type Maybe<T> = T | void;
    
    function get<U>(x: U | void): U {
       return null; // just an example
    }
    
    let foo: Maybe<string>;
    get(foo).toUpperCase(); // Ok
             ~~~~~~~~~~~
!!! error TS2339: Property 'toUpperCase' does not exist on type 'string'.
    
    // Repro from #5456
    
    interface Man {
        walks: boolean;
    }
    
    interface Bear {
        roars: boolean;
    }
    
    interface Pig {
        oinks: boolean;
    }
    
    declare function pigify<T>(y: T & Bear): T & Pig;
    declare var mbp: Man & Bear;
    
    pigify(mbp).oinks; // OK, mbp is treated as Pig
    pigify(mbp).walks; // Ok, mbp is treated as Man
    
    // Repros from #29815
    
    interface ITest {
      name: 'test'
    }
    
    const createTestAsync = (): Promise<ITest> => Promise.resolve().then(() => ({ name: 'test' }))
                                ~~~~~~~
!!! error TS2583: Cannot find name 'Promise'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.
                                                  ~~~~~~~
!!! error TS2583: Cannot find name 'Promise'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.
    
    const createTest = (): ITest => {
      return { name: 'test' }
    }
    
    declare function f1<T, U>(x: T | U): T | U;
    declare function f2<T, U>(x: T, y: U): T | U;
    
    let x1: string = f1('a');
    let x2: string = f2('a', 'b');
    
    // Repro from #30442
    
    const func = <T>() => {};
    const assign = <T, U>(a: T, b: U) => Object.assign(a, b);
                                         ~~~~~~
!!! error TS2304: Cannot find name 'Object'.
    const res: (() => void) & { func: any } = assign(() => {}, { func });
    