--- old.restParametersOfNonArrayTypes.types
+++ new.restParametersOfNonArrayTypes.types
@@= skipped -13, +13 lines =@@
 >x : number
 
 var f2 = (...x: Date, ...y: boolean) => { }
->f2 : (...x: Date, ...y: boolean) => void
->(...x: Date, ...y: boolean) => { } : (...x: Date, ...y: boolean) => void
+>f2 : (x?: Date, ...y: boolean) => void
+>(...x: Date, ...y: boolean) => { } : (x?: Date, ...y: boolean) => void
 >x : Date
 >y : boolean
 
@@= skipped -14, +14 lines =@@
 }
 
 interface I {
+>I : I
+
     (...x: string);
 >x : string
 
     foo(...x: number, ...y: number);
->foo : (...x: number, ...y: number) => any
+>foo : (x?: number, ...y: number) => any
 >x : number
 >y : number
 }
 
 var a: {
->a : { (...x: string): any; foo(...x: string): any; }
+>a : { (...x: string): any; foo: (...x: string) => any; }
 
     (...x: string);
 >x : string
@@= skipped -21, +23 lines =@@
 }
 
 var b = {
->b : { foo(...x: string): void; a: (...x: number, ...y: Date) => void; b: (...x: string) => void; }
->{    foo(...x: string) { },    a: function foo(...x: number, ...y: Date) { },    b: (...x: string) => { }} : { foo(...x: string): void; a: (...x: number, ...y: Date) => void; b: (...x: string) => void; }
+>b : { foo: (...x: string) => void; a: (x?: number, ...y: Date) => void; b: (...x: string) => void; }
+>{    foo(...x: string) { },    a: function foo(...x: number, ...y: Date) { },    b: (...x: string) => { }} : { foo: (...x: string) => void; a: (x?: number, ...y: Date) => void; b: (...x: string) => void; }
 
     foo(...x: string) { },
 >foo : (...x: string) => void
 >x : string
 
     a: function foo(...x: number, ...y: Date) { },
->a : (...x: number, ...y: Date) => void
->function foo(...x: number, ...y: Date) { } : (...x: number, ...y: Date) => void
->foo : (...x: number, ...y: Date) => void
+>a : (x?: number, ...y: Date) => void
+>function foo(...x: number, ...y: Date) { } : (x?: number, ...y: Date) => void
+>foo : (x?: number, ...y: Date) => void
 >x : number
 >y : Date
 
