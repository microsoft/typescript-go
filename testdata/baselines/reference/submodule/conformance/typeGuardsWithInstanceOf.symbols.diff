--- old.typeGuardsWithInstanceOf.symbols
+++ new.typeGuardsWithInstanceOf.symbols
@@ -3,7 +3,7 @@
 === typeGuardsWithInstanceOf.ts ===
 interface I { global: string; }
 >I : Symbol(I, Decl(typeGuardsWithInstanceOf.ts, 0, 0))
->global : Symbol(I.global, Decl(typeGuardsWithInstanceOf.ts, 0, 13))
+>global : Symbol(global, Decl(typeGuardsWithInstanceOf.ts, 0, 13))
 
 var result!: I;
 >result : Symbol(result, Decl(typeGuardsWithInstanceOf.ts, 1, 3))
@@ -31,7 +31,7 @@
 >OnChanges : Symbol(OnChanges, Decl(typeGuardsWithInstanceOf.ts, 7, 1))
 
     onChanges(changes: Record<string, unknown>): void
->onChanges : Symbol(OnChanges.onChanges, Decl(typeGuardsWithInstanceOf.ts, 11, 21))
+>onChanges : Symbol(onChanges, Decl(typeGuardsWithInstanceOf.ts, 11, 21))
 >changes : Symbol(changes, Decl(typeGuardsWithInstanceOf.ts, 12, 14))
 >Record : Symbol(Record, Decl(lib.es5.d.ts, --, --))
 }
@@ -39,7 +39,7 @@
 >Validator : Symbol(Validator, Decl(typeGuardsWithInstanceOf.ts, 13, 1))
 
     validate(): null | Record<string, unknown>;
->validate : Symbol(Validator.validate, Decl(typeGuardsWithInstanceOf.ts, 14, 21))
+>validate : Symbol(validate, Decl(typeGuardsWithInstanceOf.ts, 14, 21))
 >Record : Symbol(Record, Decl(lib.es5.d.ts, --, --))
 }
 
@@ -47,7 +47,7 @@
 >C : Symbol(C, Decl(typeGuardsWithInstanceOf.ts, 16, 1))
 
     validate() {
->validate : Symbol(C.validate, Decl(typeGuardsWithInstanceOf.ts, 18, 9))
+>validate : Symbol(validate, Decl(typeGuardsWithInstanceOf.ts, 18, 9))
 
         return {}
     }
