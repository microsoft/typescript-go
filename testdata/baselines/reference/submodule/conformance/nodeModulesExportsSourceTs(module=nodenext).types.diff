--- old.nodeModulesExportsSourceTs(module=nodenext).types
+++ new.nodeModulesExportsSourceTs(module=nodenext).types
@@= skipped -5, +5 lines =@@
 >Thing : any

 export const a = (await import("inner")).x();
->a : import("node_modules/inner/other").Thing
->(await import("inner")).x() : import("node_modules/inner/other").Thing
->(await import("inner")).x : () => import("node_modules/inner/other").Thing
->(await import("inner")) : typeof import("node_modules/inner/index")
->await import("inner") : typeof import("node_modules/inner/index")
->import("inner") : Promise<typeof import("node_modules/inner/index")>
+>a : import("./node_modules/inner/other.js").Thing
+>(await import("inner")).x() : import("./node_modules/inner/other.js").Thing
+>(await import("inner")).x : () => import("./node_modules/inner/other.js").Thing
+>(await import("inner")) : typeof import("inner")
+>await import("inner") : typeof import("inner")
+>import("inner") : Promise<typeof import("inner")>
 >"inner" : "inner"
->x : () => import("node_modules/inner/other").Thing
+>x : () => import("./node_modules/inner/other.js").Thing

 import {a as a2} from "package";
->a : import("node_modules/inner/other").Thing
->a2 : import("node_modules/inner/other").Thing
+>a : import("./node_modules/inner/other.js").Thing
+>a2 : import("./node_modules/inner/other.js").Thing

 === node_modules/inner/index.ts ===
 // esm format file
 export { x } from "./other.js";
->x : () => import("node_modules/inner/other").Thing
+>x : () => import("./other.js").Thing

 === node_modules/inner/other.ts ===
 // esm format file