--- old.jsDeclarationsGetterSetter.symbols
+++ new.jsDeclarationsGetterSetter.symbols
@@= skipped -4, +4 lines =@@
 >A : Symbol(A, Decl(index.js, 0, 0))
 
     get x() {
->x : Symbol(A.x, Decl(index.js, 0, 16))
+>x : Symbol(x, Decl(index.js, 0, 16))
 
         return 12;
     }
@@= skipped -13, +13 lines =@@
      * @param {number} _arg
      */
     set x(_arg) {
->x : Symbol(B.x, Decl(index.js, 6, 16))
+>x : Symbol(x, Decl(index.js, 6, 16))
 >_arg : Symbol(_arg, Decl(index.js, 10, 10))
     }
 }
@@= skipped -9, +9 lines =@@
 >C : Symbol(C, Decl(index.js, 12, 1))
 
     get x() {
->x : Symbol(C.x, Decl(index.js, 14, 16), Decl(index.js, 17, 5))
+>x : Symbol(x, Decl(index.js, 14, 16), Decl(index.js, 17, 5))
 
         return 12;
     }
     set x(_arg) {
->x : Symbol(C.x, Decl(index.js, 14, 16), Decl(index.js, 17, 5))
+>x : Symbol(x, Decl(index.js, 14, 16), Decl(index.js, 17, 5))
 >_arg : Symbol(_arg, Decl(index.js, 18, 10))
     }
 }
@@= skipped -14, +14 lines =@@
 >D : Symbol(D, Decl(index.js, 20, 1))
 
 Object.defineProperty(D.prototype, "x", {
->Object.defineProperty : Symbol(ObjectConstructor.defineProperty, Decl(lib.es5.d.ts, --, --))
->Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->defineProperty : Symbol(ObjectConstructor.defineProperty, Decl(lib.es5.d.ts, --, --))
->D.prototype : Symbol(D.prototype)
+>D.prototype : Symbol(prototype)
 >D : Symbol(D, Decl(index.js, 20, 1))
->prototype : Symbol(D.prototype)
->"x" : Symbol(D.x, Decl(index.js, 22, 17))
+>prototype : Symbol(prototype)
 
     get() {
 >get : Symbol(get, Decl(index.js, 23, 41))
@@= skipped -19, +15 lines =@@
 >E : Symbol(E, Decl(index.js, 27, 3))
 
 Object.defineProperty(E.prototype, "x", {
->Object.defineProperty : Symbol(ObjectConstructor.defineProperty, Decl(lib.es5.d.ts, --, --))
->Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->defineProperty : Symbol(ObjectConstructor.defineProperty, Decl(lib.es5.d.ts, --, --))
->E.prototype : Symbol(E.prototype)
+>E.prototype : Symbol(prototype)
 >E : Symbol(E, Decl(index.js, 27, 3))
->prototype : Symbol(E.prototype)
->"x" : Symbol(E.x, Decl(index.js, 29, 17))
+>prototype : Symbol(prototype)
 
     /**
      * @param {number} _arg
@@= skipped -21, +17 lines =@@
 >F : Symbol(F, Decl(index.js, 35, 3))
 
 Object.defineProperty(F.prototype, "x", {
->Object.defineProperty : Symbol(ObjectConstructor.defineProperty, Decl(lib.es5.d.ts, --, --))
->Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->defineProperty : Symbol(ObjectConstructor.defineProperty, Decl(lib.es5.d.ts, --, --))
->F.prototype : Symbol(F.prototype)
+>F.prototype : Symbol(prototype)
 >F : Symbol(F, Decl(index.js, 35, 3))
->prototype : Symbol(F.prototype)
->"x" : Symbol(F.x, Decl(index.js, 37, 17))
+>prototype : Symbol(prototype)
 
     get() {
 >get : Symbol(get, Decl(index.js, 38, 41))
@@= skipped -26, +22 lines =@@
 >G : Symbol(G, Decl(index.js, 46, 3))
 
 Object.defineProperty(G.prototype, "x", {
->Object.defineProperty : Symbol(ObjectConstructor.defineProperty, Decl(lib.es5.d.ts, --, --))
->Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->defineProperty : Symbol(ObjectConstructor.defineProperty, Decl(lib.es5.d.ts, --, --))
->G.prototype : Symbol(G.prototype)
+>G.prototype : Symbol(prototype)
 >G : Symbol(G, Decl(index.js, 46, 3))
->prototype : Symbol(G.prototype)
->"x" : Symbol(G.x, Decl(index.js, 48, 17))
+>prototype : Symbol(prototype)
 
     /**
      * @param {number[]} args
@@= skipped -21, +17 lines =@@
 >H : Symbol(H, Decl(index.js, 54, 3))
 
 Object.defineProperty(H.prototype, "x", {
->Object.defineProperty : Symbol(ObjectConstructor.defineProperty, Decl(lib.es5.d.ts, --, --))
->Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->defineProperty : Symbol(ObjectConstructor.defineProperty, Decl(lib.es5.d.ts, --, --))
->H.prototype : Symbol(H.prototype)
+>H.prototype : Symbol(prototype)
 >H : Symbol(H, Decl(index.js, 54, 3))
->prototype : Symbol(H.prototype)
->"x" : Symbol(H.x, Decl(index.js, 56, 17))
+>prototype : Symbol(prototype)
 
     set() {}
 >set : Symbol(set, Decl(index.js, 57, 41))
@@= skipped -18, +14 lines =@@
 >I : Symbol(I, Decl(index.js, 59, 3))
 
 Object.defineProperty(I.prototype, "x", {
->Object.defineProperty : Symbol(ObjectConstructor.defineProperty, Decl(lib.es5.d.ts, --, --))
->Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->defineProperty : Symbol(ObjectConstructor.defineProperty, Decl(lib.es5.d.ts, --, --))
->I.prototype : Symbol(I.prototype)
+>I.prototype : Symbol(prototype)
 >I : Symbol(I, Decl(index.js, 59, 3))
->prototype : Symbol(I.prototype)
->"x" : Symbol(I.x, Decl(index.js, 62, 17))
+>prototype : Symbol(prototype)
 
     /**
      * @param {number} v
@@= skipped -28, +24 lines =@@
 >J : Symbol(J, Decl(index.js, 73, 25))
 
 Object.defineProperty(J.prototype, "x", {
->Object.defineProperty : Symbol(ObjectConstructor.defineProperty, Decl(lib.es5.d.ts, --, --))
->Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->defineProperty : Symbol(ObjectConstructor.defineProperty, Decl(lib.es5.d.ts, --, --))
->J.prototype : Symbol(J.prototype)
+>J.prototype : Symbol(prototype)
 >J : Symbol(J, Decl(index.js, 73, 25))
->prototype : Symbol(J.prototype)
->"x" : Symbol(J.x, Decl(index.js, 74, 17))
+>prototype : Symbol(prototype)
 
     set: jSetter
 >set : Symbol(set, Decl(index.js, 75, 41))
@@= skipped -32, +28 lines =@@
 >K : Symbol(K, Decl(index.js, 86, 26))
 
 Object.defineProperty(K.prototype, "x", {
->Object.defineProperty : Symbol(ObjectConstructor.defineProperty, Decl(lib.es5.d.ts, --, --))
->Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->defineProperty : Symbol(ObjectConstructor.defineProperty, Decl(lib.es5.d.ts, --, --))
->K.prototype : Symbol(K.prototype)
+>K.prototype : Symbol(prototype)
 >K : Symbol(K, Decl(index.js, 86, 26))
->prototype : Symbol(K.prototype)
->"x" : Symbol(K.x, Decl(index.js, 87, 17))
+>prototype : Symbol(prototype)
 
     set: Math.random() ? kSetter1 : kSetter2
 >set : Symbol(set, Decl(index.js, 88, 41))
->Math.random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
->Math : Symbol(Math, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
->random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
 >kSetter1 : Symbol(kSetter1, Decl(index.js, 82, 5))
 >kSetter2 : Symbol(kSetter2, Decl(index.js, 86, 5))
 
@@= skipped -36, +29 lines =@@
 >L : Symbol(L, Decl(index.js, 99, 26))
 
 Object.defineProperty(L.prototype, "x", {
->Object.defineProperty : Symbol(ObjectConstructor.defineProperty, Decl(lib.es5.d.ts, --, --))
->Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->defineProperty : Symbol(ObjectConstructor.defineProperty, Decl(lib.es5.d.ts, --, --))
->L.prototype : Symbol(L.prototype)
+>L.prototype : Symbol(prototype)
 >L : Symbol(L, Decl(index.js, 99, 26))
->prototype : Symbol(L.prototype)
->"x" : Symbol(L.x, Decl(index.js, 100, 17))
+>prototype : Symbol(prototype)
 
     set: Math.random() ? lSetter1 : lSetter2
 >set : Symbol(set, Decl(index.js, 101, 41))
->Math.random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
->Math : Symbol(Math, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
->random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
 >lSetter1 : Symbol(lSetter1, Decl(index.js, 95, 5))
 >lSetter2 : Symbol(lSetter2, Decl(index.js, 99, 5))
 
@@= skipped -36, +29 lines =@@
 >M : Symbol(M, Decl(index.js, 112, 26))
 
 Object.defineProperty(M.prototype, "x", {
->Object.defineProperty : Symbol(ObjectConstructor.defineProperty, Decl(lib.es5.d.ts, --, --))
->Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->defineProperty : Symbol(ObjectConstructor.defineProperty, Decl(lib.es5.d.ts, --, --))
->M.prototype : Symbol(M.prototype)
+>M.prototype : Symbol(prototype)
 >M : Symbol(M, Decl(index.js, 112, 26))
->prototype : Symbol(M.prototype)
->"x" : Symbol(M.x, Decl(index.js, 113, 17))
+>prototype : Symbol(prototype)
 
     set: Math.random() ? mSetter1 : mSetter2
 >set : Symbol(set, Decl(index.js, 114, 41))
->Math.random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
->Math : Symbol(Math, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
->random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
 >mSetter1 : Symbol(mSetter1, Decl(index.js, 108, 5))
 >mSetter2 : Symbol(mSetter2, Decl(index.js, 112, 5))
 
