//// [tests/cases/conformance/jsdoc/jsdocTypeReferenceToImportOfFunctionExpression.ts] ////

=== MC.js ===
const MW = require("./MW");
>MW : Symbol(MW, Decl(MC.js, 0, 5))
>require : Symbol(require)
>"./MW" : Symbol("MW", Decl(MW.js, 0, 0))

/** @typedef {number} Meyerhauser */

/** @class */
module.exports = function MC() {
>MC : Symbol(MC, Decl(MC.js, 5, 16))

    /** @type {any} */
    var x = {}
>x : Symbol(x, Decl(MC.js, 7, 7))

    return new MW(x);
>MW : Symbol(MW, Decl(MC.js, 0, 5))
>x : Symbol(x, Decl(MC.js, 7, 7))
>MW : Symbol(MW, Decl(MC.js, 0, 5))
>x : Symbol(x, Decl(MC.js, 7, 7))

};

=== MW.js ===
/** @typedef {import("./MC")} MC */

class MW {
>MW : Symbol(MW, Decl(MW.js, 0, 0))

  /**
   * @param {MC} compiler the compiler
   */
  constructor(compiler) {
>compiler : Symbol(compiler, Decl(MW.js, 6, 14))

    this.compiler = compiler;
>this : Symbol(MW, Decl(MW.js, 0, 0))
>compiler : Symbol(compiler, Decl(MW.js, 6, 14))
  }
}

module.exports = MW;
>MW : Symbol(MW, Decl(MW.js, 0, 0))
>MW : Symbol(MW, Decl(MW.js, 0, 0))

