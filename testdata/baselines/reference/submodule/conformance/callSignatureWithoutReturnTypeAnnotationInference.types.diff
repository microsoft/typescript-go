--- old.callSignatureWithoutReturnTypeAnnotationInference.types
+++ new.callSignatureWithoutReturnTypeAnnotationInference.types
@@= skipped -45, +45 lines =@@
 
 function foo4<T>(x: T) {
 >foo4 : <T>(x: T) => T
+>T : T
 >x : T
 
     return x;
@@= skipped -56, +57 lines =@@
 >1 : 1
 
 function foo7(x) {
->foo7 : (x: any) => "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>foo7 : (x: any) => "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >x : any
 
     return typeof x;
->typeof x : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof x : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >x : any
 }
 var r7 = foo7(1);
->r7 : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
->foo7(1) : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
->foo7 : (x: any) => "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>r7 : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
+>foo7(1) : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
+>foo7 : (x: any) => "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >1 : 1
 
 // object types
@@= skipped -30, +30 lines =@@
 >1 : 1
 
 interface I {
+>I : I
+
     foo: string;
 >foo : string
 }
@@= skipped -65, +67 lines =@@
 
 // merged declarations
 interface I2 {
+>I2 : I2
+
     x: number;
 >x : number
 }
 interface I2 {
+>I2 : I2
+
     y: number;
 >y : number
 }
