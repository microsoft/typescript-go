--- old.typeRelationships.symbols
+++ new.typeRelationships.symbols
@@= skipped -4, +4 lines =@@
 >C : Symbol(C, Decl(typeRelationships.ts, 0, 0))
 
     self = this;
->self : Symbol(C.self, Decl(typeRelationships.ts, 0, 9))
+>self : Symbol(self, Decl(typeRelationships.ts, 0, 9))
 >this : Symbol(C, Decl(typeRelationships.ts, 0, 0))
 
     c = new C();
->c : Symbol(C.c, Decl(typeRelationships.ts, 1, 16))
+>c : Symbol(c, Decl(typeRelationships.ts, 1, 16))
 >C : Symbol(C, Decl(typeRelationships.ts, 0, 0))
 
     foo() {
->foo : Symbol(C.foo, Decl(typeRelationships.ts, 2, 16))
+>foo : Symbol(foo, Decl(typeRelationships.ts, 2, 16))
 
         return this;
 >this : Symbol(C, Decl(typeRelationships.ts, 0, 0))
     }
     f1() {
->f1 : Symbol(C.f1, Decl(typeRelationships.ts, 5, 5))
+>f1 : Symbol(f1, Decl(typeRelationships.ts, 5, 5))
 
         this.c = this.self;
->this.c : Symbol(C.c, Decl(typeRelationships.ts, 1, 16))
+>this.c : Symbol(c, Decl(typeRelationships.ts, 1, 16))
 >this : Symbol(C, Decl(typeRelationships.ts, 0, 0))
->c : Symbol(C.c, Decl(typeRelationships.ts, 1, 16))
->this.self : Symbol(C.self, Decl(typeRelationships.ts, 0, 9))
+>c : Symbol(c, Decl(typeRelationships.ts, 1, 16))
+>this.self : Symbol(self, Decl(typeRelationships.ts, 0, 9))
 >this : Symbol(C, Decl(typeRelationships.ts, 0, 0))
->self : Symbol(C.self, Decl(typeRelationships.ts, 0, 9))
+>self : Symbol(self, Decl(typeRelationships.ts, 0, 9))
 
         this.self = this.c;  // Error
->this.self : Symbol(C.self, Decl(typeRelationships.ts, 0, 9))
+>this.self : Symbol(self, Decl(typeRelationships.ts, 0, 9))
 >this : Symbol(C, Decl(typeRelationships.ts, 0, 0))
->self : Symbol(C.self, Decl(typeRelationships.ts, 0, 9))
->this.c : Symbol(C.c, Decl(typeRelationships.ts, 1, 16))
+>self : Symbol(self, Decl(typeRelationships.ts, 0, 9))
+>this.c : Symbol(c, Decl(typeRelationships.ts, 1, 16))
 >this : Symbol(C, Decl(typeRelationships.ts, 0, 0))
->c : Symbol(C.c, Decl(typeRelationships.ts, 1, 16))
+>c : Symbol(c, Decl(typeRelationships.ts, 1, 16))
     }
     f2() {
->f2 : Symbol(C.f2, Decl(typeRelationships.ts, 9, 5))
+>f2 : Symbol(f2, Decl(typeRelationships.ts, 9, 5))
 
         var a: C[];
 >a : Symbol(a, Decl(typeRelationships.ts, 11, 11), Decl(typeRelationships.ts, 12, 11))
@@= skipped -42, +42 lines =@@
         var a = [this, this.c];  // C[] since this is subtype of C
 >a : Symbol(a, Decl(typeRelationships.ts, 11, 11), Decl(typeRelationships.ts, 12, 11))
 >this : Symbol(C, Decl(typeRelationships.ts, 0, 0))
->this.c : Symbol(C.c, Decl(typeRelationships.ts, 1, 16))
+>this.c : Symbol(c, Decl(typeRelationships.ts, 1, 16))
 >this : Symbol(C, Decl(typeRelationships.ts, 0, 0))
->c : Symbol(C.c, Decl(typeRelationships.ts, 1, 16))
+>c : Symbol(c, Decl(typeRelationships.ts, 1, 16))
 
         var b: this[];
 >b : Symbol(b, Decl(typeRelationships.ts, 13, 11), Decl(typeRelationships.ts, 14, 11))
@@= skipped -10, +10 lines =@@
         var b = [this, this.self, null, undefined];
 >b : Symbol(b, Decl(typeRelationships.ts, 13, 11), Decl(typeRelationships.ts, 14, 11))
 >this : Symbol(C, Decl(typeRelationships.ts, 0, 0))
->this.self : Symbol(C.self, Decl(typeRelationships.ts, 0, 9))
+>this.self : Symbol(self, Decl(typeRelationships.ts, 0, 9))
 >this : Symbol(C, Decl(typeRelationships.ts, 0, 0))
->self : Symbol(C.self, Decl(typeRelationships.ts, 0, 9))
+>self : Symbol(self, Decl(typeRelationships.ts, 0, 9))
 >undefined : Symbol(undefined)
     }
     f3(b: boolean) {
->f3 : Symbol(C.f3, Decl(typeRelationships.ts, 15, 5))
+>f3 : Symbol(f3, Decl(typeRelationships.ts, 15, 5))
 >b : Symbol(b, Decl(typeRelationships.ts, 16, 7))
 
         return b ? this.c : this.self;  // Should be C
 >b : Symbol(b, Decl(typeRelationships.ts, 16, 7))
->this.c : Symbol(C.c, Decl(typeRelationships.ts, 1, 16))
+>this.c : Symbol(c, Decl(typeRelationships.ts, 1, 16))
 >this : Symbol(C, Decl(typeRelationships.ts, 0, 0))
->c : Symbol(C.c, Decl(typeRelationships.ts, 1, 16))
->this.self : Symbol(C.self, Decl(typeRelationships.ts, 0, 9))
+>c : Symbol(c, Decl(typeRelationships.ts, 1, 16))
+>this.self : Symbol(self, Decl(typeRelationships.ts, 0, 9))
 >this : Symbol(C, Decl(typeRelationships.ts, 0, 0))
->self : Symbol(C.self, Decl(typeRelationships.ts, 0, 9))
+>self : Symbol(self, Decl(typeRelationships.ts, 0, 9))
     }
 }
 
@@= skipped -25, +25 lines =@@
 >C : Symbol(C, Decl(typeRelationships.ts, 0, 0))
 
     self1 = this;
->self1 : Symbol(D.self1, Decl(typeRelationships.ts, 21, 19))
+>self1 : Symbol(self1, Decl(typeRelationships.ts, 21, 19))
 >this : Symbol(D, Decl(typeRelationships.ts, 19, 1))
 
     self2 = this.self;
->self2 : Symbol(D.self2, Decl(typeRelationships.ts, 22, 17))
->this.self : Symbol(C.self, Decl(typeRelationships.ts, 0, 9))
+>self2 : Symbol(self2, Decl(typeRelationships.ts, 22, 17))
+>this.self : Symbol(self, Decl(typeRelationships.ts, 0, 9))
 >this : Symbol(D, Decl(typeRelationships.ts, 19, 1))
->self : Symbol(C.self, Decl(typeRelationships.ts, 0, 9))
+>self : Symbol(self, Decl(typeRelationships.ts, 0, 9))
 
     self3 = this.foo();
->self3 : Symbol(D.self3, Decl(typeRelationships.ts, 23, 22))
->this.foo : Symbol(C.foo, Decl(typeRelationships.ts, 2, 16))
+>self3 : Symbol(self3, Decl(typeRelationships.ts, 23, 22))
+>this.foo : Symbol(foo, Decl(typeRelationships.ts, 2, 16))
 >this : Symbol(D, Decl(typeRelationships.ts, 19, 1))
->foo : Symbol(C.foo, Decl(typeRelationships.ts, 2, 16))
+>foo : Symbol(foo, Decl(typeRelationships.ts, 2, 16))
 
     d = new D();
->d : Symbol(D.d, Decl(typeRelationships.ts, 24, 23))
+>d : Symbol(d, Decl(typeRelationships.ts, 24, 23))
 >D : Symbol(D, Decl(typeRelationships.ts, 19, 1))
 
     bar() {
->bar : Symbol(D.bar, Decl(typeRelationships.ts, 25, 16))
+>bar : Symbol(bar, Decl(typeRelationships.ts, 25, 16))
 
         this.self = this.self1;
->this.self : Symbol(C.self, Decl(typeRelationships.ts, 0, 9))
+>this.self : Symbol(self, Decl(typeRelationships.ts, 0, 9))
 >this : Symbol(D, Decl(typeRelationships.ts, 19, 1))
->self : Symbol(C.self, Decl(typeRelationships.ts, 0, 9))
->this.self1 : Symbol(D.self1, Decl(typeRelationships.ts, 21, 19))
+>self : Symbol(self, Decl(typeRelationships.ts, 0, 9))
+>this.self1 : Symbol(self1, Decl(typeRelationships.ts, 21, 19))
 >this : Symbol(D, Decl(typeRelationships.ts, 19, 1))
->self1 : Symbol(D.self1, Decl(typeRelationships.ts, 21, 19))
+>self1 : Symbol(self1, Decl(typeRelationships.ts, 21, 19))
 
         this.self = this.self2;
->this.self : Symbol(C.self, Decl(typeRelationships.ts, 0, 9))
+>this.self : Symbol(self, Decl(typeRelationships.ts, 0, 9))
 >this : Symbol(D, Decl(typeRelationships.ts, 19, 1))
->self : Symbol(C.self, Decl(typeRelationships.ts, 0, 9))
->this.self2 : Symbol(D.self2, Decl(typeRelationships.ts, 22, 17))
+>self : Symbol(self, Decl(typeRelationships.ts, 0, 9))
+>this.self2 : Symbol(self2, Decl(typeRelationships.ts, 22, 17))
 >this : Symbol(D, Decl(typeRelationships.ts, 19, 1))
->self2 : Symbol(D.self2, Decl(typeRelationships.ts, 22, 17))
+>self2 : Symbol(self2, Decl(typeRelationships.ts, 22, 17))
 
         this.self = this.self3;
->this.self : Symbol(C.self, Decl(typeRelationships.ts, 0, 9))
+>this.self : Symbol(self, Decl(typeRelationships.ts, 0, 9))
 >this : Symbol(D, Decl(typeRelationships.ts, 19, 1))
->self : Symbol(C.self, Decl(typeRelationships.ts, 0, 9))
->this.self3 : Symbol(D.self3, Decl(typeRelationships.ts, 23, 22))
+>self : Symbol(self, Decl(typeRelationships.ts, 0, 9))
+>this.self3 : Symbol(self3, Decl(typeRelationships.ts, 23, 22))
 >this : Symbol(D, Decl(typeRelationships.ts, 19, 1))
->self3 : Symbol(D.self3, Decl(typeRelationships.ts, 23, 22))
+>self3 : Symbol(self3, Decl(typeRelationships.ts, 23, 22))
 
         this.self1 = this.self;
->this.self1 : Symbol(D.self1, Decl(typeRelationships.ts, 21, 19))
+>this.self1 : Symbol(self1, Decl(typeRelationships.ts, 21, 19))
 >this : Symbol(D, Decl(typeRelationships.ts, 19, 1))
->self1 : Symbol(D.self1, Decl(typeRelationships.ts, 21, 19))
->this.self : Symbol(C.self, Decl(typeRelationships.ts, 0, 9))
+>self1 : Symbol(self1, Decl(typeRelationships.ts, 21, 19))
+>this.self : Symbol(self, Decl(typeRelationships.ts, 0, 9))
 >this : Symbol(D, Decl(typeRelationships.ts, 19, 1))
->self : Symbol(C.self, Decl(typeRelationships.ts, 0, 9))
+>self : Symbol(self, Decl(typeRelationships.ts, 0, 9))
 
         this.self2 = this.self;
->this.self2 : Symbol(D.self2, Decl(typeRelationships.ts, 22, 17))
+>this.self2 : Symbol(self2, Decl(typeRelationships.ts, 22, 17))
 >this : Symbol(D, Decl(typeRelationships.ts, 19, 1))
->self2 : Symbol(D.self2, Decl(typeRelationships.ts, 22, 17))
->this.self : Symbol(C.self, Decl(typeRelationships.ts, 0, 9))
+>self2 : Symbol(self2, Decl(typeRelationships.ts, 22, 17))
+>this.self : Symbol(self, Decl(typeRelationships.ts, 0, 9))
 >this : Symbol(D, Decl(typeRelationships.ts, 19, 1))
->self : Symbol(C.self, Decl(typeRelationships.ts, 0, 9))
+>self : Symbol(self, Decl(typeRelationships.ts, 0, 9))
 
         this.self3 = this.self;
->this.self3 : Symbol(D.self3, Decl(typeRelationships.ts, 23, 22))
+>this.self3 : Symbol(self3, Decl(typeRelationships.ts, 23, 22))
 >this : Symbol(D, Decl(typeRelationships.ts, 19, 1))
->self3 : Symbol(D.self3, Decl(typeRelationships.ts, 23, 22))
->this.self : Symbol(C.self, Decl(typeRelationships.ts, 0, 9))
+>self3 : Symbol(self3, Decl(typeRelationships.ts, 23, 22))
+>this.self : Symbol(self, Decl(typeRelationships.ts, 0, 9))
 >this : Symbol(D, Decl(typeRelationships.ts, 19, 1))
->self : Symbol(C.self, Decl(typeRelationships.ts, 0, 9))
+>self : Symbol(self, Decl(typeRelationships.ts, 0, 9))
 
         this.d = this.self;
->this.d : Symbol(D.d, Decl(typeRelationships.ts, 24, 23))
+>this.d : Symbol(d, Decl(typeRelationships.ts, 24, 23))
 >this : Symbol(D, Decl(typeRelationships.ts, 19, 1))
->d : Symbol(D.d, Decl(typeRelationships.ts, 24, 23))
->this.self : Symbol(C.self, Decl(typeRelationships.ts, 0, 9))
+>d : Symbol(d, Decl(typeRelationships.ts, 24, 23))
+>this.self : Symbol(self, Decl(typeRelationships.ts, 0, 9))
 >this : Symbol(D, Decl(typeRelationships.ts, 19, 1))
->self : Symbol(C.self, Decl(typeRelationships.ts, 0, 9))
+>self : Symbol(self, Decl(typeRelationships.ts, 0, 9))
 
         this.d = this.c;  // Error
->this.d : Symbol(D.d, Decl(typeRelationships.ts, 24, 23))
+>this.d : Symbol(d, Decl(typeRelationships.ts, 24, 23))
 >this : Symbol(D, Decl(typeRelationships.ts, 19, 1))
->d : Symbol(D.d, Decl(typeRelationships.ts, 24, 23))
->this.c : Symbol(C.c, Decl(typeRelationships.ts, 1, 16))
+>d : Symbol(d, Decl(typeRelationships.ts, 24, 23))
+>this.c : Symbol(c, Decl(typeRelationships.ts, 1, 16))
 >this : Symbol(D, Decl(typeRelationships.ts, 19, 1))
->c : Symbol(C.c, Decl(typeRelationships.ts, 1, 16))
+>c : Symbol(c, Decl(typeRelationships.ts, 1, 16))
 
         this.self = this.d;  // Error
->this.self : Symbol(C.self, Decl(typeRelationships.ts, 0, 9))
+>this.self : Symbol(self, Decl(typeRelationships.ts, 0, 9))
 >this : Symbol(D, Decl(typeRelationships.ts, 19, 1))
->self : Symbol(C.self, Decl(typeRelationships.ts, 0, 9))
->this.d : Symbol(D.d, Decl(typeRelationships.ts, 24, 23))
+>self : Symbol(self, Decl(typeRelationships.ts, 0, 9))
+>this.d : Symbol(d, Decl(typeRelationships.ts, 24, 23))
 >this : Symbol(D, Decl(typeRelationships.ts, 19, 1))
->d : Symbol(D.d, Decl(typeRelationships.ts, 24, 23))
+>d : Symbol(d, Decl(typeRelationships.ts, 24, 23))
 
         this.c = this.d;
->this.c : Symbol(C.c, Decl(typeRelationships.ts, 1, 16))
+>this.c : Symbol(c, Decl(typeRelationships.ts, 1, 16))
 >this : Symbol(D, Decl(typeRelationships.ts, 19, 1))
->c : Symbol(C.c, Decl(typeRelationships.ts, 1, 16))
->this.d : Symbol(D.d, Decl(typeRelationships.ts, 24, 23))
+>c : Symbol(c, Decl(typeRelationships.ts, 1, 16))
+>this.d : Symbol(d, Decl(typeRelationships.ts, 24, 23))
 >this : Symbol(D, Decl(typeRelationships.ts, 19, 1))
->d : Symbol(D.d, Decl(typeRelationships.ts, 24, 23))
+>d : Symbol(d, Decl(typeRelationships.ts, 24, 23))
     }
 }
 
