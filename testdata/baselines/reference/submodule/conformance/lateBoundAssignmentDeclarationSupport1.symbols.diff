--- old.lateBoundAssignmentDeclarationSupport1.symbols
+++ new.lateBoundAssignmentDeclarationSupport1.symbols
@@= skipped -3, +3 lines =@@
 const x = require("./lateBoundAssignmentDeclarationSupport1.js");
 >x : Symbol(x, Decl(usage.js, 0, 5))
 >require : Symbol(require)
->"./lateBoundAssignmentDeclarationSupport1.js" : Symbol(x, Decl(lateBoundAssignmentDeclarationSupport1.js, 0, 0))
+>"./lateBoundAssignmentDeclarationSupport1.js" : Symbol("lateBoundAssignmentDeclarationSupport1", Decl(lateBoundAssignmentDeclarationSupport1.js, 0, 0))
 
 const y = x["my-fake-sym"];
 >y : Symbol(y, Decl(usage.js, 1, 5))
@@= skipped -9, +9 lines =@@
 const z = x[x.S];
 >z : Symbol(z, Decl(usage.js, 2, 5))
 >x : Symbol(x, Decl(usage.js, 0, 5))
->x.S : Symbol(x.S, Decl(lateBoundAssignmentDeclarationSupport1.js, 5, 21))
+>x.S : Symbol(S, Decl(lateBoundAssignmentDeclarationSupport1.js, 5, 21))
 >x : Symbol(x, Decl(usage.js, 0, 5))
->S : Symbol(x.S, Decl(lateBoundAssignmentDeclarationSupport1.js, 5, 21))
+>S : Symbol(S, Decl(lateBoundAssignmentDeclarationSupport1.js, 5, 21))
 
 === lateBoundAssignmentDeclarationSupport1.js ===
 // currently unsupported
@@= skipped -14, +14 lines =@@
 >_str : Symbol(_str, Decl(lateBoundAssignmentDeclarationSupport1.js, 2, 5))
 
 exports[_sym] = "ok";
->exports : Symbol("lateBoundAssignmentDeclarationSupport1", Decl(lateBoundAssignmentDeclarationSupport1.js, 0, 0))
 >_sym : Symbol(_sym, Decl(lateBoundAssignmentDeclarationSupport1.js, 1, 5))
 
 exports[_str] = "ok";
->exports : Symbol("lateBoundAssignmentDeclarationSupport1", Decl(lateBoundAssignmentDeclarationSupport1.js, 0, 0))
 >_str : Symbol(_str, Decl(lateBoundAssignmentDeclarationSupport1.js, 2, 5))
 
 exports.S = _sym;
->exports.S : Symbol(S, Decl(lateBoundAssignmentDeclarationSupport1.js, 5, 21))
->exports : Symbol(S, Decl(lateBoundAssignmentDeclarationSupport1.js, 5, 21))
->S : Symbol(S, Decl(lateBoundAssignmentDeclarationSupport1.js, 5, 21))
 >_sym : Symbol(_sym, Decl(lateBoundAssignmentDeclarationSupport1.js, 1, 5))
 
