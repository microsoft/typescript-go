--- old.typeGuardOfFormTypeOfNotEqualHasNoEffect.types
+++ new.typeGuardOfFormTypeOfNotEqualHasNoEffect.types
@@= skipped -19, +19 lines =@@
 // typeof x != s has not effect on typeguard
 if (typeof strOrNum != "string") {
 >typeof strOrNum != "string" : boolean
->typeof strOrNum : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof strOrNum : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >strOrNum : string | number
 >"string" : "string"
 
@@= skipped -16, +16 lines =@@
 
 if (typeof strOrBool != "boolean") {
 >typeof strOrBool != "boolean" : boolean
->typeof strOrBool : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof strOrBool : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >strOrBool : string | boolean
 >"boolean" : "boolean"
 
@@= skipped -16, +16 lines =@@
 
 if (typeof numOrBool != "number") {
 >typeof numOrBool != "number" : boolean
->typeof numOrBool : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof numOrBool : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >numOrBool : number | boolean
 >"number" : "number"
 
@@= skipped -16, +16 lines =@@
 
 if (typeof strOrC != "Object") {
 >typeof strOrC != "Object" : boolean
->typeof strOrC : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof strOrC : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >strOrC : string | C
 >"Object" : "Object"
 
