--- old.jsdocOverrideTag1.types
+++ new.jsdocOverrideTag1.types
@@= skipped -2, +2 lines =@@
 === 0.js ===
 class A {
 >A : A
->  : ^
 
     /**
      * @method
@@= skipped -8, +7 lines =@@
      * @returns {boolean}
      */
     foo (a) {
->foo : (a: string | number) => boolean
->    : ^ ^^               ^^^^^       
->a : string | number
->  : ^^^^^^^^^^^^^^^
+>foo : (a: any) => a is string
+>a : any
 
         return typeof a === 'string'
 >typeof a === 'string' : boolean
->                      : ^^^^^^^
->typeof a : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
->         : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
->a : string | number
->  : ^^^^^^^^^^^^^^^
+>typeof a : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
+>a : any
 >'string' : "string"
->         : ^^^^^^^^
     }
     bar () {
 >bar : () => void
->    : ^^^^^^^^^^
 
     }
 }
 
 class B extends A {
 >B : B
->  : ^
 >A : A
->  : ^
 
     /**
      * @override
@@= skipped -35, +26 lines =@@
      * @returns {boolean}
      */
     foo (a) {
->foo : (a: string | number) => boolean
->    : ^ ^^               ^^^^^       
->a : string | number
->  : ^^^^^^^^^^^^^^^
+>foo : (a: any) => a is string
+>a : any
 
         return super.foo(a)
 >super.foo(a) : boolean
->             : ^^^^^^^
->super.foo : (a: string | number) => boolean
->          : ^ ^^               ^^^^^       
+>super.foo : (a: any) => a is string
 >super : A
->      : ^
->foo : (a: string | number) => boolean
->    : ^ ^^               ^^^^^       
->a : string | number
->  : ^^^^^^^^^^^^^^^
+>foo : (a: any) => a is string
+>a : any
     }
 
     bar () {
 >bar : () => void
->    : ^^^^^^^^^^
 
     }
 
     /** @override */
     baz () {
 >baz : () => void
->    : ^^^^^^^^^^
 
     }
 }
@@= skipped -35, +26 lines =@@
 
 class C {
 >C : C
->  : ^
 
     /** @override */
     foo () {
 >foo : () => void
->    : ^^^^^^^^^^
 
     }
 }
