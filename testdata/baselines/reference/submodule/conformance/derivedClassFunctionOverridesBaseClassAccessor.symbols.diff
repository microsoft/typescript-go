--- old.derivedClassFunctionOverridesBaseClassAccessor.symbols
+++ new.derivedClassFunctionOverridesBaseClassAccessor.symbols
@@= skipped -4, +4 lines =@@
 >Base : Symbol(Base, Decl(derivedClassFunctionOverridesBaseClassAccessor.ts, 0, 0))
 
     get x() {
->x : Symbol(Base.x, Decl(derivedClassFunctionOverridesBaseClassAccessor.ts, 0, 12), Decl(derivedClassFunctionOverridesBaseClassAccessor.ts, 3, 5))
+>x : Symbol(x, Decl(derivedClassFunctionOverridesBaseClassAccessor.ts, 0, 12), Decl(derivedClassFunctionOverridesBaseClassAccessor.ts, 3, 5))
 
         return 1;
     }
     set x(v) {
->x : Symbol(Base.x, Decl(derivedClassFunctionOverridesBaseClassAccessor.ts, 0, 12), Decl(derivedClassFunctionOverridesBaseClassAccessor.ts, 3, 5))
+>x : Symbol(x, Decl(derivedClassFunctionOverridesBaseClassAccessor.ts, 0, 12), Decl(derivedClassFunctionOverridesBaseClassAccessor.ts, 3, 5))
 >v : Symbol(v, Decl(derivedClassFunctionOverridesBaseClassAccessor.ts, 4, 10))
     }
 }
@@= skipped -16, +16 lines =@@
 >Base : Symbol(Base, Decl(derivedClassFunctionOverridesBaseClassAccessor.ts, 0, 0))
 
     x() {
->x : Symbol(Derived.x, Decl(derivedClassFunctionOverridesBaseClassAccessor.ts, 9, 28))
+>x : Symbol(x, Decl(derivedClassFunctionOverridesBaseClassAccessor.ts, 9, 28))
 
         return 1;
     }
