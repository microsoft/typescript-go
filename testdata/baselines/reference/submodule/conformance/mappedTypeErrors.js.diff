--- old.mappedTypeErrors.js
+++ new.mappedTypeErrors.js
@@= skipped -157, +157 lines =@@

 //// [mappedTypeErrors.js]
 function f1(x) {
-    var y; // Error
+    let y; // Error
 }
 function f2(x) {
-    var y; // Error
+    let y; // Error
 }
 function f3(x) {
-    var y;
+    let y;
 }
 function f4(x) {
-    var y;
+    let y;
 }
 // Type identity checking
 function f10() {
@@= skipped -28, +28 lines =@@
     var x; // Error
 }
 function f20() {
-    var x1 = objAndReadonly({ x: 0, y: 0 }, { x: 1 }); // Error
-    var x2 = objAndReadonly({ x: 0, y: 0 }, { x: 1, y: 1 });
-    var x3 = objAndReadonly({ x: 0, y: 0 }, { x: 1, y: 1, z: 1 }); // Error
+    let x1 = objAndReadonly({ x: 0, y: 0 }, { x: 1 }); // Error
+    let x2 = objAndReadonly({ x: 0, y: 0 }, { x: 1, y: 1 });
+    let x3 = objAndReadonly({ x: 0, y: 0 }, { x: 1, y: 1, z: 1 }); // Error
 }
 function f21() {
-    var x1 = objAndPartial({ x: 0, y: 0 }, { x: 1 });
-    var x2 = objAndPartial({ x: 0, y: 0 }, { x: 1, y: 1 });
-    var x3 = objAndPartial({ x: 0, y: 0 }, { x: 1, y: 1, z: 1 }); // Error
+    let x1 = objAndPartial({ x: 0, y: 0 }, { x: 1 });
+    let x2 = objAndPartial({ x: 0, y: 0 }, { x: 1, y: 1 });
+    let x3 = objAndPartial({ x: 0, y: 0 }, { x: 1, y: 1, z: 1 }); // Error
 }
 function setState(obj, props) {
-    for (var k in props) {
+    for (let k in props) {
         obj[k] = props[k];
     }
 }
-var foo = { a: "hello", b: 42 };
+let foo = { a: "hello", b: 42 };
 setState(foo, { a: "test", b: 43 });
 setState(foo, { a: "hi" });
 setState(foo, { b: undefined });
@@= skipped -22, +22 lines =@@
 setState(foo, foo);
 setState(foo, { a: undefined }); // Error
 setState(foo, { c: true }); // Error
-var C = /** @class */ (function () {
-    function C() {
-    }
-    C.prototype.setState = function (props) {
-        for (var k in props) {
+class C {
+    state;
+    setState(props) {
+        for (let k in props) {
             this.state[k] = props[k];
         }
-    };
-    return C;
-}());
-var c = new C();
+    }
+}
+let c = new C();
 c.setState({ a: "test", b: 43 });
 c.setState({ a: "hi" });
 c.setState({ b: undefined });
@@= skipped -18, +16 lines =@@
 c.setState(foo);
 c.setState({ a: undefined }); // Error
 c.setState({ c: true }); // Error
-var x1 = { a: 'no' }; // Error
-var x2 = { a: 'no' }; // Error
-var x3 = { a: 'no' }; // Error
-var o = { x: 5, y: false };
-var f = {
+let x1 = { a: 'no' }; // Error
+let x2 = { a: 'no' }; // Error
+let x3 = { a: 'no' }; // Error
+let o = { x: 5, y: false };
+let f = {
     pf: { x: 7 },
     pt: { x: 7, y: false },
 };
 // Repro from #28170
 function test1(obj) {
-    var x = obj.foo; // Error
+    let x = obj.foo; // Error
 }
 function test2(obj) {
-    var x = obj.foo; // Error
+    let x = obj.foo; // Error
 }

