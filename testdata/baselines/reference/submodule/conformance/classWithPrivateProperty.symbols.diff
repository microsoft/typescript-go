--- old.classWithPrivateProperty.symbols
+++ new.classWithPrivateProperty.symbols
@@= skipped -6, +6 lines =@@
 >C : Symbol(C, Decl(classWithPrivateProperty.ts, 0, 0))
 
     private x;
->x : Symbol(C.x, Decl(classWithPrivateProperty.ts, 2, 9))
+>x : Symbol(x, Decl(classWithPrivateProperty.ts, 2, 9))
 
     private a = '';
->a : Symbol(C.a, Decl(classWithPrivateProperty.ts, 3, 14))
+>a : Symbol(a, Decl(classWithPrivateProperty.ts, 3, 14))
 
     private b: string = '';
->b : Symbol(C.b, Decl(classWithPrivateProperty.ts, 4, 19))
+>b : Symbol(b, Decl(classWithPrivateProperty.ts, 4, 19))
 
     private c() { return '' }
->c : Symbol(C.c, Decl(classWithPrivateProperty.ts, 5, 27))
+>c : Symbol(c, Decl(classWithPrivateProperty.ts, 5, 27))
 
     private d = () => '';
->d : Symbol(C.d, Decl(classWithPrivateProperty.ts, 6, 29))
+>d : Symbol(d, Decl(classWithPrivateProperty.ts, 6, 29))
 
     private static e;
->e : Symbol(C.e, Decl(classWithPrivateProperty.ts, 7, 25))
+>e : Symbol(e, Decl(classWithPrivateProperty.ts, 7, 25))
 
     private static f() { return '' }
->f : Symbol(C.f, Decl(classWithPrivateProperty.ts, 8, 21))
+>f : Symbol(f, Decl(classWithPrivateProperty.ts, 8, 21))
 
     private static g = () => '';
->g : Symbol(C.g, Decl(classWithPrivateProperty.ts, 9, 36))
+>g : Symbol(g, Decl(classWithPrivateProperty.ts, 9, 36))
 }
 
 var c = new C();
@@= skipped -30, +30 lines =@@
 
 var r1: string = c.x;
 >r1 : Symbol(r1, Decl(classWithPrivateProperty.ts, 14, 3))
->c.x : Symbol(C.x, Decl(classWithPrivateProperty.ts, 2, 9))
+>c.x : Symbol(x, Decl(classWithPrivateProperty.ts, 2, 9))
 >c : Symbol(c, Decl(classWithPrivateProperty.ts, 13, 3))
->x : Symbol(C.x, Decl(classWithPrivateProperty.ts, 2, 9))
+>x : Symbol(x, Decl(classWithPrivateProperty.ts, 2, 9))
 
 var r2: string = c.a;
 >r2 : Symbol(r2, Decl(classWithPrivateProperty.ts, 15, 3))
->c.a : Symbol(C.a, Decl(classWithPrivateProperty.ts, 3, 14))
+>c.a : Symbol(a, Decl(classWithPrivateProperty.ts, 3, 14))
 >c : Symbol(c, Decl(classWithPrivateProperty.ts, 13, 3))
->a : Symbol(C.a, Decl(classWithPrivateProperty.ts, 3, 14))
+>a : Symbol(a, Decl(classWithPrivateProperty.ts, 3, 14))
 
 var r3: string = c.b;
 >r3 : Symbol(r3, Decl(classWithPrivateProperty.ts, 16, 3))
->c.b : Symbol(C.b, Decl(classWithPrivateProperty.ts, 4, 19))
+>c.b : Symbol(b, Decl(classWithPrivateProperty.ts, 4, 19))
 >c : Symbol(c, Decl(classWithPrivateProperty.ts, 13, 3))
->b : Symbol(C.b, Decl(classWithPrivateProperty.ts, 4, 19))
+>b : Symbol(b, Decl(classWithPrivateProperty.ts, 4, 19))
 
 var r4: string = c.c();
 >r4 : Symbol(r4, Decl(classWithPrivateProperty.ts, 17, 3))
->c.c : Symbol(C.c, Decl(classWithPrivateProperty.ts, 5, 27))
+>c.c : Symbol(c, Decl(classWithPrivateProperty.ts, 5, 27))
 >c : Symbol(c, Decl(classWithPrivateProperty.ts, 13, 3))
->c : Symbol(C.c, Decl(classWithPrivateProperty.ts, 5, 27))
+>c : Symbol(c, Decl(classWithPrivateProperty.ts, 5, 27))
 
 var r5: string = c.d();
 >r5 : Symbol(r5, Decl(classWithPrivateProperty.ts, 18, 3))
->c.d : Symbol(C.d, Decl(classWithPrivateProperty.ts, 6, 29))
+>c.d : Symbol(d, Decl(classWithPrivateProperty.ts, 6, 29))
 >c : Symbol(c, Decl(classWithPrivateProperty.ts, 13, 3))
->d : Symbol(C.d, Decl(classWithPrivateProperty.ts, 6, 29))
+>d : Symbol(d, Decl(classWithPrivateProperty.ts, 6, 29))
 
 var r6: string = C.e;
 >r6 : Symbol(r6, Decl(classWithPrivateProperty.ts, 19, 3))
->C.e : Symbol(C.e, Decl(classWithPrivateProperty.ts, 7, 25))
+>C.e : Symbol(e, Decl(classWithPrivateProperty.ts, 7, 25))
 >C : Symbol(C, Decl(classWithPrivateProperty.ts, 0, 0))
->e : Symbol(C.e, Decl(classWithPrivateProperty.ts, 7, 25))
+>e : Symbol(e, Decl(classWithPrivateProperty.ts, 7, 25))
 
 var r7: string = C.f();
 >r7 : Symbol(r7, Decl(classWithPrivateProperty.ts, 20, 3))
->C.f : Symbol(C.f, Decl(classWithPrivateProperty.ts, 8, 21))
+>C.f : Symbol(f, Decl(classWithPrivateProperty.ts, 8, 21))
 >C : Symbol(C, Decl(classWithPrivateProperty.ts, 0, 0))
->f : Symbol(C.f, Decl(classWithPrivateProperty.ts, 8, 21))
+>f : Symbol(f, Decl(classWithPrivateProperty.ts, 8, 21))
 
 var r8: string = C.g();
 >r8 : Symbol(r8, Decl(classWithPrivateProperty.ts, 21, 3))
->C.g : Symbol(C.g, Decl(classWithPrivateProperty.ts, 9, 36))
+>C.g : Symbol(g, Decl(classWithPrivateProperty.ts, 9, 36))
 >C : Symbol(C, Decl(classWithPrivateProperty.ts, 0, 0))
->g : Symbol(C.g, Decl(classWithPrivateProperty.ts, 9, 36))
+>g : Symbol(g, Decl(classWithPrivateProperty.ts, 9, 36))
 
