--- old.indexersInClassType.symbols
+++ new.indexersInClassType.symbols
@@= skipped -12, +12 lines =@@
 >Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 
     1: Date;
->1 : Symbol(C[1], Decl(indexersInClassType.ts, 2, 24))
+>1 : Symbol(1, Decl(indexersInClassType.ts, 2, 24))
 >Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --))
 
     'a': {}
->'a' : Symbol(C['a'], Decl(indexersInClassType.ts, 3, 12))
+>'a' : Symbol(a, Decl(indexersInClassType.ts, 3, 12))
 
     fn() {
->fn : Symbol(C.fn, Decl(indexersInClassType.ts, 4, 11))
+>fn : Symbol(fn, Decl(indexersInClassType.ts, 4, 11))
 
         return this;
 >this : Symbol(C, Decl(indexersInClassType.ts, 0, 0))
@@= skipped -20, +20 lines =@@
 
 var r = c.fn();
 >r : Symbol(r, Decl(indexersInClassType.ts, 12, 3))
->c.fn : Symbol(C.fn, Decl(indexersInClassType.ts, 4, 11))
+>c.fn : Symbol(fn, Decl(indexersInClassType.ts, 4, 11))
 >c : Symbol(c, Decl(indexersInClassType.ts, 11, 3))
->fn : Symbol(C.fn, Decl(indexersInClassType.ts, 4, 11))
+>fn : Symbol(fn, Decl(indexersInClassType.ts, 4, 11))
 
 var r2 = r[1];
 >r2 : Symbol(r2, Decl(indexersInClassType.ts, 13, 3))
 >r : Symbol(r, Decl(indexersInClassType.ts, 12, 3))
->1 : Symbol(C[1], Decl(indexersInClassType.ts, 2, 24))
+>1 : Symbol(1, Decl(indexersInClassType.ts, 2, 24))
 
 var r3 = r.a
 >r3 : Symbol(r3, Decl(indexersInClassType.ts, 14, 3))
->r.a : Symbol(C['a'], Decl(indexersInClassType.ts, 3, 12))
+>r.a : Symbol(a, Decl(indexersInClassType.ts, 3, 12))
 >r : Symbol(r, Decl(indexersInClassType.ts, 12, 3))
->a : Symbol(C['a'], Decl(indexersInClassType.ts, 3, 12))
+>a : Symbol(a, Decl(indexersInClassType.ts, 3, 12))
 
 
