--- old.nonPrimitiveInGeneric.types
+++ new.nonPrimitiveInGeneric.types
@@= skipped -2, +2 lines =@@
 === nonPrimitiveInGeneric.ts ===
 function generic<T>(t: T) {
 >generic : <T>(t: T) => void
+>T : T
 >t : T
 
     var o: object = t; // expect error
@@= skipped -36, +37 lines =@@
 
 function bound<T extends object>(t: T) {
 >bound : <T extends object>(t: T) => void
+>T : T
 >t : T
 
     var o: object = t; // ok
@@= skipped -29, +30 lines =@@
 
 function bound2<T extends object>() {}
 >bound2 : <T extends object>() => void
+>T : T
 
 bound2<{}>();
 >bound2<{}>() : void
@@= skipped -19, +20 lines =@@
 
 function bound3<T extends {}>(t: T) {
 >bound3 : <T extends {}>(t: T) => void
+>T : T
 >t : T
 
     var o: object = t; // ok
@@= skipped -8, +9 lines =@@
 }
 
 interface Proxy<T extends object> {}
+>Proxy : Proxy<T>
+>T : T
 
 var x: Proxy<number>; // error
 >x : Proxy<number>
@@= skipped -12, +14 lines =@@
 
 
 interface Blah {
+>Blah : Blah
+
     foo: number;
 >foo : number
 }
