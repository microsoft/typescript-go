--- old.bestCommonTypeOfConditionalExpressions2.symbols
+++ new.bestCommonTypeOfConditionalExpressions2.symbols
@@= skipped -5, +5 lines =@@
 
 class Base { foo: string; }
 >Base : Symbol(Base, Decl(bestCommonTypeOfConditionalExpressions2.ts, 0, 0))
->foo : Symbol(Base.foo, Decl(bestCommonTypeOfConditionalExpressions2.ts, 3, 12))
+>foo : Symbol(foo, Decl(bestCommonTypeOfConditionalExpressions2.ts, 3, 12))
 
 class Derived extends Base { bar: string; }
 >Derived : Symbol(Derived, Decl(bestCommonTypeOfConditionalExpressions2.ts, 3, 27))
 >Base : Symbol(Base, Decl(bestCommonTypeOfConditionalExpressions2.ts, 0, 0))
->bar : Symbol(Derived.bar, Decl(bestCommonTypeOfConditionalExpressions2.ts, 4, 28))
+>bar : Symbol(bar, Decl(bestCommonTypeOfConditionalExpressions2.ts, 4, 28))
 
 class Derived2 extends Base { baz: string; }
 >Derived2 : Symbol(Derived2, Decl(bestCommonTypeOfConditionalExpressions2.ts, 4, 43))
 >Base : Symbol(Base, Decl(bestCommonTypeOfConditionalExpressions2.ts, 0, 0))
->baz : Symbol(Derived2.baz, Decl(bestCommonTypeOfConditionalExpressions2.ts, 5, 29))
+>baz : Symbol(baz, Decl(bestCommonTypeOfConditionalExpressions2.ts, 5, 29))
 
 var base: Base;
 >base : Symbol(base, Decl(bestCommonTypeOfConditionalExpressions2.ts, 6, 3))
