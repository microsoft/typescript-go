--- old.constEnumNoObjectPrototypePropertyAccess.errors.txt
+++ new.constEnumNoObjectPrototypePropertyAccess.errors.txt
@@= skipped -0, +0 lines =@@
-constEnumNoObjectPrototypePropertyAccess.ts(5,19): error TS2339: Property 'constructor' does not exist on type 'typeof Bebra'.
-constEnumNoObjectPrototypePropertyAccess.ts(6,19): error TS2339: Property 'hasOwnProperty' does not exist on type 'typeof Bebra'.
-constEnumNoObjectPrototypePropertyAccess.ts(7,19): error TS2339: Property 'isPrototypeOf' does not exist on type 'typeof Bebra'.
-constEnumNoObjectPrototypePropertyAccess.ts(8,19): error TS2339: Property 'propertyIsEnumerable' does not exist on type 'typeof Bebra'.
-constEnumNoObjectPrototypePropertyAccess.ts(9,19): error TS2339: Property 'toLocaleString' does not exist on type 'typeof Bebra'.
-constEnumNoObjectPrototypePropertyAccess.ts(10,19): error TS2339: Property 'toString' does not exist on type 'typeof Bebra'.
-constEnumNoObjectPrototypePropertyAccess.ts(11,19): error TS2339: Property 'valueOf' does not exist on type 'typeof Bebra'.
+constEnumNoObjectPrototypePropertyAccess.ts(5,19): error TS2339: Property 'constructor' does not exist on type '{ readonly [x: number]: string; }'.
+constEnumNoObjectPrototypePropertyAccess.ts(6,19): error TS2339: Property 'hasOwnProperty' does not exist on type '{ readonly [x: number]: string; }'.
+constEnumNoObjectPrototypePropertyAccess.ts(7,19): error TS2339: Property 'isPrototypeOf' does not exist on type '{ readonly [x: number]: string; }'.
+constEnumNoObjectPrototypePropertyAccess.ts(8,19): error TS2339: Property 'propertyIsEnumerable' does not exist on type '{ readonly [x: number]: string; }'.
+constEnumNoObjectPrototypePropertyAccess.ts(9,19): error TS2339: Property 'toLocaleString' does not exist on type '{ readonly [x: number]: string; }'.
+constEnumNoObjectPrototypePropertyAccess.ts(10,19): error TS2339: Property 'toString' does not exist on type '{ readonly [x: number]: string; }'.
+constEnumNoObjectPrototypePropertyAccess.ts(11,19): error TS2339: Property 'valueOf' does not exist on type '{ readonly [x: number]: string; }'.
 
 
 ==== constEnumNoObjectPrototypePropertyAccess.ts (7 errors) ====
@@= skipped -13, +13 lines =@@
     
     console.log(Bebra.constructor)
                       ~~~~~~~~~~~
-!!! error TS2339: Property 'constructor' does not exist on type 'typeof Bebra'.
+!!! error TS2339: Property 'constructor' does not exist on type '{ readonly [x: number]: string; }'.
     console.log(Bebra.hasOwnProperty)
                       ~~~~~~~~~~~~~~
-!!! error TS2339: Property 'hasOwnProperty' does not exist on type 'typeof Bebra'.
+!!! error TS2339: Property 'hasOwnProperty' does not exist on type '{ readonly [x: number]: string; }'.
     console.log(Bebra.isPrototypeOf)
                       ~~~~~~~~~~~~~
-!!! error TS2339: Property 'isPrototypeOf' does not exist on type 'typeof Bebra'.
+!!! error TS2339: Property 'isPrototypeOf' does not exist on type '{ readonly [x: number]: string; }'.
     console.log(Bebra.propertyIsEnumerable)
                       ~~~~~~~~~~~~~~~~~~~~
-!!! error TS2339: Property 'propertyIsEnumerable' does not exist on type 'typeof Bebra'.
+!!! error TS2339: Property 'propertyIsEnumerable' does not exist on type '{ readonly [x: number]: string; }'.
     console.log(Bebra.toLocaleString)
                       ~~~~~~~~~~~~~~
-!!! error TS2339: Property 'toLocaleString' does not exist on type 'typeof Bebra'.
+!!! error TS2339: Property 'toLocaleString' does not exist on type '{ readonly [x: number]: string; }'.
     console.log(Bebra.toString)
                       ~~~~~~~~
-!!! error TS2339: Property 'toString' does not exist on type 'typeof Bebra'.
+!!! error TS2339: Property 'toString' does not exist on type '{ readonly [x: number]: string; }'.
     console.log(Bebra.valueOf)
                       ~~~~~~~
-!!! error TS2339: Property 'valueOf' does not exist on type 'typeof Bebra'.
+!!! error TS2339: Property 'valueOf' does not exist on type '{ readonly [x: number]: string; }'.
     
