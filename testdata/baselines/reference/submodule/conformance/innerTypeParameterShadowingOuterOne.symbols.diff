--- old.innerTypeParameterShadowingOuterOne.symbols
+++ new.innerTypeParameterShadowingOuterOne.symbols
@@ -19,18 +19,18 @@
 >T : Symbol(T, Decl(innerTypeParameterShadowingOuterOne.ts, 4, 15))
 
         x.toFixed();
->x.toFixed : Symbol(Number.toFixed, Decl(lib.es5.d.ts, --, --))
+>x.toFixed : Symbol(toFixed, Decl(lib.es5.d.ts, --, --))
 >x : Symbol(x, Decl(innerTypeParameterShadowingOuterOne.ts, 5, 11))
->toFixed : Symbol(Number.toFixed, Decl(lib.es5.d.ts, --, --))
+>toFixed : Symbol(toFixed, Decl(lib.es5.d.ts, --, --))
     }
     var x: T;
 >x : Symbol(x, Decl(innerTypeParameterShadowingOuterOne.ts, 8, 7))
 >T : Symbol(T, Decl(innerTypeParameterShadowingOuterOne.ts, 3, 11))
 
     x.getDate();
->x.getDate : Symbol(Date.getDate, Decl(lib.es5.d.ts, --, --))
+>x.getDate : Symbol(getDate, Decl(lib.es5.d.ts, --, --))
 >x : Symbol(x, Decl(innerTypeParameterShadowingOuterOne.ts, 8, 7))
->getDate : Symbol(Date.getDate, Decl(lib.es5.d.ts, --, --))
+>getDate : Symbol(getDate, Decl(lib.es5.d.ts, --, --))
 }
 
 function f2<T extends Date, U extends Date>() {
@@ -52,18 +52,18 @@
 >U : Symbol(U, Decl(innerTypeParameterShadowingOuterOne.ts, 13, 32))
 
         x.toFixed();
->x.toFixed : Symbol(Number.toFixed, Decl(lib.es5.d.ts, --, --))
+>x.toFixed : Symbol(toFixed, Decl(lib.es5.d.ts, --, --))
 >x : Symbol(x, Decl(innerTypeParameterShadowingOuterOne.ts, 14, 11))
->toFixed : Symbol(Number.toFixed, Decl(lib.es5.d.ts, --, --))
+>toFixed : Symbol(toFixed, Decl(lib.es5.d.ts, --, --))
     }
     var x: U;
 >x : Symbol(x, Decl(innerTypeParameterShadowingOuterOne.ts, 17, 7))
 >U : Symbol(U, Decl(innerTypeParameterShadowingOuterOne.ts, 12, 27))
 
     x.getDate();
->x.getDate : Symbol(Date.getDate, Decl(lib.es5.d.ts, --, --))
+>x.getDate : Symbol(getDate, Decl(lib.es5.d.ts, --, --))
 >x : Symbol(x, Decl(innerTypeParameterShadowingOuterOne.ts, 17, 7))
->getDate : Symbol(Date.getDate, Decl(lib.es5.d.ts, --, --))
+>getDate : Symbol(getDate, Decl(lib.es5.d.ts, --, --))
 }
 //function f2<T extends Date, U extends T>() {
 //    function g<T extends Number, U extends T>() {
