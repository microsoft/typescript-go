--- old.genericRestParameters3.js
+++ new.genericRestParameters3.js
@@= skipped -87, +87 lines =@@


 //// [genericRestParameters3.js]
-"use strict";
-var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
-    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
-        if (ar || !(i in from)) {
-            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
-            ar[i] = from[i];
-        }
-    }
-    return to.concat(ar || Array.prototype.slice.call(from));
-};
 f1("foo", "abc");
 f1("foo", 10, true);
-f1.apply(void 0, __spreadArray(["foo"], t1, false));
-f1.apply(void 0, __spreadArray(["foo"], t2, false));
-f1.apply(void 0, __spreadArray(["foo"], t3, false));
-f1.apply(void 0, __spreadArray(["foo"], t4, false));
+f1("foo", ...t1);
+f1("foo", ...t2);
+f1("foo", ...t3);
+f1("foo", ...t4);
 f1("foo", 10); // Error
 f1("foo"); // Error
 f2 = f1;
@@= skipped -27, +17 lines =@@
 foo(); // Error
 foo(100); // Error
 foo(foo); // Error
-function bar() {
-    var args = [];
-    for (var _i = 0; _i < arguments.length; _i++) {
-        args[_i] = arguments[_i];
-    }
+function bar(...args) {
     return args;
 }
-var a = bar(10, 20);
-var b = bar(10, 20); // Error
+let a = bar(10, 20);
+let b = bar(10, 20); // Error
 baz(); // Error
 baz(1); // Error
 baz(1, 2); // Error
-baz.apply(void 0, ca); // Error
+baz(...ca); // Error
 hmm(); // okay, A = []
 hmm(1, "s"); // okay, A = [1, "s"]
 hmm("what"); // no error?  A = [] | [number, string] ?
-var x2 = ["hello"];
-foo2.apply(void 0, x2);
+let x2 = ["hello"];
+foo2(...x2);
 ff1 = ff2;
 ff2 = ff1;
 function ff3(s1, s2) {