--- old.privateNameMethodsDerivedClasses.symbols
+++ new.privateNameMethodsDerivedClasses.symbols
@@= skipped -4, +4 lines =@@
 >Base : Symbol(Base, Decl(privateNameMethodsDerivedClasses.ts, 0, 0))
 
     #prop(): number{ return  123; }
->#prop : Symbol(Base.#prop, Decl(privateNameMethodsDerivedClasses.ts, 0, 12))
+>#prop : Symbol(#prop, Decl(privateNameMethodsDerivedClasses.ts, 0, 12))
 
     static method(x: Derived) {
->method : Symbol(Base.method, Decl(privateNameMethodsDerivedClasses.ts, 1, 35))
+>method : Symbol(method, Decl(privateNameMethodsDerivedClasses.ts, 1, 35))
 >x : Symbol(x, Decl(privateNameMethodsDerivedClasses.ts, 2, 18))
 >Derived : Symbol(Derived, Decl(privateNameMethodsDerivedClasses.ts, 5, 1))
 
         console.log(x.#prop());
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
->x.#prop : Symbol(Base.#prop, Decl(privateNameMethodsDerivedClasses.ts, 0, 12))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
+>x.#prop : Symbol(#prop, Decl(privateNameMethodsDerivedClasses.ts, 0, 12))
 >x : Symbol(x, Decl(privateNameMethodsDerivedClasses.ts, 2, 18))
     }
 }
@@= skipped -20, +20 lines =@@
 >Base : Symbol(Base, Decl(privateNameMethodsDerivedClasses.ts, 0, 0))
 
     static method(x: Derived) {
->method : Symbol(Derived.method, Decl(privateNameMethodsDerivedClasses.ts, 6, 28))
+>method : Symbol(method, Decl(privateNameMethodsDerivedClasses.ts, 6, 28))
 >x : Symbol(x, Decl(privateNameMethodsDerivedClasses.ts, 7, 18))
 >Derived : Symbol(Derived, Decl(privateNameMethodsDerivedClasses.ts, 5, 1))
 
         console.log(x.#prop());
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >x : Symbol(x, Decl(privateNameMethodsDerivedClasses.ts, 7, 18))
     }
 }
