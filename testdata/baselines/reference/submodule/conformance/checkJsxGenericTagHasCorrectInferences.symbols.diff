--- old.checkJsxGenericTagHasCorrectInferences.symbols
+++ new.checkJsxGenericTagHasCorrectInferences.symbols
@@ -9,11 +9,11 @@
 >T : Symbol(T, Decl(file.tsx, 1, 20))
 
   initialValues: T;
->initialValues : Symbol(BaseProps.initialValues, Decl(file.tsx, 1, 24))
+>initialValues : Symbol(initialValues, Decl(file.tsx, 1, 24))
 >T : Symbol(T, Decl(file.tsx, 1, 20))
 
   nextValues: (cur: T) => T;
->nextValues : Symbol(BaseProps.nextValues, Decl(file.tsx, 2, 19))
+>nextValues : Symbol(nextValues, Decl(file.tsx, 2, 19))
 >cur : Symbol(cur, Decl(file.tsx, 3, 15))
 >T : Symbol(T, Decl(file.tsx, 1, 20))
 >T : Symbol(T, Decl(file.tsx, 1, 20))
@@ -22,15 +22,15 @@
 >GenericComponent : Symbol(GenericComponent, Decl(file.tsx, 4, 1))
 >Props : Symbol(Props, Decl(file.tsx, 5, 31))
 >Values : Symbol(Values, Decl(file.tsx, 5, 42))
->React.Component : Symbol(React.Component, Decl(react.d.ts, 158, 55), Decl(react.d.ts, 161, 66))
+>React.Component : Symbol(unknown)
 >React : Symbol(React, Decl(file.tsx, 0, 6))
->Component : Symbol(React.Component, Decl(react.d.ts, 158, 55), Decl(react.d.ts, 161, 66))
+>Component : Symbol(unknown)
 >Props : Symbol(Props, Decl(file.tsx, 5, 31))
 >BaseProps : Symbol(BaseProps, Decl(file.tsx, 0, 31))
 >Values : Symbol(Values, Decl(file.tsx, 5, 42))
 
   iv: Values;
->iv : Symbol(GenericComponent.iv, Decl(file.tsx, 5, 116))
+>iv : Symbol(iv, Decl(file.tsx, 5, 116))
 >Values : Symbol(Values, Decl(file.tsx, 5, 42))
 }
 
@@ -59,9 +59,7 @@
 >nextValues : Symbol(nextValues, Decl(file.tsx, 11, 52))
 >a : Symbol(a, Decl(file.tsx, 11, 65))
 >x : Symbol(x, Decl(file.tsx, 11, 72))
->a.x : Symbol(x, Decl(file.tsx, 11, 42))
 >a : Symbol(a, Decl(file.tsx, 11, 65))
->x : Symbol(x, Decl(file.tsx, 11, 42))
 
 let d = <GenericComponent initialValues={{ x: "y" }} nextValues={a => a.x} />; // Error - `string` is not assignable to `{x: string}`
 >d : Symbol(d, Decl(file.tsx, 12, 3))
@@ -70,7 +68,5 @@
 >x : Symbol(x, Decl(file.tsx, 12, 42))
 >nextValues : Symbol(nextValues, Decl(file.tsx, 12, 52))
 >a : Symbol(a, Decl(file.tsx, 12, 65))
->a.x : Symbol(x, Decl(file.tsx, 12, 42))
 >a : Symbol(a, Decl(file.tsx, 12, 65))
->x : Symbol(x, Decl(file.tsx, 12, 42))
 
