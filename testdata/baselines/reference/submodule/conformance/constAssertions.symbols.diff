--- old.constAssertions.symbols
+++ new.constAssertions.symbols
@@= skipped -130, +130 lines =@@
 let o2 = { a: 1, 'b': 2, ['c']: 3, d() {}, ['e' + '']: 4 } as const;
 >o2 : Symbol(o2, Decl(constAssertions.ts, 36, 3))
 >a : Symbol(a, Decl(constAssertions.ts, 36, 10))
->'b' : Symbol('b', Decl(constAssertions.ts, 36, 16))
->['c'] : Symbol(['c'], Decl(constAssertions.ts, 36, 24))
->'c' : Symbol(['c'], Decl(constAssertions.ts, 36, 24))
+>'b' : Symbol(b, Decl(constAssertions.ts, 36, 16))
+>['c'] : Symbol(c, Decl(constAssertions.ts, 36, 24))
+>'c' : Symbol(c, Decl(constAssertions.ts, 36, 24))
 >d : Symbol(d, Decl(constAssertions.ts, 36, 34))
 >['e' + ''] : Symbol(['e' + ''], Decl(constAssertions.ts, 36, 42))
 >const : Symbol(const)
@@= skipped -41, +41 lines =@@
 >x : Symbol(x, Decl(constAssertions.ts, 43, 10))
 >foo : Symbol(foo, Decl(constAssertions.ts, 43, 17))
 >this.x : Symbol(x, Decl(constAssertions.ts, 43, 10))
->this : Symbol(__object, Decl(constAssertions.ts, 43, 8))
+>this : Symbol((Anonymous type), Decl(constAssertions.ts, 43, 8))
 >x : Symbol(x, Decl(constAssertions.ts, 43, 10))
 >const : Symbol(const)
 
@@= skipped -222, +222 lines =@@
 >Foo54374 : Symbol(Foo54374, Decl(constAssertions.ts, 107, 33))
 
   a: 1;
->a : Symbol(Foo54374.a, Decl(constAssertions.ts, 110, 20))
+>a : Symbol(a, Decl(constAssertions.ts, 110, 20))
 
   b: 2;
->b : Symbol(Foo54374.b, Decl(constAssertions.ts, 111, 7))
+>b : Symbol(b, Decl(constAssertions.ts, 111, 7))
 }
 
 const fooConst54374: Foo54374 = {
