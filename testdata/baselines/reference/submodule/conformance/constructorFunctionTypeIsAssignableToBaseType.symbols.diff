--- old.constructorFunctionTypeIsAssignableToBaseType.symbols
+++ new.constructorFunctionTypeIsAssignableToBaseType.symbols
@@ -5,7 +5,7 @@
 >Base : Symbol(Base, Decl(constructorFunctionTypeIsAssignableToBaseType.ts, 0, 0))
 
     static foo: {
->foo : Symbol(Base.foo, Decl(constructorFunctionTypeIsAssignableToBaseType.ts, 0, 12))
+>foo : Symbol(foo, Decl(constructorFunctionTypeIsAssignableToBaseType.ts, 0, 12))
 
         bar: Object;
 >bar : Symbol(bar, Decl(constructorFunctionTypeIsAssignableToBaseType.ts, 1, 17))
@@ -19,7 +19,7 @@
 
     // ok
     static foo: {
->foo : Symbol(Derived.foo, Decl(constructorFunctionTypeIsAssignableToBaseType.ts, 6, 28))
+>foo : Symbol(foo, Decl(constructorFunctionTypeIsAssignableToBaseType.ts, 6, 28))
 
         bar: number;
 >bar : Symbol(bar, Decl(constructorFunctionTypeIsAssignableToBaseType.ts, 8, 17))
@@ -32,7 +32,7 @@
 
     // ok, use assignability here
     static foo: {
->foo : Symbol(Derived2.foo, Decl(constructorFunctionTypeIsAssignableToBaseType.ts, 13, 29))
+>foo : Symbol(foo, Decl(constructorFunctionTypeIsAssignableToBaseType.ts, 13, 29))
 
         bar: any;
 >bar : Symbol(bar, Decl(constructorFunctionTypeIsAssignableToBaseType.ts, 15, 17))
