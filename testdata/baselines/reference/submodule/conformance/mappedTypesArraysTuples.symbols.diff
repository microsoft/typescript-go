--- old.mappedTypesArraysTuples.symbols
+++ new.mappedTypesArraysTuples.symbols
@@= skipped -42, +42 lines =@@
 type T13 = Boxified<ReadonlyArray<string>>;
 >T13 : Symbol(T13, Decl(mappedTypesArraysTuples.ts, 9, 30))
 >Boxified : Symbol(Boxified, Decl(mappedTypesArraysTuples.ts, 0, 27))
->ReadonlyArray : Symbol(ReadonlyArray, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>ReadonlyArray : Symbol(ReadonlyArray, Decl(lib.es5.d.ts, --, --))

 type T14 = Partial<ReadonlyArray<string>>;
 >T14 : Symbol(T14, Decl(mappedTypesArraysTuples.ts, 10, 43))
 >Partial : Symbol(Partial, Decl(lib.es5.d.ts, --, --))
->ReadonlyArray : Symbol(ReadonlyArray, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>ReadonlyArray : Symbol(ReadonlyArray, Decl(lib.es5.d.ts, --, --))

 type T15 = Required<ReadonlyArray<string>>;
 >T15 : Symbol(T15, Decl(mappedTypesArraysTuples.ts, 11, 42))
 >Required : Symbol(Required, Decl(lib.es5.d.ts, --, --))
->ReadonlyArray : Symbol(ReadonlyArray, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>ReadonlyArray : Symbol(ReadonlyArray, Decl(lib.es5.d.ts, --, --))

 type T20 = Boxified<(string | undefined)[]>;
 >T20 : Symbol(T20, Decl(mappedTypesArraysTuples.ts, 12, 43))
@@= skipped -27, +27 lines =@@
 type T23 = Boxified<ReadonlyArray<string | undefined>>;
 >T23 : Symbol(T23, Decl(mappedTypesArraysTuples.ts, 16, 44))
 >Boxified : Symbol(Boxified, Decl(mappedTypesArraysTuples.ts, 0, 27))
->ReadonlyArray : Symbol(ReadonlyArray, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>ReadonlyArray : Symbol(ReadonlyArray, Decl(lib.es5.d.ts, --, --))

 type T24 = Partial<ReadonlyArray<string | undefined>>;
 >T24 : Symbol(T24, Decl(mappedTypesArraysTuples.ts, 17, 55))
 >Partial : Symbol(Partial, Decl(lib.es5.d.ts, --, --))
->ReadonlyArray : Symbol(ReadonlyArray, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>ReadonlyArray : Symbol(ReadonlyArray, Decl(lib.es5.d.ts, --, --))

 type T25 = Required<ReadonlyArray<string | undefined>>;
 >T25 : Symbol(T25, Decl(mappedTypesArraysTuples.ts, 18, 54))
 >Required : Symbol(Required, Decl(lib.es5.d.ts, --, --))
->ReadonlyArray : Symbol(ReadonlyArray, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>ReadonlyArray : Symbol(ReadonlyArray, Decl(lib.es5.d.ts, --, --))

 type T30 = Boxified<Partial<string[]>>;
 >T30 : Symbol(T30, Decl(mappedTypesArraysTuples.ts, 19, 55))
@@= skipped -35, +35 lines =@@
 >Boxified : Symbol(Boxified, Decl(mappedTypesArraysTuples.ts, 0, 27))
 >A : Symbol(A, Decl(mappedTypesArraysTuples.ts, 22, 39))
 >A : Symbol(A, Decl(mappedTypesArraysTuples.ts, 22, 39))
->ReadonlyArray : Symbol(ReadonlyArray, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>ReadonlyArray : Symbol(ReadonlyArray, Decl(lib.es5.d.ts, --, --))
 >A : Symbol(A, Decl(mappedTypesArraysTuples.ts, 22, 39))
 >A : Symbol(A, Decl(mappedTypesArraysTuples.ts, 22, 39))
 >B : Symbol(B, Decl(mappedTypesArraysTuples.ts, 24, 23))
@@= skipped -134, +134 lines =@@
 >T : Symbol(T, Decl(mappedTypesArraysTuples.ts, 62, 21))
 >values : Symbol(values, Decl(mappedTypesArraysTuples.ts, 62, 38))
 >T : Symbol(T, Decl(mappedTypesArraysTuples.ts, 62, 21))
->Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --))
 >Awaitified : Symbol(Awaitified, Decl(mappedTypesArraysTuples.ts, 59, 59))
 >T : Symbol(T, Decl(mappedTypesArraysTuples.ts, 62, 21))

@@= skipped -8, +8 lines =@@
 >f1 : Symbol(f1, Decl(mappedTypesArraysTuples.ts, 62, 76))
 >a : Symbol(a, Decl(mappedTypesArraysTuples.ts, 64, 12))
 >b : Symbol(b, Decl(mappedTypesArraysTuples.ts, 64, 22))
->Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --))
 >c : Symbol(c, Decl(mappedTypesArraysTuples.ts, 64, 42))
 >d : Symbol(d, Decl(mappedTypesArraysTuples.ts, 64, 55))
->Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --))

     let x1 = all(a);
 >x1 : Symbol(x1, Decl(mappedTypesArraysTuples.ts, 65, 7))
@@= skipped -61, +61 lines =@@
 >ElementType : Symbol(ElementType, Decl(mappedTypesArraysTuples.ts, 74, 1))
 >T : Symbol(T, Decl(mappedTypesArraysTuples.ts, 78, 17))
 >T : Symbol(T, Decl(mappedTypesArraysTuples.ts, 78, 17))
->Array : Symbol(Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>Array : Symbol(Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 >U : Symbol(U, Decl(mappedTypesArraysTuples.ts, 78, 43))
 >U : Symbol(U, Decl(mappedTypesArraysTuples.ts, 78, 43))
