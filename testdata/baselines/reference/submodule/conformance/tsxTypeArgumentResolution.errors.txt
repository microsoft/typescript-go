error TS2318: Cannot find global type 'Array'.
error TS2318: Cannot find global type 'Function'.
error TS2318: Cannot find global type 'IArguments'.
error TS2318: Cannot find global type 'RegExp'.
error TS2318: Cannot find global type 'String'.
error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
error TS2552: Cannot find name 'Number'. Did you mean 'number'?
error TS2552: Cannot find name 'Object'. Did you mean 'object'?
file.tsx(1,24): error TS2307: Cannot find module 'react' or its corresponding type declarations.


!!! error TS2318: Cannot find global type 'Array'.
!!! error TS2318: Cannot find global type 'Function'.
!!! error TS2318: Cannot find global type 'IArguments'.
!!! error TS2318: Cannot find global type 'RegExp'.
!!! error TS2318: Cannot find global type 'String'.
!!! error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
!!! error TS2552: Cannot find name 'Number'. Did you mean 'number'?
!!! error TS2552: Cannot find name 'Object'. Did you mean 'object'?
==== file.tsx (1 errors) ====
    import React = require('react');
                           ~~~~~~~
!!! error TS2307: Cannot find module 'react' or its corresponding type declarations.
    
    interface Prop {
        a: number,
        b: string
    }
    
    declare class MyComp<P> extends React.Component<P, {}> {
        internalProp: P;
    }
    
    let x = <MyComp<Prop> a={10} b="hi" />; // OK
    
    x = <MyComp<Prop> a={10} b="hi"></MyComp>; // OK
    
    x = <MyComp<Prop> a={10} b={20} />; // error
    
    x = <MyComp<Prop> a={10} b={20}></MyComp>; // error
    
    x = <MyComp<Prop, Prop> a={10} b="hi" />; // error
    
    x = <MyComp<Prop, Prop> a={10} b="hi"></MyComp>; // error
    
    x = <MyComp<> a={10} b="hi" />; // error
    
    x = <MyComp<> a={10} b="hi"></MyComp>; // error
    
    x= <MyComp<{}> /> // OK
    
    x= <MyComp<{}>></MyComp> // OK
    
    declare class MyComp2<P extends { a: string }, P2 = {}> extends React.Component<P & P2, {}> {
        internalProp: [P, P2];
    }
    x = <MyComp2<{a: string, b: string}> a="a" b="b" />; // OK
    
    x = <MyComp2<{a: string, b: string}> a="a" b="b"></MyComp2>; // OK
    
    x = <MyComp2<Prop> a={10} b="hi" />; // error
    
    x = <MyComp2<Prop> a={10} b="hi"></MyComp2>; // error
    
    x = <MyComp2<{a: string}, {b: string}> a="hi" b="hi" />; // OK
    
    x = <MyComp2<{a: string}, {b: string}> a="hi" b="hi"></MyComp2>; // OK
    
    x = <MyComp2<{a: string}, {b: string}, Prop> a="hi" b="hi" />; // error
    
    x = <MyComp2<{a: string}, {b: string}, Prop> a="hi" b="hi"></MyComp2>; // error
    
    x = <MyComp2<{a: string}, {b: number}> a="hi" b="hi" />; // error
    
    x = <MyComp2<{a: string}, {b: number}> a="hi" b="hi"></MyComp2>; // error
    