--- old.spreadOverwritesProperty.js
+++ new.spreadOverwritesProperty.js
@@= skipped -16, +16 lines =@@


 //// [spreadOverwritesProperty.js]
-var unused1 = Object.assign({ b: 1 }, ab);
-var unused2 = Object.assign(Object.assign({}, ab), ab);
-var unused3 = Object.assign({ b: 1 }, abq);
+var __assign = (this && this.__assign) || function () {
+    __assign = Object.assign || function(t) {
+        for (var s, i = 1, n = arguments.length; i < n; i++) {
+            s = arguments[i];
+            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
+                t[p] = s[p];
+        }
+        return t;
+    };
+    return __assign.apply(this, arguments);
+};
+var unused1 = __assign({ b: 1 }, ab);
+var unused2 = __assign(__assign({}, ab), ab);
+var unused3 = __assign({ b: 1 }, abq);
 function g(obj) {
-    return Object.assign({ x: 1 }, obj);
+    return __assign({ x: 1 }, obj);
 }
 function h(obj) {
-    return Object.assign({ x: 1 }, obj);
+    return __assign({ x: 1 }, obj);
 }