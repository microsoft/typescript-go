--- old.derivedTypeDoesNotRequireExtendsClause.symbols
+++ new.derivedTypeDoesNotRequireExtendsClause.symbols
@@= skipped -4, +4 lines =@@
 >Base : Symbol(Base, Decl(derivedTypeDoesNotRequireExtendsClause.ts, 0, 0))
 
     foo: string;
->foo : Symbol(Base.foo, Decl(derivedTypeDoesNotRequireExtendsClause.ts, 0, 12))
+>foo : Symbol(foo, Decl(derivedTypeDoesNotRequireExtendsClause.ts, 0, 12))
 }
 
 class Derived {
 >Derived : Symbol(Derived, Decl(derivedTypeDoesNotRequireExtendsClause.ts, 2, 1))
 
     foo: string;
->foo : Symbol(Derived.foo, Decl(derivedTypeDoesNotRequireExtendsClause.ts, 4, 15))
+>foo : Symbol(foo, Decl(derivedTypeDoesNotRequireExtendsClause.ts, 4, 15))
 
     bar: number;
->bar : Symbol(Derived.bar, Decl(derivedTypeDoesNotRequireExtendsClause.ts, 5, 16))
+>bar : Symbol(bar, Decl(derivedTypeDoesNotRequireExtendsClause.ts, 5, 16))
 }
 
 class Derived2 extends Base {
@@= skipped -18, +18 lines =@@
 >Base : Symbol(Base, Decl(derivedTypeDoesNotRequireExtendsClause.ts, 0, 0))
 
     bar: string;
->bar : Symbol(Derived2.bar, Decl(derivedTypeDoesNotRequireExtendsClause.ts, 9, 29))
+>bar : Symbol(bar, Decl(derivedTypeDoesNotRequireExtendsClause.ts, 9, 29))
 }
 
 var b: Base;
