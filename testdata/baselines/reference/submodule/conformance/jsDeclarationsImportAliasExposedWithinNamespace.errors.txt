file.js(4,11): error TS2315: Type 'Object' is not generic.
file2.js(6,11): error TS2315: Type 'Object' is not generic.


==== file.js (1 errors) ====
    /**
     * @namespace myTypes
     * @global
     * @type {Object<string,*>}
              ~~~~~~~~~~~~~~~~
!!! error TS2315: Type 'Object' is not generic.
     */
    const myTypes = {
        // SOME PROPS HERE
    };
    
    /** @typedef {string|RegExp|Array<string|RegExp>} myTypes.typeA */
    
    /**
     * @typedef myTypes.typeB
     * @property {myTypes.typeA}    prop1 - Prop 1.
     * @property {string}           prop2 - Prop 2.
     */
    
    /** @typedef {myTypes.typeB|Function} myTypes.typeC */
    
    export {myTypes};
==== file2.js (1 errors) ====
    import {myTypes} from './file.js';
    
    /**
     * @namespace testFnTypes
     * @global
     * @type {Object<string,*>}
              ~~~~~~~~~~~~~~~~
!!! error TS2315: Type 'Object' is not generic.
     */
    const testFnTypes = {
        // SOME PROPS HERE
    };
    
    /** @typedef {boolean|myTypes.typeC} testFnTypes.input */
    
    /**
     * @function testFn
     * @description A test function.
     * @param {testFnTypes.input} input - Input.
     * @returns {number|null} Result.
     */
    function testFn(input) {
        if (typeof input === 'number') {
            return 2 * input;
        } else {
            return null;
        }
    }
    
    export {testFn, testFnTypes};