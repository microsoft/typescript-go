--- old.moduleExportAssignment6.symbols
+++ new.moduleExportAssignment6.symbols
@@ -9,26 +9,20 @@
 >x : Symbol(x, Decl(webpackLibNormalModule.js, 2, 16))
 
         this.x = x
->this.x : Symbol(C.x, Decl(webpackLibNormalModule.js, 2, 20))
 >this : Symbol(C, Decl(webpackLibNormalModule.js, 0, 0))
->x : Symbol(C.x, Decl(webpackLibNormalModule.js, 2, 20))
 >x : Symbol(x, Decl(webpackLibNormalModule.js, 2, 16))
 
         this.exports = [x]
->this.exports : Symbol(C.exports, Decl(webpackLibNormalModule.js, 3, 18))
 >this : Symbol(C, Decl(webpackLibNormalModule.js, 0, 0))
->exports : Symbol(C.exports, Decl(webpackLibNormalModule.js, 3, 18))
 >x : Symbol(x, Decl(webpackLibNormalModule.js, 2, 16))
     }
     /** @param {number} y */
     m(y) {
->m : Symbol(C.m, Decl(webpackLibNormalModule.js, 5, 5))
+>m : Symbol(m, Decl(webpackLibNormalModule.js, 5, 5))
 >y : Symbol(y, Decl(webpackLibNormalModule.js, 7, 6))
 
         return this.x + y
->this.x : Symbol(C.x, Decl(webpackLibNormalModule.js, 2, 20))
 >this : Symbol(C, Decl(webpackLibNormalModule.js, 0, 0))
->x : Symbol(C.x, Decl(webpackLibNormalModule.js, 2, 20))
 >y : Symbol(y, Decl(webpackLibNormalModule.js, 7, 6))
     }
 }
@@ -40,9 +34,7 @@
 >C : Symbol(C, Decl(webpackLibNormalModule.js, 0, 0))
 
     return module.exports; // should be fine because `module` is defined locally
->module.exports : Symbol(C.exports, Decl(webpackLibNormalModule.js, 3, 18))
 >module : Symbol(module, Decl(webpackLibNormalModule.js, 12, 9))
->exports : Symbol(C.exports, Decl(webpackLibNormalModule.js, 3, 18))
 }
 
 function tricky() {
@@ -55,9 +47,7 @@
 
     return () => {
         return module.exports;
->module.exports : Symbol(C.exports, Decl(webpackLibNormalModule.js, 3, 18))
 >module : Symbol(module, Decl(webpackLibNormalModule.js, 18, 9))
->exports : Symbol(C.exports, Decl(webpackLibNormalModule.js, 3, 18))
     }
 }
 
