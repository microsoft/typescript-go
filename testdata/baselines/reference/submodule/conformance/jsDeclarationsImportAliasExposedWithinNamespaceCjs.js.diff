--- old.jsDeclarationsImportAliasExposedWithinNamespaceCjs.js
+++ new.jsDeclarationsImportAliasExposedWithinNamespaceCjs.js
@@= skipped -50, +50 lines =@@
 
 module.exports = {testFn, testFnTypes};
 
-
-
-//// [file.d.ts]
-/**
- * @namespace myTypes
- * @global
- * @type {Object<string,*>}
- */
-export const myTypes: {
-    [x: string]: any;
-};
-export namespace myTypes {
-    type typeA = string | RegExp | Array<string | RegExp>;
-    type typeB = {
-        /**
-         * - Prop 1.
-         */
-        prop1: myTypes.typeA;
-        /**
-         * - Prop 2.
-         */
-        prop2: string;
-    };
-    type typeC = myTypes.typeB | Function;
+//// [file2.js]
+const { myTypes } = require('./file.js');
+const testFnTypes = {};
+function testFn(input) {
+    if (typeof input === 'number') {
+        return 2 * input;
+    }
+    else {
+        return null;
+    }
 }
-//// [file2.d.ts]
-/** @typedef {boolean|myTypes.typeC} testFnTypes.input */
-/**
- * @function testFn
- * @description A test function.
- * @param {testFnTypes.input} input - Input.
- * @returns {number|null} Result.
- */
-export function testFn(input: testFnTypes.input): number | null;
-/**
- * @namespace testFnTypes
- * @global
- * @type {Object<string,*>}
- */
-export const testFnTypes: {
-    [x: string]: any;
-};
-export namespace testFnTypes {
-    type input = boolean | myTypes.typeC;
-}
-import { myTypes } from "./file.js";
+module.exports = { testFn, testFnTypes };
