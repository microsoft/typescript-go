--- old.symbolProperty26.symbols
+++ new.symbolProperty26.symbols
@@= skipped -4, +4 lines =@@
 >C1 : Symbol(C1, Decl(symbolProperty26.ts, 0, 0))
 
     [Symbol.toStringTag]() {
->[Symbol.toStringTag] : Symbol(C1[Symbol.toStringTag], Decl(symbolProperty26.ts, 0, 10))
->Symbol.toStringTag : Symbol(SymbolConstructor.toStringTag, Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
->Symbol : Symbol(Symbol, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
->toStringTag : Symbol(SymbolConstructor.toStringTag, Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>[Symbol.toStringTag] : Symbol([Symbol.toStringTag], Decl(symbolProperty26.ts, 0, 10))
 
         return "";
     }
@@= skipped -14, +11 lines =@@
 >C1 : Symbol(C1, Decl(symbolProperty26.ts, 0, 0))
 
     [Symbol.toStringTag]() {
->[Symbol.toStringTag] : Symbol(C2[Symbol.toStringTag], Decl(symbolProperty26.ts, 6, 21))
->Symbol.toStringTag : Symbol(SymbolConstructor.toStringTag, Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
->Symbol : Symbol(Symbol, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
->toStringTag : Symbol(SymbolConstructor.toStringTag, Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>[Symbol.toStringTag] : Symbol([Symbol.toStringTag], Decl(symbolProperty26.ts, 6, 21))
 
         return "";
     }
