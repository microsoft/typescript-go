--- old.errorSuperCalls.js
+++ new.errorSuperCalls.js
@@= skipped -76, +76 lines =@@


 //// [errorSuperCalls.js]
-var _a;
 //super call in class constructor with no base type
 class NoBase {
     constructor() {
         super();
-        //super call in class member initializer with no base type
-        this.p = super();
     }
     //super call in class member function with no base type
     fn() {
@@= skipped -20, +17 lines =@@
     set foo(v) {
         super();
     }
+    //super call in class member initializer with no base type
+    p = super();
     //super call in static class member function with no base type
     static fn() {
         super();
     }
+    //super call in static class member initializer with no base type
+    static k = super();
     //super call in static class accessor (get and set) with no base type
     static get q() {
         super();
@@= skipped -13, +17 lines =@@
         super();
     }
 }
-_a = NoBase;
-//super call in static class member initializer with no base type
-NoBase.k = super();
 class Base {
+    n;
 }
 class Derived extends Base {
     //super call with type arguments 
@@= skipped -13, +11 lines =@@
     }
 }
 class OtherBase {
+    n;
 }
 class OtherDerived extends OtherBase {
-    constructor() {
-        super(...arguments);
-        //super call in class member initializer of derived type
-        this.t = super();
-    }
+    //super call in class member initializer of derived type
+    t = super();
     fn() {
         //super call in class member function of derived type
         super();