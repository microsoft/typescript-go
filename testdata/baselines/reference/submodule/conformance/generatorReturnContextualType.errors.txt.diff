--- old.generatorReturnContextualType.errors.txt
+++ new.generatorReturnContextualType.errors.txt
@@= skipped -0, +0 lines =@@
-generatorReturnContextualType.ts(29,3): error TS2322: Type '{ x: string; }' is not assignable to type '{ x: "x"; }'.
+generatorReturnContextualType.ts(29,3): error TS2322: Type '{ x: string }' is not assignable to type '{ x: "x" }'.
   Types of property 'x' are incompatible.
     Type 'string' is not assignable to type '"x"'.
-generatorReturnContextualType.ts(34,3): error TS2322: Type '{ x: string; }' is not assignable to type '{ x: "x"; }'.
+generatorReturnContextualType.ts(34,3): error TS2322: Type '{ x: string }' is not assignable to type '{ x: "x" }'.
   Types of property 'x' are incompatible.
     Type 'string' is not assignable to type '"x"'.
 
@@= skipped -36, +36 lines =@@
       const ret = { x: 'x' };
       return Promise.resolve(ret); // Error
       ~~~~~~
-!!! error TS2322: Type '{ x: string; }' is not assignable to type '{ x: "x"; }'.
+!!! error TS2322: Type '{ x: string }' is not assignable to type '{ x: "x" }'.
 !!! error TS2322:   Types of property 'x' are incompatible.
 !!! error TS2322:     Type 'string' is not assignable to type '"x"'.
     }
@@= skipped -9, +9 lines =@@
       const ret = { x: 'x' };
       return Promise.resolve(ret); // Error
       ~~~~~~
-!!! error TS2322: Type '{ x: string; }' is not assignable to type '{ x: "x"; }'.
+!!! error TS2322: Type '{ x: string }' is not assignable to type '{ x: "x" }'.
 !!! error TS2322:   Types of property 'x' are incompatible.
 !!! error TS2322:     Type 'string' is not assignable to type '"x"'.
     }
