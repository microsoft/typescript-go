--- old.nodeModulesDeclarationEmitWithPackageExports(module=node18).js
+++ new.nodeModulesDeclarationEmitWithPackageExports(module=node18).js
@@= skipped -106, +106 lines =@@
 export const f = typei;
 //// [index.cjs]
 "use strict";
-var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
-    if (k2 === undefined) k2 = k;
-    var desc = Object.getOwnPropertyDescriptor(m, k);
-    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
-      desc = { enumerable: true, get: function() { return m[k]; } };
-    }
-    Object.defineProperty(o, k2, desc);
-}) : (function(o, m, k, k2) {
-    if (k2 === undefined) k2 = k;
-    o[k2] = m[k];
-}));
-var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
-    Object.defineProperty(o, "default", { enumerable: true, value: v });
-}) : function(o, v) {
-    o["default"] = v;
-});
-var __importStar = (this && this.__importStar) || (function () {
-    var ownKeys = function(o) {
-        ownKeys = Object.getOwnPropertyNames || function (o) {
-            var ar = [];
-            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
-            return ar;
-        };
-        return ownKeys(o);
-    };
-    return function (mod) {
-        if (mod && mod.__esModule) return mod;
-        var result = {};
-        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
-        __setModuleDefault(result, mod);
-        return result;
-    };
-})();
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.f = exports.e = exports.d = exports.c = exports.b = exports.a = void 0;
 // cjs format file
-const cjs = __importStar(require("package/cjs"));
-const mjs = __importStar(require("package/mjs"));
-const type = __importStar(require("package"));
+const cjs = require("package/cjs");
+const mjs = require("package/mjs");
+const type = require("package");
 exports.a = cjs;
 exports.b = mjs;
 exports.c = type;
-const cjsi = __importStar(require("inner/cjs"));
-const mjsi = __importStar(require("inner/mjs"));
-const typei = __importStar(require("inner"));
+const cjsi = require("inner/cjs");
+const mjsi = require("inner/mjs");
+const typei = require("inner");
 exports.d = cjsi;
 exports.e = mjsi;
 exports.f = typei;
@@= skipped -65, +32 lines =@@


 //// [index.d.mts]
+// esm format file
 import * as cjs from "package/cjs";
 import * as mjs from "package/mjs";
 import * as type from "package";
@@= skipped -13, +14 lines =@@
 export declare const e: typeof mjsi;
 export declare const f: typeof typei;
 //// [index.d.cts]
+// cjs format file
 import * as cjs from "package/cjs";
 import * as mjs from "package/mjs";
 import * as type from "package";
@@= skipped -13, +14 lines =@@
 export declare const e: typeof mjsi;
 export declare const f: typeof typei;
 //// [index.d.ts]
+// esm format file
 import * as cjs from "package/cjs";
 import * as mjs from "package/mjs";
 import * as type from "package";