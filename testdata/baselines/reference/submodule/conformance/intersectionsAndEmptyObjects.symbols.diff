--- old.intersectionsAndEmptyObjects.symbols
+++ new.intersectionsAndEmptyObjects.symbols
@@= skipped -117, +117 lines =@@
 ): F1 & F2 => Object.assign({}, d1, d2);
 >F1 : Symbol(F1, Decl(intersectionsAndEmptyObjects.ts, 30, 31))
 >F2 : Symbol(F2, Decl(intersectionsAndEmptyObjects.ts, 30, 53))
->Object.assign : Symbol(ObjectConstructor.assign, Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --))
+>Object.assign : Symbol(assign, Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --))
 >Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->assign : Symbol(ObjectConstructor.assign, Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --))
+>assign : Symbol(assign, Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --))
 >d1 : Symbol(d1, Decl(intersectionsAndEmptyObjects.ts, 30, 77))
 >d2 : Symbol(d2, Decl(intersectionsAndEmptyObjects.ts, 31, 9))
 
@@= skipped -156, +156 lines =@@
 
 mock(import('./ex'))
 >mock : Symbol(mock, Decl(intersectionsAndEmptyObjects.ts, 80, 52))
->'./ex' : Symbol("ex", Decl(ex.d.ts, 0, 0))
 
 === ex.d.ts ===
 
