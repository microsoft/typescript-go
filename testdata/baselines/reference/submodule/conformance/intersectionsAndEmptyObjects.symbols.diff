--- old.intersectionsAndEmptyObjects.symbols
+++ new.intersectionsAndEmptyObjects.symbols
@@= skipped -117, +117 lines =@@
 ): F1 & F2 => Object.assign({}, d1, d2);
 >F1 : Symbol(F1, Decl(intersectionsAndEmptyObjects.ts, 30, 31))
 >F2 : Symbol(F2, Decl(intersectionsAndEmptyObjects.ts, 30, 53))
->Object.assign : Symbol(ObjectConstructor.assign, Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --))
->Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
->assign : Symbol(ObjectConstructor.assign, Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --))
 >d1 : Symbol(d1, Decl(intersectionsAndEmptyObjects.ts, 30, 77))
 >d2 : Symbol(d2, Decl(intersectionsAndEmptyObjects.ts, 31, 9))
 
@@= skipped -150, +147 lines =@@
 >mock : Symbol(mock, Decl(intersectionsAndEmptyObjects.ts, 80, 52))
 >M : Symbol(M, Decl(intersectionsAndEmptyObjects.ts, 84, 22))
 >_ : Symbol(_, Decl(intersectionsAndEmptyObjects.ts, 84, 25))
->Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>Promise : Symbol(Promise)
 >M : Symbol(M, Decl(intersectionsAndEmptyObjects.ts, 84, 22))
 >M : Symbol(M, Decl(intersectionsAndEmptyObjects.ts, 84, 22))
 
 mock(import('./ex'))
 >mock : Symbol(mock, Decl(intersectionsAndEmptyObjects.ts, 80, 52))
->'./ex' : Symbol("ex", Decl(ex.d.ts, 0, 0))
 
 === ex.d.ts ===
 
