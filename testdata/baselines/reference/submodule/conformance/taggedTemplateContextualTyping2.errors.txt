error TS2318: Cannot find global type 'Array'.
error TS2318: Cannot find global type 'Function'.
error TS2318: Cannot find global type 'IArguments'.
error TS2318: Cannot find global type 'RegExp'.
error TS2318: Cannot find global type 'String'.
error TS2318: Cannot find global type 'TemplateStringsArray'.
error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
error TS2552: Cannot find name 'Number'. Did you mean 'number'?
error TS2552: Cannot find name 'Object'. Did you mean 'object'?
taggedTemplateContextualTyping2.ts(4,33): error TS2304: Cannot find name 'TemplateStringsArray'.
taggedTemplateContextualTyping2.ts(5,33): error TS2304: Cannot find name 'TemplateStringsArray'.


!!! error TS2318: Cannot find global type 'Array'.
!!! error TS2318: Cannot find global type 'Function'.
!!! error TS2318: Cannot find global type 'IArguments'.
!!! error TS2318: Cannot find global type 'RegExp'.
!!! error TS2318: Cannot find global type 'String'.
!!! error TS2318: Cannot find global type 'TemplateStringsArray'.
!!! error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
!!! error TS2552: Cannot find name 'Number'. Did you mean 'number'?
!!! error TS2552: Cannot find name 'Object'. Did you mean 'object'?
==== taggedTemplateContextualTyping2.ts (2 errors) ====
    type FuncType1 = (x: <T>(p: T) => T) => typeof x;
    type FuncType2 = (x: <S, T>(p: T) => T) => typeof x;
    
    function tempTag2(templateStrs: TemplateStringsArray, f: FuncType1, x: number): number;
                                    ~~~~~~~~~~~~~~~~~~~~
!!! error TS2304: Cannot find name 'TemplateStringsArray'.
    function tempTag2(templateStrs: TemplateStringsArray, f: FuncType2, h: FuncType2, x: string): string;
                                    ~~~~~~~~~~~~~~~~~~~~
!!! error TS2304: Cannot find name 'TemplateStringsArray'.
    function tempTag2(...rest: any[]): any {
        return undefined;
    }
    
    // If contextual typing takes place, these functions should work.
    // Otherwise, the arrow functions' parameters will be typed as 'any',
    // and it is an error to invoke an any-typed value with type arguments,
    // so this test will error.
    tempTag2 `${ x => { x<number>(undefined); return x; }         }${ 0 }`;
    tempTag2 `${ x => { x<number, string>(undefined); return x; } }${ y => { y<string, number>(null); return y; } }${ "hello" }`;
    tempTag2 `${ x => { x<number, string>(undefined); return x; } }${ undefined }${ "hello" }`;