--- old.arbitraryModuleNamespaceIdentifiers_module(module=amd).js
+++ new.arbitraryModuleNamespaceIdentifiers_module(module=amd).js
@@= skipped -32, +32 lines =@@


 //// [arbitraryModuleNamespaceIdentifiers_module.js]
-define(["require", "exports", "./arbitraryModuleNamespaceIdentifiers_module", "./arbitraryModuleNamespaceIdentifiers_module", "./arbitraryModuleNamespaceIdentifiers_module", "./arbitraryModuleNamespaceIdentifiers_module", "./arbitraryModuleNamespaceIdentifiers_module"], function (require, exports, arbitraryModuleNamespaceIdentifiers_module_1, arbitraryModuleNamespaceIdentifiers_module_2, arbitraryModuleNamespaceIdentifiers_module_3, arbitraryModuleNamespaceIdentifiers_module_4, arbitraryModuleNamespaceIdentifiers_module_5) {
-    "use strict";
-    Object.defineProperty(exports, "__esModule", { value: true });
-    exports["<Z>"] = exports["<Y>"] = exports["<X>"] = void 0;
-    const someValue = "someValue";
-    exports["<X>"] = someValue;
-    if (arbitraryModuleNamespaceIdentifiers_module_1["<X>"] !== "someValue")
-        throw "should be someValue";
-    Object.defineProperty(exports, "<Y>", { enumerable: true, get: function () { return arbitraryModuleNamespaceIdentifiers_module_2["<X>"]; } });
-    if (arbitraryModuleNamespaceIdentifiers_module_3["<Y>"] !== "someValue")
-        throw "should be someValue";
-    exports["<Z>"] = arbitraryModuleNamespaceIdentifiers_module_4;
-    if (arbitraryModuleNamespaceIdentifiers_module_5["<Z>"]["<X>"] !== "someValue")
-        throw "should be someValue";
-    if (arbitraryModuleNamespaceIdentifiers_module_5["<Z>"]["<Y>"] !== "someValue")
-        throw "should be someValue";
-    if (arbitraryModuleNamespaceIdentifiers_module_5["<Z>"]["<Z>"] !== arbitraryModuleNamespaceIdentifiers_module_5["<Z>"])
-        throw "should be export namespace";
-    const importTest = "expect error about someType";
-    const reimportTest = "expect error about someType";
-    const importStarTestA = "expect error about otherType";
-});
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports["<Z>"] = exports["<Y>"] = exports["<X>"] = void 0;
+const someValue = "someValue";
+exports["<X>"] = someValue;
+const arbitraryModuleNamespaceIdentifiers_module_1 = require("./arbitraryModuleNamespaceIdentifiers_module");
+if (arbitraryModuleNamespaceIdentifiers_module_1["<X>"] !== "someValue")
+    throw "should be someValue";
+const arbitraryModuleNamespaceIdentifiers_module_2 = require("./arbitraryModuleNamespaceIdentifiers_module");
+Object.defineProperty(exports, "<Y>", { enumerable: true, get: function () { return arbitraryModuleNamespaceIdentifiers_module_2["<X>"]; } });
+const arbitraryModuleNamespaceIdentifiers_module_3 = require("./arbitraryModuleNamespaceIdentifiers_module");
+if (arbitraryModuleNamespaceIdentifiers_module_3["<Y>"] !== "someValue")
+    throw "should be someValue";
+exports["<Z>"] = require("./arbitraryModuleNamespaceIdentifiers_module");
+const arbitraryModuleNamespaceIdentifiers_module_4 = require("./arbitraryModuleNamespaceIdentifiers_module");
+if (arbitraryModuleNamespaceIdentifiers_module_4["<Z>"]["<X>"] !== "someValue")
+    throw "should be someValue";
+if (arbitraryModuleNamespaceIdentifiers_module_4["<Z>"]["<Y>"] !== "someValue")
+    throw "should be someValue";
+if (arbitraryModuleNamespaceIdentifiers_module_4["<Z>"]["<Z>"] !== arbitraryModuleNamespaceIdentifiers_module_4["<Z>"])
+    throw "should be export namespace";
+const importTest = "expect error about someType";
+const reimportTest = "expect error about someType";
+const importStarTestA = "expect error about otherType";


 //// [arbitraryModuleNamespaceIdentifiers_module.d.ts]