--- old.objectSpreadRepeatedComplexity.js
+++ new.objectSpreadRepeatedComplexity.js
@@= skipped -86, +86 lines =@@
 }

 //// [objectSpreadRepeatedComplexity.js]
-"use strict";
+var __assign = (this && this.__assign) || function () {
+    __assign = Object.assign || function(t) {
+        for (var s, i = 1, n = arguments.length; i < n; i++) {
+            s = arguments[i];
+            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
+                t[p] = s[p];
+        }
+        return t;
+    };
+    return __assign.apply(this, arguments);
+};
 function f(cnd) {
     // Type is a union of 2^(n-1) members, where n is the number of spread objects
-    return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, (cnd[1] &&
+    return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (cnd[1] &&
         cnd[2] && {
         prop0: 0,
     })), (cnd[3] && {