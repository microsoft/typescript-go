--- old.tsxSpreadChildrenInvalidType(jsx=react-jsx,target=es2015).errors.txt
+++ new.tsxSpreadChildrenInvalidType(jsx=react-jsx,target=es2015).errors.txt
@@= skipped -0, +0 lines =@@
-tsxSpreadChildrenInvalidType.tsx(17,12): error TS2792: Cannot find module 'react/jsx-runtime'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?
-tsxSpreadChildrenInvalidType.tsx(21,9): error TS2609: JSX spread child must be an array type.
+error TS2318: Cannot find global type 'Array'.
+error TS2318: Cannot find global type 'Function'.
+error TS2318: Cannot find global type 'IArguments'.
+error TS2318: Cannot find global type 'RegExp'.
+error TS2318: Cannot find global type 'String'.
+error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
+error TS2552: Cannot find name 'Number'. Did you mean 'number'?
+error TS2552: Cannot find name 'Object'. Did you mean 'object'?
 
 
-==== tsxSpreadChildrenInvalidType.tsx (2 errors) ====
+!!! error TS2318: Cannot find global type 'Array'.
+!!! error TS2318: Cannot find global type 'Function'.
+!!! error TS2318: Cannot find global type 'IArguments'.
+!!! error TS2318: Cannot find global type 'RegExp'.
+!!! error TS2318: Cannot find global type 'String'.
+!!! error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
+!!! error TS2552: Cannot find name 'Number'. Did you mean 'number'?
+!!! error TS2552: Cannot find name 'Object'. Did you mean 'object'?
+==== tsxSpreadChildrenInvalidType.tsx (0 errors) ====
     declare module JSX {
     	interface Element { }
     	interface IntrinsicElements {
@@= skipped -19, +33 lines =@@
     }
     function Todo(prop: { key: number, todo: string }) {
         return <div>{prop.key.toString() + prop.todo}</div>;
-               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS2792: Cannot find module 'react/jsx-runtime'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?
     }
     function TodoList({ todos }: TodoListProps) {
         return <div>
             {...<Todo key={todos[0].id} todo={todos[0].todo} />}
-            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS2609: JSX spread child must be an array type.
         </div>;
     }
     function TodoListNoError({ todos }: TodoListProps) {
