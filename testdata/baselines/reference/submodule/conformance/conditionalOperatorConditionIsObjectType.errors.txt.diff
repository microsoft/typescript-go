--- old.conditionalOperatorConditionIsObjectType.errors.txt
+++ new.conditionalOperatorConditionIsObjectType.errors.txt
@@= skipped -4, +4 lines =@@
 conditionalOperatorConditionIsObjectType.ts(32,1): error TS2872: This kind of expression is always truthy.
 conditionalOperatorConditionIsObjectType.ts(33,1): error TS2872: This kind of expression is always truthy.
 conditionalOperatorConditionIsObjectType.ts(36,1): error TS1345: An expression of type 'void' cannot be tested for truthiness.
-conditionalOperatorConditionIsObjectType.ts(39,1): error TS1345: An expression of type 'void' cannot be tested for truthiness.
+conditionalOperatorConditionIsObjectType.ts(39,3): error TS1345: An expression of type 'void' cannot be tested for truthiness.
 conditionalOperatorConditionIsObjectType.ts(51,20): error TS2872: This kind of expression is always truthy.
 conditionalOperatorConditionIsObjectType.ts(52,24): error TS2872: This kind of expression is always truthy.
 conditionalOperatorConditionIsObjectType.ts(53,23): error TS2872: This kind of expression is always truthy.
@@= skipped -8, +8 lines =@@
 conditionalOperatorConditionIsObjectType.ts(55,23): error TS2872: This kind of expression is always truthy.
 conditionalOperatorConditionIsObjectType.ts(56,32): error TS2872: This kind of expression is always truthy.
 conditionalOperatorConditionIsObjectType.ts(58,20): error TS1345: An expression of type 'void' cannot be tested for truthiness.
-conditionalOperatorConditionIsObjectType.ts(61,23): error TS1345: An expression of type 'void' cannot be tested for truthiness.
-conditionalOperatorConditionIsObjectType.ts(63,32): error TS1345: An expression of type 'void' cannot be tested for truthiness.
+conditionalOperatorConditionIsObjectType.ts(61,25): error TS1345: An expression of type 'void' cannot be tested for truthiness.
+conditionalOperatorConditionIsObjectType.ts(63,34): error TS1345: An expression of type 'void' cannot be tested for truthiness.
 
 
 ==== conditionalOperatorConditionIsObjectType.ts (17 errors) ====
@@= skipped -53, +53 lines =@@
     
     //Cond is an object type expression
     foo() ? exprAny1 : exprAny2;
-    ~~~~~
+    ~~~
 !!! error TS1345: An expression of type 'void' cannot be tested for truthiness.
     new Date() ? exprBoolean1 : exprBoolean2;
     new C() ? exprNumber1 : exprNumber2;
     C.doIt() ? exprString1 : exprString2;
-    ~~~~~~~~
+      ~~~~
 !!! error TS1345: An expression of type 'void' cannot be tested for truthiness.
     condObject.valueOf() ? exprIsObject1 : exprIsObject2;
     new Date() ? exprString1 : exprBoolean1; // union
@@= skipped -38, +38 lines =@@
 !!! error TS2872: This kind of expression is always truthy.
     
     var resultIsAny3 = foo() ? exprAny1 : exprAny2;
-                       ~~~~~
+                       ~~~
 !!! error TS1345: An expression of type 'void' cannot be tested for truthiness.
     var resultIsBoolean3 = new Date() ? exprBoolean1 : exprBoolean2;
     var resultIsNumber3 = new C() ? exprNumber1 : exprNumber2;
     var resultIsString3 = C.doIt() ? exprString1 : exprString2;
-                          ~~~~~~~~
+                            ~~~~
 !!! error TS1345: An expression of type 'void' cannot be tested for truthiness.
     var resultIsObject3 = condObject.valueOf() ? exprIsObject1 : exprIsObject2;
     var resultIsStringOrBoolean3 = C.doIt() ? exprString1 : exprBoolean1; // union
-                                   ~~~~~~~~
+                                     ~~~~
 !!! error TS1345: An expression of type 'void' cannot be tested for truthiness.
     
