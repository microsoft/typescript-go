index.js(24,15): error TS2304: Cannot find name 'T'.
index.js(24,19): error TS2304: Cannot find name 'U'.
index.js(30,15): error TS2304: Cannot find name 'T'.
index.js(30,19): error TS2304: Cannot find name 'U'.
index.js(38,17): error TS2304: Cannot find name 'U'.
index.js(48,17): error TS2304: Cannot find name 'U'.
index.js(104,15): error TS2304: Cannot find name 'T'.
index.js(104,19): error TS2304: Cannot find name 'U'.
index.js(138,14): error TS2339: Property 'p1' does not exist on type 'K'.
index.js(139,14): error TS2339: Property 'p2' does not exist on type 'K'.
index.js(143,21): error TS2339: Property 'p1' does not exist on type 'K'.
index.js(151,14): error TS2339: Property 'prop' does not exist on type 'M'.
index.js(165,14): error TS2339: Property 'another' does not exist on type 'N'.
index.js(179,14): error TS2339: Property 'another2' does not exist on type 'O'.


==== index.js (14 errors) ====
    export class A {}
    
    export class B {
        static cat = "cat";
    }
    
    export class C {
        static Cls = class {}
    }
    
    export class D {
        /**
         * @param {number} a
         * @param {number} b
         */
        constructor(a, b) {}
    }
    
    /**
     * @template T,U
     */
    export class E {
        /**
         * @type {T & U}
                  ~
!!! error TS2304: Cannot find name 'T'.
                      ~
!!! error TS2304: Cannot find name 'U'.
         */
        field;
    
        // @readonly is currently unsupported, it seems - included here just in case that changes
        /**
         * @type {T & U}
                  ~
!!! error TS2304: Cannot find name 'T'.
                      ~
!!! error TS2304: Cannot find name 'U'.
         * @readonly
         */
        readonlyField;
    
        initializedField = 12;
    
        /**
         * @return {U}
                    ~
!!! error TS2304: Cannot find name 'U'.
         */
        get f1() { return /** @type {*} */(null); }
    
        /**
         * @param {U} _p
         */
        set f1(_p) {}
    
        /**
         * @return {U}
                    ~
!!! error TS2304: Cannot find name 'U'.
         */
        get f2() { return /** @type {*} */(null); }
    
        /**
         * @param {U} _p
         */
        set f3(_p) {}
    
        /**
         * @param {T} a
         * @param {U} b
         */
        constructor(a, b) {}
    
    
        /**
         * @type {string}
         */
        static staticField;
    
        // @readonly is currently unsupported, it seems - included here just in case that changes
        /**
         * @type {string}
         * @readonly
         */
        static staticReadonlyField;
    
        static staticInitializedField = 12;
    
        /**
         * @return {string}
         */
        static get s1() { return ""; }
    
        /**
         * @param {string} _p
         */
        static set s1(_p) {}
    
        /**
         * @return {string}
         */
        static get s2() { return ""; }
    
        /**
         * @param {string} _p
         */
        static set s3(_p) {}
    }
    
    /**
     * @template T,U
     */
    export class F {
        /**
         * @type {T & U}
                  ~
!!! error TS2304: Cannot find name 'T'.
                      ~
!!! error TS2304: Cannot find name 'U'.
         */
        field;
        /**
         * @param {T} a
         * @param {U} b
         */
        constructor(a, b) {}
    
        /**
         * @template A,B
         * @param {A} a
         * @param {B} b
         */
        static create(a, b) { return new F(a, b); }
    }
    
    class G {}
    
    export { G };
    
    class HH {}
    
    export { HH as H };
    
    export class I {}
    export { I as II };
    
    export { J as JJ };
    export class J {}
    
    
    export class K {
        constructor() {
            this.p1 = 12;
                 ~~
!!! error TS2339: Property 'p1' does not exist on type 'K'.
            this.p2 = "ok";
                 ~~
!!! error TS2339: Property 'p2' does not exist on type 'K'.
        }
    
        method() {
            return this.p1;
                        ~~
!!! error TS2339: Property 'p1' does not exist on type 'K'.
        }
    }
    
    export class L extends K {}
    
    export class M extends null {
        constructor() {
            this.prop = 12;
                 ~~~~
!!! error TS2339: Property 'prop' does not exist on type 'M'.
        }
    }
    
    
    /**
     * @template T
     */
    export class N extends L {
        /**
         * @param {T} param 
         */
        constructor(param) {
            super();
            this.another = param;
                 ~~~~~~~
!!! error TS2339: Property 'another' does not exist on type 'N'.
        }
    }
    
    /**
     * @template U
     * @extends {N<U>}
     */
    export class O extends N {
        /**
         * @param {U} param 
         */
        constructor(param) {
            super(param);
            this.another2 = param;
                 ~~~~~~~~
!!! error TS2339: Property 'another2' does not exist on type 'O'.
        }
    }
    
    var x = /** @type {*} */(null);
    
    export class VariableBase extends x {}
    
    export class HasStatics {
        static staticMethod() {}
    }
    
    export class ExtendsStatics extends HasStatics {
        static also() {}
    }
    