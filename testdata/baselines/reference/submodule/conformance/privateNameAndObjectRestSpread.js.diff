--- old.privateNameAndObjectRestSpread.js
+++ new.privateNameAndObjectRestSpread.js
@@= skipped -18, +18 lines =@@
 }

 //// [privateNameAndObjectRestSpread.js]
-"use strict";
 var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
     if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
     if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
@@= skipped -17, +16 lines =@@
         }
     return t;
 };
-var _a, _C_prop, _C_propStatic;
+var _C_prop;
 class C {
     constructor() {
         _C_prop.set(this, 1);
     }
+    static #propStatic = 1;
     method(other) {
         const obj = Object.assign({}, other);
         __classPrivateFieldGet(obj, _C_prop, "f");
         const rest = __rest(other, []);
         __classPrivateFieldGet(rest, _C_prop, "f");
-        const statics = Object.assign({}, _a);
-        __classPrivateFieldGet(statics, _a, "f", _C_propStatic);
-        const sRest = __rest(_a, []);
-        __classPrivateFieldGet(sRest, _a, "f", _C_propStatic);
+        const statics = Object.assign({}, C);
+        statics.#propStatic;
+        const sRest = __rest(C, []);
+        sRest.#propStatic;
     }
 }
-_a = C, _C_prop = new WeakMap();
-_C_propStatic = { value: 1 };
+_C_prop = new WeakMap();