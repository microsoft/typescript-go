--- old.nodeModulesResolveJsonModule(module=nodenext).js
+++ new.nodeModulesResolveJsonModule(module=nodenext).js
@@= skipped -25, +25 lines =@@
     "default": "misedirection"
 }

-//// [package.json]
-{
-    "name": "pkg",
-    "version": "0.0.1",
-    "type": "module",
-    "default": "misedirection"
-}
 //// [index.js]
 import pkg from "./package.json" with { type: "json" };
 export const name = pkg.name;
@@= skipped -31, +24 lines =@@
 }) : function(o, v) {
     o["default"] = v;
 });
-var __importStar = (this && this.__importStar) || (function () {
-    var ownKeys = function(o) {
-        ownKeys = Object.getOwnPropertyNames || function (o) {
-            var ar = [];
-            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
-            return ar;
-        };
-        return ownKeys(o);
-    };
-    return function (mod) {
-        if (mod && mod.__esModule) return mod;
-        var result = {};
-        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
-        __setModuleDefault(result, mod);
-        return result;
-    };
-})();
+var __importStar = (this && this.__importStar) || function (mod) {
+    if (mod && mod.__esModule) return mod;
+    var result = {};
+    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
+    __setModuleDefault(result, mod);
+    return result;
+};
 var __importDefault = (this && this.__importDefault) || function (mod) {
     return (mod && mod.__esModule) ? mod : { "default": mod };
 };
@@= skipped -52, +42 lines =@@
     name: string;
     version: string;
     type: string;
-    default: {
-        name: string;
-        version: string;
-        type: string;
-        default: string;
-    };
+    default: string;
 };
-export declare const name2: string;
+export declare const name2: any;
 //// [index.d.mts]
 export declare const name: string;
 export declare const thing: {