--- old.comparisonOperatorWithNoRelationshipObjectsOnConstructorSignature.symbols
+++ new.comparisonOperatorWithNoRelationshipObjectsOnConstructorSignature.symbols
@@= skipped -4, +4 lines =@@
 >Base : Symbol(Base, Decl(comparisonOperatorWithNoRelationshipObjectsOnConstructorSignature.ts, 0, 0))
 
     public a: string;
->a : Symbol(Base.a, Decl(comparisonOperatorWithNoRelationshipObjectsOnConstructorSignature.ts, 0, 12))
+>a : Symbol(a, Decl(comparisonOperatorWithNoRelationshipObjectsOnConstructorSignature.ts, 0, 12))
 }
 
 class Derived extends Base {
@@= skipped -8, +8 lines =@@
 >Base : Symbol(Base, Decl(comparisonOperatorWithNoRelationshipObjectsOnConstructorSignature.ts, 0, 0))
 
     public b: string;
->b : Symbol(Derived.b, Decl(comparisonOperatorWithNoRelationshipObjectsOnConstructorSignature.ts, 4, 28))
+>b : Symbol(b, Decl(comparisonOperatorWithNoRelationshipObjectsOnConstructorSignature.ts, 4, 28))
 }
 
 class C {
 >C : Symbol(C, Decl(comparisonOperatorWithNoRelationshipObjectsOnConstructorSignature.ts, 6, 1))
 
     public c: string;
->c : Symbol(C.c, Decl(comparisonOperatorWithNoRelationshipObjectsOnConstructorSignature.ts, 8, 9))
+>c : Symbol(c, Decl(comparisonOperatorWithNoRelationshipObjectsOnConstructorSignature.ts, 8, 9))
 }
 
 var a1: { fn(): Base };
