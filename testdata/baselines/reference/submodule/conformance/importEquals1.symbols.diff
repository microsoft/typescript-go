--- old.importEquals1.symbols
+++ new.importEquals1.symbols
@@= skipped -22, +22 lines =@@
 >types : Symbol(types, Decl(d.ts, 0, 6))
 
 new types.A(); // Error
->types.A : Symbol(types.A, Decl(a.ts, 0, 0))
+>types.A : Symbol(A, Decl(a.ts, 0, 0))
 >types : Symbol(types, Decl(d.ts, 0, 6))
->A : Symbol(types.A, Decl(a.ts, 0, 0))
+>A : Symbol(A, Decl(a.ts, 0, 0))
 
 === /e.ts ===
 import types = require('./b');
 >types : Symbol(types, Decl(e.ts, 0, 0))
 
 new types.A(); // Error
->types.A : Symbol(types.A, Decl(a.ts, 0, 0))
+>types.A : Symbol(A, Decl(a.ts, 0, 0))
 >types : Symbol(types, Decl(e.ts, 0, 0))
->A : Symbol(types.A, Decl(a.ts, 0, 0))
+>A : Symbol(A, Decl(a.ts, 0, 0))
 
 === /f.ts ===
 import * as types from './b';
 >types : Symbol(types, Decl(f.ts, 0, 6))
 
 new types.A(); // Error
->types.A : Symbol(types.A, Decl(a.ts, 0, 0))
+>types.A : Symbol(A, Decl(a.ts, 0, 0))
 >types : Symbol(types, Decl(f.ts, 0, 6))
->A : Symbol(types.A, Decl(a.ts, 0, 0))
+>A : Symbol(A, Decl(a.ts, 0, 0))
 
 === /g.ts ===
 import type types from './c'
 >types : Symbol(types, Decl(g.ts, 0, 6))
 
 new types.A(); // Error
->types.A : Symbol(types.A, Decl(a.ts, 0, 0))
+>types.A : Symbol(A, Decl(a.ts, 0, 0))
 >types : Symbol(types, Decl(g.ts, 0, 6))
->A : Symbol(types.A, Decl(a.ts, 0, 0))
+>A : Symbol(A, Decl(a.ts, 0, 0))
 
