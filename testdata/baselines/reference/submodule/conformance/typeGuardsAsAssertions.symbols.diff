--- old.typeGuardsAsAssertions.symbols
+++ new.typeGuardsAsAssertions.symbols
@@ -15,12 +15,12 @@
 
 export interface None { readonly none: string; }
 >None : Symbol(None, Decl(typeGuardsAsAssertions.ts, 4, 41))
->none : Symbol(None.none, Decl(typeGuardsAsAssertions.ts, 6, 23))
+>none : Symbol(none, Decl(typeGuardsAsAssertions.ts, 6, 23))
 
 export interface Some<a> { readonly some: a; }
 >Some : Symbol(Some, Decl(typeGuardsAsAssertions.ts, 6, 48))
 >a : Symbol(a, Decl(typeGuardsAsAssertions.ts, 7, 22))
->some : Symbol(Some.some, Decl(typeGuardsAsAssertions.ts, 7, 26))
+>some : Symbol(some, Decl(typeGuardsAsAssertions.ts, 7, 26))
 >a : Symbol(a, Decl(typeGuardsAsAssertions.ts, 7, 22))
 
 export const none : None = { none: '' };
@@ -78,9 +78,9 @@
 >someFrom : Symbol(someFrom, Decl(typeGuardsAsAssertions.ts, 13, 1))
 >isSome : Symbol(isSome, Decl(typeGuardsAsAssertions.ts, 9, 40))
 >result : Symbol(result, Decl(typeGuardsAsAssertions.ts, 20, 7))
->result.some : Symbol(Some.some, Decl(typeGuardsAsAssertions.ts, 7, 26))
+>result.some : Symbol(some, Decl(typeGuardsAsAssertions.ts, 7, 26))
 >result : Symbol(result, Decl(typeGuardsAsAssertions.ts, 20, 7))
->some : Symbol(Some.some, Decl(typeGuardsAsAssertions.ts, 7, 26))
+>some : Symbol(some, Decl(typeGuardsAsAssertions.ts, 7, 26))
 >makeSome : Symbol(makeSome, Decl(typeGuardsAsAssertions.ts, 19, 22))
 
         result;  // Some<r>
@@ -106,9 +106,9 @@
         x = typeof x === "string" ? x.slice() : "abc";
 >x : Symbol(x, Decl(typeGuardsAsAssertions.ts, 30, 7))
 >x : Symbol(x, Decl(typeGuardsAsAssertions.ts, 30, 7))
->x.slice : Symbol(String.slice, Decl(lib.es5.d.ts, --, --))
+>x.slice : Symbol(slice, Decl(lib.es5.d.ts, --, --))
 >x : Symbol(x, Decl(typeGuardsAsAssertions.ts, 30, 7))
->slice : Symbol(String.slice, Decl(lib.es5.d.ts, --, --))
+>slice : Symbol(slice, Decl(lib.es5.d.ts, --, --))
 
         x;  // string
 >x : Symbol(x, Decl(typeGuardsAsAssertions.ts, 30, 7))
@@ -137,9 +137,9 @@
 
             x = x.slice();
 >x : Symbol(x, Decl(typeGuardsAsAssertions.ts, 41, 7))
->x.slice : Symbol(String.slice, Decl(lib.es5.d.ts, --, --))
+>x.slice : Symbol(slice, Decl(lib.es5.d.ts, --, --))
 >x : Symbol(x, Decl(typeGuardsAsAssertions.ts, 41, 7))
->slice : Symbol(String.slice, Decl(lib.es5.d.ts, --, --))
+>slice : Symbol(slice, Decl(lib.es5.d.ts, --, --))
         }
         else {
             x = "abc";
@@ -259,59 +259,59 @@
 >x : Symbol(x, Decl(typeGuardsAsAssertions.ts, 105, 7))
 
     x!.slice();
->x!.slice : Symbol(String.slice, Decl(lib.es5.d.ts, --, --))
+>x!.slice : Symbol(slice, Decl(lib.es5.d.ts, --, --))
 >x : Symbol(x, Decl(typeGuardsAsAssertions.ts, 105, 7))
->slice : Symbol(String.slice, Decl(lib.es5.d.ts, --, --))
+>slice : Symbol(slice, Decl(lib.es5.d.ts, --, --))
 
     x = "";
 >x : Symbol(x, Decl(typeGuardsAsAssertions.ts, 105, 7))
 
     x!.slice();
->x!.slice : Symbol(String.slice, Decl(lib.es5.d.ts, --, --))
+>x!.slice : Symbol(slice, Decl(lib.es5.d.ts, --, --))
 >x : Symbol(x, Decl(typeGuardsAsAssertions.ts, 105, 7))
->slice : Symbol(String.slice, Decl(lib.es5.d.ts, --, --))
+>slice : Symbol(slice, Decl(lib.es5.d.ts, --, --))
 
     x = undefined;
 >x : Symbol(x, Decl(typeGuardsAsAssertions.ts, 105, 7))
 >undefined : Symbol(undefined)
 
     x!.slice();
->x!.slice : Symbol(String.slice, Decl(lib.es5.d.ts, --, --))
+>x!.slice : Symbol(slice, Decl(lib.es5.d.ts, --, --))
 >x : Symbol(x, Decl(typeGuardsAsAssertions.ts, 105, 7))
->slice : Symbol(String.slice, Decl(lib.es5.d.ts, --, --))
+>slice : Symbol(slice, Decl(lib.es5.d.ts, --, --))
 
     x = null;
 >x : Symbol(x, Decl(typeGuardsAsAssertions.ts, 105, 7))
 
     x!.slice();
->x!.slice : Symbol(String.slice, Decl(lib.es5.d.ts, --, --))
+>x!.slice : Symbol(slice, Decl(lib.es5.d.ts, --, --))
 >x : Symbol(x, Decl(typeGuardsAsAssertions.ts, 105, 7))
->slice : Symbol(String.slice, Decl(lib.es5.d.ts, --, --))
+>slice : Symbol(slice, Decl(lib.es5.d.ts, --, --))
 
     x = <undefined | null>undefined;
 >x : Symbol(x, Decl(typeGuardsAsAssertions.ts, 105, 7))
 >undefined : Symbol(undefined)
 
     x!.slice();
->x!.slice : Symbol(String.slice, Decl(lib.es5.d.ts, --, --))
+>x!.slice : Symbol(slice, Decl(lib.es5.d.ts, --, --))
 >x : Symbol(x, Decl(typeGuardsAsAssertions.ts, 105, 7))
->slice : Symbol(String.slice, Decl(lib.es5.d.ts, --, --))
+>slice : Symbol(slice, Decl(lib.es5.d.ts, --, --))
 
     x = <string | undefined>"";
 >x : Symbol(x, Decl(typeGuardsAsAssertions.ts, 105, 7))
 
     x!.slice();
->x!.slice : Symbol(String.slice, Decl(lib.es5.d.ts, --, --))
+>x!.slice : Symbol(slice, Decl(lib.es5.d.ts, --, --))
 >x : Symbol(x, Decl(typeGuardsAsAssertions.ts, 105, 7))
->slice : Symbol(String.slice, Decl(lib.es5.d.ts, --, --))
+>slice : Symbol(slice, Decl(lib.es5.d.ts, --, --))
 
     x = <string | null>"";
 >x : Symbol(x, Decl(typeGuardsAsAssertions.ts, 105, 7))
 
     x!.slice();
->x!.slice : Symbol(String.slice, Decl(lib.es5.d.ts, --, --))
+>x!.slice : Symbol(slice, Decl(lib.es5.d.ts, --, --))
 >x : Symbol(x, Decl(typeGuardsAsAssertions.ts, 105, 7))
->slice : Symbol(String.slice, Decl(lib.es5.d.ts, --, --))
+>slice : Symbol(slice, Decl(lib.es5.d.ts, --, --))
 }
 
 function f7() {
@@ -321,8 +321,8 @@
 >x : Symbol(x, Decl(typeGuardsAsAssertions.ts, 122, 7))
 
     x!.slice();
->x!.slice : Symbol(String.slice, Decl(lib.es5.d.ts, --, --))
+>x!.slice : Symbol(slice, Decl(lib.es5.d.ts, --, --))
 >x : Symbol(x, Decl(typeGuardsAsAssertions.ts, 122, 7))
->slice : Symbol(String.slice, Decl(lib.es5.d.ts, --, --))
+>slice : Symbol(slice, Decl(lib.es5.d.ts, --, --))
 }
 
