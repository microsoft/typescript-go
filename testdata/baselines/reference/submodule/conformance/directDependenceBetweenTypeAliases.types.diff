--- old.directDependenceBetweenTypeAliases.types
+++ new.directDependenceBetweenTypeAliases.types
@@= skipped -17, +17 lines =@@
 
 // A type reference directly depends on the referenced type and each of the type arguments, if any.
 interface I<T> {}
+>I : I<T>
+>T : T
+
 type T1 = I<T1>
 >T1 : T1
 
@@= skipped -9, +12 lines =@@
 
 class C<T> {}
 >C : C<T>
+>T : T
 
 type T2_1 = T2_1[] | number
 >T2_1 : T2_1
@@= skipped -19, +20 lines =@@
 
 type T5 = typeof x
 >T5 : any
->x : any
 
 class C1<T> {}
 >C1 : C1<T>
+>T : T
 
 type T6 = T7 | number
 >T6 : T6
 
 type T7 = typeof yy
 >T7 : [string, T8[]]
->yy : [string, T8[]]
 
 var yy: [string, T8[]];
 >yy : [string, T8[]]
@@= skipped -35, +34 lines =@@
 
 type T13 = typeof zz
 >T13 : { x: T11; }
->zz : { x: T11; }
 
 var zz: { x: T11 }
 >zz : { x: T11; }
