--- old.callGenericFunctionWithIncorrectNumberOfTypeArguments.types
+++ new.callGenericFunctionWithIncorrectNumberOfTypeArguments.types
@@= skipped -5, +5 lines =@@
 
 function f<T, U>(x: T, y: U): T { return null; }
 >f : <T, U>(x: T, y: U) => T
+>T : T
+>U : U
 >x : T
 >y : U
 
@@= skipped -20, +22 lines =@@
 var f2 = <T, U>(x: T, y: U): T => { return null; }
 >f2 : <T, U>(x: T, y: U) => T
 ><T, U>(x: T, y: U): T => { return null; } : <T, U>(x: T, y: U) => T
+>T : T
+>U : U
 >x : T
 >y : U
 
@@= skipped -19, +21 lines =@@
 
 var f3: { <T, U>(x: T, y: U): T; }
 >f3 : <T, U>(x: T, y: U) => T
+>T : T
+>U : U
 >x : T
 >y : U
 
@@= skipped -22, +24 lines =@@
 
     f<T, U>(x: T, y: U): T {
 >f : <T, U>(x: T, y: U) => T
+>T : T
+>U : U
 >x : T
 >y : U
 
@@= skipped -29, +31 lines =@@
 >'' : ""
 
 interface I {
+>I : I
+
     f<T, U>(x: T, y: U): T;
 >f : <T, U>(x: T, y: U) => T
+>T : T
+>U : U
 >x : T
 >y : U
 }
@@= skipped -28, +32 lines =@@
 
 class C2<T, U> {
 >C2 : C2<T, U>
+>T : T
+>U : U
 
     f(x: T, y: U): T {
 >f : (x: T, y: U) => T
@@= skipped -32, +34 lines =@@
 >'' : ""
 
 interface I2<T, U> {
+>I2 : I2<T, U>
+>T : T
+>U : U
+
     f(x: T, y: U): T;
 >f : (x: T, y: U) => T
 >x : T
