--- old.nodeModulesForbidenSyntax(module=nodenext).js
+++ new.nodeModulesForbidenSyntax(module=nodenext).js
@@= skipped -84, +84 lines =@@
 const x = () => (void 0);
 export { x };
 //// [index.js]
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.x = void 0;
-// cjs format file
-const x = () => (void 0);
-exports.x = x;
-//// [index.cjs]
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.x = void 0;
-// cjs format file
-const x = () => (void 0);
-exports.x = x;
-//// [index.mjs]
-// esm format file
-const x = () => (void 0);
-export { x };
-//// [index.js]
-// esm format file
-const x = () => (void 0);
-export { x };
-//// [index.mjs]
-// esm format file
-const x = () => (void 0);
-export { x };
-//// [index.cjs]
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.x = void 0;
-// cjs format file
-const x = () => (void 0);
-exports.x = x;
-//// [index.mjs]
-// esm format file
-const x = () => (void 0);
-export { x };
-//// [index.cjs]
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.x = void 0;
-// cjs format file
-const x = () => (void 0);
-exports.x = x;
-//// [index.js]
-// esm format file
-const x = () => (void 0);
-export { x };
-
-
-//// [index.d.ts]
-declare const x: <T>() => T;
-export { x };
-//// [index.d.cts]
-declare const x: <T>() => T;
-export { x };
-//// [index.d.mts]
-declare const x: <T>() => T;
-export { x };
-//// [index.d.ts]
-declare const x: <T>() => T;
-export { x };
-//// [index.d.cts]
-declare const x: <T>() => T;
-export { x };
-//// [index.d.mts]
-declare const x: <T>() => T;
-export { x };
-//// [index.d.ts]
-declare const x: <T>() => T;
-export { x };
-//// [index.d.mts]
-declare const x: <T>() => T;
-export { x };
-//// [index.d.cts]
-declare const x: <T>() => T;
-export { x };
-//// [index.d.mts]
-declare const x: <T>() => T;
-export { x };
-//// [index.d.cts]
-declare const x: <T>() => T;
-export { x };
-//// [index.d.ts]
+// cjs format file
+const x = () => (void 0);
+export { x };
+//// [index.cjs]
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.x = void 0;
+// cjs format file
+const x = () => (void 0);
+exports.x = x;
+//// [index.mjs]
+// esm format file
+const x = () => (void 0);
+export { x };
+//// [index.js]
+// esm format file
+const x = () => (void 0);
+export { x };
+//// [index.mjs]
+// esm format file
+const x = () => (void 0);
+export { x };
+//// [index.cjs]
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.x = void 0;
+// cjs format file
+const x = () => (void 0);
+exports.x = x;
+//// [index.mjs]
+// esm format file
+const x = () => (void 0);
+export { x };
+//// [index.cjs]
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.x = void 0;
+// cjs format file
+const x = () => (void 0);
+exports.x = x;
+//// [index.js]
+// esm format file
+const x = () => (void 0);
+export { x };
+
+
+//// [index.d.ts]
+// cjs format file
+declare const x: <T>() => T;
+export { x };
+//// [index.d.cts]
+// cjs format file
+declare const x: <T>() => T;
+export { x };
+//// [index.d.mts]
+// esm format file
+declare const x: <T>() => T;
+export { x };
+//// [index.d.ts]
+// cjs format file
+declare const x: <T>() => T;
+export { x };
+//// [index.d.cts]
+// cjs format file
+declare const x: <T>() => T;
+export { x };
+//// [index.d.mts]
+// esm format file
+declare const x: <T>() => T;
+export { x };
+//// [index.d.ts]
+// esm format file
+declare const x: <T>() => T;
+export { x };
+//// [index.d.mts]
+// esm format file
+declare const x: <T>() => T;
+export { x };
+//// [index.d.cts]
+// cjs format file
+declare const x: <T>() => T;
+export { x };
+//// [index.d.mts]
+// esm format file
+declare const x: <T>() => T;
+export { x };
+//// [index.d.cts]
+// cjs format file
+declare const x: <T>() => T;
+export { x };
+//// [index.d.ts]
+// esm format file
 declare const x: <T>() => T;
 export { x };