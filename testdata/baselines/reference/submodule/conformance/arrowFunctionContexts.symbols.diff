--- old.arrowFunctionContexts.symbols
+++ new.arrowFunctionContexts.symbols
@@= skipped -55, +55 lines =@@
 >E : Symbol(E, Decl(arrowFunctionContexts.ts, 25, 36))
 
     x = () => 4, // Error expected
->x : Symbol(E.x, Decl(arrowFunctionContexts.ts, 28, 8))
+>x : Symbol(x, Decl(arrowFunctionContexts.ts, 28, 8))
 
     y = (() => this).length // error, can't use this in enum
->y : Symbol(E.y, Decl(arrowFunctionContexts.ts, 29, 16))
->(() => this).length : Symbol(Function.length, Decl(lib.es5.d.ts, --, --))
->length : Symbol(Function.length, Decl(lib.es5.d.ts, --, --))
+>y : Symbol(y, Decl(arrowFunctionContexts.ts, 29, 16))
+>(() => this).length : Symbol(length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 }
 
 // Arrow function as module variable initializer
@@= skipped -81, +81 lines =@@
 >E : Symbol(E, Decl(arrowFunctionContexts.ts, 66, 40))
 
         x = () => 4, // Error expected
->x : Symbol(E.x, Decl(arrowFunctionContexts.ts, 69, 12))
+>x : Symbol(x, Decl(arrowFunctionContexts.ts, 69, 12))
 
         y = (() => this).length
->y : Symbol(E.y, Decl(arrowFunctionContexts.ts, 70, 20))
->(() => this).length : Symbol(Function.length, Decl(lib.es5.d.ts, --, --))
->length : Symbol(Function.length, Decl(lib.es5.d.ts, --, --))
+>y : Symbol(y, Decl(arrowFunctionContexts.ts, 70, 20))
+>(() => this).length : Symbol(length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
     }
 
     // Arrow function as module variable initializer
