--- old.typesWithPrivateConstructor.types
+++ new.typesWithPrivateConstructor.types
@@= skipped -2, +2 lines =@@
 === typesWithPrivateConstructor.ts ===
 class C {
 >C : C
->  : ^
 
     private constructor() { }
 }
 
 var c = new C(); // error C is private
->c : any
->  : ^^^
->new C() : any
->        : ^^^
+>c : C
+>new C() : C
 >C : typeof C
->  : ^^^^^^^^
 
 var r: () => void = c.constructor;
 >r : () => void
->  : ^^^^^^    
->c.constructor : any
->              : ^^^
->c : any
->  : ^^^
->constructor : any
->            : ^^^
+>c.constructor : Function
+>c : C
+>constructor : Function
 
 class C2 {
 >C2 : C2
->   : ^^
 
     private constructor(x: number);
 >x : number
->  : ^^^^^^
 
     private constructor(x: any) { }
 >x : any
->  : ^^^
 }
 
 var c2 = new C2(); // error C2 is private
->c2 : any
->   : ^^^
->new C2() : any
->         : ^^^
+>c2 : C2
+>new C2() : C2
 >C2 : typeof C2
->   : ^^^^^^^^^
 
 var r2: (x: number) => void = c2.constructor;
 >r2 : (x: number) => void
->   : ^ ^^      ^^^^^    
 >x : number
->  : ^^^^^^
->c2.constructor : any
->               : ^^^
->c2 : any
->   : ^^^
->constructor : any
->            : ^^^
+>c2.constructor : Function
+>c2 : C2
+>constructor : Function
 
