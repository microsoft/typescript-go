--- old.overloadTag2.js
+++ new.overloadTag2.js
@@= skipped -0, +0 lines =@@
 //// [tests/cases/conformance/jsdoc/overloadTag2.ts] ////
 
-//// [overloadTag2.js]
+//// [overloadTag2.ts]
 export class Foo {
     #a = true ? 1 : "1"
     #b
@@= skipped -36, +36 lines =@@
 
 
 //// [overloadTag2.js]
-export class Foo {
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.Foo = void 0;
+class Foo {
     #a = true ? 1 : "1";
     #b;
     /**
@@= skipped -28, +31 lines =@@
         this.#b = b;
     }
 }
+exports.Foo = Foo;
 var a = new Foo();
 var b = new Foo('str');
 var c = new Foo(2);
 var d = new Foo('str', 2);
-
-
-//// [overloadTag2.d.ts]
-export class Foo {
-    /**
-     * Should not have an implicit any error, because constructor's return type is always implicit
-     * @constructor
-     * @overload
-     * @param {string} a
-     * @param {number} b
-     */
-    constructor(a: string, b: number);
-    /**
-     * @constructor
-     * @overload
-     * @param {number} a
-     */
-    constructor(a: number);
-    /**
-     * @constructor
-     * @overload
-     * @param {string} a
-     */
-    constructor(a: string);
-    #private;
-}
