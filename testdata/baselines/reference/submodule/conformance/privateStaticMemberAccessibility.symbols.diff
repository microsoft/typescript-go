--- old.privateStaticMemberAccessibility.symbols
+++ new.privateStaticMemberAccessibility.symbols
@@= skipped -4, +4 lines =@@
 >Base : Symbol(Base, Decl(privateStaticMemberAccessibility.ts, 0, 0))
 
     private static foo: string;
->foo : Symbol(Base.foo, Decl(privateStaticMemberAccessibility.ts, 0, 12))
+>foo : Symbol(foo, Decl(privateStaticMemberAccessibility.ts, 0, 12))
 }
 
 class Derived extends Base {
@@= skipped -8, +8 lines =@@
 >Base : Symbol(Base, Decl(privateStaticMemberAccessibility.ts, 0, 0))
 
     static bar = Base.foo; // error
->bar : Symbol(Derived.bar, Decl(privateStaticMemberAccessibility.ts, 4, 28))
->Base.foo : Symbol(Base.foo, Decl(privateStaticMemberAccessibility.ts, 0, 12))
+>bar : Symbol(bar, Decl(privateStaticMemberAccessibility.ts, 4, 28))
+>Base.foo : Symbol(foo, Decl(privateStaticMemberAccessibility.ts, 0, 12))
 >Base : Symbol(Base, Decl(privateStaticMemberAccessibility.ts, 0, 0))
->foo : Symbol(Base.foo, Decl(privateStaticMemberAccessibility.ts, 0, 12))
+>foo : Symbol(foo, Decl(privateStaticMemberAccessibility.ts, 0, 12))
 
     bing = () => Base.foo; // error
->bing : Symbol(Derived.bing, Decl(privateStaticMemberAccessibility.ts, 5, 26))
->Base.foo : Symbol(Base.foo, Decl(privateStaticMemberAccessibility.ts, 0, 12))
+>bing : Symbol(bing, Decl(privateStaticMemberAccessibility.ts, 5, 26))
+>Base.foo : Symbol(foo, Decl(privateStaticMemberAccessibility.ts, 0, 12))
 >Base : Symbol(Base, Decl(privateStaticMemberAccessibility.ts, 0, 0))
->foo : Symbol(Base.foo, Decl(privateStaticMemberAccessibility.ts, 0, 12))
+>foo : Symbol(foo, Decl(privateStaticMemberAccessibility.ts, 0, 12))
 }
