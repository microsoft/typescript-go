--- old.typeGuardTautologicalConsistiency.types
+++ new.typeGuardTautologicalConsistiency.types
@@= skipped -2, +2 lines =@@
 === typeGuardTautologicalConsistiency.ts ===
 let stringOrNumber: string | number;
 >stringOrNumber : string | number
->               : ^^^^^^^^^^^^^^^
 
 if (typeof stringOrNumber === "number") {
 >typeof stringOrNumber === "number" : boolean
->                                   : ^^^^^^^
->typeof stringOrNumber : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
->                      : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+>typeof stringOrNumber : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >stringOrNumber : string | number
->               : ^^^^^^^^^^^^^^^
 >"number" : "number"
->         : ^^^^^^^^
 
     if (typeof stringOrNumber !== "number") {
 >typeof stringOrNumber !== "number" : boolean
->                                   : ^^^^^^^
->typeof stringOrNumber : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
->                      : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+>typeof stringOrNumber : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >stringOrNumber : number
->               : ^^^^^^
 >"number" : "number"
->         : ^^^^^^^^
 
         stringOrNumber;
 >stringOrNumber : never
->               : ^^^^^
     }
 }
 
 if (typeof stringOrNumber === "number" && typeof stringOrNumber !== "number") {
 >typeof stringOrNumber === "number" && typeof stringOrNumber !== "number" : boolean
->                                                                         : ^^^^^^^
 >typeof stringOrNumber === "number" : boolean
->                                   : ^^^^^^^
->typeof stringOrNumber : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
->                      : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+>typeof stringOrNumber : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >stringOrNumber : string | number
->               : ^^^^^^^^^^^^^^^
 >"number" : "number"
->         : ^^^^^^^^
 >typeof stringOrNumber !== "number" : boolean
->                                   : ^^^^^^^
->typeof stringOrNumber : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
->                      : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+>typeof stringOrNumber : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >stringOrNumber : number
->               : ^^^^^^
 >"number" : "number"
->         : ^^^^^^^^
 
     stringOrNumber;
 >stringOrNumber : never
->               : ^^^^^
 }
 
