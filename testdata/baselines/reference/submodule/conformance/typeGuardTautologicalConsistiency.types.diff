--- old.typeGuardTautologicalConsistiency.types
+++ new.typeGuardTautologicalConsistiency.types
@@= skipped -5, +5 lines =@@
 
 if (typeof stringOrNumber === "number") {
 >typeof stringOrNumber === "number" : boolean
->typeof stringOrNumber : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof stringOrNumber : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >stringOrNumber : string | number
 >"number" : "number"
 
     if (typeof stringOrNumber !== "number") {
 >typeof stringOrNumber !== "number" : boolean
->typeof stringOrNumber : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof stringOrNumber : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >stringOrNumber : number
 >"number" : "number"
 
@@= skipped -18, +18 lines =@@
 if (typeof stringOrNumber === "number" && typeof stringOrNumber !== "number") {
 >typeof stringOrNumber === "number" && typeof stringOrNumber !== "number" : boolean
 >typeof stringOrNumber === "number" : boolean
->typeof stringOrNumber : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof stringOrNumber : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >stringOrNumber : string | number
 >"number" : "number"
 >typeof stringOrNumber !== "number" : boolean
->typeof stringOrNumber : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof stringOrNumber : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >stringOrNumber : number
 >"number" : "number"
 
