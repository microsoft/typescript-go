error TS2318: Cannot find global type 'Array'.
error TS2318: Cannot find global type 'Function'.
error TS2318: Cannot find global type 'IArguments'.
error TS2318: Cannot find global type 'RegExp'.
error TS2318: Cannot find global type 'String'.
error TS2318: Cannot find global type 'TemplateStringsArray'.
error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
error TS2552: Cannot find name 'Number'. Did you mean 'number'?
error TS2552: Cannot find name 'Object'. Did you mean 'object'?
taggedTemplateContextualTyping1.ts(3,36): error TS2304: Cannot find name 'TemplateStringsArray'.
taggedTemplateContextualTyping1.ts(4,36): error TS2304: Cannot find name 'TemplateStringsArray'.


!!! error TS2318: Cannot find global type 'Array'.
!!! error TS2318: Cannot find global type 'Function'.
!!! error TS2318: Cannot find global type 'IArguments'.
!!! error TS2318: Cannot find global type 'RegExp'.
!!! error TS2318: Cannot find global type 'String'.
!!! error TS2318: Cannot find global type 'TemplateStringsArray'.
!!! error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
!!! error TS2552: Cannot find name 'Number'. Did you mean 'number'?
!!! error TS2552: Cannot find name 'Object'. Did you mean 'object'?
==== taggedTemplateContextualTyping1.ts (2 errors) ====
    type FuncType = (x: <T>(p: T) => T) => typeof x;
    
    function tempTag1<T>(templateStrs: TemplateStringsArray, f: FuncType, x: T): T;
                                       ~~~~~~~~~~~~~~~~~~~~
!!! error TS2304: Cannot find name 'TemplateStringsArray'.
    function tempTag1<T>(templateStrs: TemplateStringsArray, f: FuncType, h: FuncType, x: T): T;
                                       ~~~~~~~~~~~~~~~~~~~~
!!! error TS2304: Cannot find name 'TemplateStringsArray'.
    function tempTag1<T>(...rest: any[]): T {
        return undefined;
    }
    
    // If contextual typing takes place, these functions should work.
    // Otherwise, the arrow functions' parameters will be typed as 'any',
    // and it is an error to invoke an any-typed value with type arguments,
    // so this test will error.
    tempTag1 `${ x => { x<number>(undefined); return x; }                   }${ 10 }`;
    tempTag1 `${ x => { x<number>(undefined); return x; }                   }${ y => { y<number>(undefined); return y; }                  }${ 10 }`;
    tempTag1 `${ x => { x<number>(undefined); return x; }                   }${ (y: <T>(p: T) => T) => { y<number>(undefined); return y } }${ undefined }`;
    tempTag1 `${ (x: <T>(p: T) => T) => { x<number>(undefined); return x; } }${ y => { y<number>(undefined); return y; }                  }${ undefined }`;
    