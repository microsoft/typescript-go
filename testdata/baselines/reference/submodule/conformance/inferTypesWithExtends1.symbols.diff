--- old.inferTypesWithExtends1.symbols
+++ new.inferTypesWithExtends1.symbols
@@= skipped -140, +140 lines =@@

     T extends Promise<infer U extends string> ? ["string", U] :
 >T : Symbol(T, Decl(inferTypesWithExtends1.ts, 41, 8))
->Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --))
 >U : Symbol(U, Decl(inferTypesWithExtends1.ts, 42, 27))
 >U : Symbol(U, Decl(inferTypesWithExtends1.ts, 42, 27))

     T extends Promise<infer U extends number> ? ["number", U] :
 >T : Symbol(T, Decl(inferTypesWithExtends1.ts, 41, 8))
->Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --))
 >U : Symbol(U, Decl(inferTypesWithExtends1.ts, 43, 27))
 >U : Symbol(U, Decl(inferTypesWithExtends1.ts, 43, 27))

@@= skipped -15, +15 lines =@@
 type X5_T1 = X5<Promise<"a" | "b">>; // ["string", "a" | "b"]
 >X5_T1 : Symbol(X5_T1, Decl(inferTypesWithExtends1.ts, 44, 10))
 >X5 : Symbol(X5, Decl(inferTypesWithExtends1.ts, 38, 41))
->Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --))

 type X5_T2 = X5<Promise<1 | 2>>; // ["number", 1 | 2]
 >X5_T2 : Symbol(X5_T2, Decl(inferTypesWithExtends1.ts, 46, 36))
 >X5 : Symbol(X5, Decl(inferTypesWithExtends1.ts, 38, 41))
->Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --))

 type X5_T3 = X5<Promise<1n | 2n>>; // never
 >X5_T3 : Symbol(X5_T3, Decl(inferTypesWithExtends1.ts, 47, 32))
 >X5 : Symbol(X5, Decl(inferTypesWithExtends1.ts, 38, 41))
->Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --))

 // infer to property type
 type X6<T> =