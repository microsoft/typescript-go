--- old.circularReference.symbols
+++ new.circularReference.symbols
@@= skipped -10, +10 lines =@@
 >C1 : Symbol(C1, Decl(foo2.ts, 1, 18))
 
 		m1: foo1.M1.C1;
->m1 : Symbol(C1.m1, Decl(foo2.ts, 2, 18))
+>m1 : Symbol(m1, Decl(foo2.ts, 2, 18))
 >foo1 : Symbol(foo1, Decl(foo2.ts, 0, 0))
->M1 : Symbol(foo1.M1, Decl(foo1.ts, 0, 32))
->C1 : Symbol(foo1.M1.C1, Decl(foo1.ts, 1, 18))
+>M1 : Symbol(M1, Decl(foo1.ts, 0, 32))
+>C1 : Symbol(C1, Decl(foo1.ts, 1, 18))
 
 		y: number
->y : Symbol(C1.y, Decl(foo2.ts, 3, 17))
+>y : Symbol(y, Decl(foo2.ts, 3, 17))
 
 		constructor(){
 			this.m1 = new foo1.M1.C1();
->this.m1 : Symbol(C1.m1, Decl(foo2.ts, 2, 18))
+>this.m1 : Symbol(m1, Decl(foo2.ts, 2, 18))
 >this : Symbol(C1, Decl(foo2.ts, 1, 18))
->m1 : Symbol(C1.m1, Decl(foo2.ts, 2, 18))
->foo1.M1.C1 : Symbol(foo1.M1.C1, Decl(foo1.ts, 1, 18))
->foo1.M1 : Symbol(foo1.M1, Decl(foo1.ts, 0, 32))
+>m1 : Symbol(m1, Decl(foo2.ts, 2, 18))
+>foo1.M1.C1 : Symbol(C1, Decl(foo1.ts, 1, 18))
+>foo1.M1 : Symbol(M1, Decl(foo1.ts, 0, 32))
 >foo1 : Symbol(foo1, Decl(foo2.ts, 0, 0))
->M1 : Symbol(foo1.M1, Decl(foo1.ts, 0, 32))
->C1 : Symbol(foo1.M1.C1, Decl(foo1.ts, 1, 18))
+>M1 : Symbol(M1, Decl(foo1.ts, 0, 32))
+>C1 : Symbol(C1, Decl(foo1.ts, 1, 18))
 
 			this.m1.y = 10; // Error
->this.m1 : Symbol(C1.m1, Decl(foo2.ts, 2, 18))
+>this.m1 : Symbol(m1, Decl(foo2.ts, 2, 18))
 >this : Symbol(C1, Decl(foo2.ts, 1, 18))
->m1 : Symbol(C1.m1, Decl(foo2.ts, 2, 18))
+>m1 : Symbol(m1, Decl(foo2.ts, 2, 18))
 
 			this.m1.x = 20; // OK
->this.m1.x : Symbol(foo1.M1.C1.x, Decl(foo1.ts, 3, 17))
->this.m1 : Symbol(C1.m1, Decl(foo2.ts, 2, 18))
+>this.m1.x : Symbol(x, Decl(foo1.ts, 3, 17))
+>this.m1 : Symbol(m1, Decl(foo2.ts, 2, 18))
 >this : Symbol(C1, Decl(foo2.ts, 1, 18))
->m1 : Symbol(C1.m1, Decl(foo2.ts, 2, 18))
->x : Symbol(foo1.M1.C1.x, Decl(foo1.ts, 3, 17))
+>m1 : Symbol(m1, Decl(foo2.ts, 2, 18))
+>x : Symbol(x, Decl(foo1.ts, 3, 17))
 
 			var tmp = new M1.C1();
 >tmp : Symbol(tmp, Decl(foo2.ts, 10, 6))
@@= skipped -38, +38 lines =@@
 >C1 : Symbol(C1, Decl(foo2.ts, 1, 18))
 
 			tmp.y = 10; // OK
->tmp.y : Symbol(C1.y, Decl(foo2.ts, 3, 17))
+>tmp.y : Symbol(y, Decl(foo2.ts, 3, 17))
 >tmp : Symbol(tmp, Decl(foo2.ts, 10, 6))
->y : Symbol(C1.y, Decl(foo2.ts, 3, 17))
+>y : Symbol(y, Decl(foo2.ts, 3, 17))
 
 			tmp.x = 20; // Error			
 >tmp : Symbol(tmp, Decl(foo2.ts, 10, 6))
@@= skipped -21, +21 lines =@@
 >C1 : Symbol(C1, Decl(foo1.ts, 1, 18))
 
 		m1: foo2.M1.C1;
->m1 : Symbol(C1.m1, Decl(foo1.ts, 2, 18))
+>m1 : Symbol(m1, Decl(foo1.ts, 2, 18))
 >foo2 : Symbol(foo2, Decl(foo1.ts, 0, 0))
->M1 : Symbol(foo2.M1, Decl(foo2.ts, 0, 32))
->C1 : Symbol(foo2.M1.C1, Decl(foo2.ts, 1, 18))
+>M1 : Symbol(M1, Decl(foo2.ts, 0, 32))
+>C1 : Symbol(C1, Decl(foo2.ts, 1, 18))
 
 		x: number;
->x : Symbol(C1.x, Decl(foo1.ts, 3, 17))
+>x : Symbol(x, Decl(foo1.ts, 3, 17))
 
 		constructor(){
 			this.m1 = new foo2.M1.C1();
->this.m1 : Symbol(C1.m1, Decl(foo1.ts, 2, 18))
+>this.m1 : Symbol(m1, Decl(foo1.ts, 2, 18))
 >this : Symbol(C1, Decl(foo1.ts, 1, 18))
->m1 : Symbol(C1.m1, Decl(foo1.ts, 2, 18))
->foo2.M1.C1 : Symbol(foo2.M1.C1, Decl(foo2.ts, 1, 18))
->foo2.M1 : Symbol(foo2.M1, Decl(foo2.ts, 0, 32))
+>m1 : Symbol(m1, Decl(foo1.ts, 2, 18))
+>foo2.M1.C1 : Symbol(C1, Decl(foo2.ts, 1, 18))
+>foo2.M1 : Symbol(M1, Decl(foo2.ts, 0, 32))
 >foo2 : Symbol(foo2, Decl(foo1.ts, 0, 0))
->M1 : Symbol(foo2.M1, Decl(foo2.ts, 0, 32))
->C1 : Symbol(foo2.M1.C1, Decl(foo2.ts, 1, 18))
+>M1 : Symbol(M1, Decl(foo2.ts, 0, 32))
+>C1 : Symbol(C1, Decl(foo2.ts, 1, 18))
 
 			this.m1.y = 10; // OK
->this.m1.y : Symbol(foo2.M1.C1.y, Decl(foo2.ts, 3, 17))
->this.m1 : Symbol(C1.m1, Decl(foo1.ts, 2, 18))
+>this.m1.y : Symbol(y, Decl(foo2.ts, 3, 17))
+>this.m1 : Symbol(m1, Decl(foo1.ts, 2, 18))
 >this : Symbol(C1, Decl(foo1.ts, 1, 18))
->m1 : Symbol(C1.m1, Decl(foo1.ts, 2, 18))
->y : Symbol(foo2.M1.C1.y, Decl(foo2.ts, 3, 17))
+>m1 : Symbol(m1, Decl(foo1.ts, 2, 18))
+>y : Symbol(y, Decl(foo2.ts, 3, 17))
 
 			this.m1.x = 20; // Error
->this.m1 : Symbol(C1.m1, Decl(foo1.ts, 2, 18))
+>this.m1 : Symbol(m1, Decl(foo1.ts, 2, 18))
 >this : Symbol(C1, Decl(foo1.ts, 1, 18))
->m1 : Symbol(C1.m1, Decl(foo1.ts, 2, 18))
+>m1 : Symbol(m1, Decl(foo1.ts, 2, 18))
 		}
 	}
 }
