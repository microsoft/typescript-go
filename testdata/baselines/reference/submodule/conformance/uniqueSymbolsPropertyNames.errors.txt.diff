--- old.uniqueSymbolsPropertyNames.errors.txt
+++ new.uniqueSymbolsPropertyNames.errors.txt
@@= skipped -8, +8 lines =@@
 uniqueSymbolsPropertyNames.ts(57,3): error TS2300: Duplicate identifier '[OpNamespace.equal]'.
 uniqueSymbolsPropertyNames.ts(61,3): error TS1166: A computed property name in a class property declaration must have a simple literal type or a 'unique symbol' type.
 uniqueSymbolsPropertyNames.ts(62,3): error TS1166: A computed property name in a class property declaration must have a simple literal type or a 'unique symbol' type.
-uniqueSymbolsPropertyNames.ts(62,3): error TS2300: Duplicate identifier '[getUniqueSymbol0()]'.
 uniqueSymbolsPropertyNames.ts(63,3): error TS1166: A computed property name in a class property declaration must have a simple literal type or a 'unique symbol' type.
 uniqueSymbolsPropertyNames.ts(64,3): error TS1166: A computed property name in a class property declaration must have a simple literal type or a 'unique symbol' type.
-uniqueSymbolsPropertyNames.ts(64,3): error TS2300: Duplicate identifier '[getUniqueSymbol1()]'.
 
 
-==== uniqueSymbolsPropertyNames.ts (15 errors) ====
+==== uniqueSymbolsPropertyNames.ts (13 errors) ====
     interface OpTypes {
       readonly equal: unique symbol;
     }
@@= skipped -91, +89 lines =@@
       [getUniqueSymbol0()] = "last";
       ~~~~~~~~~~~~~~~~~~~~
 !!! error TS1166: A computed property name in a class property declaration must have a simple literal type or a 'unique symbol' type.
-      ~~~~~~~~~~~~~~~~~~~~
-!!! error TS2300: Duplicate identifier '[getUniqueSymbol0()]'.
       [getUniqueSymbol1()] = "first";
       ~~~~~~~~~~~~~~~~~~~~
 !!! error TS1166: A computed property name in a class property declaration must have a simple literal type or a 'unique symbol' type.
       [getUniqueSymbol1()] = "last";
       ~~~~~~~~~~~~~~~~~~~~
 !!! error TS1166: A computed property name in a class property declaration must have a simple literal type or a 'unique symbol' type.
-      ~~~~~~~~~~~~~~~~~~~~
-!!! error TS2300: Duplicate identifier '[getUniqueSymbol1()]'.
     }
