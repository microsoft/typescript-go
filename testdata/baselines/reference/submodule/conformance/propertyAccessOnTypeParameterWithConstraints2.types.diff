--- old.propertyAccessOnTypeParameterWithConstraints2.types
+++ new.propertyAccessOnTypeParameterWithConstraints2.types
@@= skipped -24, +24 lines =@@
 
 class C<U extends A, T extends A> {
 >C : C<U, T>
+>U : U
+>T : T
 
     f() {
 >f : () => string
@@= skipped -77, +79 lines =@@
 >B : typeof B
 
 interface I<U extends A, T extends A> {
+>I : I<U, T>
+>U : U
+>T : T
+
     foo: U;
 >foo : U
 }
@@= skipped -31, +35 lines =@@
 >a : { <U extends A, T extends A>(): U; <U extends A, T extends A>(x: U): U; <U extends A, T extends A>(x: U, y: T): U; }
 
     <U extends A, T extends A>(): U;
+>U : U
+>T : T
+
     <U extends A, T extends A>(x: U): U;
+>U : U
+>T : T
 >x : U
 
     <U extends A, T extends A>(x: U, y: T): U;
+>U : U
+>T : T
 >x : U
 >y : T
 }
@@= skipped -61, +68 lines =@@
     foo: <U extends A, T extends A>(x: U, y: T) => {
 >foo : <U extends A, T extends A>(x: U, y: T) => string
 ><U extends A, T extends A>(x: U, y: T) => {        var a = x['foo'](); // should be string        return a + x.foo();    } : <U extends A, T extends A>(x: U, y: T) => string
+>U : U
+>T : T
 >x : U
 >y : T
 
