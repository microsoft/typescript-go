--- old.parserRealSource12.symbols
+++ new.parserRealSource12.symbols
@@= skipped -12, +12 lines =@@
 >IAstWalker : Symbol(IAstWalker, Decl(parserRealSource12.ts, 5, 19))
 
         walk(ast: AST, parent: AST): AST;
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >ast : Symbol(ast, Decl(parserRealSource12.ts, 7, 13))
 >AST : Symbol(AST)
 >parent : Symbol(parent, Decl(parserRealSource12.ts, 7, 22))
@@= skipped -8, +8 lines =@@
 >AST : Symbol(AST)
 
         options: AstWalkOptions;
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >AstWalkOptions : Symbol(AstWalkOptions, Decl(parserRealSource12.ts, 10, 5))
 
         state: any; // user state object
->state : Symbol(IAstWalker.state, Decl(parserRealSource12.ts, 8, 32))
+>state : Symbol(state, Decl(parserRealSource12.ts, 8, 32))
     }
 
     export class AstWalkOptions {
 >AstWalkOptions : Symbol(AstWalkOptions, Decl(parserRealSource12.ts, 10, 5))
 
         public goChildren = true;
->goChildren : Symbol(AstWalkOptions.goChildren, Decl(parserRealSource12.ts, 12, 33))
+>goChildren : Symbol(goChildren, Decl(parserRealSource12.ts, 12, 33))
 
         public goNextSibling = true;
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 
         public reverseSiblings = false; // visit siblings in reverse execution order
->reverseSiblings : Symbol(AstWalkOptions.reverseSiblings, Decl(parserRealSource12.ts, 14, 36))
+>reverseSiblings : Symbol(reverseSiblings, Decl(parserRealSource12.ts, 14, 36))
 
         public stopWalk(stop:boolean = true) {
->stopWalk : Symbol(AstWalkOptions.stopWalk, Decl(parserRealSource12.ts, 15, 39))
+>stopWalk : Symbol(stopWalk, Decl(parserRealSource12.ts, 15, 39))
 >stop : Symbol(stop, Decl(parserRealSource12.ts, 17, 24))
 
             this.goChildren = !stop;
->this.goChildren : Symbol(AstWalkOptions.goChildren, Decl(parserRealSource12.ts, 12, 33))
+>this.goChildren : Symbol(goChildren, Decl(parserRealSource12.ts, 12, 33))
 >this : Symbol(AstWalkOptions, Decl(parserRealSource12.ts, 10, 5))
->goChildren : Symbol(AstWalkOptions.goChildren, Decl(parserRealSource12.ts, 12, 33))
+>goChildren : Symbol(goChildren, Decl(parserRealSource12.ts, 12, 33))
 >stop : Symbol(stop, Decl(parserRealSource12.ts, 17, 24))
 
             this.goNextSibling = !stop;
->this.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>this.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 >this : Symbol(AstWalkOptions, Decl(parserRealSource12.ts, 10, 5))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 >stop : Symbol(stop, Decl(parserRealSource12.ts, 17, 24))
         }
     }
@@= skipped -68, +68 lines =@@
 
         constructor (
             private childrenWalkers: IAstWalkChildren[],
->childrenWalkers : Symbol(AstWalker.childrenWalkers, Decl(parserRealSource12.ts, 32, 21))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 32, 21))
 >IAstWalkChildren : Symbol(IAstWalkChildren, Decl(parserRealSource12.ts, 25, 5))
 
             private pre: IAstWalkCallback,
->pre : Symbol(AstWalker.pre, Decl(parserRealSource12.ts, 33, 56))
+>pre : Symbol(pre, Decl(parserRealSource12.ts, 33, 56))
 >IAstWalkCallback : Symbol(IAstWalkCallback, Decl(parserRealSource12.ts, 21, 5))
 
             private post: IAstWalkCallback,
->post : Symbol(AstWalker.post, Decl(parserRealSource12.ts, 34, 42))
+>post : Symbol(post, Decl(parserRealSource12.ts, 34, 42))
 >IAstWalkCallback : Symbol(IAstWalkCallback, Decl(parserRealSource12.ts, 21, 5))
 
             public options: AstWalkOptions,
->options : Symbol(AstWalker.options, Decl(parserRealSource12.ts, 35, 43))
+>options : Symbol(options, Decl(parserRealSource12.ts, 35, 43))
 >AstWalkOptions : Symbol(AstWalkOptions, Decl(parserRealSource12.ts, 10, 5))
 
             public state: any) {
->state : Symbol(AstWalker.state, Decl(parserRealSource12.ts, 36, 43))
+>state : Symbol(state, Decl(parserRealSource12.ts, 36, 43))
         }
 
         public walk(ast: AST, parent: AST): AST {
->walk : Symbol(AstWalker.walk, Decl(parserRealSource12.ts, 38, 9))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 38, 9))
 >ast : Symbol(ast, Decl(parserRealSource12.ts, 40, 20))
 >AST : Symbol(AST)
 >parent : Symbol(parent, Decl(parserRealSource12.ts, 40, 29))
@@= skipped -29, +29 lines =@@
 
             var preAst = this.pre(ast, parent, this);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 41, 15))
->this.pre : Symbol(AstWalker.pre, Decl(parserRealSource12.ts, 33, 56))
+>this.pre : Symbol(pre, Decl(parserRealSource12.ts, 33, 56))
 >this : Symbol(AstWalker, Decl(parserRealSource12.ts, 29, 5))
->pre : Symbol(AstWalker.pre, Decl(parserRealSource12.ts, 33, 56))
+>pre : Symbol(pre, Decl(parserRealSource12.ts, 33, 56))
 >ast : Symbol(ast, Decl(parserRealSource12.ts, 40, 20))
 >parent : Symbol(parent, Decl(parserRealSource12.ts, 40, 29))
 >this : Symbol(AstWalker, Decl(parserRealSource12.ts, 29, 5))
@@= skipped -16, +16 lines =@@
 >ast : Symbol(ast, Decl(parserRealSource12.ts, 40, 20))
             }
             if (this.options.goChildren) {
->this.options.goChildren : Symbol(AstWalkOptions.goChildren, Decl(parserRealSource12.ts, 12, 33))
->this.options : Symbol(AstWalker.options, Decl(parserRealSource12.ts, 35, 43))
+>this.options.goChildren : Symbol(goChildren, Decl(parserRealSource12.ts, 12, 33))
+>this.options : Symbol(options, Decl(parserRealSource12.ts, 35, 43))
 >this : Symbol(AstWalker, Decl(parserRealSource12.ts, 29, 5))
->options : Symbol(AstWalker.options, Decl(parserRealSource12.ts, 35, 43))
->goChildren : Symbol(AstWalkOptions.goChildren, Decl(parserRealSource12.ts, 12, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 35, 43))
+>goChildren : Symbol(goChildren, Decl(parserRealSource12.ts, 12, 33))
 
                 var svGoSib = this.options.goNextSibling;
 >svGoSib : Symbol(svGoSib, Decl(parserRealSource12.ts, 46, 19))
->this.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->this.options : Symbol(AstWalker.options, Decl(parserRealSource12.ts, 35, 43))
+>this.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>this.options : Symbol(options, Decl(parserRealSource12.ts, 35, 43))
 >this : Symbol(AstWalker, Decl(parserRealSource12.ts, 29, 5))
->options : Symbol(AstWalker.options, Decl(parserRealSource12.ts, 35, 43))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 35, 43))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 
                 this.options.goNextSibling = true;
->this.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->this.options : Symbol(AstWalker.options, Decl(parserRealSource12.ts, 35, 43))
+>this.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>this.options : Symbol(options, Decl(parserRealSource12.ts, 35, 43))
 >this : Symbol(AstWalker, Decl(parserRealSource12.ts, 29, 5))
->options : Symbol(AstWalker.options, Decl(parserRealSource12.ts, 35, 43))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 35, 43))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 
                 // Call the "walkChildren" function corresponding to "nodeType".
                 this.childrenWalkers[ast.nodeType](ast, parent, this);
->this.childrenWalkers : Symbol(AstWalker.childrenWalkers, Decl(parserRealSource12.ts, 32, 21))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 32, 21))
 >this : Symbol(AstWalker, Decl(parserRealSource12.ts, 29, 5))
->childrenWalkers : Symbol(AstWalker.childrenWalkers, Decl(parserRealSource12.ts, 32, 21))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 32, 21))
 >ast : Symbol(ast, Decl(parserRealSource12.ts, 40, 20))
 >ast : Symbol(ast, Decl(parserRealSource12.ts, 40, 20))
 >parent : Symbol(parent, Decl(parserRealSource12.ts, 40, 29))
 >this : Symbol(AstWalker, Decl(parserRealSource12.ts, 29, 5))
 
                 this.options.goNextSibling = svGoSib;
->this.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->this.options : Symbol(AstWalker.options, Decl(parserRealSource12.ts, 35, 43))
+>this.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>this.options : Symbol(options, Decl(parserRealSource12.ts, 35, 43))
 >this : Symbol(AstWalker, Decl(parserRealSource12.ts, 29, 5))
->options : Symbol(AstWalker.options, Decl(parserRealSource12.ts, 35, 43))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 35, 43))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 >svGoSib : Symbol(svGoSib, Decl(parserRealSource12.ts, 46, 19))
             }
             else {
                 // no go only applies to children of node issuing it
                 this.options.goChildren = true;
->this.options.goChildren : Symbol(AstWalkOptions.goChildren, Decl(parserRealSource12.ts, 12, 33))
->this.options : Symbol(AstWalker.options, Decl(parserRealSource12.ts, 35, 43))
+>this.options.goChildren : Symbol(goChildren, Decl(parserRealSource12.ts, 12, 33))
+>this.options : Symbol(options, Decl(parserRealSource12.ts, 35, 43))
 >this : Symbol(AstWalker, Decl(parserRealSource12.ts, 29, 5))
->options : Symbol(AstWalker.options, Decl(parserRealSource12.ts, 35, 43))
->goChildren : Symbol(AstWalkOptions.goChildren, Decl(parserRealSource12.ts, 12, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 35, 43))
+>goChildren : Symbol(goChildren, Decl(parserRealSource12.ts, 12, 33))
             }
             if (this.post) {
->this.post : Symbol(AstWalker.post, Decl(parserRealSource12.ts, 34, 42))
+>this.post : Symbol(post, Decl(parserRealSource12.ts, 34, 42))
 >this : Symbol(AstWalker, Decl(parserRealSource12.ts, 29, 5))
->post : Symbol(AstWalker.post, Decl(parserRealSource12.ts, 34, 42))
+>post : Symbol(post, Decl(parserRealSource12.ts, 34, 42))
 
                 var postAst = this.post(preAst, parent, this);
 >postAst : Symbol(postAst, Decl(parserRealSource12.ts, 57, 19))
->this.post : Symbol(AstWalker.post, Decl(parserRealSource12.ts, 34, 42))
+>this.post : Symbol(post, Decl(parserRealSource12.ts, 34, 42))
 >this : Symbol(AstWalker, Decl(parserRealSource12.ts, 29, 5))
->post : Symbol(AstWalker.post, Decl(parserRealSource12.ts, 34, 42))
+>post : Symbol(post, Decl(parserRealSource12.ts, 34, 42))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 41, 15))
 >parent : Symbol(parent, Decl(parserRealSource12.ts, 40, 29))
 >this : Symbol(AstWalker, Decl(parserRealSource12.ts, 29, 5))
@@= skipped -84, +84 lines =@@
 >AstWalkerFactory : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
 
         private childrenWalkers: IAstWalkChildren[] = [];
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >IAstWalkChildren : Symbol(IAstWalkChildren, Decl(parserRealSource12.ts, 25, 5))
 
         constructor () {
             this.initChildrenWalkers();
->this.initChildrenWalkers : Symbol(AstWalkerFactory.initChildrenWalkers, Decl(parserRealSource12.ts, 90, 9))
+>this.initChildrenWalkers : Symbol(initChildrenWalkers, Decl(parserRealSource12.ts, 90, 9))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->initChildrenWalkers : Symbol(AstWalkerFactory.initChildrenWalkers, Decl(parserRealSource12.ts, 90, 9))
+>initChildrenWalkers : Symbol(initChildrenWalkers, Decl(parserRealSource12.ts, 90, 9))
         }
 
         public walk(ast: AST, pre: IAstWalkCallback, post?: IAstWalkCallback, options?: AstWalkOptions, state?: any): AST {
->walk : Symbol(AstWalkerFactory.walk, Decl(parserRealSource12.ts, 74, 9))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 74, 9))
 >ast : Symbol(ast, Decl(parserRealSource12.ts, 76, 20))
 >AST : Symbol(AST)
 >pre : Symbol(pre, Decl(parserRealSource12.ts, 76, 29))
@@= skipped -24, +24 lines =@@
 >AST : Symbol(AST)
 
             return this.getWalker(pre, post, options, state).walk(ast, null)
->this.getWalker(pre, post, options, state).walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
->this.getWalker : Symbol(AstWalkerFactory.getWalker, Decl(parserRealSource12.ts, 78, 9))
+>this.getWalker(pre, post, options, state).walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
+>this.getWalker : Symbol(getWalker, Decl(parserRealSource12.ts, 78, 9))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->getWalker : Symbol(AstWalkerFactory.getWalker, Decl(parserRealSource12.ts, 78, 9))
+>getWalker : Symbol(getWalker, Decl(parserRealSource12.ts, 78, 9))
 >pre : Symbol(pre, Decl(parserRealSource12.ts, 76, 29))
 >post : Symbol(post, Decl(parserRealSource12.ts, 76, 52))
 >options : Symbol(options, Decl(parserRealSource12.ts, 76, 77))
 >state : Symbol(state, Decl(parserRealSource12.ts, 76, 103))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >ast : Symbol(ast, Decl(parserRealSource12.ts, 76, 20))
         }
 
         public getWalker(pre: IAstWalkCallback, post?: IAstWalkCallback, options?: AstWalkOptions, state?: any): IAstWalker {
->getWalker : Symbol(AstWalkerFactory.getWalker, Decl(parserRealSource12.ts, 78, 9))
+>getWalker : Symbol(getWalker, Decl(parserRealSource12.ts, 78, 9))
 >pre : Symbol(pre, Decl(parserRealSource12.ts, 80, 25))
 >IAstWalkCallback : Symbol(IAstWalkCallback, Decl(parserRealSource12.ts, 21, 5))
 >post : Symbol(post, Decl(parserRealSource12.ts, 80, 47))
@@= skipped -24, +24 lines =@@
 >IAstWalker : Symbol(IAstWalker, Decl(parserRealSource12.ts, 5, 19))
 
             return this.getSlowWalker(pre, post, options, state);
->this.getSlowWalker : Symbol(AstWalkerFactory.getSlowWalker, Decl(parserRealSource12.ts, 82, 9))
+>this.getSlowWalker : Symbol(getSlowWalker, Decl(parserRealSource12.ts, 82, 9))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->getSlowWalker : Symbol(AstWalkerFactory.getSlowWalker, Decl(parserRealSource12.ts, 82, 9))
+>getSlowWalker : Symbol(getSlowWalker, Decl(parserRealSource12.ts, 82, 9))
 >pre : Symbol(pre, Decl(parserRealSource12.ts, 80, 25))
 >post : Symbol(post, Decl(parserRealSource12.ts, 80, 47))
 >options : Symbol(options, Decl(parserRealSource12.ts, 80, 72))
@@= skipped -10, +10 lines =@@
         }
 
         private getSlowWalker(pre: IAstWalkCallback, post?: IAstWalkCallback, options?: AstWalkOptions, state?: any): IAstWalker {
->getSlowWalker : Symbol(AstWalkerFactory.getSlowWalker, Decl(parserRealSource12.ts, 82, 9))
+>getSlowWalker : Symbol(getSlowWalker, Decl(parserRealSource12.ts, 82, 9))
 >pre : Symbol(pre, Decl(parserRealSource12.ts, 84, 30))
 >IAstWalkCallback : Symbol(IAstWalkCallback, Decl(parserRealSource12.ts, 21, 5))
 >post : Symbol(post, Decl(parserRealSource12.ts, 84, 52))
@@= skipped -20, +20 lines =@@
 
             return new AstWalker(this.childrenWalkers, pre, post, options, state);
 >AstWalker : Symbol(AstWalker, Decl(parserRealSource12.ts, 29, 5))
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >pre : Symbol(pre, Decl(parserRealSource12.ts, 84, 30))
 >post : Symbol(post, Decl(parserRealSource12.ts, 84, 52))
 >options : Symbol(options, Decl(parserRealSource12.ts, 84, 77))
@@= skipped -10, +10 lines =@@
         }
 
         private initChildrenWalkers(): void {
->initChildrenWalkers : Symbol(AstWalkerFactory.initChildrenWalkers, Decl(parserRealSource12.ts, 90, 9))
+>initChildrenWalkers : Symbol(initChildrenWalkers, Decl(parserRealSource12.ts, 90, 9))
 
             this.childrenWalkers[NodeType.None] = ChildrenWalkers.walkNone;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 
             this.childrenWalkers[NodeType.Empty] = ChildrenWalkers.walkNone;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 
             this.childrenWalkers[NodeType.EmptyExpr] = ChildrenWalkers.walkNone;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 
             this.childrenWalkers[NodeType.True] = ChildrenWalkers.walkNone;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 
             this.childrenWalkers[NodeType.False] = ChildrenWalkers.walkNone;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 
             this.childrenWalkers[NodeType.This] = ChildrenWalkers.walkNone;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 
             this.childrenWalkers[NodeType.Super] = ChildrenWalkers.walkNone;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 
             this.childrenWalkers[NodeType.QString] = ChildrenWalkers.walkNone;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 
             this.childrenWalkers[NodeType.Regex] = ChildrenWalkers.walkNone;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 
             this.childrenWalkers[NodeType.Null] = ChildrenWalkers.walkNone;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 
             this.childrenWalkers[NodeType.ArrayLit] = ChildrenWalkers.walkUnaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkUnaryExpressionChildren : Symbol(ChildrenWalkers.walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkUnaryExpressionChildren : Symbol(walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkUnaryExpressionChildren : Symbol(ChildrenWalkers.walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
+>walkUnaryExpressionChildren : Symbol(walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
 
             this.childrenWalkers[NodeType.ObjectLit] = ChildrenWalkers.walkUnaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkUnaryExpressionChildren : Symbol(ChildrenWalkers.walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkUnaryExpressionChildren : Symbol(walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkUnaryExpressionChildren : Symbol(ChildrenWalkers.walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
+>walkUnaryExpressionChildren : Symbol(walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
 
             this.childrenWalkers[NodeType.Void] = ChildrenWalkers.walkUnaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkUnaryExpressionChildren : Symbol(ChildrenWalkers.walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkUnaryExpressionChildren : Symbol(walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkUnaryExpressionChildren : Symbol(ChildrenWalkers.walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
+>walkUnaryExpressionChildren : Symbol(walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
 
             this.childrenWalkers[NodeType.Comma] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.Pos] = ChildrenWalkers.walkUnaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkUnaryExpressionChildren : Symbol(ChildrenWalkers.walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkUnaryExpressionChildren : Symbol(walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkUnaryExpressionChildren : Symbol(ChildrenWalkers.walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
+>walkUnaryExpressionChildren : Symbol(walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
 
             this.childrenWalkers[NodeType.Neg] = ChildrenWalkers.walkUnaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkUnaryExpressionChildren : Symbol(ChildrenWalkers.walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkUnaryExpressionChildren : Symbol(walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkUnaryExpressionChildren : Symbol(ChildrenWalkers.walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
+>walkUnaryExpressionChildren : Symbol(walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
 
             this.childrenWalkers[NodeType.Delete] = ChildrenWalkers.walkUnaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkUnaryExpressionChildren : Symbol(ChildrenWalkers.walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkUnaryExpressionChildren : Symbol(walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkUnaryExpressionChildren : Symbol(ChildrenWalkers.walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
+>walkUnaryExpressionChildren : Symbol(walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
 
             this.childrenWalkers[NodeType.Await] = ChildrenWalkers.walkUnaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkUnaryExpressionChildren : Symbol(ChildrenWalkers.walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkUnaryExpressionChildren : Symbol(walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkUnaryExpressionChildren : Symbol(ChildrenWalkers.walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
+>walkUnaryExpressionChildren : Symbol(walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
 
             this.childrenWalkers[NodeType.In] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.Dot] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.From] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.Is] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.InstOf] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.Typeof] = ChildrenWalkers.walkUnaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkUnaryExpressionChildren : Symbol(ChildrenWalkers.walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkUnaryExpressionChildren : Symbol(walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkUnaryExpressionChildren : Symbol(ChildrenWalkers.walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
+>walkUnaryExpressionChildren : Symbol(walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
 
             this.childrenWalkers[NodeType.NumberLit] = ChildrenWalkers.walkNone;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 
             this.childrenWalkers[NodeType.Name] = ChildrenWalkers.walkNone;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 
             this.childrenWalkers[NodeType.TypeRef] = ChildrenWalkers.walkTypeReferenceChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkTypeReferenceChildren : Symbol(ChildrenWalkers.walkTypeReferenceChildren, Decl(parserRealSource12.ts, 267, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkTypeReferenceChildren : Symbol(walkTypeReferenceChildren, Decl(parserRealSource12.ts, 267, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkTypeReferenceChildren : Symbol(ChildrenWalkers.walkTypeReferenceChildren, Decl(parserRealSource12.ts, 267, 9))
+>walkTypeReferenceChildren : Symbol(walkTypeReferenceChildren, Decl(parserRealSource12.ts, 267, 9))
 
             this.childrenWalkers[NodeType.Index] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.Call] = ChildrenWalkers.walkCallExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkCallExpressionChildren : Symbol(ChildrenWalkers.walkCallExpressionChildren, Decl(parserRealSource12.ts, 273, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkCallExpressionChildren : Symbol(walkCallExpressionChildren, Decl(parserRealSource12.ts, 273, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkCallExpressionChildren : Symbol(ChildrenWalkers.walkCallExpressionChildren, Decl(parserRealSource12.ts, 273, 9))
+>walkCallExpressionChildren : Symbol(walkCallExpressionChildren, Decl(parserRealSource12.ts, 273, 9))
 
             this.childrenWalkers[NodeType.New] = ChildrenWalkers.walkCallExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkCallExpressionChildren : Symbol(ChildrenWalkers.walkCallExpressionChildren, Decl(parserRealSource12.ts, 273, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkCallExpressionChildren : Symbol(walkCallExpressionChildren, Decl(parserRealSource12.ts, 273, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkCallExpressionChildren : Symbol(ChildrenWalkers.walkCallExpressionChildren, Decl(parserRealSource12.ts, 273, 9))
+>walkCallExpressionChildren : Symbol(walkCallExpressionChildren, Decl(parserRealSource12.ts, 273, 9))
 
             this.childrenWalkers[NodeType.Asg] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.AsgAdd] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.AsgSub] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.AsgDiv] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.AsgMul] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.AsgMod] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.AsgAnd] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.AsgXor] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.AsgOr] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.AsgLsh] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.AsgRsh] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.AsgRs2] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.ConditionalExpression] = ChildrenWalkers.walkTrinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkTrinaryExpressionChildren : Symbol(ChildrenWalkers.walkTrinaryExpressionChildren, Decl(parserRealSource12.ts, 285, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkTrinaryExpressionChildren : Symbol(walkTrinaryExpressionChildren, Decl(parserRealSource12.ts, 285, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkTrinaryExpressionChildren : Symbol(ChildrenWalkers.walkTrinaryExpressionChildren, Decl(parserRealSource12.ts, 285, 9))
+>walkTrinaryExpressionChildren : Symbol(walkTrinaryExpressionChildren, Decl(parserRealSource12.ts, 285, 9))
 
             this.childrenWalkers[NodeType.LogOr] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.LogAnd] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.Or] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.Xor] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.And] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.Eq] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.Ne] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.Eqv] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.NEqv] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.Lt] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.Le] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.Gt] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.Ge] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.Add] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.Sub] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.Mul] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.Div] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.Mod] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.Lsh] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.Rsh] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.Rs2] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.Not] = ChildrenWalkers.walkUnaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkUnaryExpressionChildren : Symbol(ChildrenWalkers.walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkUnaryExpressionChildren : Symbol(walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkUnaryExpressionChildren : Symbol(ChildrenWalkers.walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
+>walkUnaryExpressionChildren : Symbol(walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
 
             this.childrenWalkers[NodeType.LogNot] = ChildrenWalkers.walkUnaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkUnaryExpressionChildren : Symbol(ChildrenWalkers.walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkUnaryExpressionChildren : Symbol(walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkUnaryExpressionChildren : Symbol(ChildrenWalkers.walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
+>walkUnaryExpressionChildren : Symbol(walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
 
             this.childrenWalkers[NodeType.IncPre] = ChildrenWalkers.walkUnaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkUnaryExpressionChildren : Symbol(ChildrenWalkers.walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkUnaryExpressionChildren : Symbol(walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkUnaryExpressionChildren : Symbol(ChildrenWalkers.walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
+>walkUnaryExpressionChildren : Symbol(walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
 
             this.childrenWalkers[NodeType.DecPre] = ChildrenWalkers.walkUnaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkUnaryExpressionChildren : Symbol(ChildrenWalkers.walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkUnaryExpressionChildren : Symbol(walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkUnaryExpressionChildren : Symbol(ChildrenWalkers.walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
+>walkUnaryExpressionChildren : Symbol(walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
 
             this.childrenWalkers[NodeType.IncPost] = ChildrenWalkers.walkUnaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkUnaryExpressionChildren : Symbol(ChildrenWalkers.walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkUnaryExpressionChildren : Symbol(walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkUnaryExpressionChildren : Symbol(ChildrenWalkers.walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
+>walkUnaryExpressionChildren : Symbol(walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
 
             this.childrenWalkers[NodeType.DecPost] = ChildrenWalkers.walkUnaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkUnaryExpressionChildren : Symbol(ChildrenWalkers.walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkUnaryExpressionChildren : Symbol(walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkUnaryExpressionChildren : Symbol(ChildrenWalkers.walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
+>walkUnaryExpressionChildren : Symbol(walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
 
             this.childrenWalkers[NodeType.TypeAssertion] = ChildrenWalkers.walkUnaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkUnaryExpressionChildren : Symbol(ChildrenWalkers.walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkUnaryExpressionChildren : Symbol(walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkUnaryExpressionChildren : Symbol(ChildrenWalkers.walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
+>walkUnaryExpressionChildren : Symbol(walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
 
             this.childrenWalkers[NodeType.FuncDecl] = ChildrenWalkers.walkFuncDeclChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkFuncDeclChildren : Symbol(ChildrenWalkers.walkFuncDeclChildren, Decl(parserRealSource12.ts, 297, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkFuncDeclChildren : Symbol(walkFuncDeclChildren, Decl(parserRealSource12.ts, 297, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkFuncDeclChildren : Symbol(ChildrenWalkers.walkFuncDeclChildren, Decl(parserRealSource12.ts, 297, 9))
+>walkFuncDeclChildren : Symbol(walkFuncDeclChildren, Decl(parserRealSource12.ts, 297, 9))
 
             this.childrenWalkers[NodeType.Member] = ChildrenWalkers.walkBinaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBinaryExpressionChildren : Symbol(ChildrenWalkers.walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
+>walkBinaryExpressionChildren : Symbol(walkBinaryExpressionChildren, Decl(parserRealSource12.ts, 249, 9))
 
             this.childrenWalkers[NodeType.VarDecl] = ChildrenWalkers.walkBoundDeclChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBoundDeclChildren : Symbol(ChildrenWalkers.walkBoundDeclChildren, Decl(parserRealSource12.ts, 312, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBoundDeclChildren : Symbol(walkBoundDeclChildren, Decl(parserRealSource12.ts, 312, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBoundDeclChildren : Symbol(ChildrenWalkers.walkBoundDeclChildren, Decl(parserRealSource12.ts, 312, 9))
+>walkBoundDeclChildren : Symbol(walkBoundDeclChildren, Decl(parserRealSource12.ts, 312, 9))
 
             this.childrenWalkers[NodeType.ArgDecl] = ChildrenWalkers.walkBoundDeclChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBoundDeclChildren : Symbol(ChildrenWalkers.walkBoundDeclChildren, Decl(parserRealSource12.ts, 312, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBoundDeclChildren : Symbol(walkBoundDeclChildren, Decl(parserRealSource12.ts, 312, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBoundDeclChildren : Symbol(ChildrenWalkers.walkBoundDeclChildren, Decl(parserRealSource12.ts, 312, 9))
+>walkBoundDeclChildren : Symbol(walkBoundDeclChildren, Decl(parserRealSource12.ts, 312, 9))
 
             this.childrenWalkers[NodeType.Return] = ChildrenWalkers.walkReturnStatementChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkReturnStatementChildren : Symbol(ChildrenWalkers.walkReturnStatementChildren, Decl(parserRealSource12.ts, 324, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkReturnStatementChildren : Symbol(walkReturnStatementChildren, Decl(parserRealSource12.ts, 324, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkReturnStatementChildren : Symbol(ChildrenWalkers.walkReturnStatementChildren, Decl(parserRealSource12.ts, 324, 9))
+>walkReturnStatementChildren : Symbol(walkReturnStatementChildren, Decl(parserRealSource12.ts, 324, 9))
 
             this.childrenWalkers[NodeType.Break] = ChildrenWalkers.walkNone;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 
             this.childrenWalkers[NodeType.Continue] = ChildrenWalkers.walkNone;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 
             this.childrenWalkers[NodeType.Throw] = ChildrenWalkers.walkUnaryExpressionChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkUnaryExpressionChildren : Symbol(ChildrenWalkers.walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkUnaryExpressionChildren : Symbol(walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkUnaryExpressionChildren : Symbol(ChildrenWalkers.walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
+>walkUnaryExpressionChildren : Symbol(walkUnaryExpressionChildren, Decl(parserRealSource12.ts, 240, 9))
 
             this.childrenWalkers[NodeType.For] = ChildrenWalkers.walkForStatementChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkForStatementChildren : Symbol(ChildrenWalkers.walkForStatementChildren, Decl(parserRealSource12.ts, 330, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkForStatementChildren : Symbol(walkForStatementChildren, Decl(parserRealSource12.ts, 330, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkForStatementChildren : Symbol(ChildrenWalkers.walkForStatementChildren, Decl(parserRealSource12.ts, 330, 9))
+>walkForStatementChildren : Symbol(walkForStatementChildren, Decl(parserRealSource12.ts, 330, 9))
 
             this.childrenWalkers[NodeType.ForIn] = ChildrenWalkers.walkForInStatementChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkForInStatementChildren : Symbol(ChildrenWalkers.walkForInStatementChildren, Decl(parserRealSource12.ts, 348, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkForInStatementChildren : Symbol(walkForInStatementChildren, Decl(parserRealSource12.ts, 348, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkForInStatementChildren : Symbol(ChildrenWalkers.walkForInStatementChildren, Decl(parserRealSource12.ts, 348, 9))
+>walkForInStatementChildren : Symbol(walkForInStatementChildren, Decl(parserRealSource12.ts, 348, 9))
 
             this.childrenWalkers[NodeType.If] = ChildrenWalkers.walkIfStatementChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkIfStatementChildren : Symbol(ChildrenWalkers.walkIfStatementChildren, Decl(parserRealSource12.ts, 358, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkIfStatementChildren : Symbol(walkIfStatementChildren, Decl(parserRealSource12.ts, 358, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkIfStatementChildren : Symbol(ChildrenWalkers.walkIfStatementChildren, Decl(parserRealSource12.ts, 358, 9))
+>walkIfStatementChildren : Symbol(walkIfStatementChildren, Decl(parserRealSource12.ts, 358, 9))
 
             this.childrenWalkers[NodeType.While] = ChildrenWalkers.walkWhileStatementChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkWhileStatementChildren : Symbol(ChildrenWalkers.walkWhileStatementChildren, Decl(parserRealSource12.ts, 368, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkWhileStatementChildren : Symbol(walkWhileStatementChildren, Decl(parserRealSource12.ts, 368, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkWhileStatementChildren : Symbol(ChildrenWalkers.walkWhileStatementChildren, Decl(parserRealSource12.ts, 368, 9))
+>walkWhileStatementChildren : Symbol(walkWhileStatementChildren, Decl(parserRealSource12.ts, 368, 9))
 
             this.childrenWalkers[NodeType.DoWhile] = ChildrenWalkers.walkDoWhileStatementChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkDoWhileStatementChildren : Symbol(ChildrenWalkers.walkDoWhileStatementChildren, Decl(parserRealSource12.ts, 375, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkDoWhileStatementChildren : Symbol(walkDoWhileStatementChildren, Decl(parserRealSource12.ts, 375, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkDoWhileStatementChildren : Symbol(ChildrenWalkers.walkDoWhileStatementChildren, Decl(parserRealSource12.ts, 375, 9))
+>walkDoWhileStatementChildren : Symbol(walkDoWhileStatementChildren, Decl(parserRealSource12.ts, 375, 9))
 
             this.childrenWalkers[NodeType.Block] = ChildrenWalkers.walkBlockChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkBlockChildren : Symbol(ChildrenWalkers.walkBlockChildren, Decl(parserRealSource12.ts, 382, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkBlockChildren : Symbol(walkBlockChildren, Decl(parserRealSource12.ts, 382, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkBlockChildren : Symbol(ChildrenWalkers.walkBlockChildren, Decl(parserRealSource12.ts, 382, 9))
+>walkBlockChildren : Symbol(walkBlockChildren, Decl(parserRealSource12.ts, 382, 9))
 
             this.childrenWalkers[NodeType.Case] = ChildrenWalkers.walkCaseStatementChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkCaseStatementChildren : Symbol(ChildrenWalkers.walkCaseStatementChildren, Decl(parserRealSource12.ts, 388, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkCaseStatementChildren : Symbol(walkCaseStatementChildren, Decl(parserRealSource12.ts, 388, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkCaseStatementChildren : Symbol(ChildrenWalkers.walkCaseStatementChildren, Decl(parserRealSource12.ts, 388, 9))
+>walkCaseStatementChildren : Symbol(walkCaseStatementChildren, Decl(parserRealSource12.ts, 388, 9))
 
             this.childrenWalkers[NodeType.Switch] = ChildrenWalkers.walkSwitchStatementChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkSwitchStatementChildren : Symbol(ChildrenWalkers.walkSwitchStatementChildren, Decl(parserRealSource12.ts, 398, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkSwitchStatementChildren : Symbol(walkSwitchStatementChildren, Decl(parserRealSource12.ts, 398, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkSwitchStatementChildren : Symbol(ChildrenWalkers.walkSwitchStatementChildren, Decl(parserRealSource12.ts, 398, 9))
+>walkSwitchStatementChildren : Symbol(walkSwitchStatementChildren, Decl(parserRealSource12.ts, 398, 9))
 
             this.childrenWalkers[NodeType.Try] = ChildrenWalkers.walkTryChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkTryChildren : Symbol(ChildrenWalkers.walkTryChildren, Decl(parserRealSource12.ts, 408, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkTryChildren : Symbol(walkTryChildren, Decl(parserRealSource12.ts, 408, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkTryChildren : Symbol(ChildrenWalkers.walkTryChildren, Decl(parserRealSource12.ts, 408, 9))
+>walkTryChildren : Symbol(walkTryChildren, Decl(parserRealSource12.ts, 408, 9))
 
             this.childrenWalkers[NodeType.TryCatch] = ChildrenWalkers.walkTryCatchChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkTryCatchChildren : Symbol(ChildrenWalkers.walkTryCatchChildren, Decl(parserRealSource12.ts, 414, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkTryCatchChildren : Symbol(walkTryCatchChildren, Decl(parserRealSource12.ts, 414, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkTryCatchChildren : Symbol(ChildrenWalkers.walkTryCatchChildren, Decl(parserRealSource12.ts, 414, 9))
+>walkTryCatchChildren : Symbol(walkTryCatchChildren, Decl(parserRealSource12.ts, 414, 9))
 
             this.childrenWalkers[NodeType.TryFinally] = ChildrenWalkers.walkTryFinallyChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkTryFinallyChildren : Symbol(ChildrenWalkers.walkTryFinallyChildren, Decl(parserRealSource12.ts, 424, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkTryFinallyChildren : Symbol(walkTryFinallyChildren, Decl(parserRealSource12.ts, 424, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkTryFinallyChildren : Symbol(ChildrenWalkers.walkTryFinallyChildren, Decl(parserRealSource12.ts, 424, 9))
+>walkTryFinallyChildren : Symbol(walkTryFinallyChildren, Decl(parserRealSource12.ts, 424, 9))
 
             this.childrenWalkers[NodeType.Finally] = ChildrenWalkers.walkFinallyChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkFinallyChildren : Symbol(ChildrenWalkers.walkFinallyChildren, Decl(parserRealSource12.ts, 434, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkFinallyChildren : Symbol(walkFinallyChildren, Decl(parserRealSource12.ts, 434, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkFinallyChildren : Symbol(ChildrenWalkers.walkFinallyChildren, Decl(parserRealSource12.ts, 434, 9))
+>walkFinallyChildren : Symbol(walkFinallyChildren, Decl(parserRealSource12.ts, 434, 9))
 
             this.childrenWalkers[NodeType.Catch] = ChildrenWalkers.walkCatchChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkCatchChildren : Symbol(ChildrenWalkers.walkCatchChildren, Decl(parserRealSource12.ts, 440, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkCatchChildren : Symbol(walkCatchChildren, Decl(parserRealSource12.ts, 440, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkCatchChildren : Symbol(ChildrenWalkers.walkCatchChildren, Decl(parserRealSource12.ts, 440, 9))
+>walkCatchChildren : Symbol(walkCatchChildren, Decl(parserRealSource12.ts, 440, 9))
 
             this.childrenWalkers[NodeType.List] = ChildrenWalkers.walkListChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkListChildren : Symbol(ChildrenWalkers.walkListChildren, Decl(parserRealSource12.ts, 222, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkListChildren : Symbol(walkListChildren, Decl(parserRealSource12.ts, 222, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkListChildren : Symbol(ChildrenWalkers.walkListChildren, Decl(parserRealSource12.ts, 222, 9))
+>walkListChildren : Symbol(walkListChildren, Decl(parserRealSource12.ts, 222, 9))
 
             this.childrenWalkers[NodeType.Script] = ChildrenWalkers.walkScriptChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkScriptChildren : Symbol(ChildrenWalkers.walkScriptChildren, Decl(parserRealSource12.ts, 474, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkScriptChildren : Symbol(walkScriptChildren, Decl(parserRealSource12.ts, 474, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkScriptChildren : Symbol(ChildrenWalkers.walkScriptChildren, Decl(parserRealSource12.ts, 474, 9))
+>walkScriptChildren : Symbol(walkScriptChildren, Decl(parserRealSource12.ts, 474, 9))
 
             this.childrenWalkers[NodeType.ClassDeclaration] = ChildrenWalkers.walkClassDeclChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkClassDeclChildren : Symbol(ChildrenWalkers.walkClassDeclChildren, Decl(parserRealSource12.ts, 462, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkClassDeclChildren : Symbol(walkClassDeclChildren, Decl(parserRealSource12.ts, 462, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkClassDeclChildren : Symbol(ChildrenWalkers.walkClassDeclChildren, Decl(parserRealSource12.ts, 462, 9))
+>walkClassDeclChildren : Symbol(walkClassDeclChildren, Decl(parserRealSource12.ts, 462, 9))
 
             this.childrenWalkers[NodeType.InterfaceDeclaration] = ChildrenWalkers.walkTypeDeclChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkTypeDeclChildren : Symbol(ChildrenWalkers.walkTypeDeclChildren, Decl(parserRealSource12.ts, 480, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkTypeDeclChildren : Symbol(walkTypeDeclChildren, Decl(parserRealSource12.ts, 480, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkTypeDeclChildren : Symbol(ChildrenWalkers.walkTypeDeclChildren, Decl(parserRealSource12.ts, 480, 9))
+>walkTypeDeclChildren : Symbol(walkTypeDeclChildren, Decl(parserRealSource12.ts, 480, 9))
 
             this.childrenWalkers[NodeType.ModuleDeclaration] = ChildrenWalkers.walkModuleDeclChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkModuleDeclChildren : Symbol(ChildrenWalkers.walkModuleDeclChildren, Decl(parserRealSource12.ts, 493, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkModuleDeclChildren : Symbol(walkModuleDeclChildren, Decl(parserRealSource12.ts, 493, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkModuleDeclChildren : Symbol(ChildrenWalkers.walkModuleDeclChildren, Decl(parserRealSource12.ts, 493, 9))
+>walkModuleDeclChildren : Symbol(walkModuleDeclChildren, Decl(parserRealSource12.ts, 493, 9))
 
             this.childrenWalkers[NodeType.ImportDeclaration] = ChildrenWalkers.walkImportDeclChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkImportDeclChildren : Symbol(ChildrenWalkers.walkImportDeclChildren, Decl(parserRealSource12.ts, 497, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkImportDeclChildren : Symbol(walkImportDeclChildren, Decl(parserRealSource12.ts, 497, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkImportDeclChildren : Symbol(ChildrenWalkers.walkImportDeclChildren, Decl(parserRealSource12.ts, 497, 9))
+>walkImportDeclChildren : Symbol(walkImportDeclChildren, Decl(parserRealSource12.ts, 497, 9))
 
             this.childrenWalkers[NodeType.With] = ChildrenWalkers.walkWithStatementChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkWithStatementChildren : Symbol(ChildrenWalkers.walkWithStatementChildren, Decl(parserRealSource12.ts, 506, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkWithStatementChildren : Symbol(walkWithStatementChildren, Decl(parserRealSource12.ts, 506, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkWithStatementChildren : Symbol(ChildrenWalkers.walkWithStatementChildren, Decl(parserRealSource12.ts, 506, 9))
+>walkWithStatementChildren : Symbol(walkWithStatementChildren, Decl(parserRealSource12.ts, 506, 9))
 
             this.childrenWalkers[NodeType.Label] = ChildrenWalkers.walkLabelChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkLabelChildren : Symbol(ChildrenWalkers.walkLabelChildren, Decl(parserRealSource12.ts, 516, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkLabelChildren : Symbol(walkLabelChildren, Decl(parserRealSource12.ts, 516, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkLabelChildren : Symbol(ChildrenWalkers.walkLabelChildren, Decl(parserRealSource12.ts, 516, 9))
+>walkLabelChildren : Symbol(walkLabelChildren, Decl(parserRealSource12.ts, 516, 9))
 
             this.childrenWalkers[NodeType.LabeledStatement] = ChildrenWalkers.walkLabeledStatementChildren;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkLabeledStatementChildren : Symbol(ChildrenWalkers.walkLabeledStatementChildren, Decl(parserRealSource12.ts, 520, 9))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkLabeledStatementChildren : Symbol(walkLabeledStatementChildren, Decl(parserRealSource12.ts, 520, 9))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkLabeledStatementChildren : Symbol(ChildrenWalkers.walkLabeledStatementChildren, Decl(parserRealSource12.ts, 520, 9))
+>walkLabeledStatementChildren : Symbol(walkLabeledStatementChildren, Decl(parserRealSource12.ts, 520, 9))
 
             this.childrenWalkers[NodeType.EBStart] = ChildrenWalkers.walkNone;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 
             this.childrenWalkers[NodeType.GotoEB] = ChildrenWalkers.walkNone;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 
             this.childrenWalkers[NodeType.EndCode] = ChildrenWalkers.walkNone;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 
             this.childrenWalkers[NodeType.Error] = ChildrenWalkers.walkNone;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 
             this.childrenWalkers[NodeType.Comment] = ChildrenWalkers.walkNone;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 
             this.childrenWalkers[NodeType.Debugger] = ChildrenWalkers.walkNone;
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
->ChildrenWalkers.walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>ChildrenWalkers.walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 >ChildrenWalkers : Symbol(ChildrenWalkers, Decl(parserRealSource12.ts, 217, 5))
->walkNone : Symbol(ChildrenWalkers.walkNone, Decl(parserRealSource12.ts, 219, 28))
+>walkNone : Symbol(walkNone, Decl(parserRealSource12.ts, 219, 28))
 
             // Verify the code is up to date with the enum
             for (var e in (<any>NodeType)._map) {
 >e : Symbol(e, Decl(parserRealSource12.ts, 202, 20))
 
                 if ((<any>this.childrenWalkers)[e] === undefined) {
->this.childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>this.childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >this : Symbol(AstWalkerFactory, Decl(parserRealSource12.ts, 67, 5))
->childrenWalkers : Symbol(AstWalkerFactory.childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
+>childrenWalkers : Symbol(childrenWalkers, Decl(parserRealSource12.ts, 69, 35))
 >e : Symbol(e, Decl(parserRealSource12.ts, 202, 20))
 >undefined : Symbol(undefined)
 
@@= skipped -924, +924 lines =@@
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 224, 41))
 
             if (walker.options.reverseSiblings) {
->walker.options.reverseSiblings : Symbol(AstWalkOptions.reverseSiblings, Decl(parserRealSource12.ts, 14, 36))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.reverseSiblings : Symbol(reverseSiblings, Decl(parserRealSource12.ts, 14, 36))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 224, 70))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->reverseSiblings : Symbol(AstWalkOptions.reverseSiblings, Decl(parserRealSource12.ts, 14, 36))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>reverseSiblings : Symbol(reverseSiblings, Decl(parserRealSource12.ts, 14, 36))
 
                 for (var i = len - 1; i >= 0; i--) {
 >i : Symbol(i, Decl(parserRealSource12.ts, 227, 24), Decl(parserRealSource12.ts, 234, 24))
@@= skipped -13, +13 lines =@@
 >i : Symbol(i, Decl(parserRealSource12.ts, 227, 24), Decl(parserRealSource12.ts, 234, 24))
 
                     if (walker.options.goNextSibling) {
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 224, 70))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 
                         preAst.members[i] = walker.walk(preAst.members[i], preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 224, 41))
 >i : Symbol(i, Decl(parserRealSource12.ts, 227, 24), Decl(parserRealSource12.ts, 234, 24))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 224, 70))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 224, 41))
 >i : Symbol(i, Decl(parserRealSource12.ts, 227, 24), Decl(parserRealSource12.ts, 234, 24))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 224, 41))
@@= skipped -26, +26 lines =@@
 >i : Symbol(i, Decl(parserRealSource12.ts, 227, 24), Decl(parserRealSource12.ts, 234, 24))
 
                     if (walker.options.goNextSibling) {
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 224, 70))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 
                         preAst.members[i] = walker.walk(preAst.members[i], preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 224, 41))
 >i : Symbol(i, Decl(parserRealSource12.ts, 227, 24), Decl(parserRealSource12.ts, 234, 24))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 224, 70))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 224, 41))
 >i : Symbol(i, Decl(parserRealSource12.ts, 227, 24), Decl(parserRealSource12.ts, 234, 24))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 224, 41))
@@= skipped -34, +34 lines =@@
 
                 preAst.castTerm = walker.walk(preAst.castTerm, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 242, 52))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 242, 89))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 242, 52))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 242, 52))
             }
@@= skipped -11, +11 lines =@@
 
                 preAst.operand = walker.walk(preAst.operand, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 242, 52))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 242, 89))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 242, 52))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 242, 52))
             }
@@= skipped -18, +18 lines =@@
 >IAstWalker : Symbol(IAstWalker, Decl(parserRealSource12.ts, 5, 19))
 
             if (walker.options.reverseSiblings) {
->walker.options.reverseSiblings : Symbol(AstWalkOptions.reverseSiblings, Decl(parserRealSource12.ts, 14, 36))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.reverseSiblings : Symbol(reverseSiblings, Decl(parserRealSource12.ts, 14, 36))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 251, 91))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->reverseSiblings : Symbol(AstWalkOptions.reverseSiblings, Decl(parserRealSource12.ts, 14, 36))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>reverseSiblings : Symbol(reverseSiblings, Decl(parserRealSource12.ts, 14, 36))
 
                 if (preAst.operand2) {
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 251, 53))
 
                     preAst.operand2 = walker.walk(preAst.operand2, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 251, 53))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 251, 91))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 251, 53))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 251, 53))
                 }
                 if ((preAst.operand1) && (walker.options.goNextSibling)) {
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 251, 53))
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 251, 91))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 
                     preAst.operand1 = walker.walk(preAst.operand1, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 251, 53))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 251, 91))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 251, 53))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 251, 53))
                 }
@@= skipped -39, +39 lines =@@
 
                     preAst.operand1 = walker.walk(preAst.operand1, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 251, 53))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 251, 91))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 251, 53))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 251, 53))
                 }
                 if ((preAst.operand2) && (walker.options.goNextSibling)) {
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 251, 53))
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 251, 91))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 
                     preAst.operand2 = walker.walk(preAst.operand2, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 251, 53))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 251, 91))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 251, 53))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 251, 53))
                 }
@@= skipped -39, +39 lines =@@
 
                 preAst.term = walker.walk(preAst.term, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 269, 50))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 269, 85))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 269, 50))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 269, 50))
             }
@@= skipped -18, +18 lines =@@
 >IAstWalker : Symbol(IAstWalker, Decl(parserRealSource12.ts, 5, 19))
 
             if (!walker.options.reverseSiblings) {
->walker.options.reverseSiblings : Symbol(AstWalkOptions.reverseSiblings, Decl(parserRealSource12.ts, 14, 36))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.reverseSiblings : Symbol(reverseSiblings, Decl(parserRealSource12.ts, 14, 36))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 275, 87))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->reverseSiblings : Symbol(AstWalkOptions.reverseSiblings, Decl(parserRealSource12.ts, 14, 36))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>reverseSiblings : Symbol(reverseSiblings, Decl(parserRealSource12.ts, 14, 36))
 
                 preAst.target = walker.walk(preAst.target, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 275, 51))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 275, 87))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 275, 51))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 275, 51))
             }
             if (preAst.arguments && (walker.options.goNextSibling)) {
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 275, 51))
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 275, 87))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 
                 preAst.arguments = <ASTList> walker.walk(preAst.arguments, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 275, 51))
 >ASTList : Symbol(ASTList)
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 275, 87))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 275, 51))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 275, 51))
             }
             if ((walker.options.reverseSiblings) && (walker.options.goNextSibling)) {
->walker.options.reverseSiblings : Symbol(AstWalkOptions.reverseSiblings, Decl(parserRealSource12.ts, 14, 36))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.reverseSiblings : Symbol(reverseSiblings, Decl(parserRealSource12.ts, 14, 36))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 275, 87))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->reverseSiblings : Symbol(AstWalkOptions.reverseSiblings, Decl(parserRealSource12.ts, 14, 36))
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>reverseSiblings : Symbol(reverseSiblings, Decl(parserRealSource12.ts, 14, 36))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 275, 87))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 
                 preAst.target = walker.walk(preAst.target, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 275, 51))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 275, 87))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 275, 51))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 275, 51))
             }
@@= skipped -67, +67 lines =@@
 
                 preAst.operand1 = walker.walk(preAst.operand1, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 287, 54))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 287, 97))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 287, 54))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 287, 54))
             }
             if (preAst.operand2 && (walker.options.goNextSibling)) {
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 287, 54))
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 287, 97))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 
                 preAst.operand2 = walker.walk(preAst.operand2, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 287, 54))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 287, 97))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 287, 54))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 287, 54))
             }
             if (preAst.operand3 && (walker.options.goNextSibling)) {
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 287, 54))
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 287, 97))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 
                 preAst.operand3 = walker.walk(preAst.operand3, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 287, 54))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 287, 97))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 287, 54))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 287, 54))
             }
@@= skipped -55, +55 lines =@@
                 preAst.name = <Identifier>walker.walk(preAst.name, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 299, 45))
 >Identifier : Symbol(Identifier)
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 299, 75))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 299, 45))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 299, 45))
             }
             if (preAst.arguments && (preAst.arguments.members.length > 0) && (walker.options.goNextSibling)) {
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 299, 45))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 299, 45))
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 299, 75))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 
                 preAst.arguments = <ASTList>walker.walk(preAst.arguments, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 299, 45))
 >ASTList : Symbol(ASTList)
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 299, 75))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 299, 45))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 299, 45))
             }
             if (preAst.returnTypeAnnotation && (walker.options.goNextSibling)) {
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 299, 45))
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 299, 75))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 
                 preAst.returnTypeAnnotation = walker.walk(preAst.returnTypeAnnotation, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 299, 45))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 299, 75))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 299, 45))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 299, 45))
             }
             if (preAst.bod && (preAst.bod.members.length > 0) && (walker.options.goNextSibling)) {
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 299, 45))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 299, 45))
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 299, 75))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 
                 preAst.bod = <ASTList>walker.walk(preAst.bod, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 299, 45))
 >ASTList : Symbol(ASTList)
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 299, 75))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 299, 45))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 299, 45))
             }
@@= skipped -75, +75 lines =@@
                 preAst.id = <Identifier>walker.walk(preAst.id, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 314, 46))
 >Identifier : Symbol(Identifier)
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 314, 77))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 314, 46))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 314, 46))
             }
@@= skipped -11, +11 lines =@@
 
                 preAst.init = walker.walk(preAst.init, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 314, 46))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 314, 77))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 314, 46))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 314, 46))
             }
             if ((preAst.typeExpr) && (walker.options.goNextSibling)) {
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 314, 46))
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 314, 77))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 
                 preAst.typeExpr = walker.walk(preAst.typeExpr, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 314, 46))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 314, 77))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 314, 46))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 314, 46))
             }
@@= skipped -38, +38 lines =@@
 
                 preAst.returnExpression = walker.walk(preAst.returnExpression, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 326, 52))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 326, 89))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 326, 52))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 326, 52))
             }
@@= skipped -22, +22 lines =@@
 
                 preAst.init = walker.walk(preAst.init, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 332, 49))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 332, 83))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 332, 49))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 332, 49))
             }
 
             if (preAst.cond && walker.options.goNextSibling) {
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 332, 49))
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 332, 83))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 
                 preAst.cond = walker.walk(preAst.cond, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 332, 49))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 332, 83))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 332, 49))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 332, 49))
             }
 
             if (preAst.incr && walker.options.goNextSibling) {
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 332, 49))
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 332, 83))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 
                 preAst.incr = walker.walk(preAst.incr, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 332, 49))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 332, 83))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 332, 49))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 332, 49))
             }
 
             if (preAst.body && walker.options.goNextSibling) {
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 332, 49))
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 332, 83))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 
                 preAst.body = walker.walk(preAst.body, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 332, 49))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 332, 83))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 332, 49))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 332, 49))
             }
@@= skipped -70, +70 lines =@@
 
             preAst.lval = walker.walk(preAst.lval, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 350, 51))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 350, 87))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 350, 51))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 350, 51))
 
             if (walker.options.goNextSibling) {
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 350, 87))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 
                 preAst.obj = walker.walk(preAst.obj, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 350, 51))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 350, 87))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 350, 51))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 350, 51))
             }
             if (preAst.body && (walker.options.goNextSibling)) {
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 350, 51))
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 350, 87))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 
                 preAst.body = walker.walk(preAst.body, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 350, 51))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 350, 87))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 350, 51))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 350, 51))
             }
@@= skipped -50, +50 lines =@@
 
             preAst.cond = walker.walk(preAst.cond, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 360, 48))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 360, 81))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 360, 48))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 360, 48))
 
             if (preAst.thenBod && (walker.options.goNextSibling)) {
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 360, 48))
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 360, 81))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 
                 preAst.thenBod = walker.walk(preAst.thenBod, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 360, 48))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 360, 81))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 360, 48))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 360, 48))
             }
             if (preAst.elseBod && (walker.options.goNextSibling)) {
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 360, 48))
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 360, 81))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 
                 preAst.elseBod = walker.walk(preAst.elseBod, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 360, 48))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 360, 81))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 360, 48))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 360, 48))
             }
@@= skipped -51, +51 lines =@@
 
             preAst.cond = walker.walk(preAst.cond, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 370, 51))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 370, 87))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 370, 51))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 370, 51))
 
             if (preAst.body && (walker.options.goNextSibling)) {
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 370, 51))
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 370, 87))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 
                 preAst.body = walker.walk(preAst.body, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 370, 51))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 370, 87))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 370, 51))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 370, 51))
             }
@@= skipped -35, +35 lines =@@
 
             preAst.cond = walker.walk(preAst.cond, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 377, 53))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 377, 91))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 377, 53))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 377, 53))
 
             if (preAst.body && (walker.options.goNextSibling)) {
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 377, 53))
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 377, 91))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 
                 preAst.body = walker.walk(preAst.body, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 377, 53))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 377, 91))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 377, 53))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 377, 53))
             }
@@= skipped -39, +39 lines =@@
                 preAst.statements = <ASTList>walker.walk(preAst.statements, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 384, 42))
 >ASTList : Symbol(ASTList)
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 384, 69))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 384, 42))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 384, 42))
             }
@@= skipped -22, +22 lines =@@
 
                 preAst.expr = walker.walk(preAst.expr, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 390, 50))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 390, 85))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 390, 50))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 390, 50))
             }
 
             if (preAst.body && walker.options.goNextSibling) {
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 390, 50))
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 390, 85))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 
                 preAst.body = <ASTList>walker.walk(preAst.body, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 390, 50))
 >ASTList : Symbol(ASTList)
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 390, 85))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 390, 50))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 390, 50))
             }
@@= skipped -40, +40 lines =@@
 
                 preAst.val = walker.walk(preAst.val, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 400, 52))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 400, 89))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 400, 52))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 400, 52))
             }
 
             if ((preAst.caseList) && walker.options.goNextSibling) {
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 400, 52))
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 400, 89))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 
                 preAst.caseList = <ASTList>walker.walk(preAst.caseList, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 400, 52))
 >ASTList : Symbol(ASTList)
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 400, 89))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 400, 52))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 400, 52))
             }
@@= skipped -40, +40 lines =@@
 
                 preAst.body = walker.walk(preAst.body, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 410, 40))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 410, 65))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 410, 40))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 410, 40))
             }
@@= skipped -23, +23 lines =@@
                 preAst.tryNode = <Try>walker.walk(preAst.tryNode, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 416, 45))
 >Try : Symbol(Try)
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 416, 75))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 416, 45))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 416, 45))
             }
 
             if ((preAst.catchNode) && walker.options.goNextSibling) {
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 416, 45))
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 416, 75))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 
                 preAst.catchNode = <Catch>walker.walk(preAst.catchNode, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 416, 45))
 >Catch : Symbol(Catch)
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 416, 75))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 416, 45))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 416, 45))
             }
@@= skipped -40, +40 lines =@@
 
                 preAst.tryNode = walker.walk(preAst.tryNode, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 426, 47))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 426, 79))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 426, 47))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 426, 47))
             }
 
             if (preAst.finallyNode && walker.options.goNextSibling) {
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 426, 47))
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 426, 79))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 
                 preAst.finallyNode = <Finally>walker.walk(preAst.finallyNode, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 426, 47))
 >Finally : Symbol(Finally)
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 426, 79))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 426, 47))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 426, 47))
             }
@@= skipped -40, +40 lines =@@
 
                 preAst.body = walker.walk(preAst.body, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 436, 44))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 436, 73))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 436, 44))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 436, 44))
             }
@@= skipped -23, +23 lines =@@
                 preAst.param = <VarDecl>walker.walk(preAst.param, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 442, 42))
 >VarDecl : Symbol(VarDecl)
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 442, 69))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 442, 42))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 442, 42))
             }
 
             if ((preAst.body) && walker.options.goNextSibling) {
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 442, 42))
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 442, 69))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 
                 preAst.body = walker.walk(preAst.body, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 442, 42))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 442, 69))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 442, 42))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 442, 42))
             }
@@= skipped -37, +37 lines =@@
             preAst.name = <Identifier>walker.walk(preAst.name, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 452, 43))
 >Identifier : Symbol(Identifier)
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 452, 81))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 452, 43))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 452, 43))
 
             if (walker.options.goNextSibling && preAst.members) {
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 452, 81))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 452, 43))
 
                 preAst.members = <ASTList>walker.walk(preAst.members, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 452, 43))
 >ASTList : Symbol(ASTList)
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 452, 81))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 452, 43))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 452, 43))
             }
@@= skipped -58, +58 lines =@@
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 464, 84))
 
             if (walker.options.goNextSibling && preAst.extendsList) {
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 464, 84))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 464, 46))
 
                 preAst.extendsList = <ASTList>walker.walk(preAst.extendsList, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 464, 46))
 >ASTList : Symbol(ASTList)
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 464, 84))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 464, 46))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 464, 46))
             }
 
             if (walker.options.goNextSibling && preAst.implementsList) {
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 464, 84))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 464, 46))
 
                 preAst.implementsList = <ASTList>walker.walk(preAst.implementsList, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 464, 46))
 >ASTList : Symbol(ASTList)
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 464, 84))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 464, 46))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 464, 46))
             }
@@= skipped -51, +51 lines =@@
                 preAst.bod = <ASTList>walker.walk(preAst.bod, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 476, 43))
 >ASTList : Symbol(ASTList)
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 476, 71))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 476, 43))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 476, 43))
             }
@@= skipped -25, +25 lines =@@
 
             // walked arguments as part of members
             if (walker.options.goNextSibling && preAst.extendsList) {
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 482, 87))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 482, 45))
 
                 preAst.extendsList = <ASTList>walker.walk(preAst.extendsList, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 482, 45))
 >ASTList : Symbol(ASTList)
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 482, 87))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 482, 45))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 482, 45))
             }
 
             if (walker.options.goNextSibling && preAst.implementsList) {
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 482, 87))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 482, 45))
 
                 preAst.implementsList = <ASTList>walker.walk(preAst.implementsList, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 482, 45))
 >ASTList : Symbol(ASTList)
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 482, 87))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 482, 45))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 482, 45))
             }
@@= skipped -67, +67 lines =@@
                 preAst.id = <Identifier>walker.walk(preAst.id, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 499, 47))
 >Identifier : Symbol(Identifier)
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 499, 86))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 499, 47))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 499, 47))
             }
@@= skipped -11, +11 lines =@@
 
                 preAst.alias = walker.walk(preAst.alias, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 499, 47))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 499, 86))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 499, 47))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 499, 47))
             }
@@= skipped -22, +22 lines =@@
 
                 preAst.expr = walker.walk(preAst.expr, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 508, 50))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 508, 85))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 508, 50))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 508, 50))
             }
 
             if (preAst.body && walker.options.goNextSibling) {
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 508, 50))
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 508, 85))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 
                 preAst.body = walker.walk(preAst.body, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 508, 50))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 508, 85))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 508, 50))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 508, 50))
             }
@@= skipped -49, +49 lines =@@
             preAst.labels = <ASTList>walker.walk(preAst.labels, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 522, 53))
 >ASTList : Symbol(ASTList)
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 522, 91))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 522, 53))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 522, 53))
 
             if (walker.options.goNextSibling) {
->walker.options.goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
->walker.options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
+>walker.options.goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>walker.options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 522, 91))
->options : Symbol(IAstWalker.options, Decl(parserRealSource12.ts, 7, 41))
->goNextSibling : Symbol(AstWalkOptions.goNextSibling, Decl(parserRealSource12.ts, 13, 33))
+>options : Symbol(options, Decl(parserRealSource12.ts, 7, 41))
+>goNextSibling : Symbol(goNextSibling, Decl(parserRealSource12.ts, 13, 33))
 
                 preAst.stmt = walker.walk(preAst.stmt, preAst);
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 522, 53))
->walker.walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walker.walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >walker : Symbol(walker, Decl(parserRealSource12.ts, 522, 91))
->walk : Symbol(IAstWalker.walk, Decl(parserRealSource12.ts, 6, 33))
+>walk : Symbol(walk, Decl(parserRealSource12.ts, 6, 33))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 522, 53))
 >preAst : Symbol(preAst, Decl(parserRealSource12.ts, 522, 53))
             }
