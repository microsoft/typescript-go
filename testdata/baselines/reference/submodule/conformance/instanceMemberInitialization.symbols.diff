--- old.instanceMemberInitialization.symbols
+++ new.instanceMemberInitialization.symbols
@@= skipped -4, +4 lines =@@
 >C : Symbol(C, Decl(instanceMemberInitialization.ts, 0, 0))
 
     x = 1;
->x : Symbol(C.x, Decl(instanceMemberInitialization.ts, 0, 9))
+>x : Symbol(x, Decl(instanceMemberInitialization.ts, 0, 9))
 }
 
 var c = new C();
@@= skipped -8, +8 lines =@@
 >C : Symbol(C, Decl(instanceMemberInitialization.ts, 0, 0))
 
 c.x = 3;
->c.x : Symbol(C.x, Decl(instanceMemberInitialization.ts, 0, 9))
+>c.x : Symbol(x, Decl(instanceMemberInitialization.ts, 0, 9))
 >c : Symbol(c, Decl(instanceMemberInitialization.ts, 4, 3))
->x : Symbol(C.x, Decl(instanceMemberInitialization.ts, 0, 9))
+>x : Symbol(x, Decl(instanceMemberInitialization.ts, 0, 9))
 
 var c2 = new C();
 >c2 : Symbol(c2, Decl(instanceMemberInitialization.ts, 6, 3))
@@= skipped -10, +10 lines =@@
 
 var r = c.x === c2.x;
 >r : Symbol(r, Decl(instanceMemberInitialization.ts, 7, 3))
->c.x : Symbol(C.x, Decl(instanceMemberInitialization.ts, 0, 9))
+>c.x : Symbol(x, Decl(instanceMemberInitialization.ts, 0, 9))
 >c : Symbol(c, Decl(instanceMemberInitialization.ts, 4, 3))
->x : Symbol(C.x, Decl(instanceMemberInitialization.ts, 0, 9))
->c2.x : Symbol(C.x, Decl(instanceMemberInitialization.ts, 0, 9))
+>x : Symbol(x, Decl(instanceMemberInitialization.ts, 0, 9))
+>c2.x : Symbol(x, Decl(instanceMemberInitialization.ts, 0, 9))
 >c2 : Symbol(c2, Decl(instanceMemberInitialization.ts, 6, 3))
->x : Symbol(C.x, Decl(instanceMemberInitialization.ts, 0, 9))
+>x : Symbol(x, Decl(instanceMemberInitialization.ts, 0, 9))
 
 // #31792
 
@@= skipped -17, +17 lines =@@
 >V : Symbol(V, Decl(instanceMemberInitialization.ts, 13, 14))
 
     constructor(private readonly Map_: { new<K, V>(): any }) {}
->Map_ : Symbol(MyMap.Map_, Decl(instanceMemberInitialization.ts, 14, 16))
+>Map_ : Symbol(Map_, Decl(instanceMemberInitialization.ts, 14, 16))
 >K : Symbol(K, Decl(instanceMemberInitialization.ts, 14, 45))
 >V : Symbol(V, Decl(instanceMemberInitialization.ts, 14, 47))
 
     private readonly store = new this.Map_<K, V>();
->store : Symbol(MyMap.store, Decl(instanceMemberInitialization.ts, 14, 63))
->this.Map_ : Symbol(MyMap.Map_, Decl(instanceMemberInitialization.ts, 14, 16))
+>store : Symbol(store, Decl(instanceMemberInitialization.ts, 14, 63))
+>this.Map_ : Symbol(Map_, Decl(instanceMemberInitialization.ts, 14, 16))
 >this : Symbol(MyMap, Decl(instanceMemberInitialization.ts, 7, 21))
->Map_ : Symbol(MyMap.Map_, Decl(instanceMemberInitialization.ts, 14, 16))
+>Map_ : Symbol(Map_, Decl(instanceMemberInitialization.ts, 14, 16))
 >K : Symbol(K, Decl(instanceMemberInitialization.ts, 13, 12))
 >V : Symbol(V, Decl(instanceMemberInitialization.ts, 13, 14))
 }
