--- old.propertyAccessOnTypeParameterWithConstraints3.types
+++ new.propertyAccessOnTypeParameterWithConstraints3.types
@@= skipped -24, +24 lines =@@
 
 class C<U extends A, T extends U> {
 >C : C<U, T>
+>U : U
+>T : T
 
     f() {
 >f : () => string
@@= skipped -67, +69 lines =@@
 >B : typeof B
 
 interface I<U extends A, T extends U> {
+>I : I<U, T>
+>U : U
+>T : T
+
     foo: T;
 >foo : T
 }
@@= skipped -28, +32 lines =@@
 >a : { <U extends A, T extends U>(): T; <U extends T, T extends A>(x: U): U; }
 
     <U extends A, T extends U>(): T;
+>U : U
+>T : T
+
     <U extends T, T extends A>(x: U): U;
+>U : U
+>T : T
 >x : U
 }
 var r3 = a().foo(); // error, no inferences for U so it doesn't satisfy constraint
@@= skipped -47, +52 lines =@@
     foo: <U extends A, T extends U>(x: T) => {
 >foo : <U extends A, T extends U>(x: T) => string
 ><U extends A, T extends U>(x: T) => {        // BUG 823818        var a = x['foo'](); // should be string        return a + x.foo();    } : <U extends A, T extends U>(x: T) => string
+>U : U
+>T : T
 >x : T
 
         // BUG 823818
