--- old.jsDeclarationsFunctionKeywordPropExhaustive.symbols
+++ new.jsDeclarationsFunctionKeywordPropExhaustive.symbols
@@= skipped -1, +1 lines =@@
 
 === source.js ===
 function foo() {}
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
+>foo : Symbol(foo, Decl(source.js, 0, 0))
 
 // properties
 foo.x = 1;
->foo.x : Symbol(foo.x, Decl(source.js, 0, 17))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->x : Symbol(foo.x, Decl(source.js, 0, 17))
+>foo.x : Symbol(x, Decl(source.js, 0, 17))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>x : Symbol(x, Decl(source.js, 0, 17))
 
 foo.y = 1;
->foo.y : Symbol(foo.y, Decl(source.js, 2, 10))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->y : Symbol(foo.y, Decl(source.js, 2, 10))
+>foo.y : Symbol(y, Decl(source.js, 2, 10))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>y : Symbol(y, Decl(source.js, 2, 10))
 
 // keywords
 foo.break = 1;
->foo.break : Symbol(foo.break, Decl(source.js, 3, 10))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->break : Symbol(foo.break, Decl(source.js, 3, 10))
+>foo.break : Symbol(break, Decl(source.js, 3, 10))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>break : Symbol(break, Decl(source.js, 3, 10))
 
 foo.case = 1;
->foo.case : Symbol(foo.case, Decl(source.js, 6, 14))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->case : Symbol(foo.case, Decl(source.js, 6, 14))
+>foo.case : Symbol(case, Decl(source.js, 6, 14))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>case : Symbol(case, Decl(source.js, 6, 14))
 
 foo.catch = 1;
->foo.catch : Symbol(foo.catch, Decl(source.js, 7, 13))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->catch : Symbol(foo.catch, Decl(source.js, 7, 13))
+>foo.catch : Symbol(catch, Decl(source.js, 7, 13))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>catch : Symbol(catch, Decl(source.js, 7, 13))
 
 foo.class = 1;
->foo.class : Symbol(foo.class, Decl(source.js, 8, 14))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->class : Symbol(foo.class, Decl(source.js, 8, 14))
+>foo.class : Symbol(class, Decl(source.js, 8, 14))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>class : Symbol(class, Decl(source.js, 8, 14))
 
 foo.const = 1;
->foo.const : Symbol(foo.const, Decl(source.js, 9, 14))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->const : Symbol(foo.const, Decl(source.js, 9, 14))
+>foo.const : Symbol(const, Decl(source.js, 9, 14))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>const : Symbol(const, Decl(source.js, 9, 14))
 
 foo.continue = 1;
->foo.continue : Symbol(foo.continue, Decl(source.js, 10, 14))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->continue : Symbol(foo.continue, Decl(source.js, 10, 14))
+>foo.continue : Symbol(continue, Decl(source.js, 10, 14))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>continue : Symbol(continue, Decl(source.js, 10, 14))
 
 foo.debugger = 1;
->foo.debugger : Symbol(foo.debugger, Decl(source.js, 11, 17))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->debugger : Symbol(foo.debugger, Decl(source.js, 11, 17))
+>foo.debugger : Symbol(debugger, Decl(source.js, 11, 17))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>debugger : Symbol(debugger, Decl(source.js, 11, 17))
 
 foo.default = 1;
->foo.default : Symbol(foo.default, Decl(source.js, 12, 17))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->default : Symbol(foo.default, Decl(source.js, 12, 17))
+>foo.default : Symbol(default, Decl(source.js, 12, 17))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>default : Symbol(default, Decl(source.js, 12, 17))
 
 foo.delete = 1;
->foo.delete : Symbol(foo.delete, Decl(source.js, 13, 16))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->delete : Symbol(foo.delete, Decl(source.js, 13, 16))
+>foo.delete : Symbol(delete, Decl(source.js, 13, 16))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>delete : Symbol(delete, Decl(source.js, 13, 16))
 
 foo.do = 1;
->foo.do : Symbol(foo.do, Decl(source.js, 14, 15))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->do : Symbol(foo.do, Decl(source.js, 14, 15))
+>foo.do : Symbol(do, Decl(source.js, 14, 15))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>do : Symbol(do, Decl(source.js, 14, 15))
 
 foo.else = 1;
->foo.else : Symbol(foo.else, Decl(source.js, 15, 11))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->else : Symbol(foo.else, Decl(source.js, 15, 11))
+>foo.else : Symbol(else, Decl(source.js, 15, 11))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>else : Symbol(else, Decl(source.js, 15, 11))
 
 foo.enum = 1;
->foo.enum : Symbol(foo.enum, Decl(source.js, 16, 13))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->enum : Symbol(foo.enum, Decl(source.js, 16, 13))
+>foo.enum : Symbol(enum, Decl(source.js, 16, 13))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>enum : Symbol(enum, Decl(source.js, 16, 13))
 
 foo.export = 1;
->foo.export : Symbol(foo.export, Decl(source.js, 17, 13))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->export : Symbol(foo.export, Decl(source.js, 17, 13))
+>foo.export : Symbol(export, Decl(source.js, 17, 13))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>export : Symbol(export, Decl(source.js, 17, 13))
 
 foo.extends = 1;
->foo.extends : Symbol(foo.extends, Decl(source.js, 18, 15))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->extends : Symbol(foo.extends, Decl(source.js, 18, 15))
+>foo.extends : Symbol(extends, Decl(source.js, 18, 15))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>extends : Symbol(extends, Decl(source.js, 18, 15))
 
 foo.false = 1;
->foo.false : Symbol(foo.false, Decl(source.js, 19, 16))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->false : Symbol(foo.false, Decl(source.js, 19, 16))
+>foo.false : Symbol(false, Decl(source.js, 19, 16))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>false : Symbol(false, Decl(source.js, 19, 16))
 
 foo.finally = 1;
->foo.finally : Symbol(foo.finally, Decl(source.js, 20, 14))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->finally : Symbol(foo.finally, Decl(source.js, 20, 14))
+>foo.finally : Symbol(finally, Decl(source.js, 20, 14))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>finally : Symbol(finally, Decl(source.js, 20, 14))
 
 foo.for = 1;
->foo.for : Symbol(foo.for, Decl(source.js, 21, 16))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->for : Symbol(foo.for, Decl(source.js, 21, 16))
+>foo.for : Symbol(for, Decl(source.js, 21, 16))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>for : Symbol(for, Decl(source.js, 21, 16))
 
 foo.function = 1;
->foo.function : Symbol(foo.function, Decl(source.js, 22, 12))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->function : Symbol(foo.function, Decl(source.js, 22, 12))
+>foo.function : Symbol(function, Decl(source.js, 22, 12))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>function : Symbol(function, Decl(source.js, 22, 12))
 
 foo.if = 1;
->foo.if : Symbol(foo.if, Decl(source.js, 23, 17))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->if : Symbol(foo.if, Decl(source.js, 23, 17))
+>foo.if : Symbol(if, Decl(source.js, 23, 17))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>if : Symbol(if, Decl(source.js, 23, 17))
 
 foo.import = 1;
->foo.import : Symbol(foo.import, Decl(source.js, 24, 11))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->import : Symbol(foo.import, Decl(source.js, 24, 11))
+>foo.import : Symbol(import, Decl(source.js, 24, 11))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>import : Symbol(import, Decl(source.js, 24, 11))
 
 foo.in = 1;
->foo.in : Symbol(foo.in, Decl(source.js, 25, 15))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->in : Symbol(foo.in, Decl(source.js, 25, 15))
+>foo.in : Symbol(in, Decl(source.js, 25, 15))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>in : Symbol(in, Decl(source.js, 25, 15))
 
 foo.instanceof = 1;
->foo.instanceof : Symbol(foo.instanceof, Decl(source.js, 26, 11))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->instanceof : Symbol(foo.instanceof, Decl(source.js, 26, 11))
+>foo.instanceof : Symbol(instanceof, Decl(source.js, 26, 11))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>instanceof : Symbol(instanceof, Decl(source.js, 26, 11))
 
 foo.new = 1;
->foo.new : Symbol(foo.new, Decl(source.js, 27, 19))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->new : Symbol(foo.new, Decl(source.js, 27, 19))
+>foo.new : Symbol(new, Decl(source.js, 27, 19))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>new : Symbol(new, Decl(source.js, 27, 19))
 
 foo.null = 1;
->foo.null : Symbol(foo.null, Decl(source.js, 28, 12))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->null : Symbol(foo.null, Decl(source.js, 28, 12))
+>foo.null : Symbol(null, Decl(source.js, 28, 12))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>null : Symbol(null, Decl(source.js, 28, 12))
 
 foo.return = 1;
->foo.return : Symbol(foo.return, Decl(source.js, 29, 13))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->return : Symbol(foo.return, Decl(source.js, 29, 13))
+>foo.return : Symbol(return, Decl(source.js, 29, 13))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>return : Symbol(return, Decl(source.js, 29, 13))
 
 foo.super = 1;
->foo.super : Symbol(foo.super, Decl(source.js, 30, 15))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->super : Symbol(foo.super, Decl(source.js, 30, 15))
+>foo.super : Symbol(super, Decl(source.js, 30, 15))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>super : Symbol(super, Decl(source.js, 30, 15))
 
 foo.switch = 1;
->foo.switch : Symbol(foo.switch, Decl(source.js, 31, 14))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->switch : Symbol(foo.switch, Decl(source.js, 31, 14))
+>foo.switch : Symbol(switch, Decl(source.js, 31, 14))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>switch : Symbol(switch, Decl(source.js, 31, 14))
 
 foo.this = 1;
->foo.this : Symbol(foo.this, Decl(source.js, 32, 15))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->this : Symbol(foo.this, Decl(source.js, 32, 15))
+>foo.this : Symbol(this, Decl(source.js, 32, 15))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>this : Symbol(this, Decl(source.js, 32, 15))
 
 foo.throw = 1;
->foo.throw : Symbol(foo.throw, Decl(source.js, 33, 13))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->throw : Symbol(foo.throw, Decl(source.js, 33, 13))
+>foo.throw : Symbol(throw, Decl(source.js, 33, 13))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>throw : Symbol(throw, Decl(source.js, 33, 13))
 
 foo.true = 1;
->foo.true : Symbol(foo.true, Decl(source.js, 34, 14))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->true : Symbol(foo.true, Decl(source.js, 34, 14))
+>foo.true : Symbol(true, Decl(source.js, 34, 14))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>true : Symbol(true, Decl(source.js, 34, 14))
 
 foo.try = 1;
->foo.try : Symbol(foo.try, Decl(source.js, 35, 13))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->try : Symbol(foo.try, Decl(source.js, 35, 13))
+>foo.try : Symbol(try, Decl(source.js, 35, 13))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>try : Symbol(try, Decl(source.js, 35, 13))
 
 foo.typeof = 1;
->foo.typeof : Symbol(foo.typeof, Decl(source.js, 36, 12))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->typeof : Symbol(foo.typeof, Decl(source.js, 36, 12))
+>foo.typeof : Symbol(typeof, Decl(source.js, 36, 12))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>typeof : Symbol(typeof, Decl(source.js, 36, 12))
 
 foo.var = 1;
->foo.var : Symbol(foo.var, Decl(source.js, 37, 15))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->var : Symbol(foo.var, Decl(source.js, 37, 15))
+>foo.var : Symbol(var, Decl(source.js, 37, 15))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>var : Symbol(var, Decl(source.js, 37, 15))
 
 foo.void = 1;
->foo.void : Symbol(foo.void, Decl(source.js, 38, 12))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->void : Symbol(foo.void, Decl(source.js, 38, 12))
+>foo.void : Symbol(void, Decl(source.js, 38, 12))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>void : Symbol(void, Decl(source.js, 38, 12))
 
 foo.while = 1;
->foo.while : Symbol(foo.while, Decl(source.js, 39, 13))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->while : Symbol(foo.while, Decl(source.js, 39, 13))
+>foo.while : Symbol(while, Decl(source.js, 39, 13))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>while : Symbol(while, Decl(source.js, 39, 13))
 
 foo.with = 1;
->foo.with : Symbol(foo.with, Decl(source.js, 40, 14))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->with : Symbol(foo.with, Decl(source.js, 40, 14))
+>foo.with : Symbol(with, Decl(source.js, 40, 14))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>with : Symbol(with, Decl(source.js, 40, 14))
 
 foo.implements = 1;
->foo.implements : Symbol(foo.implements, Decl(source.js, 41, 13))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->implements : Symbol(foo.implements, Decl(source.js, 41, 13))
+>foo.implements : Symbol(implements, Decl(source.js, 41, 13))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>implements : Symbol(implements, Decl(source.js, 41, 13))
 
 foo.interface = 1;
->foo.interface : Symbol(foo.interface, Decl(source.js, 42, 19))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->interface : Symbol(foo.interface, Decl(source.js, 42, 19))
+>foo.interface : Symbol(interface, Decl(source.js, 42, 19))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>interface : Symbol(interface, Decl(source.js, 42, 19))
 
 foo.let = 1;
->foo.let : Symbol(foo.let, Decl(source.js, 43, 18))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->let : Symbol(foo.let, Decl(source.js, 43, 18))
+>foo.let : Symbol(let, Decl(source.js, 43, 18))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>let : Symbol(let, Decl(source.js, 43, 18))
 
 foo.package = 1;
->foo.package : Symbol(foo.package, Decl(source.js, 44, 12))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->package : Symbol(foo.package, Decl(source.js, 44, 12))
+>foo.package : Symbol(package, Decl(source.js, 44, 12))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>package : Symbol(package, Decl(source.js, 44, 12))
 
 foo.private = 1;
->foo.private : Symbol(foo.private, Decl(source.js, 45, 16))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->private : Symbol(foo.private, Decl(source.js, 45, 16))
+>foo.private : Symbol(private, Decl(source.js, 45, 16))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>private : Symbol(private, Decl(source.js, 45, 16))
 
 foo.protected = 1;
->foo.protected : Symbol(foo.protected, Decl(source.js, 46, 16))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->protected : Symbol(foo.protected, Decl(source.js, 46, 16))
+>foo.protected : Symbol(protected, Decl(source.js, 46, 16))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>protected : Symbol(protected, Decl(source.js, 46, 16))
 
 foo.public = 1;
->foo.public : Symbol(foo.public, Decl(source.js, 47, 18))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->public : Symbol(foo.public, Decl(source.js, 47, 18))
+>foo.public : Symbol(public, Decl(source.js, 47, 18))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>public : Symbol(public, Decl(source.js, 47, 18))
 
 foo.static = 1;
->foo.static : Symbol(foo.static, Decl(source.js, 48, 15))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->static : Symbol(foo.static, Decl(source.js, 48, 15))
+>foo.static : Symbol(static, Decl(source.js, 48, 15))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>static : Symbol(static, Decl(source.js, 48, 15))
 
 foo.yield = 1;
->foo.yield : Symbol(foo.yield, Decl(source.js, 49, 15))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->yield : Symbol(foo.yield, Decl(source.js, 49, 15))
+>foo.yield : Symbol(yield, Decl(source.js, 49, 15))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>yield : Symbol(yield, Decl(source.js, 49, 15))
 
 foo.abstract = 1;
->foo.abstract : Symbol(foo.abstract, Decl(source.js, 50, 14))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->abstract : Symbol(foo.abstract, Decl(source.js, 50, 14))
+>foo.abstract : Symbol(abstract, Decl(source.js, 50, 14))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>abstract : Symbol(abstract, Decl(source.js, 50, 14))
 
 foo.as = 1;
->foo.as : Symbol(foo.as, Decl(source.js, 51, 17))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->as : Symbol(foo.as, Decl(source.js, 51, 17))
+>foo.as : Symbol(as, Decl(source.js, 51, 17))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>as : Symbol(as, Decl(source.js, 51, 17))
 
 foo.asserts = 1;
->foo.asserts : Symbol(foo.asserts, Decl(source.js, 52, 11))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->asserts : Symbol(foo.asserts, Decl(source.js, 52, 11))
+>foo.asserts : Symbol(asserts, Decl(source.js, 52, 11))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>asserts : Symbol(asserts, Decl(source.js, 52, 11))
 
 foo.any = 1;
->foo.any : Symbol(foo.any, Decl(source.js, 53, 16))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->any : Symbol(foo.any, Decl(source.js, 53, 16))
+>foo.any : Symbol(any, Decl(source.js, 53, 16))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>any : Symbol(any, Decl(source.js, 53, 16))
 
 foo.async = 1;
->foo.async : Symbol(foo.async, Decl(source.js, 54, 12))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->async : Symbol(foo.async, Decl(source.js, 54, 12))
+>foo.async : Symbol(async, Decl(source.js, 54, 12))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>async : Symbol(async, Decl(source.js, 54, 12))
 
 foo.await = 1;
->foo.await : Symbol(foo.await, Decl(source.js, 55, 14))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->await : Symbol(foo.await, Decl(source.js, 55, 14))
+>foo.await : Symbol(await, Decl(source.js, 55, 14))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>await : Symbol(await, Decl(source.js, 55, 14))
 
 foo.boolean = 1;
->foo.boolean : Symbol(foo.boolean, Decl(source.js, 56, 14))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->boolean : Symbol(foo.boolean, Decl(source.js, 56, 14))
+>foo.boolean : Symbol(boolean, Decl(source.js, 56, 14))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>boolean : Symbol(boolean, Decl(source.js, 56, 14))
 
 foo.constructor = 1;
->foo.constructor : Symbol(foo.constructor, Decl(source.js, 57, 16))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->constructor : Symbol(foo.constructor, Decl(source.js, 57, 16))
+>foo.constructor : Symbol(constructor, Decl(source.js, 57, 16))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>constructor : Symbol(constructor, Decl(source.js, 57, 16))
 
 foo.declare = 1;
->foo.declare : Symbol(foo.declare, Decl(source.js, 58, 20))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->declare : Symbol(foo.declare, Decl(source.js, 58, 20))
+>foo.declare : Symbol(declare, Decl(source.js, 58, 20))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>declare : Symbol(declare, Decl(source.js, 58, 20))
 
 foo.get = 1;
->foo.get : Symbol(foo.get, Decl(source.js, 59, 16))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->get : Symbol(foo.get, Decl(source.js, 59, 16))
+>foo.get : Symbol(get, Decl(source.js, 59, 16))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>get : Symbol(get, Decl(source.js, 59, 16))
 
 foo.infer = 1;
->foo.infer : Symbol(foo.infer, Decl(source.js, 60, 12))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->infer : Symbol(foo.infer, Decl(source.js, 60, 12))
+>foo.infer : Symbol(infer, Decl(source.js, 60, 12))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>infer : Symbol(infer, Decl(source.js, 60, 12))
 
 foo.is = 1;
->foo.is : Symbol(foo.is, Decl(source.js, 61, 14))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->is : Symbol(foo.is, Decl(source.js, 61, 14))
+>foo.is : Symbol(is, Decl(source.js, 61, 14))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>is : Symbol(is, Decl(source.js, 61, 14))
 
 foo.keyof = 1;
->foo.keyof : Symbol(foo.keyof, Decl(source.js, 62, 11))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->keyof : Symbol(foo.keyof, Decl(source.js, 62, 11))
+>foo.keyof : Symbol(keyof, Decl(source.js, 62, 11))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>keyof : Symbol(keyof, Decl(source.js, 62, 11))
 
 foo.module = 1;
->foo.module : Symbol(foo.module, Decl(source.js, 63, 14))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->module : Symbol(foo.module, Decl(source.js, 63, 14))
+>foo.module : Symbol(module, Decl(source.js, 63, 14))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>module : Symbol(module, Decl(source.js, 63, 14))
 
 foo.namespace = 1;
->foo.namespace : Symbol(foo.namespace, Decl(source.js, 64, 15))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->namespace : Symbol(foo.namespace, Decl(source.js, 64, 15))
+>foo.namespace : Symbol(namespace, Decl(source.js, 64, 15))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>namespace : Symbol(namespace, Decl(source.js, 64, 15))
 
 foo.never = 1;
->foo.never : Symbol(foo.never, Decl(source.js, 65, 18))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->never : Symbol(foo.never, Decl(source.js, 65, 18))
+>foo.never : Symbol(never, Decl(source.js, 65, 18))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>never : Symbol(never, Decl(source.js, 65, 18))
 
 foo.readonly = 1;
->foo.readonly : Symbol(foo.readonly, Decl(source.js, 66, 14))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->readonly : Symbol(foo.readonly, Decl(source.js, 66, 14))
+>foo.readonly : Symbol(readonly, Decl(source.js, 66, 14))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>readonly : Symbol(readonly, Decl(source.js, 66, 14))
 
 foo.require = 1;
->foo.require : Symbol(foo.require, Decl(source.js, 67, 17))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->require : Symbol(foo.require, Decl(source.js, 67, 17))
+>foo.require : Symbol(require, Decl(source.js, 67, 17))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>require : Symbol(require, Decl(source.js, 67, 17))
 
 foo.number = 1;
->foo.number : Symbol(foo.number, Decl(source.js, 68, 16))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->number : Symbol(foo.number, Decl(source.js, 68, 16))
+>foo.number : Symbol(number, Decl(source.js, 68, 16))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>number : Symbol(number, Decl(source.js, 68, 16))
 
 foo.object = 1;
->foo.object : Symbol(foo.object, Decl(source.js, 69, 15))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->object : Symbol(foo.object, Decl(source.js, 69, 15))
+>foo.object : Symbol(object, Decl(source.js, 69, 15))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>object : Symbol(object, Decl(source.js, 69, 15))
 
 foo.set = 1;
->foo.set : Symbol(foo.set, Decl(source.js, 70, 15))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->set : Symbol(foo.set, Decl(source.js, 70, 15))
+>foo.set : Symbol(set, Decl(source.js, 70, 15))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>set : Symbol(set, Decl(source.js, 70, 15))
 
 foo.string = 1;
->foo.string : Symbol(foo.string, Decl(source.js, 71, 12))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->string : Symbol(foo.string, Decl(source.js, 71, 12))
+>foo.string : Symbol(string, Decl(source.js, 71, 12))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>string : Symbol(string, Decl(source.js, 71, 12))
 
 foo.symbol = 1;
->foo.symbol : Symbol(foo.symbol, Decl(source.js, 72, 15))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->symbol : Symbol(foo.symbol, Decl(source.js, 72, 15))
+>foo.symbol : Symbol(symbol, Decl(source.js, 72, 15))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>symbol : Symbol(symbol, Decl(source.js, 72, 15))
 
 foo.type = 1;
->foo.type : Symbol(foo.type, Decl(source.js, 73, 15))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->type : Symbol(foo.type, Decl(source.js, 73, 15))
+>foo.type : Symbol(type, Decl(source.js, 73, 15))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>type : Symbol(type, Decl(source.js, 73, 15))
 
 foo.undefined = 1;
->foo.undefined : Symbol(foo.undefined, Decl(source.js, 74, 13))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->undefined : Symbol(foo.undefined, Decl(source.js, 74, 13))
+>foo.undefined : Symbol(undefined, Decl(source.js, 74, 13))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>undefined : Symbol(undefined, Decl(source.js, 74, 13))
 
 foo.unique = 1;
->foo.unique : Symbol(foo.unique, Decl(source.js, 75, 18))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->unique : Symbol(foo.unique, Decl(source.js, 75, 18))
+>foo.unique : Symbol(unique, Decl(source.js, 75, 18))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>unique : Symbol(unique, Decl(source.js, 75, 18))
 
 foo.unknown = 1;
->foo.unknown : Symbol(foo.unknown, Decl(source.js, 76, 15))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->unknown : Symbol(foo.unknown, Decl(source.js, 76, 15))
+>foo.unknown : Symbol(unknown, Decl(source.js, 76, 15))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>unknown : Symbol(unknown, Decl(source.js, 76, 15))
 
 foo.from = 1;
->foo.from : Symbol(foo.from, Decl(source.js, 77, 16))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->from : Symbol(foo.from, Decl(source.js, 77, 16))
+>foo.from : Symbol(from, Decl(source.js, 77, 16))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>from : Symbol(from, Decl(source.js, 77, 16))
 
 foo.global = 1;
->foo.global : Symbol(foo.global, Decl(source.js, 78, 13))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->global : Symbol(foo.global, Decl(source.js, 78, 13))
+>foo.global : Symbol(global, Decl(source.js, 78, 13))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>global : Symbol(global, Decl(source.js, 78, 13))
 
 foo.bigint = 1;
->foo.bigint : Symbol(foo.bigint, Decl(source.js, 79, 15))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->bigint : Symbol(foo.bigint, Decl(source.js, 79, 15))
+>foo.bigint : Symbol(bigint, Decl(source.js, 79, 15))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>bigint : Symbol(bigint, Decl(source.js, 79, 15))
 
 foo.of = 1;
->foo.of : Symbol(foo.of, Decl(source.js, 80, 15))
->foo : Symbol(foo, Decl(source.js, 0, 0), Decl(source.js, 0, 17), Decl(source.js, 2, 10), Decl(source.js, 3, 10), Decl(source.js, 6, 14) ... and 74 more)
->of : Symbol(foo.of, Decl(source.js, 80, 15))
+>foo.of : Symbol(of, Decl(source.js, 80, 15))
+>foo : Symbol(foo, Decl(source.js, 0, 0))
+>of : Symbol(of, Decl(source.js, 80, 15))
 
