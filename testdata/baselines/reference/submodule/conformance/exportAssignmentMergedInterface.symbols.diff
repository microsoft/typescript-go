--- old.exportAssignmentMergedInterface.symbols
+++ new.exportAssignmentMergedInterface.symbols
@@= skipped -15, +15 lines =@@
 
 var y: string = x.b;
 >y : Symbol(y, Decl(foo_1.ts, 4, 3))
->x.b : Symbol(foo.b, Decl(foo_0.ts, 1, 19))
+>x.b : Symbol(b, Decl(foo_0.ts, 1, 19))
 >x : Symbol(x, Decl(foo_1.ts, 1, 3))
->b : Symbol(foo.b, Decl(foo_0.ts, 1, 19))
+>b : Symbol(b, Decl(foo_0.ts, 1, 19))
 
 if(!!x.c){ }
->x.c : Symbol(foo.c, Decl(foo_0.ts, 5, 21))
+>x.c : Symbol(c, Decl(foo_0.ts, 5, 21))
 >x : Symbol(x, Decl(foo_1.ts, 1, 3))
->c : Symbol(foo.c, Decl(foo_0.ts, 5, 21))
+>c : Symbol(c, Decl(foo_0.ts, 5, 21))
 
 var z = {x: 1, y: 2};
 >z : Symbol(z, Decl(foo_1.ts, 6, 3))
@@= skipped -16, +16 lines =@@
 
 z = x.d;
 >z : Symbol(z, Decl(foo_1.ts, 6, 3))
->x.d : Symbol(foo.d, Decl(foo_0.ts, 6, 12))
+>x.d : Symbol(d, Decl(foo_0.ts, 6, 12))
 >x : Symbol(x, Decl(foo_1.ts, 1, 3))
->d : Symbol(foo.d, Decl(foo_0.ts, 6, 12))
+>d : Symbol(d, Decl(foo_0.ts, 6, 12))
 
 === foo_0.ts ===
 interface Foo {
@@= skipped -12, +12 lines =@@
 >a : Symbol(a, Decl(foo_0.ts, 1, 2))
 
 	b: string;
->b : Symbol(Foo.b, Decl(foo_0.ts, 1, 19))
+>b : Symbol(b, Decl(foo_0.ts, 1, 19))
 }
 interface Foo {
 >Foo : Symbol(Foo, Decl(foo_0.ts, 0, 0), Decl(foo_0.ts, 3, 1))
@@= skipped -9, +9 lines =@@
 >a : Symbol(a, Decl(foo_0.ts, 5, 2))
 
 	c: boolean;
->c : Symbol(Foo.c, Decl(foo_0.ts, 5, 21))
+>c : Symbol(c, Decl(foo_0.ts, 5, 21))
 
 	d: {x: number; y: number};
->d : Symbol(Foo.d, Decl(foo_0.ts, 6, 12))
+>d : Symbol(d, Decl(foo_0.ts, 6, 12))
 >x : Symbol(x, Decl(foo_0.ts, 7, 5))
 >y : Symbol(y, Decl(foo_0.ts, 7, 15))
 }
