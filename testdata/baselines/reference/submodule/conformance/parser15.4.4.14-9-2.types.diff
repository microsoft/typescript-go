--- old.parser15.4.4.14-9-2.types
+++ new.parser15.4.4.14-9-2.types
@@= skipped -13, +13 lines =@@
 
 function testcase() {
 >testcase : () => boolean
->         : ^^^^^^^^^^^^^
 
   var obj = {toString:function (){return 0}};
 >obj : { toString: () => number; }
->    : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
 >{toString:function (){return 0}} : { toString: () => number; }
->                                 : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
 >toString : () => number
->         : ^^^^^^^^^^^^
 >function (){return 0} : () => number
->                      : ^^^^^^^^^^^^
 >0 : 0
->  : ^
 
   var one = 1;
 >one : number
->    : ^^^^^^
 >1 : 1
->  : ^
 
   var _float = -(4/3);
 >_float : number
->       : ^^^^^^
 >-(4/3) : number
->       : ^^^^^^
 >(4/3) : number
->      : ^^^^^^
 >4/3 : number
->    : ^^^^^^
 >4 : 4
->  : ^
 >3 : 3
->  : ^
 
   var a = new Array(false,undefined,null,"0",obj,-1.3333333333333, "str",-0,true,+0, one, 1,0, false, _float, -(4/3));
 >a : boolean[]
->  : ^^^^^^^^^
 >new Array(false,undefined,null,"0",obj,-1.3333333333333, "str",-0,true,+0, one, 1,0, false, _float, -(4/3)) : boolean[]
->                                                                                                            : ^^^^^^^^^
 >Array : ArrayConstructor
->      : ^^^^^^^^^^^^^^^^
 >false : false
->      : ^^^^^
 >undefined : undefined
->          : ^^^^^^^^^
 >"0" : "0"
->    : ^^^
 >obj : { toString: () => number; }
->    : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
 >-1.3333333333333 : -1.3333333333333
->                 : ^^^^^^^^^^^^^^^^
 >1.3333333333333 : 1.3333333333333
->                : ^^^^^^^^^^^^^^^
 >"str" : "str"
->      : ^^^^^
 >-0 : 0
->   : ^
 >0 : 0
->  : ^
 >true : true
->     : ^^^^
 >+0 : 0
->   : ^
 >0 : 0
->  : ^
 >one : number
->    : ^^^^^^
 >1 : 1
->  : ^
 >0 : 0
->  : ^
 >false : false
->      : ^^^^^
 >_float : number
->       : ^^^^^^
 >-(4/3) : number
->       : ^^^^^^
 >(4/3) : number
->      : ^^^^^^
 >4/3 : number
->    : ^^^^^^
 >4 : 4
->  : ^
 >3 : 3
->  : ^
 
   if (a.indexOf(-(4/3)) === 14 &&      // a[14]=_float===-(4/3)
 >a.indexOf(-(4/3)) === 14 &&      // a[14]=_float===-(4/3)      a.indexOf(0) === 7      &&       // a[7] = +0, 0===+0      a.indexOf(-0) === 7      &&     // a[7] = +0, -0===+0      a.indexOf(1) === 10 : boolean
->                                                                                                                                                                                                         : ^^^^^^^
 >a.indexOf(-(4/3)) === 14 &&      // a[14]=_float===-(4/3)      a.indexOf(0) === 7      &&       // a[7] = +0, 0===+0      a.indexOf(-0) === 7 : boolean
->                                                                                                                                              : ^^^^^^^
 >a.indexOf(-(4/3)) === 14 &&      // a[14]=_float===-(4/3)      a.indexOf(0) === 7 : boolean
->                                                                                  : ^^^^^^^
 >a.indexOf(-(4/3)) === 14 : boolean
->                         : ^^^^^^^
 >a.indexOf(-(4/3)) : number
->                  : ^^^^^^
 >a.indexOf : (searchElement: boolean, fromIndex?: number) => number
->          : ^             ^^^^^^^^^^^         ^^^      ^^^^^      
 >a : boolean[]
->  : ^^^^^^^^^
 >indexOf : (searchElement: boolean, fromIndex?: number) => number
->        : ^             ^^^^^^^^^^^         ^^^      ^^^^^      
 >-(4/3) : number
->       : ^^^^^^
 >(4/3) : number
->      : ^^^^^^
 >4/3 : number
->    : ^^^^^^
 >4 : 4
->  : ^
 >3 : 3
->  : ^
 >14 : 14
->   : ^^
 
       a.indexOf(0) === 7      &&       // a[7] = +0, 0===+0
 >a.indexOf(0) === 7 : boolean
->                   : ^^^^^^^
 >a.indexOf(0) : number
->             : ^^^^^^
 >a.indexOf : (searchElement: boolean, fromIndex?: number) => number
->          : ^             ^^^^^^^^^^^         ^^^      ^^^^^      
 >a : boolean[]
->  : ^^^^^^^^^
 >indexOf : (searchElement: boolean, fromIndex?: number) => number
->        : ^             ^^^^^^^^^^^         ^^^      ^^^^^      
 >0 : 0
->  : ^
 >7 : 7
->  : ^
 
       a.indexOf(-0) === 7      &&     // a[7] = +0, -0===+0
 >a.indexOf(-0) === 7 : boolean
->                    : ^^^^^^^
 >a.indexOf(-0) : number
->              : ^^^^^^
 >a.indexOf : (searchElement: boolean, fromIndex?: number) => number
->          : ^             ^^^^^^^^^^^         ^^^      ^^^^^      
 >a : boolean[]
->  : ^^^^^^^^^
 >indexOf : (searchElement: boolean, fromIndex?: number) => number
->        : ^             ^^^^^^^^^^^         ^^^      ^^^^^      
 >-0 : 0
->   : ^
 >0 : 0
->  : ^
 >7 : 7
->  : ^
 
       a.indexOf(1) === 10 )            // a[10] =one=== 1
 >a.indexOf(1) === 10 : boolean
->                    : ^^^^^^^
 >a.indexOf(1) : number
->             : ^^^^^^
 >a.indexOf : (searchElement: boolean, fromIndex?: number) => number
->          : ^             ^^^^^^^^^^^         ^^^      ^^^^^      
 >a : boolean[]
->  : ^^^^^^^^^
 >indexOf : (searchElement: boolean, fromIndex?: number) => number
->        : ^             ^^^^^^^^^^^         ^^^      ^^^^^      
 >1 : 1
->  : ^
 >10 : 10
->   : ^^
   {
     return true;
 >true : true
->     : ^^^^
   }
  }
 runTestCase(testcase);
 >runTestCase(testcase) : any
->                      : ^^^
 >runTestCase : any
->            : ^^^
 >testcase : () => boolean
->         : ^^^^^^^^^^^^^
 
