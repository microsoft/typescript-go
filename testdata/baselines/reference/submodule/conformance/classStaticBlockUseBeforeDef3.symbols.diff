--- old.classStaticBlockUseBeforeDef3.symbols
+++ new.classStaticBlockUseBeforeDef3.symbols
@@= skipped -5, +5 lines =@@
 
     static {
         A.doSomething(); // should not error
->A.doSomething : Symbol(A.doSomething, Decl(classStaticBlockUseBeforeDef3.ts, 3, 5))
+>A.doSomething : Symbol(doSomething, Decl(classStaticBlockUseBeforeDef3.ts, 3, 5))
 >A : Symbol(A, Decl(classStaticBlockUseBeforeDef3.ts, 0, 0))
->doSomething : Symbol(A.doSomething, Decl(classStaticBlockUseBeforeDef3.ts, 3, 5))
+>doSomething : Symbol(doSomething, Decl(classStaticBlockUseBeforeDef3.ts, 3, 5))
     }
 
     static doSomething() {
->doSomething : Symbol(A.doSomething, Decl(classStaticBlockUseBeforeDef3.ts, 3, 5))
+>doSomething : Symbol(doSomething, Decl(classStaticBlockUseBeforeDef3.ts, 3, 5))
 
        console.log("gotcha!");
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
     }
 }
 
@@= skipped -21, +21 lines =@@
 
     static {
         console.log(FOO);   // should error
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >FOO : Symbol(FOO, Decl(classStaticBlockUseBeforeDef3.ts, 17, 5))
     }
 }
@@= skipped -15, +15 lines =@@
 
     static {
         console.log(FOO); // should not error
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >FOO : Symbol(FOO, Decl(classStaticBlockUseBeforeDef3.ts, 17, 5))
     }
 }
@@= skipped -22, +22 lines =@@
     }
 
     static t = 1;
->t : Symbol(CFA.t, Decl(classStaticBlockUseBeforeDef3.ts, 30, 5))
+>t : Symbol(t, Decl(classStaticBlockUseBeforeDef3.ts, 30, 5))
 
     static doSomething() {}
->doSomething : Symbol(CFA.doSomething, Decl(classStaticBlockUseBeforeDef3.ts, 32, 17))
+>doSomething : Symbol(doSomething, Decl(classStaticBlockUseBeforeDef3.ts, 32, 17))
 
     static {
         u;  // should be "BAR"
