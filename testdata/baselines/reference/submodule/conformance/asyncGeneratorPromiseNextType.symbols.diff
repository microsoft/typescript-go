--- old.asyncGeneratorPromiseNextType.symbols
+++ new.asyncGeneratorPromiseNextType.symbols
@@= skipped -27, +27 lines =@@
 >p : Symbol(p, Decl(asyncGeneratorPromiseNextType.ts, 7, 13))
 
             pending.push(p);
->pending.push : Symbol(Array.push, Decl(lib.es5.d.ts, --, --))
+>pending.push : Symbol(push, Decl(lib.es5.d.ts, --, --))
 >pending : Symbol(pending, Decl(asyncGeneratorPromiseNextType.ts, 5, 7))
->push : Symbol(Array.push, Decl(lib.es5.d.ts, --, --))
+>push : Symbol(push, Decl(lib.es5.d.ts, --, --))
 >p : Symbol(p, Decl(asyncGeneratorPromiseNextType.ts, 7, 13))
 
         else {
             const results = await Promise.all(pending);
 >results : Symbol(results, Decl(asyncGeneratorPromiseNextType.ts, 11, 17))
->Promise.all : Symbol(PromiseConstructor.all, Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --))
+>Promise.all : Symbol(all, Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --))
 >Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2018.promise.d.ts, --, --))
->all : Symbol(PromiseConstructor.all, Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --))
+>all : Symbol(all, Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --))
 >pending : Symbol(pending, Decl(asyncGeneratorPromiseNextType.ts, 5, 7))
 
             pending = [];
 >pending : Symbol(pending, Decl(asyncGeneratorPromiseNextType.ts, 5, 7))
 
             console.log('Storing...');
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 
             await storeResults(results);
 >storeResults : Symbol(storeResults, Decl(asyncGeneratorPromiseNextType.ts, 17, 1))
@@= skipped -34, +34 lines =@@
 >Result : Symbol(Result, Decl(asyncGeneratorPromiseNextType.ts, 0, 0))
 
     console.log(results);
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >results : Symbol(results, Decl(asyncGeneratorPromiseNextType.ts, 19, 22))
 
     return Promise.resolve();
->Promise.resolve : Symbol(PromiseConstructor.resolve, Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --))
+>Promise.resolve : Symbol(resolve, Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --))
 >Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2018.promise.d.ts, --, --))
->resolve : Symbol(PromiseConstructor.resolve, Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --))
+>resolve : Symbol(resolve, Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --))
 }
 
 async function *saverGen2() {
@@= skipped -29, +29 lines =@@
 >p : Symbol(p, Decl(asyncGeneratorPromiseNextType.ts, 27, 13))
 
             pending.push(p);
->pending.push : Symbol(Array.push, Decl(lib.es5.d.ts, --, --))
+>pending.push : Symbol(push, Decl(lib.es5.d.ts, --, --))
 >pending : Symbol(pending, Decl(asyncGeneratorPromiseNextType.ts, 25, 7))
->push : Symbol(Array.push, Decl(lib.es5.d.ts, --, --))
+>push : Symbol(push, Decl(lib.es5.d.ts, --, --))
 >p : Symbol(p, Decl(asyncGeneratorPromiseNextType.ts, 27, 13))
 
         else {
             const results = await Promise.all(pending);
 >results : Symbol(results, Decl(asyncGeneratorPromiseNextType.ts, 31, 17))
->Promise.all : Symbol(PromiseConstructor.all, Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --))
+>Promise.all : Symbol(all, Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --))
 >Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2018.promise.d.ts, --, --))
->all : Symbol(PromiseConstructor.all, Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --))
+>all : Symbol(all, Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --))
 >pending : Symbol(pending, Decl(asyncGeneratorPromiseNextType.ts, 25, 7))
 
             pending = [];
 >pending : Symbol(pending, Decl(asyncGeneratorPromiseNextType.ts, 25, 7))
 
             console.log('Storing...');
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 
             await storeResults(results);
 >storeResults : Symbol(storeResults, Decl(asyncGeneratorPromiseNextType.ts, 17, 1))
