--- old.constraintSatisfactionWithAny.symbols
+++ new.constraintSatisfactionWithAny.symbols
@@= skipped -5, +5 lines =@@
 function foo<T extends String>(x: T): T { return null; }
 >foo : Symbol(foo, Decl(constraintSatisfactionWithAny.ts, 0, 0))
 >T : Symbol(T, Decl(constraintSatisfactionWithAny.ts, 2, 13))
->String : Symbol(String, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --) ... and 1 more)
+>String : Symbol(String, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
 >x : Symbol(x, Decl(constraintSatisfactionWithAny.ts, 2, 31))
 >T : Symbol(T, Decl(constraintSatisfactionWithAny.ts, 2, 13))
 >T : Symbol(T, Decl(constraintSatisfactionWithAny.ts, 2, 13))
@@= skipped -63, +63 lines =@@
 class C<T extends String> {
 >C : Symbol(C, Decl(constraintSatisfactionWithAny.ts, 16, 13))
 >T : Symbol(T, Decl(constraintSatisfactionWithAny.ts, 22, 8))
->String : Symbol(String, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --) ... and 1 more)
+>String : Symbol(String, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))

     constructor(public x: T) { }
 >x : Symbol(C.x, Decl(constraintSatisfactionWithAny.ts, 23, 16))