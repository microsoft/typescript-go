--- old.privateNamesAndFields.symbols
+++ new.privateNamesAndFields.symbols
@@= skipped -4, +4 lines =@@
 >A : Symbol(A, Decl(privateNamesAndFields.ts, 0, 0))
 
     #foo: number;
->#foo : Symbol(A.#foo, Decl(privateNamesAndFields.ts, 0, 9))
+>#foo : Symbol(#foo, Decl(privateNamesAndFields.ts, 0, 9))
 
     constructor () {
         this.#foo = 3;
->this.#foo : Symbol(A.#foo, Decl(privateNamesAndFields.ts, 0, 9))
+>this.#foo : Symbol(#foo, Decl(privateNamesAndFields.ts, 0, 9))
 >this : Symbol(A, Decl(privateNamesAndFields.ts, 0, 0))
     }
 }
@@= skipped -14, +14 lines =@@
 >A : Symbol(A, Decl(privateNamesAndFields.ts, 0, 0))
 
     #foo: string;
->#foo : Symbol(B.#foo, Decl(privateNamesAndFields.ts, 7, 19))
+>#foo : Symbol(#foo, Decl(privateNamesAndFields.ts, 7, 19))
 
     constructor () {
         super();
 >super : Symbol(A, Decl(privateNamesAndFields.ts, 0, 0))
 
         this.#foo = "some string";
->this.#foo : Symbol(B.#foo, Decl(privateNamesAndFields.ts, 7, 19))
+>this.#foo : Symbol(#foo, Decl(privateNamesAndFields.ts, 7, 19))
 >this : Symbol(B, Decl(privateNamesAndFields.ts, 5, 1))
     }
 }
