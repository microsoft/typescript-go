--- old.spreadUnion3.js
+++ new.spreadUnion3.js
@@= skipped -21, +21 lines =@@


 //// [spreadUnion3.js]
+var __assign = (this && this.__assign) || function () {
+    __assign = Object.assign || function(t) {
+        for (var s, i = 1, n = arguments.length; i < n; i++) {
+            s = arguments[i];
+            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
+                t[p] = s[p];
+        }
+        return t;
+    };
+    return __assign.apply(this, arguments);
+};
 function f(x) {
-    return Object.assign({ y: 123 }, x); // y: string | number
+    return __assign({ y: 123 }, x); // y: string | number
 }
 f(undefined);
 function g(t) {
-    let b = Object.assign({}, t);
+    let b = __assign({}, t);
     let c = b.a; // might not have 'a'
 }
 g();
 g(undefined);
 g(null);
-var x = Object.assign(Object.assign({}, nullAndUndefinedUnion), nullAndUndefinedUnion);
-var y = Object.assign({}, nullAndUndefinedUnion);
+var x = __assign(__assign({}, nullAndUndefinedUnion), nullAndUndefinedUnion);
+var y = __assign({}, nullAndUndefinedUnion);