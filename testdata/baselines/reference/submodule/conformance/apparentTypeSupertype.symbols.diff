--- old.apparentTypeSupertype.symbols
+++ new.apparentTypeSupertype.symbols
@@= skipped -7, +7 lines =@@
 >Base : Symbol(Base, Decl(apparentTypeSupertype.ts, 0, 0))
 
     x: string;
->x : Symbol(Base.x, Decl(apparentTypeSupertype.ts, 3, 12))
+>x : Symbol(x, Decl(apparentTypeSupertype.ts, 3, 12))
 }
 
 // is String (S) a subtype of U extends String (T)? Would only be true if we used the apparent type of U (T)
@@= skipped -11, +11 lines =@@
 >Base : Symbol(Base, Decl(apparentTypeSupertype.ts, 0, 0))
 
     x: U;
->x : Symbol(Derived.x, Decl(apparentTypeSupertype.ts, 8, 46))
+>x : Symbol(x, Decl(apparentTypeSupertype.ts, 8, 46))
 >U : Symbol(U, Decl(apparentTypeSupertype.ts, 8, 14))
 }
