--- old.classAbstractClinterfaceAssignability.symbols
+++ new.classAbstractClinterfaceAssignability.symbols
@@ -5,7 +5,7 @@
 >I : Symbol(I, Decl(classAbstractClinterfaceAssignability.ts, 0, 0), Decl(classAbstractClinterfaceAssignability.ts, 11, 3))
 
     x: number;
->x : Symbol(I.x, Decl(classAbstractClinterfaceAssignability.ts, 0, 13))
+>x : Symbol(x, Decl(classAbstractClinterfaceAssignability.ts, 0, 13))
 }
 
 interface IConstructor {
@@ -15,10 +15,10 @@
 >I : Symbol(I, Decl(classAbstractClinterfaceAssignability.ts, 0, 0), Decl(classAbstractClinterfaceAssignability.ts, 11, 3))
     
     y: number;
->y : Symbol(IConstructor.y, Decl(classAbstractClinterfaceAssignability.ts, 5, 14))
+>y : Symbol(y, Decl(classAbstractClinterfaceAssignability.ts, 5, 14))
 
     prototype: I;
->prototype : Symbol(IConstructor.prototype, Decl(classAbstractClinterfaceAssignability.ts, 7, 14))
+>prototype : Symbol(prototype, Decl(classAbstractClinterfaceAssignability.ts, 7, 14))
 >I : Symbol(I, Decl(classAbstractClinterfaceAssignability.ts, 0, 0), Decl(classAbstractClinterfaceAssignability.ts, 11, 3))
 }
 
@@ -30,10 +30,10 @@
 >A : Symbol(A, Decl(classAbstractClinterfaceAssignability.ts, 11, 20))
 
     x: number;
->x : Symbol(A.x, Decl(classAbstractClinterfaceAssignability.ts, 13, 18))
+>x : Symbol(x, Decl(classAbstractClinterfaceAssignability.ts, 13, 18))
 
     static y: number;
->y : Symbol(A.y, Decl(classAbstractClinterfaceAssignability.ts, 14, 14))
+>y : Symbol(y, Decl(classAbstractClinterfaceAssignability.ts, 14, 14))
 }
 
 var AA: typeof A;
