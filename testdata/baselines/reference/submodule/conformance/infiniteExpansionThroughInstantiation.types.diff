--- old.infiniteExpansionThroughInstantiation.types
+++ new.infiniteExpansionThroughInstantiation.types
@@= skipped -3, +3 lines =@@
 // instantiating a derived type can cause an infinitely expanding type reference to be generated
 
 interface List<T> {
+>List : List<T>
+>T : T
+
     data: T;
 >data : T
 
@@= skipped -12, +15 lines =@@
 
 // will have an owner property that is an infinitely expanding type reference
 interface OwnerList<U> extends List<List<U>> {
+>OwnerList : OwnerList<U>
+>U : U
+
     name: string;
 >name : string
 }
@@= skipped -17, +20 lines =@@
 
 function other<T>(x: T) {
 >other : <T>(x: T) => void
+>T : T
 >x : T
 
     var list: List<T>;
