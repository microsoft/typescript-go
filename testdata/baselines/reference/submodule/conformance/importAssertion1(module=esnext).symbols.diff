--- old.importAssertion1(module=esnext).symbols
+++ new.importAssertion1(module=esnext).symbols
@@= skipped -57, +57 lines =@@
 === 3.ts ===
 const a = import('./0')
 >a : Symbol(a, Decl(3.ts, 0, 5))
->'./0' : Symbol("0", Decl(0.ts, 0, 0))
 
 const b = import('./0', { assert: { type: "json" } })
 >b : Symbol(b, Decl(3.ts, 1, 5))
->'./0' : Symbol("0", Decl(0.ts, 0, 0))
 >assert : Symbol(assert, Decl(3.ts, 1, 25))
 >type : Symbol(type, Decl(3.ts, 1, 35))
 
 const c = import('./0', { assert: { type: "json", ttype: "typo" } })
 >c : Symbol(c, Decl(3.ts, 2, 5))
->'./0' : Symbol("0", Decl(0.ts, 0, 0))
 >assert : Symbol(assert, Decl(3.ts, 2, 25))
 >type : Symbol(type, Decl(3.ts, 2, 35))
 >ttype : Symbol(ttype, Decl(3.ts, 2, 49))
 
 const d = import('./0', { assert: {} })
 >d : Symbol(d, Decl(3.ts, 3, 5))
->'./0' : Symbol("0", Decl(0.ts, 0, 0))
 >assert : Symbol(assert, Decl(3.ts, 3, 25))
 
 const dd = import('./0', {})
 >dd : Symbol(dd, Decl(3.ts, 4, 5))
->'./0' : Symbol("0", Decl(0.ts, 0, 0))
 
 declare function foo(): any;
 >foo : Symbol(foo, Decl(3.ts, 4, 28))
 
 const e = import('./0', foo())
 >e : Symbol(e, Decl(3.ts, 6, 5))
->'./0' : Symbol("0", Decl(0.ts, 0, 0))
 >foo : Symbol(foo, Decl(3.ts, 4, 28))
 
 const f = import()
@@= skipped -37, +31 lines =@@
 
 const g = import('./0', {}, {})
 >g : Symbol(g, Decl(3.ts, 8, 5))
->'./0' : Symbol("0", Decl(0.ts, 0, 0))
 
 const h = import('./0', { assert: { type: "json" }},)
 >h : Symbol(h, Decl(3.ts, 9, 5))
->'./0' : Symbol("0", Decl(0.ts, 0, 0))
 >assert : Symbol(assert, Decl(3.ts, 9, 25))
 >type : Symbol(type, Decl(3.ts, 9, 35))
 
