--- old.nodeModulesDeclarationEmitDynamicImportWithPackageExports(module=nodenext).js
+++ new.nodeModulesDeclarationEmitDynamicImportWithPackageExports(module=nodenext).js
@@= skipped -127, +127 lines =@@
 export declare const b: typeof import("package/mjs");
 export declare const c: typeof import("package");
 export declare const f: {
-    default: typeof import("inner");
     cjsMain: true;
+    default: typeof import("inner");
 };
 //// [other2.d.ts]
 export declare const d: {
-    default: typeof import("inner/cjs");
     cjsNonmain: true;
+    default: typeof import("inner/cjs");
 };
 export declare const e: typeof import("inner/mjs");
 //// [other.d.mts]
@@= skipped -16, +16 lines =@@
 export declare const b: typeof import("package/mjs");
 export declare const c: typeof import("package");
 export declare const f: {
-    default: typeof import("inner");
     cjsMain: true;
+    default: typeof import("inner");
 };
 //// [other2.d.mts]
 export declare const d: {
-    default: typeof import("inner/cjs");
     cjsNonmain: true;
+    default: typeof import("inner/cjs");
 };
 export declare const e: typeof import("inner/mjs");
 //// [other.d.cts]
 export declare const a: Promise<{
-    default: typeof import("./index.cjs");
+    default: typeof import("./index.cts");
 }>;
 export declare const b: Promise<typeof import("package/mjs", { with: { "resolution-mode": "import" } })>;
 export declare const c: Promise<typeof import("package", { with: { "resolution-mode": "import" } })>;
 export declare const f: Promise<{
-    default: typeof import("inner");
     cjsMain: true;
+    default: typeof import("inner");
 }>;
 //// [other2.d.cts]
 export declare const d: Promise<{
-    default: typeof import("inner/cjs");
     cjsNonmain: true;
+    default: typeof import("inner/cjs");
 }>;
 export declare const e: Promise<typeof import("inner/mjs", { with: { "resolution-mode": "import" } })>;