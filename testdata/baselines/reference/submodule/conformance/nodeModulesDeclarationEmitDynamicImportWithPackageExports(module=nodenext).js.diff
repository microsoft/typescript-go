--- old.nodeModulesDeclarationEmitDynamicImportWithPackageExports(module=nodenext).js
+++ new.nodeModulesDeclarationEmitDynamicImportWithPackageExports(module=nodenext).js
@@= skipped -115, +115 lines =@@


 //// [index.d.ts]
+// esm format file
 export {};
 //// [index.d.mts]
+// esm format file
 export {};
 //// [index.d.cts]
+// cjs format file
 export {};
 //// [other.d.ts]
+// esm format file
 export declare const a: {
     default: typeof import("package/cjs");
 };
@@= skipped -16, +20 lines =@@
     default: typeof import("inner");
 };
 //// [other2.d.ts]
+// esm format file
 export declare const d: {
     cjsNonmain: true;
     default: typeof import("inner/cjs");
 };
 export declare const e: typeof import("inner/mjs");
 //// [other.d.mts]
+// esm format file
 export declare const a: {
     default: typeof import("package/cjs");
 };
@@= skipped -16, +18 lines =@@
     default: typeof import("inner");
 };
 //// [other2.d.mts]
+// esm format file
 export declare const d: {
     cjsNonmain: true;
     default: typeof import("inner/cjs");
 };
 export declare const e: typeof import("inner/mjs");
 //// [other.d.cts]
+// cjs format file, no TLA
 export declare const a: Promise<{
-    default: typeof import("./index.cjs");
+    default: typeof import("./index.cts");
 }>;
 export declare const b: Promise<typeof import("package/mjs", { with: { "resolution-mode": "import" } })>;
 export declare const c: Promise<typeof import("package", { with: { "resolution-mode": "import" } })>;
@@= skipped -16, +18 lines =@@
     default: typeof import("inner");
 }>;
 //// [other2.d.cts]
+// cjs format file, no TLA
 export declare const d: Promise<{
     cjsNonmain: true;
     default: typeof import("inner/cjs");