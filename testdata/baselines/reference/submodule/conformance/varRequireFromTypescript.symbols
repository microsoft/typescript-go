//// [tests/cases/conformance/salsa/varRequireFromTypescript.ts] ////

=== use.js ===
var ex = require('./ex')
>ex : Symbol(ex, Decl(use.js, 0, 3))

// values work
var crunch = new ex.Crunch(1);
>crunch : Symbol(crunch, Decl(use.js, 3, 3))
>ex : Symbol(ex, Decl(use.js, 0, 3))

crunch.n
>crunch : Symbol(crunch, Decl(use.js, 3, 3))


// types work
/**
 * @param {ex.Greatest} greatest
 * @param {ex.Crunch} wrap
 */
function f(greatest, wrap) {
>f : Symbol(f, Decl(use.js, 4, 8))
>greatest : Symbol(greatest, Decl(use.js, 12, 11))
>wrap : Symbol(wrap, Decl(use.js, 12, 20))

    greatest.day
>greatest : Symbol(greatest, Decl(use.js, 12, 11))

    wrap.n
>wrap : Symbol(wrap, Decl(use.js, 12, 20))
}

=== ex.d.ts ===
export type Greatest = { day: 1 }
>Greatest : Symbol(Greatest, Decl(ex.d.ts, 0, 0))
>day : Symbol(day, Decl(ex.d.ts, 0, 24))

export class Crunch {
>Crunch : Symbol(Crunch, Decl(ex.d.ts, 0, 33))

    n: number
>n : Symbol(n, Decl(ex.d.ts, 1, 21))

    m(): number
>m : Symbol(m, Decl(ex.d.ts, 2, 13))

    constructor(n: number)
>n : Symbol(n, Decl(ex.d.ts, 4, 16))
}

