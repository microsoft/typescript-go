error TS2468: Cannot find global value 'Promise'.
assignmentTargets.ts(2,1): error TS2364: The left-hand side of an assignment expression must be a variable or a property access.
example.ts(2,2): error TS2705: An async function or method in ES5 requires the 'Promise' constructor.  Make sure you have a declaration for the 'Promise' constructor or include 'ES2015' in your '--lib' option.


!!! error TS2468: Cannot find global value 'Promise'.
==== example.ts (1 errors) ====
    // Adapted from https://github.com/tc39/proposal-import-meta/tree/c3902a9ffe2e69a7ac42c19d7ea74cbdcea9b7fb#example
    (async () => {
     ~~~~~~~~~~~~~
!!! error TS2705: An async function or method in ES5 requires the 'Promise' constructor.  Make sure you have a declaration for the 'Promise' constructor or include 'ES2015' in your '--lib' option.
      const response = await fetch(new URL("../hamsters.jpg", import.meta.url).toString());
      const blob = await response.blob();
    
      const size = import.meta.scriptElement.dataset.size || 300;
    
      const image = new Image();
      image.src = URL.createObjectURL(blob);
      image.width = image.height = size;
    
      document.body.appendChild(image);
    })();
    
==== moduleLookingFile01.ts (0 errors) ====
    export let x = import.meta;
    export let y = import.metal;
    export let z = import.import.import.malkovich;
    
==== scriptLookingFile01.ts (0 errors) ====
    let globalA = import.meta;
    let globalB = import.metal;
    let globalC = import.import.import.malkovich;
    
==== assignmentTargets.ts (1 errors) ====
    export const foo: ImportMeta = import.meta.blah = import.meta.blue = import.meta;
    import.meta = foo;
    ~~~~~~~~~~~
!!! error TS2364: The left-hand side of an assignment expression must be a variable or a property access.
    
    // @Filename augmentations.ts
    declare global {
      interface ImportMeta {
        wellKnownProperty: { a: number, b: string, c: boolean };
      }
    }
    
    const { a, b, c } = import.meta.wellKnownProperty;