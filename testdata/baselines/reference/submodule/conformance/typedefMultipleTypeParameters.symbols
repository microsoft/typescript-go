//// [tests/cases/conformance/jsdoc/typedefMultipleTypeParameters.ts] ////

=== a.js ===
/**
 * @template {{ a: number, b: string }} T,U A Comment
>a : Symbol(a, Decl(a.js, 1, 15))
>b : Symbol(b, Decl(a.js, 1, 26))
>a : Symbol(a, Decl(a.js, 1, 15))
>b : Symbol(b, Decl(a.js, 1, 26))

 * @template {{ c: boolean }} V uh ... are comments even supported??
>c : Symbol(c, Decl(a.js, 2, 15))

 * @template W
 * @template X That last one had no comment
 * @typedef {{ t: T, u: U, v: V, w: W, x: X }} Everything
>t : Symbol(t, Decl(a.js, 5, 14))
>T : Symbol(T)
>u : Symbol(u, Decl(a.js, 5, 20))
>U : Symbol(U)
>v : Symbol(v, Decl(a.js, 5, 26))
>V : Symbol(V)
>w : Symbol(w, Decl(a.js, 5, 32))
>W : Symbol(W)
>x : Symbol(x, Decl(a.js, 5, 38))
>X : Symbol(X)

 */

/** @type {Everything<{ a: number, b: 'hi', c: never }, undefined, { c: true, d: 1 }, number, string>} */
var tuvwx;
>tuvwx : Symbol(tuvwx, Decl(a.js, 9, 3))

/** @type {Everything<{ a: number  }, undefined, { c: 1, d: 1 }, number, string>} */
var wrong;
>wrong : Symbol(wrong, Decl(a.js, 12, 3))

/** @type {Everything<{ a: number  }>} */
var insufficient;
>insufficient : Symbol(insufficient, Decl(a.js, 15, 3))

=== test.ts ===
declare var actually: Everything<{ a: number  }, undefined, { c: 1, d: 1 }, number, string>;
>actually : Symbol(actually, Decl(test.ts, 0, 11))
>Everything : Symbol(Everything)
>a : Symbol(a, Decl(test.ts, 0, 34))
>c : Symbol(c, Decl(test.ts, 0, 61))
>d : Symbol(d, Decl(test.ts, 0, 67))

