--- old.computedPropertyName.symbols
+++ new.computedPropertyName.symbols
@@= skipped -12, +12 lines =@@
 >Component : Symbol(Component, Decl(component.ts, 0, 48))
 
   [onInit]?(): void;
->[onInit] : Symbol(Component[onInit], Decl(component.ts, 2, 21))
+>[onInit] : Symbol([onInit], Decl(component.ts, 2, 21))
 >onInit : Symbol(onInit, Decl(component.ts, 0, 13))
 }
 
@@= skipped -25, +25 lines =@@
 >C : Symbol(C, Decl(component.ts, 12, 2))
 
   [onInit]: any; // Error (because class fields)
->[onInit] : Symbol(C[onInit], Decl(component.ts, 14, 9))
+>[onInit] : Symbol([onInit], Decl(component.ts, 14, 9))
 >onInit : Symbol(onInit, Decl(component.ts, 0, 13))
 }
 
@@= skipped -8, +8 lines =@@
 >D : Symbol(D, Decl(component.ts, 16, 1))
 
   [onInit] = 0; // Error
->[onInit] : Symbol(D[onInit], Decl(component.ts, 18, 9))
+>[onInit] : Symbol([onInit], Decl(component.ts, 18, 9))
 >onInit : Symbol(onInit, Decl(component.ts, 0, 13))
 }
 
@@= skipped -8, +8 lines =@@
 >E : Symbol(E, Decl(component.ts, 20, 1))
 
   [onInit]() {} // Error
->[onInit] : Symbol(E[onInit], Decl(component.ts, 22, 9))
+>[onInit] : Symbol([onInit], Decl(component.ts, 22, 9))
 >onInit : Symbol(onInit, Decl(component.ts, 0, 13))
 }
 
@@= skipped -8, +8 lines =@@
 >F : Symbol(F, Decl(component.ts, 24, 1))
 
   abstract [onInit](): void;
->[onInit] : Symbol(F[onInit], Decl(component.ts, 26, 18))
+>[onInit] : Symbol([onInit], Decl(component.ts, 26, 18))
 >onInit : Symbol(onInit, Decl(component.ts, 0, 13))
 }
 
@@= skipped -8, +8 lines =@@
 >G : Symbol(G, Decl(component.ts, 28, 1))
 
   declare [onInit]: any;
->[onInit] : Symbol(G[onInit], Decl(component.ts, 30, 9))
+>[onInit] : Symbol([onInit], Decl(component.ts, 30, 9))
 >onInit : Symbol(onInit, Decl(component.ts, 0, 13))
 }
 
@@= skipped -8, +8 lines =@@
 >H : Symbol(H, Decl(component.ts, 32, 1))
 
   [onInit]: any;
->[onInit] : Symbol(H[onInit], Decl(component.ts, 34, 17))
+>[onInit] : Symbol([onInit], Decl(component.ts, 34, 17))
 >onInit : Symbol(onInit, Decl(component.ts, 0, 13))
 }
 
