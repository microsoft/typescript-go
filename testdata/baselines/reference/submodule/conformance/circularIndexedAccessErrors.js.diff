--- old.circularIndexedAccessErrors.js
+++ new.circularIndexedAccessErrors.js
@@= skipped -43, +43 lines =@@
 //// [circularIndexedAccessErrors.js]
 let x2x = x2.x;
 class C1 {
+    x; // Error
 }
 class C2 {
+    x;
+    y;
+    z;
 }
 function foo() {
 }
@@= skipped -9, +13 lines =@@

 //// [circularIndexedAccessErrors.d.ts]
 type T1 = {
-    x: T1["x"];
+    x: T1["x"]; // Error
 };
 type T2<K extends "x" | "y"> = {
-    x: T2<K>[K];
+    x: T2<K>[K]; // Error
     y: number;
 };
 declare let x2: T2<"x">;
@@= skipped -12, +12 lines =@@
     x: T["x"];
 }
 interface T4<T extends T4<T>> {
-    x: T4<T>["x"];
+    x: T4<T>["x"]; // Error
 }
 declare class C1 {
-    x: C1["x"];
+    x: C1["x"]; // Error
 }
 declare class C2 {
     x: this["y"];
     y: this["z"];
     z: this["x"];
 }
+// Repro from #12627
 interface Foo {
     hello: boolean;
 }