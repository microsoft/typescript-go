--- old.destructuringParameterProperties4.symbols
+++ new.destructuringParameterProperties4.symbols
@@= skipped -7, +7 lines =@@
 >V : Symbol(V, Decl(destructuringParameterProperties4.ts, 0, 14))
 
     constructor(private k: T, protected [a, b, c]: [T,U,V]) {
->k : Symbol(C1.k, Decl(destructuringParameterProperties4.ts, 1, 16))
+>k : Symbol(k, Decl(destructuringParameterProperties4.ts, 1, 16))
 >T : Symbol(T, Decl(destructuringParameterProperties4.ts, 0, 9))
 >a : Symbol(a, Decl(destructuringParameterProperties4.ts, 1, 41))
 >b : Symbol(b, Decl(destructuringParameterProperties4.ts, 1, 43))
@@= skipped -27, +27 lines =@@
     }
 
     public getA() {
->getA : Symbol(C1.getA, Decl(destructuringParameterProperties4.ts, 5, 5))
+>getA : Symbol(getA, Decl(destructuringParameterProperties4.ts, 5, 5))
 
         return this.a
 >this : Symbol(C1, Decl(destructuringParameterProperties4.ts, 0, 0))
     }
 
     public getB() {
->getB : Symbol(C1.getB, Decl(destructuringParameterProperties4.ts, 9, 5))
+>getB : Symbol(getB, Decl(destructuringParameterProperties4.ts, 9, 5))
 
         return this.b
 >this : Symbol(C1, Decl(destructuringParameterProperties4.ts, 0, 0))
     }
 
     public getC() {
->getC : Symbol(C1.getC, Decl(destructuringParameterProperties4.ts, 13, 5))
+>getC : Symbol(getC, Decl(destructuringParameterProperties4.ts, 13, 5))
 
         return this.c;
 >this : Symbol(C1, Decl(destructuringParameterProperties4.ts, 0, 0))
@@= skipped -26, +26 lines =@@
 >C1 : Symbol(C1, Decl(destructuringParameterProperties4.ts, 0, 0))
 
     public doSomethingWithSuperProperties() {
->doSomethingWithSuperProperties : Symbol(C2.doSomethingWithSuperProperties, Decl(destructuringParameterProperties4.ts, 20, 46))
+>doSomethingWithSuperProperties : Symbol(doSomethingWithSuperProperties, Decl(destructuringParameterProperties4.ts, 20, 46))
 
         return `${this.a} ${this.b} ${this.c}`;
 >this : Symbol(C2, Decl(destructuringParameterProperties4.ts, 18, 1))
