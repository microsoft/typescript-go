--- old.jsDeclarationsEnums.js
+++ new.jsDeclarationsEnums.js
@@= skipped -65, +65 lines =@@

 //// [index.js]
 "use strict";
-// Pretty much all of this should be an error, (since enums are forbidden in js),
-// but we should be able to synthesize declarations from the symbols regardless
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.K = exports.I = exports.H = exports.G = exports.F = exports.FF = exports.EE = exports.E = exports.D = exports.C = exports.B = exports.A = void 0;
+exports.L = exports.K = exports.J = exports.I = exports.H = exports.G = exports.F = exports.FF = exports.EE = exports.E = exports.D = exports.C = exports.B = exports.A = void 0;
+// Pretty much all of this should be an error, (since enums are forbidden in js),
+// but we should be able to synthesize declarations from the symbols regardless
 var A;
 (function (A) {
 })(A || (exports.A = A = {}));
@@= skipped -40, +40 lines =@@
     I[I["B"] = 0] = "B";
     I[I["C"] = 1] = "C";
 })(I || (exports.I = I = {}));
+var J;
+(function (J) {
+    J[J["A"] = 1] = "A";
+    J[J["B"] = 2] = "B";
+    J[J["C"] = 3] = "C";
+})(J || (exports.J = J = {}));
 var K;
 (function (K) {
     K[K["None"] = 0] = "None";
@@= skipped -8, +14 lines =@@
     K[K["C"] = 4] = "C";
     K[K["Mask"] = 7] = "Mask";
 })(K || (exports.K = K = {}));
+var L;
+(function (L) {
+    L[L["None"] = 0] = "None";
+    L[L["A"] = 1] = "A";
+    L[L["B"] = 2] = "B";
+    L[L["C"] = 4] = "C";
+    L[L["Mask"] = 7] = "Mask";
+})(L || (exports.L = L = {}));


 //// [index.d.ts]
-export enum A {
+// Pretty much all of this should be an error, (since enums are forbidden in js),
+// but we should be able to synthesize declarations from the symbols regardless
+export declare enum A {
 }
-export enum B {
+export declare enum B {
     Member = 0
 }
-export enum E {
-}
-export enum F {
-}
-export enum G {
+declare enum C {
+}
+export { C };
+declare enum DD {
+}
+export { DD as D };
+export declare enum E {
+}
+export { E as EE };
+export { F as FF };
+export declare enum F {
+}
+export declare enum G {
     A = 1,
     B = 2,
     C = 3
 }
-export enum H {
+export declare enum H {
     A = "a",
     B = "b"
 }
-export enum I {
+export declare enum I {
     A = "a",
     B = 0,
     C = 1
 }
-export const enum J {
+export declare const enum J {
     A = 1,
     B = 2,
     C = 3
 }
-export enum K {
-    None = 0,
-    A = 1,
-    B = 2,
-    C = 4,
-    Mask = 7
-}
-export const enum L {
-    None = 0,
-    A = 1,
-    B = 2,
-    C = 4,
-    Mask = 7
-}
-export enum C {
-}
-declare enum DD {
-}
-export { DD as D, E as EE, F as FF };
+export declare enum K {
+    None = 0,
+    A = 1,
+    B = 2,
+    C = 4,
+    Mask = 7
+}
+export declare const enum L {
+    None = 0,
+    A = 1,
+    B = 2,
+    C = 4,
+    Mask = 7
+}