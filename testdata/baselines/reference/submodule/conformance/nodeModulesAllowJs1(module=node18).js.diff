--- old.nodeModulesAllowJs1(module=node18).js
+++ new.nodeModulesAllowJs1(module=node18).js
@@= skipped -372, +372 lines =@@
 export { x };
 //// [index.cjs]
 "use strict";
-var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
-    if (k2 === undefined) k2 = k;
-    var desc = Object.getOwnPropertyDescriptor(m, k);
-    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
-      desc = { enumerable: true, get: function() { return m[k]; } };
-    }
-    Object.defineProperty(o, k2, desc);
-}) : (function(o, m, k, k2) {
-    if (k2 === undefined) k2 = k;
-    o[k2] = m[k];
-}));
-var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
-    Object.defineProperty(o, "default", { enumerable: true, value: v });
-}) : function(o, v) {
-    o["default"] = v;
-});
-var __importStar = (this && this.__importStar) || (function () {
-    var ownKeys = function(o) {
-        ownKeys = Object.getOwnPropertyNames || function (o) {
-            var ar = [];
-            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
-            return ar;
-        };
-        return ownKeys(o);
-    };
-    return function (mod) {
-        if (mod && mod.__esModule) return mod;
-        var result = {};
-        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
-        __setModuleDefault(result, mod);
-        return result;
-    };
-})();
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.x = void 0;
 // ESM-format imports below should issue errors
-const m1 = __importStar(require("./index.js"));
-const m2 = __importStar(require("./index.mjs"));
-const m3 = __importStar(require("./index.cjs"));
-const m4 = __importStar(require("./subfolder/index.js"));
-const m5 = __importStar(require("./subfolder/index.mjs"));
-const m6 = __importStar(require("./subfolder/index.cjs"));
-const m7 = __importStar(require("./subfolder2/index.js"));
-const m8 = __importStar(require("./subfolder2/index.mjs"));
-const m9 = __importStar(require("./subfolder2/index.cjs"));
-const m10 = __importStar(require("./subfolder2/another/index.js"));
-const m11 = __importStar(require("./subfolder2/another/index.mjs"));
-const m12 = __importStar(require("./subfolder2/another/index.cjs"));
+const m1 = require("./index.js");
+const m2 = require("./index.mjs");
+const m3 = require("./index.cjs");
+const m4 = require("./subfolder/index.js");
+const m5 = require("./subfolder/index.mjs");
+const m6 = require("./subfolder/index.cjs");
+const m7 = require("./subfolder2/index.js");
+const m8 = require("./subfolder2/index.mjs");
+const m9 = require("./subfolder2/index.cjs");
+const m10 = require("./subfolder2/another/index.js");
+const m11 = require("./subfolder2/another/index.mjs");
+const m12 = require("./subfolder2/another/index.cjs");
 // The next ones should _mostly_ work - cjs format files have index resolution and extension resolution (except for those which resolve to an esm format file)
-const m13 = __importStar(require("./"));
-const m14 = __importStar(require("./index"));
-const m15 = __importStar(require("./subfolder"));
-const m16 = __importStar(require("./subfolder/"));
-const m17 = __importStar(require("./subfolder/index"));
-const m18 = __importStar(require("./subfolder2"));
-const m19 = __importStar(require("./subfolder2/"));
-const m20 = __importStar(require("./subfolder2/index"));
-const m21 = __importStar(require("./subfolder2/another"));
-const m22 = __importStar(require("./subfolder2/another/"));
-const m23 = __importStar(require("./subfolder2/another/index"));
+const m13 = require("./");
+const m14 = require("./index");
+const m15 = require("./subfolder");
+const m16 = require("./subfolder/");
+const m17 = require("./subfolder/index");
+const m18 = require("./subfolder2");
+const m19 = require("./subfolder2/");
+const m20 = require("./subfolder2/index");
+const m21 = require("./subfolder2/another");
+const m22 = require("./subfolder2/another/");
+const m23 = require("./subfolder2/another/index");
 void m1;
 void m2;
 void m3;
@@= skipped -300, +267 lines =@@


 //// [index.d.ts]
-export const x: 1;
-//// [index.d.cts]
-export const x: 1;
-//// [index.d.mts]
-export const x: 1;
-//// [index.d.ts]
-export const x: 1;
-//// [index.d.cts]
-export const x: 1;
-//// [index.d.mts]
-export const x: 1;
-//// [index.d.ts]
-export const x: 1;
-//// [index.d.cts]
-export const x: 1;
-//// [index.d.mts]
-export const x: 1;
-//// [index.d.cts]
-export const x: 1;
-//// [index.d.mts]
-export const x: 1;
-//// [index.d.ts]
-export const x: 1;
+// cjs format file
+declare const x = 1;
+export { x };
+//// [index.d.cts]
+// cjs format file
+declare const x = 1;
+export { x };
+//// [index.d.mts]
+// esm format file
+declare const x = 1;
+export { x };
+//// [index.d.ts]
+// cjs format file
+declare const x = 1;
+export { x };
+//// [index.d.cts]
+// cjs format file
+declare const x = 1;
+export { x };
+//// [index.d.mts]
+// esm format file
+declare const x = 1;
+export { x };
+//// [index.d.ts]
+// esm format file
+declare const x = 1;
+export { x };
+//// [index.d.cts]
+// cjs format file
+declare const x = 1;
+export { x };
+//// [index.d.mts]
+// esm format file
+declare const x = 1;
+export { x };
+//// [index.d.cts]
+// cjs format file
+declare const x = 1;
+export { x };
+//// [index.d.mts]
+// esm format file
+declare const x = 1;
+export { x };
+//// [index.d.ts]
+// esm format file
+declare const x = 1;
+export { x };