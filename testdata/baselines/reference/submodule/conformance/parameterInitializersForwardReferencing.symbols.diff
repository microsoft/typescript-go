--- old.parameterInitializersForwardReferencing.symbols
+++ new.parameterInitializersForwardReferencing.symbols
@@= skipped -51, +51 lines =@@
 function inside(a = b) {
 >inside : Symbol(inside, Decl(parameterInitializersForwardReferencing.ts, 14, 1))
 >a : Symbol(a, Decl(parameterInitializersForwardReferencing.ts, 16, 16))
+>b : Symbol(b, Decl(parameterInitializersForwardReferencing.ts, 17, 7))

     var b;
 >b : Symbol(b, Decl(parameterInitializersForwardReferencing.ts, 17, 7))
@@= skipped -14, +15 lines =@@
     function inside(a = b) { // Still an error because b is declared inside the function
 >inside : Symbol(inside, Decl(parameterInitializersForwardReferencing.ts, 21, 10))
 >a : Symbol(a, Decl(parameterInitializersForwardReferencing.ts, 22, 20))
->b : Symbol(b, Decl(parameterInitializersForwardReferencing.ts, 21, 7))
+>b : Symbol(b, Decl(parameterInitializersForwardReferencing.ts, 23, 11))

         var b;
 >b : Symbol(b, Decl(parameterInitializersForwardReferencing.ts, 23, 11))
@@= skipped -42, +42 lines =@@
 >b : Symbol(b, Decl(parameterInitializersForwardReferencing.ts, 36, 15))
 >c : Symbol(c, Decl(parameterInitializersForwardReferencing.ts, 36, 22))
 >c : Symbol(c, Decl(parameterInitializersForwardReferencing.ts, 36, 22))
+>d : Symbol(d, Decl(parameterInitializersForwardReferencing.ts, 36, 38))
 >d : Symbol(d, Decl(parameterInitializersForwardReferencing.ts, 36, 38))

 // Should not produce errors - can reference later parameters if they occur within a function expression initializer.