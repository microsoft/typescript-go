--- old.generatorTypeCheck62.symbols
+++ new.generatorTypeCheck62.symbols
@@ -5,7 +5,7 @@
 >StrategicState : Symbol(StrategicState, Decl(generatorTypeCheck62.ts, 0, 0))
 
     lastStrategyApplied?: string;
->lastStrategyApplied : Symbol(StrategicState.lastStrategyApplied, Decl(generatorTypeCheck62.ts, 0, 33))
+>lastStrategyApplied : Symbol(lastStrategyApplied, Decl(generatorTypeCheck62.ts, 0, 33))
 }
 
 export function strategy<T extends StrategicState>(stratName: string, gen: (a: T) => IterableIterator<T | undefined, void>): (a: T) => IterableIterator<T | undefined, void> {
@@ -16,11 +16,11 @@
 >gen : Symbol(gen, Decl(generatorTypeCheck62.ts, 4, 69))
 >a : Symbol(a, Decl(generatorTypeCheck62.ts, 4, 76))
 >T : Symbol(T, Decl(generatorTypeCheck62.ts, 4, 25))
->IterableIterator : Symbol(IterableIterator, Decl(lib.es2015.iterable.d.ts, --, --))
+>IterableIterator : Symbol(IterableIterator)
 >T : Symbol(T, Decl(generatorTypeCheck62.ts, 4, 25))
 >a : Symbol(a, Decl(generatorTypeCheck62.ts, 4, 126))
 >T : Symbol(T, Decl(generatorTypeCheck62.ts, 4, 25))
->IterableIterator : Symbol(IterableIterator, Decl(lib.es2015.iterable.d.ts, --, --))
+>IterableIterator : Symbol(IterableIterator)
 >T : Symbol(T, Decl(generatorTypeCheck62.ts, 4, 25))
 
     return function*(state) {
@@ -35,9 +35,7 @@
 >next : Symbol(next, Decl(generatorTypeCheck62.ts, 6, 18))
 
                 next.lastStrategyApplied = stratName;
->next.lastStrategyApplied : Symbol(StrategicState.lastStrategyApplied, Decl(generatorTypeCheck62.ts, 0, 33))
 >next : Symbol(next, Decl(generatorTypeCheck62.ts, 6, 18))
->lastStrategyApplied : Symbol(StrategicState.lastStrategyApplied, Decl(generatorTypeCheck62.ts, 0, 33))
 >stratName : Symbol(stratName, Decl(generatorTypeCheck62.ts, 4, 51))
             }
             yield next;
@@ -53,7 +51,7 @@
     (a: T): IterableIterator<T | undefined, void>;
 >a : Symbol(a, Decl(generatorTypeCheck62.ts, 16, 5))
 >T : Symbol(T, Decl(generatorTypeCheck62.ts, 15, 26))
->IterableIterator : Symbol(IterableIterator, Decl(lib.es2015.iterable.d.ts, --, --))
+>IterableIterator : Symbol(IterableIterator)
 >T : Symbol(T, Decl(generatorTypeCheck62.ts, 15, 26))
 }
 
@@ -62,7 +60,7 @@
 >StrategicState : Symbol(StrategicState, Decl(generatorTypeCheck62.ts, 0, 0))
 
     foo: number;
->foo : Symbol(State.foo, Decl(generatorTypeCheck62.ts, 19, 47))
+>foo : Symbol(foo, Decl(generatorTypeCheck62.ts, 19, 47))
 }
 
 export const Nothing1: Strategy<State> = strategy("Nothing", function*(state: State) {
