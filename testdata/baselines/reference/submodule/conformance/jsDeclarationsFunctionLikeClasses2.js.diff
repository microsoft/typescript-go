--- old.jsDeclarationsFunctionLikeClasses2.js
+++ new.jsDeclarationsFunctionLikeClasses2.js
@@= skipped -157, +157 lines =@@
 /**
  * @param {number} len
  */
-export function Vec(len: number): void;
-export class Vec {
-    /**
-     * @param {number} len
-     */
-    constructor(len: number);
-    /**
-     * @type {number[]}
-     */
-    storage: number[];
-    /**
-     * @param {Vec} other
-     */
-    dot(other: Vec): number;
-    magnitude(): number;
+export declare function Vec(len: number): void;
+export declare namespace Vec {
+    var prototype: {
+        /**
+         * @param {Vec} other
+         */
+        dot(other: Vec): number;
+        magnitude(): number;
+    };
 }
 /**
  * @param {number} x
  * @param {number} y
  */
-export function Point2D(x: number, y: number): Point2D;
-export class Point2D {
-    /**
-     * @param {number} x
-     * @param {number} y
-     */
-    constructor(x: number, y: number);
-    /**
-     * @param {number} x
-     */
-    set x(x: number);
-    get x(): number;
-    /**
-     * @param {number} y
-     */
-    set y(y: number);
-    get y(): number;
-    __proto__: typeof Vec;
+export declare function Point2D(x: number, y: number): any;
+export declare namespace Point2D {
+    var prototype: {
+        __proto__: typeof Vec;
+        x: number;
+        y: number;
+    };
 }
 //// [referencer.d.ts]
-export const origin: Point2D;
-import { Point2D } from "./source";
+export declare const origin: any;