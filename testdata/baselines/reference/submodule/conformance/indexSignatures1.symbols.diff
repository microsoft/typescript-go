--- old.indexSignatures1.symbols
+++ new.indexSignatures1.symbols
@@ -135,9 +135,9 @@
 
 const y2 = dom.data123;
 >y2 : Symbol(y2, Decl(indexSignatures1.ts, 47, 5))
->dom.data123 : Symbol(__index, Decl(indexSignatures1.ts, 45, 18))
+>dom.data123 : Symbol((Missing), Decl(indexSignatures1.ts, 45, 18))
 >dom : Symbol(dom, Decl(indexSignatures1.ts, 45, 11))
->data123 : Symbol(__index, Decl(indexSignatures1.ts, 45, 18))
+>data123 : Symbol((Missing), Decl(indexSignatures1.ts, 45, 18))
 
 // Excess property checking for template pattern index signature
 
@@ -170,9 +170,9 @@
     sfoo: x => x.length,  // x: string
 >sfoo : Symbol(sfoo, Decl(indexSignatures1.ts, 61, 22))
 >x : Symbol(x, Decl(indexSignatures1.ts, 62, 9))
->x.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>x.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >x : Symbol(x, Decl(indexSignatures1.ts, 62, 9))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 
     nfoo: x => x * 2,     // n: number
 >nfoo : Symbol(nfoo, Decl(indexSignatures1.ts, 62, 24))
@@ -596,8 +596,8 @@
 >obj10 : Symbol(obj10, Decl(indexSignatures1.ts, 203, 5))
 
     ['x']: 0 as const,
->['x'] : Symbol(['x'], Decl(indexSignatures1.ts, 203, 15))
->'x' : Symbol(['x'], Decl(indexSignatures1.ts, 203, 15))
+>['x'] : Symbol(x, Decl(indexSignatures1.ts, 203, 15))
+>'x' : Symbol(x, Decl(indexSignatures1.ts, 203, 15))
 >const : Symbol(const)
 
     ['a' + 'b']: 1 as const,
@@ -639,8 +639,8 @@
 >obj13 : Symbol(obj13, Decl(indexSignatures1.ts, 218, 5))
 
     ['x']: 0 as const,
->['x'] : Symbol(['x'], Decl(indexSignatures1.ts, 218, 15))
->'x' : Symbol(['x'], Decl(indexSignatures1.ts, 218, 15))
+>['x'] : Symbol(x, Decl(indexSignatures1.ts, 218, 15))
+>'x' : Symbol(x, Decl(indexSignatures1.ts, 218, 15))
 >const : Symbol(const)
 
     ['a' + 'b']: 1 as const,
@@ -690,7 +690,7 @@
 >plugins : Symbol(plugins, Decl(indexSignatures1.ts, 236, 5))
 
     "user": {} as Plugs,
->"user" : Symbol("user", Decl(indexSignatures1.ts, 236, 17))
+>"user" : Symbol(user, Decl(indexSignatures1.ts, 236, 17))
 >Plugs : Symbol(Plugs, Decl(indexSignatures1.ts, 230, 48))
 
     [system]: {} as Plugs
@@ -704,9 +704,9 @@
 >plugins : Symbol(plugins, Decl(indexSignatures1.ts, 236, 5))
 >system : Symbol(system, Decl(indexSignatures1.ts, 229, 5))
 >SomeSytePlugin : Symbol(SomeSytePlugin, Decl(indexSignatures1.ts, 230, 5))
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 
 plugins[system][SomeSytePlugin]();
 >plugins : Symbol(plugins, Decl(indexSignatures1.ts, 236, 5))
@@ -831,7 +831,7 @@
 const test: PseudoDeclaration = { 'someKey' : 'someValue' };  // Error
 >test : Symbol(test, Decl(indexSignatures1.ts, 280, 5))
 >PseudoDeclaration : Symbol(PseudoDeclaration, Decl(indexSignatures1.ts, 276, 30))
->'someKey' : Symbol('someKey', Decl(indexSignatures1.ts, 280, 33))
+>'someKey' : Symbol(someKey, Decl(indexSignatures1.ts, 280, 33))
 
 type FieldPattern = `/${string}`;
 >FieldPattern : Symbol(FieldPattern, Decl(indexSignatures1.ts, 280, 60))
@@ -882,10 +882,10 @@
 >AA : Symbol(AA, Decl(indexSignatures1.ts, 297, 16))
 
     a?: string;
->a : Symbol(AA.a, Decl(indexSignatures1.ts, 301, 14))
+>a : Symbol(a, Decl(indexSignatures1.ts, 301, 14))
 
     b?: number;
->b : Symbol(AA.b, Decl(indexSignatures1.ts, 302, 15))
+>b : Symbol(b, Decl(indexSignatures1.ts, 302, 15))
 
     [key: symbol]: string;
 >key : Symbol(key, Decl(indexSignatures1.ts, 304, 5))
