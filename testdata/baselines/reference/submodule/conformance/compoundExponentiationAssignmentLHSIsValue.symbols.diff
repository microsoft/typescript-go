--- old.compoundExponentiationAssignmentLHSIsValue.symbols
+++ new.compoundExponentiationAssignmentLHSIsValue.symbols
@@= skipped -14, +14 lines =@@
 >value : Symbol(value, Decl(compoundExponentiationAssignmentLHSIsValue.ts, 1, 3))
     }
     foo() {
->foo : Symbol(C.foo, Decl(compoundExponentiationAssignmentLHSIsValue.ts, 7, 5))
+>foo : Symbol(foo, Decl(compoundExponentiationAssignmentLHSIsValue.ts, 7, 5))
 
         this **= value;
 >this : Symbol(C, Decl(compoundExponentiationAssignmentLHSIsValue.ts, 1, 15))
 >value : Symbol(value, Decl(compoundExponentiationAssignmentLHSIsValue.ts, 1, 3))
     }
     static sfoo() {
->sfoo : Symbol(C.sfoo, Decl(compoundExponentiationAssignmentLHSIsValue.ts, 10, 5))
+>sfoo : Symbol(sfoo, Decl(compoundExponentiationAssignmentLHSIsValue.ts, 10, 5))
 
         this **= value;
 >this : Symbol(C, Decl(compoundExponentiationAssignmentLHSIsValue.ts, 1, 15))
@@= skipped -92, +92 lines =@@
     }
 
     foo() {
->foo : Symbol(Derived.foo, Decl(compoundExponentiationAssignmentLHSIsValue.ts, 52, 5))
+>foo : Symbol(foo, Decl(compoundExponentiationAssignmentLHSIsValue.ts, 52, 5))
 
         super **= value;
 >super : Symbol(C, Decl(compoundExponentiationAssignmentLHSIsValue.ts, 1, 15))
@@= skipped -8, +8 lines =@@
     }
 
     static sfoo() {
->sfoo : Symbol(Derived.sfoo, Decl(compoundExponentiationAssignmentLHSIsValue.ts, 56, 5))
+>sfoo : Symbol(sfoo, Decl(compoundExponentiationAssignmentLHSIsValue.ts, 56, 5))
 
         super **= value;
 >super : Symbol(C, Decl(compoundExponentiationAssignmentLHSIsValue.ts, 1, 15))
