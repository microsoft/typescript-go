--- old.jsDeclarationsThisTypes.js
+++ new.jsDeclarationsThisTypes.js
@@= skipped -13, +13 lines =@@

 //// [index.js]
 "use strict";
-var __extends = (this && this.__extends) || (function () {
-    var extendStatics = function (d, b) {
-        extendStatics = Object.setPrototypeOf ||
-            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
-            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
-        return extendStatics(d, b);
-    };
-    return function (d, b) {
-        if (typeof b !== "function" && b !== null)
-            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
-        extendStatics(d, b);
-        function __() { this.constructor = d; }
-        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
-    };
-})();
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.A = void 0;
-var A = /** @class */ (function () {
-    function A() {
-    }
+class A {
     /** @returns {this} */
-    A.prototype.method = function () {
+    method() {
         return this;
-    };
-    return A;
-}());
+    }
+}
 exports.A = A;
-var Base = /** @class */ (function (_super) {
-    __extends(Base, _super);
-    function Base() {
-        return _super !== null && _super.apply(this, arguments) || this;
-    }
+class Base extends A {
     // This method is required to reproduce #35932
-    Base.prototype.verify = function () { };
-    return Base;
-}(A));
+    verify() { }
+}
 exports.default = Base;


 //// [index.d.ts]
-export class A {
+export declare class A {
     /** @returns {this} */
     method(): this;
 }