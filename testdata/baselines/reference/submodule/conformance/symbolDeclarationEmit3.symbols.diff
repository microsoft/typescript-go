--- old.symbolDeclarationEmit3.symbols
+++ new.symbolDeclarationEmit3.symbols
@@= skipped -4, +4 lines =@@
 >C : Symbol(C, Decl(symbolDeclarationEmit3.ts, 0, 0))
 
     [Symbol.toPrimitive](x: number);
->[Symbol.toPrimitive] : Symbol(C[Symbol.toPrimitive], Decl(symbolDeclarationEmit3.ts, 0, 9), Decl(symbolDeclarationEmit3.ts, 1, 36), Decl(symbolDeclarationEmit3.ts, 2, 36))
->Symbol.toPrimitive : Symbol(SymbolConstructor.toPrimitive, Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
->Symbol : Symbol(Symbol, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
->toPrimitive : Symbol(SymbolConstructor.toPrimitive, Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>[Symbol.toPrimitive] : Symbol([Symbol.toPrimitive], Decl(symbolDeclarationEmit3.ts, 0, 9))
 >x : Symbol(x, Decl(symbolDeclarationEmit3.ts, 1, 25))
 
     [Symbol.toPrimitive](x: string);
->[Symbol.toPrimitive] : Symbol(C[Symbol.toPrimitive], Decl(symbolDeclarationEmit3.ts, 0, 9), Decl(symbolDeclarationEmit3.ts, 1, 36), Decl(symbolDeclarationEmit3.ts, 2, 36))
->Symbol.toPrimitive : Symbol(SymbolConstructor.toPrimitive, Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
->Symbol : Symbol(Symbol, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
->toPrimitive : Symbol(SymbolConstructor.toPrimitive, Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>[Symbol.toPrimitive] : Symbol([Symbol.toPrimitive], Decl(symbolDeclarationEmit3.ts, 1, 36))
 >x : Symbol(x, Decl(symbolDeclarationEmit3.ts, 2, 25))
 
     [Symbol.toPrimitive](x: any) { }
->[Symbol.toPrimitive] : Symbol(C[Symbol.toPrimitive], Decl(symbolDeclarationEmit3.ts, 0, 9), Decl(symbolDeclarationEmit3.ts, 1, 36), Decl(symbolDeclarationEmit3.ts, 2, 36))
->Symbol.toPrimitive : Symbol(SymbolConstructor.toPrimitive, Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
->Symbol : Symbol(Symbol, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
->toPrimitive : Symbol(SymbolConstructor.toPrimitive, Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>[Symbol.toPrimitive] : Symbol([Symbol.toPrimitive], Decl(symbolDeclarationEmit3.ts, 2, 36))
 >x : Symbol(x, Decl(symbolDeclarationEmit3.ts, 3, 25))
 }
