--- old.assignmentCompatWithConstructSignatures2.symbols
+++ new.assignmentCompatWithConstructSignatures2.symbols
@@= skipped -6, +6 lines =@@
 >T : Symbol(T, Decl(assignmentCompatWithConstructSignatures2.ts, 0, 0))
 
     f: new (x: number) => void;
->f : Symbol(T.f, Decl(assignmentCompatWithConstructSignatures2.ts, 2, 13))
+>f : Symbol(f, Decl(assignmentCompatWithConstructSignatures2.ts, 2, 13))
 >x : Symbol(x, Decl(assignmentCompatWithConstructSignatures2.ts, 3, 12))
 }
 var t: T;
@@= skipped -24, +24 lines =@@
 >S : Symbol(S, Decl(assignmentCompatWithConstructSignatures2.ts, 9, 6))
 
     f: new (x: number) => string;
->f : Symbol(S.f, Decl(assignmentCompatWithConstructSignatures2.ts, 11, 13))
+>f : Symbol(f, Decl(assignmentCompatWithConstructSignatures2.ts, 11, 13))
 >x : Symbol(x, Decl(assignmentCompatWithConstructSignatures2.ts, 12, 12))
 }
 var s: S;
@@= skipped -47, +47 lines =@@
 >S2 : Symbol(S2, Decl(assignmentCompatWithConstructSignatures2.ts, 25, 39))
 
     f(x: string): void;
->f : Symbol(S2.f, Decl(assignmentCompatWithConstructSignatures2.ts, 27, 14))
+>f : Symbol(f, Decl(assignmentCompatWithConstructSignatures2.ts, 27, 14))
 >x : Symbol(x, Decl(assignmentCompatWithConstructSignatures2.ts, 28, 6))
 }
 var s2: S2;
