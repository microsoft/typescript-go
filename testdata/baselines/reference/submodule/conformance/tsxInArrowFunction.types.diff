--- old.tsxInArrowFunction.types
+++ new.tsxInArrowFunction.types
@@= skipped -1, +1 lines =@@
 
 === tsxInArrowFunction.tsx ===
 declare namespace JSX {
+>JSX : any
+
     interface Element { }
+>Element : Element
+
     interface IntrinsicElements {
+>IntrinsicElements : IntrinsicElements
+
         div: {
 >div : { text?: string; }
 
@@= skipped -14, +20 lines =@@
 
 // didn't work
 <div>{() => <div text="wat" />}</div>;
-><div>{() => <div text="wat" />}</div> : JSX.Element
+><div>{() => <div text="wat" />}</div> : any
 >div : any
->() => <div text="wat" /> : () => JSX.Element
-><div text="wat" /> : JSX.Element
+>() => <div text="wat" /> : () => any
+><div text="wat" /> : any
 >div : any
->text : string
+>text : any
 >div : any
 
 // didn't work
 <div>{x => <div text="wat" />}</div>;
-><div>{x => <div text="wat" />}</div> : JSX.Element
+><div>{x => <div text="wat" />}</div> : any
 >div : any
->x => <div text="wat" /> : (x: any) => JSX.Element
+>x => <div text="wat" /> : (x: any) => any
 >x : any
-><div text="wat" /> : JSX.Element
+><div text="wat" /> : any
 >div : any
->text : string
+>text : any
 >div : any
 
 // worked
 <div>{() => (<div text="wat" />)}</div>;
-><div>{() => (<div text="wat" />)}</div> : JSX.Element
+><div>{() => (<div text="wat" />)}</div> : any
 >div : any
->() => (<div text="wat" />) : () => JSX.Element
->(<div text="wat" />) : JSX.Element
-><div text="wat" /> : JSX.Element
+>() => (<div text="wat" />) : () => any
+>(<div text="wat" />) : any
+><div text="wat" /> : any
 >div : any
->text : string
+>text : any
 >div : any
 
 // worked (!)
 <div>{() => <div text="wat"></div>}</div>;
-><div>{() => <div text="wat"></div>}</div> : JSX.Element
+><div>{() => <div text="wat"></div>}</div> : any
 >div : any
->() => <div text="wat"></div> : () => JSX.Element
-><div text="wat"></div> : JSX.Element
+>() => <div text="wat"></div> : () => any
+><div text="wat"></div> : any
 >div : any
->text : string
+>text : any
 >div : any
 >div : any
 
