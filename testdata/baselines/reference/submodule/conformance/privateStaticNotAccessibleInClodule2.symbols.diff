--- old.privateStaticNotAccessibleInClodule2.symbols
+++ new.privateStaticNotAccessibleInClodule2.symbols
@@= skipped -6, +6 lines =@@
 >C : Symbol(C, Decl(privateStaticNotAccessibleInClodule2.ts, 0, 0))
 
     private foo: string;
->foo : Symbol(C.foo, Decl(privateStaticNotAccessibleInClodule2.ts, 2, 9))
+>foo : Symbol(foo, Decl(privateStaticNotAccessibleInClodule2.ts, 2, 9))
 
     private static bar: string;
->bar : Symbol(C.bar, Decl(privateStaticNotAccessibleInClodule2.ts, 3, 24))
+>bar : Symbol(bar, Decl(privateStaticNotAccessibleInClodule2.ts, 3, 24))
 }
 
 class D extends C {
@@= skipped -11, +11 lines =@@
 >C : Symbol(C, Decl(privateStaticNotAccessibleInClodule2.ts, 0, 0))
 
     baz: number;   
->baz : Symbol(D.baz, Decl(privateStaticNotAccessibleInClodule2.ts, 7, 19))
+>baz : Symbol(baz, Decl(privateStaticNotAccessibleInClodule2.ts, 7, 19))
 }
 
 module D {
@@= skipped -8, +8 lines =@@
 
     export var y = D.bar; // error
 >y : Symbol(y, Decl(privateStaticNotAccessibleInClodule2.ts, 12, 14))
->D.bar : Symbol(C.bar, Decl(privateStaticNotAccessibleInClodule2.ts, 3, 24))
+>D.bar : Symbol(bar, Decl(privateStaticNotAccessibleInClodule2.ts, 3, 24))
 >D : Symbol(D, Decl(privateStaticNotAccessibleInClodule2.ts, 5, 1), Decl(privateStaticNotAccessibleInClodule2.ts, 9, 1))
->bar : Symbol(C.bar, Decl(privateStaticNotAccessibleInClodule2.ts, 3, 24))
+>bar : Symbol(bar, Decl(privateStaticNotAccessibleInClodule2.ts, 3, 24))
 }
