--- old.importCallExpressionNestedCJS2.js
+++ new.importCallExpressionNestedCJS2.js
@@= skipped -45, +45 lines =@@
         return result;
     };
 })();
-var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
-    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
-    return new (P || (P = Promise))(function (resolve, reject) {
-        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
-        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
-        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
-        step((generator = generator.apply(thisArg, _arguments || [])).next());
-    });
-};
-function foo() {
-    return __awaiter(this, void 0, void 0, function* () {
-        return yield Promise.resolve("".concat((yield Promise.resolve().then(function () { return __importStar(require("./foo")); })).default)).then(function (s) { return __importStar(require(s)); });
-    });
+async function foo() {
+    return await Promise.resolve(`${(await Promise.resolve().then(() => __importStar(require("./foo")))).default}`).then(s => __importStar(require(s)));
 }