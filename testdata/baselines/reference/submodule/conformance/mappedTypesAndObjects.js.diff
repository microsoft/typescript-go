--- old.mappedTypesAndObjects.js
+++ new.mappedTypesAndObjects.js
@@= skipped -46, +46 lines =@@

 //// [mappedTypesAndObjects.js]
 function f1(x, y) {
-    var obj;
+    let obj;
     obj = x;
     obj = y;
 }
 function f2(x, y) {
-    var obj;
+    let obj;
     obj = x;
     obj = y;
 }
@@= skipped -14, +14 lines =@@
 }
 ;
 // Repro from #13747
-var Form = /** @class */ (function () {
-    function Form() {
-        this.values = {};
-    }
-    return Form;
-}());
+class Form {
+    values = {};
+}


 //// [mappedTypesAndObjects.d.ts]
 declare function f1<T>(x: Partial<T>, y: Readonly<T>): void;
 declare function f2<T>(x: Partial<T>, y: Readonly<T>): void;
 declare function f3<T>(x: Partial<T>): void;
+// Repro from #12900
 interface Base {
     foo: {
         [key: string]: any;
@@= skipped -27, +25 lines =@@
     value: string;
 }
 interface E2 extends Base {
-    foo: Partial<Something>;
+    foo: Partial<Something>; // or other mapped type
 }
 interface E3<T> extends Base {
-    foo: Partial<T>;
+    foo: Partial<T>; // or other mapped type
 }
+// Repro from #13747
 declare class Form<T> {
     private values;
 }