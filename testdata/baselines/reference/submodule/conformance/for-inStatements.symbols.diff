--- old.for-inStatements.symbols
+++ new.for-inStatements.symbols
@@ -92,19 +92,19 @@
 >A : Symbol(A, Decl(for-inStatements.ts, 26, 67))
 
     biz() {
->biz : Symbol(A.biz, Decl(for-inStatements.ts, 28, 9))
+>biz : Symbol(biz, Decl(for-inStatements.ts, 28, 9))
 
         for (var x in this.biz()) { }
 >x : Symbol(x, Decl(for-inStatements.ts, 30, 16), Decl(for-inStatements.ts, 31, 16), Decl(for-inStatements.ts, 32, 16))
->this.biz : Symbol(A.biz, Decl(for-inStatements.ts, 28, 9))
+>this.biz : Symbol(biz, Decl(for-inStatements.ts, 28, 9))
 >this : Symbol(A, Decl(for-inStatements.ts, 26, 67))
->biz : Symbol(A.biz, Decl(for-inStatements.ts, 28, 9))
+>biz : Symbol(biz, Decl(for-inStatements.ts, 28, 9))
 
         for (var x in this.biz) { }
 >x : Symbol(x, Decl(for-inStatements.ts, 30, 16), Decl(for-inStatements.ts, 31, 16), Decl(for-inStatements.ts, 32, 16))
->this.biz : Symbol(A.biz, Decl(for-inStatements.ts, 28, 9))
+>this.biz : Symbol(biz, Decl(for-inStatements.ts, 28, 9))
 >this : Symbol(A, Decl(for-inStatements.ts, 26, 67))
->biz : Symbol(A.biz, Decl(for-inStatements.ts, 28, 9))
+>biz : Symbol(biz, Decl(for-inStatements.ts, 28, 9))
 
         for (var x in this) { }
 >x : Symbol(x, Decl(for-inStatements.ts, 30, 16), Decl(for-inStatements.ts, 31, 16), Decl(for-inStatements.ts, 32, 16))
@@ -114,7 +114,7 @@
     }
 
     static baz() {
->baz : Symbol(A.baz, Decl(for-inStatements.ts, 34, 5))
+>baz : Symbol(baz, Decl(for-inStatements.ts, 34, 5))
 
         for (var x in this) { }
 >x : Symbol(x, Decl(for-inStatements.ts, 37, 16), Decl(for-inStatements.ts, 38, 16), Decl(for-inStatements.ts, 39, 16))
@@ -122,15 +122,15 @@
 
         for (var x in this.baz) { }
 >x : Symbol(x, Decl(for-inStatements.ts, 37, 16), Decl(for-inStatements.ts, 38, 16), Decl(for-inStatements.ts, 39, 16))
->this.baz : Symbol(A.baz, Decl(for-inStatements.ts, 34, 5))
+>this.baz : Symbol(baz, Decl(for-inStatements.ts, 34, 5))
 >this : Symbol(A, Decl(for-inStatements.ts, 26, 67))
->baz : Symbol(A.baz, Decl(for-inStatements.ts, 34, 5))
+>baz : Symbol(baz, Decl(for-inStatements.ts, 34, 5))
 
         for (var x in this.baz()) { }
 >x : Symbol(x, Decl(for-inStatements.ts, 37, 16), Decl(for-inStatements.ts, 38, 16), Decl(for-inStatements.ts, 39, 16))
->this.baz : Symbol(A.baz, Decl(for-inStatements.ts, 34, 5))
+>this.baz : Symbol(baz, Decl(for-inStatements.ts, 34, 5))
 >this : Symbol(A, Decl(for-inStatements.ts, 26, 67))
->baz : Symbol(A.baz, Decl(for-inStatements.ts, 34, 5))
+>baz : Symbol(baz, Decl(for-inStatements.ts, 34, 5))
 
         return null;
     }
@@ -141,19 +141,19 @@
 >A : Symbol(A, Decl(for-inStatements.ts, 26, 67))
 
     boz() {
->boz : Symbol(B.boz, Decl(for-inStatements.ts, 45, 19))
+>boz : Symbol(boz, Decl(for-inStatements.ts, 45, 19))
 
         for (var x in this.biz()) { }
 >x : Symbol(x, Decl(for-inStatements.ts, 47, 16), Decl(for-inStatements.ts, 48, 16), Decl(for-inStatements.ts, 49, 16), Decl(for-inStatements.ts, 51, 16), Decl(for-inStatements.ts, 52, 16))
->this.biz : Symbol(A.biz, Decl(for-inStatements.ts, 28, 9))
+>this.biz : Symbol(biz, Decl(for-inStatements.ts, 28, 9))
 >this : Symbol(B, Decl(for-inStatements.ts, 43, 1))
->biz : Symbol(A.biz, Decl(for-inStatements.ts, 28, 9))
+>biz : Symbol(biz, Decl(for-inStatements.ts, 28, 9))
 
         for (var x in this.biz) { }
 >x : Symbol(x, Decl(for-inStatements.ts, 47, 16), Decl(for-inStatements.ts, 48, 16), Decl(for-inStatements.ts, 49, 16), Decl(for-inStatements.ts, 51, 16), Decl(for-inStatements.ts, 52, 16))
->this.biz : Symbol(A.biz, Decl(for-inStatements.ts, 28, 9))
+>this.biz : Symbol(biz, Decl(for-inStatements.ts, 28, 9))
 >this : Symbol(B, Decl(for-inStatements.ts, 43, 1))
->biz : Symbol(A.biz, Decl(for-inStatements.ts, 28, 9))
+>biz : Symbol(biz, Decl(for-inStatements.ts, 28, 9))
 
         for (var x in this) { }
 >x : Symbol(x, Decl(for-inStatements.ts, 47, 16), Decl(for-inStatements.ts, 48, 16), Decl(for-inStatements.ts, 49, 16), Decl(for-inStatements.ts, 51, 16), Decl(for-inStatements.ts, 52, 16))
@@ -161,15 +161,15 @@
 
         for (var x in super.biz) { }
 >x : Symbol(x, Decl(for-inStatements.ts, 47, 16), Decl(for-inStatements.ts, 48, 16), Decl(for-inStatements.ts, 49, 16), Decl(for-inStatements.ts, 51, 16), Decl(for-inStatements.ts, 52, 16))
->super.biz : Symbol(A.biz, Decl(for-inStatements.ts, 28, 9))
+>super.biz : Symbol(biz, Decl(for-inStatements.ts, 28, 9))
 >super : Symbol(A, Decl(for-inStatements.ts, 26, 67))
->biz : Symbol(A.biz, Decl(for-inStatements.ts, 28, 9))
+>biz : Symbol(biz, Decl(for-inStatements.ts, 28, 9))
 
         for (var x in super.biz()) { }
 >x : Symbol(x, Decl(for-inStatements.ts, 47, 16), Decl(for-inStatements.ts, 48, 16), Decl(for-inStatements.ts, 49, 16), Decl(for-inStatements.ts, 51, 16), Decl(for-inStatements.ts, 52, 16))
->super.biz : Symbol(A.biz, Decl(for-inStatements.ts, 28, 9))
+>super.biz : Symbol(biz, Decl(for-inStatements.ts, 28, 9))
 >super : Symbol(A, Decl(for-inStatements.ts, 26, 67))
->biz : Symbol(A.biz, Decl(for-inStatements.ts, 28, 9))
+>biz : Symbol(biz, Decl(for-inStatements.ts, 28, 9))
 
         return null;
     }
@@ -179,7 +179,7 @@
 >I : Symbol(I, Decl(for-inStatements.ts, 55, 1))
 
     id: number;
->id : Symbol(I.id, Decl(for-inStatements.ts, 57, 13))
+>id : Symbol(id, Decl(for-inStatements.ts, 57, 13))
 
     [idx: number]: I;
 >idx : Symbol(idx, Decl(for-inStatements.ts, 59, 5))
@@ -202,7 +202,7 @@
 >T : Symbol(T, Decl(for-inStatements.ts, 67, 19))
 
         name:string
->name : Symbol(X.name, Decl(for-inStatements.ts, 67, 23))
+>name : Symbol(name, Decl(for-inStatements.ts, 67, 23))
     }
 }
 
@@ -212,14 +212,14 @@
 
 for (var x in M.X) { }
 >x : Symbol(x, Decl(for-inStatements.ts, 6, 8), Decl(for-inStatements.ts, 7, 8), Decl(for-inStatements.ts, 8, 8), Decl(for-inStatements.ts, 11, 8), Decl(for-inStatements.ts, 13, 8) ... and 14 more)
->M.X : Symbol(M.X, Decl(for-inStatements.ts, 66, 10))
+>M.X : Symbol(X, Decl(for-inStatements.ts, 66, 10))
 >M : Symbol(M, Decl(for-inStatements.ts, 63, 24))
->X : Symbol(M.X, Decl(for-inStatements.ts, 66, 10))
+>X : Symbol(X, Decl(for-inStatements.ts, 66, 10))
 
 enum Color { Red, Blue }
 >Color : Symbol(Color, Decl(for-inStatements.ts, 73, 22))
->Red : Symbol(Color.Red, Decl(for-inStatements.ts, 75, 12))
->Blue : Symbol(Color.Blue, Decl(for-inStatements.ts, 75, 17))
+>Red : Symbol(Red, Decl(for-inStatements.ts, 75, 12))
+>Blue : Symbol(Blue, Decl(for-inStatements.ts, 75, 17))
 
 for (var x in Color) { }
 >x : Symbol(x, Decl(for-inStatements.ts, 6, 8), Decl(for-inStatements.ts, 7, 8), Decl(for-inStatements.ts, 8, 8), Decl(for-inStatements.ts, 11, 8), Decl(for-inStatements.ts, 13, 8) ... and 14 more)
@@ -227,7 +227,7 @@
 
 for (var x in Color.Blue) { }
 >x : Symbol(x, Decl(for-inStatements.ts, 6, 8), Decl(for-inStatements.ts, 7, 8), Decl(for-inStatements.ts, 8, 8), Decl(for-inStatements.ts, 11, 8), Decl(for-inStatements.ts, 13, 8) ... and 14 more)
->Color.Blue : Symbol(Color.Blue, Decl(for-inStatements.ts, 75, 17))
+>Color.Blue : Symbol(Blue, Decl(for-inStatements.ts, 75, 17))
 >Color : Symbol(Color, Decl(for-inStatements.ts, 73, 22))
->Blue : Symbol(Color.Blue, Decl(for-inStatements.ts, 75, 17))
+>Blue : Symbol(Blue, Decl(for-inStatements.ts, 75, 17))
 
