--- old.objectTypesIdentityWithPrivates3.symbols
+++ new.objectTypesIdentityWithPrivates3.symbols
@@= skipped -5, +5 lines =@@
 
 interface T2 { z }
 >T2 : Symbol(T2, Decl(objectTypesIdentityWithPrivates3.ts, 0, 16))
->z : Symbol(T2.z, Decl(objectTypesIdentityWithPrivates3.ts, 1, 14))
+>z : Symbol(z, Decl(objectTypesIdentityWithPrivates3.ts, 1, 14))
 
 class C1<T> {
 >C1 : Symbol(C1, Decl(objectTypesIdentityWithPrivates3.ts, 1, 18))
 >T : Symbol(T, Decl(objectTypesIdentityWithPrivates3.ts, 3, 9))
 
     private x;
->x : Symbol(C1.x, Decl(objectTypesIdentityWithPrivates3.ts, 3, 13))
+>x : Symbol(x, Decl(objectTypesIdentityWithPrivates3.ts, 3, 13))
 }
 
 class C2 extends C1<T1> {
@@= skipped -16, +16 lines =@@
 >T1 : Symbol(T1, Decl(objectTypesIdentityWithPrivates3.ts, 0, 0))
 
     y;
->y : Symbol(C2.y, Decl(objectTypesIdentityWithPrivates3.ts, 7, 25))
+>y : Symbol(y, Decl(objectTypesIdentityWithPrivates3.ts, 7, 25))
 }
 
 var c1: C1<T2>;
@@= skipped -18, +18 lines =@@
 >T : Symbol(T, Decl(objectTypesIdentityWithPrivates3.ts, 15, 9))
 
     private x: T; // This T is the difference between C3 and C1
->x : Symbol(C3.x, Decl(objectTypesIdentityWithPrivates3.ts, 15, 13))
+>x : Symbol(x, Decl(objectTypesIdentityWithPrivates3.ts, 15, 13))
 >T : Symbol(T, Decl(objectTypesIdentityWithPrivates3.ts, 15, 9))
 }
 
@@= skipped -10, +10 lines =@@
 >T1 : Symbol(T1, Decl(objectTypesIdentityWithPrivates3.ts, 0, 0))
 
     y;
->y : Symbol(C4.y, Decl(objectTypesIdentityWithPrivates3.ts, 19, 25))
+>y : Symbol(y, Decl(objectTypesIdentityWithPrivates3.ts, 19, 25))
 }
 
 var c3: C3<T2>;
