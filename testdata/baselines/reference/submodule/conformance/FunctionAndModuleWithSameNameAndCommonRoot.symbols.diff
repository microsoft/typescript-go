--- old.FunctionAndModuleWithSameNameAndCommonRoot.symbols
+++ new.FunctionAndModuleWithSameNameAndCommonRoot.symbols
@@= skipped -34, +34 lines =@@
 
 var fn = A.Point;
 >fn : Symbol(fn, Decl(test.ts, 0, 3), Decl(test.ts, 1, 3), Decl(simple.ts, 11, 3), Decl(simple.ts, 12, 3))
->A.Point : Symbol(A.Point, Decl(function.ts, 0, 10), Decl(module.ts, 0, 10))
+>A.Point : Symbol(Point, Decl(function.ts, 0, 10), Decl(module.ts, 0, 10))
 >A : Symbol(A, Decl(function.ts, 0, 0), Decl(module.ts, 0, 0))
->Point : Symbol(A.Point, Decl(function.ts, 0, 10), Decl(module.ts, 0, 10))
+>Point : Symbol(Point, Decl(function.ts, 0, 10), Decl(module.ts, 0, 10))
 
 var cl: { x: number; y: number; }
 >cl : Symbol(cl, Decl(test.ts, 3, 3), Decl(test.ts, 4, 3), Decl(test.ts, 5, 3), Decl(simple.ts, 14, 3), Decl(simple.ts, 15, 3) ... and 1 more)
@@= skipped -11, +11 lines =@@
 
 var cl = A.Point();
 >cl : Symbol(cl, Decl(test.ts, 3, 3), Decl(test.ts, 4, 3), Decl(test.ts, 5, 3), Decl(simple.ts, 14, 3), Decl(simple.ts, 15, 3) ... and 1 more)
->A.Point : Symbol(A.Point, Decl(function.ts, 0, 10), Decl(module.ts, 0, 10))
+>A.Point : Symbol(Point, Decl(function.ts, 0, 10), Decl(module.ts, 0, 10))
 >A : Symbol(A, Decl(function.ts, 0, 0), Decl(module.ts, 0, 0))
->Point : Symbol(A.Point, Decl(function.ts, 0, 10), Decl(module.ts, 0, 10))
+>Point : Symbol(Point, Decl(function.ts, 0, 10), Decl(module.ts, 0, 10))
 
 var cl = A.Point.Origin; // not expected to be an error.
 >cl : Symbol(cl, Decl(test.ts, 3, 3), Decl(test.ts, 4, 3), Decl(test.ts, 5, 3), Decl(simple.ts, 14, 3), Decl(simple.ts, 15, 3) ... and 1 more)
->A.Point.Origin : Symbol(A.Point.Origin, Decl(module.ts, 2, 18))
->A.Point : Symbol(A.Point, Decl(function.ts, 0, 10), Decl(module.ts, 0, 10))
+>A.Point.Origin : Symbol(Origin, Decl(module.ts, 2, 18))
+>A.Point : Symbol(Point, Decl(function.ts, 0, 10), Decl(module.ts, 0, 10))
 >A : Symbol(A, Decl(function.ts, 0, 0), Decl(module.ts, 0, 0))
->Point : Symbol(A.Point, Decl(function.ts, 0, 10), Decl(module.ts, 0, 10))
->Origin : Symbol(A.Point.Origin, Decl(module.ts, 2, 18))
+>Point : Symbol(Point, Decl(function.ts, 0, 10), Decl(module.ts, 0, 10))
+>Origin : Symbol(Origin, Decl(module.ts, 2, 18))
 
 
 === simple.ts ===
@@= skipped -42, +42 lines =@@
 
 var fn = B.Point;  // not expected to be an error. bug 840000: [corelang] Function of fundule not assignalbe as expected
 >fn : Symbol(fn, Decl(test.ts, 0, 3), Decl(test.ts, 1, 3), Decl(simple.ts, 11, 3), Decl(simple.ts, 12, 3))
->B.Point : Symbol(B.Point, Decl(simple.ts, 0, 10), Decl(simple.ts, 4, 5))
+>B.Point : Symbol(Point, Decl(simple.ts, 0, 10), Decl(simple.ts, 4, 5))
 >B : Symbol(B, Decl(simple.ts, 0, 0))
->Point : Symbol(B.Point, Decl(simple.ts, 0, 10), Decl(simple.ts, 4, 5))
+>Point : Symbol(Point, Decl(simple.ts, 0, 10), Decl(simple.ts, 4, 5))
 
 var cl: { x: number; y: number; }
 >cl : Symbol(cl, Decl(test.ts, 3, 3), Decl(test.ts, 4, 3), Decl(test.ts, 5, 3), Decl(simple.ts, 14, 3), Decl(simple.ts, 15, 3) ... and 1 more)
@@= skipped -11, +11 lines =@@
 
 var cl = B.Point();
 >cl : Symbol(cl, Decl(test.ts, 3, 3), Decl(test.ts, 4, 3), Decl(test.ts, 5, 3), Decl(simple.ts, 14, 3), Decl(simple.ts, 15, 3) ... and 1 more)
->B.Point : Symbol(B.Point, Decl(simple.ts, 0, 10), Decl(simple.ts, 4, 5))
+>B.Point : Symbol(Point, Decl(simple.ts, 0, 10), Decl(simple.ts, 4, 5))
 >B : Symbol(B, Decl(simple.ts, 0, 0))
->Point : Symbol(B.Point, Decl(simple.ts, 0, 10), Decl(simple.ts, 4, 5))
+>Point : Symbol(Point, Decl(simple.ts, 0, 10), Decl(simple.ts, 4, 5))
 
 var cl = B.Point.Origin;
 >cl : Symbol(cl, Decl(test.ts, 3, 3), Decl(test.ts, 4, 3), Decl(test.ts, 5, 3), Decl(simple.ts, 14, 3), Decl(simple.ts, 15, 3) ... and 1 more)
->B.Point.Origin : Symbol(B.Point.Origin, Decl(simple.ts, 7, 18))
->B.Point : Symbol(B.Point, Decl(simple.ts, 0, 10), Decl(simple.ts, 4, 5))
+>B.Point.Origin : Symbol(Origin, Decl(simple.ts, 7, 18))
+>B.Point : Symbol(Point, Decl(simple.ts, 0, 10), Decl(simple.ts, 4, 5))
 >B : Symbol(B, Decl(simple.ts, 0, 0))
->Point : Symbol(B.Point, Decl(simple.ts, 0, 10), Decl(simple.ts, 4, 5))
->Origin : Symbol(B.Point.Origin, Decl(simple.ts, 7, 18))
+>Point : Symbol(Point, Decl(simple.ts, 0, 10), Decl(simple.ts, 4, 5))
+>Origin : Symbol(Origin, Decl(simple.ts, 7, 18))
 
