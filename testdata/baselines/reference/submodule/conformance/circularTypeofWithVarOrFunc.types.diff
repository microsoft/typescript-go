--- old.circularTypeofWithVarOrFunc.types
+++ new.circularTypeofWithVarOrFunc.types
@@= skipped -2, +2 lines =@@
 === circularTypeofWithVarOrFunc.ts ===
 type typeAlias1 = typeof varOfAliasedType1;
 >typeAlias1 : any
->varOfAliasedType1 : any
 
 var varOfAliasedType1: typeAlias1;
 >varOfAliasedType1 : any
@@= skipped -10, +9 lines =@@
 
 type typeAlias2 = typeof varOfAliasedType2;
 >typeAlias2 : any
->varOfAliasedType2 : any
 
 function func(): typeAlias3 { return null; }
 >func : () => any
@@= skipped -12, +11 lines =@@
 
 type typeAlias3 = typeof varOfAliasedType3;
 >typeAlias3 : any
->varOfAliasedType3 : any
 
 // Repro from #26104
 
 interface Input {
+>Input : Input
+
   a: number;
 >a : number
 
@@= skipped -14, +15 lines =@@
 
 type R = ReturnType<typeof mul>;
 >R : any
->mul : (input: Input) => any
 
 function mul(input: Input): R {
 >mul : (input: Input) => any
@@= skipped -20, +19 lines =@@
 
 type R2 = ReturnType<typeof f>;
 >R2 : any
->f : () => any
 
 function f(): R2 { return 0; }
 >f : () => any
