--- old.genericCallToOverloadedMethodWithOverloadedArguments.symbols
+++ new.genericCallToOverloadedMethodWithOverloadedArguments.symbols
@@ -9,7 +9,7 @@
 >T : Symbol(T, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 1, 22))
 
         then<U>(cb: (x: T) => Promise<U>): Promise<U>;
->then : Symbol(Promise.then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 1, 26))
+>then : Symbol(then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 1, 26))
 >U : Symbol(U, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 2, 13))
 >cb : Symbol(cb, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 2, 16))
 >x : Symbol(x, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 2, 21))
@@ -31,9 +31,9 @@
 
     var newPromise = numPromise.then(testFunction);
 >newPromise : Symbol(newPromise, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 8, 7))
->numPromise.then : Symbol(Promise.then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 1, 26))
+>numPromise.then : Symbol(then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 1, 26))
 >numPromise : Symbol(numPromise, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 7, 7))
->then : Symbol(Promise.then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 1, 26))
+>then : Symbol(then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 1, 26))
 >testFunction : Symbol(testFunction, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 3, 5))
 }
 
@@ -47,7 +47,7 @@
 >T : Symbol(T, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 14, 22))
 
         then<U>(cb: (x: T) => Promise<U>): Promise<U>;
->then : Symbol(Promise.then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 14, 26))
+>then : Symbol(then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 14, 26))
 >U : Symbol(U, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 15, 13))
 >cb : Symbol(cb, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 15, 16))
 >x : Symbol(x, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 15, 21))
@@ -74,9 +74,9 @@
 
     var newPromise = numPromise.then(testFunction);
 >newPromise : Symbol(newPromise, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 22, 7))
->numPromise.then : Symbol(Promise.then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 14, 26))
+>numPromise.then : Symbol(then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 14, 26))
 >numPromise : Symbol(numPromise, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 21, 7))
->then : Symbol(Promise.then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 14, 26))
+>then : Symbol(then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 14, 26))
 >testFunction : Symbol(testFunction, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 16, 5), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 18, 62))
 }
 
@@ -90,7 +90,7 @@
 >T : Symbol(T, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 28, 22))
 
         then<U>(cb: (x: T) => Promise<U>): Promise<U>;
->then : Symbol(Promise.then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 28, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 29, 54))
+>then : Symbol(then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 28, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 29, 54))
 >U : Symbol(U, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 29, 13))
 >cb : Symbol(cb, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 29, 16))
 >x : Symbol(x, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 29, 21))
@@ -101,7 +101,7 @@
 >U : Symbol(U, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 29, 13))
 
         then<U>(cb: (x: T) => Promise<U>, error?: (error: any) => Promise<U>): Promise<U>;
->then : Symbol(Promise.then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 28, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 29, 54))
+>then : Symbol(then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 28, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 29, 54))
 >U : Symbol(U, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 30, 13))
 >cb : Symbol(cb, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 30, 16))
 >x : Symbol(x, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 30, 21))
@@ -127,9 +127,9 @@
 
     var newPromise = numPromise.then(testFunction);
 >newPromise : Symbol(newPromise, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 36, 7))
->numPromise.then : Symbol(Promise.then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 28, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 29, 54))
+>numPromise.then : Symbol(then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 28, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 29, 54))
 >numPromise : Symbol(numPromise, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 35, 7))
->then : Symbol(Promise.then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 28, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 29, 54))
+>then : Symbol(then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 28, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 29, 54))
 >testFunction : Symbol(testFunction, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 31, 5))
 }
 
@@ -143,7 +143,7 @@
 >T : Symbol(T, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 42, 22))
 
         then<U>(cb: (x: T) => Promise<U>): Promise<U>;
->then : Symbol(Promise.then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 42, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 43, 54))
+>then : Symbol(then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 42, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 43, 54))
 >U : Symbol(U, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 43, 13))
 >cb : Symbol(cb, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 43, 16))
 >x : Symbol(x, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 43, 21))
@@ -154,7 +154,7 @@
 >U : Symbol(U, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 43, 13))
 
         then<U>(cb: (x: T) => Promise<U>, error?: (error: any) => Promise<U>): Promise<U>;
->then : Symbol(Promise.then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 42, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 43, 54))
+>then : Symbol(then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 42, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 43, 54))
 >U : Symbol(U, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 44, 13))
 >cb : Symbol(cb, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 44, 16))
 >x : Symbol(x, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 44, 21))
@@ -185,9 +185,9 @@
 
     var newPromise = numPromise.then(testFunction);
 >newPromise : Symbol(newPromise, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 51, 7))
->numPromise.then : Symbol(Promise.then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 42, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 43, 54))
+>numPromise.then : Symbol(then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 42, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 43, 54))
 >numPromise : Symbol(numPromise, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 50, 7))
->then : Symbol(Promise.then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 42, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 43, 54))
+>then : Symbol(then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 42, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 43, 54))
 >testFunction : Symbol(testFunction, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 45, 5), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 47, 62))
 }
 
@@ -201,7 +201,7 @@
 >T : Symbol(T, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 57, 22))
 
         then<U>(cb: (x: T) => Promise<U>): Promise<U>;
->then : Symbol(Promise.then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 57, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 58, 54), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 59, 90))
+>then : Symbol(then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 57, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 58, 54), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 59, 90))
 >U : Symbol(U, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 58, 13))
 >cb : Symbol(cb, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 58, 16))
 >x : Symbol(x, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 58, 21))
@@ -212,7 +212,7 @@
 >U : Symbol(U, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 58, 13))
 
         then<U>(cb: (x: T) => Promise<U>, error?: (error: any) => Promise<U>): Promise<U>;
->then : Symbol(Promise.then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 57, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 58, 54), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 59, 90))
+>then : Symbol(then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 57, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 58, 54), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 59, 90))
 >U : Symbol(U, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 59, 13))
 >cb : Symbol(cb, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 59, 16))
 >x : Symbol(x, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 59, 21))
@@ -227,7 +227,7 @@
 >U : Symbol(U, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 59, 13))
 
         then<U>(cb: (x: T) => Promise<U>, error?: (error: any) => U, progress?: (preservation: any) => void): Promise<U>;
->then : Symbol(Promise.then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 57, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 58, 54), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 59, 90))
+>then : Symbol(then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 57, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 58, 54), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 59, 90))
 >U : Symbol(U, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 60, 13))
 >cb : Symbol(cb, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 60, 16))
 >x : Symbol(x, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 60, 21))
@@ -259,9 +259,9 @@
 
     var newPromise = numPromise.then(testFunction);
 >newPromise : Symbol(newPromise, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 67, 7))
->numPromise.then : Symbol(Promise.then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 57, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 58, 54), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 59, 90))
+>numPromise.then : Symbol(then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 57, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 58, 54), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 59, 90))
 >numPromise : Symbol(numPromise, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 66, 7))
->then : Symbol(Promise.then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 57, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 58, 54), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 59, 90))
+>then : Symbol(then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 57, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 58, 54), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 59, 90))
 >testFunction : Symbol(testFunction, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 61, 5), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 63, 62))
 }
 
@@ -275,7 +275,7 @@
 >T : Symbol(T, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 73, 22))
 
         then<U>(cb: (x: T) => Promise<U>): Promise<U>;
->then : Symbol(Promise.then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 73, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 74, 54))
+>then : Symbol(then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 73, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 74, 54))
 >U : Symbol(U, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 74, 13))
 >cb : Symbol(cb, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 74, 16))
 >x : Symbol(x, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 74, 21))
@@ -286,7 +286,7 @@
 >U : Symbol(U, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 74, 13))
 
         then<U>(cb: (x: T) => Promise<U>, error?: (error: any) => Promise<U>): Promise<U>;
->then : Symbol(Promise.then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 73, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 74, 54))
+>then : Symbol(then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 73, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 74, 54))
 >U : Symbol(U, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 75, 13))
 >cb : Symbol(cb, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 75, 16))
 >x : Symbol(x, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 75, 21))
@@ -322,9 +322,9 @@
 
     var newPromise = numPromise.then(testFunction);
 >newPromise : Symbol(newPromise, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 83, 7))
->numPromise.then : Symbol(Promise.then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 73, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 74, 54))
+>numPromise.then : Symbol(then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 73, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 74, 54))
 >numPromise : Symbol(numPromise, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 82, 7))
->then : Symbol(Promise.then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 73, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 74, 54))
+>then : Symbol(then, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 73, 26), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 74, 54))
 >testFunction : Symbol(testFunction, Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 76, 5), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 78, 62), Decl(genericCallToOverloadedMethodWithOverloadedArguments.ts, 79, 62))
 }
 
