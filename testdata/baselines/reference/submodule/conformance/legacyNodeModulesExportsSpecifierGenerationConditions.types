//// [tests/cases/conformance/node/legacyNodeModulesExportsSpecifierGenerationConditions.ts] ////

=== index.ts ===
export const a = async () => (await import("inner")).x();
>a : () => Promise<import("./node_modules/inner/private.js").Thing>
>async () => (await import("inner")).x() : () => Promise<import("./node_modules/inner/private.js").Thing>
>(await import("inner")).x() : import("./node_modules/inner/private.js").Thing
>(await import("inner")).x : () => import("./node_modules/inner/private.js").Thing
>(await import("inner")) : { x: () => import("./node_modules/inner/private.js").Thing; default: typeof import("./node_modules/inner/index.js"); }
>await import("inner") : { x: () => import("./node_modules/inner/private.js").Thing; default: typeof import("./node_modules/inner/index.js"); }
>import("inner") : Promise<{ x: () => import("./node_modules/inner/private.js").Thing; default: typeof import("./node_modules/inner/index.js"); }>
>"inner" : "inner"
>x : () => import("./node_modules/inner/private.js").Thing

=== node_modules/inner/index.d.ts ===
export { x } from "./other.js";
>x : () => import("./private.js").Thing

=== node_modules/inner/other.d.ts ===
import { Thing } from "./private.js"
>Thing : any

export const x: () => Thing;
>x : () => Thing

=== node_modules/inner/private.d.ts ===

export interface Thing {} // not exported in export map, inaccessible under new module modes
