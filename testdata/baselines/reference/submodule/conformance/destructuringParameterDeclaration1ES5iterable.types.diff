--- old.destructuringParameterDeclaration1ES5iterable.types
+++ new.destructuringParameterDeclaration1ES5iterable.types
@@= skipped -18, +18 lines =@@
 >a : number

 function a3({j, k, l: {m, n}, q: [a, b, c]}: { j: number, k: string, l: { m: boolean, n: number }, q: (number|string)[] }) { };
->a3 : ({ j, k, l: { m, n }, q: [a, b, c] }: { j: number; k: string; l: { m: boolean; n: number; }; q: (number | string)[]; }) => void
+>a3 : ({ j, k, l: { m, n }, q: [a, b, c] }: { j: number; k: string; l: { m: boolean; n: number; }; q: (string | number)[]; }) => void
 >j : number
 >k : string
 >l : any
@@= skipped -187, +187 lines =@@
 >10 : 10

 function c2({z = 10}) { }
->c2 : ({ z }: { z?: number; }) => void
+>c2 : ({ z = 10 }: { z?: number; }) => void
 >z : number
 >10 : 10

 function c3({b}: { b: number|string} = { b: "hello" }) { }
->c3 : ({ b }?: { b: number | string; }) => void
+>c3 : ({ b }?: { b: string | number; }) => void
 >b : string | number
 >b : string | number
 >{ b: "hello" } : { b: string; }
@@= skipped -19, +19 lines =@@
 >c : any

 function c6([a, b, [[c=1]]]) { }
->c6 : ([a, b, [[c]]]: [any, any, [[number?]]]) => void
+>c6 : ([a, b, [[c = 1]]]: [any, any, [[number?]]]) => void
 >a : any
 >b : any
 >c : number
@@= skipped -45, +45 lines =@@

 c2({});         // Implied type is {z?: number}
 >c2({}) : void
->c2 : ({ z }: { z?: number; }) => void
+>c2 : ({ z = 10 }: { z?: number; }) => void
 >{} : {}

 c2({z:1});      // Implied type is {z?: number}
 >c2({z:1}) : void
->c2 : ({ z }: { z?: number; }) => void
+>c2 : ({ z = 10 }: { z?: number; }) => void
 >{z:1} : { z: number; }
 >z : number
 >1 : 1

 c3({ b: 1 });     // Implied type is { b: number|string }.
 >c3({ b: 1 }) : void
->c3 : ({ b }?: { b: number | string; }) => void
+>c3 : ({ b }?: { b: string | number; }) => void
 >{ b: 1 } : { b: number; }
 >b : number
 >1 : 1