--- old.logicalAssignment2(target=es2015).errors.txt
+++ new.logicalAssignment2(target=es2015).errors.txt
@@= skipped -0, +-1 lines =@@
-<no content>
@@= skipped --1, +1 lines =@@
+error TS2318: Cannot find global type 'Array'.
+error TS2318: Cannot find global type 'CallableFunction'.
+error TS2318: Cannot find global type 'Function'.
+error TS2318: Cannot find global type 'IArguments'.
+error TS2318: Cannot find global type 'NewableFunction'.
+error TS2318: Cannot find global type 'RegExp'.
+error TS2318: Cannot find global type 'String'.
+error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
+error TS2552: Cannot find name 'Number'. Did you mean 'number'?
+error TS2552: Cannot find name 'Object'. Did you mean 'object'?
+
+
+!!! error TS2318: Cannot find global type 'Array'.
+!!! error TS2318: Cannot find global type 'CallableFunction'.
+!!! error TS2318: Cannot find global type 'Function'.
+!!! error TS2318: Cannot find global type 'IArguments'.
+!!! error TS2318: Cannot find global type 'NewableFunction'.
+!!! error TS2318: Cannot find global type 'RegExp'.
+!!! error TS2318: Cannot find global type 'String'.
+!!! error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
+!!! error TS2552: Cannot find name 'Number'. Did you mean 'number'?
+!!! error TS2552: Cannot find name 'Object'. Did you mean 'object'?
+==== logicalAssignment2.ts (0 errors) ====
+    interface A {
+        foo: {
+            bar(): {
+                baz: 0 | 1 | 42 | undefined | ''
+            }
+            baz: 0 | 1 | 42 | undefined | ''
+        }
+        baz: 0 | 1 | 42 | undefined | ''
+    }
+    
+    declare const result: A
+    declare const a: A
+    declare const b: A
+    declare const c: A
+    
+    a.baz &&= result.baz
+    b.baz ||= result.baz
+    c.baz ??= result.baz
+    
+    a.foo["baz"] &&= result.foo.baz
+    b.foo["baz"] ||= result.foo.baz
+    c.foo["baz"] ??= result.foo.baz
+    
+    a.foo.bar().baz &&= result.foo.bar().baz
+    b.foo.bar().baz ||= result.foo.bar().baz
+    c.foo.bar().baz ??= result.foo.bar().baz
+    
+    
