--- old.importCallExpressionCheckReturntype1.symbols
+++ new.importCallExpressionCheckReturntype1.symbols
@@= skipped -16, +16 lines =@@
 
 let p1: Promise<typeof anotherModule> = import("./defaultPath");
 >p1 : Symbol(p1, Decl(1.ts, 3, 3))
->Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>Promise : Symbol(Promise)
 >anotherModule : Symbol(anotherModule, Decl(1.ts, 1, 6))
->"./defaultPath" : Symbol(defaultModule, Decl(defaultPath.ts, 0, 0))
 
 let p2 = import("./defaultPath") as Promise<typeof anotherModule>;
 >p2 : Symbol(p2, Decl(1.ts, 4, 3))
->"./defaultPath" : Symbol(defaultModule, Decl(defaultPath.ts, 0, 0))
->Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>Promise : Symbol(Promise)
 >anotherModule : Symbol(anotherModule, Decl(1.ts, 1, 6))
 
 let p3: Promise<any> = import("./defaultPath");
 >p3 : Symbol(p3, Decl(1.ts, 5, 3))
->Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
->"./defaultPath" : Symbol(defaultModule, Decl(defaultPath.ts, 0, 0))
+>Promise : Symbol(Promise)
 
