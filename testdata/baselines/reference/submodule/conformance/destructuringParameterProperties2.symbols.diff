--- old.destructuringParameterProperties2.symbols
+++ new.destructuringParameterProperties2.symbols
@@= skipped -4, +4 lines =@@
 >C1 : Symbol(C1, Decl(destructuringParameterProperties2.ts, 0, 0))
 
     constructor(private k: number, private [a, b, c]: [number, string, boolean]) {
->k : Symbol(C1.k, Decl(destructuringParameterProperties2.ts, 1, 16))
+>k : Symbol(k, Decl(destructuringParameterProperties2.ts, 1, 16))
 >a : Symbol(a, Decl(destructuringParameterProperties2.ts, 1, 44))
 >b : Symbol(b, Decl(destructuringParameterProperties2.ts, 1, 46))
 >c : Symbol(c, Decl(destructuringParameterProperties2.ts, 1, 49))
@@= skipped -23, +23 lines =@@
     }
 
     public getA() {
->getA : Symbol(C1.getA, Decl(destructuringParameterProperties2.ts, 5, 5))
+>getA : Symbol(getA, Decl(destructuringParameterProperties2.ts, 5, 5))
 
         return this.a
 >this : Symbol(C1, Decl(destructuringParameterProperties2.ts, 0, 0))
     }
 
     public getB() {
->getB : Symbol(C1.getB, Decl(destructuringParameterProperties2.ts, 9, 5))
+>getB : Symbol(getB, Decl(destructuringParameterProperties2.ts, 9, 5))
 
         return this.b
 >this : Symbol(C1, Decl(destructuringParameterProperties2.ts, 0, 0))
     }
 
     public getC() {
->getC : Symbol(C1.getC, Decl(destructuringParameterProperties2.ts, 13, 5))
+>getC : Symbol(getC, Decl(destructuringParameterProperties2.ts, 13, 5))
 
         return this.c;
 >this : Symbol(C1, Decl(destructuringParameterProperties2.ts, 0, 0))
@@= skipped -31, +31 lines =@@
 >x_a : Symbol(x_a, Decl(destructuringParameterProperties2.ts, 21, 5))
 >x_b : Symbol(x_b, Decl(destructuringParameterProperties2.ts, 21, 9))
 >x_c : Symbol(x_c, Decl(destructuringParameterProperties2.ts, 21, 14))
->x.getA : Symbol(C1.getA, Decl(destructuringParameterProperties2.ts, 5, 5))
+>x.getA : Symbol(getA, Decl(destructuringParameterProperties2.ts, 5, 5))
 >x : Symbol(x, Decl(destructuringParameterProperties2.ts, 20, 3))
->getA : Symbol(C1.getA, Decl(destructuringParameterProperties2.ts, 5, 5))
->x.getB : Symbol(C1.getB, Decl(destructuringParameterProperties2.ts, 9, 5))
+>getA : Symbol(getA, Decl(destructuringParameterProperties2.ts, 5, 5))
+>x.getB : Symbol(getB, Decl(destructuringParameterProperties2.ts, 9, 5))
 >x : Symbol(x, Decl(destructuringParameterProperties2.ts, 20, 3))
->getB : Symbol(C1.getB, Decl(destructuringParameterProperties2.ts, 9, 5))
->x.getC : Symbol(C1.getC, Decl(destructuringParameterProperties2.ts, 13, 5))
+>getB : Symbol(getB, Decl(destructuringParameterProperties2.ts, 9, 5))
+>x.getC : Symbol(getC, Decl(destructuringParameterProperties2.ts, 13, 5))
 >x : Symbol(x, Decl(destructuringParameterProperties2.ts, 20, 3))
->getC : Symbol(C1.getC, Decl(destructuringParameterProperties2.ts, 13, 5))
+>getC : Symbol(getC, Decl(destructuringParameterProperties2.ts, 13, 5))
 
 var y = new C1(10, [0, "", true]);
 >y : Symbol(y, Decl(destructuringParameterProperties2.ts, 23, 3))
@@= skipped -18, +18 lines =@@
 >y_a : Symbol(y_a, Decl(destructuringParameterProperties2.ts, 24, 5))
 >y_b : Symbol(y_b, Decl(destructuringParameterProperties2.ts, 24, 9))
 >y_c : Symbol(y_c, Decl(destructuringParameterProperties2.ts, 24, 14))
->y.getA : Symbol(C1.getA, Decl(destructuringParameterProperties2.ts, 5, 5))
+>y.getA : Symbol(getA, Decl(destructuringParameterProperties2.ts, 5, 5))
 >y : Symbol(y, Decl(destructuringParameterProperties2.ts, 23, 3))
->getA : Symbol(C1.getA, Decl(destructuringParameterProperties2.ts, 5, 5))
->y.getB : Symbol(C1.getB, Decl(destructuringParameterProperties2.ts, 9, 5))
+>getA : Symbol(getA, Decl(destructuringParameterProperties2.ts, 5, 5))
+>y.getB : Symbol(getB, Decl(destructuringParameterProperties2.ts, 9, 5))
 >y : Symbol(y, Decl(destructuringParameterProperties2.ts, 23, 3))
->getB : Symbol(C1.getB, Decl(destructuringParameterProperties2.ts, 9, 5))
->y.getC : Symbol(C1.getC, Decl(destructuringParameterProperties2.ts, 13, 5))
+>getB : Symbol(getB, Decl(destructuringParameterProperties2.ts, 9, 5))
+>y.getC : Symbol(getC, Decl(destructuringParameterProperties2.ts, 13, 5))
 >y : Symbol(y, Decl(destructuringParameterProperties2.ts, 23, 3))
->getC : Symbol(C1.getC, Decl(destructuringParameterProperties2.ts, 13, 5))
+>getC : Symbol(getC, Decl(destructuringParameterProperties2.ts, 13, 5))
 
 var z = new C1(10, [undefined, "", null]);
 >z : Symbol(z, Decl(destructuringParameterProperties2.ts, 26, 3))
@@= skipped -19, +19 lines =@@
 >z_a : Symbol(z_a, Decl(destructuringParameterProperties2.ts, 27, 5))
 >z_b : Symbol(z_b, Decl(destructuringParameterProperties2.ts, 27, 9))
 >z_c : Symbol(z_c, Decl(destructuringParameterProperties2.ts, 27, 14))
->z.getA : Symbol(C1.getA, Decl(destructuringParameterProperties2.ts, 5, 5))
+>z.getA : Symbol(getA, Decl(destructuringParameterProperties2.ts, 5, 5))
 >z : Symbol(z, Decl(destructuringParameterProperties2.ts, 26, 3))
->getA : Symbol(C1.getA, Decl(destructuringParameterProperties2.ts, 5, 5))
->z.getB : Symbol(C1.getB, Decl(destructuringParameterProperties2.ts, 9, 5))
+>getA : Symbol(getA, Decl(destructuringParameterProperties2.ts, 5, 5))
+>z.getB : Symbol(getB, Decl(destructuringParameterProperties2.ts, 9, 5))
 >z : Symbol(z, Decl(destructuringParameterProperties2.ts, 26, 3))
->getB : Symbol(C1.getB, Decl(destructuringParameterProperties2.ts, 9, 5))
->z.getC : Symbol(C1.getC, Decl(destructuringParameterProperties2.ts, 13, 5))
+>getB : Symbol(getB, Decl(destructuringParameterProperties2.ts, 9, 5))
+>z.getC : Symbol(getC, Decl(destructuringParameterProperties2.ts, 13, 5))
 >z : Symbol(z, Decl(destructuringParameterProperties2.ts, 26, 3))
->getC : Symbol(C1.getC, Decl(destructuringParameterProperties2.ts, 13, 5))
+>getC : Symbol(getC, Decl(destructuringParameterProperties2.ts, 13, 5))
 
