//// [tests/cases/conformance/classes/members/privateNames/privateNameFieldsESNext.ts] ////

=== privateNameFieldsESNext.ts ===
class C {
>C : Symbol(C, Decl(privateNameFieldsESNext.ts, 0, 0))

    a = 123;
>a : Symbol(a, Decl(privateNameFieldsESNext.ts, 0, 9))

    #a = 10;
>#a : Symbol(#a, Decl(privateNameFieldsESNext.ts, 1, 12))

    c = "hello";
>c : Symbol(c, Decl(privateNameFieldsESNext.ts, 2, 12))

    #b;
>#b : Symbol(#b, Decl(privateNameFieldsESNext.ts, 3, 16))

    method() {
>method : Symbol(method, Decl(privateNameFieldsESNext.ts, 4, 7))

        console.log(this.#a);
>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
>console : Symbol(console, Decl(lib.dom.d.ts, --, --))
>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
>this.#a : Symbol(#a, Decl(privateNameFieldsESNext.ts, 1, 12))
>this : Symbol(C, Decl(privateNameFieldsESNext.ts, 0, 0))

        this.#a = "hello";
>this.#a : Symbol(#a, Decl(privateNameFieldsESNext.ts, 1, 12))
>this : Symbol(C, Decl(privateNameFieldsESNext.ts, 0, 0))

        console.log(this.#b);
>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
>console : Symbol(console, Decl(lib.dom.d.ts, --, --))
>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
>this.#b : Symbol(#b, Decl(privateNameFieldsESNext.ts, 3, 16))
>this : Symbol(C, Decl(privateNameFieldsESNext.ts, 0, 0))
    }
    static #m = "test";
>#m : Symbol(#m, Decl(privateNameFieldsESNext.ts, 9, 5))

    static #x;
>#x : Symbol(#x, Decl(privateNameFieldsESNext.ts, 10, 23))

    static test() {
>test : Symbol(test, Decl(privateNameFieldsESNext.ts, 11, 14))

        console.log(this.#m);
>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
>console : Symbol(console, Decl(lib.dom.d.ts, --, --))
>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
>this.#m : Symbol(#m, Decl(privateNameFieldsESNext.ts, 9, 5))
>this : Symbol(C, Decl(privateNameFieldsESNext.ts, 0, 0))

        console.log(this.#x = "test");
>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
>console : Symbol(console, Decl(lib.dom.d.ts, --, --))
>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
>this.#x : Symbol(#x, Decl(privateNameFieldsESNext.ts, 10, 23))
>this : Symbol(C, Decl(privateNameFieldsESNext.ts, 0, 0))
    }
    #something = () => 1234;
>#something : Symbol(#something, Decl(privateNameFieldsESNext.ts, 15, 5))
}


