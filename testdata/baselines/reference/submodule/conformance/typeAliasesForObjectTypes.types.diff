--- old.typeAliasesForObjectTypes.types
+++ new.typeAliasesForObjectTypes.types
@@= skipped -6, +6 lines =@@
 
 // An interface can be named in an extends or implements clause, but a type alias for an object type literal cannot.
 interface I1 extends T1 { y: string }
+>I1 : I1
 >y : string
 
 class C1 implements T1 {
@@= skipped -15, +16 lines =@@
 >x : string
 
 type T2 = { y: number }
->T2 : { y: number; }
+>T2 : T2
 >y : number
 
 // An interface can have type parameters, but a type alias for an object type literal cannot.
 type T3<T> = { x: T }
 >T3 : T3<T>
+>T : T
 >x : T
 
