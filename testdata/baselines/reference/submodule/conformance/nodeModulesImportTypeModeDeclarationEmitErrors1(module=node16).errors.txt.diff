--- old.nodeModulesImportTypeModeDeclarationEmitErrors1(module=node16).errors.txt
+++ new.nodeModulesImportTypeModeDeclarationEmitErrors1(module=node16).errors.txt
@@= skipped -0, +0 lines =@@
 /index.ts(2,51): error TS1453: `resolution-mode` should be either `require` or `import`.
+/index.ts(5,14): error TS2742: The inferred type of 'a' cannot be named without a reference to './node_modules/pkg/require'. This is likely not portable. A type annotation is necessary.
 /index.ts(5,78): error TS1453: `resolution-mode` should be either `require` or `import`.
+/index.ts(6,14): error TS2742: The inferred type of 'b' cannot be named without a reference to './node_modules/pkg/import'. This is likely not portable. A type annotation is necessary.
 /other.ts(3,7): error TS1340: Module 'pkg' does not refer to a type, but is used as a type here. Did you mean 'typeof import('pkg')'?
 /other.ts(3,22): error TS1005: 'with' expected.
 /other.ts(3,39): error TS1005: ';' expected.
@@= skipped -29, +31 lines =@@
 /other2.ts(3,32): error TS1455: `resolution-mode` is the only valid key for type import assertions.
 /other2.ts(4,32): error TS1455: `resolution-mode` is the only valid key for type import assertions.
 /other2.ts(4,52): error TS2694: Namespace '"/node_modules/pkg/require"' has no exported member 'ImportInterface'.
+/other2.ts(6,14): error TS2742: The inferred type of 'a' cannot be named without a reference to './node_modules/pkg/require'. This is likely not portable. A type annotation is necessary.
 /other2.ts(6,59): error TS1455: `resolution-mode` is the only valid key for type import assertions.
 /other2.ts(7,59): error TS1455: `resolution-mode` is the only valid key for type import assertions.
 /other2.ts(7,79): error TS2694: Namespace '"/node_modules/pkg/require"' has no exported member 'ImportInterface'.
@@= skipped -40, +41 lines =@@
 /other5.ts(2,31): error TS1456: Type import assertions should have exactly one key - `resolution-mode` - with value `import` or `require`.
 /other5.ts(3,31): error TS1456: Type import assertions should have exactly one key - `resolution-mode` - with value `import` or `require`.
 /other5.ts(3,37): error TS2694: Namespace '"/node_modules/pkg/require"' has no exported member 'ImportInterface'.
+/other5.ts(5,14): error TS2742: The inferred type of 'a' cannot be named without a reference to './node_modules/pkg/require'. This is likely not portable. A type annotation is necessary.
 /other5.ts(5,58): error TS1456: Type import assertions should have exactly one key - `resolution-mode` - with value `import` or `require`.
 /other5.ts(6,58): error TS1456: Type import assertions should have exactly one key - `resolution-mode` - with value `import` or `require`.
 /other5.ts(6,64): error TS2694: Namespace '"/node_modules/pkg/require"' has no exported member 'ImportInterface'.
@@= skipped -18, +19 lines =@@
     export interface ImportInterface {}
 ==== /node_modules/pkg/require.d.ts (0 errors) ====
     export interface RequireInterface {}
-==== /index.ts (2 errors) ====
+==== /index.ts (4 errors) ====
     export type LocalInterface =
         & import("pkg", { assert: {"resolution-mode": "foobar"} }).RequireInterface
                                                       ~~~~~~~~
@@= skipped -8, +8 lines =@@
         & import("pkg", { assert: {"resolution-mode": "import"} }).ImportInterface;
     
     export const a = (null as any as import("pkg", { assert: {"resolution-mode": "foobar"} }).RequireInterface);
+                 ~
+!!! error TS2742: The inferred type of 'a' cannot be named without a reference to './node_modules/pkg/require'. This is likely not portable. A type annotation is necessary.
                                                                                  ~~~~~~~~
 !!! error TS1453: `resolution-mode` should be either `require` or `import`.
     export const b = (null as any as import("pkg", { assert: {"resolution-mode": "import"} }).ImportInterface);
+                 ~
+!!! error TS2742: The inferred type of 'b' cannot be named without a reference to './node_modules/pkg/import'. This is likely not portable. A type annotation is necessary.
 ==== /other.ts (27 errors) ====
     // missing assert:
     export type LocalInterface =
@@= skipped -68, +72 lines =@@
 !!! error TS2304: Cannot find name 'ImportInterface'.
                                                                                                  ~
 !!! error TS1128: Declaration or statement expected.
-==== /other2.ts (6 errors) ====
+==== /other2.ts (7 errors) ====
     // wrong assertion key
     export type LocalInterface =
         & import("pkg", { assert: {"bad": "require"} }).RequireInterface
@@= skipped -13, +13 lines =@@
 !!! error TS2694: Namespace '"/node_modules/pkg/require"' has no exported member 'ImportInterface'.
     
     export const a = (null as any as import("pkg", { assert: {"bad": "require"} }).RequireInterface);
+                 ~
+!!! error TS2742: The inferred type of 'a' cannot be named without a reference to './node_modules/pkg/require'. This is likely not portable. A type annotation is necessary.
                                                               ~~~~~
 !!! error TS1455: `resolution-mode` is the only valid key for type import assertions.
     export const b = (null as any as import("pkg", { assert: {"bad": "import"} }).ImportInterface);
@@= skipped -103, +105 lines =@@
 !!! error TS1134: Variable declaration expected.
                                                                             ~
 !!! error TS1005: ',' expected.
-==== /other5.ts (6 errors) ====
+==== /other5.ts (7 errors) ====
     export type LocalInterface =
         & import("pkg", { assert: {} }).RequireInterface
                                   ~~
@@= skipped -12, +12 lines =@@
 !!! error TS2694: Namespace '"/node_modules/pkg/require"' has no exported member 'ImportInterface'.
     
     export const a = (null as any as import("pkg", { assert: {} }).RequireInterface);
+                 ~
+!!! error TS2742: The inferred type of 'a' cannot be named without a reference to './node_modules/pkg/require'. This is likely not portable. A type annotation is necessary.
                                                              ~~
 !!! error TS1456: Type import assertions should have exactly one key - `resolution-mode` - with value `import` or `require`.
     export const b = (null as any as import("pkg", { assert: {} }).ImportInterface);