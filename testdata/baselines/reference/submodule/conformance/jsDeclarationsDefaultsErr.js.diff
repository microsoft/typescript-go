--- old.jsDeclarationsDefaultsErr.js
+++ new.jsDeclarationsDefaultsErr.js
@@= skipped -30, +30 lines =@@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
 // merge type alias and alias (should error, see #32367)
-var Cls = /** @class */ (function () {
-    function Cls() {
-        this.x = 12;
-    }
-    Cls.y = "ok";
-    return Cls;
-}());
+class Cls {
+    x = 12;
+    static y = "ok";
+}
 exports.default = Cls;
 /**
  * @typedef {string | number} default
@@= skipped -15, +12 lines =@@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
 // merge type alias and class (error message improvement needed, see #32368)
-var C = /** @class */ (function () {
-    function C() {
-    }
-    return C;
-}());
+class C {
+}
 exports.default = C;
 ;
 /**
@@= skipped -15, +12 lines =@@
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.default = void 0;
 // merge type alias and variable (behavior is borked, see #32366)
-var x = 12;
+const x = 12;
 exports.default = x;
 /**
  * @typedef {string | number} default
@@= skipped -8, +8 lines =@@


 //// [index1.d.ts]
-export type Cls = string | number;
-export default Cls;
+// merge type alias and alias (should error, see #32367)
 declare class Cls {
-    static y: string;
     x: number;
+    static y: string;
 }
+export default Cls;
+/**
+ * @typedef {string | number} default
+ */
 //// [index2.d.ts]
+// merge type alias and class (error message improvement needed, see #32368)
 export default class C {
 }
+/**
+ * @typedef {string | number} default
+ */
 //// [index3.d.ts]
-export type _default = string | number;
+// merge type alias and variable (behavior is borked, see #32366)
+declare const x = 12;
 export { x as default };
-declare const x: 12;
+/**
+ * @typedef {string | number} default
+ */