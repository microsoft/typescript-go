--- old.bestCommonTypeOfTuple.symbols
+++ new.bestCommonTypeOfTuple.symbols
@@= skipped -14, +14 lines =@@
 
 enum E1 { one }
 >E1 : Symbol(E1, Decl(bestCommonTypeOfTuple.ts, 4, 48))
->one : Symbol(E1.one, Decl(bestCommonTypeOfTuple.ts, 6, 9))
+>one : Symbol(one, Decl(bestCommonTypeOfTuple.ts, 6, 9))
 
 enum E2 { two }
 >E2 : Symbol(E2, Decl(bestCommonTypeOfTuple.ts, 6, 15))
->two : Symbol(E2.two, Decl(bestCommonTypeOfTuple.ts, 8, 9))
+>two : Symbol(two, Decl(bestCommonTypeOfTuple.ts, 8, 9))
 
 
 var t1: [(x: number) => string, (x: number) => number];
@@= skipped -33, +33 lines =@@
 
 t2 = [E1.one, E2.two];
 >t2 : Symbol(t2, Decl(bestCommonTypeOfTuple.ts, 12, 3))
->E1.one : Symbol(E1.one, Decl(bestCommonTypeOfTuple.ts, 6, 9))
+>E1.one : Symbol(one, Decl(bestCommonTypeOfTuple.ts, 6, 9))
 >E1 : Symbol(E1, Decl(bestCommonTypeOfTuple.ts, 4, 48))
->one : Symbol(E1.one, Decl(bestCommonTypeOfTuple.ts, 6, 9))
->E2.two : Symbol(E2.two, Decl(bestCommonTypeOfTuple.ts, 8, 9))
+>one : Symbol(one, Decl(bestCommonTypeOfTuple.ts, 6, 9))
+>E2.two : Symbol(two, Decl(bestCommonTypeOfTuple.ts, 8, 9))
 >E2 : Symbol(E2, Decl(bestCommonTypeOfTuple.ts, 6, 15))
->two : Symbol(E2.two, Decl(bestCommonTypeOfTuple.ts, 8, 9))
+>two : Symbol(two, Decl(bestCommonTypeOfTuple.ts, 8, 9))
 
 t3 = [5, undefined];
 >t3 : Symbol(t3, Decl(bestCommonTypeOfTuple.ts, 13, 3))
@@= skipped -13, +13 lines =@@
 
 t4 = [E1.one, E2.two, 20];
 >t4 : Symbol(t4, Decl(bestCommonTypeOfTuple.ts, 14, 3))
->E1.one : Symbol(E1.one, Decl(bestCommonTypeOfTuple.ts, 6, 9))
+>E1.one : Symbol(one, Decl(bestCommonTypeOfTuple.ts, 6, 9))
 >E1 : Symbol(E1, Decl(bestCommonTypeOfTuple.ts, 4, 48))
->one : Symbol(E1.one, Decl(bestCommonTypeOfTuple.ts, 6, 9))
->E2.two : Symbol(E2.two, Decl(bestCommonTypeOfTuple.ts, 8, 9))
+>one : Symbol(one, Decl(bestCommonTypeOfTuple.ts, 6, 9))
+>E2.two : Symbol(two, Decl(bestCommonTypeOfTuple.ts, 8, 9))
 >E2 : Symbol(E2, Decl(bestCommonTypeOfTuple.ts, 6, 15))
->two : Symbol(E2.two, Decl(bestCommonTypeOfTuple.ts, 8, 9))
+>two : Symbol(two, Decl(bestCommonTypeOfTuple.ts, 8, 9))
 
 var e1 = t1[2];  // {}
 >e1 : Symbol(e1, Decl(bestCommonTypeOfTuple.ts, 21, 3))
