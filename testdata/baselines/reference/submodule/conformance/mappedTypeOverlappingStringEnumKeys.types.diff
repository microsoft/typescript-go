--- old.mappedTypeOverlappingStringEnumKeys.types
+++ new.mappedTypeOverlappingStringEnumKeys.types
@@= skipped -16, +16 lines =@@
 };
 
 enum AlienAnimalTypes {
->AlienAnimalTypes : AlienAnimalTypes
+>AlienAnimalTypes : AlienAnimalTypes.CAT
 
   CAT = "cat",
 >CAT : AlienAnimalTypes.CAT
@@= skipped -12, +12 lines =@@
 >AnimalTypes : AnimalTypes
 
 interface TerrestrialCat {
+>TerrestrialCat : TerrestrialCat
+
   type: TerrestrialAnimalTypes.CAT;
 >type : TerrestrialAnimalTypes.CAT
 >TerrestrialAnimalTypes : any
@@= skipped -9, +11 lines =@@
 }
 
 interface AlienCat {
+>AlienCat : AlienCat
+
   type: AlienAnimalTypes.CAT
->type : AlienAnimalTypes
+>type : AlienAnimalTypes.CAT
 >AlienAnimalTypes : any
 
   planet: string;
@@= skipped -15, +17 lines =@@
 >CatMap : CatMap
 
   [V in AnimalTypes]: Extract<Cats, { type: V }>[]
+>V : V
 >type : V
 
 };
 
 const catMap: CatMap = {
 >catMap : CatMap
->{  cat: [    { type: TerrestrialAnimalTypes.CAT, address: "" },    { type: AlienAnimalTypes.CAT, planet: "" }  ],  dog: [] as never[]} : { cat: ({ type: TerrestrialAnimalTypes.CAT; address: string; } | { type: AlienAnimalTypes; planet: string; })[]; dog: never[]; }
+>{  cat: [    { type: TerrestrialAnimalTypes.CAT, address: "" },    { type: AlienAnimalTypes.CAT, planet: "" }  ],  dog: [] as never[]} : { cat: ({ type: TerrestrialAnimalTypes.CAT; address: string; } | { type: AlienAnimalTypes.CAT; planet: string; })[]; dog: never[]; }
 
   cat: [
->cat : ({ type: TerrestrialAnimalTypes.CAT; address: string; } | { type: AlienAnimalTypes; planet: string; })[]
->[    { type: TerrestrialAnimalTypes.CAT, address: "" },    { type: AlienAnimalTypes.CAT, planet: "" }  ] : ({ type: TerrestrialAnimalTypes.CAT; address: string; } | { type: AlienAnimalTypes; planet: string; })[]
+>cat : ({ type: TerrestrialAnimalTypes.CAT; address: string; } | { type: AlienAnimalTypes.CAT; planet: string; })[]
+>[    { type: TerrestrialAnimalTypes.CAT, address: "" },    { type: AlienAnimalTypes.CAT, planet: "" }  ] : ({ type: TerrestrialAnimalTypes.CAT; address: string; } | { type: AlienAnimalTypes.CAT; planet: string; })[]
 
     { type: TerrestrialAnimalTypes.CAT, address: "" },
 >{ type: TerrestrialAnimalTypes.CAT, address: "" } : { type: TerrestrialAnimalTypes.CAT; address: string; }
@@= skipped -22, +23 lines =@@
 >"" : ""
 
     { type: AlienAnimalTypes.CAT, planet: "" }
->{ type: AlienAnimalTypes.CAT, planet: "" } : { type: AlienAnimalTypes; planet: string; }
->type : AlienAnimalTypes
->AlienAnimalTypes.CAT : AlienAnimalTypes
+>{ type: AlienAnimalTypes.CAT, planet: "" } : { type: AlienAnimalTypes.CAT; planet: string; }
+>type : AlienAnimalTypes.CAT
+>AlienAnimalTypes.CAT : AlienAnimalTypes.CAT
 >AlienAnimalTypes : typeof AlienAnimalTypes
->CAT : AlienAnimalTypes
+>CAT : AlienAnimalTypes.CAT
 >planet : string
 >"" : ""
 
