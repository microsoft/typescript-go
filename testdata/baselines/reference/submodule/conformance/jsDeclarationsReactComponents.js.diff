--- old.jsDeclarationsReactComponents.js
+++ new.jsDeclarationsReactComponents.js
@@= skipped -94, +94 lines =@@
 
 export default Tree;
 
-//// [jsDeclarationsReactComponents1.js]
+//// [jsDeclarationsReactComponents5.js]
 "use strict";
 var __importDefault = (this && this.__importDefault) || function (mod) {
     return (mod && mod.__esModule) ? mod : { "default": mod };
 };
 Object.defineProperty(exports, "__esModule", { value: true });
-/// <reference path="react16.d.ts" preserve="true" />
-var react_1 = __importDefault(require("react"));
-var prop_types_1 = __importDefault(require("prop-types"));
-var TabbedShowLayout = function (_a) {
-    return (react_1.default.createElement("div", null));
+const react_1 = __importDefault(require("react"));
+const prop_types_1 = __importDefault(require("prop-types"));
+function Tree({ allowDropOnRoot }) {
+    return <div />;
+}
+Tree.propTypes = {
+    classes: prop_types_1.default.object,
 };
-TabbedShowLayout.propTypes = {
-    version: prop_types_1.default.number,
+Tree.defaultProps = {
+    classes: {},
+    parentSource: 'parent_id',
 };
-TabbedShowLayout.defaultProps = {
-    tabs: undefined
-};
-exports.default = TabbedShowLayout;
-//// [jsDeclarationsReactComponents2.js]
+exports.default = Tree;
+//// [jsDeclarationsReactComponents4.js]
 "use strict";
 var __importDefault = (this && this.__importDefault) || function (mod) {
     return (mod && mod.__esModule) ? mod : { "default": mod };
 };
 Object.defineProperty(exports, "__esModule", { value: true });
-var react_1 = __importDefault(require("react"));
-/**
- * @type {React.SFC}
- */
-var TabbedShowLayout = function () {
-    return (react_1.default.createElement("div", { className: "", key: "" }, "ok"));
+const react_1 = __importDefault(require("react"));
+const TabbedShowLayout = (prop) => {
+    return (<div className={prop.className} key="">
+            ok
+        </div>);
 };
 TabbedShowLayout.defaultProps = {
     tabs: "default value"
@@= skipped -42, +41 lines =@@
     return (mod && mod.__esModule) ? mod : { "default": mod };
 };
 Object.defineProperty(exports, "__esModule", { value: true });
-var react_1 = __importDefault(require("react"));
-/**
- * @type {{defaultProps: {tabs: string}} & ((props?: {elem: string}) => JSX.Element)}
- */
-var TabbedShowLayout = function () {
-    return (react_1.default.createElement("div", { className: "", key: "" }, "ok"));
+const react_1 = __importDefault(require("react"));
+const TabbedShowLayout = () => {
+    return (<div className="" key="">
+            ok
+        </div>);
 };
 TabbedShowLayout.defaultProps = {
     tabs: "default value"
 };
 exports.default = TabbedShowLayout;
-//// [jsDeclarationsReactComponents4.js]
+//// [jsDeclarationsReactComponents2.js]
 "use strict";
 var __importDefault = (this && this.__importDefault) || function (mod) {
     return (mod && mod.__esModule) ? mod : { "default": mod };
 };
 Object.defineProperty(exports, "__esModule", { value: true });
-var react_1 = __importDefault(require("react"));
-var TabbedShowLayout = function (/** @type {{className: string}}*/ prop) {
-    return (react_1.default.createElement("div", { className: prop.className, key: "" }, "ok"));
+const react_1 = __importDefault(require("react"));
+const TabbedShowLayout = () => {
+    return (<div className="" key="">
+            ok
+        </div>);
 };
 TabbedShowLayout.defaultProps = {
     tabs: "default value"
 };
 exports.default = TabbedShowLayout;
-//// [jsDeclarationsReactComponents5.js]
+//// [jsDeclarationsReactComponents1.js]
 "use strict";
 var __importDefault = (this && this.__importDefault) || function (mod) {
     return (mod && mod.__esModule) ? mod : { "default": mod };
 };
 Object.defineProperty(exports, "__esModule", { value: true });
-var react_1 = __importDefault(require("react"));
-var prop_types_1 = __importDefault(require("prop-types"));
-function Tree(_a) {
-    var allowDropOnRoot = _a.allowDropOnRoot;
-    return react_1.default.createElement("div", null);
-}
-Tree.propTypes = {
-    classes: prop_types_1.default.object,
+const react_1 = __importDefault(require("react"));
+const prop_types_1 = __importDefault(require("prop-types"));
+const TabbedShowLayout = ({}) => {
+    return (<div />);
 };
-Tree.defaultProps = {
-    classes: {},
-    parentSource: 'parent_id',
+TabbedShowLayout.propTypes = {
+    version: prop_types_1.default.number,
 };
-exports.default = Tree;
-
-
-//// [jsDeclarationsReactComponents1.d.ts]
-/// <reference path="../..react16.d.ts" preserve="true" />
-export default TabbedShowLayout;
-declare function TabbedShowLayout({}: {}): JSX.Element;
-declare namespace TabbedShowLayout {
-    namespace propTypes {
-        let version: PropTypes.Requireable<number>;
-    }
-    namespace defaultProps {
-        let tabs: undefined;
-    }
-}
-import PropTypes from "prop-types";
-//// [jsDeclarationsReactComponents2.d.ts]
-export default TabbedShowLayout;
-/**
- * @type {React.SFC}
- */
-declare const TabbedShowLayout: React.SFC;
-import React from "react";
-//// [jsDeclarationsReactComponents3.d.ts]
-export default TabbedShowLayout;
-/**
- * @type {{defaultProps: {tabs: string}} & ((props?: {elem: string}) => JSX.Element)}
- */
-declare const TabbedShowLayout: {
-    defaultProps: {
-        tabs: string;
-    };
-} & ((props?: {
-    elem: string;
-}) => JSX.Element);
-//// [jsDeclarationsReactComponents4.d.ts]
-export default TabbedShowLayout;
-declare function TabbedShowLayout(prop: {
-    className: string;
-}): JSX.Element;
-declare namespace TabbedShowLayout {
-    namespace defaultProps {
-        let tabs: string;
-    }
-}
-//// [jsDeclarationsReactComponents5.d.ts]
-export default Tree;
-declare function Tree({ allowDropOnRoot }: {
-    allowDropOnRoot: any;
-}): JSX.Element;
-declare namespace Tree {
-    namespace propTypes {
-        let classes: PropTypes.Requireable<object>;
-    }
-    namespace defaultProps {
-        let classes_1: {};
-        export { classes_1 as classes };
-        export let parentSource: string;
-    }
-}
-import PropTypes from 'prop-types';
+TabbedShowLayout.defaultProps = {
+    tabs: undefined
+};
+exports.default = TabbedShowLayout;
