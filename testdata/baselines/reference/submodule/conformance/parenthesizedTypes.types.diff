--- old.parenthesizedTypes.types
+++ new.parenthesizedTypes.types
@@= skipped -30, +30 lines =@@
 >c : string[] | number[]
 
 var d: (((x: string) => string) | ((x: number) => number))[];
->d : (((x: string) => string) | ((x: number) => number))[]
+>d : ((x: string) => string | (x: number) => number)[]
 >x : string
 >x : number
 
 var d: ({ (x: string): string } | { (x: number): number })[];
->d : (((x: string) => string) | ((x: number) => number))[]
+>d : ((x: string) => string | (x: number) => number)[]
 >x : string
 >x : number
 
 var d: Array<((x: string) => string) | ((x: number) => number)>;
->d : (((x: string) => string) | ((x: number) => number))[]
+>d : ((x: string) => string | (x: number) => number)[]
 >x : string
 >x : number
 
 var d: Array<{ (x: string): string } | { (x: number): number }>;
->d : (((x: string) => string) | ((x: number) => number))[]
+>d : ((x: string) => string | (x: number) => number)[]
 >x : string
 >x : number
 
 var d: (Array<{ (x: string): string } | { (x: number): number }>);
->d : (((x: string) => string) | ((x: number) => number))[]
+>d : ((x: string) => string | (x: number) => number)[]
 >x : string
 >x : number
 
 var e: typeof a[];
 >e : string[]
->a : string
 
 var e: (typeof a)[];
 >e : string[]
->a : string
 
 var f: (string) => string;
 >f : (string: any) => string
@@= skipped -48, +46 lines =@@
 
 var g: [(string), (((typeof a)))];
 >g : [string, string]
->a : string
 
