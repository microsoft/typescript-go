--- old.thisPropertyAssignmentInherited.symbols
+++ new.thisPropertyAssignmentInherited.symbols
@@= skipped -7, +7 lines =@@
    * @returns {String}
    */
   get textContent() {
->textContent : Symbol(Element.textContent, Decl(thisPropertyAssignmentInherited.js, 0, 22), Decl(thisPropertyAssignmentInherited.js, 6, 3))
+>textContent : Symbol(textContent, Decl(thisPropertyAssignmentInherited.js, 0, 22), Decl(thisPropertyAssignmentInherited.js, 6, 3))
 
     return  ''
   }
   set textContent(x) {}
->textContent : Symbol(Element.textContent, Decl(thisPropertyAssignmentInherited.js, 0, 22), Decl(thisPropertyAssignmentInherited.js, 6, 3))
+>textContent : Symbol(textContent, Decl(thisPropertyAssignmentInherited.js, 0, 22), Decl(thisPropertyAssignmentInherited.js, 6, 3))
 >x : Symbol(x, Decl(thisPropertyAssignmentInherited.js, 7, 18))
 
   cloneNode() { return this}
->cloneNode : Symbol(Element.cloneNode, Decl(thisPropertyAssignmentInherited.js, 7, 23))
+>cloneNode : Symbol(cloneNode, Decl(thisPropertyAssignmentInherited.js, 7, 23))
 >this : Symbol(Element, Decl(thisPropertyAssignmentInherited.js, 0, 0))
 }
 export class HTMLElement extends Element {}
@@= skipped -21, +21 lines =@@
 >HTMLElement : Symbol(HTMLElement, Decl(thisPropertyAssignmentInherited.js, 9, 1))
 
   get innerHTML() { return this.textContent; }
->innerHTML : Symbol(TextElement.innerHTML, Decl(thisPropertyAssignmentInherited.js, 11, 46), Decl(thisPropertyAssignmentInherited.js, 12, 46))
->this.textContent : Symbol(Element.textContent, Decl(thisPropertyAssignmentInherited.js, 0, 22), Decl(thisPropertyAssignmentInherited.js, 6, 3))
+>innerHTML : Symbol(innerHTML, Decl(thisPropertyAssignmentInherited.js, 11, 46), Decl(thisPropertyAssignmentInherited.js, 12, 46))
+>this.textContent : Symbol(textContent, Decl(thisPropertyAssignmentInherited.js, 0, 22), Decl(thisPropertyAssignmentInherited.js, 6, 3))
 >this : Symbol(TextElement, Decl(thisPropertyAssignmentInherited.js, 10, 43))
->textContent : Symbol(Element.textContent, Decl(thisPropertyAssignmentInherited.js, 0, 22), Decl(thisPropertyAssignmentInherited.js, 6, 3))
+>textContent : Symbol(textContent, Decl(thisPropertyAssignmentInherited.js, 0, 22), Decl(thisPropertyAssignmentInherited.js, 6, 3))
 
   set innerHTML(html) { this.textContent = html; }
->innerHTML : Symbol(TextElement.innerHTML, Decl(thisPropertyAssignmentInherited.js, 11, 46), Decl(thisPropertyAssignmentInherited.js, 12, 46))
+>innerHTML : Symbol(innerHTML, Decl(thisPropertyAssignmentInherited.js, 11, 46), Decl(thisPropertyAssignmentInherited.js, 12, 46))
 >html : Symbol(html, Decl(thisPropertyAssignmentInherited.js, 13, 16))
->this.textContent : Symbol(Element.textContent, Decl(thisPropertyAssignmentInherited.js, 0, 22), Decl(thisPropertyAssignmentInherited.js, 6, 3))
+>this.textContent : Symbol(textContent, Decl(thisPropertyAssignmentInherited.js, 0, 22), Decl(thisPropertyAssignmentInherited.js, 6, 3))
 >this : Symbol(TextElement, Decl(thisPropertyAssignmentInherited.js, 10, 43))
->textContent : Symbol(TextElement.textContent, Decl(thisPropertyAssignmentInherited.js, 13, 23))
+>textContent : Symbol(textContent, Decl(thisPropertyAssignmentInherited.js, 0, 22), Decl(thisPropertyAssignmentInherited.js, 6, 3))
 >html : Symbol(html, Decl(thisPropertyAssignmentInherited.js, 13, 16))
 
   toString() {
->toString : Symbol(TextElement.toString, Decl(thisPropertyAssignmentInherited.js, 13, 50))
+>toString : Symbol(toString, Decl(thisPropertyAssignmentInherited.js, 13, 50))
   }
 }
 
