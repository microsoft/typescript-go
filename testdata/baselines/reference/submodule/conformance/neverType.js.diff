--- old.neverType.js
+++ new.neverType.js
@@= skipped -132, +132 lines =@@
 function check(x) {
     return x || error("Undefined value");
 }
-var C = /** @class */ (function () {
-    function C() {
-    }
-    C.prototype.void1 = function () {
-        throw new Error();
-    };
-    C.prototype.void2 = function () {
-        while (true) { }
-    };
-    C.prototype.never1 = function () {
-        throw new Error();
-    };
-    C.prototype.never2 = function () {
-        while (true) { }
-    };
-    return C;
-}());
+class C {
+    void1() {
+        throw new Error();
+    }
+    void2() {
+        while (true) { }
+    }
+    never1() {
+        throw new Error();
+    }
+    never2() {
+        while (true) { }
+    }
+}
 function f1(x) {
     if (typeof x === "boolean") {
         x; // never
@@= skipped -30, +27 lines =@@
     }
 }
 function test(cb) {
-    var s = cb();
+    let s = cb();
     return s;
 }
-var errorCallback = function () { return error("Error callback"); };
-test(function () { return "hello"; });
-test(function () { return fail(); });
-test(function () { throw new Error(); });
+let errorCallback = () => error("Error callback");
+test(() => "hello");
+test(() => fail());
+test(() => { throw new Error(); });
 test(errorCallback);


@@= skipped -17, +17 lines =@@
 declare function failOrThrow(shouldFail: boolean): never;
 declare function infiniteLoop1(): void;
 declare function infiniteLoop2(): never;
-declare function move1(direction: "up" | "down"): 1 | -1;
-declare function move2(direction: "up" | "down"): 1 | -1;
+declare function move1(direction: "up" | "down"): -1 | 1;
+declare function move2(direction: "up" | "down"): -1 | 1;
 declare function check<T>(x: T | undefined): NonNullable<T>;
 declare class C {
     void1(): void;