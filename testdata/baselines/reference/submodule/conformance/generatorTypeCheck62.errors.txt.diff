--- old.generatorTypeCheck62.errors.txt
+++ new.generatorTypeCheck62.errors.txt
@@= skipped -0, +0 lines =@@
-generatorTypeCheck62.ts(24,62): error TS2345: Argument of type '(state: State) => Generator<never, State, any>' is not assignable to parameter of type '(a: State) => IterableIterator<State, void>'.
-  Call signature return types 'Generator<never, State, any>' and 'IterableIterator<State, void>' are incompatible.
-    The types returned by 'next(...)' are incompatible between these types.
-      Type 'IteratorResult<never, State>' is not assignable to type 'IteratorResult<State, void>'.
-        Type 'IteratorReturnResult<State>' is not assignable to type 'IteratorResult<State, void>'.
-          Type 'IteratorReturnResult<State>' is not assignable to type 'IteratorReturnResult<void>'.
-            Type 'State' is not assignable to type 'void'.
-generatorTypeCheck62.ts(32,62): error TS2345: Argument of type '(state: State) => Generator<any, State, any>' is not assignable to parameter of type '(a: any) => IterableIterator<any, void>'.
-  Call signature return types 'Generator<any, State, any>' and 'IterableIterator<any, void>' are incompatible.
-    The types returned by 'next(...)' are incompatible between these types.
-      Type 'IteratorResult<any, State>' is not assignable to type 'IteratorResult<any, void>'.
-        Type 'IteratorReturnResult<State>' is not assignable to type 'IteratorResult<any, void>'.
-          Type 'IteratorReturnResult<State>' is not assignable to type 'IteratorReturnResult<void>'.
-            Type 'State' is not assignable to type 'void'.
-generatorTypeCheck62.ts(32,62): error TS7025: Generator implicitly has yield type 'any'. Consider supplying a return type annotation.
+error TS2318: Cannot find global type 'Array'.
+error TS2318: Cannot find global type 'Function'.
+error TS2318: Cannot find global type 'IArguments'.
+error TS2318: Cannot find global type 'IterableIterator'.
+error TS2318: Cannot find global type 'RegExp'.
+error TS2318: Cannot find global type 'String'.
+error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
+error TS2552: Cannot find name 'Number'. Did you mean 'number'?
+error TS2552: Cannot find name 'Object'. Did you mean 'object'?
+generatorTypeCheck62.ts(5,86): error TS2304: Cannot find name 'IterableIterator'.
+generatorTypeCheck62.ts(5,136): error TS2304: Cannot find name 'IterableIterator'.
+generatorTypeCheck62.ts(17,13): error TS2304: Cannot find name 'IterableIterator'.
 
 
+!!! error TS2318: Cannot find global type 'Array'.
+!!! error TS2318: Cannot find global type 'Function'.
+!!! error TS2318: Cannot find global type 'IArguments'.
+!!! error TS2318: Cannot find global type 'IterableIterator'.
+!!! error TS2318: Cannot find global type 'RegExp'.
+!!! error TS2318: Cannot find global type 'String'.
+!!! error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
+!!! error TS2552: Cannot find name 'Number'. Did you mean 'number'?
+!!! error TS2552: Cannot find name 'Object'. Did you mean 'object'?
 ==== generatorTypeCheck62.ts (3 errors) ====
     export interface StrategicState {
         lastStrategyApplied?: string;
     }
     
     export function strategy<T extends StrategicState>(stratName: string, gen: (a: T) => IterableIterator<T | undefined, void>): (a: T) => IterableIterator<T | undefined, void> {
+                                                                                         ~~~~~~~~~~~~~~~~
+!!! error TS2304: Cannot find name 'IterableIterator'.
+                                                                                                                                           ~~~~~~~~~~~~~~~~
+!!! error TS2304: Cannot find name 'IterableIterator'.
         return function*(state) {
             for (const next of gen(state)) {
                 if (next) {
@@= skipped -32, +42 lines =@@
     
     export interface Strategy<T> {
         (a: T): IterableIterator<T | undefined, void>;
+                ~~~~~~~~~~~~~~~~
+!!! error TS2304: Cannot find name 'IterableIterator'.
     }
     
     export interface State extends StrategicState {
@@= skipped -7, +9 lines =@@
     }
     
     export const Nothing1: Strategy<State> = strategy("Nothing", function*(state: State) {
-                                                                 ~~~~~~~~
-!!! error TS2345: Argument of type '(state: State) => Generator<never, State, any>' is not assignable to parameter of type '(a: State) => IterableIterator<State, void>'.
-!!! error TS2345:   Call signature return types 'Generator<never, State, any>' and 'IterableIterator<State, void>' are incompatible.
-!!! error TS2345:     The types returned by 'next(...)' are incompatible between these types.
-!!! error TS2345:       Type 'IteratorResult<never, State>' is not assignable to type 'IteratorResult<State, void>'.
-!!! error TS2345:         Type 'IteratorReturnResult<State>' is not assignable to type 'IteratorResult<State, void>'.
-!!! error TS2345:           Type 'IteratorReturnResult<State>' is not assignable to type 'IteratorReturnResult<void>'.
-!!! error TS2345:             Type 'State' is not assignable to type 'void'.
         return state; // `return`/`TReturn` isn't supported by `strategy`, so this should error.
     });
     
@@= skipped -16, +8 lines =@@
     });
     
     export const Nothing3: Strategy<State> = strategy("Nothing", function* (state: State) {
-                                                                 ~~~~~~~~
-!!! error TS2345: Argument of type '(state: State) => Generator<any, State, any>' is not assignable to parameter of type '(a: any) => IterableIterator<any, void>'.
-!!! error TS2345:   Call signature return types 'Generator<any, State, any>' and 'IterableIterator<any, void>' are incompatible.
-!!! error TS2345:     The types returned by 'next(...)' are incompatible between these types.
-!!! error TS2345:       Type 'IteratorResult<any, State>' is not assignable to type 'IteratorResult<any, void>'.
-!!! error TS2345:         Type 'IteratorReturnResult<State>' is not assignable to type 'IteratorResult<any, void>'.
-!!! error TS2345:           Type 'IteratorReturnResult<State>' is not assignable to type 'IteratorReturnResult<void>'.
-!!! error TS2345:             Type 'State' is not assignable to type 'void'.
-                                                                 ~~~~~~~~
-!!! error TS7025: Generator implicitly has yield type 'any'. Consider supplying a return type annotation.
         yield ;
         return state; // `return`/`TReturn` isn't supported by `strategy`, so this should error.
     });
