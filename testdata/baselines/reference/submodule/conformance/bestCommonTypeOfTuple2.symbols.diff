--- old.bestCommonTypeOfTuple2.symbols
+++ new.bestCommonTypeOfTuple2.symbols
@@= skipped -5, +5 lines =@@
 
 interface base1 { i }
 >base1 : Symbol(base1, Decl(bestCommonTypeOfTuple2.ts, 0, 18))
->i : Symbol(base1.i, Decl(bestCommonTypeOfTuple2.ts, 1, 17))
+>i : Symbol(i, Decl(bestCommonTypeOfTuple2.ts, 1, 17))
 
 class C implements base { c }
 >C : Symbol(C, Decl(bestCommonTypeOfTuple2.ts, 1, 21))
 >base : Symbol(base, Decl(bestCommonTypeOfTuple2.ts, 0, 0))
->c : Symbol(C.c, Decl(bestCommonTypeOfTuple2.ts, 2, 25))
+>c : Symbol(c, Decl(bestCommonTypeOfTuple2.ts, 2, 25))
 
 class D implements base { d }
 >D : Symbol(D, Decl(bestCommonTypeOfTuple2.ts, 2, 29))
 >base : Symbol(base, Decl(bestCommonTypeOfTuple2.ts, 0, 0))
->d : Symbol(D.d, Decl(bestCommonTypeOfTuple2.ts, 3, 25))
+>d : Symbol(d, Decl(bestCommonTypeOfTuple2.ts, 3, 25))
 
 class E implements base { e }
 >E : Symbol(E, Decl(bestCommonTypeOfTuple2.ts, 3, 29))
 >base : Symbol(base, Decl(bestCommonTypeOfTuple2.ts, 0, 0))
->e : Symbol(E.e, Decl(bestCommonTypeOfTuple2.ts, 4, 25))
+>e : Symbol(e, Decl(bestCommonTypeOfTuple2.ts, 4, 25))
 
 class F extends C { f }
 >F : Symbol(F, Decl(bestCommonTypeOfTuple2.ts, 4, 29))
 >C : Symbol(C, Decl(bestCommonTypeOfTuple2.ts, 1, 21))
->f : Symbol(F.f, Decl(bestCommonTypeOfTuple2.ts, 5, 19))
+>f : Symbol(f, Decl(bestCommonTypeOfTuple2.ts, 5, 19))
 
 class C1 implements base1 { i = "foo"; c }
 >C1 : Symbol(C1, Decl(bestCommonTypeOfTuple2.ts, 5, 23))
 >base1 : Symbol(base1, Decl(bestCommonTypeOfTuple2.ts, 0, 18))
->i : Symbol(C1.i, Decl(bestCommonTypeOfTuple2.ts, 7, 27))
->c : Symbol(C1.c, Decl(bestCommonTypeOfTuple2.ts, 7, 38))
+>i : Symbol(i, Decl(bestCommonTypeOfTuple2.ts, 7, 27))
+>c : Symbol(c, Decl(bestCommonTypeOfTuple2.ts, 7, 38))
 
 class D1 extends C1 { i = "bar"; d }
 >D1 : Symbol(D1, Decl(bestCommonTypeOfTuple2.ts, 7, 42))
 >C1 : Symbol(C1, Decl(bestCommonTypeOfTuple2.ts, 5, 23))
->i : Symbol(D1.i, Decl(bestCommonTypeOfTuple2.ts, 8, 21))
->d : Symbol(D1.d, Decl(bestCommonTypeOfTuple2.ts, 8, 32))
+>i : Symbol(i, Decl(bestCommonTypeOfTuple2.ts, 8, 21))
+>d : Symbol(d, Decl(bestCommonTypeOfTuple2.ts, 8, 32))
 
 var t1: [C, base];
 >t1 : Symbol(t1, Decl(bestCommonTypeOfTuple2.ts, 10, 3))
