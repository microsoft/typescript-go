--- old.twoAccessorsWithSameName.symbols
+++ new.twoAccessorsWithSameName.symbols
@@= skipped -4, +4 lines =@@
 >C : Symbol(C, Decl(twoAccessorsWithSameName.ts, 0, 0))
 
     get x() { return 1; }
->x : Symbol(C.x, Decl(twoAccessorsWithSameName.ts, 0, 9))
+>x : Symbol(x, Decl(twoAccessorsWithSameName.ts, 0, 9))
 
     get x() { return 1; } // error
->x : Symbol(C.x, Decl(twoAccessorsWithSameName.ts, 1, 25))
+>x : Symbol(x, Decl(twoAccessorsWithSameName.ts, 1, 25))
 }
 
 class D {
 >D : Symbol(D, Decl(twoAccessorsWithSameName.ts, 3, 1))
 
     set x(v) {  }
->x : Symbol(D.x, Decl(twoAccessorsWithSameName.ts, 5, 9))
+>x : Symbol(x, Decl(twoAccessorsWithSameName.ts, 5, 9))
 >v : Symbol(v, Decl(twoAccessorsWithSameName.ts, 6, 10))
 
     set x(v) {  } // error
->x : Symbol(D.x, Decl(twoAccessorsWithSameName.ts, 6, 17))
+>x : Symbol(x, Decl(twoAccessorsWithSameName.ts, 6, 17))
 >v : Symbol(v, Decl(twoAccessorsWithSameName.ts, 7, 10))
 }
 
@@= skipped -22, +22 lines =@@
 >E : Symbol(E, Decl(twoAccessorsWithSameName.ts, 8, 1))
 
     get x() {
->x : Symbol(E.x, Decl(twoAccessorsWithSameName.ts, 10, 9), Decl(twoAccessorsWithSameName.ts, 13, 5))
+>x : Symbol(x, Decl(twoAccessorsWithSameName.ts, 10, 9), Decl(twoAccessorsWithSameName.ts, 13, 5))
 
         return 1;
     }
     set x(v) { }
->x : Symbol(E.x, Decl(twoAccessorsWithSameName.ts, 10, 9), Decl(twoAccessorsWithSameName.ts, 13, 5))
+>x : Symbol(x, Decl(twoAccessorsWithSameName.ts, 10, 9), Decl(twoAccessorsWithSameName.ts, 13, 5))
 >v : Symbol(v, Decl(twoAccessorsWithSameName.ts, 14, 10))
 }
 
