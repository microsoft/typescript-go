--- old.generatorTypeCheck28.errors.txt
+++ new.generatorTypeCheck28.errors.txt
@@= skipped -0, +-1 lines =@@
-<no content>
@@= skipped --1, +1 lines =@@
+error TS2318: Cannot find global type 'Array'.
+error TS2318: Cannot find global type 'Function'.
+error TS2318: Cannot find global type 'IArguments'.
+error TS2318: Cannot find global type 'IterableIterator'.
+error TS2318: Cannot find global type 'RegExp'.
+error TS2318: Cannot find global type 'String'.
+error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
+error TS2552: Cannot find name 'Number'. Did you mean 'number'?
+error TS2552: Cannot find name 'Object'. Did you mean 'object'?
+generatorTypeCheck28.ts(1,16): error TS2304: Cannot find name 'IterableIterator'.
+generatorTypeCheck28.ts(2,13): error TS2488: Type '{ [x: number]: () => {}; }' must have a '[Symbol.iterator]()' method that returns an iterator.
+generatorTypeCheck28.ts(3,11): error TS2304: Cannot find name 'Symbol'.
+
+
+!!! error TS2318: Cannot find global type 'Array'.
+!!! error TS2318: Cannot find global type 'Function'.
+!!! error TS2318: Cannot find global type 'IArguments'.
+!!! error TS2318: Cannot find global type 'IterableIterator'.
+!!! error TS2318: Cannot find global type 'RegExp'.
+!!! error TS2318: Cannot find global type 'String'.
+!!! error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
+!!! error TS2552: Cannot find name 'Number'. Did you mean 'number'?
+!!! error TS2552: Cannot find name 'Object'. Did you mean 'object'?
+==== generatorTypeCheck28.ts (3 errors) ====
+    function* g(): IterableIterator<(x: string) => number> {
+                   ~~~~~~~~~~~~~~~~
+!!! error TS2304: Cannot find name 'IterableIterator'.
+        yield * {
+                ~
+            *[Symbol.iterator]() {
+    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+              ~~~~~~
+!!! error TS2304: Cannot find name 'Symbol'.
+                yield x => x.length;
+    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+            }
+    ~~~~~~~~~
+        };
+    ~~~~~
+!!! error TS2488: Type '{ [x: number]: () => {}; }' must have a '[Symbol.iterator]()' method that returns an iterator.
+    }
