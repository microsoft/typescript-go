--- old.nodeModulesDeclarationEmitDynamicImportWithPackageExports(module=nodenext).types
+++ new.nodeModulesDeclarationEmitDynamicImportWithPackageExports(module=nodenext).types
@@= skipped -14, +14 lines =@@
 === other.ts ===
 // esm format file
 export const a = await import("package/cjs");
->a : { default: typeof import("index"); }
->await import("package/cjs") : { default: typeof import("index"); }
->import("package/cjs") : Promise<{ default: typeof import("index"); }>
+>a : { default: typeof import("package/cjs"); }
+>await import("package/cjs") : { default: typeof import("package/cjs"); }
+>import("package/cjs") : Promise<{ default: typeof import("package/cjs"); }>
 >"package/cjs" : "package/cjs"

 export const b = await import("package/mjs");
->b : typeof import("index")
->await import("package/mjs") : typeof import("index")
->import("package/mjs") : Promise<typeof import("index")>
+>b : typeof import("package/mjs")
+>await import("package/mjs") : typeof import("package/mjs")
+>import("package/mjs") : Promise<typeof import("package/mjs")>
 >"package/mjs" : "package/mjs"

 export const c = await import("package");
->c : typeof import("index")
->await import("package") : typeof import("index")
->import("package") : Promise<typeof import("index")>
+>c : typeof import("package")
+>await import("package") : typeof import("package")
+>import("package") : Promise<typeof import("package")>
 >"package" : "package"

 export const f = await import("inner");
->f : { cjsMain: true; default: typeof import("node_modules/inner/index"); }
->await import("inner") : { cjsMain: true; default: typeof import("node_modules/inner/index"); }
->import("inner") : Promise<{ cjsMain: true; default: typeof import("node_modules/inner/index"); }>
+>f : { cjsMain: true; default: typeof import("inner"); }
+>await import("inner") : { cjsMain: true; default: typeof import("inner"); }
+>import("inner") : Promise<{ cjsMain: true; default: typeof import("inner"); }>
 >"inner" : "inner"

 === other2.ts ===
 // esm format file
 export const d = await import("inner/cjs");
->d : { cjsNonmain: true; default: typeof import("node_modules/inner/index"); }
->await import("inner/cjs") : { cjsNonmain: true; default: typeof import("node_modules/inner/index"); }
->import("inner/cjs") : Promise<{ cjsNonmain: true; default: typeof import("node_modules/inner/index"); }>
+>d : { cjsNonmain: true; default: typeof import("inner/cjs"); }
+>await import("inner/cjs") : { cjsNonmain: true; default: typeof import("inner/cjs"); }
+>import("inner/cjs") : Promise<{ cjsNonmain: true; default: typeof import("inner/cjs"); }>
 >"inner/cjs" : "inner/cjs"

 export const e = await import("inner/mjs");
->e : typeof import("node_modules/inner/index")
->await import("inner/mjs") : typeof import("node_modules/inner/index")
->import("inner/mjs") : Promise<typeof import("node_modules/inner/index")>
+>e : typeof import("inner/mjs")
+>await import("inner/mjs") : typeof import("inner/mjs")
+>import("inner/mjs") : Promise<typeof import("inner/mjs")>
 >"inner/mjs" : "inner/mjs"

 === other.mts ===
 // esm format file
 export const a = await import("package/cjs");
->a : { default: typeof import("index"); }
->await import("package/cjs") : { default: typeof import("index"); }
->import("package/cjs") : Promise<{ default: typeof import("index"); }>
+>a : { default: typeof import("package/cjs"); }
+>await import("package/cjs") : { default: typeof import("package/cjs"); }
+>import("package/cjs") : Promise<{ default: typeof import("package/cjs"); }>
 >"package/cjs" : "package/cjs"

 export const b = await import("package/mjs");
->b : typeof import("index")
->await import("package/mjs") : typeof import("index")
->import("package/mjs") : Promise<typeof import("index")>
+>b : typeof import("package/mjs")
+>await import("package/mjs") : typeof import("package/mjs")
+>import("package/mjs") : Promise<typeof import("package/mjs")>
 >"package/mjs" : "package/mjs"

 export const c = await import("package");
->c : typeof import("index")
->await import("package") : typeof import("index")
->import("package") : Promise<typeof import("index")>
+>c : typeof import("package")
+>await import("package") : typeof import("package")
+>import("package") : Promise<typeof import("package")>
 >"package" : "package"

 export const f = await import("inner");
->f : { cjsMain: true; default: typeof import("node_modules/inner/index"); }
->await import("inner") : { cjsMain: true; default: typeof import("node_modules/inner/index"); }
->import("inner") : Promise<{ cjsMain: true; default: typeof import("node_modules/inner/index"); }>
+>f : { cjsMain: true; default: typeof import("inner"); }
+>await import("inner") : { cjsMain: true; default: typeof import("inner"); }
+>import("inner") : Promise<{ cjsMain: true; default: typeof import("inner"); }>
 >"inner" : "inner"

 === other2.mts ===
 // esm format file
 export const d = await import("inner/cjs");
->d : { cjsNonmain: true; default: typeof import("node_modules/inner/index"); }
->await import("inner/cjs") : { cjsNonmain: true; default: typeof import("node_modules/inner/index"); }
->import("inner/cjs") : Promise<{ cjsNonmain: true; default: typeof import("node_modules/inner/index"); }>
+>d : { cjsNonmain: true; default: typeof import("inner/cjs"); }
+>await import("inner/cjs") : { cjsNonmain: true; default: typeof import("inner/cjs"); }
+>import("inner/cjs") : Promise<{ cjsNonmain: true; default: typeof import("inner/cjs"); }>
 >"inner/cjs" : "inner/cjs"

 export const e = await import("inner/mjs");
->e : typeof import("node_modules/inner/index")
->await import("inner/mjs") : typeof import("node_modules/inner/index")
->import("inner/mjs") : Promise<typeof import("node_modules/inner/index")>
+>e : typeof import("inner/mjs")
+>await import("inner/mjs") : typeof import("inner/mjs")
+>import("inner/mjs") : Promise<typeof import("inner/mjs")>
 >"inner/mjs" : "inner/mjs"

 === other.cts ===
 // cjs format file, no TLA
 export const a = import("package/cjs");
->a : Promise<{ default: typeof import("index"); }>
->import("package/cjs") : Promise<{ default: typeof import("index"); }>
+>a : Promise<{ default: typeof import("./index.cts"); }>
+>import("package/cjs") : Promise<{ default: typeof import("./index.cts"); }>
 >"package/cjs" : "package/cjs"

 export const b = import("package/mjs");
->b : Promise<typeof import("index", { with: { "resolution-mode": "import" } })>
->import("package/mjs") : Promise<typeof import("index", { with: { "resolution-mode": "import" } })>
+>b : Promise<typeof import("package/mjs", { with: { "resolution-mode": "import" } })>
+>import("package/mjs") : Promise<typeof import("package/mjs", { with: { "resolution-mode": "import" } })>
 >"package/mjs" : "package/mjs"

 export const c = import("package");
->c : Promise<typeof import("index", { with: { "resolution-mode": "import" } })>
->import("package") : Promise<typeof import("index", { with: { "resolution-mode": "import" } })>
+>c : Promise<typeof import("package", { with: { "resolution-mode": "import" } })>
+>import("package") : Promise<typeof import("package", { with: { "resolution-mode": "import" } })>
 >"package" : "package"

 export const f = import("inner");
->f : Promise<{ cjsMain: true; default: typeof import("node_modules/inner/index"); }>
->import("inner") : Promise<{ cjsMain: true; default: typeof import("node_modules/inner/index"); }>
+>f : Promise<{ cjsMain: true; default: typeof import("inner"); }>
+>import("inner") : Promise<{ cjsMain: true; default: typeof import("inner"); }>
 >"inner" : "inner"

 === other2.cts ===
 // cjs format file, no TLA
 export const d = import("inner/cjs");
->d : Promise<{ cjsNonmain: true; default: typeof import("node_modules/inner/index"); }>
->import("inner/cjs") : Promise<{ cjsNonmain: true; default: typeof import("node_modules/inner/index"); }>
+>d : Promise<{ cjsNonmain: true; default: typeof import("inner/cjs"); }>
+>import("inner/cjs") : Promise<{ cjsNonmain: true; default: typeof import("inner/cjs"); }>
 >"inner/cjs" : "inner/cjs"

 export const e = import("inner/mjs");
->e : Promise<typeof import("node_modules/inner/index", { with: { "resolution-mode": "import" } })>
->import("inner/mjs") : Promise<typeof import("node_modules/inner/index", { with: { "resolution-mode": "import" } })>
+>e : Promise<typeof import("inner/mjs", { with: { "resolution-mode": "import" } })>
+>import("inner/mjs") : Promise<typeof import("inner/mjs", { with: { "resolution-mode": "import" } })>
 >"inner/mjs" : "inner/mjs"

 === node_modules/inner/index.d.ts ===