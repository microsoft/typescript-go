--- old.controlFlowIIFE.types
+++ new.controlFlowIIFE.types
@@= skipped -13, +13 lines =@@
 
     if (typeof x === "string") {
 >typeof x === "string" : boolean
->typeof x : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof x : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >x : string | number
 >"string" : "string"
 
@@= skipped -28, +28 lines =@@
 
     if (typeof x === "string") {
 >typeof x === "string" : boolean
->typeof x : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof x : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >x : string | number
 >"string" : "string"
 
@@= skipped -32, +32 lines =@@
 
     if (typeof x === "string") {
 >typeof x === "string" : boolean
->typeof x : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof x : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >x : string | number
 >"string" : "string"
 
@@= skipped -72, +72 lines =@@
 
     test.slice(1); // No error
 >test.slice(1) : string
->test.slice : (start?: number, end?: number) => string
+>test.slice : (start?: number | undefined, end?: number | undefined) => string
 >test : string
->slice : (start?: number, end?: number) => string
+>slice : (start?: number | undefined, end?: number | undefined) => string
 >1 : 1
 
 })();
