--- old.catchClauseWithTypeAnnotation.symbols
+++ new.catchClauseWithTypeAnnotation.symbols
@@= skipped -43, +43 lines =@@
 
     try { } catch (x: unknown) { console.log(x); } // should be OK
 >x : Symbol(x, Decl(catchClauseWithTypeAnnotation.ts, 14, 19))
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >x : Symbol(x, Decl(catchClauseWithTypeAnnotation.ts, 14, 19))
 
     try { } catch (x: unknown1) { console.log(x); } // should be OK
 >x : Symbol(x, Decl(catchClauseWithTypeAnnotation.ts, 15, 19))
 >unknown1 : Symbol(unknown1, Decl(catchClauseWithTypeAnnotation.ts, 0, 16))
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >x : Symbol(x, Decl(catchClauseWithTypeAnnotation.ts, 15, 19))
 
     try { } catch (x: unknown) { x.foo; } // error in the body
@@= skipped -30, +30 lines =@@
 >x : Symbol(x, Decl(catchClauseWithTypeAnnotation.ts, 19, 19))
 
     try { console.log(); }
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 
     // @ts-ignore
     catch (e: number) { // e should not be a `number`
 >e : Symbol(e, Decl(catchClauseWithTypeAnnotation.ts, 23, 11))
 
         console.log(e.toLowerCase());
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >e : Symbol(e, Decl(catchClauseWithTypeAnnotation.ts, 23, 11))
     }
 
@@= skipped -42, +42 lines =@@
 
     try { } catch ({ x }: unknown) { console.log(x); } // error in the destructure
 >x : Symbol(x, Decl(catchClauseWithTypeAnnotation.ts, 35, 20))
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >x : Symbol(x, Decl(catchClauseWithTypeAnnotation.ts, 35, 20))
 
     try { } catch ({ x }: unknown1) { console.log(x); } // error in the destructure
 >x : Symbol(x, Decl(catchClauseWithTypeAnnotation.ts, 36, 20))
 >unknown1 : Symbol(unknown1, Decl(catchClauseWithTypeAnnotation.ts, 0, 16))
->console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >console : Symbol(console, Decl(lib.dom.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
+>log : Symbol(log, Decl(lib.dom.d.ts, --, --))
 >x : Symbol(x, Decl(catchClauseWithTypeAnnotation.ts, 36, 20))
 
     try { } catch ({ x }: object) { } // error in the type
