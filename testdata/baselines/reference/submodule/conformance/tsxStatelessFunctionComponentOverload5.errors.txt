error TS2318: Cannot find global type 'Array'.
error TS2318: Cannot find global type 'Function'.
error TS2318: Cannot find global type 'IArguments'.
error TS2318: Cannot find global type 'RegExp'.
error TS2318: Cannot find global type 'String'.
error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
error TS2552: Cannot find name 'Number'. Did you mean 'number'?
error TS2552: Cannot find name 'Object'. Did you mean 'object'?
file.tsx(1,24): error TS2307: Cannot find module 'react' or its corresponding type declarations.
file.tsx(35,55): error TS2503: Cannot find namespace 'JSX'.
file.tsx(36,51): error TS2503: Cannot find namespace 'JSX'.
file.tsx(37,55): error TS2503: Cannot find namespace 'JSX'.
file.tsx(38,75): error TS2503: Cannot find namespace 'JSX'.


!!! error TS2318: Cannot find global type 'Array'.
!!! error TS2318: Cannot find global type 'Function'.
!!! error TS2318: Cannot find global type 'IArguments'.
!!! error TS2318: Cannot find global type 'RegExp'.
!!! error TS2318: Cannot find global type 'String'.
!!! error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
!!! error TS2552: Cannot find name 'Number'. Did you mean 'number'?
!!! error TS2552: Cannot find name 'Object'. Did you mean 'object'?
==== file.tsx (5 errors) ====
    import React = require('react')
                           ~~~~~~~
!!! error TS2307: Cannot find module 'react' or its corresponding type declarations.
    
    export interface ClickableProps {
        children?: string;
        className?: string;
    }
    
    export interface ButtonProps extends ClickableProps {
        onClick: React.MouseEventHandler<any>;
    }
    
    export interface LinkProps extends ClickableProps {
        to: string;
    }
    
    export interface HyphenProps extends ClickableProps {
        "data-format": string;
    }
    
    let obj0 = {
        to: "world"
    };
    
    let obj1 = {
        children: "hi",
        to: "boo"
    }
    
    let obj2 = {
        onClick: ()=>{}
    }
    
    let obj3: any;
    
    export function MainButton(buttonProps: ButtonProps): JSX.Element;
                                                          ~~~
!!! error TS2503: Cannot find namespace 'JSX'.
    export function MainButton(linkProps: LinkProps): JSX.Element;
                                                      ~~~
!!! error TS2503: Cannot find namespace 'JSX'.
    export function MainButton(hyphenProps: HyphenProps): JSX.Element;
                                                          ~~~
!!! error TS2503: Cannot find namespace 'JSX'.
    export function MainButton(props: ButtonProps | LinkProps | HyphenProps): JSX.Element {
                                                                              ~~~
!!! error TS2503: Cannot find namespace 'JSX'.
        const linkProps = props as LinkProps;
        if(linkProps.to) {
            return this._buildMainLink(props);
        }
    
        return this._buildMainButton(props);
    }
    
    // Error
    const b0 = <MainButton to='/some/path' onClick={(e)=>{}}>GO</MainButton>;  // extra property;
    const b1 = <MainButton onClick={(e: any)=> {}} {...obj0}>Hello world</MainButton>;  // extra property;
    const b2 = <MainButton {...{to: "10000"}} {...obj2} />;  // extra property
    const b3 = <MainButton {...{to: "10000"}} {...{onClick: (k) => {}}} />;  // extra property
    const b4 = <MainButton {...obj3} to />;  // Should error because Incorrect type; but attributes are any so everything is allowed
    const b5 = <MainButton {...{ onClick(e: any) { } }} {...obj0} />;  // Spread retain method declaration (see GitHub #13365), so now there is an extra attributes
    const b6 = <MainButton {...{ onClick(e: any){} }} children={10} />;  // incorrect type for optional attribute
    const b7 = <MainButton {...{ onClick(e: any){} }} children="hello" className />;  // incorrect type for optional attribute
    const b8 = <MainButton data-format />;  // incorrect type for specified hyphanated name