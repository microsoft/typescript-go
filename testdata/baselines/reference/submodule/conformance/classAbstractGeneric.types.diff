--- old.classAbstractGeneric.types
+++ new.classAbstractGeneric.types
@@= skipped -2, +2 lines =@@
 === classAbstractGeneric.ts ===
 abstract class A<T> {
 >A : A<T>
+>T : T
 
     t: T;
 >t : T
@@= skipped -14, +15 lines =@@
 
 abstract class B<T> extends A<T> {}
 >B : B<T>
+>T : T
 >A : A<T>
 
 class C<T> extends A<T> {} // error -- inherits abstract methods
 >C : C<T>
+>T : T
 >A : A<T>
 
 class D extends A<number> {} // error -- inherits abstract methods
@@= skipped -12, +14 lines =@@
 
 class E<T> extends A<T> { // error -- doesn't implement bar
 >E : E<T>
+>T : T
 >A : A<T>
 
     foo() { return this.t; }
@@= skipped -11, +12 lines =@@
 
 class F<T> extends A<T> { // error -- doesn't implement foo
 >F : F<T>
+>T : T
 >A : A<T>
 
     bar(t : T) {}
@@= skipped -9, +10 lines =@@
 
 class G<T> extends A<T> {
 >G : G<T>
+>T : T
 >A : A<T>
 
     foo() { return this.t; }
