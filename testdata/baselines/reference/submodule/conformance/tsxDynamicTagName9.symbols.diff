--- old.tsxDynamicTagName9.symbols
+++ new.tsxDynamicTagName9.symbols
@@= skipped -1, +1 lines =@@
 
 === react.d.ts ===
 declare module 'react' {
->'react' : Symbol("react", Decl(react.d.ts, 0, 0))
+>'react' : Symbol('react', Decl(react.d.ts, 0, 0))
 
 	class Component<T, U> { }
 >Component : Symbol(Component, Decl(react.d.ts, 0, 24))
@@= skipped -14, +14 lines =@@
 
 export class Text extends React.Component<{}, {}> {
 >Text : Symbol(Text, Decl(app.tsx, 0, 31))
->React.Component : Symbol(React.Component, Decl(react.d.ts, 0, 24))
+>React.Component : Symbol(Component, Decl(react.d.ts, 0, 24))
 >React : Symbol(React, Decl(app.tsx, 0, 6))
->Component : Symbol(React.Component, Decl(react.d.ts, 0, 24))
+>Component : Symbol(Component, Decl(react.d.ts, 0, 24))
 
   _tagName: "div" = 'div';
->_tagName : Symbol(Text._tagName, Decl(app.tsx, 2, 51))
+>_tagName : Symbol(_tagName, Decl(app.tsx, 2, 51))
 
   render() {
->render : Symbol(Text.render, Decl(app.tsx, 3, 26))
+>render : Symbol(render, Decl(app.tsx, 3, 26))
 
     return (
       <this._tagName> Hello world </this._tagName>
->this._tagName : Symbol(Text._tagName, Decl(app.tsx, 2, 51))
+>this._tagName : Symbol(_tagName, Decl(app.tsx, 2, 51))
 >this : Symbol(Text, Decl(app.tsx, 0, 31))
->_tagName : Symbol(Text._tagName, Decl(app.tsx, 2, 51))
->this._tagName : Symbol(Text._tagName, Decl(app.tsx, 2, 51))
+>_tagName : Symbol(_tagName, Decl(app.tsx, 2, 51))
+>this._tagName : Symbol(_tagName, Decl(app.tsx, 2, 51))
 >this : Symbol(Text, Decl(app.tsx, 0, 31))
->_tagName : Symbol(Text._tagName, Decl(app.tsx, 2, 51))
+>_tagName : Symbol(_tagName, Decl(app.tsx, 2, 51))
 
     );
   }
