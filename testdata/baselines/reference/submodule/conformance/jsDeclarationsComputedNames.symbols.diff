--- old.jsDeclarationsComputedNames.symbols
+++ new.jsDeclarationsComputedNames.symbols
@@ -3,17 +3,11 @@
 === index.js ===
 const TopLevelSym = Symbol();
 >TopLevelSym : Symbol(TopLevelSym, Decl(index.js, 0, 5))
->Symbol : Symbol(Symbol, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
 
 const InnerSym = Symbol();
 >InnerSym : Symbol(InnerSym, Decl(index.js, 1, 5))
->Symbol : Symbol(Symbol, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
 
 module.exports = {
->module.exports : Symbol(module.exports, Decl(index.js, 0, 0))
->module : Symbol(export=, Decl(index.js, 1, 26))
->exports : Symbol(export=, Decl(index.js, 1, 26))
-
     [TopLevelSym](x = 12) {
 >[TopLevelSym] : Symbol([TopLevelSym], Decl(index.js, 2, 18))
 >TopLevelSym : Symbol(TopLevelSym, Decl(index.js, 0, 5))
@@ -40,21 +34,19 @@
 === index2.js ===
 const TopLevelSym = Symbol();
 >TopLevelSym : Symbol(TopLevelSym, Decl(index2.js, 0, 5))
->Symbol : Symbol(Symbol, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
 
 const InnerSym = Symbol();
 >InnerSym : Symbol(InnerSym, Decl(index2.js, 1, 5))
->Symbol : Symbol(Symbol, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
 
 export class MyClass {
 >MyClass : Symbol(MyClass, Decl(index2.js, 1, 26))
 
     static [TopLevelSym] = 12;
->[TopLevelSym] : Symbol(MyClass[TopLevelSym], Decl(index2.js, 3, 22))
+>[TopLevelSym] : Symbol([TopLevelSym], Decl(index2.js, 3, 22))
 >TopLevelSym : Symbol(TopLevelSym, Decl(index2.js, 0, 5))
 
     [InnerSym] = "ok";
->[InnerSym] : Symbol(MyClass[InnerSym], Decl(index2.js, 4, 30))
+>[InnerSym] : Symbol([InnerSym], Decl(index2.js, 4, 30))
 >InnerSym : Symbol(InnerSym, Decl(index2.js, 1, 5))
 
     /**
