--- old.jsDeclarationsComputedNames.symbols
+++ new.jsDeclarationsComputedNames.symbols
@@= skipped -9, +9 lines =@@
 >Symbol : Symbol(Symbol, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
 
 module.exports = {
->module.exports : Symbol(module.exports, Decl(index.js, 0, 0))
->module : Symbol(export=, Decl(index.js, 1, 26))
->exports : Symbol(export=, Decl(index.js, 1, 26))
-
     [TopLevelSym](x = 12) {
 >[TopLevelSym] : Symbol([TopLevelSym], Decl(index.js, 2, 18))
 >TopLevelSym : Symbol(TopLevelSym, Decl(index.js, 0, 5))
@@= skipped -24, +20 lines =@@
 >arg.x : Symbol(x, Decl(index.js, 7, 28))
 >arg : Symbol(arg, Decl(index.js, 7, 21))
 >x : Symbol(x, Decl(index.js, 7, 28))
+>[InnerSym] : Symbol([InnerSym], Decl(index.js, 6, 12))
+>InnerSym : Symbol(InnerSym, Decl(index.js, 1, 5))
+>arg : Symbol(arg, Decl(index.js, 7, 21))
+>x : Symbol(x, Decl(index.js, 7, 28))
+>arg.x : Symbol(x, Decl(index.js, 7, 28))
+>arg : Symbol(arg, Decl(index.js, 7, 21))
+>x : Symbol(x, Decl(index.js, 7, 28))
     }
 }
 
@@= skipped -16, +23 lines =@@
 >MyClass : Symbol(MyClass, Decl(index2.js, 1, 26))
 
     static [TopLevelSym] = 12;
->[TopLevelSym] : Symbol(MyClass[TopLevelSym], Decl(index2.js, 3, 22))
+>[TopLevelSym] : Symbol([TopLevelSym], Decl(index2.js, 3, 22))
 >TopLevelSym : Symbol(TopLevelSym, Decl(index2.js, 0, 5))
 
     [InnerSym] = "ok";
->[InnerSym] : Symbol(MyClass[InnerSym], Decl(index2.js, 4, 30))
+>[InnerSym] : Symbol([InnerSym], Decl(index2.js, 4, 30))
 >InnerSym : Symbol(InnerSym, Decl(index2.js, 1, 5))
 
     /**
