--- old.importMetaNarrowing(module=esnext).symbols
+++ new.importMetaNarrowing(module=esnext).symbols
@@= skipped -3, +3 lines =@@
 declare global { interface ImportMeta {foo?: () => void} };
 >global : Symbol(global, Decl(importMetaNarrowing.ts, 0, 0))
 >ImportMeta : Symbol(ImportMeta, Decl(lib.es5.d.ts, --, --), Decl(lib.dom.d.ts, --, --), Decl(importMetaNarrowing.ts, 0, 16))
->foo : Symbol(ImportMeta.foo, Decl(importMetaNarrowing.ts, 0, 39))
+>foo : Symbol(foo, Decl(importMetaNarrowing.ts, 0, 39))

 if (import.meta.foo) {
->import.meta.foo : Symbol(ImportMeta.foo, Decl(importMetaNarrowing.ts, 0, 39))
+>import.meta.foo : Symbol(foo, Decl(importMetaNarrowing.ts, 0, 39))
 >import.meta : Symbol(ImportMeta, Decl(lib.es5.d.ts, --, --), Decl(lib.dom.d.ts, --, --), Decl(importMetaNarrowing.ts, 0, 16))
->meta : Symbol(ImportMetaExpression.meta)
->foo : Symbol(ImportMeta.foo, Decl(importMetaNarrowing.ts, 0, 39))
+>meta : Symbol(meta)
+>foo : Symbol(foo, Decl(importMetaNarrowing.ts, 0, 39))

   import.meta.foo();
->import.meta.foo : Symbol(ImportMeta.foo, Decl(importMetaNarrowing.ts, 0, 39))
+>import.meta.foo : Symbol(foo, Decl(importMetaNarrowing.ts, 0, 39))
 >import.meta : Symbol(ImportMeta, Decl(lib.es5.d.ts, --, --), Decl(lib.dom.d.ts, --, --), Decl(importMetaNarrowing.ts, 0, 16))
->meta : Symbol(ImportMetaExpression.meta)
->foo : Symbol(ImportMeta.foo, Decl(importMetaNarrowing.ts, 0, 39))
+>meta : Symbol(meta)
+>foo : Symbol(foo, Decl(importMetaNarrowing.ts, 0, 39))
 }
