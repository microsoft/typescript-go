--- old.parserRealSource14.errors.txt
+++ new.parserRealSource14.errors.txt
@@= skipped -0, +0 lines =@@
-parserRealSource14.ts(4,21): error TS6053: File 'typescript.ts' not found.
 parserRealSource14.ts(24,33): error TS2694: Namespace 'TypeScript' has no exported member 'AST'.
 parserRealSource14.ts(38,34): error TS2694: Namespace 'TypeScript' has no exported member 'AST'.
 parserRealSource14.ts(48,37): error TS2694: Namespace 'TypeScript' has no exported member 'AST'.
 parserRealSource14.ts(68,39): error TS2694: Namespace 'TypeScript' has no exported member 'NodeType'.
-parserRealSource14.ts(70,35): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(70,35): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(75,32): error TS2694: Namespace 'TypeScript' has no exported member 'AST'.
 parserRealSource14.ts(79,32): error TS2694: Namespace 'TypeScript' has no exported member 'AST'.
 parserRealSource14.ts(86,47): error TS2694: Namespace 'TypeScript' has no exported member 'AST'.
-parserRealSource14.ts(94,56): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(95,56): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(94,56): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(95,56): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(96,31): error TS2694: Namespace 'TypeScript' has no exported member 'InterfaceDeclaration'.
-parserRealSource14.ts(103,56): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(104,56): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(103,56): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(104,56): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(105,31): error TS2694: Namespace 'TypeScript' has no exported member 'InterfaceDeclaration'.
-parserRealSource14.ts(112,56): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(113,56): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(112,56): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(113,56): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(114,31): error TS2694: Namespace 'TypeScript' has no exported member 'ArgDecl'.
-parserRealSource14.ts(121,56): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(122,56): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(121,56): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(122,56): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(123,31): error TS2694: Namespace 'TypeScript' has no exported member 'VarDecl'.
-parserRealSource14.ts(130,56): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(131,56): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(130,56): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(131,56): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(132,31): error TS2694: Namespace 'TypeScript' has no exported member 'ModuleDeclaration'.
-parserRealSource14.ts(139,56): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(140,56): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(139,56): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(140,56): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(141,31): error TS2694: Namespace 'TypeScript' has no exported member 'FuncDecl'.
-parserRealSource14.ts(148,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(149,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(156,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(157,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(164,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(165,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(172,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(173,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(174,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(175,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(148,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(149,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(156,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(157,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(164,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(165,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(172,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(173,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(174,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(175,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(176,31): error TS2694: Namespace 'TypeScript' has no exported member 'FuncDecl'.
 parserRealSource14.ts(177,31): error TS2694: Namespace 'TypeScript' has no exported member 'FuncDecl'.
 parserRealSource14.ts(178,31): error TS2694: Namespace 'TypeScript' has no exported member 'ClassDeclaration'.
-parserRealSource14.ts(185,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(186,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(191,61): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(192,28): error TS2339: Property 'hasFlag' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(185,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(186,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(191,61): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(192,28): error TS2339: Property 'hasFlag' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(192,49): error TS2694: Namespace 'TypeScript' has no exported member 'ModuleDeclaration'.
-parserRealSource14.ts(192,109): error TS2339: Property 'ModuleFlags' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(197,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(198,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(192,109): error TS2339: Property 'ModuleFlags' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(197,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(198,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(199,31): error TS2694: Namespace 'TypeScript' has no exported member 'ModuleDeclaration'.
-parserRealSource14.ts(200,28): error TS2339: Property 'hasFlag' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(200,28): error TS2339: Property 'hasFlag' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(200,49): error TS2694: Namespace 'TypeScript' has no exported member 'ModuleDeclaration'.
-parserRealSource14.ts(200,113): error TS2339: Property 'ModuleFlags' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(205,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(200,113): error TS2339: Property 'ModuleFlags' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(205,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(206,31): error TS2694: Namespace 'TypeScript' has no exported member 'Script'.
-parserRealSource14.ts(211,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(211,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(212,31): error TS2694: Namespace 'TypeScript' has no exported member 'SwitchStatement'.
-parserRealSource14.ts(217,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(217,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(218,31): error TS2694: Namespace 'TypeScript' has no exported member 'ModuleDeclaration'.
-parserRealSource14.ts(223,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(223,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(224,31): error TS2694: Namespace 'TypeScript' has no exported member 'ClassDeclaration'.
-parserRealSource14.ts(229,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(229,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(230,31): error TS2694: Namespace 'TypeScript' has no exported member 'FuncDecl'.
-parserRealSource14.ts(235,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(235,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(236,31): error TS2694: Namespace 'TypeScript' has no exported member 'InterfaceDeclaration'.
-parserRealSource14.ts(241,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(241,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(242,30): error TS2694: Namespace 'TypeScript' has no exported member 'Block'.
-parserRealSource14.ts(247,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(247,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(248,30): error TS2694: Namespace 'TypeScript' has no exported member 'ForStatement'.
-parserRealSource14.ts(253,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(253,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(254,30): error TS2694: Namespace 'TypeScript' has no exported member 'CaseStatement'.
-parserRealSource14.ts(259,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(259,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(260,30): error TS2694: Namespace 'TypeScript' has no exported member 'Try'.
-parserRealSource14.ts(265,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(265,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(266,30): error TS2694: Namespace 'TypeScript' has no exported member 'Catch'.
-parserRealSource14.ts(271,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(271,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(272,30): error TS2694: Namespace 'TypeScript' has no exported member 'DoWhileStatement'.
-parserRealSource14.ts(277,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(277,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(278,30): error TS2694: Namespace 'TypeScript' has no exported member 'WhileStatement'.
-parserRealSource14.ts(283,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(283,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(284,30): error TS2694: Namespace 'TypeScript' has no exported member 'ForInStatement'.
-parserRealSource14.ts(289,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(289,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(290,30): error TS2694: Namespace 'TypeScript' has no exported member 'WithStatement'.
-parserRealSource14.ts(295,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(295,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(296,30): error TS2694: Namespace 'TypeScript' has no exported member 'Finally'.
-parserRealSource14.ts(301,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(302,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(301,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(302,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(303,30): error TS2694: Namespace 'TypeScript' has no exported member 'SwitchStatement'.
-parserRealSource14.ts(308,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(309,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(308,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(309,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(310,30): error TS2694: Namespace 'TypeScript' has no exported member 'SwitchStatement'.
 parserRealSource14.ts(311,30): error TS2694: Namespace 'TypeScript' has no exported member 'SwitchStatement'.
-parserRealSource14.ts(316,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(317,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(316,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(317,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(318,30): error TS2694: Namespace 'TypeScript' has no exported member 'UnaryExpression'.
-parserRealSource14.ts(327,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(328,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(327,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(328,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(329,30): error TS2694: Namespace 'TypeScript' has no exported member 'UnaryExpression'.
 parserRealSource14.ts(330,30): error TS2694: Namespace 'TypeScript' has no exported member 'ASTList'.
-parserRealSource14.ts(335,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(336,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(337,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(335,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(336,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(337,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(338,30): error TS2694: Namespace 'TypeScript' has no exported member 'UnaryExpression'.
-parserRealSource14.ts(343,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(344,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(345,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(346,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(343,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(344,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(345,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(346,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(347,30): error TS2694: Namespace 'TypeScript' has no exported member 'UnaryExpression'.
-parserRealSource14.ts(352,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(353,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(352,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(353,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(354,30): error TS2694: Namespace 'TypeScript' has no exported member 'UnaryExpression'.
-parserRealSource14.ts(359,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(359,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(360,30): error TS2694: Namespace 'TypeScript' has no exported member 'BinaryExpression'.
-parserRealSource14.ts(365,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(365,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(366,30): error TS2694: Namespace 'TypeScript' has no exported member 'BinaryExpression'.
-parserRealSource14.ts(371,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(377,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(371,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(377,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(378,30): error TS2694: Namespace 'TypeScript' has no exported member 'IfStatement'.
-parserRealSource14.ts(383,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(383,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(384,30): error TS2694: Namespace 'TypeScript' has no exported member 'IfStatement'.
-parserRealSource14.ts(393,61): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(393,61): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(394,30): error TS2694: Namespace 'TypeScript' has no exported member 'ASTList'.
-parserRealSource14.ts(399,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(400,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(399,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(400,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(401,30): error TS2694: Namespace 'TypeScript' has no exported member 'FuncDecl'.
-parserRealSource14.ts(406,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(407,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(406,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(407,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(408,30): error TS2694: Namespace 'TypeScript' has no exported member 'FuncDecl'.
-parserRealSource14.ts(413,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(414,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(413,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(414,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(415,30): error TS2694: Namespace 'TypeScript' has no exported member 'CallExpression'.
-parserRealSource14.ts(420,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
-parserRealSource14.ts(421,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(420,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
+parserRealSource14.ts(421,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(422,30): error TS2694: Namespace 'TypeScript' has no exported member 'CallExpression'.
-parserRealSource14.ts(427,65): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(427,65): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(428,30): error TS2694: Namespace 'TypeScript' has no exported member 'Block'.
 parserRealSource14.ts(432,52): error TS2694: Namespace 'TypeScript' has no exported member 'ASTSpan'.
 parserRealSource14.ts(462,61): error TS2694: Namespace 'TypeScript' has no exported member 'AST'.
@@= skipped -139, +138 lines =@@
 parserRealSource14.ts(478,69): error TS2694: Namespace 'TypeScript' has no exported member 'AST'.
 parserRealSource14.ts(478,82): error TS2304: Cannot find name 'IAstWalker'.
 parserRealSource14.ts(489,21): error TS2304: Cannot find name 'hasFlag'.
-parserRealSource14.ts(490,49): error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(490,49): error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(516,22): error TS2304: Cannot find name 'hasFlag'.
-parserRealSource14.ts(525,20): error TS2339: Property 'getAstWalkerFactory' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(525,20): error TS2339: Property 'getAstWalkerFactory' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(533,62): error TS2694: Namespace 'TypeScript' has no exported member 'Script'.
 parserRealSource14.ts(535,36): error TS2694: Namespace 'TypeScript' has no exported member 'AST'.
 parserRealSource14.ts(535,60): error TS2694: Namespace 'TypeScript' has no exported member 'AST'.
 parserRealSource14.ts(535,84): error TS2694: Namespace 'TypeScript' has no exported member 'IAstWalker'.
 parserRealSource14.ts(535,108): error TS2694: Namespace 'TypeScript' has no exported member 'AST'.
-parserRealSource14.ts(551,20): error TS2339: Property 'getAstWalkerFactory' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(551,20): error TS2339: Property 'getAstWalkerFactory' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 parserRealSource14.ts(558,45): error TS2694: Namespace 'TypeScript' has no exported member 'AST'.
 parserRealSource14.ts(558,95): error TS2694: Namespace 'TypeScript' has no exported member 'IAstWalker'.
 parserRealSource14.ts(559,45): error TS2694: Namespace 'TypeScript' has no exported member 'AST'.
@@= skipped -17, +17 lines =@@
 parserRealSource14.ts(565,46): error TS2694: Namespace 'TypeScript' has no exported member 'AST'.
 parserRealSource14.ts(565,70): error TS2694: Namespace 'TypeScript' has no exported member 'AST'.
 parserRealSource14.ts(565,94): error TS2694: Namespace 'TypeScript' has no exported member 'IAstWalker'.
-parserRealSource14.ts(572,20): error TS2339: Property 'getAstWalkerFactory' does not exist on type 'typeof TypeScript'.
+parserRealSource14.ts(572,20): error TS2339: Property 'getAstWalkerFactory' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
 
 
-==== parserRealSource14.ts (160 errors) ====
+==== parserRealSource14.ts (159 errors) ====
     // Copyright (c) Microsoft. All rights reserved. Licensed under the Apache License, Version 2.0. 
     // See LICENSE.txt in the project root for complete license information.
     
     ///<reference path='typescript.ts' />
-                        ~~~~~~~~~~~~~
-!!! error TS6053: File 'typescript.ts' not found.
     
     module TypeScript {
         export function lastOf(items: any[]): any {
@@= skipped -85, +83 lines =@@
                 if (this.ast() == null)
                     return TypeScript.NodeType.None;
                                       ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                 return this.ast().nodeType;
             }
     
@@= skipped -32, +32 lines =@@
     
                 return (this.ast().nodeType === TypeScript.NodeType.Name) &&
                                                            ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (this.parent().nodeType === TypeScript.NodeType.ClassDeclaration) &&
                                                            ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     ((<TypeScript.InterfaceDeclaration>this.parent()).name === this.ast());
                                   ~~~~~~~~~~~~~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'InterfaceDeclaration'.
@@= skipped -15, +15 lines =@@
     
                 return (this.ast().nodeType === TypeScript.NodeType.Name) &&
                                                            ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (this.parent().nodeType === TypeScript.NodeType.InterfaceDeclaration) &&
                                                            ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     ((<TypeScript.InterfaceDeclaration>this.parent()).name === this.ast());
                                   ~~~~~~~~~~~~~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'InterfaceDeclaration'.
@@= skipped -15, +15 lines =@@
     
                 return (this.ast().nodeType === TypeScript.NodeType.Name) &&
                                                            ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (this.parent().nodeType === TypeScript.NodeType.ArgDecl) &&
                                                            ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     ((<TypeScript.ArgDecl>this.parent()).id === this.ast());
                                   ~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'ArgDecl'.
@@= skipped -15, +15 lines =@@
     
                 return (this.ast().nodeType === TypeScript.NodeType.Name) &&
                                                            ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (this.parent().nodeType === TypeScript.NodeType.VarDecl) &&
                                                            ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     ((<TypeScript.VarDecl>this.parent()).id === this.ast());
                                   ~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'VarDecl'.
@@= skipped -15, +15 lines =@@
     
                 return (this.ast().nodeType === TypeScript.NodeType.Name) &&
                                                            ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (this.parent().nodeType === TypeScript.NodeType.ModuleDeclaration) &&
                                                            ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     ((<TypeScript.ModuleDeclaration>this.parent()).name === this.ast());
                                   ~~~~~~~~~~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'ModuleDeclaration'.
@@= skipped -15, +15 lines =@@
     
                 return (this.ast().nodeType === TypeScript.NodeType.Name) &&
                                                            ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (this.parent().nodeType === TypeScript.NodeType.FuncDecl) &&
                                                            ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     ((<TypeScript.FuncDecl>this.parent()).name === this.ast());
                                   ~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'FuncDecl'.
@@= skipped -15, +15 lines =@@
                     this.asts[this.top] === ast &&
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.List &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     this.asts[this.top - 2].nodeType === TypeScript.NodeType.Script;
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
             }
     
             public isChildOfModule(): boolean {
@@= skipped -12, +12 lines =@@
                     this.asts[this.top] === ast &&
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.List &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     this.asts[this.top - 2].nodeType === TypeScript.NodeType.ModuleDeclaration;
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
             }
     
             public isChildOfClass(): boolean {
@@= skipped -12, +12 lines =@@
                     this.asts[this.top] === ast &&
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.List &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     this.asts[this.top - 2].nodeType === TypeScript.NodeType.ClassDeclaration;
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
             }
     
             public isArgumentOfClassConstructor(): boolean {
@@= skipped -12, +12 lines =@@
                     this.asts[this.top] === ast &&
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.List &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     this.asts[this.top - 2].nodeType === TypeScript.NodeType.FuncDecl &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     this.asts[this.top - 3].nodeType === TypeScript.NodeType.List &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     this.asts[this.top - 4].nodeType === TypeScript.NodeType.ClassDeclaration &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     ((<TypeScript.FuncDecl>this.asts[this.top - 2]).isConstructor) &&
                                   ~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'FuncDecl'.
@@= skipped -27, +27 lines =@@
                     this.asts[this.top] === ast &&
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.List &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     this.asts[this.top - 2].nodeType === TypeScript.NodeType.InterfaceDeclaration;
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
             }
     
             public isTopLevelImplicitModule() {
                 return this.count() >= 1 &&
                     this.asts[this.top].nodeType === TypeScript.NodeType.ModuleDeclaration &&
                                                                 ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     TypeScript.hasFlag((<TypeScript.ModuleDeclaration>this.asts[this.top]).modFlags, TypeScript.ModuleFlags.IsWholeFile);
                                ~~~~~~~
-!!! error TS2339: Property 'hasFlag' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'hasFlag' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                                                     ~~~~~~~~~~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'ModuleDeclaration'.
                                                                                                                 ~~~~~~~~~~~
-!!! error TS2339: Property 'ModuleFlags' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'ModuleFlags' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
             }
     
             public isBodyOfTopLevelImplicitModule() {
                 return this.count() >= 2 &&
                     this.asts[this.top - 0].nodeType === TypeScript.NodeType.List &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.ModuleDeclaration &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                      (<TypeScript.ModuleDeclaration>this.asts[this.top - 1]).members == this.asts[this.top - 0] &&
                                   ~~~~~~~~~~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'ModuleDeclaration'.
                     TypeScript.hasFlag((<TypeScript.ModuleDeclaration>this.asts[this.top - 1]).modFlags, TypeScript.ModuleFlags.IsWholeFile);
                                ~~~~~~~
-!!! error TS2339: Property 'hasFlag' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'hasFlag' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                                                     ~~~~~~~~~~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'ModuleDeclaration'.
                                                                                                                     ~~~~~~~~~~~
-!!! error TS2339: Property 'ModuleFlags' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'ModuleFlags' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
             }
     
             public isBodyOfScript(): boolean {
                 return this.count() >= 2 &&
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.Script &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                      (<TypeScript.Script>this.asts[this.top - 1]).bod == this.asts[this.top - 0];
                                   ~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'Script'.
@@= skipped -54, +54 lines =@@
                 return this.count() >= 2 &&
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.Switch &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                      (<TypeScript.SwitchStatement>this.asts[this.top - 1]).caseList == this.asts[this.top - 0];
                                   ~~~~~~~~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'SwitchStatement'.
@@= skipped -10, +10 lines =@@
                 return this.count() >= 2 &&
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.ModuleDeclaration &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                      (<TypeScript.ModuleDeclaration>this.asts[this.top - 1]).members == this.asts[this.top - 0];
                                   ~~~~~~~~~~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'ModuleDeclaration'.
@@= skipped -10, +10 lines =@@
                 return this.count() >= 2 &&
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.ClassDeclaration &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                      (<TypeScript.ClassDeclaration>this.asts[this.top - 1]).members == this.asts[this.top - 0];
                                   ~~~~~~~~~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'ClassDeclaration'.
@@= skipped -10, +10 lines =@@
                 return this.count() >= 2 &&
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.FuncDecl &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                      (<TypeScript.FuncDecl>this.asts[this.top - 1]).bod == this.asts[this.top - 0];
                                   ~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'FuncDecl'.
@@= skipped -10, +10 lines =@@
                 return this.count() >= 2 &&
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.InterfaceDeclaration &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                      (<TypeScript.InterfaceDeclaration>this.asts[this.top - 1]).members == this.asts[this.top - 0];
                                   ~~~~~~~~~~~~~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'InterfaceDeclaration'.
@@= skipped -10, +10 lines =@@
                 return this.count() >= 2 &&
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.Block &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (<TypeScript.Block>this.asts[this.top - 1]).statements == this.asts[this.top - 0];
                                  ~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'Block'.
@@= skipped -10, +10 lines =@@
                 return this.count() >= 2 &&
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.For &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (<TypeScript.ForStatement>this.asts[this.top - 1]).body == this.asts[this.top - 0];
                                  ~~~~~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'ForStatement'.
@@= skipped -10, +10 lines =@@
                 return this.count() >= 2 &&
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.Case &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (<TypeScript.CaseStatement>this.asts[this.top - 1]).body == this.asts[this.top - 0];
                                  ~~~~~~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'CaseStatement'.
@@= skipped -10, +10 lines =@@
                 return this.count() >= 2 &&
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.Try &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (<TypeScript.Try>this.asts[this.top - 1]).body == this.asts[this.top - 0];
                                  ~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'Try'.
@@= skipped -10, +10 lines =@@
                 return this.count() >= 2 &&
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.Catch &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (<TypeScript.Catch>this.asts[this.top - 1]).body == this.asts[this.top - 0];
                                  ~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'Catch'.
@@= skipped -10, +10 lines =@@
                 return this.count() >= 2 &&
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.DoWhile &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (<TypeScript.DoWhileStatement>this.asts[this.top - 1]).body == this.asts[this.top - 0];
                                  ~~~~~~~~~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'DoWhileStatement'.
@@= skipped -10, +10 lines =@@
                 return this.count() >= 2 &&
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.While &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (<TypeScript.WhileStatement>this.asts[this.top - 1]).body == this.asts[this.top - 0];
                                  ~~~~~~~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'WhileStatement'.
@@= skipped -10, +10 lines =@@
                 return this.count() >= 2 &&
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.ForIn &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (<TypeScript.ForInStatement>this.asts[this.top - 1]).body == this.asts[this.top - 0];
                                  ~~~~~~~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'ForInStatement'.
@@= skipped -10, +10 lines =@@
                 return this.count() >= 2 &&
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.With &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (<TypeScript.WithStatement>this.asts[this.top - 1]).body == this.asts[this.top - 0];
                                  ~~~~~~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'WithStatement'.
@@= skipped -10, +10 lines =@@
                 return this.count() >= 2 &&
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.Finally &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (<TypeScript.Finally>this.asts[this.top - 1]).body == this.asts[this.top - 0];
                                  ~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'Finally'.
@@= skipped -10, +10 lines =@@
                 return this.count() >= 3 &&
                     this.asts[this.top - 2].nodeType === TypeScript.NodeType.Switch &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.List &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (<TypeScript.SwitchStatement>this.asts[this.top - 2]).caseList == this.asts[this.top - 1];
                                  ~~~~~~~~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'SwitchStatement'.
@@= skipped -13, +13 lines =@@
                 return this.count() >= 3 &&
                     this.asts[this.top - 2].nodeType === TypeScript.NodeType.Switch &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.List &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (<TypeScript.SwitchStatement>this.asts[this.top - 2]).caseList == this.asts[this.top - 1] &&
                                  ~~~~~~~~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'SwitchStatement'.
@@= skipped -16, +16 lines =@@
                 return this.count() >= 2 &&
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.ObjectLit &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     this.asts[this.top - 0].nodeType === TypeScript.NodeType.List &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (<TypeScript.UnaryExpression>this.asts[this.top - 1]).operand == this.asts[this.top - 0];
                                  ~~~~~~~~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'UnaryExpression'.
@@= skipped -17, +17 lines =@@
                 return this.count() >= 2 &&
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.ObjectLit &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     this.asts[this.top - 0].nodeType === TypeScript.NodeType.List &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (<TypeScript.UnaryExpression>this.asts[this.top - 1]).operand == this.asts[this.top - 0] &&
                                  ~~~~~~~~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'UnaryExpression'.
@@= skipped -16, +16 lines =@@
                 return this.count() >= 3 &&
                     this.asts[this.top - 2].nodeType === TypeScript.NodeType.ObjectLit &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.List &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     this.asts[this.top - 0].nodeType === TypeScript.NodeType.Member &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (<TypeScript.UnaryExpression>this.asts[this.top - 2]).operand == this.asts[this.top - 1];
                                  ~~~~~~~~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'UnaryExpression'.
@@= skipped -16, +16 lines =@@
                 return this.count() >= 4 &&
                     this.asts[this.top - 3].nodeType === TypeScript.NodeType.ObjectLit &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     this.asts[this.top - 2].nodeType === TypeScript.NodeType.List &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.Member &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     this.asts[this.top - 0].nodeType === TypeScript.NodeType.Name &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (<TypeScript.UnaryExpression>this.asts[this.top - 3]).operand == this.asts[this.top - 2];
                                  ~~~~~~~~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'UnaryExpression'.
@@= skipped -19, +19 lines =@@
                 return this.count() >= 2 &&
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.ArrayLit &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     this.asts[this.top - 0].nodeType === TypeScript.NodeType.List &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (<TypeScript.UnaryExpression>this.asts[this.top - 1]).operand == this.asts[this.top - 0];
                                  ~~~~~~~~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'UnaryExpression'.
@@= skipped -13, +13 lines =@@
                 return this.count() >= 2 &&
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.Member &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (<TypeScript.BinaryExpression>this.asts[this.top - 1]).operand1 === this.asts[this.top - 0];
                                  ~~~~~~~~~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'BinaryExpression'.
@@= skipped -10, +10 lines =@@
                 return this.count() >= 2 &&
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.Member &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (<TypeScript.BinaryExpression>this.asts[this.top - 1]).operand2 === this.asts[this.top - 0];
                                  ~~~~~~~~~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'BinaryExpression'.
@@= skipped -10, +10 lines =@@
                 return this.count() >= 2 &&
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.List;
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                 //(<Tools.ASTList>this.asts[this.top - 1]).operand2 === this.asts[this.top - 0];
             }
     
@@= skipped -8, +8 lines =@@
                 return this.count() >= 2 &&
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.If &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (<TypeScript.IfStatement>this.asts[this.top - 1]).thenBod == this.asts[this.top - 0];
                                  ~~~~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'IfStatement'.
@@= skipped -10, +10 lines =@@
                 return this.count() >= 2 &&
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.If &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (<TypeScript.IfStatement>this.asts[this.top - 1]).elseBod == this.asts[this.top - 0];
                                  ~~~~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'IfStatement'.
@@= skipped -14, +14 lines =@@
                 return this.count() >= 1 &&
                     this.asts[this.top].nodeType === TypeScript.NodeType.List &&
                                                                 ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (<TypeScript.ASTList>this.asts[this.top]).members.length === 1;
                                  ~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'ASTList'.
@@= skipped -10, +10 lines =@@
                 return this.count() >= 2 &&
                     this.asts[this.top - 0].nodeType === TypeScript.NodeType.List &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.FuncDecl &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (<TypeScript.FuncDecl>this.asts[this.top - 1]).arguments === this.asts[this.top - 0];
                                  ~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'FuncDecl'.
@@= skipped -13, +13 lines =@@
                 return this.count() >= 3 &&
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.List &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     this.asts[this.top - 2].nodeType === TypeScript.NodeType.FuncDecl &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (<TypeScript.FuncDecl>this.asts[this.top - 2]).arguments === this.asts[this.top - 1];
                                  ~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'FuncDecl'.
@@= skipped -13, +13 lines =@@
                 return this.count() >= 2 &&
                     this.asts[this.top - 0].nodeType === TypeScript.NodeType.List &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.Call &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (<TypeScript.CallExpression>this.asts[this.top - 1]).arguments === this.asts[this.top - 0];
                                  ~~~~~~~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'CallExpression'.
@@= skipped -13, +13 lines =@@
                 return this.count() >= 2 &&
                     this.asts[this.top - 0].nodeType === TypeScript.NodeType.List &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     this.asts[this.top - 1].nodeType === TypeScript.NodeType.New &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (<TypeScript.CallExpression>this.asts[this.top - 1]).arguments === this.asts[this.top - 0];
                                  ~~~~~~~~~~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'CallExpression'.
@@= skipped -13, +13 lines =@@
                 return this.count() >= 1 &&
                     this.asts[this.top - 0].nodeType === TypeScript.NodeType.Block &&
                                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                     (<TypeScript.Block>this.asts[this.top - 0]).isStatementBlock === false;
                                  ~~~~~
 !!! error TS2694: Namespace 'TypeScript' has no exported member 'Block'.
@@= skipped -81, +81 lines =@@
 !!! error TS2304: Cannot find name 'hasFlag'.
                         cur.nodeType === TypeScript.NodeType.Name ||
                                                     ~~~~~~~~
-!!! error TS2339: Property 'NodeType' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'NodeType' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
                         pos === script.limChar; // Special "EOF" case
     
                     var minChar = cur.minChar;
@@= skipped -39, +39 lines =@@
             var ctx = new AstPathContext();
             TypeScript.getAstWalkerFactory().walk(script, pre, null, null, ctx);
                        ~~~~~~~~~~~~~~~~~~~
-!!! error TS2339: Property 'getAstWalkerFactory' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'getAstWalkerFactory' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
             return ctx.path;
         }
     
@@= skipped -38, +38 lines =@@
     
             TypeScript.getAstWalkerFactory().walk(script, pre);
                        ~~~~~~~~~~~~~~~~~~~
-!!! error TS2339: Property 'getAstWalkerFactory' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'getAstWalkerFactory' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
             return bestOffset;
         }
     
@@= skipped -39, +39 lines =@@
             var path = new AstPath();
             TypeScript.getAstWalkerFactory().walk(ast, pre, post, null, path);
                        ~~~~~~~~~~~~~~~~~~~
-!!! error TS2339: Property 'getAstWalkerFactory' does not exist on type 'typeof TypeScript'.
+!!! error TS2339: Property 'getAstWalkerFactory' does not exist on type '{ lastOf: (items: any[]) => any; max: (a: number, b: number) => number; min: (a: number, b: number) => number; AstPath: { new (): AstPath; reverseIndexOf: (items: any[], index: number) => any; prototype: AstPath; }; isValidAstNode: (ast: ASTSpan) => boolean; AstPathContext: { new (): AstPathContext; prototype: AstPathContext; }; GetAstPathOptions: { readonly [x: number]: string; readonly Default: GetAstPathOptions.Default; readonly EdgeInclusive: GetAstPathOptions.EdgeInclusive; readonly DontPruneSearchBasedOnPosition: GetAstPathOptions.DontPruneSearchBasedOnPosition; }; getAstPathToPosition: (script: AST, pos: number, options?: GetAstPathOptions) => AstPath; getTokenizationOffset: (script: Script, position: number) => number; walkAST: (ast: AST, callback: (path: AstPath, walker: IAstWalker) => void) => void; }'.
         }
     }
     
