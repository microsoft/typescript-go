--- old.typeGuardsObjectMethods.symbols
+++ new.typeGuardsObjectMethods.symbols
@@= skipped -25, +25 lines =@@
         num = typeof var1 === "string" && var1.length; // string
 >num : Symbol(num, Decl(typeGuardsObjectMethods.ts, 4, 3))
 >var1 : Symbol(var1, Decl(typeGuardsObjectMethods.ts, 6, 3))
->var1.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>var1.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >var1 : Symbol(var1, Decl(typeGuardsObjectMethods.ts, 6, 3))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 
         // variables in function declaration
         var var2: string | number;
@@= skipped -11, +11 lines =@@
         num = typeof var2 === "string" && var2.length; // string
 >num : Symbol(num, Decl(typeGuardsObjectMethods.ts, 4, 3))
 >var2 : Symbol(var2, Decl(typeGuardsObjectMethods.ts, 14, 11))
->var2.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>var2.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >var2 : Symbol(var2, Decl(typeGuardsObjectMethods.ts, 14, 11))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 
         // parameters in function declaration
         num = typeof param === "string" && param.length; // string
 >num : Symbol(num, Decl(typeGuardsObjectMethods.ts, 4, 3))
 >param : Symbol(param, Decl(typeGuardsObjectMethods.ts, 9, 11))
->param.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>param.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >param : Symbol(param, Decl(typeGuardsObjectMethods.ts, 9, 11))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 
         return strOrNum;
 >strOrNum : Symbol(strOrNum, Decl(typeGuardsObjectMethods.ts, 5, 3))
@@= skipped -23, +23 lines =@@
         num = typeof var1 === "string" && var1.length; // string
 >num : Symbol(num, Decl(typeGuardsObjectMethods.ts, 4, 3))
 >var1 : Symbol(var1, Decl(typeGuardsObjectMethods.ts, 6, 3))
->var1.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>var1.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >var1 : Symbol(var1, Decl(typeGuardsObjectMethods.ts, 6, 3))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 
         // variables in function declaration
         var var2: string | number;
@@= skipped -11, +11 lines =@@
         num = typeof var2 === "string" && var2.length; // string
 >num : Symbol(num, Decl(typeGuardsObjectMethods.ts, 4, 3))
 >var2 : Symbol(var2, Decl(typeGuardsObjectMethods.ts, 27, 11))
->var2.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>var2.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >var2 : Symbol(var2, Decl(typeGuardsObjectMethods.ts, 27, 11))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 
         return strOrNum;
 >strOrNum : Symbol(strOrNum, Decl(typeGuardsObjectMethods.ts, 5, 3))
@@= skipped -16, +16 lines =@@
         num = typeof var1 === "string" && var1.length; // string
 >num : Symbol(num, Decl(typeGuardsObjectMethods.ts, 4, 3))
 >var1 : Symbol(var1, Decl(typeGuardsObjectMethods.ts, 6, 3))
->var1.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>var1.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >var1 : Symbol(var1, Decl(typeGuardsObjectMethods.ts, 6, 3))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 
         // variables in function declaration
         var var2: string | number;
@@= skipped -11, +11 lines =@@
         num = typeof var2 === "string" && var2.length; // string
 >num : Symbol(num, Decl(typeGuardsObjectMethods.ts, 4, 3))
 >var2 : Symbol(var2, Decl(typeGuardsObjectMethods.ts, 37, 11))
->var2.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>var2.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >var2 : Symbol(var2, Decl(typeGuardsObjectMethods.ts, 37, 11))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 
         // parameters in function declaration
         num = typeof param === "string" && param.length; // string
 >num : Symbol(num, Decl(typeGuardsObjectMethods.ts, 4, 3))
 >param : Symbol(param, Decl(typeGuardsObjectMethods.ts, 32, 13))
->param.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>param.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >param : Symbol(param, Decl(typeGuardsObjectMethods.ts, 32, 13))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
     }
 };
 // return expression of the method
