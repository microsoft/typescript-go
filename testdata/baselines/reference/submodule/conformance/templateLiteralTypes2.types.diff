--- old.templateLiteralTypes2.types
+++ new.templateLiteralTypes2.types
@@= skipped -1, +1 lines =@@

 === templateLiteralTypes2.ts ===
 function ft1<T extends string>(s: string, n: number, u: 'foo' | 'bar' | 'baz', t: T) {
->ft1 : <T extends string>(s: string, n: number, u: "foo" | "bar" | "baz", t: T) => void
+>ft1 : <T extends string>(s: string, n: number, u: "bar" | "baz" | "foo", t: T) => void
 >s : string
 >n : number
 >u : "bar" | "baz" | "foo"
@@= skipped -401, +401 lines =@@
 >12 : 12

 function C2(transform: "-moz-initial" | (string & {})) { return 12; }
->C2 : (transform: "-moz-initial" | (string & {})) => number
->transform : "-moz-initial" | (string & {})
+>C2 : (transform: "-moz-initial" | string & {}) => number
+>transform : "-moz-initial" | string & {}
 >12 : 12

 C2(`rotate(${interpolatedStyle.rotate}dig)`);
 >C2(`rotate(${interpolatedStyle.rotate}dig)`) : number
->C2 : (transform: "-moz-initial" | (string & {})) => number
+>C2 : (transform: "-moz-initial" | string & {}) => number
 >`rotate(${interpolatedStyle.rotate}dig)` : `rotate(${number}dig)`
 >interpolatedStyle.rotate : number
 >interpolatedStyle : { rotate: number; }