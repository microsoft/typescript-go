--- old.taggedTemplateStringsTypeArgumentInference.errors.txt
+++ new.taggedTemplateStringsTypeArgumentInference.errors.txt
@@= skipped -0, +0 lines =@@
 taggedTemplateStringsTypeArgumentInference.ts(62,36): error TS2345: Argument of type '0' is not assignable to parameter of type '""'.
-taggedTemplateStringsTypeArgumentInference.ts(63,5): error TS2403: Subsequent variable declarations must have the same type.  Variable 'a9a' must be of type 'string', but here has type '{}'.
-taggedTemplateStringsTypeArgumentInference.ts(76,5): error TS2403: Subsequent variable declarations must have the same type.  Variable 'a9e' must be of type '{ x: number; z: Date; y?: undefined; } | { x: number; y: string; z?: undefined; }', but here has type '{}'.
 
 
-==== taggedTemplateStringsTypeArgumentInference.ts (3 errors) ====
+==== taggedTemplateStringsTypeArgumentInference.ts (1 errors) ====
     // Generic tag with one parameter
     function noParams<T>(n: T) { }
     noParams ``;
@@= skipped -68, +66 lines =@@
                                        ~
 !!! error TS2345: Argument of type '0' is not assignable to parameter of type '""'.
     var a9a: {};
-        ~~~
-!!! error TS2403: Subsequent variable declarations must have the same type.  Variable 'a9a' must be of type 'string', but here has type '{}'.
-!!! related TS6203 taggedTemplateStringsTypeArgumentInference.ts:62:5: 'a9a' was also declared here.
     
     // Generic tag with multiple parameters of generic type passed arguments with multiple best common types
     interface A91 {
@@= skipped -16, +13 lines =@@
     
     var a9e = someGenerics9 `${ undefined }${ { x: 6, z: new Date() } }${ { x: 6, y: '' } }`;
     var a9e: {};
-        ~~~
-!!! error TS2403: Subsequent variable declarations must have the same type.  Variable 'a9e' must be of type '{ x: number; z: Date; y?: undefined; } | { x: number; y: string; z?: undefined; }', but here has type '{}'.
-!!! related TS6203 taggedTemplateStringsTypeArgumentInference.ts:75:5: 'a9e' was also declared here.
     
     // Generic tag with multiple parameters of generic type passed arguments with a single best common type
     var a9d = someGenerics9 `${ { x: 3 }}${ { x: 6 }}${ { x: 6 } }`;
