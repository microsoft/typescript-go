--- old.typeGuardsInFunction.symbols
+++ new.typeGuardsInFunction.symbols
@@= skipped -19, +19 lines =@@
     num =  typeof var1 === "string" && var1.length; // string
 >num : Symbol(num, Decl(typeGuardsInFunction.ts, 4, 3))
 >var1 : Symbol(var1, Decl(typeGuardsInFunction.ts, 5, 3))
->var1.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>var1.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >var1 : Symbol(var1, Decl(typeGuardsInFunction.ts, 5, 3))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 
     // variables in function declaration
     var var2: string | number;
@@= skipped -11, +11 lines =@@
     num = typeof var2 === "string" && var2.length; // string
 >num : Symbol(num, Decl(typeGuardsInFunction.ts, 4, 3))
 >var2 : Symbol(var2, Decl(typeGuardsInFunction.ts, 12, 7))
->var2.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>var2.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >var2 : Symbol(var2, Decl(typeGuardsInFunction.ts, 12, 7))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 
     // parameters in function declaration
     num = typeof param === "string" && param.length; // string
 >num : Symbol(num, Decl(typeGuardsInFunction.ts, 4, 3))
 >param : Symbol(param, Decl(typeGuardsInFunction.ts, 7, 11))
->param.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>param.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >param : Symbol(param, Decl(typeGuardsInFunction.ts, 7, 11))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 }
 // local function declaration
 function f1(param: string | number) {
@@= skipped -28, +28 lines =@@
         num = typeof var1 === "string" && var1.length; // string
 >num : Symbol(num, Decl(typeGuardsInFunction.ts, 4, 3))
 >var1 : Symbol(var1, Decl(typeGuardsInFunction.ts, 5, 3))
->var1.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>var1.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >var1 : Symbol(var1, Decl(typeGuardsInFunction.ts, 5, 3))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 
         // variables from outer function declaration
         num = typeof var2 === "string" && var2.length; // string
 >num : Symbol(num, Decl(typeGuardsInFunction.ts, 4, 3))
 >var2 : Symbol(var2, Decl(typeGuardsInFunction.ts, 20, 7))
->var2.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>var2.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >var2 : Symbol(var2, Decl(typeGuardsInFunction.ts, 20, 7))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 
         // parameters in outer declaration
         num = typeof param === "string" && param.length; // string
 >num : Symbol(num, Decl(typeGuardsInFunction.ts, 4, 3))
 >param : Symbol(param, Decl(typeGuardsInFunction.ts, 19, 12))
->param.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>param.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >param : Symbol(param, Decl(typeGuardsInFunction.ts, 19, 12))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 
         // local
         var var3: string | number;
@@= skipped -27, +27 lines =@@
         num = typeof var3 === "string" && var3.length; // string
 >num : Symbol(num, Decl(typeGuardsInFunction.ts, 4, 3))
 >var3 : Symbol(var3, Decl(typeGuardsInFunction.ts, 32, 11))
->var3.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>var3.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >var3 : Symbol(var3, Decl(typeGuardsInFunction.ts, 32, 11))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 
         num = typeof param1 === "string" && param1.length; // string
 >num : Symbol(num, Decl(typeGuardsInFunction.ts, 4, 3))
 >param1 : Symbol(param1, Decl(typeGuardsInFunction.ts, 21, 16))
->param1.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>param1.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >param1 : Symbol(param1, Decl(typeGuardsInFunction.ts, 21, 16))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
     }
 }
 // Function expression
@@= skipped -30, +30 lines =@@
         num = typeof var1 === "string" && var1.length; // string
 >num : Symbol(num, Decl(typeGuardsInFunction.ts, 4, 3))
 >var1 : Symbol(var1, Decl(typeGuardsInFunction.ts, 5, 3))
->var1.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>var1.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >var1 : Symbol(var1, Decl(typeGuardsInFunction.ts, 5, 3))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 
         // variables from outer function declaration
         num = typeof var2 === "string" && var2.length; // string
 >num : Symbol(num, Decl(typeGuardsInFunction.ts, 4, 3))
 >var2 : Symbol(var2, Decl(typeGuardsInFunction.ts, 40, 7))
->var2.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>var2.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >var2 : Symbol(var2, Decl(typeGuardsInFunction.ts, 40, 7))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 
         // parameters in outer declaration
         num = typeof param === "string" && param.length; // string
 >num : Symbol(num, Decl(typeGuardsInFunction.ts, 4, 3))
 >param : Symbol(param, Decl(typeGuardsInFunction.ts, 38, 12))
->param.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>param.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >param : Symbol(param, Decl(typeGuardsInFunction.ts, 38, 12))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 
         // local
         var var3: string | number;
@@= skipped -27, +27 lines =@@
         num = typeof var3 === "string" && var3.length; // string
 >num : Symbol(num, Decl(typeGuardsInFunction.ts, 4, 3))
 >var3 : Symbol(var3, Decl(typeGuardsInFunction.ts, 53, 11))
->var3.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>var3.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >var3 : Symbol(var3, Decl(typeGuardsInFunction.ts, 53, 11))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 
         num = typeof param1 === "string" && param1.length; // string
 >num : Symbol(num, Decl(typeGuardsInFunction.ts, 4, 3))
 >param1 : Symbol(param1, Decl(typeGuardsInFunction.ts, 42, 22))
->param1.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>param1.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >param1 : Symbol(param1, Decl(typeGuardsInFunction.ts, 42, 22))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 
     } (param);
 >param : Symbol(param, Decl(typeGuardsInFunction.ts, 38, 12))
@@= skipped -32, +32 lines =@@
         num = typeof var1 === "string" && var1.length; // string
 >num : Symbol(num, Decl(typeGuardsInFunction.ts, 4, 3))
 >var1 : Symbol(var1, Decl(typeGuardsInFunction.ts, 5, 3))
->var1.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>var1.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >var1 : Symbol(var1, Decl(typeGuardsInFunction.ts, 5, 3))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 
         // variables from outer function declaration
         num = typeof var2 === "string" && var2.length; // string
 >num : Symbol(num, Decl(typeGuardsInFunction.ts, 4, 3))
 >var2 : Symbol(var2, Decl(typeGuardsInFunction.ts, 61, 7))
->var2.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>var2.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >var2 : Symbol(var2, Decl(typeGuardsInFunction.ts, 61, 7))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 
         // parameters in outer declaration
         num = typeof param === "string" && param.length; // string
 >num : Symbol(num, Decl(typeGuardsInFunction.ts, 4, 3))
 >param : Symbol(param, Decl(typeGuardsInFunction.ts, 59, 12))
->param.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>param.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >param : Symbol(param, Decl(typeGuardsInFunction.ts, 59, 12))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 
         // local
         var var3: string | number;
@@= skipped -27, +27 lines =@@
         num = typeof var3 === "string" && var3.length; // string
 >num : Symbol(num, Decl(typeGuardsInFunction.ts, 4, 3))
 >var3 : Symbol(var3, Decl(typeGuardsInFunction.ts, 74, 11))
->var3.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>var3.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >var3 : Symbol(var3, Decl(typeGuardsInFunction.ts, 74, 11))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 
         num = typeof param1 === "string" && param1.length; // string
 >num : Symbol(num, Decl(typeGuardsInFunction.ts, 4, 3))
 >param1 : Symbol(param1, Decl(typeGuardsInFunction.ts, 63, 14))
->param1.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>param1.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >param1 : Symbol(param1, Decl(typeGuardsInFunction.ts, 63, 14))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 
     })(param);
 >param : Symbol(param, Decl(typeGuardsInFunction.ts, 59, 12))
