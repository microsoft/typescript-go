--- old.jsDeclarationsTypedefAndImportTypes.js
+++ new.jsDeclarationsTypedefAndImportTypes.js
@@= skipped -34, +34 lines =@@


 //// [conn.js]
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
 /**
  * @typedef {string | number} Whatever
  */
-var Conn = /** @class */ (function () {
-    function Conn() {
-        this.item = 3;
-    }
-    Conn.prototype.method = function () { };
-    return Conn;
-}());
+class Conn {
+    constructor() { }
+    item = 3;
+    method() { }
+}
+export = Conn;
 module.exports = Conn;
 //// [usage.js]
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
 /**
  * @typedef {import("./conn")} Conn
  */
-var Wrap = /** @class */ (function () {
+class Wrap {
     /**
      * @param {Conn} c
      */
-    function Wrap(c) {
+    constructor(c) {
         this.connItem = c.item;
         /** @type {import("./conn").Whatever} */
         this.another = "";
     }
-    return Wrap;
-}());
+}
 module.exports = {
-    Wrap: Wrap
+    Wrap
 };


 //// [conn.d.ts]
+export type Whatever = string | number;
 export = Conn;
-/**
- * @typedef {string | number} Whatever
- */
-declare class Conn {
-    item: number;
-    method(): void;
-}
-declare namespace Conn {
-    export { Whatever };
-}
-type Whatever = string | number;
 //// [usage.d.ts]
 export type Conn = import("./conn");
 /**
  * @typedef {import("./conn")} Conn
  */
-export class Wrap {
+declare class Wrap {
     /**
      * @param {Conn} c
      */
     constructor(c: Conn);
-    connItem: number;
-    /** @type {import("./conn").Whatever} */
-    another: import("./conn").Whatever;
 }
+declare const _default: {
+    Wrap: typeof Wrap;
+};
+export = _default;