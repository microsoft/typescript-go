--- old.derivedClassWithoutExplicitConstructor2.symbols
+++ new.derivedClassWithoutExplicitConstructor2.symbols
@@= skipped -4, +4 lines =@@
 >Base : Symbol(Base, Decl(derivedClassWithoutExplicitConstructor2.ts, 0, 0))
 
     a = 1;
->a : Symbol(Base.a, Decl(derivedClassWithoutExplicitConstructor2.ts, 0, 12))
+>a : Symbol(a, Decl(derivedClassWithoutExplicitConstructor2.ts, 0, 12))
 
     constructor(x: number, y?: number, z?: number);
 >x : Symbol(x, Decl(derivedClassWithoutExplicitConstructor2.ts, 2, 16))
@@= skipped -13, +13 lines =@@
 
     constructor(x: number) { this.a = x; }
 >x : Symbol(x, Decl(derivedClassWithoutExplicitConstructor2.ts, 4, 16))
->this.a : Symbol(Base.a, Decl(derivedClassWithoutExplicitConstructor2.ts, 0, 12))
+>this.a : Symbol(a, Decl(derivedClassWithoutExplicitConstructor2.ts, 0, 12))
 >this : Symbol(Base, Decl(derivedClassWithoutExplicitConstructor2.ts, 0, 0))
->a : Symbol(Base.a, Decl(derivedClassWithoutExplicitConstructor2.ts, 0, 12))
+>a : Symbol(a, Decl(derivedClassWithoutExplicitConstructor2.ts, 0, 12))
 >x : Symbol(x, Decl(derivedClassWithoutExplicitConstructor2.ts, 4, 16))
 }
 
@@= skipped -11, +11 lines =@@
 >Base : Symbol(Base, Decl(derivedClassWithoutExplicitConstructor2.ts, 0, 0))
 
     x = 1
->x : Symbol(Derived.x, Decl(derivedClassWithoutExplicitConstructor2.ts, 7, 28))
+>x : Symbol(x, Decl(derivedClassWithoutExplicitConstructor2.ts, 7, 28))
 
     y = 'hello';
->y : Symbol(Derived.y, Decl(derivedClassWithoutExplicitConstructor2.ts, 8, 9))
+>y : Symbol(y, Decl(derivedClassWithoutExplicitConstructor2.ts, 8, 9))
 }
 
 var r = new Derived(); // error
@@= skipped -27, +27 lines =@@
 >T : Symbol(T, Decl(derivedClassWithoutExplicitConstructor2.ts, 17, 12))
 
     a: T;
->a : Symbol(Base2.a, Decl(derivedClassWithoutExplicitConstructor2.ts, 17, 16))
+>a : Symbol(a, Decl(derivedClassWithoutExplicitConstructor2.ts, 17, 16))
 >T : Symbol(T, Decl(derivedClassWithoutExplicitConstructor2.ts, 17, 12))
 
     constructor(x: T, y?: T, z?: T);
@@= skipped -20, +20 lines =@@
     constructor(x: T) { this.a = x; }
 >x : Symbol(x, Decl(derivedClassWithoutExplicitConstructor2.ts, 21, 16))
 >T : Symbol(T, Decl(derivedClassWithoutExplicitConstructor2.ts, 17, 12))
->this.a : Symbol(Base2.a, Decl(derivedClassWithoutExplicitConstructor2.ts, 17, 16))
+>this.a : Symbol(a, Decl(derivedClassWithoutExplicitConstructor2.ts, 17, 16))
 >this : Symbol(Base2, Decl(derivedClassWithoutExplicitConstructor2.ts, 15, 30))
->a : Symbol(Base2.a, Decl(derivedClassWithoutExplicitConstructor2.ts, 17, 16))
+>a : Symbol(a, Decl(derivedClassWithoutExplicitConstructor2.ts, 17, 16))
 >x : Symbol(x, Decl(derivedClassWithoutExplicitConstructor2.ts, 21, 16))
 }
 
@@= skipped -14, +14 lines =@@
 >T : Symbol(T, Decl(derivedClassWithoutExplicitConstructor2.ts, 24, 8))
 
     x = 2
->x : Symbol(D.x, Decl(derivedClassWithoutExplicitConstructor2.ts, 24, 42))
+>x : Symbol(x, Decl(derivedClassWithoutExplicitConstructor2.ts, 24, 42))
 
     y: T = null;
->y : Symbol(D.y, Decl(derivedClassWithoutExplicitConstructor2.ts, 25, 9))
+>y : Symbol(y, Decl(derivedClassWithoutExplicitConstructor2.ts, 25, 9))
 >T : Symbol(T, Decl(derivedClassWithoutExplicitConstructor2.ts, 24, 8))
 }
 
