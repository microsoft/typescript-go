--- old.typeOfThisInAccessor.symbols
+++ new.typeOfThisInAccessor.symbols
@@= skipped -4, +4 lines =@@
 >C : Symbol(C, Decl(typeOfThisInAccessor.ts, 0, 0))
 
     get x() {
->x : Symbol(C.x, Decl(typeOfThisInAccessor.ts, 0, 9))
+>x : Symbol(x, Decl(typeOfThisInAccessor.ts, 0, 9))
 
         var r = this; // C
 >r : Symbol(r, Decl(typeOfThisInAccessor.ts, 2, 11))
@@= skipped -10, +10 lines =@@
     }
 
     static get y() {
->y : Symbol(C.y, Decl(typeOfThisInAccessor.ts, 4, 5))
+>y : Symbol(y, Decl(typeOfThisInAccessor.ts, 4, 5))
 
         var r2 = this; // typeof C
 >r2 : Symbol(r2, Decl(typeOfThisInAccessor.ts, 7, 11))
@@= skipped -15, +15 lines =@@
 >T : Symbol(T, Decl(typeOfThisInAccessor.ts, 12, 8))
 
     a: T;
->a : Symbol(D.a, Decl(typeOfThisInAccessor.ts, 12, 12))
+>a : Symbol(a, Decl(typeOfThisInAccessor.ts, 12, 12))
 >T : Symbol(T, Decl(typeOfThisInAccessor.ts, 12, 8))
 
     get x() {
->x : Symbol(D.x, Decl(typeOfThisInAccessor.ts, 13, 9))
+>x : Symbol(x, Decl(typeOfThisInAccessor.ts, 13, 9))
 
         var r = this; // D<T>
 >r : Symbol(r, Decl(typeOfThisInAccessor.ts, 15, 11))
@@= skipped -14, +14 lines =@@
     }
 
     static get y() {
->y : Symbol(D.y, Decl(typeOfThisInAccessor.ts, 17, 5))
+>y : Symbol(y, Decl(typeOfThisInAccessor.ts, 17, 5))
 
         var r2 = this; // typeof D
 >r2 : Symbol(r2, Decl(typeOfThisInAccessor.ts, 20, 11))
