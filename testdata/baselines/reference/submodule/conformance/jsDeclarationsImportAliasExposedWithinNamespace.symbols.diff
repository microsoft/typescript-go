--- old.jsDeclarationsImportAliasExposedWithinNamespace.symbols
+++ new.jsDeclarationsImportAliasExposedWithinNamespace.symbols
@@= skipped -6, +6 lines =@@
  * @type {Object<string,*>}
  */
 const myTypes = {
->myTypes : Symbol(myTypes, Decl(file.js, 5, 5), Decl(file.js, 9, 50), Decl(file.js, 12, 12), Decl(file.js, 17, 38))
+>myTypes : Symbol(myTypes, Decl(file.js, 5, 5))
 
     // SOME PROPS HERE
 };
 
 /** @typedef {string|RegExp|Array<string|RegExp>} myTypes.typeA */
+>RegExp : Symbol(RegExp, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>Array : Symbol(Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
+>RegExp : Symbol(RegExp, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
 
 /**
  * @typedef myTypes.typeB
  * @property {myTypes.typeA}    prop1 - Prop 1.
+>myTypes : Symbol(myTypes)
+>typeA : Symbol(typeA)
+
  * @property {string}           prop2 - Prop 2.
  */
 
 /** @typedef {myTypes.typeB|Function} myTypes.typeC */
+>myTypes : Symbol(myTypes)
+>typeB : Symbol(typeB)
+>Function : Symbol(Function, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
 
 export {myTypes};
->myTypes : Symbol(myTypes, Decl(file.js, 19, 8), Decl(file.js, 9, 50), Decl(file.js, 12, 12), Decl(file.js, 17, 38))
+>myTypes : Symbol(myTypes, Decl(file.js, 19, 8))
 
 === file2.js ===
 import {myTypes} from './file.js';
@@= skipped -28, +37 lines =@@
  * @type {Object<string,*>}
  */
 const testFnTypes = {
->testFnTypes : Symbol(testFnTypes, Decl(file2.js, 7, 5), Decl(file2.js, 11, 37))
+>testFnTypes : Symbol(testFnTypes, Decl(file2.js, 7, 5))
 
     // SOME PROPS HERE
 };
 
 /** @typedef {boolean|myTypes.typeC} testFnTypes.input */
+>myTypes : Symbol(myTypes)
+>typeC : Symbol(typeC)
 
 /**
  * @function testFn
@@= skipped -30, +32 lines =@@
 
 export {testFn, testFnTypes};
 >testFn : Symbol(testFn, Decl(file2.js, 27, 8))
->testFnTypes : Symbol(testFnTypes, Decl(file2.js, 27, 15), Decl(file2.js, 11, 37))
+>testFnTypes : Symbol(testFnTypes, Decl(file2.js, 27, 15))
 
