--- old.jsDeclarationsTypedefPropertyAndExportAssignment.js
+++ new.jsDeclarationsTypedefPropertyAndExportAssignment.js
@@= skipped -101, +101 lines =@@


 //// [module.d.ts]
-export type TaskGroupIds = "parseHTML" | "styleLayout";
+/** @typedef {'parseHTML'|'styleLayout'} TaskGroupIds */
+export type TaskGroupIds = 'parseHTML' | 'styleLayout';
 export type TaskGroup = {
     id: TaskGroupIds;
     label: string;
     traceEventNames: string[];
 };
-/** @typedef {'parseHTML'|'styleLayout'} TaskGroupIds */
-/**
- * @typedef TaskGroup
- * @property {TaskGroupIds} id
- * @property {string} label
- * @property {string[]} traceEventNames
- */
-/**
- * @type {{[P in TaskGroupIds]: {id: P, label: string}}}
- */
-export const taskGroups: { [P in TaskGroupIds]: {
-    id: P;
-    label: string;
-}; };
-/** @type {Object<string, TaskGroup>} */
-export const taskNameToGroup: {
-    [x: string]: TaskGroup;
+declare const _default: {
+    taskGroups: {
+        parseHTML: {
+            id: "parseHTML";
+            label: string;
+        };
+        styleLayout: {
+            id: "styleLayout";
+            label: string;
+        };
+    };
+    taskNameToGroup: any;
 };
+export = _default;
 //// [index.d.ts]
-export = MainThreadTasks;
-/** @typedef {import('./module.js').TaskGroup} TaskGroup */
-/**
- * @typedef TaskNode
- * @prop {TaskNode[]} children
- * @prop {TaskNode|undefined} parent
- * @prop {TaskGroup} group
- */
-/** @typedef {{timers: Map<string, TaskNode>}} PriorTaskData */
-declare class MainThreadTasks {
-    /**
-     * @param {TaskGroup} x
-     * @param {TaskNode} y
-     */
-    constructor(x: TaskGroup, y: TaskNode);
-}
-declare namespace MainThreadTasks {
-    export { TaskGroup, TaskNode, PriorTaskData };
-}
-type TaskGroup = import("./module.js").TaskGroup;
-type TaskNode = {
+export type TaskGroup = import('./module.js').TaskGroup;
+export type TaskNode = {
     children: TaskNode[];
     parent: TaskNode | undefined;
     group: TaskGroup;
 };
-type PriorTaskData = {
+export type PriorTaskData = {
     timers: Map<string, TaskNode>;
 };
+export = MainThreadTasks;