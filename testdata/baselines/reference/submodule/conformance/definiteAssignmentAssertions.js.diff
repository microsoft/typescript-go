--- old.definiteAssignmentAssertions.js
+++ new.definiteAssignmentAssertions.js
@@= skipped -84, +84 lines =@@


 //// [definiteAssignmentAssertions.js]
-"use strict";
 // Suppress strict property initialization check
 class C1 {
+    a;
+    b; // Error
 }
 // Suppress definite assignment check in constructor
 class C2 {
+    a;
     constructor() {
         let x = this.a;
     }
 }
 // Definite assignment assertion requires type annotation, no initializer, no static modifier
 class C3 {
-    constructor() {
-        this.a = 1;
-        this.b = 1;
-    }
+    a = 1;
+    b = 1;
+    static c;
+    d;
 }
 // Definite assignment assertion not permitted on abstract property
 class C5 {
+    a;
 }
 // Suppress definite assignment check for variable
 function f1() {
@@= skipped -53, +56 lines =@@


 //// [definiteAssignmentAssertions.d.ts]
+// Suppress strict property initialization check
 declare class C1 {
-    a: number;
-    b: string;
+    a!: number;
+    b: string; // Error
 }
+// Suppress definite assignment check in constructor
 declare class C2 {
-    a: number;
+    a!: number;
     constructor();
 }
+// Definite assignment assertion requires type annotation, no initializer, no static modifier
 declare class C3 {
-    a: number;
-    b: number;
-    static c: number;
-    d: any;
+    a!: number;
+    b!: number;
+    static c!: number;
+    d!: any;
 }
+// Definite assignment assertion not permitted in ambient context
 declare class C4 {
-    a: number;
+    a!: number;
 }
+// Definite assignment assertion not permitted on abstract property
 declare abstract class C5 {
-    abstract a: number;
+    abstract a!: number;
 }
+// Suppress definite assignment check for variable
 declare function f1(): void;
 declare function f2(): void;
 declare function f3(): void;
+// Definite assignment assertion requires type annotation and no initializer
 declare function f4(): void;
+// Definite assignment assertion not permitted in ambient context
 declare let v1: number;
 declare var v2: number;
 declare namespace foo {