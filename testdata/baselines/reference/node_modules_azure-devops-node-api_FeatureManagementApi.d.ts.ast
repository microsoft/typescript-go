SourceFile
  ImportEqualsDeclaration
    Identifier: ' basem'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' VsoBaseInterfaces'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' FeatureManagementInterfaces'
    ExternalModuleReference
      StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' IFeatureManagementApi'
    HeritageClause
      ExpressionWithTypeArguments
        PropertyAccessExpression
          Identifier: ' basem'
          Identifier: 'ClientApiBase'
    MethodSignature
      Identifier: '
    getFeature'
      Parameter
        Identifier: 'featureId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'FeatureManagementInterfaces'
            Identifier: 'ContributedFeature'
    MethodSignature
      Identifier: '
    getFeatures'
      Parameter
        Identifier: 'targetContributionId'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'FeatureManagementInterfaces'
              Identifier: 'ContributedFeature'
    MethodSignature
      Identifier: '
    getFeatureState'
      Parameter
        Identifier: 'featureId'
        StringKeyword
      Parameter
        Identifier: ' userScope'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'FeatureManagementInterfaces'
            Identifier: 'ContributedFeatureState'
    MethodSignature
      Identifier: '
    setFeatureState'
      Parameter
        Identifier: 'feature'
        TypeReference
          QualifiedName
            Identifier: ' FeatureManagementInterfaces'
            Identifier: 'ContributedFeatureState'
      Parameter
        Identifier: ' featureId'
        StringKeyword
      Parameter
        Identifier: ' userScope'
        StringKeyword
      Parameter
        Identifier: ' reason'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' reasonCode'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'FeatureManagementInterfaces'
            Identifier: 'ContributedFeatureState'
    MethodSignature
      Identifier: '
    getFeatureStateForScope'
      Parameter
        Identifier: 'featureId'
        StringKeyword
      Parameter
        Identifier: ' userScope'
        StringKeyword
      Parameter
        Identifier: ' scopeName'
        StringKeyword
      Parameter
        Identifier: ' scopeValue'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'FeatureManagementInterfaces'
            Identifier: 'ContributedFeatureState'
    MethodSignature
      Identifier: '
    setFeatureStateForScope'
      Parameter
        Identifier: 'feature'
        TypeReference
          QualifiedName
            Identifier: ' FeatureManagementInterfaces'
            Identifier: 'ContributedFeatureState'
      Parameter
        Identifier: ' featureId'
        StringKeyword
      Parameter
        Identifier: ' userScope'
        StringKeyword
      Parameter
        Identifier: ' scopeName'
        StringKeyword
      Parameter
        Identifier: ' scopeValue'
        StringKeyword
      Parameter
        Identifier: ' reason'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' reasonCode'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'FeatureManagementInterfaces'
            Identifier: 'ContributedFeatureState'
    MethodSignature
      Identifier: '
    queryFeatureStates'
      Parameter
        Identifier: 'query'
        TypeReference
          QualifiedName
            Identifier: ' FeatureManagementInterfaces'
            Identifier: 'ContributedFeatureStateQuery'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'FeatureManagementInterfaces'
            Identifier: 'ContributedFeatureStateQuery'
    MethodSignature
      Identifier: '
    queryFeatureStatesForDefaultScope'
      Parameter
        Identifier: 'query'
        TypeReference
          QualifiedName
            Identifier: ' FeatureManagementInterfaces'
            Identifier: 'ContributedFeatureStateQuery'
      Parameter
        Identifier: ' userScope'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'FeatureManagementInterfaces'
            Identifier: 'ContributedFeatureStateQuery'
    MethodSignature
      Identifier: '
    queryFeatureStatesForNamedScope'
      Parameter
        Identifier: 'query'
        TypeReference
          QualifiedName
            Identifier: ' FeatureManagementInterfaces'
            Identifier: 'ContributedFeatureStateQuery'
      Parameter
        Identifier: ' userScope'
        StringKeyword
      Parameter
        Identifier: ' scopeName'
        StringKeyword
      Parameter
        Identifier: ' scopeValue'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'FeatureManagementInterfaces'
            Identifier: 'ContributedFeatureStateQuery'
  ClassDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' FeatureManagementApi'
    HeritageClause
      ExpressionWithTypeArguments
        PropertyAccessExpression
          Identifier: ' basem'
          Identifier: 'ClientApiBase'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' IFeatureManagementApi'
    Constructor
      Parameter
        Identifier: 'baseUrl'
        StringKeyword
      Parameter
        Identifier: ' handlers'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' VsoBaseInterfaces'
              Identifier: 'IRequestHandler'
      Parameter
        Identifier: ' options'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' VsoBaseInterfaces'
            Identifier: 'IRequestOptions'
    MethodDeclaration
      Identifier: '
    /**
     * Get a specific feature by its id
     *
     * @param {string} featureId - The contribution id of the feature
     */
    getFeature'
      Parameter
        Identifier: 'featureId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'FeatureManagementInterfaces'
            Identifier: 'ContributedFeature'
    MethodDeclaration
      Identifier: '
    /**
     * Get a list of all defined features
     *
     * @param {string} targetContributionId - Optional target contribution. If null/empty, return all features. If specified include the features that target the specified contribution.
     */
    getFeatures'
      Parameter
        Identifier: 'targetContributionId'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'FeatureManagementInterfaces'
              Identifier: 'ContributedFeature'
    MethodDeclaration
      Identifier: '
    /**
     * Get the state of the specified feature for the given user/all-users scope
     *
     * @param {string} featureId - Contribution id of the feature
     * @param {string} userScope - User-Scope at which to get the value. Should be "me" for the current user or "host" for all users.
     */
    getFeatureState'
      Parameter
        Identifier: 'featureId'
        StringKeyword
      Parameter
        Identifier: ' userScope'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'FeatureManagementInterfaces'
            Identifier: 'ContributedFeatureState'
    MethodDeclaration
      Identifier: '
    /**
     * Set the state of a feature
     *
     * @param {FeatureManagementInterfaces.ContributedFeatureState} feature - Posted feature state object. Should specify the effective value.
     * @param {string} featureId - Contribution id of the feature
     * @param {string} userScope - User-Scope at which to set the value. Should be "me" for the current user or "host" for all users.
     * @param {string} reason - Reason for changing the state
     * @param {string} reasonCode - Short reason code
     */
    setFeatureState'
      Parameter
        Identifier: 'feature'
        TypeReference
          QualifiedName
            Identifier: ' FeatureManagementInterfaces'
            Identifier: 'ContributedFeatureState'
      Parameter
        Identifier: ' featureId'
        StringKeyword
      Parameter
        Identifier: ' userScope'
        StringKeyword
      Parameter
        Identifier: ' reason'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' reasonCode'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'FeatureManagementInterfaces'
            Identifier: 'ContributedFeatureState'
    MethodDeclaration
      Identifier: '
    /**
     * Get the state of the specified feature for the given named scope
     *
     * @param {string} featureId - Contribution id of the feature
     * @param {string} userScope - User-Scope at which to get the value. Should be "me" for the current user or "host" for all users.
     * @param {string} scopeName - Scope at which to get the feature setting for (e.g. "project" or "team")
     * @param {string} scopeValue - Value of the scope (e.g. the project or team id)
     */
    getFeatureStateForScope'
      Parameter
        Identifier: 'featureId'
        StringKeyword
      Parameter
        Identifier: ' userScope'
        StringKeyword
      Parameter
        Identifier: ' scopeName'
        StringKeyword
      Parameter
        Identifier: ' scopeValue'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'FeatureManagementInterfaces'
            Identifier: 'ContributedFeatureState'
    MethodDeclaration
      Identifier: '
    /**
     * Set the state of a feature at a specific scope
     *
     * @param {FeatureManagementInterfaces.ContributedFeatureState} feature - Posted feature state object. Should specify the effective value.
     * @param {string} featureId - Contribution id of the feature
     * @param {string} userScope - User-Scope at which to set the value. Should be "me" for the current user or "host" for all users.
     * @param {string} scopeName - Scope at which to get the feature setting for (e.g. "project" or "team")
     * @param {string} scopeValue - Value of the scope (e.g. the project or team id)
     * @param {string} reason - Reason for changing the state
     * @param {string} reasonCode - Short reason code
     */
    setFeatureStateForScope'
      Parameter
        Identifier: 'feature'
        TypeReference
          QualifiedName
            Identifier: ' FeatureManagementInterfaces'
            Identifier: 'ContributedFeatureState'
      Parameter
        Identifier: ' featureId'
        StringKeyword
      Parameter
        Identifier: ' userScope'
        StringKeyword
      Parameter
        Identifier: ' scopeName'
        StringKeyword
      Parameter
        Identifier: ' scopeValue'
        StringKeyword
      Parameter
        Identifier: ' reason'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' reasonCode'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'FeatureManagementInterfaces'
            Identifier: 'ContributedFeatureState'
    MethodDeclaration
      Identifier: '
    /**
     * Get the effective state for a list of feature ids
     *
     * @param {FeatureManagementInterfaces.ContributedFeatureStateQuery} query - Features to query along with current scope values
     */
    queryFeatureStates'
      Parameter
        Identifier: 'query'
        TypeReference
          QualifiedName
            Identifier: ' FeatureManagementInterfaces'
            Identifier: 'ContributedFeatureStateQuery'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'FeatureManagementInterfaces'
            Identifier: 'ContributedFeatureStateQuery'
    MethodDeclaration
      Identifier: '
    /**
     * Get the states of the specified features for the default scope
     *
     * @param {FeatureManagementInterfaces.ContributedFeatureStateQuery} query - Query describing the features to query.
     * @param {string} userScope
     */
    queryFeatureStatesForDefaultScope'
      Parameter
        Identifier: 'query'
        TypeReference
          QualifiedName
            Identifier: ' FeatureManagementInterfaces'
            Identifier: 'ContributedFeatureStateQuery'
      Parameter
        Identifier: ' userScope'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'FeatureManagementInterfaces'
            Identifier: 'ContributedFeatureStateQuery'
    MethodDeclaration
      Identifier: '
    /**
     * Get the states of the specified features for the specific named scope
     *
     * @param {FeatureManagementInterfaces.ContributedFeatureStateQuery} query - Query describing the features to query.
     * @param {string} userScope
     * @param {string} scopeName
     * @param {string} scopeValue
     */
    queryFeatureStatesForNamedScope'
      Parameter
        Identifier: 'query'
        TypeReference
          QualifiedName
            Identifier: ' FeatureManagementInterfaces'
            Identifier: 'ContributedFeatureStateQuery'
      Parameter
        Identifier: ' userScope'
        StringKeyword
      Parameter
        Identifier: ' scopeName'
        StringKeyword
      Parameter
        Identifier: ' scopeValue'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'FeatureManagementInterfaces'
            Identifier: 'ContributedFeatureStateQuery'
