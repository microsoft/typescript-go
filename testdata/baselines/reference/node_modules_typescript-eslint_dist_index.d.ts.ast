SourceFile
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' TSESLint'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' config'
    StringLiteral
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' parser'
        TypeReference
          QualifiedName
            QualifiedName
              Identifier: ' TSESLint'
              Identifier: 'FlatConfig'
            Identifier: 'Parser'
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' plugin'
        TypeReference
          QualifiedName
            QualifiedName
              Identifier: ' TSESLint'
              Identifier: 'FlatConfig'
            Identifier: 'Plugin'
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' configs'
        TypeLiteral
          PropertySignature
            Identifier: '
    /**
     * Enables each the rules provided as a part of typescript-eslint. Note that many rules are not applicable in all codebases, or are meant to be configured.
     * @see {@link https://typescript-eslint.io/users/configs#all}
     */
    all'
            TypeReference
              QualifiedName
                QualifiedName
                  Identifier: ' TSESLint'
                  Identifier: 'FlatConfig'
                Identifier: 'ConfigArray'
          PropertySignature
            Identifier: '
    /**
     * A minimal ruleset that sets only the required parser and plugin options needed to run typescript-eslint.
     * We don't recommend using this directly; instead, extend from an earlier recommended rule.
     * @see {@link https://typescript-eslint.io/users/configs#base}
     */
    base'
            TypeReference
              QualifiedName
                QualifiedName
                  Identifier: ' TSESLint'
                  Identifier: 'FlatConfig'
                Identifier: 'Config'
          PropertySignature
            Identifier: '
    /**
     * A utility ruleset that will disable type-aware linting and all type-aware rules available in our project.
     * @see {@link https://typescript-eslint.io/users/configs#disable-type-checked}
     */
    disableTypeChecked'
            TypeReference
              QualifiedName
                QualifiedName
                  Identifier: ' TSESLint'
                  Identifier: 'FlatConfig'
                Identifier: 'Config'
          PropertySignature
            Identifier: '
    /**
     * This is a compatibility ruleset that:
     * - disables rules from eslint:recommended which are already handled by TypeScript.
     * - enables rules that make sense due to TS's typechecking / transpilation.
     * @see {@link https://typescript-eslint.io/users/configs/#eslint-recommended}
     */
    eslintRecommended'
            TypeReference
              QualifiedName
                QualifiedName
                  Identifier: ' TSESLint'
                  Identifier: 'FlatConfig'
                Identifier: 'Config'
          PropertySignature
            Identifier: '
    /**
     * Recommended rules for code correctness that you can drop in without additional configuration.
     * @see {@link https://typescript-eslint.io/users/configs#recommended}
     */
    recommended'
            TypeReference
              QualifiedName
                QualifiedName
                  Identifier: ' TSESLint'
                  Identifier: 'FlatConfig'
                Identifier: 'ConfigArray'
          PropertySignature
            Identifier: '
    /**
     * Contains all of `recommended` along with additional recommended rules that require type information.
     * @see {@link https://typescript-eslint.io/users/configs#recommended-type-checked}
     */
    recommendedTypeChecked'
            TypeReference
              QualifiedName
                QualifiedName
                  Identifier: ' TSESLint'
                  Identifier: 'FlatConfig'
                Identifier: 'ConfigArray'
          PropertySignature
            Identifier: '
    /**
     * A version of `recommended` that only contains type-checked rules and disables of any corresponding core ESLint rules.
     * @see {@link https://typescript-eslint.io/users/configs#recommended-type-checked-only}
     */
    recommendedTypeCheckedOnly'
            TypeReference
              QualifiedName
                QualifiedName
                  Identifier: ' TSESLint'
                  Identifier: 'FlatConfig'
                Identifier: 'ConfigArray'
          PropertySignature
            Identifier: '
    /**
     * Contains all of `recommended`, as well as additional strict rules that can also catch bugs.
     * @see {@link https://typescript-eslint.io/users/configs#strict}
     */
    strict'
            TypeReference
              QualifiedName
                QualifiedName
                  Identifier: ' TSESLint'
                  Identifier: 'FlatConfig'
                Identifier: 'ConfigArray'
          PropertySignature
            Identifier: '
    /**
     * Contains all of `recommended`, `recommended-type-checked`, and `strict`, along with additional strict rules that require type information.
     * @see {@link https://typescript-eslint.io/users/configs#strict-type-checked}
     */
    strictTypeChecked'
            TypeReference
              QualifiedName
                QualifiedName
                  Identifier: ' TSESLint'
                  Identifier: 'FlatConfig'
                Identifier: 'ConfigArray'
          PropertySignature
            Identifier: '
    /**
     * A version of `strict` that only contains type-checked rules and disables of any corresponding core ESLint rules.
     * @see {@link https://typescript-eslint.io/users/configs#strict-type-checked-only}
     */
    strictTypeCheckedOnly'
            TypeReference
              QualifiedName
                QualifiedName
                  Identifier: ' TSESLint'
                  Identifier: 'FlatConfig'
                Identifier: 'ConfigArray'
          PropertySignature
            Identifier: '
    /**
     * Rules considered to be best practice for modern TypeScript codebases, but that do not impact program logic.
     * @see {@link https://typescript-eslint.io/users/configs#stylistic}
     */
    stylistic'
            TypeReference
              QualifiedName
                QualifiedName
                  Identifier: ' TSESLint'
                  Identifier: 'FlatConfig'
                Identifier: 'ConfigArray'
          PropertySignature
            Identifier: '
    /**
     * Contains all of `stylistic`, along with additional stylistic rules that require type information.
     * @see {@link https://typescript-eslint.io/users/configs#stylistic-type-checked}
     */
    stylisticTypeChecked'
            TypeReference
              QualifiedName
                QualifiedName
                  Identifier: ' TSESLint'
                  Identifier: 'FlatConfig'
                Identifier: 'ConfigArray'
          PropertySignature
            Identifier: '
    /**
     * A version of `stylistic` that only contains type-checked rules and disables of any corresponding core ESLint rules.
     * @see {@link https://typescript-eslint.io/users/configs#stylistic-type-checked-only}
     */
    stylisticTypeCheckedOnly'
            TypeReference
              QualifiedName
                QualifiedName
                  Identifier: ' TSESLint'
                  Identifier: 'FlatConfig'
                Identifier: 'ConfigArray'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' Config'
    TypeReference
      QualifiedName
        QualifiedName
          Identifier: ' TSESLint'
          Identifier: 'FlatConfig'
        Identifier: 'ConfigFile'
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' _default'
        TypeLiteral
          PropertySignature
            Identifier: '
    config'
            TypeQuery
              Identifier: ' config'
          PropertySignature
            Identifier: '
    configs'
            TypeLiteral
              PropertySignature
                Identifier: '
        /**
         * Enables each the rules provided as a part of typescript-eslint. Note that many rules are not applicable in all codebases, or are meant to be configured.
         * @see {@link https://typescript-eslint.io/users/configs#all}
         */
        all'
                TypeReference
                  QualifiedName
                    QualifiedName
                      Identifier: ' TSESLint'
                      Identifier: 'FlatConfig'
                    Identifier: 'ConfigArray'
              PropertySignature
                Identifier: '
        /**
         * A minimal ruleset that sets only the required parser and plugin options needed to run typescript-eslint.
         * We don't recommend using this directly; instead, extend from an earlier recommended rule.
         * @see {@link https://typescript-eslint.io/users/configs#base}
         */
        base'
                TypeReference
                  QualifiedName
                    QualifiedName
                      Identifier: ' TSESLint'
                      Identifier: 'FlatConfig'
                    Identifier: 'Config'
              PropertySignature
                Identifier: '
        /**
         * A utility ruleset that will disable type-aware linting and all type-aware rules available in our project.
         * @see {@link https://typescript-eslint.io/users/configs#disable-type-checked}
         */
        disableTypeChecked'
                TypeReference
                  QualifiedName
                    QualifiedName
                      Identifier: ' TSESLint'
                      Identifier: 'FlatConfig'
                    Identifier: 'Config'
              PropertySignature
                Identifier: '
        /**
         * This is a compatibility ruleset that:
         * - disables rules from eslint:recommended which are already handled by TypeScript.
         * - enables rules that make sense due to TS's typechecking / transpilation.
         * @see {@link https://typescript-eslint.io/users/configs/#eslint-recommended}
         */
        eslintRecommended'
                TypeReference
                  QualifiedName
                    QualifiedName
                      Identifier: ' TSESLint'
                      Identifier: 'FlatConfig'
                    Identifier: 'Config'
              PropertySignature
                Identifier: '
        /**
         * Recommended rules for code correctness that you can drop in without additional configuration.
         * @see {@link https://typescript-eslint.io/users/configs#recommended}
         */
        recommended'
                TypeReference
                  QualifiedName
                    QualifiedName
                      Identifier: ' TSESLint'
                      Identifier: 'FlatConfig'
                    Identifier: 'ConfigArray'
              PropertySignature
                Identifier: '
        /**
         * Contains all of `recommended` along with additional recommended rules that require type information.
         * @see {@link https://typescript-eslint.io/users/configs#recommended-type-checked}
         */
        recommendedTypeChecked'
                TypeReference
                  QualifiedName
                    QualifiedName
                      Identifier: ' TSESLint'
                      Identifier: 'FlatConfig'
                    Identifier: 'ConfigArray'
              PropertySignature
                Identifier: '
        /**
         * A version of `recommended` that only contains type-checked rules and disables of any corresponding core ESLint rules.
         * @see {@link https://typescript-eslint.io/users/configs#recommended-type-checked-only}
         */
        recommendedTypeCheckedOnly'
                TypeReference
                  QualifiedName
                    QualifiedName
                      Identifier: ' TSESLint'
                      Identifier: 'FlatConfig'
                    Identifier: 'ConfigArray'
              PropertySignature
                Identifier: '
        /**
         * Contains all of `recommended`, as well as additional strict rules that can also catch bugs.
         * @see {@link https://typescript-eslint.io/users/configs#strict}
         */
        strict'
                TypeReference
                  QualifiedName
                    QualifiedName
                      Identifier: ' TSESLint'
                      Identifier: 'FlatConfig'
                    Identifier: 'ConfigArray'
              PropertySignature
                Identifier: '
        /**
         * Contains all of `recommended`, `recommended-type-checked`, and `strict`, along with additional strict rules that require type information.
         * @see {@link https://typescript-eslint.io/users/configs#strict-type-checked}
         */
        strictTypeChecked'
                TypeReference
                  QualifiedName
                    QualifiedName
                      Identifier: ' TSESLint'
                      Identifier: 'FlatConfig'
                    Identifier: 'ConfigArray'
              PropertySignature
                Identifier: '
        /**
         * A version of `strict` that only contains type-checked rules and disables of any corresponding core ESLint rules.
         * @see {@link https://typescript-eslint.io/users/configs#strict-type-checked-only}
         */
        strictTypeCheckedOnly'
                TypeReference
                  QualifiedName
                    QualifiedName
                      Identifier: ' TSESLint'
                      Identifier: 'FlatConfig'
                    Identifier: 'ConfigArray'
              PropertySignature
                Identifier: '
        /**
         * Rules considered to be best practice for modern TypeScript codebases, but that do not impact program logic.
         * @see {@link https://typescript-eslint.io/users/configs#stylistic}
         */
        stylistic'
                TypeReference
                  QualifiedName
                    QualifiedName
                      Identifier: ' TSESLint'
                      Identifier: 'FlatConfig'
                    Identifier: 'ConfigArray'
              PropertySignature
                Identifier: '
        /**
         * Contains all of `stylistic`, along with additional stylistic rules that require type information.
         * @see {@link https://typescript-eslint.io/users/configs#stylistic-type-checked}
         */
        stylisticTypeChecked'
                TypeReference
                  QualifiedName
                    QualifiedName
                      Identifier: ' TSESLint'
                      Identifier: 'FlatConfig'
                    Identifier: 'ConfigArray'
              PropertySignature
                Identifier: '
        /**
         * A version of `stylistic` that only contains type-checked rules and disables of any corresponding core ESLint rules.
         * @see {@link https://typescript-eslint.io/users/configs#stylistic-type-checked-only}
         */
        stylisticTypeCheckedOnly'
                TypeReference
                  QualifiedName
                    QualifiedName
                      Identifier: ' TSESLint'
                      Identifier: 'FlatConfig'
                    Identifier: 'ConfigArray'
          PropertySignature
            Identifier: '
    parser'
            TypeLiteral
              PropertySignature
                Identifier: '
        meta'
                QuestionToken
                MappedType
                  TypeParameter
                    Identifier: 'K'
                    TypeOperator
                      TypeReference
                        QualifiedName
                          QualifiedName
                            Identifier: ' TSESLint'
                            Identifier: 'Parser'
                          Identifier: 'ParserMeta'
                  QuestionToken
                  UnionType
                    IndexedAccessType
                      TypeReference
                        QualifiedName
                          QualifiedName
                            Identifier: ' TSESLint'
                            Identifier: 'Parser'
                          Identifier: 'ParserMeta'
                      TypeReference
                        Identifier: 'K'
                    UndefinedKeyword
              MethodSignature
                Identifier: '
        parseForESLint'
                Parameter
                  Identifier: 'text'
                  StringKeyword
                Parameter
                  Identifier: ' options'
                  QuestionToken
                  UnknownKeyword
                MappedType
                  TypeParameter
                    Identifier: 'k'
                    TypeOperator
                      TypeReference
                        QualifiedName
                          QualifiedName
                            Identifier: ' TSESLint'
                            Identifier: 'Parser'
                          Identifier: 'ParseResult'
                  UnknownKeyword
          PropertySignature
            Identifier: '
    plugin'
            TypeReference
              QualifiedName
                QualifiedName
                  Identifier: ' TSESLint'
                  Identifier: 'FlatConfig'
                Identifier: 'Plugin'
  ExportAssignment
    Identifier: ' _default'
  ExportDeclaration
    NamedExports
      ExportSpecifier
        Identifier: ' configs'
      ExportSpecifier
        Identifier: ' parser'
      ExportSpecifier
        Identifier: ' plugin'
  ExportDeclaration
    NamedExports
      ExportSpecifier
        Identifier: ' config'
      ExportSpecifier
        Identifier: ' ConfigWithExtends'
    StringLiteral
