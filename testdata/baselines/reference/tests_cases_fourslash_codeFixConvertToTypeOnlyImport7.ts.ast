SourceFile
  ExpressionStatement
    CallExpression
      PropertyAccessExpression
        Identifier: '/// <reference path="fourslash.ts" />

// @module: esnext
// @verbatimModuleSyntax: true

// @Filename: /b.ts
////export interface I {}
////export const foo = {};

// @Filename: /c.ts
//// export interface C {}

// @Filename: /d.ts
//// export interface D {}
//// export function d() {}

// @Filename: /a.ts
//// import { I, type foo } from "./b";
//// import { C } from "./c";
//// import { D, d } from "./d";
//// export declare const x: typeof foo;
//// d();

goTo'
        Identifier: 'file'
      StringLiteral
  ExpressionStatement
    CallExpression
      PropertyAccessExpression
        Identifier: '
verify'
        Identifier: 'codeFixAll'
      ObjectLiteralExpression
        PropertyAssignment
          Identifier: '
  fixId'
          StringLiteral
        PropertyAssignment
          Identifier: '
  fixAllDescription'
          PropertyAccessExpression
            PropertyAccessExpression
              PropertyAccessExpression
                Identifier: ' ts'
                Identifier: 'Diagnostics'
              Identifier: 'Fix_all_with_type_only_imports'
            Identifier: 'message'
        PropertyAssignment
          Identifier: '
  newFileContent'
          NoSubstitutionTemplateLiteral
