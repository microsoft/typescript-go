SourceFile
  ExpressionStatement
    CallExpression
      PropertyAccessExpression
        Identifier: '/// <reference path='fourslash.ts' />

// @Filename: types1.ts
////type A = {};
////export default A;

// @Filename: types2.ts
////export type B = {};
////export type C = {};
////export type D<T> = {};

// @Filename: interface.ts
////import A from './types1';
////import { B, C, D } from './types2';
////
////export interface Base {
////  a: Readonly<A> & { kind: "a"; };
////  b<T extends B = B>(p1: C): D<C>;
////}

// @Filename: index.ts
////import { Base } from './interface';
////
////export class C implements Base {[| |]}

goTo'
        Identifier: 'file'
      StringLiteral
  ExpressionStatement
    CallExpression
      PropertyAccessExpression
        Identifier: '
verify'
        Identifier: 'codeFix'
      ObjectLiteralExpression
        PropertyAssignment
          Identifier: '
  description'
          StringLiteral
        PropertyAssignment
          Identifier: '
  newFileContent'
          NoSubstitutionTemplateLiteral
