// === QuickInfo ===
=== /quickInfoJsDocInheritage.ts ===
// interface A {
//     /**
//      * @description A.foo1
//      */
//     foo1: number;
//     /**
//      * @description A.foo2
//      */
//     foo2: (para1: string) => number;
// }
// 
// interface B {
//     /**
//      * @description B.foo1
//      */
//     foo1: number;
//     /**
//      * @description B.foo2
//      */
//     foo2: (para2: string) => number;
// }
// 
// // implement multi interfaces with duplicate name
// // method for function signature
// class C implements A, B {
//     foo1: number = 1;
//     ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (property) C.foo1: number
// | ```
// | 
// | ----------------------------------------------------------------------
//     foo2(q: string) { return 1 }
//     ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (method) C.foo2(q: string): number
// | ```
// | 
// | ----------------------------------------------------------------------
// }
// 
// // implement multi interfaces with duplicate name
// // property for function signature
// class D implements A, B {
//     foo1: number = 1;
//     ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (property) D.foo1: number
// | ```
// | 
// | ----------------------------------------------------------------------
//     foo2 = (q: string) => { return 1 }
//     ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (property) D.foo2: (q: string) => number
// | ```
// | 
// | ----------------------------------------------------------------------
// }
// 
// new C().foo1;
//         ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (property) C.foo1: number
// | ```
// | 
// | ----------------------------------------------------------------------
// new C().foo2;
//         ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (method) C.foo2(q: string): number
// | ```
// | 
// | ----------------------------------------------------------------------
// new D().foo1;
//         ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (property) D.foo1: number
// | ```
// | 
// | ----------------------------------------------------------------------
// new D().foo2;
//         ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (property) D.foo2: (q: string) => number
// | ```
// | 
// | ----------------------------------------------------------------------
// 
// class Base1 {
//     /**
//      * @description Base1.foo1 
//      */
//     foo1: number = 1;
// 
//     /**
//      * 
//      * @param q Base1.foo2 parameter
//      * @returns Base1.foo2 return
//      */
//      foo2(q: string) { return 1 }
// }
// 
// // extends class and implement interfaces with duplicate name
// // property override method
// class Drived1 extends Base1 implements A {
//     foo1: number = 1;
//     ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (property) Drived1.foo1: number
// | ```
// | 
// | ----------------------------------------------------------------------
//     foo2(para1: string) { return 1 };
//     ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (method) Drived1.foo2(para1: string): number
// | ```
// | 
// | ----------------------------------------------------------------------
// }
// 
// // extends class and implement interfaces with duplicate name
// // method override method
// class Drived2 extends Base1 implements B {
//     foo1: number = 1;
//     ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (property) Drived2.foo1: number
// | ```
// | 
// | ----------------------------------------------------------------------
//     foo2 = (para1: string) => { return 1; };
//     ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (property) Drived2.foo2: (para1: string) => number
// | ```
// | 
// | ----------------------------------------------------------------------
// }
// 
// class Base2 {
//     /**
//      * @description Base2.foo1 
//      */
//     foo1: number = 1;
//     /**
//      * 
//      * @param q Base2.foo2 parameter
//      * @returns Base2.foo2 return
//      */
//     foo2(q: string) { return 1 }
// }
// 
// // extends class and implement interfaces with duplicate name
// // property override method
// class Drived3 extends Base2 implements A {
//     foo1: number = 1;
//     ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (property) Drived3.foo1: number
// | ```
// | 
// | ----------------------------------------------------------------------
//     foo2(para1: string) { return 1 };
//     ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (method) Drived3.foo2(para1: string): number
// | ```
// | 
// | ----------------------------------------------------------------------
// }
// 
// // extends class and implement interfaces with duplicate name
// // method override method
// class Drived4 extends Base2 implements B {
//     foo1: number = 1;
//     ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (property) Drived4.foo1: number
// | ```
// | 
// | ----------------------------------------------------------------------
//     foo2 = (para1: string) => { return 1; };
//     ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (property) Drived4.foo2: (para1: string) => number
// | ```
// | 
// | ----------------------------------------------------------------------
// }
// 
// new Drived1().foo1;
//               ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (property) Drived1.foo1: number
// | ```
// | 
// | ----------------------------------------------------------------------
// new Drived1().foo2;
//               ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (method) Drived1.foo2(para1: string): number
// | ```
// | 
// | ----------------------------------------------------------------------
// new Drived2().foo1;
//               ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (property) Drived2.foo1: number
// | ```
// | 
// | ----------------------------------------------------------------------
// new Drived2().foo2;
//               ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (property) Drived2.foo2: (para1: string) => number
// | ```
// | 
// | ----------------------------------------------------------------------
// new Drived3().foo1;
//               ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (property) Drived3.foo1: number
// | ```
// | 
// | ----------------------------------------------------------------------
// new Drived3().foo2;
//               ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (method) Drived3.foo2(para1: string): number
// | ```
// | 
// | ----------------------------------------------------------------------
// new Drived4().foo1;
//               ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (property) Drived4.foo1: number
// | ```
// | 
// | ----------------------------------------------------------------------
// new Drived4().foo2;
//               ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (property) Drived4.foo2: (para1: string) => number
// | ```
// | 
// | ----------------------------------------------------------------------
