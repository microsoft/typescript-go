// === QuickInfo ===
=== /quickInfoJsDocGetterSetter.ts ===
// class A {
//     /**
//      * getter A
//      * @returns return A
//      */
//     get x(): string {
//         ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (accessor) A.x: string
// | ```
// | getter A
// | 
// | *@returns* — return A
// | 
// | ----------------------------------------------------------------------
//         return "";
//     }
//     /**
//      * setter A
//      * @param value foo A
//      * @todo empty jsdoc
//      */
//     set x(value) { }
//         ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (accessor) A.x: string
// | ```
// | getter A
// | 
// | *@returns* — return A
// | 
// | ----------------------------------------------------------------------
// }
// // override both getter and setter
// class B extends A {
//     /**
//      * getter B
//      * @returns return B
//      */
//     get x(): string {
//         ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (accessor) B.x: string
// | ```
// | getter B
// | 
// | *@returns* — return B
// | 
// | ----------------------------------------------------------------------
//         return "";
//     }
//     /**
//      * setter B
//      * @param value foo B
//      */
//     set x(vale) { }
//         ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (accessor) B.x: string
// | ```
// | getter B
// | 
// | *@returns* — return B
// | 
// | ----------------------------------------------------------------------
// }
// // not override
// class C extends A { }
// // only override setter
// class D extends A {
//     /**
//      * setter D
//      * @param value foo D
//      */
//     set x(val: string) { }
//         ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (accessor) D.x: string
// | ```
// | setter D
// | 
// | *@param* `value` — foo D
// | 
// | ----------------------------------------------------------------------
// }
// new A().x = "1";
//         ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (accessor) A.x: string
// | ```
// | getter A
// | 
// | *@returns* — return A
// | 
// | ----------------------------------------------------------------------
// new B().x = "1";
//         ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (accessor) B.x: string
// | ```
// | getter B
// | 
// | *@returns* — return B
// | 
// | ----------------------------------------------------------------------
// new C().x = "1";
//         ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (accessor) A.x: string
// | ```
// | getter A
// | 
// | *@returns* — return A
// | 
// | ----------------------------------------------------------------------
// new D().x = "1";
//         ^
// | ----------------------------------------------------------------------
// | ```tsx
// | (accessor) D.x: string
// | ```
// | setter D
// | 
// | *@param* `value` — foo D
// | 
// | ----------------------------------------------------------------------
