// === findRenameLocations ===
// === /renameDeclarationKeywords.ts ===

// class Base {}
// interface Implemented1 {}
// class /*RENAME*/[|C1RENAME|] extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// // --- (line: 7) skipped ---




// === findRenameLocations ===
// === /renameDeclarationKeywords.ts ===

// /*RENAME*/class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
// // --- (line: 5) skipped ---




// === findRenameLocations ===
// === /renameDeclarationKeywords.ts ===

// /*RENAME*/class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
// // --- (line: 5) skipped ---




// === findRenameLocations ===
// === /renameDeclarationKeywords.ts ===

// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     /*RENAME*/get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends Base { }
// // --- (line: 8) skipped ---




// === findRenameLocations ===
// === /renameDeclarationKeywords.ts ===

// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     /*RENAME*/set e(v) {}
// }
// interface I1 extends Base { }
// type T = { }
// // --- (line: 9) skipped ---




// === findRenameLocations ===
// === /renameDeclarationKeywords.ts ===

// --- (line: 3) skipped ---
//     get e() { return 1; }
//     set e(v) {}
// }
// interface /*RENAME*/[|I1RENAME|] extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// // --- (line: 11) skipped ---




// === findRenameLocations ===
// === /renameDeclarationKeywords.ts ===

// /*RENAME*/class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
// // --- (line: 5) skipped ---




// === findRenameLocations ===
// === /renameDeclarationKeywords.ts ===

// --- (line: 4) skipped ---
//     set e(v) {}
// }
// interface I1 extends Base { }
// type /*RENAME*/[|TRENAME|] = { }
// enum E { }
// namespace N { }
// module M { }
// // --- (line: 12) skipped ---




// === findRenameLocations ===
// === /renameDeclarationKeywords.ts ===

// --- (line: 5) skipped ---
// }
// interface I1 extends Base { }
// type T = { }
// enum /*RENAME*/[|ERENAME|] { }
// namespace N { }
// module M { }
// function fn() {}
// // --- (line: 13) skipped ---




// === findRenameLocations ===
// === /renameDeclarationKeywords.ts ===

// --- (line: 6) skipped ---
// interface I1 extends Base { }
// type T = { }
// enum E { }
// namespace /*RENAME*/[|NRENAME|] { }
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;




// === findRenameLocations ===
// === /renameDeclarationKeywords.ts ===

// --- (line: 7) skipped ---
// type T = { }
// enum E { }
// namespace N { }
// module /*RENAME*/[|MRENAME|] { }
// function fn() {}
// var x;
// let y;
// const z = 1;




// === findRenameLocations ===
// === /renameDeclarationKeywords.ts ===

// --- (line: 8) skipped ---
// enum E { }
// namespace N { }
// module M { }
// function /*RENAME*/[|fnRENAME|]() {}
// var x;
// let y;
// const z = 1;




// === findRenameLocations ===
// === /renameDeclarationKeywords.ts ===

// --- (line: 9) skipped ---
// namespace N { }
// module M { }
// function fn() {}
// var /*RENAME*/[|xRENAME|];
// let y;
// const z = 1;




// === findRenameLocations ===
// === /renameDeclarationKeywords.ts ===

// --- (line: 10) skipped ---
// module M { }
// function fn() {}
// var x;
// let /*RENAME*/[|yRENAME|];
// const z = 1;




// === findRenameLocations ===
// === /renameDeclarationKeywords.ts ===

// --- (line: 11) skipped ---
// function fn() {}
// var x;
// let y;
// const /*RENAME*/[|zRENAME|] = 1;
