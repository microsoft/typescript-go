// === findAllReferences ===




// === findAllReferences ===
// === /getOccurrencesIsDefinitionOfInterfaceClassMerge.ts ===

// interface /*FIND ALL REFS*/[|Numbers|] {
//     p: number;
// }
// interface [|Numbers|] {
//     m: number;
// }
// class [|Numbers|] {
//     f(n: number) {
//         return this.p + this.m + n;
//     }
// }
// let i: [|Numbers|] = new [|Numbers|]();
// let x = i.f(i.p + i.m);




// === findAllReferences ===




// === findAllReferences ===
// === /getOccurrencesIsDefinitionOfInterfaceClassMerge.ts ===

// interface [|Numbers|] {
//     p: number;
// }
// interface /*FIND ALL REFS*/[|Numbers|] {
//     m: number;
// }
// class [|Numbers|] {
//     f(n: number) {
//         return this.p + this.m + n;
//     }
// }
// let i: [|Numbers|] = new [|Numbers|]();
// let x = i.f(i.p + i.m);




// === findAllReferences ===




// === findAllReferences ===
// === /getOccurrencesIsDefinitionOfInterfaceClassMerge.ts ===

// interface [|Numbers|] {
//     p: number;
// }
// interface [|Numbers|] {
//     m: number;
// }
// class /*FIND ALL REFS*/[|Numbers|] {
//     f(n: number) {
//         return this.p + this.m + n;
//     }
// }
// let i: [|Numbers|] = new [|Numbers|]();
// let x = i.f(i.p + i.m);




// === findAllReferences ===
// === /getOccurrencesIsDefinitionOfInterfaceClassMerge.ts ===

// interface [|Numbers|] {
//     p: number;
// }
// interface [|Numbers|] {
//     m: number;
// }
// class [|Numbers|] {
//     f(n: number) {
//         return this.p + this.m + n;
//     }
// }
// let i: /*FIND ALL REFS*/[|Numbers|] = new [|Numbers|]();
// let x = i.f(i.p + i.m);




// === findAllReferences ===
// === /getOccurrencesIsDefinitionOfInterfaceClassMerge.ts ===

// interface [|Numbers|] {
//     p: number;
// }
// interface [|Numbers|] {
//     m: number;
// }
// class [|Numbers|] {
//     f(n: number) {
//         return this.p + this.m + n;
//     }
// }
// let i: Numbers = new /*FIND ALL REFS*/[|Numbers|] = new [|Numbers|]();
// let x = i.f(i.p + i.m);
