SourceFile
  ImportDeclaration
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' RootResult'
        ImportSpecifier
          Identifier: ' ParseMode'
    StringLiteral
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' JtpMode'
    UnionType
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' CatharsisMode'
    UnionType
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' CompareMode'
    UnionType
      TypeReference
        Identifier: ' ParseMode'
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
  InterfaceDeclaration
    Identifier: ' BaseFixture'
    PropertySignature
      Identifier: '
    /**
     * The input that should be parsed
     */
    input'
      StringKeyword
    PropertySignature
      Identifier: '
    jtp'
      QuestionToken
      MappedType
        TypeParameter
          Identifier: 'K'
          TypeReference
            Identifier: ' JtpMode'
        TypeReference
          Identifier: ' CompareMode'
    PropertySignature
      Identifier: '
    catharsis'
      QuestionToken
      MappedType
        TypeParameter
          Identifier: 'K'
          TypeReference
            Identifier: ' CatharsisMode'
        TypeReference
          Identifier: ' CompareMode'
    PropertySignature
      Identifier: '
    /**
     * The expected parse result object. If you expect different parse results for different parse modes please use
     * `diffExpected`.
     */
    expected'
      QuestionToken
      TypeReference
        Identifier: ' RootResult'
    PropertySignature
      Identifier: '
    /**
     * The expected parse results objects for different modes. If a mode is included in `modes` and as a key of
     * `diffExpected` the object in `diffExpected` is used over the result in `expected`.
     */
    diffExpected'
      QuestionToken
      MappedType
        TypeParameter
          Identifier: 'K'
          TypeReference
            Identifier: ' ParseMode'
        QuestionToken
        TypeReference
          Identifier: ' RootResult'
    PropertySignature
      Identifier: '
    /**
     * If the stringified output differs from the input it can be provided here. These are mostly whitespace differences.
     */
    stringified'
      QuestionToken
      StringKeyword
  TypeAliasDeclaration
    Identifier: ' SuccessFixture'
    IntersectionType
      TypeReference
        Identifier: ' BaseFixture'
      TypeLiteral
        PropertySignature
          Identifier: '
    /**
     * The {@link ParseMode}s that the expression is expected to get parsed in. In all other modes it is expected to fail.
     */
    modes'
          ArrayType
            TypeReference
              Identifier: ' ParseMode'
  TypeAliasDeclaration
    Identifier: ' ErrorFixture'
    IntersectionType
      TypeReference
        Identifier: ' BaseFixture'
      ParenthesizedType
        UnionType
          TypeLiteral
            PropertySignature
              Identifier: '
    error'
              StringKeyword
          TypeLiteral
            PropertySignature
              Identifier: '
    errors'
              MappedType
                TypeParameter
                  Identifier: 'K'
                  TypeReference
                    Identifier: ' ParseMode'
                QuestionToken
                StringKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' Fixture'
    UnionType
      TypeReference
        Identifier: ' SuccessFixture'
      TypeReference
        Identifier: ' ErrorFixture'
  FunctionDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' testFixture'
    Parameter
      Identifier: 'fixture'
      TypeReference
        Identifier: ' Fixture'
    VoidKeyword
  ExportDeclaration
    NamedExports
