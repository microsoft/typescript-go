SourceFile
  ModuleDeclaration
    DeclareKeyword
    StringLiteral
    ModuleBlock
      ImportDeclaration
        ImportClause
          NamedImports
            ImportSpecifier
              Identifier: ' AsyncCompleter'
            ImportSpecifier
              Identifier: ' Completer'
            ImportSpecifier
              Identifier: ' Direction'
            ImportSpecifier
              Identifier: ' Interface'
              Identifier: ' _Interface'
            ImportSpecifier
              Identifier: ' ReadLineOptions'
        StringLiteral
      ImportDeclaration
        ImportClause
          NamedImports
            ImportSpecifier
              Identifier: ' Abortable'
        StringLiteral
      ClassDeclaration
        Identifier: ' Interface'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' _Interface'
        MethodDeclaration
          Identifier: '
        /**
         * The `rl.question()` method displays the `query` by writing it to the `output`,
         * waits for user input to be provided on `input`, then invokes the `callback` function passing the provided input as the first argument.
         *
         * When called, `rl.question()` will resume the `input` stream if it has been
         * paused.
         *
         * If the `Interface` was created with `output` set to `null` or `undefined` the `query` is not written.
         *
         * If the question is called after `rl.close()`, it returns a rejected promise.
         *
         * Example usage:
         *
         * ```js
         * const answer = await rl.question('What is your favorite food? ');
         * console.log(`Oh, so your favorite food is ${answer}`);
         * ```
         *
         * Using an `AbortSignal` to cancel a question.
         *
         * ```js
         * const signal = AbortSignal.timeout(10_000);
         *
         * signal.addEventListener('abort', () => {
         *   console.log('The food question timed out');
         * }, { once: true });
         *
         * const answer = await rl.question('What is your favorite food? ', { signal });
         * console.log(`Oh, so your favorite food is ${answer}`);
         * ```
         * @since v17.0.0
         * @param query A statement or query to write to `output`, prepended to the prompt.
         * @return A promise that is fulfilled with the user's input in response to the `query`.
         */
        question'
          Parameter
            Identifier: 'query'
            StringKeyword
          TypeReference
            Identifier: ' Promise'
            StringKeyword
        MethodDeclaration
          Identifier: '
        question'
          Parameter
            Identifier: 'query'
            StringKeyword
          Parameter
            Identifier: ' options'
            TypeReference
              Identifier: ' Abortable'
          TypeReference
            Identifier: ' Promise'
            StringKeyword
      ClassDeclaration
        Identifier: ' Readline'
        Constructor
          Parameter
            Identifier: '
            stream'
            TypeReference
              QualifiedName
                Identifier: ' NodeJS'
                Identifier: 'WritableStream'
          Parameter
            Identifier: '
            options'
            QuestionToken
            TypeLiteral
              PropertySignature
                Identifier: '
                autoCommit'
                QuestionToken
                BooleanKeyword
        MethodDeclaration
          Identifier: '
        /**
         * The `rl.clearLine()` method adds to the internal list of pending action an
         * action that clears current line of the associated `stream` in a specified
         * direction identified by `dir`.
         * Call `rl.commit()` to see the effect of this method, unless `autoCommit: true` was passed to the constructor.
         * @since v17.0.0
         * @return this
         */
        clearLine'
          Parameter
            Identifier: 'dir'
            TypeReference
              Identifier: ' Direction'
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * The `rl.clearScreenDown()` method adds to the internal list of pending action an
         * action that clears the associated stream from the current position of the
         * cursor down.
         * Call `rl.commit()` to see the effect of this method, unless `autoCommit: true` was passed to the constructor.
         * @since v17.0.0
         * @return this
         */
        clearScreenDown'
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * The `rl.commit()` method sends all the pending actions to the associated `stream` and clears the internal list of pending actions.
         * @since v17.0.0
         */
        commit'
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * The `rl.cursorTo()` method adds to the internal list of pending action an action
         * that moves cursor to the specified position in the associated `stream`.
         * Call `rl.commit()` to see the effect of this method, unless `autoCommit: true` was passed to the constructor.
         * @since v17.0.0
         * @return this
         */
        cursorTo'
          Parameter
            Identifier: 'x'
            NumberKeyword
          Parameter
            Identifier: ' y'
            QuestionToken
            NumberKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * The `rl.moveCursor()` method adds to the internal list of pending action an
         * action that moves the cursor _relative_ to its current position in the
         * associated `stream`.
         * Call `rl.commit()` to see the effect of this method, unless `autoCommit: true` was passed to the constructor.
         * @since v17.0.0
         * @return this
         */
        moveCursor'
          Parameter
            Identifier: 'dx'
            NumberKeyword
          Parameter
            Identifier: ' dy'
            NumberKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * The `rl.rollback` methods clears the internal list of pending actions without
         * sending it to the associated `stream`.
         * @since v17.0.0
         * @return this
         */
        rollback'
          ThisType
      FunctionDeclaration
        Identifier: ' createInterface'
        Parameter
          Identifier: '
        input'
          TypeReference
            QualifiedName
              Identifier: ' NodeJS'
              Identifier: 'ReadableStream'
        Parameter
          Identifier: '
        output'
          QuestionToken
          TypeReference
            QualifiedName
              Identifier: ' NodeJS'
              Identifier: 'WritableStream'
        Parameter
          Identifier: '
        completer'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' Completer'
            TypeReference
              Identifier: ' AsyncCompleter'
        Parameter
          Identifier: '
        terminal'
          QuestionToken
          BooleanKeyword
        TypeReference
          Identifier: ' Interface'
      FunctionDeclaration
        Identifier: ' createInterface'
        Parameter
          Identifier: 'options'
          TypeReference
            Identifier: ' ReadLineOptions'
        TypeReference
          Identifier: ' Interface'
  ModuleDeclaration
    DeclareKeyword
    StringLiteral
    ModuleBlock
      ExportDeclaration
        StringLiteral
