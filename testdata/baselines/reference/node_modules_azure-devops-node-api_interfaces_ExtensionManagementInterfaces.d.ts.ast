SourceFile
  ImportEqualsDeclaration
    Identifier: ' GalleryInterfaces'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' VSSInterfaces'
    ExternalModuleReference
      StringLiteral
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' AcquisitionAssignmentType'
    EnumMember
      Identifier: '
    None'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Just assign for me
     */
    Me'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Assign for all users in the account
     */
    All'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' AcquisitionOperation'
    PropertySignature
      Identifier: '
    /**
     * State of the AcquisitionOperation for the current user
     */
    operationState'
      QuestionToken
      TypeReference
        Identifier: ' AcquisitionOperationState'
    PropertySignature
      Identifier: '
    /**
     * AcquisitionOperationType: install, request, buy, etc...
     */
    operationType'
      QuestionToken
      TypeReference
        Identifier: ' AcquisitionOperationType'
    PropertySignature
      Identifier: '
    /**
     * Optional reason to justify current state. Typically used with Disallow state.
     */
    reason'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * List of reasons indicating why the operation is not allowed.
     */
    reasons'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' AcquisitionOperationDisallowReason'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' AcquisitionOperationDisallowReason'
    PropertySignature
      Identifier: '
    /**
     * User-friendly message clarifying the reason for disallowance
     */
    message'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Type of reason for disallowance - AlreadyInstalled, UnresolvedDemand, etc.
     */
    type'
      QuestionToken
      StringKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' AcquisitionOperationState'
    EnumMember
      Identifier: '
    /**
     * Not allowed to use this AcquisitionOperation
     */
    Disallow'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Allowed to use this AcquisitionOperation
     */
    Allow'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Operation has already been completed and is no longer available
     */
    Completed'
      NumericLiteral
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' AcquisitionOperationType'
    EnumMember
      Identifier: '
    /**
     * Not yet used
     */
    Get'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Install this extension into the host provided
     */
    Install'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Buy licenses for this extension and install into the host provided
     */
    Buy'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Try this extension
     */
    Try'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Request this extension for installation
     */
    Request'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * No action found
     */
    None'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Request admins for purchasing extension
     */
    PurchaseRequest'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' AcquisitionOptions'
    PropertySignature
      Identifier: '
    /**
     * Default Operation for the ItemId in this target
     */
    defaultOperation'
      QuestionToken
      TypeReference
        Identifier: ' AcquisitionOperation'
    PropertySignature
      Identifier: '
    /**
     * The item id that this options refer to
     */
    itemId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Operations allowed for the ItemId in this target
     */
    operations'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' AcquisitionOperation'
    PropertySignature
      Identifier: '
    /**
     * Additional properties which can be added to the request.
     */
    properties'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * The target that this options refer to
     */
    target'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ClientContribution'
    PropertySignature
      Identifier: '
    /**
     * Description of the contribution/type
     */
    description'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Fully qualified identifier of the contribution/type
     */
    id'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Includes is a set of contributions that should have this contribution included in their targets list.
     */
    includes'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Properties/attributes of this contribution
     */
    properties'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * The ids of the contribution(s) that this contribution targets. (parent contributions)
     */
    targets'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Id of the Contribution Type
     */
    type'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ClientContributionNode'
    PropertySignature
      Identifier: '
    /**
     * List of ids for contributions which are children to the current contribution.
     */
    children'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Contribution associated with this node.
     */
    contribution'
      QuestionToken
      TypeReference
        Identifier: ' ClientContribution'
    PropertySignature
      Identifier: '
    /**
     * List of ids for contributions which are parents to the current contribution.
     */
    parents'
      QuestionToken
      ArrayType
        StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ClientContributionProviderDetails'
    PropertySignature
      Identifier: '
    /**
     * Friendly name for the provider.
     */
    displayName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Unique identifier for this provider. The provider name can be used to cache the contribution data and refer back to it when looking for changes
     */
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Properties associated with the provider
     */
    properties'
      QuestionToken
      TypeLiteral
        IndexSignature
          Parameter
            Identifier: 'key'
            StringKeyword
          StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Version of contributions associated with this contribution provider.
     */
    version'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ClientDataProviderQuery'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' DataProviderQuery'
    PropertySignature
      Identifier: '
    /**
     * The Id of the service instance type that should be communicated with in order to resolve the data providers from the client given the query values.
     */
    queryServiceInstanceType'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Contribution'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' ContributionBase'
    PropertySignature
      Identifier: '
    /**
     * List of constraints (filters) that should be applied to the availability of this contribution
     */
    constraints'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' ContributionConstraint'
    PropertySignature
      Identifier: '
    /**
     * Includes is a set of contributions that should have this contribution included in their targets list.
     */
    includes'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Properties/attributes of this contribution
     */
    properties'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * List of demanded claims in order for the user to see this contribution (like anonymous, public, member...).
     */
    restrictedTo'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The ids of the contribution(s) that this contribution targets. (parent contributions)
     */
    targets'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Id of the Contribution Type
     */
    type'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ContributionBase'
    PropertySignature
      Identifier: '
    /**
     * Description of the contribution/type
     */
    description'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Fully qualified identifier of the contribution/type
     */
    id'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * VisibleTo can be used to restrict whom can reference a given contribution/type. This value should be a list of publishers or extensions access is restricted too.  Examples: "ms" - Means only the "ms" publisher can reference this. "ms.vss-web" - Means only the "vss-web" extension from the "ms" publisher can reference this.
     */
    visibleTo'
      QuestionToken
      ArrayType
        StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ContributionConstraint'
    PropertySignature
      Identifier: '
    /**
     * An optional property that can be specified to group constraints together. All constraints within a group are AND'd together (all must be evaluate to True in order for the contribution to be included). Different groups of constraints are OR'd (only one group needs to evaluate to True for the contribution to be included).
     */
    group'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Fully qualified identifier of a shared constraint
     */
    id'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * If true, negate the result of the filter (include the contribution if the applied filter returns false instead of true)
     */
    inverse'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Name of the IContributionFilter plugin
     */
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Properties that are fed to the contribution filter class
     */
    properties'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * Constraints can be optionally be applied to one or more of the relationships defined in the contribution. If no relationships are defined then all relationships are associated with the constraint. This means the default behaviour will eliminate the contribution from the tree completely if the constraint is applied.
     */
    relationships'
      QuestionToken
      ArrayType
        StringKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' ContributionLicensingBehaviorType'
    EnumMember
      Identifier: '
    /**
     * Default value - only include the contribution if the user is licensed for the extension
     */
    OnlyIfLicensed'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Only include the contribution if the user is NOT licensed for the extension
     */
    OnlyIfUnlicensed'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Always include the contribution regardless of whether or not the user is licensed for the extension
     */
    AlwaysInclude'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ContributionNodeQuery'
    PropertySignature
      Identifier: '
    /**
     * The contribution ids of the nodes to find.
     */
    contributionIds'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Contextual information that can be leveraged by contribution constraints
     */
    dataProviderContext'
      QuestionToken
      TypeReference
        Identifier: ' DataProviderContext'
    PropertySignature
      Identifier: '
    /**
     * Indicator if contribution provider details should be included in the result.
     */
    includeProviderDetails'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Query options tpo be used when fetching ContributionNodes
     */
    queryOptions'
      QuestionToken
      TypeReference
        Identifier: ' ContributionQueryOptions'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ContributionNodeQueryResult'
    PropertySignature
      Identifier: '
    /**
     * Map of contribution ids to corresponding node.
     */
    nodes'
      QuestionToken
      TypeLiteral
        IndexSignature
          Parameter
            Identifier: 'key'
            StringKeyword
          TypeReference
            Identifier: ' ClientContributionNode'
    PropertySignature
      Identifier: '
    /**
     * Map of provider ids to the corresponding provider details object.
     */
    providerDetails'
      QuestionToken
      TypeLiteral
        IndexSignature
          Parameter
            Identifier: 'key'
            StringKeyword
          TypeReference
            Identifier: ' ClientContributionProviderDetails'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ContributionPropertyDescription'
    PropertySignature
      Identifier: '
    /**
     * Description of the property
     */
    description'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Name of the property
     */
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * True if this property is required
     */
    required'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * The type of value used for this property
     */
    type'
      QuestionToken
      TypeReference
        Identifier: ' ContributionPropertyType'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' ContributionPropertyType'
    EnumMember
      Identifier: '
    /**
     * Contribution type is unknown (value may be anything)
     */
    Unknown'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Value is a string
     */
    String'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Value is a Uri
     */
    Uri'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Value is a GUID
     */
    Guid'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Value is True or False
     */
    Boolean'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Value is an integer
     */
    Integer'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Value is a double
     */
    Double'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Value is a DateTime object
     */
    DateTime'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Value is a generic Dictionary/JObject/property bag
     */
    Dictionary'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Value is an array
     */
    Array'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Value is an arbitrary/custom object
     */
    Object'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ContributionProviderDetails'
    PropertySignature
      Identifier: '
    /**
     * Friendly name for the provider.
     */
    displayName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Unique identifier for this provider. The provider name can be used to cache the contribution data and refer back to it when looking for changes
     */
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Properties associated with the provider
     */
    properties'
      QuestionToken
      TypeLiteral
        IndexSignature
          Parameter
            Identifier: 'key'
            StringKeyword
          StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Version of contributions associated with this contribution provider.
     */
    version'
      QuestionToken
      StringKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' ContributionQueryOptions'
    EnumMember
      Identifier: '
    None'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Include the direct contributions that have the ids queried.
     */
    IncludeSelf'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Include the contributions that directly target the contributions queried.
     */
    IncludeChildren'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Include the contributions from the entire sub-tree targeting the contributions queried.
     */
    IncludeSubTree'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Include the contribution being queried as well as all contributions that target them recursively.
     */
    IncludeAll'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Some callers may want the entire tree back without constraint evaluation being performed.
     */
    IgnoreConstraints'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ContributionType'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' ContributionBase'
    PropertySignature
      Identifier: '
    /**
     * Controls whether or not contributions of this type have the type indexed for queries. This allows clients to find all extensions that have a contribution of this type.  NOTE: Only TrustedPartners are allowed to specify indexed contribution types.
     */
    indexed'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Friendly name of the contribution/type
     */
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Describes the allowed properties for this contribution type
     */
    properties'
      QuestionToken
      TypeLiteral
        IndexSignature
          Parameter
            Identifier: 'key'
            StringKeyword
          TypeReference
            Identifier: ' ContributionPropertyDescription'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' DataProviderContext'
    PropertySignature
      Identifier: '
    /**
     * Generic property bag that contains context-specific properties that data providers can use when populating their data dictionary
     */
    properties'
      QuestionToken
      TypeLiteral
        IndexSignature
          Parameter
            Identifier: 'key'
            StringKeyword
          AnyKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' DataProviderExceptionDetails'
    PropertySignature
      Identifier: '
    /**
     * The type of the exception that was thrown.
     */
    exceptionType'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Message that is associated with the exception.
     */
    message'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The StackTrace from the exception turned into a string.
     */
    stackTrace'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' DataProviderQuery'
    PropertySignature
      Identifier: '
    /**
     * Contextual information to pass to the data providers
     */
    context'
      QuestionToken
      TypeReference
        Identifier: ' DataProviderContext'
    PropertySignature
      Identifier: '
    /**
     * The contribution ids of the data providers to resolve
     */
    contributionIds'
      QuestionToken
      ArrayType
        StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' DataProviderResult'
    PropertySignature
      Identifier: '
    /**
     * This is the set of data providers that were requested, but either they were defined as client providers, or as remote providers that failed and may be retried by the client.
     */
    clientProviders'
      QuestionToken
      TypeLiteral
        IndexSignature
          Parameter
            Identifier: 'key'
            StringKeyword
          TypeReference
            Identifier: ' ClientDataProviderQuery'
    PropertySignature
      Identifier: '
    /**
     * Property bag of data keyed off of the data provider contribution id
     */
    data'
      QuestionToken
      TypeLiteral
        IndexSignature
          Parameter
            Identifier: 'key'
            StringKeyword
          AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * Set of exceptions that occurred resolving the data providers.
     */
    exceptions'
      QuestionToken
      TypeLiteral
        IndexSignature
          Parameter
            Identifier: 'key'
            StringKeyword
          TypeReference
            Identifier: ' DataProviderExceptionDetails'
    PropertySignature
      Identifier: '
    /**
     * List of data providers resolved in the data-provider query
     */
    resolvedProviders'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' ResolvedDataProvider'
    PropertySignature
      Identifier: '
    /**
     * Scope name applied to this data provider result.
     */
    scopeName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Scope value applied to this data provider result.
     */
    scopeValue'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Property bag of shared data that was contributed to by any of the individual data providers
     */
    sharedData'
      QuestionToken
      TypeLiteral
        IndexSignature
          Parameter
            Identifier: 'key'
            StringKeyword
          AnyKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' DataProviderSharedData'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionAcquisitionRequest'
    PropertySignature
      Identifier: '
    /**
     * How the item is being assigned
     */
    assignmentType'
      QuestionToken
      TypeReference
        Identifier: ' AcquisitionAssignmentType'
    PropertySignature
      Identifier: '
    /**
     * The id of the subscription used for purchase
     */
    billingId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The marketplace id (publisherName.extensionName) for the item
     */
    itemId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The type of operation, such as install, request, purchase
     */
    operationType'
      QuestionToken
      TypeReference
        Identifier: ' AcquisitionOperationType'
    PropertySignature
      Identifier: '
    /**
     * Additional properties which can be added to the request.
     */
    properties'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * How many licenses should be purchased
     */
    quantity'
      QuestionToken
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionAuditLog'
    PropertySignature
      Identifier: '
    /**
     * Collection of audit log entries
     */
    entries'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' ExtensionAuditLogEntry'
    PropertySignature
      Identifier: '
    /**
     * Extension that the change was made for
     */
    extensionName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Publisher that the extension is part of
     */
    publisherName'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionAuditLogEntry'
    PropertySignature
      Identifier: '
    /**
     * Change that was made to extension
     */
    auditAction'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Date at which the change was made
     */
    auditDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * Extra information about the change
     */
    comment'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Represents the user who made the change
     */
    updatedBy'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' VSSInterfaces'
          Identifier: 'IdentityRef'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionAuthorization'
    PropertySignature
      Identifier: '
    id'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    scopes'
      QuestionToken
      ArrayType
        StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionDataCollection'
    PropertySignature
      Identifier: '
    /**
     * The name of the collection
     */
    collectionName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * A list of documents belonging to the collection
     */
    documents'
      QuestionToken
      ArrayType
        AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * The type of the collection's scope, such as Default or User
     */
    scopeType'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The value of the collection's scope, such as Current or Me
     */
    scopeValue'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionDataCollectionQuery'
    PropertySignature
      Identifier: '
    /**
     * A list of collections to query
     */
    collections'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' ExtensionDataCollection'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionEvent'
    PropertySignature
      Identifier: '
    /**
     * The extension which has been updated
     */
    extension'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' GalleryInterfaces'
          Identifier: 'PublishedExtension'
    PropertySignature
      Identifier: '
    /**
     * The current version of the extension that was updated
     */
    extensionVersion'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Name of the collection for which the extension was requested
     */
    host'
      QuestionToken
      TypeReference
        Identifier: ' ExtensionHost'
    PropertySignature
      Identifier: '
    /**
     * Gallery host url
     */
    links'
      QuestionToken
      TypeReference
        Identifier: ' ExtensionEventUrls'
    PropertySignature
      Identifier: '
    /**
     * Represents the user who initiated the update
     */
    modifiedBy'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' VSSInterfaces'
          Identifier: 'IdentityRef'
    PropertySignature
      Identifier: '
    /**
     * The type of update that was made
     */
    updateType'
      QuestionToken
      TypeReference
        Identifier: ' ExtensionUpdateType'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionEventCallback'
    PropertySignature
      Identifier: '
    /**
     * The uri of the endpoint that is hit when an event occurs
     */
    uri'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionEventCallbackCollection'
    PropertySignature
      Identifier: '
    /**
     * Optional.  Defines an endpoint that gets called via a POST request to notify that an extension disable has occurred.
     */
    postDisable'
      QuestionToken
      TypeReference
        Identifier: ' ExtensionEventCallback'
    PropertySignature
      Identifier: '
    /**
     * Optional.  Defines an endpoint that gets called via a POST request to notify that an extension enable has occurred.
     */
    postEnable'
      QuestionToken
      TypeReference
        Identifier: ' ExtensionEventCallback'
    PropertySignature
      Identifier: '
    /**
     * Optional.  Defines an endpoint that gets called via a POST request to notify that an extension install has completed.
     */
    postInstall'
      QuestionToken
      TypeReference
        Identifier: ' ExtensionEventCallback'
    PropertySignature
      Identifier: '
    /**
     * Optional.  Defines an endpoint that gets called via a POST request to notify that an extension uninstall has occurred.
     */
    postUninstall'
      QuestionToken
      TypeReference
        Identifier: ' ExtensionEventCallback'
    PropertySignature
      Identifier: '
    /**
     * Optional.  Defines an endpoint that gets called via a POST request to notify that an extension update has occurred.
     */
    postUpdate'
      QuestionToken
      TypeReference
        Identifier: ' ExtensionEventCallback'
    PropertySignature
      Identifier: '
    /**
     * Optional.  Defines an endpoint that gets called via a POST request to notify that an extension install is about to occur.  Response indicates whether to proceed or abort.
     */
    preInstall'
      QuestionToken
      TypeReference
        Identifier: ' ExtensionEventCallback'
    PropertySignature
      Identifier: '
    /**
     * For multi-version extensions, defines an endpoint that gets called via an OPTIONS request to determine the particular version of the extension to be used
     */
    versionCheck'
      QuestionToken
      TypeReference
        Identifier: ' ExtensionEventCallback'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionEventUrls'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' ExtensionUrls'
    PropertySignature
      Identifier: '
    /**
     * Url of the extension management page
     */
    manageExtensionsPage'
      QuestionToken
      StringKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' ExtensionFlags'
    EnumMember
      Identifier: '
    /**
     * A built-in extension is installed for all VSTS accounts by default
     */
    BuiltIn'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The extension comes from a fully-trusted publisher
     */
    Trusted'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionHost'
    PropertySignature
      Identifier: '
    id'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    name'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionLicensing'
    PropertySignature
      Identifier: '
    /**
     * A list of contributions which deviate from the default licensing behavior
     */
    overrides'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' LicensingOverride'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionManifest'
    PropertySignature
      Identifier: '
    /**
     * Uri used as base for other relative uri's defined in extension
     */
    baseUri'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * List of shared constraints defined by this extension
     */
    constraints'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' ContributionConstraint'
    PropertySignature
      Identifier: '
    /**
     * List of contributions made by this extension
     */
    contributions'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' Contribution'
    PropertySignature
      Identifier: '
    /**
     * List of contribution types defined by this extension
     */
    contributionTypes'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' ContributionType'
    PropertySignature
      Identifier: '
    /**
     * List of explicit demands required by this extension
     */
    demands'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Collection of endpoints that get called when particular extension events occur
     */
    eventCallbacks'
      QuestionToken
      TypeReference
        Identifier: ' ExtensionEventCallbackCollection'
    PropertySignature
      Identifier: '
    /**
     * Secondary location that can be used as base for other relative uri's defined in extension
     */
    fallbackBaseUri'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Language Culture Name set by the Gallery
     */
    language'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * How this extension behaves with respect to licensing
     */
    licensing'
      QuestionToken
      TypeReference
        Identifier: ' ExtensionLicensing'
    PropertySignature
      Identifier: '
    /**
     * Version of the extension manifest format/content
     */
    manifestVersion'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Default user claims applied to all contributions (except the ones which have been specified restrictedTo explicitly) to control the visibility of a contribution.
     */
    restrictedTo'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * List of all oauth scopes required by this extension
     */
    scopes'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The ServiceInstanceType(Guid) of the VSTS service that must be available to an account in order for the extension to be installed
     */
    serviceInstanceType'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionRequest'
    PropertySignature
      Identifier: '
    /**
     * Required message supplied if the request is rejected
     */
    rejectMessage'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Date at which the request was made
     */
    requestDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * Represents the user who made the request
     */
    requestedBy'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' VSSInterfaces'
          Identifier: 'IdentityRef'
    PropertySignature
      Identifier: '
    /**
     * Optional message supplied by the requester justifying the request
     */
    requestMessage'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Represents the state of the request
     */
    requestState'
      QuestionToken
      TypeReference
        Identifier: ' ExtensionRequestState'
    PropertySignature
      Identifier: '
    /**
     * Date at which the request was resolved
     */
    resolveDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * Represents the user who resolved the request
     */
    resolvedBy'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' VSSInterfaces'
          Identifier: 'IdentityRef'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionRequestEvent'
    PropertySignature
      Identifier: '
    /**
     * The extension which has been requested
     */
    extension'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' GalleryInterfaces'
          Identifier: 'PublishedExtension'
    PropertySignature
      Identifier: '
    /**
     * Information about the host for which this extension is requested
     */
    host'
      QuestionToken
      TypeReference
        Identifier: ' ExtensionHost'
    PropertySignature
      Identifier: '
    /**
     * Name of the collection for which the extension was requested
     */
    hostName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Gallery host url
     */
    links'
      QuestionToken
      TypeReference
        Identifier: ' ExtensionRequestUrls'
    PropertySignature
      Identifier: '
    /**
     * The extension request object
     */
    request'
      QuestionToken
      TypeReference
        Identifier: ' ExtensionRequest'
    PropertySignature
      Identifier: '
    /**
     * The type of update that was made
     */
    updateType'
      QuestionToken
      TypeReference
        Identifier: ' ExtensionRequestUpdateType'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionRequestsEvent'
    PropertySignature
      Identifier: '
    /**
     * The extension which has been requested
     */
    extension'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' GalleryInterfaces'
          Identifier: 'PublishedExtension'
    PropertySignature
      Identifier: '
    /**
     * Information about the host for which this extension is requested
     */
    host'
      QuestionToken
      TypeReference
        Identifier: ' ExtensionHost'
    PropertySignature
      Identifier: '
    /**
     * Gallery host url
     */
    links'
      QuestionToken
      TypeReference
        Identifier: ' ExtensionRequestUrls'
    PropertySignature
      Identifier: '
    /**
     * The extension request object
     */
    requests'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' ExtensionRequest'
    PropertySignature
      Identifier: '
    /**
     * The type of update that was made
     */
    updateType'
      QuestionToken
      TypeReference
        Identifier: ' ExtensionRequestUpdateType'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' ExtensionRequestState'
    EnumMember
      Identifier: '
    /**
     * The request has been opened, but not yet responded to
     */
    Open'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The request was accepted (extension installed or license assigned)
     */
    Accepted'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The request was rejected (extension not installed or license not assigned)
     */
    Rejected'
      NumericLiteral
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' ExtensionRequestUpdateType'
    EnumMember
      Identifier: '
    Created'
      NumericLiteral
    EnumMember
      Identifier: '
    Approved'
      NumericLiteral
    EnumMember
      Identifier: '
    Rejected'
      NumericLiteral
    EnumMember
      Identifier: '
    Deleted'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionRequestUrls'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' ExtensionUrls'
    PropertySignature
      Identifier: '
    /**
     * Link to view the extension request
     */
    requestPage'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionState'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' InstalledExtensionState'
    PropertySignature
      Identifier: '
    extensionName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The time at which the version was last checked
     */
    lastVersionCheck'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    publisherName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    version'
      QuestionToken
      StringKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' ExtensionStateFlags'
    EnumMember
      Identifier: '
    /**
     * No flags set
     */
    None'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Extension is disabled
     */
    Disabled'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Extension is a built in
     */
    BuiltIn'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Extension has multiple versions
     */
    MultiVersion'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Extension is not installed.  This is for builtin extensions only and can not otherwise be set.
     */
    UnInstalled'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Error performing version check
     */
    VersionCheckError'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Trusted extensions are ones that are given special capabilities. These tend to come from Microsoft and can't be published by the general public.  Note: BuiltIn extensions are always trusted.
     */
    Trusted'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Extension is currently in an error state
     */
    Error'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Extension scopes have changed and the extension requires re-authorization
     */
    NeedsReauthorization'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Error performing auto-upgrade. For example, if the new version has demands not supported the extension cannot be auto-upgraded.
     */
    AutoUpgradeError'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Extension is currently in a warning state, that can cause a degraded experience. The degraded experience can be caused for example by some installation issues detected such as implicit demands not supported.
     */
    Warning'
      NumericLiteral
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' ExtensionUpdateType'
    EnumMember
      Identifier: '
    Installed'
      NumericLiteral
    EnumMember
      Identifier: '
    Uninstalled'
      NumericLiteral
    EnumMember
      Identifier: '
    Enabled'
      NumericLiteral
    EnumMember
      Identifier: '
    Disabled'
      NumericLiteral
    EnumMember
      Identifier: '
    VersionUpdated'
      NumericLiteral
    EnumMember
      Identifier: '
    ActionRequired'
      NumericLiteral
    EnumMember
      Identifier: '
    ActionResolved'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExtensionUrls'
    PropertySignature
      Identifier: '
    /**
     * Url of the extension icon
     */
    extensionIcon'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Link to view the extension details page
     */
    extensionPage'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' InstalledExtension'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' ExtensionManifest'
    PropertySignature
      Identifier: '
    /**
     * The friendly extension id for this extension - unique for a given publisher.
     */
    extensionId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The display name of the extension.
     */
    extensionName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * This is the set of files available from the extension.
     */
    files'
      QuestionToken
      ArrayType
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'ExtensionFile'
    PropertySignature
      Identifier: '
    /**
     * Extension flags relevant to contribution consumers
     */
    flags'
      QuestionToken
      TypeReference
        Identifier: ' ExtensionFlags'
    PropertySignature
      Identifier: '
    /**
     * Information about this particular installation of the extension
     */
    installState'
      QuestionToken
      TypeReference
        Identifier: ' InstalledExtensionState'
    PropertySignature
      Identifier: '
    /**
     * This represents the date/time the extensions was last updated in the gallery. This doesnt mean this version was updated the value represents changes to any and all versions of the extension.
     */
    lastPublished'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * Unique id of the publisher of this extension
     */
    publisherId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The display name of the publisher
     */
    publisherName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Unique id for this extension (the same id is used for all versions of a single extension)
     */
    registrationId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Version of this extension
     */
    version'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' InstalledExtensionQuery'
    PropertySignature
      Identifier: '
    assetTypes'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    monikers'
      QuestionToken
      ArrayType
        TypeReference
          QualifiedName
            Identifier: ' GalleryInterfaces'
            Identifier: 'ExtensionIdentifier'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' InstalledExtensionState'
    PropertySignature
      Identifier: '
    /**
     * States of an installed extension
     */
    flags'
      QuestionToken
      TypeReference
        Identifier: ' ExtensionStateFlags'
    PropertySignature
      Identifier: '
    /**
     * List of installation issues
     */
    installationIssues'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' InstalledExtensionStateIssue'
    PropertySignature
      Identifier: '
    /**
     * The time at which this installation was last updated
     */
    lastUpdated'
      QuestionToken
      TypeReference
        Identifier: ' Date'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' InstalledExtensionStateIssue'
    PropertySignature
      Identifier: '
    /**
     * The error message
     */
    message'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Source of the installation issue, for example  "Demands"
     */
    source'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Installation issue type (Warning, Error)
     */
    type'
      QuestionToken
      TypeReference
        Identifier: ' InstalledExtensionStateIssueType'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' InstalledExtensionStateIssueType'
    EnumMember
      Identifier: '
    /**
     * Represents an installation warning, for example an implicit demand not supported
     */
    Warning'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Represents an installation error, for example an explicit demand not supported
     */
    Error'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' LicensingOverride'
    PropertySignature
      Identifier: '
    /**
     * How the inclusion of this contribution should change based on licensing
     */
    behavior'
      QuestionToken
      TypeReference
        Identifier: ' ContributionLicensingBehaviorType'
    PropertySignature
      Identifier: '
    /**
     * Fully qualified contribution id which we want to define licensing behavior for
     */
    id'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' RequestedExtension'
    PropertySignature
      Identifier: '
    /**
     * The unique name of the extension
     */
    extensionName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * A list of each request for the extension
     */
    extensionRequests'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' ExtensionRequest'
    PropertySignature
      Identifier: '
    /**
     * DisplayName of the publisher that owns the extension being published.
     */
    publisherDisplayName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Represents the Publisher of the requested extension
     */
    publisherName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The total number of requests for an extension
     */
    requestCount'
      QuestionToken
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ResolvedDataProvider'
    PropertySignature
      Identifier: '
    /**
     * The total time the data provider took to resolve its data (in milliseconds)
     */
    duration'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    error'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    id'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Scope'
    PropertySignature
      Identifier: '
    description'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    title'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    value'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SupportedExtension'
    PropertySignature
      Identifier: '
    /**
     * Unique Identifier for this extension
     */
    extension'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Unique Identifier for this publisher
     */
    publisher'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Supported version for this extension
     */
    version'
      QuestionToken
      StringKeyword
  VariableStatement
    ExportKeyword
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' TypeInfo'
        TypeLiteral
          PropertySignature
            Identifier: '
    AcquisitionAssignmentType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            none'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            me'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            all'
                    NumberKeyword
          PropertySignature
            Identifier: '
    AcquisitionOperation'
            AnyKeyword
          PropertySignature
            Identifier: '
    AcquisitionOperationState'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            disallow'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            allow'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            completed'
                    NumberKeyword
          PropertySignature
            Identifier: '
    AcquisitionOperationType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            get'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            install'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            buy'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            try'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            request'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            none'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            purchaseRequest'
                    NumberKeyword
          PropertySignature
            Identifier: '
    AcquisitionOptions'
            AnyKeyword
          PropertySignature
            Identifier: '
    ContributionLicensingBehaviorType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            onlyIfLicensed'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            onlyIfUnlicensed'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            alwaysInclude'
                    NumberKeyword
          PropertySignature
            Identifier: '
    ContributionNodeQuery'
            AnyKeyword
          PropertySignature
            Identifier: '
    ContributionPropertyDescription'
            AnyKeyword
          PropertySignature
            Identifier: '
    ContributionPropertyType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            unknown'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            string'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            uri'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            guid'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            boolean'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            integer'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            double'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            dateTime'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            dictionary'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            array'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            object'
                    NumberKeyword
          PropertySignature
            Identifier: '
    ContributionQueryOptions'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            none'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            includeSelf'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            includeChildren'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            includeSubTree'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            includeAll'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            ignoreConstraints'
                    NumberKeyword
          PropertySignature
            Identifier: '
    ContributionType'
            AnyKeyword
          PropertySignature
            Identifier: '
    ExtensionAcquisitionRequest'
            AnyKeyword
          PropertySignature
            Identifier: '
    ExtensionAuditLog'
            AnyKeyword
          PropertySignature
            Identifier: '
    ExtensionAuditLogEntry'
            AnyKeyword
          PropertySignature
            Identifier: '
    ExtensionEvent'
            AnyKeyword
          PropertySignature
            Identifier: '
    ExtensionFlags'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            builtIn'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            trusted'
                    NumberKeyword
          PropertySignature
            Identifier: '
    ExtensionLicensing'
            AnyKeyword
          PropertySignature
            Identifier: '
    ExtensionManifest'
            AnyKeyword
          PropertySignature
            Identifier: '
    ExtensionRequest'
            AnyKeyword
          PropertySignature
            Identifier: '
    ExtensionRequestEvent'
            AnyKeyword
          PropertySignature
            Identifier: '
    ExtensionRequestsEvent'
            AnyKeyword
          PropertySignature
            Identifier: '
    ExtensionRequestState'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            open'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            accepted'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            rejected'
                    NumberKeyword
          PropertySignature
            Identifier: '
    ExtensionRequestUpdateType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            created'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            approved'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            rejected'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            deleted'
                    NumberKeyword
          PropertySignature
            Identifier: '
    ExtensionState'
            AnyKeyword
          PropertySignature
            Identifier: '
    ExtensionStateFlags'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            none'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            disabled'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            builtIn'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            multiVersion'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            unInstalled'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            versionCheckError'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            trusted'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            error'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            needsReauthorization'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            autoUpgradeError'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            warning'
                    NumberKeyword
          PropertySignature
            Identifier: '
    ExtensionUpdateType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            installed'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            uninstalled'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            enabled'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            disabled'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            versionUpdated'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            actionRequired'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            actionResolved'
                    NumberKeyword
          PropertySignature
            Identifier: '
    InstalledExtension'
            AnyKeyword
          PropertySignature
            Identifier: '
    InstalledExtensionState'
            AnyKeyword
          PropertySignature
            Identifier: '
    InstalledExtensionStateIssue'
            AnyKeyword
          PropertySignature
            Identifier: '
    InstalledExtensionStateIssueType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            warning'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            error'
                    NumberKeyword
          PropertySignature
            Identifier: '
    LicensingOverride'
            AnyKeyword
          PropertySignature
            Identifier: '
    RequestedExtension'
            AnyKeyword
