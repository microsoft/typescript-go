SourceFile
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: '
    BuilderProgram'
        ImportSpecifier
          Identifier: '
    BuildInfo'
        ImportSpecifier
          Identifier: '
    canJsonReportNoInputFiles'
        ImportSpecifier
          Identifier: '
    changeCompilerHostLikeToUseCache'
        ImportSpecifier
          Identifier: '
    changesAffectModuleResolution'
        ImportSpecifier
          Identifier: '
    cleanExtendedConfigCache'
        ImportSpecifier
          Identifier: '
    clearMap'
        ImportSpecifier
          Identifier: '
    clearSharedExtendedConfigFileWatcher'
        ImportSpecifier
          Identifier: '
    closeFileWatcher'
        ImportSpecifier
          Identifier: '
    closeFileWatcherOf'
        ImportSpecifier
          Identifier: '
    CompilerHost'
        ImportSpecifier
          Identifier: '
    CompilerOptions'
        ImportSpecifier
          Identifier: '
    ConfigFileDiagnosticsReporter'
        ImportSpecifier
          Identifier: '
    createBuilderProgramUsingIncrementalBuildInfo'
        ImportSpecifier
          Identifier: '
    createCachedDirectoryStructureHost'
        ImportSpecifier
          Identifier: '
    createCompilerDiagnostic'
        ImportSpecifier
          Identifier: '
    createCompilerHostFromProgramHost'
        ImportSpecifier
          Identifier: '
    createCompilerHostWorker'
        ImportSpecifier
          Identifier: '
    createEmitAndSemanticDiagnosticsBuilderProgram'
        ImportSpecifier
          Identifier: '
    createGetCanonicalFileName'
        ImportSpecifier
          Identifier: '
    createResolutionCache'
        ImportSpecifier
          Identifier: '
    CreateSourceFileOptions'
        ImportSpecifier
          Identifier: '
    createWatchCompilerHostOfConfigFile'
        ImportSpecifier
          Identifier: '
    createWatchCompilerHostOfFilesAndCompilerOptions'
        ImportSpecifier
          Identifier: '
    createWatchFactory'
        ImportSpecifier
          Identifier: '
    Debug'
        ImportSpecifier
          Identifier: '
    Diagnostic'
        ImportSpecifier
          Identifier: '
    DiagnosticMessage'
        ImportSpecifier
          Identifier: '
    DiagnosticReporter'
        ImportSpecifier
          Identifier: '
    Diagnostics'
        ImportSpecifier
          Identifier: '
    DirectoryStructureHost'
        ImportSpecifier
          Identifier: '
    DirectoryWatcherCallback'
        ImportSpecifier
          Identifier: '
    EmitAndSemanticDiagnosticsBuilderProgram'
        ImportSpecifier
          Identifier: '
    ExtendedConfigCacheEntry'
        ImportSpecifier
          Identifier: '
    FileExtensionInfo'
        ImportSpecifier
          Identifier: '
    FileReference'
        ImportSpecifier
          Identifier: '
    FileWatcher'
        ImportSpecifier
          Identifier: '
    FileWatcherCallback'
        ImportSpecifier
          Identifier: '
    FileWatcherEventKind'
        ImportSpecifier
          Identifier: '
    getBuildInfo'
        ImportSpecifier
          Identifier: '
    getConfigFileParsingDiagnostics'
        ImportSpecifier
          Identifier: '
    getDirectoryPath'
        ImportSpecifier
          Identifier: '
    getFileNamesFromConfigSpecs'
        ImportSpecifier
          Identifier: '
    getNewLineCharacter'
        ImportSpecifier
          Identifier: '
    getNormalizedAbsolutePath'
        ImportSpecifier
          Identifier: '
    getParsedCommandLineOfConfigFile'
        ImportSpecifier
          Identifier: '
    getSourceFileVersionAsHashFromText'
        ImportSpecifier
          Identifier: '
    getTsBuildInfoEmitOutputFilePath'
        ImportSpecifier
          Identifier: '
    HasInvalidatedLibResolutions'
        ImportSpecifier
          Identifier: '
    HasInvalidatedResolutions'
        ImportSpecifier
          Identifier: '
    isArray'
        ImportSpecifier
          Identifier: '
    isIgnoredFileFromWildCardWatching'
        ImportSpecifier
          Identifier: '
    isIncrementalBuildInfo'
        ImportSpecifier
          Identifier: '
    isProgramUptoDate'
        ImportSpecifier
          Identifier: '
    JSDocParsingMode'
        ImportSpecifier
          Identifier: '
    MapLike'
        ImportSpecifier
          Identifier: '
    maybeBind'
        ImportSpecifier
          Identifier: '
    ModuleResolutionCache'
        ImportSpecifier
          Identifier: '
    noop'
        ImportSpecifier
          Identifier: '
    noopFileWatcher'
        ImportSpecifier
          Identifier: '
    parseConfigHostFromCompilerHostLike'
        ImportSpecifier
          Identifier: '
    ParsedCommandLine'
        ImportSpecifier
          Identifier: '
    Path'
        ImportSpecifier
          Identifier: '
    PollingInterval'
        ImportSpecifier
          Identifier: '
    ProgramUpdateLevel'
        ImportSpecifier
          Identifier: '
    ProjectReference'
        ImportSpecifier
          Identifier: '
    ResolutionCache'
        ImportSpecifier
          Identifier: '
    ResolutionCacheHost'
        ImportSpecifier
          Identifier: '
    ResolutionMode'
        ImportSpecifier
          Identifier: '
    ResolvedModule'
        ImportSpecifier
          Identifier: '
    ResolvedModuleWithFailedLookupLocations'
        ImportSpecifier
          Identifier: '
    ResolvedProjectReference'
        ImportSpecifier
          Identifier: '
    ResolvedTypeReferenceDirective'
        ImportSpecifier
          Identifier: '
    ResolvedTypeReferenceDirectiveWithFailedLookupLocations'
        ImportSpecifier
          Identifier: '
    returnFalse'
        ImportSpecifier
          Identifier: '
    returnTrue'
        ImportSpecifier
          Identifier: '
    ScriptTarget'
        ImportSpecifier
          Identifier: '
    setGetSourceFileAsHashVersioned'
        ImportSpecifier
          Identifier: '
    SharedExtendedConfigFileWatcher'
        ImportSpecifier
          Identifier: '
    SourceFile'
        ImportSpecifier
          Identifier: '
    StringLiteralLike'
        ImportSpecifier
          Identifier: '
    sys'
        ImportSpecifier
          Identifier: '
    System'
        ImportSpecifier
          Identifier: '
    toPath'
        ImportSpecifier
          Identifier: '
    toPath'
          Identifier: ' ts_toPath'
        ImportSpecifier
          Identifier: '
    updateErrorForNoInputFiles'
        ImportSpecifier
          Identifier: '
    updateMissingFilePathsWatch'
        ImportSpecifier
          Identifier: '
    updateSharedExtendedConfigFileWatcher'
        ImportSpecifier
          Identifier: '
    updateWatchingWildcardDirectories'
        ImportSpecifier
          Identifier: '
    version'
        ImportSpecifier
          Identifier: '
    WatchDirectoryFlags'
        ImportSpecifier
          Identifier: '
    WatchOptions'
        ImportSpecifier
          Identifier: '
    WatchType'
        ImportSpecifier
          Identifier: '
    WatchTypeRegistry'
        ImportSpecifier
          Identifier: '
    WildcardDirectoryWatcher'
    StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ReadBuildProgramHost'
    MethodSignature
      Identifier: '
    useCaseSensitiveFileNames'
      BooleanKeyword
    MethodSignature
      Identifier: '
    getCurrentDirectory'
      StringKeyword
    MethodSignature
      Identifier: '
    readFile'
      Parameter
        Identifier: 'fileName'
        StringKeyword
      UnionType
        StringKeyword
        UndefinedKeyword
    MethodSignature
      Identifier: '
    /** @internal */
    getBuildInfo'
      QuestionToken
      Parameter
        Identifier: 'fileName'
        StringKeyword
      Parameter
        Identifier: ' configFilePath'
        UnionType
          StringKeyword
          UndefinedKeyword
      UnionType
        TypeReference
          Identifier: ' BuildInfo'
        UndefinedKeyword
  FunctionDeclaration
    ExportKeyword
    Identifier: ' readBuilderProgram'
    Parameter
      Identifier: 'compilerOptions'
      TypeReference
        Identifier: ' CompilerOptions'
    Parameter
      Identifier: ' host'
      TypeReference
        Identifier: ' ReadBuildProgramHost'
    UnionType
      TypeReference
        Identifier: ' EmitAndSemanticDiagnosticsBuilderProgram'
      UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' buildInfoPath'
            CallExpression
              Identifier: ' getTsBuildInfoEmitOutputFilePath'
              Identifier: 'compilerOptions'
      IfStatement
        PrefixUnaryExpression
          Identifier: 'buildInfoPath'
        ReturnStatement
          Identifier: ' undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' buildInfo'
      IfStatement
        PropertyAccessExpression
          Identifier: 'host'
          Identifier: 'getBuildInfo'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        // host provides buildinfo, get it from there. This allows host to cache it
        buildInfo'
              EqualsToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' host'
                  Identifier: 'getBuildInfo'
                Identifier: 'buildInfoPath'
                PropertyAccessExpression
                  Identifier: ' compilerOptions'
                  Identifier: 'configFilePath'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' content'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' host'
                    Identifier: 'readFile'
                  Identifier: 'buildInfoPath'
          IfStatement
            PrefixUnaryExpression
              Identifier: 'content'
            ReturnStatement
              Identifier: ' undefined'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        buildInfo'
              EqualsToken
              CallExpression
                Identifier: ' getBuildInfo'
                Identifier: 'buildInfoPath'
                Identifier: ' content'
      IfStatement
        BinaryExpression
          BinaryExpression
            PrefixUnaryExpression
              Identifier: 'buildInfo'
            BarBarToken
            BinaryExpression
              PropertyAccessExpression
                Identifier: ' buildInfo'
                Identifier: 'version'
              ExclamationEqualsEqualsToken
              Identifier: ' version'
          BarBarToken
          PrefixUnaryExpression
            CallExpression
              Identifier: 'isIncrementalBuildInfo'
              Identifier: 'buildInfo'
        ReturnStatement
          Identifier: ' undefined'
      ReturnStatement
        CallExpression
          Identifier: ' createBuilderProgramUsingIncrementalBuildInfo'
          Identifier: 'buildInfo'
          Identifier: ' buildInfoPath'
          Identifier: ' host'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' createIncrementalCompilerHost'
    Parameter
      Identifier: 'options'
      TypeReference
        Identifier: ' CompilerOptions'
    Parameter
      Identifier: ' system'
      TypeReference
        Identifier: ' System'
      Identifier: ' sys'
    TypeReference
      Identifier: ' CompilerHost'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' host'
            CallExpression
              Identifier: ' createCompilerHostWorker'
              Identifier: 'options'
              Identifier: ' /*setParentNodes*/ undefined'
              Identifier: ' system'
      ExpressionStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: '
    host'
            Identifier: 'createHash'
          EqualsToken
          CallExpression
            Identifier: ' maybeBind'
            Identifier: 'system'
            PropertyAccessExpression
              Identifier: ' system'
              Identifier: 'createHash'
      ExpressionStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: '
    host'
            Identifier: 'storeSignatureInfo'
          EqualsToken
          PropertyAccessExpression
            Identifier: ' system'
            Identifier: 'storeSignatureInfo'
      ExpressionStatement
        CallExpression
          Identifier: '
    setGetSourceFileAsHashVersioned'
          Identifier: 'host'
      ExpressionStatement
        CallExpression
          Identifier: '
    changeCompilerHostLikeToUseCache'
          Identifier: 'host'
          ArrowFunction
            Parameter
              Identifier: ' fileName'
            EqualsGreaterThanToken
            CallExpression
              Identifier: ' toPath'
              Identifier: 'fileName'
              CallExpression
                PropertyAccessExpression
                  Identifier: ' host'
                  Identifier: 'getCurrentDirectory'
              PropertyAccessExpression
                Identifier: ' host'
                Identifier: 'getCanonicalFileName'
      ReturnStatement
        Identifier: ' host'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' IncrementalProgramOptions'
    TypeParameter
      Identifier: 'T'
      TypeReference
        Identifier: ' BuilderProgram'
    PropertySignature
      Identifier: '
    rootNames'
      TypeOperator
        ArrayType
          StringKeyword
    PropertySignature
      Identifier: '
    options'
      TypeReference
        Identifier: ' CompilerOptions'
    PropertySignature
      Identifier: '
    configFileParsingDiagnostics'
      QuestionToken
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' Diagnostic'
    PropertySignature
      Identifier: '
    projectReferences'
      QuestionToken
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' ProjectReference'
    PropertySignature
      Identifier: '
    host'
      QuestionToken
      TypeReference
        Identifier: ' CompilerHost'
    PropertySignature
      Identifier: '
    createProgram'
      QuestionToken
      TypeReference
        Identifier: ' CreateProgram'
        TypeReference
          Identifier: 'T'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' createIncrementalProgram'
    TypeParameter
      Identifier: 'T'
      TypeReference
        Identifier: ' BuilderProgram'
      TypeReference
        Identifier: ' EmitAndSemanticDiagnosticsBuilderProgram'
    Parameter
      ObjectBindingPattern
        BindingElement
          Identifier: '
    rootNames'
        BindingElement
          Identifier: '
    options'
        BindingElement
          Identifier: '
    configFileParsingDiagnostics'
        BindingElement
          Identifier: '
    projectReferences'
        BindingElement
          Identifier: '
    host'
        BindingElement
          Identifier: '
    createProgram'
      TypeReference
        Identifier: ' IncrementalProgramOptions'
        TypeReference
          Identifier: 'T'
    TypeReference
      Identifier: ' T'
    Block
      ExpressionStatement
        BinaryExpression
          Identifier: '
    host'
          EqualsToken
          BinaryExpression
            Identifier: ' host'
            BarBarToken
            CallExpression
              Identifier: ' createIncrementalCompilerHost'
              Identifier: 'options'
      ExpressionStatement
        BinaryExpression
          Identifier: '
    createProgram'
          EqualsToken
          BinaryExpression
            Identifier: ' createProgram'
            BarBarToken
            AsExpression
              AsExpression
                Identifier: ' createEmitAndSemanticDiagnosticsBuilderProgram'
                AnyKeyword
              TypeReference
                Identifier: ' CreateProgram'
                TypeReference
                  Identifier: 'T'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' oldProgram'
            AsExpression
              AsExpression
                CallExpression
                  Identifier: ' readBuilderProgram'
                  Identifier: 'options'
                  Identifier: ' host'
                AnyKeyword
              TypeReference
                Identifier: ' T'
      ReturnStatement
        CallExpression
          Identifier: ' createProgram'
          Identifier: 'rootNames'
          Identifier: ' options'
          Identifier: ' host'
          Identifier: ' oldProgram'
          Identifier: ' configFileParsingDiagnostics'
          Identifier: ' projectReferences'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' WatchStatusReporter'
    FunctionType
      Parameter
        Identifier: 'diagnostic'
        TypeReference
          Identifier: ' Diagnostic'
      Parameter
        Identifier: ' newLine'
        StringKeyword
      Parameter
        Identifier: ' options'
        TypeReference
          Identifier: ' CompilerOptions'
      Parameter
        Identifier: ' errorCount'
        QuestionToken
        NumberKeyword
      VoidKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' CreateProgram'
    TypeParameter
      Identifier: 'T'
      TypeReference
        Identifier: ' BuilderProgram'
    FunctionType
      Parameter
        Identifier: 'rootNames'
        UnionType
          TypeOperator
            ArrayType
              StringKeyword
          UndefinedKeyword
      Parameter
        Identifier: ' options'
        UnionType
          TypeReference
            Identifier: ' CompilerOptions'
          UndefinedKeyword
      Parameter
        Identifier: ' host'
        QuestionToken
        TypeReference
          Identifier: ' CompilerHost'
      Parameter
        Identifier: ' oldProgram'
        QuestionToken
        TypeReference
          Identifier: ' T'
      Parameter
        Identifier: ' configFileParsingDiagnostics'
        QuestionToken
        TypeOperator
          ArrayType
            TypeReference
              Identifier: ' Diagnostic'
      Parameter
        Identifier: ' projectReferences'
        QuestionToken
        UnionType
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' ProjectReference'
          UndefinedKeyword
      TypeReference
        Identifier: ' T'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WatchHost'
    MethodSignature
      Identifier: '
    /** If provided, called with Diagnostic message that informs about change in watch status */
    onWatchStatusChange'
      QuestionToken
      Parameter
        Identifier: 'diagnostic'
        TypeReference
          Identifier: ' Diagnostic'
      Parameter
        Identifier: ' newLine'
        StringKeyword
      Parameter
        Identifier: ' options'
        TypeReference
          Identifier: ' CompilerOptions'
      Parameter
        Identifier: ' errorCount'
        QuestionToken
        NumberKeyword
      VoidKeyword
    MethodSignature
      Identifier: '

    /** Used to watch changes in source files, missing files needed to update the program or config file */
    watchFile'
      Parameter
        Identifier: 'path'
        StringKeyword
      Parameter
        Identifier: ' callback'
        TypeReference
          Identifier: ' FileWatcherCallback'
      Parameter
        Identifier: ' pollingInterval'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' options'
        QuestionToken
        TypeReference
          Identifier: ' WatchOptions'
      TypeReference
        Identifier: ' FileWatcher'
    MethodSignature
      Identifier: '
    /** Used to watch resolved module's failed lookup locations, config file specs, type roots where auto type reference directives are added */
    watchDirectory'
      Parameter
        Identifier: 'path'
        StringKeyword
      Parameter
        Identifier: ' callback'
        TypeReference
          Identifier: ' DirectoryWatcherCallback'
      Parameter
        Identifier: ' recursive'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' options'
        QuestionToken
        TypeReference
          Identifier: ' WatchOptions'
      TypeReference
        Identifier: ' FileWatcher'
    MethodSignature
      Identifier: '
    /** If provided, will be used to set delayed compilation, so that multiple changes in short span are compiled together */
    setTimeout'
      QuestionToken
      Parameter
        Identifier: 'callback'
        FunctionType
          Parameter
            DotDotDotToken
            Identifier: 'args'
            ArrayType
              AnyKeyword
          VoidKeyword
      Parameter
        Identifier: ' ms'
        NumberKeyword
      Parameter
        DotDotDotToken
        Identifier: 'args'
        ArrayType
          AnyKeyword
      AnyKeyword
    MethodSignature
      Identifier: '
    /** If provided, will be used to reset existing delayed compilation */
    clearTimeout'
      QuestionToken
      Parameter
        Identifier: 'timeoutId'
        AnyKeyword
      VoidKeyword
    PropertySignature
      Identifier: '
    preferNonRecursiveWatch'
      QuestionToken
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ProgramHost'
    TypeParameter
      Identifier: 'T'
      TypeReference
        Identifier: ' BuilderProgram'
    PropertySignature
      Identifier: '
    /**
     * Used to create the program when need for program creation or recreation detected
     */
    createProgram'
      TypeReference
        Identifier: ' CreateProgram'
        TypeReference
          Identifier: 'T'
    MethodSignature
      Identifier: '

    // Sub set of compiler host methods to read and generate new program
    useCaseSensitiveFileNames'
      BooleanKeyword
    MethodSignature
      Identifier: '
    getNewLine'
      StringKeyword
    MethodSignature
      Identifier: '
    getCurrentDirectory'
      StringKeyword
    MethodSignature
      Identifier: '
    getDefaultLibFileName'
      Parameter
        Identifier: 'options'
        TypeReference
          Identifier: ' CompilerOptions'
      StringKeyword
    MethodSignature
      Identifier: '
    getDefaultLibLocation'
      QuestionToken
      StringKeyword
    MethodSignature
      Identifier: '
    createHash'
      QuestionToken
      Parameter
        Identifier: 'data'
        StringKeyword
      StringKeyword
    MethodSignature
      Identifier: '

    /**
     * Use to check file presence for source files and
     * if resolveModuleNames is not provided (complier is in charge of module resolution) then module files as well
     */
    fileExists'
      Parameter
        Identifier: 'path'
        StringKeyword
      BooleanKeyword
    MethodSignature
      Identifier: '
    /**
     * Use to read file text for source files and
     * if resolveModuleNames is not provided (complier is in charge of module resolution) then module files as well
     */
    readFile'
      Parameter
        Identifier: 'path'
        StringKeyword
      Parameter
        Identifier: ' encoding'
        QuestionToken
        StringKeyword
      UnionType
        StringKeyword
        UndefinedKeyword
    MethodSignature
      Identifier: '

    /** If provided, used for module resolution as well as to handle directory structure */
    directoryExists'
      QuestionToken
      Parameter
        Identifier: 'path'
        StringKeyword
      BooleanKeyword
    MethodSignature
      Identifier: '
    /** If provided, used in resolutions as well as handling directory structure */
    getDirectories'
      QuestionToken
      Parameter
        Identifier: 'path'
        StringKeyword
      ArrayType
        StringKeyword
    MethodSignature
      Identifier: '
    /** If provided, used to cache and handle directory structure modifications */
    readDirectory'
      QuestionToken
      Parameter
        Identifier: 'path'
        StringKeyword
      Parameter
        Identifier: ' extensions'
        QuestionToken
        TypeOperator
          ArrayType
            StringKeyword
      Parameter
        Identifier: ' exclude'
        QuestionToken
        TypeOperator
          ArrayType
            StringKeyword
      Parameter
        Identifier: ' include'
        QuestionToken
        TypeOperator
          ArrayType
            StringKeyword
      Parameter
        Identifier: ' depth'
        QuestionToken
        NumberKeyword
      ArrayType
        StringKeyword
    MethodSignature
      Identifier: '

    /** Symbol links resolution */
    realpath'
      QuestionToken
      Parameter
        Identifier: 'path'
        StringKeyword
      StringKeyword
    MethodSignature
      Identifier: '
    /** If provided would be used to write log about compilation */
    trace'
      QuestionToken
      Parameter
        Identifier: 's'
        StringKeyword
      VoidKeyword
    MethodSignature
      Identifier: '
    /** If provided is used to get the environment variable */
    getEnvironmentVariable'
      QuestionToken
      Parameter
        Identifier: 'name'
        StringKeyword
      UnionType
        StringKeyword
        UndefinedKeyword
    MethodSignature
      Identifier: '

    /**
     * @deprecated supply resolveModuleNameLiterals instead for resolution that can handle newer resolution modes like nodenext
     *
     * If provided, used to resolve the module names, otherwise typescript's default module resolution
     */
    resolveModuleNames'
      QuestionToken
      Parameter
        Identifier: 'moduleNames'
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' containingFile'
        StringKeyword
      Parameter
        Identifier: ' reusedNames'
        UnionType
          ArrayType
            StringKeyword
          UndefinedKeyword
      Parameter
        Identifier: ' redirectedReference'
        UnionType
          TypeReference
            Identifier: ' ResolvedProjectReference'
          UndefinedKeyword
      Parameter
        Identifier: ' options'
        TypeReference
          Identifier: ' CompilerOptions'
      Parameter
        Identifier: ' containingSourceFile'
        QuestionToken
        TypeReference
          Identifier: ' SourceFile'
      ArrayType
        ParenthesizedType
          UnionType
            TypeReference
              Identifier: 'ResolvedModule'
            UndefinedKeyword
    MethodSignature
      Identifier: '
    /**
     * @deprecated supply resolveTypeReferenceDirectiveReferences instead for resolution that can handle newer resolution modes like nodenext
     *
     * If provided, used to resolve type reference directives, otherwise typescript's default resolution
     */
    resolveTypeReferenceDirectives'
      QuestionToken
      Parameter
        Identifier: 'typeReferenceDirectiveNames'
        UnionType
          ArrayType
            StringKeyword
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' FileReference'
      Parameter
        Identifier: ' containingFile'
        StringKeyword
      Parameter
        Identifier: ' redirectedReference'
        UnionType
          TypeReference
            Identifier: ' ResolvedProjectReference'
          UndefinedKeyword
      Parameter
        Identifier: ' options'
        TypeReference
          Identifier: ' CompilerOptions'
      Parameter
        Identifier: ' containingFileMode'
        QuestionToken
        TypeReference
          Identifier: ' ResolutionMode'
      ArrayType
        ParenthesizedType
          UnionType
            TypeReference
              Identifier: 'ResolvedTypeReferenceDirective'
            UndefinedKeyword
    MethodSignature
      Identifier: '
    resolveModuleNameLiterals'
      QuestionToken
      Parameter
        Identifier: '
        moduleLiterals'
        TypeOperator
          ArrayType
            TypeReference
              Identifier: ' StringLiteralLike'
      Parameter
        Identifier: '
        containingFile'
        StringKeyword
      Parameter
        Identifier: '
        redirectedReference'
        UnionType
          TypeReference
            Identifier: ' ResolvedProjectReference'
          UndefinedKeyword
      Parameter
        Identifier: '
        options'
        TypeReference
          Identifier: ' CompilerOptions'
      Parameter
        Identifier: '
        containingSourceFile'
        TypeReference
          Identifier: ' SourceFile'
      Parameter
        Identifier: '
        reusedNames'
        UnionType
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' StringLiteralLike'
          UndefinedKeyword
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' ResolvedModuleWithFailedLookupLocations'
    MethodSignature
      Identifier: '
    resolveTypeReferenceDirectiveReferences'
      QuestionToken
      TypeParameter
        Identifier: 'T'
        UnionType
          TypeReference
            Identifier: ' FileReference'
          StringKeyword
      Parameter
        Identifier: '
        typeDirectiveReferences'
        TypeOperator
          ArrayType
            TypeReference
              Identifier: ' T'
      Parameter
        Identifier: '
        containingFile'
        StringKeyword
      Parameter
        Identifier: '
        redirectedReference'
        UnionType
          TypeReference
            Identifier: ' ResolvedProjectReference'
          UndefinedKeyword
      Parameter
        Identifier: '
        options'
        TypeReference
          Identifier: ' CompilerOptions'
      Parameter
        Identifier: '
        containingSourceFile'
        UnionType
          TypeReference
            Identifier: ' SourceFile'
          UndefinedKeyword
      Parameter
        Identifier: '
        reusedNames'
        UnionType
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' T'
          UndefinedKeyword
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' ResolvedTypeReferenceDirectiveWithFailedLookupLocations'
    MethodSignature
      Identifier: '
    /** @internal */
    resolveLibrary'
      QuestionToken
      Parameter
        Identifier: '
        libraryName'
        StringKeyword
      Parameter
        Identifier: '
        resolveFrom'
        StringKeyword
      Parameter
        Identifier: '
        options'
        TypeReference
          Identifier: ' CompilerOptions'
      Parameter
        Identifier: '
        libFileName'
        StringKeyword
      TypeReference
        Identifier: ' ResolvedModuleWithFailedLookupLocations'
    MethodSignature
      Identifier: '
    /**
     * If provided along with custom resolveLibrary, used to determine if we should redo library resolutions
     * @internal
     */
    hasInvalidatedLibResolutions'
      QuestionToken
      Parameter
        Identifier: 'libFileName'
        StringKeyword
      BooleanKeyword
    MethodSignature
      Identifier: '

    /** If provided along with custom resolveModuleNames or resolveTypeReferenceDirectives, used to determine if unchanged file path needs to re-resolve modules/type reference directives */
    hasInvalidatedResolutions'
      QuestionToken
      Parameter
        Identifier: 'filePath'
        TypeReference
          Identifier: ' Path'
      BooleanKeyword
    MethodSignature
      Identifier: '
    /**
     * Returns the module resolution cache used by a provided `resolveModuleNames` implementation so that any non-name module resolution operations (eg, package.json lookup) can reuse it
     */
    getModuleResolutionCache'
      QuestionToken
      UnionType
        TypeReference
          Identifier: ' ModuleResolutionCache'
        UndefinedKeyword
    PropertySignature
      Identifier: '

    jsDocParsingMode'
      QuestionToken
      TypeReference
        Identifier: ' JSDocParsingMode'
    MethodSignature
      Identifier: '

    // Internal interface used to wire emit through same host

    // TODO: GH#18217 Optional methods are frequently asserted
    /** @internal */
    createDirectory'
      QuestionToken
      Parameter
        Identifier: 'path'
        StringKeyword
      VoidKeyword
    MethodSignature
      Identifier: '
    /** @internal */
    writeFile'
      QuestionToken
      Parameter
        Identifier: 'path'
        StringKeyword
      Parameter
        Identifier: ' data'
        StringKeyword
      Parameter
        Identifier: ' writeByteOrderMark'
        QuestionToken
        BooleanKeyword
      VoidKeyword
    PropertySignature
      Identifier: '
    // For testing
    /** @internal */
    storeSignatureInfo'
      QuestionToken
      BooleanKeyword
    MethodSignature
      Identifier: '
    /** @internal */
    now'
      QuestionToken
      TypeReference
        Identifier: ' Date'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WatchCompilerHost'
    TypeParameter
      Identifier: 'T'
      TypeReference
        Identifier: ' BuilderProgram'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' ProgramHost'
        TypeReference
          Identifier: 'T'
      ExpressionWithTypeArguments
        Identifier: ' WatchHost'
    MethodSignature
      Identifier: '
    /** Instead of using output d.ts file from project reference, use its source file */
    useSourceOfProjectReferenceRedirect'
      QuestionToken
      BooleanKeyword
    MethodSignature
      Identifier: '

    /** If provided, use this method to get parsed command lines for referenced projects */
    getParsedCommandLine'
      QuestionToken
      Parameter
        Identifier: 'fileName'
        StringKeyword
      UnionType
        TypeReference
          Identifier: ' ParsedCommandLine'
        UndefinedKeyword
    MethodSignature
      Identifier: '

    /** If provided, callback to invoke after every new program creation */
    afterProgramCreate'
      QuestionToken
      Parameter
        Identifier: 'program'
        TypeReference
          Identifier: ' T'
      VoidKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WatchCompilerHostOfFilesAndCompilerOptions'
    TypeParameter
      Identifier: 'T'
      TypeReference
        Identifier: ' BuilderProgram'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' WatchCompilerHost'
        TypeReference
          Identifier: 'T'
    PropertySignature
      Identifier: '
    /** root files to use to generate program */
    rootFiles'
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '

    /** Compiler options */
    options'
      TypeReference
        Identifier: ' CompilerOptions'
    PropertySignature
      Identifier: '

    watchOptions'
      QuestionToken
      TypeReference
        Identifier: ' WatchOptions'
    PropertySignature
      Identifier: '

    /** Project References */
    projectReferences'
      QuestionToken
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' ProjectReference'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WatchCompilerHostOfConfigFile'
    TypeParameter
      Identifier: 'T'
      TypeReference
        Identifier: ' BuilderProgram'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' WatchCompilerHost'
        TypeReference
          Identifier: 'T'
      ExpressionWithTypeArguments
        Identifier: ' ConfigFileDiagnosticsReporter'
    PropertySignature
      Identifier: '
    /** Name of the config file to compile */
    configFileName'
      StringKeyword
    PropertySignature
      Identifier: '

    /** Options to extend */
    optionsToExtend'
      QuestionToken
      TypeReference
        Identifier: ' CompilerOptions'
    PropertySignature
      Identifier: '

    watchOptionsToExtend'
      QuestionToken
      TypeReference
        Identifier: ' WatchOptions'
    PropertySignature
      Identifier: '

    extraFileExtensions'
      QuestionToken
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' FileExtensionInfo'
    MethodSignature
      Identifier: '

    /**
     * Used to generate source file names from the config file and its include, exclude, files rules
     * and also to cache the directory stucture
     */
    readDirectory'
      Parameter
        Identifier: 'path'
        StringKeyword
      Parameter
        Identifier: ' extensions'
        QuestionToken
        TypeOperator
          ArrayType
            StringKeyword
      Parameter
        Identifier: ' exclude'
        QuestionToken
        TypeOperator
          ArrayType
            StringKeyword
      Parameter
        Identifier: ' include'
        QuestionToken
        TypeOperator
          ArrayType
            StringKeyword
      Parameter
        Identifier: ' depth'
        QuestionToken
        NumberKeyword
      ArrayType
        StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WatchCompilerHostOfConfigFile'
    TypeParameter
      Identifier: 'T'
      TypeReference
        Identifier: ' BuilderProgram'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' WatchCompilerHost'
        TypeReference
          Identifier: 'T'
    PropertySignature
      Identifier: '
    configFileParsingResult'
      QuestionToken
      TypeReference
        Identifier: ' ParsedCommandLine'
    PropertySignature
      Identifier: '
    extendedConfigCache'
      QuestionToken
      TypeReference
        Identifier: ' Map'
        StringKeyword
        TypeReference
          Identifier: ' ExtendedConfigCacheEntry'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Watch'
    TypeParameter
      Identifier: 'T'
    MethodSignature
      Identifier: '
    /** Synchronize with host and get updated program */
    getProgram'
      TypeReference
        Identifier: ' T'
    MethodSignature
      Identifier: '
    /**
     * Gets the existing program without synchronizing with changes on host
     *
     * @internal
     */
    getCurrentProgram'
      TypeReference
        Identifier: ' T'
    MethodSignature
      Identifier: '
    /** Closes the watch */
    close'
      VoidKeyword
    MethodSignature
      Identifier: '
    /** @internal */
    getResolutionCache'
      TypeReference
        Identifier: ' ResolutionCache'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WatchOfConfigFile'
    TypeParameter
      Identifier: 'T'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Watch'
        TypeReference
          Identifier: 'T'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WatchOfFilesAndCompilerOptions'
    TypeParameter
      Identifier: 'T'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Watch'
        TypeReference
          Identifier: 'T'
    MethodSignature
      Identifier: '
    /** Updates the root files in the program, only if this is not config file compilation */
    updateRootFileNames'
      Parameter
        Identifier: 'fileNames'
        ArrayType
          StringKeyword
      VoidKeyword
  FunctionDeclaration
    ExportKeyword
    Identifier: ' createWatchCompilerHost'
    TypeParameter
      Identifier: 'T'
      TypeReference
        Identifier: ' BuilderProgram'
    Parameter
      Identifier: 'configFileName'
      StringKeyword
    Parameter
      Identifier: ' optionsToExtend'
      UnionType
        TypeReference
          Identifier: ' CompilerOptions'
        UndefinedKeyword
    Parameter
      Identifier: ' system'
      TypeReference
        Identifier: ' System'
    Parameter
      Identifier: ' createProgram'
      QuestionToken
      TypeReference
        Identifier: ' CreateProgram'
        TypeReference
          Identifier: 'T'
    Parameter
      Identifier: ' reportDiagnostic'
      QuestionToken
      TypeReference
        Identifier: ' DiagnosticReporter'
    Parameter
      Identifier: ' reportWatchStatus'
      QuestionToken
      TypeReference
        Identifier: ' WatchStatusReporter'
    Parameter
      Identifier: ' watchOptionsToExtend'
      QuestionToken
      TypeReference
        Identifier: ' WatchOptions'
    Parameter
      Identifier: ' extraFileExtensions'
      QuestionToken
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' FileExtensionInfo'
    TypeReference
      Identifier: ' WatchCompilerHostOfConfigFile'
      TypeReference
        Identifier: 'T'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' createWatchCompilerHost'
    TypeParameter
      Identifier: 'T'
      TypeReference
        Identifier: ' BuilderProgram'
    Parameter
      Identifier: 'rootFiles'
      ArrayType
        StringKeyword
    Parameter
      Identifier: ' options'
      TypeReference
        Identifier: ' CompilerOptions'
    Parameter
      Identifier: ' system'
      TypeReference
        Identifier: ' System'
    Parameter
      Identifier: ' createProgram'
      QuestionToken
      TypeReference
        Identifier: ' CreateProgram'
        TypeReference
          Identifier: 'T'
    Parameter
      Identifier: ' reportDiagnostic'
      QuestionToken
      TypeReference
        Identifier: ' DiagnosticReporter'
    Parameter
      Identifier: ' reportWatchStatus'
      QuestionToken
      TypeReference
        Identifier: ' WatchStatusReporter'
    Parameter
      Identifier: ' projectReferences'
      QuestionToken
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' ProjectReference'
    Parameter
      Identifier: ' watchOptions'
      QuestionToken
      TypeReference
        Identifier: ' WatchOptions'
    TypeReference
      Identifier: ' WatchCompilerHostOfFilesAndCompilerOptions'
      TypeReference
        Identifier: 'T'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' createWatchCompilerHost'
    TypeParameter
      Identifier: 'T'
      TypeReference
        Identifier: ' BuilderProgram'
    Parameter
      Identifier: 'rootFilesOrConfigFileName'
      UnionType
        StringKeyword
        ArrayType
          StringKeyword
    Parameter
      Identifier: ' options'
      UnionType
        TypeReference
          Identifier: ' CompilerOptions'
        UndefinedKeyword
    Parameter
      Identifier: ' system'
      TypeReference
        Identifier: ' System'
    Parameter
      Identifier: ' createProgram'
      QuestionToken
      TypeReference
        Identifier: ' CreateProgram'
        TypeReference
          Identifier: 'T'
    Parameter
      Identifier: ' reportDiagnostic'
      QuestionToken
      TypeReference
        Identifier: ' DiagnosticReporter'
    Parameter
      Identifier: ' reportWatchStatus'
      QuestionToken
      TypeReference
        Identifier: ' WatchStatusReporter'
    Parameter
      Identifier: ' projectReferencesOrWatchOptionsToExtend'
      QuestionToken
      UnionType
        TypeOperator
          ArrayType
            TypeReference
              Identifier: ' ProjectReference'
        TypeReference
          Identifier: ' WatchOptions'
    Parameter
      Identifier: ' watchOptionsOrExtraFileExtensions'
      QuestionToken
      UnionType
        TypeReference
          Identifier: ' WatchOptions'
        TypeOperator
          ArrayType
            TypeReference
              Identifier: ' FileExtensionInfo'
    UnionType
      TypeReference
        Identifier: ' WatchCompilerHostOfFilesAndCompilerOptions'
        TypeReference
          Identifier: 'T'
      TypeReference
        Identifier: ' WatchCompilerHostOfConfigFile'
        TypeReference
          Identifier: 'T'
    Block
      IfStatement
        CallExpression
          Identifier: 'isArray'
          Identifier: 'rootFilesOrConfigFileName'
        Block
          ReturnStatement
            CallExpression
              Identifier: ' createWatchCompilerHostOfFilesAndCompilerOptions'
              ObjectLiteralExpression
                PropertyAssignment
                  Identifier: '
            rootFiles'
                  Identifier: ' rootFilesOrConfigFileName'
                PropertyAssignment
                  Identifier: '
            options'
                  NonNullExpression
                    Identifier: ' options'
                PropertyAssignment
                  Identifier: '
            watchOptions'
                  AsExpression
                    Identifier: ' watchOptionsOrExtraFileExtensions'
                    TypeReference
                      Identifier: ' WatchOptions'
                PropertyAssignment
                  Identifier: '
            projectReferences'
                  AsExpression
                    Identifier: ' projectReferencesOrWatchOptionsToExtend'
                    TypeOperator
                      ArrayType
                        TypeReference
                          Identifier: ' ProjectReference'
                ShorthandPropertyAssignment
                  Identifier: '
            system'
                ShorthandPropertyAssignment
                  Identifier: '
            createProgram'
                ShorthandPropertyAssignment
                  Identifier: '
            reportDiagnostic'
                ShorthandPropertyAssignment
                  Identifier: '
            reportWatchStatus'
        Block
          ReturnStatement
            CallExpression
              Identifier: ' createWatchCompilerHostOfConfigFile'
              ObjectLiteralExpression
                PropertyAssignment
                  Identifier: '
            configFileName'
                  Identifier: ' rootFilesOrConfigFileName'
                PropertyAssignment
                  Identifier: '
            optionsToExtend'
                  Identifier: ' options'
                PropertyAssignment
                  Identifier: '
            watchOptionsToExtend'
                  AsExpression
                    Identifier: ' projectReferencesOrWatchOptionsToExtend'
                    TypeReference
                      Identifier: ' WatchOptions'
                PropertyAssignment
                  Identifier: '
            extraFileExtensions'
                  AsExpression
                    Identifier: ' watchOptionsOrExtraFileExtensions'
                    TypeOperator
                      ArrayType
                        TypeReference
                          Identifier: ' FileExtensionInfo'
                ShorthandPropertyAssignment
                  Identifier: '
            system'
                ShorthandPropertyAssignment
                  Identifier: '
            createProgram'
                ShorthandPropertyAssignment
                  Identifier: '
            reportDiagnostic'
                ShorthandPropertyAssignment
                  Identifier: '
            reportWatchStatus'
  InterfaceDeclaration
    Identifier: ' ParsedConfig'
    PropertySignature
      Identifier: '
    /** ParsedCommandLine for the config file if present */
    parsedCommandLine'
      UnionType
        TypeReference
          Identifier: ' ParsedCommandLine'
        UndefinedKeyword
    PropertySignature
      Identifier: '
    /** File watcher of the config file */
    watcher'
      QuestionToken
      TypeReference
        Identifier: ' FileWatcher'
    PropertySignature
      Identifier: '
    /** Wild card directories watched from this config file */
    watchedDirectories'
      QuestionToken
      TypeReference
        Identifier: ' Map'
        StringKeyword
        TypeReference
          Identifier: ' WildcardDirectoryWatcher'
    PropertySignature
      Identifier: '
    /** Level of program update to be done for this config file */
    updateLevel'
      QuestionToken
      UnionType
        TypeReference
          QualifiedName
            Identifier: ' ProgramUpdateLevel'
            Identifier: 'RootNamesAndUpdate'
        TypeReference
          QualifiedName
            Identifier: ' ProgramUpdateLevel'
            Identifier: 'Full'
  TypeAliasDeclaration
    Identifier: ' WatchCompilerHostOfFilesAndCompilerOptionsOrConfigFile'
    TypeParameter
      Identifier: 'T'
      TypeReference
        Identifier: ' BuilderProgram'
    UnionType
      IntersectionType
        TypeReference
          Identifier: ' WatchCompilerHostOfFilesAndCompilerOptions'
          TypeReference
            Identifier: 'T'
        TypeReference
          Identifier: ' Partial'
          TypeReference
            Identifier: 'WatchCompilerHostOfConfigFile'
            TypeReference
              Identifier: 'T'
      IntersectionType
        TypeReference
          Identifier: ' WatchCompilerHostOfConfigFile'
          TypeReference
            Identifier: 'T'
        TypeReference
          Identifier: ' Partial'
          TypeReference
            Identifier: 'WatchCompilerHostOfFilesAndCompilerOptions'
            TypeReference
              Identifier: 'T'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' createWatchProgram'
    TypeParameter
      Identifier: 'T'
      TypeReference
        Identifier: ' BuilderProgram'
    Parameter
      Identifier: 'host'
      TypeReference
        Identifier: ' WatchCompilerHostOfFilesAndCompilerOptions'
        TypeReference
          Identifier: 'T'
    TypeReference
      Identifier: ' WatchOfFilesAndCompilerOptions'
      TypeReference
        Identifier: 'T'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' createWatchProgram'
    TypeParameter
      Identifier: 'T'
      TypeReference
        Identifier: ' BuilderProgram'
    Parameter
      Identifier: 'host'
      TypeReference
        Identifier: ' WatchCompilerHostOfConfigFile'
        TypeReference
          Identifier: 'T'
    TypeReference
      Identifier: ' WatchOfConfigFile'
      TypeReference
        Identifier: 'T'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' createWatchProgram'
    TypeParameter
      Identifier: 'T'
      TypeReference
        Identifier: ' BuilderProgram'
    Parameter
      Identifier: 'host'
      TypeReference
        Identifier: ' WatchCompilerHostOfFilesAndCompilerOptionsOrConfigFile'
        TypeReference
          Identifier: 'T'
    UnionType
      TypeReference
        Identifier: ' WatchOfFilesAndCompilerOptions'
        TypeReference
          Identifier: 'T'
      TypeReference
        Identifier: ' WatchOfConfigFile'
        TypeReference
          Identifier: 'T'
    Block
      InterfaceDeclaration
        Identifier: ' FilePresentOnHost'
        PropertySignature
          Identifier: '
        version'
          StringKeyword
        PropertySignature
          Identifier: '
        sourceFile'
          TypeReference
            Identifier: ' SourceFile'
        PropertySignature
          Identifier: '
        fileWatcher'
          TypeReference
            Identifier: ' FileWatcher'
      TypeAliasDeclaration
        Identifier: ' FileMissingOnHost'
        LiteralType
          FalseKeyword
      InterfaceDeclaration
        Identifier: ' FilePresenceUnknownOnHost'
        PropertySignature
          Identifier: '
        version'
          LiteralType
            FalseKeyword
        PropertySignature
          Identifier: '
        fileWatcher'
          QuestionToken
          TypeReference
            Identifier: ' FileWatcher'
      TypeAliasDeclaration
        Identifier: ' FileMayBePresentOnHost'
        UnionType
          TypeReference
            Identifier: ' FilePresentOnHost'
          TypeReference
            Identifier: ' FilePresenceUnknownOnHost'
      TypeAliasDeclaration
        Identifier: ' HostFileInfo'
        UnionType
          TypeReference
            Identifier: ' FilePresentOnHost'
          TypeReference
            Identifier: ' FileMissingOnHost'
          TypeReference
            Identifier: ' FilePresenceUnknownOnHost'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' builderProgram'
            TypeReference
              Identifier: ' T'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' updateLevel'
            TypeReference
              Identifier: ' ProgramUpdateLevel'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' missingFilesMap'
            TypeReference
              Identifier: ' Map'
              TypeReference
                Identifier: 'Path'
              TypeReference
                Identifier: ' FileWatcher'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' watchedWildcardDirectories'
            TypeReference
              Identifier: ' Map'
              StringKeyword
              TypeReference
                Identifier: ' WildcardDirectoryWatcher'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' staleWatches'
            UnionType
              TypeReference
                Identifier: ' Map'
                UnionType
                  TypeReference
                    Identifier: 'Path'
                  UndefinedKeyword
                UnionType
                  StringKeyword
                  UndefinedKeyword
              UndefinedKeyword
            NewExpression
              Identifier: ' Map'
              ArrayLiteralExpression
                ArrayLiteralExpression
                  Identifier: 'undefined'
                  Identifier: ' undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' timerToUpdateProgram'
            AnyKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' timerToInvalidateFailedLookupResolutions'
            AnyKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' parsedConfigs'
            UnionType
              TypeReference
                Identifier: ' Map'
                TypeReference
                  Identifier: 'Path'
                TypeReference
                  Identifier: ' ParsedConfig'
              UndefinedKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' sharedExtendedConfigFileWatchers'
            TypeReference
              Identifier: ' Map'
              TypeReference
                Identifier: 'Path'
              TypeReference
                Identifier: ' SharedExtendedConfigFileWatcher'
                TypeReference
                  Identifier: 'Path'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' extendedConfigCache'
            PropertyAccessExpression
              Identifier: ' host'
              Identifier: 'extendedConfigCache'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' reportFileChangeDetectedOnCreateProgram'
            FalseKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' sourceFilesCache'
            NewExpression
              Identifier: ' Map'
              StringKeyword
              TypeReference
                Identifier: ' HostFileInfo'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' missingFilePathsRequestedForRelease'
            UnionType
              ArrayType
                TypeReference
                  Identifier: ' Path'
              UndefinedKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' hasChangedCompilerOptions'
            FalseKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' useCaseSensitiveFileNames'
            CallExpression
              PropertyAccessExpression
                Identifier: ' host'
                Identifier: 'useCaseSensitiveFileNames'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' currentDirectory'
            CallExpression
              PropertyAccessExpression
                Identifier: ' host'
                Identifier: 'getCurrentDirectory'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            ObjectBindingPattern
              BindingElement
                Identifier: ' configFileName'
              BindingElement
                Identifier: ' optionsToExtend'
                Identifier: ' optionsToExtendForConfigFile'
                ObjectLiteralExpression
              BindingElement
                Identifier: ' watchOptionsToExtend'
              BindingElement
                Identifier: ' extraFileExtensions'
              BindingElement
                Identifier: ' createProgram'
            Identifier: ' host'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            ObjectBindingPattern
              BindingElement
                Identifier: ' rootFiles'
                Identifier: ' rootFileNames'
              BindingElement
                Identifier: ' options'
                Identifier: ' compilerOptions'
              BindingElement
                Identifier: ' watchOptions'
              BindingElement
                Identifier: ' projectReferences'
            Identifier: ' host'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' wildcardDirectories'
            UnionType
              TypeReference
                Identifier: ' MapLike'
                TypeReference
                  Identifier: 'WatchDirectoryFlags'
              UndefinedKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' configFileParsingDiagnostics'
            UnionType
              ArrayType
                TypeReference
                  Identifier: ' Diagnostic'
              UndefinedKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' canConfigFileJsonReportNoInputFiles'
            FalseKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' hasChangedConfigFileParsingErrors'
            FalseKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' cachedDirectoryStructureHost'
            ConditionalExpression
              BinaryExpression
                Identifier: ' configFileName'
                EqualsEqualsEqualsToken
                Identifier: ' undefined'
              QuestionToken
              Identifier: ' undefined'
              ColonToken
              CallExpression
                Identifier: ' createCachedDirectoryStructureHost'
                Identifier: 'host'
                Identifier: ' currentDirectory'
                Identifier: ' useCaseSensitiveFileNames'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' directoryStructureHost'
            TypeReference
              Identifier: ' DirectoryStructureHost'
            BinaryExpression
              Identifier: ' cachedDirectoryStructureHost'
              BarBarToken
              Identifier: ' host'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' parseConfigFileHost'
            CallExpression
              Identifier: ' parseConfigHostFromCompilerHostLike'
              Identifier: 'host'
              Identifier: ' directoryStructureHost'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' newLine'
            CallExpression
              Identifier: ' updateNewLine'
      IfStatement
        BinaryExpression
          Identifier: 'configFileName'
          AmpersandAmpersandToken
          PropertyAccessExpression
            Identifier: ' host'
            Identifier: 'configFileParsingResult'
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        setConfigFileParsingResult'
              PropertyAccessExpression
                Identifier: 'host'
                Identifier: 'configFileParsingResult'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        newLine'
              EqualsToken
              CallExpression
                Identifier: ' updateNewLine'
      ExpressionStatement
        CallExpression
          Identifier: '
    reportWatchDiagnostic'
          PropertyAccessExpression
            Identifier: 'Diagnostics'
            Identifier: 'Starting_compilation_in_watch_mode'
      IfStatement
        BinaryExpression
          Identifier: 'configFileName'
          AmpersandAmpersandToken
          PrefixUnaryExpression
            PropertyAccessExpression
              Identifier: 'host'
              Identifier: 'configFileParsingResult'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        newLine'
              EqualsToken
              CallExpression
                Identifier: ' getNewLineCharacter'
                Identifier: 'optionsToExtendForConfigFile'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        Debug'
                Identifier: 'assert'
              PrefixUnaryExpression
                Identifier: 'rootFileNames'
          ExpressionStatement
            CallExpression
              Identifier: '
        parseConfigFile'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        newLine'
              EqualsToken
              CallExpression
                Identifier: ' updateNewLine'
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            Identifier: '

    Debug'
            Identifier: 'assert'
          Identifier: 'compilerOptions'
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            Identifier: '
    Debug'
            Identifier: 'assert'
          Identifier: 'rootFileNames'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            ObjectBindingPattern
              BindingElement
                Identifier: ' watchFile'
              BindingElement
                Identifier: ' watchDirectory'
              BindingElement
                Identifier: ' writeLog'
            CallExpression
              Identifier: ' createWatchFactory'
              Identifier: 'host'
              Identifier: ' compilerOptions'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' getCanonicalFileName'
            CallExpression
              Identifier: ' createGetCanonicalFileName'
              Identifier: 'useCaseSensitiveFileNames'
      ExpressionStatement
        CallExpression
          Identifier: '

    writeLog'
          TemplateExpression
            TemplateHead
            TemplateSpan
              Identifier: 'currentDirectory'
              TemplateMiddle
            TemplateSpan
              Identifier: 'useCaseSensitiveFileNames'
              TemplateTail
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' configFileWatcher'
            UnionType
              TypeReference
                Identifier: ' FileWatcher'
              UndefinedKeyword
      IfStatement
        Identifier: 'configFileName'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        configFileWatcher'
              EqualsToken
              CallExpression
                Identifier: ' watchFile'
                Identifier: 'configFileName'
                Identifier: ' scheduleProgramReload'
                PropertyAccessExpression
                  Identifier: ' PollingInterval'
                  Identifier: 'High'
                Identifier: ' watchOptions'
                PropertyAccessExpression
                  Identifier: ' WatchType'
                  Identifier: 'ConfigFile'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' compilerHost'
            AsExpression
              CallExpression
                Identifier: ' createCompilerHostFromProgramHost'
                Identifier: 'host'
                ArrowFunction
                  EqualsGreaterThanToken
                  NonNullExpression
                    Identifier: ' compilerOptions'
                Identifier: ' directoryStructureHost'
              IntersectionType
                TypeReference
                  Identifier: ' CompilerHost'
                TypeReference
                  Identifier: ' ResolutionCacheHost'
      ExpressionStatement
        CallExpression
          Identifier: '
    setGetSourceFileAsHashVersioned'
          Identifier: 'compilerHost'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' getNewSourceFile'
            PropertyAccessExpression
              Identifier: ' compilerHost'
              Identifier: 'getSourceFile'
      ExpressionStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: '
    compilerHost'
            Identifier: 'getSourceFile'
          EqualsToken
          ArrowFunction
            Parameter
              Identifier: 'fileName'
            Parameter
              DotDotDotToken
              Identifier: 'args'
            EqualsGreaterThanToken
            CallExpression
              Identifier: ' getVersionedSourceFileByPath'
              Identifier: 'fileName'
              CallExpression
                Identifier: ' toPath'
                Identifier: 'fileName'
              SpreadElement
                Identifier: 'args'
      ExpressionStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: '
    compilerHost'
            Identifier: 'getSourceFileByPath'
          EqualsToken
          Identifier: ' getVersionedSourceFileByPath'
      ExpressionStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: '
    compilerHost'
            Identifier: 'getNewLine'
          EqualsToken
          ArrowFunction
            EqualsGreaterThanToken
            Identifier: ' newLine'
      ExpressionStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: '
    compilerHost'
            Identifier: 'fileExists'
          EqualsToken
          Identifier: ' fileExists'
      ExpressionStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: '
    compilerHost'
            Identifier: 'onReleaseOldSourceFile'
          EqualsToken
          Identifier: ' onReleaseOldSourceFile'
      ExpressionStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: '
    compilerHost'
            Identifier: 'onReleaseParsedCommandLine'
          EqualsToken
          Identifier: ' onReleaseParsedCommandLine'
      ExpressionStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: '
    // Members for ResolutionCacheHost
    compilerHost'
            Identifier: 'toPath'
          EqualsToken
          Identifier: ' toPath'
      ExpressionStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: '
    compilerHost'
            Identifier: 'getCompilationSettings'
          EqualsToken
          ArrowFunction
            EqualsGreaterThanToken
            NonNullExpression
              Identifier: ' compilerOptions'
      ExpressionStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: '
    compilerHost'
            Identifier: 'useSourceOfProjectReferenceRedirect'
          EqualsToken
          CallExpression
            Identifier: ' maybeBind'
            Identifier: 'host'
            PropertyAccessExpression
              Identifier: ' host'
              Identifier: 'useSourceOfProjectReferenceRedirect'
      ExpressionStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: '
    compilerHost'
            Identifier: 'preferNonRecursiveWatch'
          EqualsToken
          PropertyAccessExpression
            Identifier: ' host'
            Identifier: 'preferNonRecursiveWatch'
      ExpressionStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: '
    compilerHost'
            Identifier: 'watchDirectoryOfFailedLookupLocation'
          EqualsToken
          ArrowFunction
            Parameter
              Identifier: 'dir'
            Parameter
              Identifier: ' cb'
            Parameter
              Identifier: ' flags'
            EqualsGreaterThanToken
            CallExpression
              Identifier: ' watchDirectory'
              Identifier: 'dir'
              Identifier: ' cb'
              Identifier: ' flags'
              Identifier: ' watchOptions'
              PropertyAccessExpression
                Identifier: ' WatchType'
                Identifier: 'FailedLookupLocations'
      ExpressionStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: '
    compilerHost'
            Identifier: 'watchAffectingFileLocation'
          EqualsToken
          ArrowFunction
            Parameter
              Identifier: 'file'
            Parameter
              Identifier: ' cb'
            EqualsGreaterThanToken
            CallExpression
              Identifier: ' watchFile'
              Identifier: 'file'
              Identifier: ' cb'
              PropertyAccessExpression
                Identifier: ' PollingInterval'
                Identifier: 'High'
              Identifier: ' watchOptions'
              PropertyAccessExpression
                Identifier: ' WatchType'
                Identifier: 'AffectingFileLocation'
      ExpressionStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: '
    compilerHost'
            Identifier: 'watchTypeRootsDirectory'
          EqualsToken
          ArrowFunction
            Parameter
              Identifier: 'dir'
            Parameter
              Identifier: ' cb'
            Parameter
              Identifier: ' flags'
            EqualsGreaterThanToken
            CallExpression
              Identifier: ' watchDirectory'
              Identifier: 'dir'
              Identifier: ' cb'
              Identifier: ' flags'
              Identifier: ' watchOptions'
              PropertyAccessExpression
                Identifier: ' WatchType'
                Identifier: 'TypeRoots'
      ExpressionStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: '
    compilerHost'
            Identifier: 'getCachedDirectoryStructureHost'
          EqualsToken
          ArrowFunction
            EqualsGreaterThanToken
            Identifier: ' cachedDirectoryStructureHost'
      ExpressionStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: '
    compilerHost'
            Identifier: 'scheduleInvalidateResolutionsOfFailedLookupLocations'
          EqualsToken
          Identifier: ' scheduleInvalidateResolutionsOfFailedLookupLocations'
      ExpressionStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: '
    compilerHost'
            Identifier: 'onInvalidatedResolution'
          EqualsToken
          Identifier: ' scheduleProgramUpdate'
      ExpressionStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: '
    compilerHost'
            Identifier: 'onChangedAutomaticTypeDirectiveNames'
          EqualsToken
          Identifier: ' scheduleProgramUpdate'
      ExpressionStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: '
    compilerHost'
            Identifier: 'fileIsOpen'
          EqualsToken
          Identifier: ' returnFalse'
      ExpressionStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: '
    compilerHost'
            Identifier: 'getCurrentProgram'
          EqualsToken
          Identifier: ' getCurrentProgram'
      ExpressionStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: '
    compilerHost'
            Identifier: 'writeLog'
          EqualsToken
          Identifier: ' writeLog'
      ExpressionStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: '
    compilerHost'
            Identifier: 'getParsedCommandLine'
          EqualsToken
          Identifier: ' getParsedCommandLine'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' resolutionCache'
            CallExpression
              Identifier: ' createResolutionCache'
              Identifier: '
        compilerHost'
              ConditionalExpression
                Identifier: '
        configFileName'
                QuestionToken
                CallExpression
                  Identifier: '
            getDirectoryPath'
                  CallExpression
                    Identifier: 'getNormalizedAbsolutePath'
                    Identifier: 'configFileName'
                    Identifier: ' currentDirectory'
                ColonToken
                Identifier: '
            currentDirectory'
              FalseKeyword
      ExpressionStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: '
    // Resolve module using host module resolution strategy if provided otherwise use resolution cache to resolve module names
    compilerHost'
            Identifier: 'resolveModuleNameLiterals'
          EqualsToken
          CallExpression
            Identifier: ' maybeBind'
            Identifier: 'host'
            PropertyAccessExpression
              Identifier: ' host'
              Identifier: 'resolveModuleNameLiterals'
      ExpressionStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: '
    compilerHost'
            Identifier: 'resolveModuleNames'
          EqualsToken
          CallExpression
            Identifier: ' maybeBind'
            Identifier: 'host'
            PropertyAccessExpression
              Identifier: ' host'
              Identifier: 'resolveModuleNames'
      IfStatement
        BinaryExpression
          PrefixUnaryExpression
            PropertyAccessExpression
              Identifier: 'compilerHost'
              Identifier: 'resolveModuleNameLiterals'
          AmpersandAmpersandToken
          PrefixUnaryExpression
            PropertyAccessExpression
              Identifier: 'compilerHost'
              Identifier: 'resolveModuleNames'
        Block
          ExpressionStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: '
        compilerHost'
                Identifier: 'resolveModuleNameLiterals'
              EqualsToken
              CallExpression
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: ' resolutionCache'
                    Identifier: 'resolveModuleNameLiterals'
                  Identifier: 'bind'
                Identifier: 'resolutionCache'
      ExpressionStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: '
    compilerHost'
            Identifier: 'resolveTypeReferenceDirectiveReferences'
          EqualsToken
          CallExpression
            Identifier: ' maybeBind'
            Identifier: 'host'
            PropertyAccessExpression
              Identifier: ' host'
              Identifier: 'resolveTypeReferenceDirectiveReferences'
      ExpressionStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: '
    compilerHost'
            Identifier: 'resolveTypeReferenceDirectives'
          EqualsToken
          CallExpression
            Identifier: ' maybeBind'
            Identifier: 'host'
            PropertyAccessExpression
              Identifier: ' host'
              Identifier: 'resolveTypeReferenceDirectives'
      IfStatement
        BinaryExpression
          PrefixUnaryExpression
            PropertyAccessExpression
              Identifier: 'compilerHost'
              Identifier: 'resolveTypeReferenceDirectiveReferences'
          AmpersandAmpersandToken
          PrefixUnaryExpression
            PropertyAccessExpression
              Identifier: 'compilerHost'
              Identifier: 'resolveTypeReferenceDirectives'
        Block
          ExpressionStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: '
        compilerHost'
                Identifier: 'resolveTypeReferenceDirectiveReferences'
              EqualsToken
              CallExpression
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: ' resolutionCache'
                    Identifier: 'resolveTypeReferenceDirectiveReferences'
                  Identifier: 'bind'
                Identifier: 'resolutionCache'
      ExpressionStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: '
    compilerHost'
            Identifier: 'resolveLibrary'
          EqualsToken
          ConditionalExpression
            PrefixUnaryExpression
              PropertyAccessExpression
                Identifier: 'host'
                Identifier: 'resolveLibrary'
            QuestionToken
            CallExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: '
        resolutionCache'
                  Identifier: 'resolveLibrary'
                Identifier: 'bind'
              Identifier: 'resolutionCache'
            ColonToken
            CallExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: '
        host'
                  Identifier: 'resolveLibrary'
                Identifier: 'bind'
              Identifier: 'host'
      ExpressionStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: '
    compilerHost'
            Identifier: 'getModuleResolutionCache'
          EqualsToken
          ConditionalExpression
            BinaryExpression
              PropertyAccessExpression
                Identifier: ' host'
                Identifier: 'resolveModuleNameLiterals'
              BarBarToken
              PropertyAccessExpression
                Identifier: ' host'
                Identifier: 'resolveModuleNames'
            QuestionToken
            CallExpression
              Identifier: '
        maybeBind'
              Identifier: 'host'
              PropertyAccessExpression
                Identifier: ' host'
                Identifier: 'getModuleResolutionCache'
            ColonToken
            ParenthesizedExpression
              ArrowFunction
                EqualsGreaterThanToken
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' resolutionCache'
                    Identifier: 'getModuleResolutionCache'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' userProvidedResolution'
            BinaryExpression
              BinaryExpression
                BinaryExpression
                  PrefixUnaryExpression
                    PrefixUnaryExpression
                      PropertyAccessExpression
                        Identifier: 'host'
                        Identifier: 'resolveModuleNameLiterals'
                  BarBarToken
                  PrefixUnaryExpression
                    PrefixUnaryExpression
                      PropertyAccessExpression
                        Identifier: 'host'
                        Identifier: 'resolveTypeReferenceDirectiveReferences'
                BarBarToken
                PrefixUnaryExpression
                  PrefixUnaryExpression
                    PropertyAccessExpression
                      Identifier: 'host'
                      Identifier: 'resolveModuleNames'
              BarBarToken
              PrefixUnaryExpression
                PrefixUnaryExpression
                  PropertyAccessExpression
                    Identifier: 'host'
                    Identifier: 'resolveTypeReferenceDirectives'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' customHasInvalidatedResolutions'
            ConditionalExpression
              Identifier: ' userProvidedResolution'
              QuestionToken
              BinaryExpression
                CallExpression
                  Identifier: '
        maybeBind'
                  Identifier: 'host'
                  PropertyAccessExpression
                    Identifier: ' host'
                    Identifier: 'hasInvalidatedResolutions'
                BarBarToken
                Identifier: ' returnTrue'
              ColonToken
              Identifier: '
        returnFalse'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' customHasInvalidLibResolutions'
            ConditionalExpression
              PropertyAccessExpression
                Identifier: ' host'
                Identifier: 'resolveLibrary'
              QuestionToken
              BinaryExpression
                CallExpression
                  Identifier: '
        maybeBind'
                  Identifier: 'host'
                  PropertyAccessExpression
                    Identifier: ' host'
                    Identifier: 'hasInvalidatedLibResolutions'
                BarBarToken
                Identifier: ' returnTrue'
              ColonToken
              Identifier: '
        returnFalse'
      ExpressionStatement
        BinaryExpression
          Identifier: '

    builderProgram'
          EqualsToken
          AsExpression
            AsExpression
              CallExpression
                Identifier: ' readBuilderProgram'
                Identifier: 'compilerOptions'
                Identifier: ' compilerHost'
              AnyKeyword
            TypeReference
              Identifier: ' T'
      ExpressionStatement
        CallExpression
          Identifier: '
    synchronizeProgram'
      ReturnStatement
        ConditionalExpression
          Identifier: ' configFileName'
          QuestionToken
          ObjectLiteralExpression
            PropertyAssignment
              Identifier: ' getCurrentProgram'
              Identifier: ' getCurrentBuilderProgram'
            PropertyAssignment
              Identifier: ' getProgram'
              Identifier: ' updateProgram'
            ShorthandPropertyAssignment
              Identifier: ' close'
            ShorthandPropertyAssignment
              Identifier: ' getResolutionCache'
          ColonToken
          ObjectLiteralExpression
            PropertyAssignment
              Identifier: ' getCurrentProgram'
              Identifier: ' getCurrentBuilderProgram'
            PropertyAssignment
              Identifier: ' getProgram'
              Identifier: ' updateProgram'
            ShorthandPropertyAssignment
              Identifier: ' updateRootFileNames'
            ShorthandPropertyAssignment
              Identifier: ' close'
            ShorthandPropertyAssignment
              Identifier: ' getResolutionCache'
      FunctionDeclaration
        Identifier: ' close'
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        clearInvalidateResolutionsOfFailedLookupLocations'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        resolutionCache'
                Identifier: 'clear'
          ExpressionStatement
            CallExpression
              Identifier: '
        clearMap'
              Identifier: 'sourceFilesCache'
              ArrowFunction
                Parameter
                  Identifier: ' value'
                EqualsGreaterThanToken
                Block
                  IfStatement
                    BinaryExpression
                      Identifier: 'value'
                      AmpersandAmpersandToken
                      PropertyAccessExpression
                        Identifier: ' value'
                        Identifier: 'fileWatcher'
                    Block
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            PropertyAccessExpression
                              Identifier: '
                value'
                              Identifier: 'fileWatcher'
                            Identifier: 'close'
                      ExpressionStatement
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: '
                value'
                            Identifier: 'fileWatcher'
                          EqualsToken
                          Identifier: ' undefined'
          IfStatement
            Identifier: 'configFileWatcher'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            configFileWatcher'
                    Identifier: 'close'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            configFileWatcher'
                  EqualsToken
                  Identifier: ' undefined'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        extendedConfigCache'
                QuestionDotToken
                Identifier: 'clear'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        extendedConfigCache'
              EqualsToken
              Identifier: ' undefined'
          IfStatement
            Identifier: 'sharedExtendedConfigFileWatchers'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            clearMap'
                  Identifier: 'sharedExtendedConfigFileWatchers'
                  Identifier: ' closeFileWatcherOf'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            sharedExtendedConfigFileWatchers'
                  EqualsToken
                  NonNullExpression
                    Identifier: ' undefined'
          IfStatement
            Identifier: 'watchedWildcardDirectories'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            clearMap'
                  Identifier: 'watchedWildcardDirectories'
                  Identifier: ' closeFileWatcherOf'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            watchedWildcardDirectories'
                  EqualsToken
                  NonNullExpression
                    Identifier: ' undefined'
          IfStatement
            Identifier: 'missingFilesMap'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            clearMap'
                  Identifier: 'missingFilesMap'
                  Identifier: ' closeFileWatcher'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            missingFilesMap'
                  EqualsToken
                  NonNullExpression
                    Identifier: ' undefined'
          IfStatement
            Identifier: 'parsedConfigs'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            clearMap'
                  Identifier: 'parsedConfigs'
                  ArrowFunction
                    Parameter
                      Identifier: ' config'
                    EqualsGreaterThanToken
                    Block
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            PropertyAccessExpression
                              Identifier: '
                config'
                              Identifier: 'watcher'
                            QuestionDotToken
                            Identifier: 'close'
                      ExpressionStatement
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: '
                config'
                            Identifier: 'watcher'
                          EqualsToken
                          Identifier: ' undefined'
                      IfStatement
                        PropertyAccessExpression
                          Identifier: 'config'
                          Identifier: 'watchedDirectories'
                        ExpressionStatement
                          CallExpression
                            Identifier: ' clearMap'
                            PropertyAccessExpression
                              Identifier: 'config'
                              Identifier: 'watchedDirectories'
                            Identifier: ' closeFileWatcherOf'
                      ExpressionStatement
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: '
                config'
                            Identifier: 'watchedDirectories'
                          EqualsToken
                          Identifier: ' undefined'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            parsedConfigs'
                  EqualsToken
                  Identifier: ' undefined'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        builderProgram'
              EqualsToken
              NonNullExpression
                Identifier: ' undefined'
      FunctionDeclaration
        Identifier: ' getResolutionCache'
        Block
          ReturnStatement
            Identifier: ' resolutionCache'
      FunctionDeclaration
        Identifier: ' getCurrentBuilderProgram'
        Block
          ReturnStatement
            Identifier: ' builderProgram'
      FunctionDeclaration
        Identifier: ' getCurrentProgram'
        Block
          ReturnStatement
            BinaryExpression
              Identifier: ' builderProgram'
              AmpersandAmpersandToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' builderProgram'
                  Identifier: 'getProgramOrUndefined'
      FunctionDeclaration
        Identifier: ' synchronizeProgram'
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        writeLog'
              NoSubstitutionTemplateLiteral
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '

        Debug'
                Identifier: 'assert'
              Identifier: 'compilerOptions'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        Debug'
                Identifier: 'assert'
              Identifier: 'rootFileNames'
          ExpressionStatement
            CallExpression
              Identifier: '

        clearInvalidateResolutionsOfFailedLookupLocations'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' program'
                CallExpression
                  Identifier: ' getCurrentBuilderProgram'
          IfStatement
            Identifier: 'hasChangedCompilerOptions'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            newLine'
                  EqualsToken
                  CallExpression
                    Identifier: ' updateNewLine'
              IfStatement
                BinaryExpression
                  Identifier: 'program'
                  AmpersandAmpersandToken
                  CallExpression
                    Identifier: ' changesAffectModuleResolution'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: 'program'
                        Identifier: 'getCompilerOptions'
                    Identifier: ' compilerOptions'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                resolutionCache'
                        Identifier: 'onChangesAffectModuleResolution'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                ObjectBindingPattern
                  BindingElement
                    Identifier: ' hasInvalidatedResolutions'
                  BindingElement
                    Identifier: ' hasInvalidatedLibResolutions'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' resolutionCache'
                    Identifier: 'createHasInvalidatedResolutions'
                  Identifier: 'customHasInvalidatedResolutions'
                  Identifier: ' customHasInvalidLibResolutions'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                ObjectBindingPattern
                  BindingElement
                    Identifier: '
            originalReadFile'
                  BindingElement
                    Identifier: '
            originalFileExists'
                  BindingElement
                    Identifier: '
            originalDirectoryExists'
                  BindingElement
                    Identifier: '
            originalCreateDirectory'
                  BindingElement
                    Identifier: '
            originalWriteFile'
                  BindingElement
                    Identifier: '
            readFileWithCache'
                CallExpression
                  Identifier: ' changeCompilerHostLikeToUseCache'
                  Identifier: 'compilerHost'
                  Identifier: ' toPath'
          IfStatement
            CallExpression
              Identifier: 'isProgramUptoDate'
              CallExpression
                Identifier: 'getCurrentProgram'
              Identifier: ' rootFileNames'
              Identifier: ' compilerOptions'
              ArrowFunction
                Parameter
                  Identifier: ' path'
                EqualsGreaterThanToken
                CallExpression
                  Identifier: ' getSourceVersion'
                  Identifier: 'path'
                  Identifier: ' readFileWithCache'
              ArrowFunction
                Parameter
                  Identifier: ' fileName'
                EqualsGreaterThanToken
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' compilerHost'
                    Identifier: 'fileExists'
                  Identifier: 'fileName'
              Identifier: ' hasInvalidatedResolutions'
              Identifier: ' hasInvalidatedLibResolutions'
              Identifier: ' hasChangedAutomaticTypeDirectiveNames'
              Identifier: ' getParsedCommandLine'
              Identifier: ' projectReferences'
            Block
              IfStatement
                Identifier: 'hasChangedConfigFileParsingErrors'
                Block
                  IfStatement
                    Identifier: 'reportFileChangeDetectedOnCreateProgram'
                    Block
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    reportWatchDiagnostic'
                          PropertyAccessExpression
                            Identifier: 'Diagnostics'
                            Identifier: 'File_change_detected_Starting_incremental_compilation'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                builderProgram'
                      EqualsToken
                      CallExpression
                        Identifier: ' createProgram'
                        Identifier: '/*rootNames*/ undefined'
                        Identifier: ' /*options*/ undefined'
                        Identifier: ' compilerHost'
                        Identifier: ' builderProgram'
                        Identifier: ' configFileParsingDiagnostics'
                        Identifier: ' projectReferences'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                hasChangedConfigFileParsingErrors'
                      EqualsToken
                      FalseKeyword
            Block
              IfStatement
                Identifier: 'reportFileChangeDetectedOnCreateProgram'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                reportWatchDiagnostic'
                      PropertyAccessExpression
                        Identifier: 'Diagnostics'
                        Identifier: 'File_change_detected_Starting_incremental_compilation'
              ExpressionStatement
                CallExpression
                  Identifier: '
            createNewProgram'
                  Identifier: 'hasInvalidatedResolutions'
                  Identifier: ' hasInvalidatedLibResolutions'
          ExpressionStatement
            BinaryExpression
              Identifier: '

        reportFileChangeDetectedOnCreateProgram'
              EqualsToken
              FalseKeyword
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'host'
                Identifier: 'afterProgramCreate'
              AmpersandAmpersandToken
              BinaryExpression
                Identifier: ' program'
                ExclamationEqualsEqualsToken
                Identifier: ' builderProgram'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            host'
                    Identifier: 'afterProgramCreate'
                  Identifier: 'builderProgram'
          ExpressionStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: '

        compilerHost'
                Identifier: 'readFile'
              EqualsToken
              Identifier: ' originalReadFile'
          ExpressionStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: '
        compilerHost'
                Identifier: 'fileExists'
              EqualsToken
              Identifier: ' originalFileExists'
          ExpressionStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: '
        compilerHost'
                Identifier: 'directoryExists'
              EqualsToken
              Identifier: ' originalDirectoryExists'
          ExpressionStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: '
        compilerHost'
                Identifier: 'createDirectory'
              EqualsToken
              Identifier: ' originalCreateDirectory'
          ExpressionStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: '
        compilerHost'
                Identifier: 'writeFile'
              EqualsToken
              NonNullExpression
                Identifier: ' originalWriteFile'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '

        staleWatches'
                QuestionDotToken
                Identifier: 'forEach'
              ArrowFunction
                Parameter
                  Identifier: 'configFile'
                Parameter
                  Identifier: ' configPath'
                EqualsGreaterThanToken
                Block
                  IfStatement
                    PrefixUnaryExpression
                      Identifier: 'configPath'
                    Block
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                // Update the wild card directory watch
                watchConfigFileWildCardDirectories'
                      IfStatement
                        Identifier: 'configFileName'
                        ExpressionStatement
                          CallExpression
                            Identifier: ' updateExtendedConfigFilesWatches'
                            CallExpression
                              Identifier: 'toPath'
                              Identifier: 'configFileName'
                            Identifier: ' compilerOptions'
                            Identifier: ' watchOptions'
                            PropertyAccessExpression
                              Identifier: ' WatchType'
                              Identifier: 'ExtendedConfigFile'
                    Block
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' config'
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' parsedConfigs'
                                QuestionDotToken
                                Identifier: 'get'
                              Identifier: 'configPath'
                      IfStatement
                        Identifier: 'config'
                        ExpressionStatement
                          CallExpression
                            Identifier: ' watchReferencedProject'
                            NonNullExpression
                              Identifier: 'configFile'
                            Identifier: ' configPath'
                            Identifier: ' config'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        staleWatches'
              EqualsToken
              Identifier: ' undefined'
          ReturnStatement
            Identifier: ' builderProgram'
      FunctionDeclaration
        Identifier: ' createNewProgram'
        Parameter
          Identifier: 'hasInvalidatedResolutions'
          TypeReference
            Identifier: ' HasInvalidatedResolutions'
        Parameter
          Identifier: ' hasInvalidatedLibResolutions'
          TypeReference
            Identifier: ' HasInvalidatedLibResolutions'
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        // Compile the program
        writeLog'
              StringLiteral
          ExpressionStatement
            CallExpression
              Identifier: '
        writeLog'
              TemplateExpression
                TemplateHead
                TemplateSpan
                  CallExpression
                    PropertyAccessExpression
                      Identifier: 'JSON'
                      Identifier: 'stringify'
                    Identifier: 'rootFileNames'
                  TemplateTail
          ExpressionStatement
            CallExpression
              Identifier: '
        writeLog'
              TemplateExpression
                TemplateHead
                TemplateSpan
                  CallExpression
                    PropertyAccessExpression
                      Identifier: 'JSON'
                      Identifier: 'stringify'
                    Identifier: 'compilerOptions'
                  TemplateTail
          IfStatement
            Identifier: 'projectReferences'
            ExpressionStatement
              CallExpression
                Identifier: ' writeLog'
                TemplateExpression
                  TemplateHead
                  TemplateSpan
                    CallExpression
                      PropertyAccessExpression
                        Identifier: 'JSON'
                        Identifier: 'stringify'
                      Identifier: 'projectReferences'
                    TemplateTail
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' needsUpdateInTypeRootWatch'
                BinaryExpression
                  Identifier: ' hasChangedCompilerOptions'
                  BarBarToken
                  PrefixUnaryExpression
                    CallExpression
                      Identifier: 'getCurrentProgram'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        hasChangedCompilerOptions'
              EqualsToken
              FalseKeyword
          ExpressionStatement
            BinaryExpression
              Identifier: '
        hasChangedConfigFileParsingErrors'
              EqualsToken
              FalseKeyword
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        resolutionCache'
                Identifier: 'startCachingPerDirectoryResolution'
          ExpressionStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: '
        compilerHost'
                Identifier: 'hasInvalidatedResolutions'
              EqualsToken
              Identifier: ' hasInvalidatedResolutions'
          ExpressionStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: '
        compilerHost'
                Identifier: 'hasInvalidatedLibResolutions'
              EqualsToken
              Identifier: ' hasInvalidatedLibResolutions'
          ExpressionStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: '
        compilerHost'
                Identifier: 'hasChangedAutomaticTypeDirectiveNames'
              EqualsToken
              Identifier: ' hasChangedAutomaticTypeDirectiveNames'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' oldProgram'
                CallExpression
                  Identifier: ' getCurrentProgram'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        builderProgram'
              EqualsToken
              CallExpression
                Identifier: ' createProgram'
                Identifier: 'rootFileNames'
                Identifier: ' compilerOptions'
                Identifier: ' compilerHost'
                Identifier: ' builderProgram'
                Identifier: ' configFileParsingDiagnostics'
                Identifier: ' projectReferences'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        resolutionCache'
                Identifier: 'finishCachingPerDirectoryResolution'
              CallExpression
                PropertyAccessExpression
                  Identifier: 'builderProgram'
                  Identifier: 'getProgram'
              Identifier: ' oldProgram'
          ExpressionStatement
            CallExpression
              Identifier: '

        // Update watches
        updateMissingFilePathsWatch'
              CallExpression
                PropertyAccessExpression
                  Identifier: '
            builderProgram'
                  Identifier: 'getProgram'
              BinaryExpression
                Identifier: '
            missingFilesMap'
                BarBarToken
                ParenthesizedExpression
                  BinaryExpression
                    Identifier: 'missingFilesMap'
                    EqualsToken
                    NewExpression
                      Identifier: ' Map'
              Identifier: '
            watchMissingFilePath'
          IfStatement
            Identifier: 'needsUpdateInTypeRootWatch'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            resolutionCache'
                    Identifier: 'updateTypeRootsWatch'
          IfStatement
            Identifier: 'missingFilePathsRequestedForRelease'
            Block
              ForOfStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' missingFilePath'
                Identifier: ' missingFilePathsRequestedForRelease'
                Block
                  IfStatement
                    PrefixUnaryExpression
                      CallExpression
                        PropertyAccessExpression
                          Identifier: 'missingFilesMap'
                          Identifier: 'has'
                        Identifier: 'missingFilePath'
                    Block
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                    sourceFilesCache'
                            Identifier: 'delete'
                          Identifier: 'missingFilePath'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            missingFilePathsRequestedForRelease'
                  EqualsToken
                  Identifier: ' undefined'
      FunctionDeclaration
        Identifier: ' updateRootFileNames'
        Parameter
          Identifier: 'files'
          ArrayType
            StringKeyword
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        Debug'
                Identifier: 'assert'
              PrefixUnaryExpression
                Identifier: 'configFileName'
              StringLiteral
          ExpressionStatement
            BinaryExpression
              Identifier: '
        rootFileNames'
              EqualsToken
              Identifier: ' files'
          ExpressionStatement
            CallExpression
              Identifier: '
        scheduleProgramUpdate'
      FunctionDeclaration
        Identifier: ' updateNewLine'
        Block
          ReturnStatement
            CallExpression
              Identifier: ' getNewLineCharacter'
              BinaryExpression
                Identifier: 'compilerOptions'
                BarBarToken
                Identifier: ' optionsToExtendForConfigFile'
      FunctionDeclaration
        Identifier: ' toPath'
        Parameter
          Identifier: 'fileName'
          StringKeyword
        Block
          ReturnStatement
            CallExpression
              Identifier: ' ts_toPath'
              Identifier: 'fileName'
              Identifier: ' currentDirectory'
              Identifier: ' getCanonicalFileName'
      FunctionDeclaration
        Identifier: ' isFileMissingOnHost'
        Parameter
          Identifier: 'hostSourceFile'
          UnionType
            TypeReference
              Identifier: ' HostFileInfo'
            UndefinedKeyword
        TypePredicate
          Identifier: ' hostSourceFile'
          TypeReference
            Identifier: ' FileMissingOnHost'
        Block
          ReturnStatement
            BinaryExpression
              TypeOfExpression
                Identifier: ' hostSourceFile'
              EqualsEqualsEqualsToken
              StringLiteral
      FunctionDeclaration
        Identifier: ' isFilePresenceUnknownOnHost'
        Parameter
          Identifier: 'hostSourceFile'
          TypeReference
            Identifier: ' FileMayBePresentOnHost'
        TypePredicate
          Identifier: ' hostSourceFile'
          TypeReference
            Identifier: ' FilePresenceUnknownOnHost'
        Block
          ReturnStatement
            BinaryExpression
              TypeOfExpression
                PropertyAccessExpression
                  ParenthesizedExpression
                    AsExpression
                      Identifier: 'hostSourceFile'
                      TypeReference
                        Identifier: ' FilePresenceUnknownOnHost'
                  Identifier: 'version'
              EqualsEqualsEqualsToken
              StringLiteral
      FunctionDeclaration
        Identifier: ' fileExists'
        Parameter
          Identifier: 'fileName'
          StringKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' path'
                CallExpression
                  Identifier: ' toPath'
                  Identifier: 'fileName'
          IfStatement
            CallExpression
              Identifier: 'isFileMissingOnHost'
              CallExpression
                PropertyAccessExpression
                  Identifier: 'sourceFilesCache'
                  Identifier: 'get'
                Identifier: 'path'
            Block
              ReturnStatement
                FalseKeyword
          ReturnStatement
            CallExpression
              PropertyAccessExpression
                Identifier: ' directoryStructureHost'
                Identifier: 'fileExists'
              Identifier: 'fileName'
      FunctionDeclaration
        Identifier: ' getVersionedSourceFileByPath'
        Parameter
          Identifier: 'fileName'
          StringKeyword
        Parameter
          Identifier: ' path'
          TypeReference
            Identifier: ' Path'
        Parameter
          Identifier: ' languageVersionOrOptions'
          UnionType
            TypeReference
              Identifier: ' ScriptTarget'
            TypeReference
              Identifier: ' CreateSourceFileOptions'
        Parameter
          Identifier: ' onError'
          QuestionToken
          FunctionType
            Parameter
              Identifier: 'message'
              StringKeyword
            VoidKeyword
        Parameter
          Identifier: ' shouldCreateNewSourceFile'
          QuestionToken
          BooleanKeyword
        UnionType
          TypeReference
            Identifier: ' SourceFile'
          UndefinedKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' hostSourceFile'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' sourceFilesCache'
                    Identifier: 'get'
                  Identifier: 'path'
          IfStatement
            CallExpression
              Identifier: 'isFileMissingOnHost'
              Identifier: 'hostSourceFile'
            Block
              ReturnStatement
                Identifier: ' undefined'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' impliedNodeFormat'
                ConditionalExpression
                  BinaryExpression
                    TypeOfExpression
                      Identifier: ' languageVersionOrOptions'
                    EqualsEqualsEqualsToken
                    StringLiteral
                  QuestionToken
                  PropertyAccessExpression
                    Identifier: ' languageVersionOrOptions'
                    Identifier: 'impliedNodeFormat'
                  ColonToken
                  Identifier: ' undefined'
          IfStatement
            BinaryExpression
              BinaryExpression
                BinaryExpression
                  BinaryExpression
                    Identifier: 'hostSourceFile'
                    EqualsEqualsEqualsToken
                    Identifier: ' undefined'
                  BarBarToken
                  Identifier: ' shouldCreateNewSourceFile'
                BarBarToken
                CallExpression
                  Identifier: ' isFilePresenceUnknownOnHost'
                  Identifier: 'hostSourceFile'
              BarBarToken
              BinaryExpression
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: ' hostSourceFile'
                    Identifier: 'sourceFile'
                  Identifier: 'impliedNodeFormat'
                ExclamationEqualsEqualsToken
                Identifier: ' impliedNodeFormat'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' sourceFile'
                    CallExpression
                      Identifier: ' getNewSourceFile'
                      Identifier: 'fileName'
                      Identifier: ' languageVersionOrOptions'
                      Identifier: ' onError'
              IfStatement
                Identifier: 'hostSourceFile'
                Block
                  IfStatement
                    Identifier: 'sourceFile'
                    Block
                      ExpressionStatement
                        BinaryExpression
                          PropertyAccessExpression
                            ParenthesizedExpression
                              AsExpression
                                Identifier: 'hostSourceFile'
                                TypeReference
                                  Identifier: ' FilePresentOnHost'
                            Identifier: 'sourceFile'
                          EqualsToken
                          Identifier: ' sourceFile'
                      ExpressionStatement
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: '
                    hostSourceFile'
                            Identifier: 'version'
                          EqualsToken
                          PropertyAccessExpression
                            Identifier: ' sourceFile'
                            Identifier: 'version'
                      IfStatement
                        PrefixUnaryExpression
                          PropertyAccessExpression
                            Identifier: 'hostSourceFile'
                            Identifier: 'fileWatcher'
                        Block
                          ExpressionStatement
                            BinaryExpression
                              PropertyAccessExpression
                                Identifier: '
                        hostSourceFile'
                                Identifier: 'fileWatcher'
                              EqualsToken
                              CallExpression
                                Identifier: ' watchFilePath'
                                Identifier: 'path'
                                Identifier: ' fileName'
                                Identifier: ' onSourceFileChange'
                                PropertyAccessExpression
                                  Identifier: ' PollingInterval'
                                  Identifier: 'Low'
                                Identifier: ' watchOptions'
                                PropertyAccessExpression
                                  Identifier: ' WatchType'
                                  Identifier: 'SourceFile'
                    Block
                      IfStatement
                        PropertyAccessExpression
                          Identifier: 'hostSourceFile'
                          Identifier: 'fileWatcher'
                        Block
                          ExpressionStatement
                            CallExpression
                              PropertyAccessExpression
                                PropertyAccessExpression
                                  Identifier: '
                        hostSourceFile'
                                  Identifier: 'fileWatcher'
                                Identifier: 'close'
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                    sourceFilesCache'
                            Identifier: 'set'
                          Identifier: 'path'
                          FalseKeyword
                Block
                  IfStatement
                    Identifier: 'sourceFile'
                    Block
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' fileWatcher'
                            CallExpression
                              Identifier: ' watchFilePath'
                              Identifier: 'path'
                              Identifier: ' fileName'
                              Identifier: ' onSourceFileChange'
                              PropertyAccessExpression
                                Identifier: ' PollingInterval'
                                Identifier: 'Low'
                              Identifier: ' watchOptions'
                              PropertyAccessExpression
                                Identifier: ' WatchType'
                                Identifier: 'SourceFile'
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                    sourceFilesCache'
                            Identifier: 'set'
                          Identifier: 'path'
                          ObjectLiteralExpression
                            ShorthandPropertyAssignment
                              Identifier: ' sourceFile'
                            PropertyAssignment
                              Identifier: ' version'
                              PropertyAccessExpression
                                Identifier: ' sourceFile'
                                Identifier: 'version'
                            ShorthandPropertyAssignment
                              Identifier: ' fileWatcher'
                    Block
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                    sourceFilesCache'
                            Identifier: 'set'
                          Identifier: 'path'
                          FalseKeyword
              ReturnStatement
                Identifier: ' sourceFile'
          ReturnStatement
            PropertyAccessExpression
              Identifier: ' hostSourceFile'
              Identifier: 'sourceFile'
      FunctionDeclaration
        Identifier: ' nextSourceFileVersion'
        Parameter
          Identifier: 'path'
          TypeReference
            Identifier: ' Path'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' hostSourceFile'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' sourceFilesCache'
                    Identifier: 'get'
                  Identifier: 'path'
          IfStatement
            BinaryExpression
              Identifier: 'hostSourceFile'
              ExclamationEqualsEqualsToken
              Identifier: ' undefined'
            Block
              IfStatement
                CallExpression
                  Identifier: 'isFileMissingOnHost'
                  Identifier: 'hostSourceFile'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                // The next version, lets set it as presence unknown file
                sourceFilesCache'
                        Identifier: 'set'
                      Identifier: 'path'
                      ObjectLiteralExpression
                        PropertyAssignment
                          Identifier: ' version'
                          FalseKeyword
                Block
                  ExpressionStatement
                    BinaryExpression
                      PropertyAccessExpression
                        ParenthesizedExpression
                          AsExpression
                            Identifier: 'hostSourceFile'
                            TypeReference
                              Identifier: ' FilePresenceUnknownOnHost'
                        Identifier: 'version'
                      EqualsToken
                      FalseKeyword
      FunctionDeclaration
        Identifier: ' getSourceVersion'
        Parameter
          Identifier: 'path'
          TypeReference
            Identifier: ' Path'
        Parameter
          Identifier: ' readFileWithCache'
          FunctionType
            Parameter
              Identifier: 'file'
              StringKeyword
            UnionType
              StringKeyword
              UndefinedKeyword
        UnionType
          StringKeyword
          UndefinedKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' hostSourceFile'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' sourceFilesCache'
                    Identifier: 'get'
                  Identifier: 'path'
          IfStatement
            PrefixUnaryExpression
              Identifier: 'hostSourceFile'
            ReturnStatement
              Identifier: ' undefined'
          IfStatement
            PropertyAccessExpression
              Identifier: 'hostSourceFile'
              Identifier: 'version'
            ReturnStatement
              PropertyAccessExpression
                Identifier: ' hostSourceFile'
                Identifier: 'version'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' text'
                CallExpression
                  Identifier: ' readFileWithCache'
                  Identifier: 'path'
          ReturnStatement
            ConditionalExpression
              BinaryExpression
                Identifier: ' text'
                ExclamationEqualsEqualsToken
                Identifier: ' undefined'
              QuestionToken
              CallExpression
                Identifier: ' getSourceFileVersionAsHashFromText'
                Identifier: 'compilerHost'
                Identifier: ' text'
              ColonToken
              Identifier: ' undefined'
      FunctionDeclaration
        Identifier: ' onReleaseOldSourceFile'
        Parameter
          Identifier: 'oldSourceFile'
          TypeReference
            Identifier: ' SourceFile'
        Parameter
          Identifier: ' _oldOptions'
          TypeReference
            Identifier: ' CompilerOptions'
        Parameter
          Identifier: ' hasSourceFileByPath'
          BooleanKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' hostSourceFileInfo'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' sourceFilesCache'
                    Identifier: 'get'
                  PropertyAccessExpression
                    Identifier: 'oldSourceFile'
                    Identifier: 'resolvedPath'
          IfStatement
            BinaryExpression
              Identifier: 'hostSourceFileInfo'
              ExclamationEqualsEqualsToken
              Identifier: ' undefined'
            Block
              IfStatement
                CallExpression
                  Identifier: 'isFileMissingOnHost'
                  Identifier: 'hostSourceFileInfo'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        ParenthesizedExpression
                          BinaryExpression
                            Identifier: 'missingFilePathsRequestedForRelease'
                            BarBarToken
                            ParenthesizedExpression
                              BinaryExpression
                                Identifier: 'missingFilePathsRequestedForRelease'
                                EqualsToken
                                ArrayLiteralExpression
                        Identifier: 'push'
                      PropertyAccessExpression
                        Identifier: 'oldSourceFile'
                        Identifier: 'path'
                IfStatement
                  BinaryExpression
                    PropertyAccessExpression
                      ParenthesizedExpression
                        AsExpression
                          Identifier: 'hostSourceFileInfo'
                          TypeReference
                            Identifier: ' FilePresentOnHost'
                      Identifier: 'sourceFile'
                    EqualsEqualsEqualsToken
                    Identifier: ' oldSourceFile'
                  Block
                    IfStatement
                      PropertyAccessExpression
                        Identifier: 'hostSourceFileInfo'
                        Identifier: 'fileWatcher'
                      Block
                        ExpressionStatement
                          CallExpression
                            PropertyAccessExpression
                              PropertyAccessExpression
                                Identifier: '
                    hostSourceFileInfo'
                                Identifier: 'fileWatcher'
                              Identifier: 'close'
                    ExpressionStatement
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                sourceFilesCache'
                          Identifier: 'delete'
                        PropertyAccessExpression
                          Identifier: 'oldSourceFile'
                          Identifier: 'resolvedPath'
                    IfStatement
                      PrefixUnaryExpression
                        Identifier: 'hasSourceFileByPath'
                      Block
                        ExpressionStatement
                          CallExpression
                            PropertyAccessExpression
                              Identifier: '
                    resolutionCache'
                              Identifier: 'removeResolutionsOfFile'
                            PropertyAccessExpression
                              Identifier: 'oldSourceFile'
                              Identifier: 'path'
      FunctionDeclaration
        Identifier: ' reportWatchDiagnostic'
        Parameter
          Identifier: 'message'
          TypeReference
            Identifier: ' DiagnosticMessage'
        Block
          IfStatement
            PropertyAccessExpression
              Identifier: 'host'
              Identifier: 'onWatchStatusChange'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            host'
                    Identifier: 'onWatchStatusChange'
                  CallExpression
                    Identifier: 'createCompilerDiagnostic'
                    Identifier: 'message'
                  Identifier: ' newLine'
                  BinaryExpression
                    Identifier: ' compilerOptions'
                    BarBarToken
                    Identifier: ' optionsToExtendForConfigFile'
      FunctionDeclaration
        Identifier: ' hasChangedAutomaticTypeDirectiveNames'
        Block
          ReturnStatement
            CallExpression
              PropertyAccessExpression
                Identifier: ' resolutionCache'
                Identifier: 'hasChangedAutomaticTypeDirectiveNames'
      FunctionDeclaration
        Identifier: ' clearInvalidateResolutionsOfFailedLookupLocations'
        Block
          IfStatement
            PrefixUnaryExpression
              Identifier: 'timerToInvalidateFailedLookupResolutions'
            ReturnStatement
              FalseKeyword
          ExpressionStatement
            CallExpression
              NonNullExpression
                PropertyAccessExpression
                  Identifier: '
        host'
                  Identifier: 'clearTimeout'
              Identifier: 'timerToInvalidateFailedLookupResolutions'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        timerToInvalidateFailedLookupResolutions'
              EqualsToken
              Identifier: ' undefined'
          ReturnStatement
            TrueKeyword
      FunctionDeclaration
        Identifier: ' scheduleInvalidateResolutionsOfFailedLookupLocations'
        Block
          IfStatement
            BinaryExpression
              PrefixUnaryExpression
                PropertyAccessExpression
                  Identifier: 'host'
                  Identifier: 'setTimeout'
              BarBarToken
              PrefixUnaryExpression
                PropertyAccessExpression
                  Identifier: 'host'
                  Identifier: 'clearTimeout'
            Block
              ReturnStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' resolutionCache'
                    Identifier: 'invalidateResolutionsOfFailedLookupLocations'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' pending'
                CallExpression
                  Identifier: ' clearInvalidateResolutionsOfFailedLookupLocations'
          ExpressionStatement
            CallExpression
              Identifier: '
        writeLog'
              TemplateExpression
                TemplateHead
                TemplateSpan
                  ConditionalExpression
                    Identifier: 'pending'
                    QuestionToken
                    StringLiteral
                    ColonToken
                    StringLiteral
                  TemplateTail
          ExpressionStatement
            BinaryExpression
              Identifier: '
        timerToInvalidateFailedLookupResolutions'
              EqualsToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' host'
                  Identifier: 'setTimeout'
                Identifier: 'invalidateResolutionsOfFailedLookup'
                NumericLiteral
                StringLiteral
      FunctionDeclaration
        Identifier: ' invalidateResolutionsOfFailedLookup'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        timerToInvalidateFailedLookupResolutions'
              EqualsToken
              Identifier: ' undefined'
          IfStatement
            CallExpression
              PropertyAccessExpression
                Identifier: 'resolutionCache'
                Identifier: 'invalidateResolutionsOfFailedLookupLocations'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            scheduleProgramUpdate'
      FunctionDeclaration
        Identifier: ' scheduleProgramUpdate'
        Block
          IfStatement
            BinaryExpression
              PrefixUnaryExpression
                PropertyAccessExpression
                  Identifier: 'host'
                  Identifier: 'setTimeout'
              BarBarToken
              PrefixUnaryExpression
                PropertyAccessExpression
                  Identifier: 'host'
                  Identifier: 'clearTimeout'
            Block
              ReturnStatement
          IfStatement
            Identifier: 'timerToUpdateProgram'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            host'
                    Identifier: 'clearTimeout'
                  Identifier: 'timerToUpdateProgram'
          ExpressionStatement
            CallExpression
              Identifier: '
        writeLog'
              StringLiteral
          ExpressionStatement
            BinaryExpression
              Identifier: '
        timerToUpdateProgram'
              EqualsToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' host'
                  Identifier: 'setTimeout'
                Identifier: 'updateProgramWithWatchStatus'
                NumericLiteral
                StringLiteral
      FunctionDeclaration
        Identifier: ' scheduleProgramReload'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        Debug'
                Identifier: 'assert'
              PrefixUnaryExpression
                PrefixUnaryExpression
                  Identifier: 'configFileName'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        updateLevel'
              EqualsToken
              PropertyAccessExpression
                Identifier: ' ProgramUpdateLevel'
                Identifier: 'Full'
          ExpressionStatement
            CallExpression
              Identifier: '
        scheduleProgramUpdate'
      FunctionDeclaration
        Identifier: ' updateProgramWithWatchStatus'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        timerToUpdateProgram'
              EqualsToken
              Identifier: ' undefined'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        reportFileChangeDetectedOnCreateProgram'
              EqualsToken
              TrueKeyword
          ExpressionStatement
            CallExpression
              Identifier: '
        updateProgram'
      FunctionDeclaration
        Identifier: ' updateProgram'
        Block
          SwitchStatement
            Identifier: 'updateLevel'
            CaseBlock
              CaseClause
                PropertyAccessExpression
                  Identifier: ' ProgramUpdateLevel'
                  Identifier: 'RootNamesAndUpdate'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                reloadFileNamesFromConfigFile'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' ProgramUpdateLevel'
                  Identifier: 'Full'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                reloadConfigFile'
                BreakStatement
              DefaultClause
                ExpressionStatement
                  CallExpression
                    Identifier: '
                synchronizeProgram'
                BreakStatement
          ReturnStatement
            CallExpression
              Identifier: ' getCurrentBuilderProgram'
      FunctionDeclaration
        Identifier: ' reloadFileNamesFromConfigFile'
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        writeLog'
              StringLiteral
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '

        Debug'
                Identifier: 'assert'
              Identifier: 'compilerOptions'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        Debug'
                Identifier: 'assert'
              Identifier: 'configFileName'
          ExpressionStatement
            BinaryExpression
              Identifier: '

        updateLevel'
              EqualsToken
              PropertyAccessExpression
                Identifier: ' ProgramUpdateLevel'
                Identifier: 'Update'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        rootFileNames'
              EqualsToken
              CallExpression
                Identifier: ' getFileNamesFromConfigSpecs'
                NonNullExpression
                  PropertyAccessExpression
                    NonNullExpression
                      PropertyAccessExpression
                        Identifier: 'compilerOptions'
                        Identifier: 'configFile'
                    Identifier: 'configFileSpecs'
                CallExpression
                  Identifier: ' getNormalizedAbsolutePath'
                  CallExpression
                    Identifier: 'getDirectoryPath'
                    Identifier: 'configFileName'
                  Identifier: ' currentDirectory'
                Identifier: ' compilerOptions'
                Identifier: ' parseConfigFileHost'
                Identifier: ' extraFileExtensions'
          IfStatement
            CallExpression
              Identifier: '
            updateErrorForNoInputFiles'
              Identifier: '
                rootFileNames'
              CallExpression
                Identifier: '
                getNormalizedAbsolutePath'
                Identifier: 'configFileName'
                Identifier: ' currentDirectory'
              NonNullExpression
                PropertyAccessExpression
                  NonNullExpression
                    PropertyAccessExpression
                      Identifier: '
                compilerOptions'
                      Identifier: 'configFile'
                  Identifier: 'configFileSpecs'
              NonNullExpression
                Identifier: '
                configFileParsingDiagnostics'
              Identifier: '
                canConfigFileJsonReportNoInputFiles'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            hasChangedConfigFileParsingErrors'
                  EqualsToken
                  TrueKeyword
          ExpressionStatement
            CallExpression
              Identifier: '

        // Update the program
        synchronizeProgram'
      FunctionDeclaration
        Identifier: ' reloadConfigFile'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        Debug'
                Identifier: 'assert'
              Identifier: 'configFileName'
          ExpressionStatement
            CallExpression
              Identifier: '
        writeLog'
              TemplateExpression
                TemplateHead
                TemplateSpan
                  Identifier: 'configFileName'
                  TemplateTail
          ExpressionStatement
            BinaryExpression
              Identifier: '
        updateLevel'
              EqualsToken
              PropertyAccessExpression
                Identifier: ' ProgramUpdateLevel'
                Identifier: 'Update'
          IfStatement
            Identifier: 'cachedDirectoryStructureHost'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            cachedDirectoryStructureHost'
                    Identifier: 'clearCache'
          ExpressionStatement
            CallExpression
              Identifier: '
        parseConfigFile'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        hasChangedCompilerOptions'
              EqualsToken
              TrueKeyword
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                ParenthesizedExpression
                  BinaryExpression
                    Identifier: 'staleWatches'
                    QuestionQuestionEqualsToken
                    NewExpression
                      Identifier: ' Map'
                Identifier: 'set'
              Identifier: 'undefined'
              Identifier: ' undefined'
          ExpressionStatement
            CallExpression
              Identifier: '
        synchronizeProgram'
      FunctionDeclaration
        Identifier: ' parseConfigFile'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        Debug'
                Identifier: 'assert'
              Identifier: 'configFileName'
          ExpressionStatement
            CallExpression
              Identifier: '
        setConfigFileParsingResult'
              NonNullExpression
                CallExpression
                  Identifier: '
            getParsedCommandLineOfConfigFile'
                  Identifier: '
                configFileName'
                  Identifier: '
                optionsToExtendForConfigFile'
                  Identifier: '
                parseConfigFileHost'
                  BinaryExpression
                    Identifier: '
                extendedConfigCache'
                    BarBarEqualsToken
                    NewExpression
                      Identifier: ' Map'
                  Identifier: '
                watchOptionsToExtend'
                  Identifier: '
                extraFileExtensions'
      FunctionDeclaration
        Identifier: ' setConfigFileParsingResult'
        Parameter
          Identifier: 'configFileParseResult'
          TypeReference
            Identifier: ' ParsedCommandLine'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        rootFileNames'
              EqualsToken
              PropertyAccessExpression
                Identifier: ' configFileParseResult'
                Identifier: 'fileNames'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        compilerOptions'
              EqualsToken
              PropertyAccessExpression
                Identifier: ' configFileParseResult'
                Identifier: 'options'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        watchOptions'
              EqualsToken
              PropertyAccessExpression
                Identifier: ' configFileParseResult'
                Identifier: 'watchOptions'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        projectReferences'
              EqualsToken
              PropertyAccessExpression
                Identifier: ' configFileParseResult'
                Identifier: 'projectReferences'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        wildcardDirectories'
              EqualsToken
              PropertyAccessExpression
                Identifier: ' configFileParseResult'
                Identifier: 'wildcardDirectories'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        configFileParsingDiagnostics'
              EqualsToken
              CallExpression
                PropertyAccessExpression
                  CallExpression
                    Identifier: ' getConfigFileParsingDiagnostics'
                    Identifier: 'configFileParseResult'
                  Identifier: 'slice'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        canConfigFileJsonReportNoInputFiles'
              EqualsToken
              CallExpression
                Identifier: ' canJsonReportNoInputFiles'
                PropertyAccessExpression
                  Identifier: 'configFileParseResult'
                  Identifier: 'raw'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        hasChangedConfigFileParsingErrors'
              EqualsToken
              TrueKeyword
      FunctionDeclaration
        Identifier: ' getParsedCommandLine'
        Parameter
          Identifier: 'configFileName'
          StringKeyword
        UnionType
          TypeReference
            Identifier: ' ParsedCommandLine'
          UndefinedKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' configPath'
                CallExpression
                  Identifier: ' toPath'
                  Identifier: 'configFileName'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' config'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' parsedConfigs'
                    QuestionDotToken
                    Identifier: 'get'
                  Identifier: 'configPath'
          IfStatement
            Identifier: 'config'
            Block
              IfStatement
                PrefixUnaryExpression
                  PropertyAccessExpression
                    Identifier: 'config'
                    Identifier: 'updateLevel'
                ReturnStatement
                  PropertyAccessExpression
                    Identifier: ' config'
                    Identifier: 'parsedCommandLine'
              IfStatement
                BinaryExpression
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: 'config'
                      Identifier: 'parsedCommandLine'
                    AmpersandAmpersandToken
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: ' config'
                        Identifier: 'updateLevel'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' ProgramUpdateLevel'
                        Identifier: 'RootNamesAndUpdate'
                  AmpersandAmpersandToken
                  PrefixUnaryExpression
                    PropertyAccessExpression
                      Identifier: 'host'
                      Identifier: 'getParsedCommandLine'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                writeLog'
                      StringLiteral
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                Debug'
                        Identifier: 'assert'
                      Identifier: 'compilerOptions'
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' fileNames'
                        CallExpression
                          Identifier: ' getFileNamesFromConfigSpecs'
                          NonNullExpression
                            PropertyAccessExpression
                              NonNullExpression
                                PropertyAccessExpression
                                  PropertyAccessExpression
                                    PropertyAccessExpression
                                      Identifier: '
                    config'
                                      Identifier: 'parsedCommandLine'
                                    Identifier: 'options'
                                  Identifier: 'configFile'
                              Identifier: 'configFileSpecs'
                          CallExpression
                            Identifier: '
                    getNormalizedAbsolutePath'
                            CallExpression
                              Identifier: 'getDirectoryPath'
                              Identifier: 'configFileName'
                            Identifier: ' currentDirectory'
                          Identifier: '
                    compilerOptions'
                          Identifier: '
                    parseConfigFileHost'
                  ExpressionStatement
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: '
                config'
                        Identifier: 'parsedCommandLine'
                      EqualsToken
                      ObjectLiteralExpression
                        SpreadAssignment
                          PropertyAccessExpression
                            Identifier: 'config'
                            Identifier: 'parsedCommandLine'
                        ShorthandPropertyAssignment
                          Identifier: ' fileNames'
                  ExpressionStatement
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: '
                config'
                        Identifier: 'updateLevel'
                      EqualsToken
                      Identifier: ' undefined'
                  ReturnStatement
                    PropertyAccessExpression
                      Identifier: ' config'
                      Identifier: 'parsedCommandLine'
          ExpressionStatement
            CallExpression
              Identifier: '

        writeLog'
              TemplateExpression
                TemplateHead
                TemplateSpan
                  Identifier: 'configFileName'
                  TemplateTail
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' parsedCommandLine'
                ConditionalExpression
                  PropertyAccessExpression
                    Identifier: ' host'
                    Identifier: 'getParsedCommandLine'
                  QuestionToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
            host'
                      Identifier: 'getParsedCommandLine'
                    Identifier: 'configFileName'
                  ColonToken
                  CallExpression
                    Identifier: '
            getParsedCommandLineFromConfigFileHost'
                    Identifier: 'configFileName'
          IfStatement
            Identifier: 'config'
            Block
              ExpressionStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: '
            config'
                    Identifier: 'parsedCommandLine'
                  EqualsToken
                  Identifier: ' parsedCommandLine'
              ExpressionStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: '
            config'
                    Identifier: 'updateLevel'
                  EqualsToken
                  Identifier: ' undefined'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    ParenthesizedExpression
                      BinaryExpression
                        Identifier: 'parsedConfigs'
                        BarBarEqualsToken
                        NewExpression
                          Identifier: ' Map'
                    Identifier: 'set'
                  Identifier: 'configPath'
                  BinaryExpression
                    Identifier: ' config'
                    EqualsToken
                    ObjectLiteralExpression
                      ShorthandPropertyAssignment
                        Identifier: ' parsedCommandLine'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                ParenthesizedExpression
                  BinaryExpression
                    Identifier: 'staleWatches'
                    QuestionQuestionEqualsToken
                    NewExpression
                      Identifier: ' Map'
                Identifier: 'set'
              Identifier: 'configPath'
              Identifier: ' configFileName'
          ReturnStatement
            Identifier: ' parsedCommandLine'
      FunctionDeclaration
        Identifier: ' getParsedCommandLineFromConfigFileHost'
        Parameter
          Identifier: 'configFileName'
          StringKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' onUnRecoverableConfigFileDiagnostic'
                PropertyAccessExpression
                  Identifier: ' parseConfigFileHost'
                  Identifier: 'onUnRecoverableConfigFileDiagnostic'
          ExpressionStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: '
        parseConfigFileHost'
                Identifier: 'onUnRecoverableConfigFileDiagnostic'
              EqualsToken
              Identifier: ' noop'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' parsedCommandLine'
                CallExpression
                  Identifier: ' getParsedCommandLineOfConfigFile'
                  Identifier: '
            configFileName'
                  Identifier: '
            /*optionsToExtend*/ undefined'
                  Identifier: '
            parseConfigFileHost'
                  BinaryExpression
                    Identifier: '
            extendedConfigCache'
                    BarBarEqualsToken
                    NewExpression
                      Identifier: ' Map'
                  Identifier: '
            watchOptionsToExtend'
          ExpressionStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: '
        parseConfigFileHost'
                Identifier: 'onUnRecoverableConfigFileDiagnostic'
              EqualsToken
              Identifier: ' onUnRecoverableConfigFileDiagnostic'
          ReturnStatement
            Identifier: ' parsedCommandLine'
      FunctionDeclaration
        Identifier: ' onReleaseParsedCommandLine'
        Parameter
          Identifier: 'fileName'
          StringKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' path'
                CallExpression
                  Identifier: ' toPath'
                  Identifier: 'fileName'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' config'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' parsedConfigs'
                    QuestionDotToken
                    Identifier: 'get'
                  Identifier: 'path'
          IfStatement
            PrefixUnaryExpression
              Identifier: 'config'
            ReturnStatement
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                NonNullExpression
                  Identifier: '

        parsedConfigs'
                Identifier: 'delete'
              Identifier: 'path'
          IfStatement
            PropertyAccessExpression
              Identifier: 'config'
              Identifier: 'watchedDirectories'
            ExpressionStatement
              CallExpression
                Identifier: ' clearMap'
                PropertyAccessExpression
                  Identifier: 'config'
                  Identifier: 'watchedDirectories'
                Identifier: ' closeFileWatcherOf'
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: '
        config'
                  Identifier: 'watcher'
                QuestionDotToken
                Identifier: 'close'
          ExpressionStatement
            CallExpression
              Identifier: '
        clearSharedExtendedConfigFileWatcher'
              Identifier: 'path'
              Identifier: ' sharedExtendedConfigFileWatchers'
      FunctionDeclaration
        Identifier: ' watchFilePath'
        Parameter
          Identifier: '
        path'
          TypeReference
            Identifier: ' Path'
        Parameter
          Identifier: '
        file'
          StringKeyword
        Parameter
          Identifier: '
        callback'
          FunctionType
            Parameter
              Identifier: 'fileName'
              StringKeyword
            Parameter
              Identifier: ' eventKind'
              TypeReference
                Identifier: ' FileWatcherEventKind'
            Parameter
              Identifier: ' filePath'
              TypeReference
                Identifier: ' Path'
            VoidKeyword
        Parameter
          Identifier: '
        pollingInterval'
          TypeReference
            Identifier: ' PollingInterval'
        Parameter
          Identifier: '
        options'
          UnionType
            TypeReference
              Identifier: ' WatchOptions'
            UndefinedKeyword
        Parameter
          Identifier: '
        watchType'
          TypeReference
            Identifier: ' WatchType'
        TypeReference
          Identifier: ' FileWatcher'
        Block
          ReturnStatement
            CallExpression
              Identifier: ' watchFile'
              Identifier: 'file'
              ArrowFunction
                Parameter
                  Identifier: 'fileName'
                Parameter
                  Identifier: ' eventKind'
                EqualsGreaterThanToken
                CallExpression
                  Identifier: ' callback'
                  Identifier: 'fileName'
                  Identifier: ' eventKind'
                  Identifier: ' path'
              Identifier: ' pollingInterval'
              Identifier: ' options'
              Identifier: ' watchType'
      FunctionDeclaration
        Identifier: ' onSourceFileChange'
        Parameter
          Identifier: 'fileName'
          StringKeyword
        Parameter
          Identifier: ' eventKind'
          TypeReference
            Identifier: ' FileWatcherEventKind'
        Parameter
          Identifier: ' path'
          TypeReference
            Identifier: ' Path'
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        updateCachedSystemWithFile'
              Identifier: 'fileName'
              Identifier: ' path'
              Identifier: ' eventKind'
          IfStatement
            BinaryExpression
              BinaryExpression
                Identifier: 'eventKind'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' FileWatcherEventKind'
                  Identifier: 'Deleted'
              AmpersandAmpersandToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' sourceFilesCache'
                  Identifier: 'has'
                Identifier: 'path'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            resolutionCache'
                    Identifier: 'invalidateResolutionOfFile'
                  Identifier: 'path'
          ExpressionStatement
            CallExpression
              Identifier: '
        nextSourceFileVersion'
              Identifier: 'path'
          ExpressionStatement
            CallExpression
              Identifier: '

        // Update the program
        scheduleProgramUpdate'
      FunctionDeclaration
        Identifier: ' updateCachedSystemWithFile'
        Parameter
          Identifier: 'fileName'
          StringKeyword
        Parameter
          Identifier: ' path'
          TypeReference
            Identifier: ' Path'
        Parameter
          Identifier: ' eventKind'
          TypeReference
            Identifier: ' FileWatcherEventKind'
        Block
          IfStatement
            Identifier: 'cachedDirectoryStructureHost'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            cachedDirectoryStructureHost'
                    Identifier: 'addOrDeleteFile'
                  Identifier: 'fileName'
                  Identifier: ' path'
                  Identifier: ' eventKind'
      FunctionDeclaration
        Identifier: ' watchMissingFilePath'
        Parameter
          Identifier: 'missingFilePath'
          TypeReference
            Identifier: ' Path'
        Parameter
          Identifier: ' missingFileName'
          StringKeyword
        Block
          ReturnStatement
            ConditionalExpression
              CallExpression
                PropertyAccessExpression
                  Identifier: ' parsedConfigs'
                  QuestionDotToken
                  Identifier: 'has'
                Identifier: 'missingFilePath'
              QuestionToken
              Identifier: '
            noopFileWatcher'
              ColonToken
              CallExpression
                Identifier: '
            watchFilePath'
                Identifier: '
                missingFilePath'
                Identifier: '
                missingFileName'
                Identifier: '
                onMissingFileChange'
                PropertyAccessExpression
                  Identifier: '
                PollingInterval'
                  Identifier: 'Medium'
                Identifier: '
                watchOptions'
                PropertyAccessExpression
                  Identifier: '
                WatchType'
                  Identifier: 'MissingFile'
      FunctionDeclaration
        Identifier: ' onMissingFileChange'
        Parameter
          Identifier: 'fileName'
          StringKeyword
        Parameter
          Identifier: ' eventKind'
          TypeReference
            Identifier: ' FileWatcherEventKind'
        Parameter
          Identifier: ' missingFilePath'
          TypeReference
            Identifier: ' Path'
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        updateCachedSystemWithFile'
              Identifier: 'fileName'
              Identifier: ' missingFilePath'
              Identifier: ' eventKind'
          IfStatement
            BinaryExpression
              BinaryExpression
                Identifier: 'eventKind'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' FileWatcherEventKind'
                  Identifier: 'Created'
              AmpersandAmpersandToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' missingFilesMap'
                  Identifier: 'has'
                Identifier: 'missingFilePath'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    NonNullExpression
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
            missingFilesMap'
                          Identifier: 'get'
                        Identifier: 'missingFilePath'
                    Identifier: 'close'
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            missingFilesMap'
                    Identifier: 'delete'
                  Identifier: 'missingFilePath'
              ExpressionStatement
                CallExpression
                  Identifier: '

            // Delete the entry in the source files cache so that new source file is created
            nextSourceFileVersion'
                  Identifier: 'missingFilePath'
              ExpressionStatement
                CallExpression
                  Identifier: '

            // When a missing file is created, we should update the graph.
            scheduleProgramUpdate'
      FunctionDeclaration
        Identifier: ' watchConfigFileWildCardDirectories'
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        updateWatchingWildcardDirectories'
              BinaryExpression
                Identifier: '
            watchedWildcardDirectories'
                BarBarToken
                ParenthesizedExpression
                  BinaryExpression
                    Identifier: 'watchedWildcardDirectories'
                    EqualsToken
                    NewExpression
                      Identifier: ' Map'
              Identifier: '
            wildcardDirectories'
              Identifier: '
            watchWildcardDirectory'
      FunctionDeclaration
        Identifier: ' watchWildcardDirectory'
        Parameter
          Identifier: 'directory'
          StringKeyword
        Parameter
          Identifier: ' flags'
          TypeReference
            Identifier: ' WatchDirectoryFlags'
        Block
          ReturnStatement
            CallExpression
              Identifier: ' watchDirectory'
              Identifier: '
            directory'
              ArrowFunction
                Parameter
                  Identifier: '
            fileOrDirectory'
                EqualsGreaterThanToken
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                Debug'
                        Identifier: 'assert'
                      Identifier: 'configFileName'
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                Debug'
                        Identifier: 'assert'
                      Identifier: 'compilerOptions'
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' fileOrDirectoryPath'
                        CallExpression
                          Identifier: ' toPath'
                          Identifier: 'fileOrDirectory'
                  IfStatement
                    Identifier: 'cachedDirectoryStructureHost'
                    Block
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                    cachedDirectoryStructureHost'
                            Identifier: 'addOrDeleteFileOrDirectory'
                          Identifier: 'fileOrDirectory'
                          Identifier: ' fileOrDirectoryPath'
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                nextSourceFileVersion'
                      Identifier: 'fileOrDirectoryPath'
                  IfStatement
                    CallExpression
                      Identifier: '
                    isIgnoredFileFromWildCardWatching'
                      ObjectLiteralExpression
                        PropertyAssignment
                          Identifier: '
                        watchedDirPath'
                          CallExpression
                            Identifier: ' toPath'
                            Identifier: 'directory'
                        ShorthandPropertyAssignment
                          Identifier: '
                        fileOrDirectory'
                        ShorthandPropertyAssignment
                          Identifier: '
                        fileOrDirectoryPath'
                        ShorthandPropertyAssignment
                          Identifier: '
                        configFileName'
                        ShorthandPropertyAssignment
                          Identifier: '
                        extraFileExtensions'
                        PropertyAssignment
                          Identifier: '
                        options'
                          Identifier: ' compilerOptions'
                        PropertyAssignment
                          Identifier: '
                        program'
                          BinaryExpression
                            CallExpression
                              Identifier: ' getCurrentBuilderProgram'
                            BarBarToken
                            Identifier: ' rootFileNames'
                        ShorthandPropertyAssignment
                          Identifier: '
                        currentDirectory'
                        ShorthandPropertyAssignment
                          Identifier: '
                        useCaseSensitiveFileNames'
                        ShorthandPropertyAssignment
                          Identifier: '
                        writeLog'
                        ShorthandPropertyAssignment
                          Identifier: '
                        toPath'
                    ReturnStatement
                  IfStatement
                    BinaryExpression
                      Identifier: 'updateLevel'
                      ExclamationEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' ProgramUpdateLevel'
                        Identifier: 'Full'
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    updateLevel'
                          EqualsToken
                          PropertyAccessExpression
                            Identifier: ' ProgramUpdateLevel'
                            Identifier: 'RootNamesAndUpdate'
                      ExpressionStatement
                        CallExpression
                          Identifier: '

                    // Schedule Update the program
                    scheduleProgramUpdate'
              Identifier: '
            flags'
              Identifier: '
            watchOptions'
              PropertyAccessExpression
                Identifier: '
            WatchType'
                Identifier: 'WildcardDirectory'
      FunctionDeclaration
        Identifier: ' updateExtendedConfigFilesWatches'
        Parameter
          Identifier: 'forProjectPath'
          TypeReference
            Identifier: ' Path'
        Parameter
          Identifier: ' options'
          UnionType
            TypeReference
              Identifier: ' CompilerOptions'
            UndefinedKeyword
        Parameter
          Identifier: ' watchOptions'
          UnionType
            TypeReference
              Identifier: ' WatchOptions'
            UndefinedKeyword
        Parameter
          Identifier: ' watchType'
          UnionType
            IndexedAccessType
              TypeReference
                Identifier: ' WatchTypeRegistry'
              LiteralType
                StringLiteral
            IndexedAccessType
              TypeReference
                Identifier: ' WatchTypeRegistry'
              LiteralType
                StringLiteral
        Block
          ExpressionStatement
            CallExpression
              Identifier: '
        updateSharedExtendedConfigFileWatcher'
              Identifier: '
            forProjectPath'
              Identifier: '
            options'
              BinaryExpression
                Identifier: '
            sharedExtendedConfigFileWatchers'
                BarBarEqualsToken
                NewExpression
                  Identifier: ' Map'
              ArrowFunction
                Parameter
                  Identifier: 'extendedConfigFileName'
                Parameter
                  Identifier: ' extendedConfigFilePath'
                EqualsGreaterThanToken
                CallExpression
                  Identifier: '
                watchFile'
                  Identifier: '
                    extendedConfigFileName'
                  ArrowFunction
                    Parameter
                      Identifier: '_fileName'
                    Parameter
                      Identifier: ' eventKind'
                    EqualsGreaterThanToken
                    Block
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                        updateCachedSystemWithFile'
                          Identifier: 'extendedConfigFileName'
                          Identifier: ' extendedConfigFilePath'
                          Identifier: ' eventKind'
                      IfStatement
                        Identifier: 'extendedConfigCache'
                        ExpressionStatement
                          CallExpression
                            Identifier: ' cleanExtendedConfigCache'
                            Identifier: 'extendedConfigCache'
                            Identifier: ' extendedConfigFilePath'
                            Identifier: ' toPath'
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' projects'
                            PropertyAccessExpression
                              CallExpression
                                PropertyAccessExpression
                                  Identifier: ' sharedExtendedConfigFileWatchers'
                                  Identifier: 'get'
                                Identifier: 'extendedConfigFilePath'
                              QuestionDotToken
                              Identifier: 'projects'
                      IfStatement
                        PrefixUnaryExpression
                          PropertyAccessExpression
                            Identifier: 'projects'
                            QuestionDotToken
                            Identifier: 'size'
                        ReturnStatement
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                        projects'
                            Identifier: 'forEach'
                          ArrowFunction
                            Parameter
                              Identifier: 'projectPath'
                            EqualsGreaterThanToken
                            Block
                              IfStatement
                                BinaryExpression
                                  Identifier: 'configFileName'
                                  AmpersandAmpersandToken
                                  BinaryExpression
                                    CallExpression
                                      Identifier: ' toPath'
                                      Identifier: 'configFileName'
                                    EqualsEqualsEqualsToken
                                    Identifier: ' projectPath'
                                Block
                                  ExpressionStatement
                                    BinaryExpression
                                      Identifier: '
                                // If this is the config file of the project, reload completely
                                updateLevel'
                                      EqualsToken
                                      PropertyAccessExpression
                                        Identifier: ' ProgramUpdateLevel'
                                        Identifier: 'Full'
                                Block
                                  VariableStatement
                                    VariableDeclarationList
                                      VariableDeclaration
                                        Identifier: ' config'
                                        CallExpression
                                          PropertyAccessExpression
                                            Identifier: ' parsedConfigs'
                                            QuestionDotToken
                                            Identifier: 'get'
                                          Identifier: 'projectPath'
                                  IfStatement
                                    Identifier: 'config'
                                    ExpressionStatement
                                      BinaryExpression
                                        PropertyAccessExpression
                                          Identifier: ' config'
                                          Identifier: 'updateLevel'
                                        EqualsToken
                                        PropertyAccessExpression
                                          Identifier: ' ProgramUpdateLevel'
                                          Identifier: 'Full'
                                  ExpressionStatement
                                    CallExpression
                                      PropertyAccessExpression
                                        Identifier: '
                                resolutionCache'
                                        Identifier: 'removeResolutionsFromProjectReferenceRedirects'
                                      Identifier: 'projectPath'
                              ExpressionStatement
                                CallExpression
                                  Identifier: '
                            scheduleProgramUpdate'
                  PropertyAccessExpression
                    Identifier: '
                    PollingInterval'
                    Identifier: 'High'
                  Identifier: '
                    watchOptions'
                  Identifier: '
                    watchType'
              Identifier: '
            toPath'
      FunctionDeclaration
        Identifier: ' watchReferencedProject'
        Parameter
          Identifier: 'configFileName'
          StringKeyword
        Parameter
          Identifier: ' configPath'
          TypeReference
            Identifier: ' Path'
        Parameter
          Identifier: ' commandLine'
          TypeReference
            Identifier: ' ParsedConfig'
        Block
          ExpressionStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: '
        // Watch file
        commandLine'
                Identifier: 'watcher'
              BarBarEqualsToken
              CallExpression
                Identifier: ' watchFile'
                Identifier: '
            configFileName'
                ArrowFunction
                  Parameter
                    Identifier: '_fileName'
                  Parameter
                    Identifier: ' eventKind'
                  EqualsGreaterThanToken
                  Block
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                updateCachedSystemWithFile'
                        Identifier: 'configFileName'
                        Identifier: ' configPath'
                        Identifier: ' eventKind'
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' config'
                          CallExpression
                            PropertyAccessExpression
                              Identifier: ' parsedConfigs'
                              QuestionDotToken
                              Identifier: 'get'
                            Identifier: 'configPath'
                    IfStatement
                      Identifier: 'config'
                      ExpressionStatement
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: ' config'
                            Identifier: 'updateLevel'
                          EqualsToken
                          PropertyAccessExpression
                            Identifier: ' ProgramUpdateLevel'
                            Identifier: 'Full'
                    ExpressionStatement
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                resolutionCache'
                          Identifier: 'removeResolutionsFromProjectReferenceRedirects'
                        Identifier: 'configPath'
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                scheduleProgramUpdate'
                PropertyAccessExpression
                  Identifier: '
            PollingInterval'
                  Identifier: 'High'
                BinaryExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: '
            commandLine'
                      Identifier: 'parsedCommandLine'
                    QuestionDotToken
                    Identifier: 'watchOptions'
                  BarBarToken
                  Identifier: ' watchOptions'
                PropertyAccessExpression
                  Identifier: '
            WatchType'
                  Identifier: 'ConfigFileOfReferencedProject'
          ExpressionStatement
            CallExpression
              Identifier: '
        // Watch Wild card
        updateWatchingWildcardDirectories'
              BinaryExpression
                PropertyAccessExpression
                  Identifier: '
            commandLine'
                  Identifier: 'watchedDirectories'
                BarBarEqualsToken
                NewExpression
                  Identifier: ' Map'
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: '
            commandLine'
                  Identifier: 'parsedCommandLine'
                QuestionDotToken
                Identifier: 'wildcardDirectories'
              ArrowFunction
                Parameter
                  Identifier: 'directory'
                Parameter
                  Identifier: ' flags'
                EqualsGreaterThanToken
                CallExpression
                  Identifier: '
                watchDirectory'
                  Identifier: '
                    directory'
                  ArrowFunction
                    Parameter
                      Identifier: '
                    fileOrDirectory'
                    EqualsGreaterThanToken
                    Block
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' fileOrDirectoryPath'
                            CallExpression
                              Identifier: ' toPath'
                              Identifier: 'fileOrDirectory'
                      IfStatement
                        Identifier: 'cachedDirectoryStructureHost'
                        Block
                          ExpressionStatement
                            CallExpression
                              PropertyAccessExpression
                                Identifier: '
                            cachedDirectoryStructureHost'
                                Identifier: 'addOrDeleteFileOrDirectory'
                              Identifier: 'fileOrDirectory'
                              Identifier: ' fileOrDirectoryPath'
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                        nextSourceFileVersion'
                          Identifier: 'fileOrDirectoryPath'
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' config'
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' parsedConfigs'
                                QuestionDotToken
                                Identifier: 'get'
                              Identifier: 'configPath'
                      IfStatement
                        PrefixUnaryExpression
                          PropertyAccessExpression
                            Identifier: 'config'
                            QuestionDotToken
                            Identifier: 'parsedCommandLine'
                        ReturnStatement
                      IfStatement
                        CallExpression
                          Identifier: '
                            isIgnoredFileFromWildCardWatching'
                          ObjectLiteralExpression
                            PropertyAssignment
                              Identifier: '
                                watchedDirPath'
                              CallExpression
                                Identifier: ' toPath'
                                Identifier: 'directory'
                            ShorthandPropertyAssignment
                              Identifier: '
                                fileOrDirectory'
                            ShorthandPropertyAssignment
                              Identifier: '
                                fileOrDirectoryPath'
                            ShorthandPropertyAssignment
                              Identifier: '
                                configFileName'
                            PropertyAssignment
                              Identifier: '
                                options'
                              PropertyAccessExpression
                                PropertyAccessExpression
                                  Identifier: ' config'
                                  Identifier: 'parsedCommandLine'
                                Identifier: 'options'
                            PropertyAssignment
                              Identifier: '
                                program'
                              PropertyAccessExpression
                                PropertyAccessExpression
                                  Identifier: ' config'
                                  Identifier: 'parsedCommandLine'
                                Identifier: 'fileNames'
                            ShorthandPropertyAssignment
                              Identifier: '
                                currentDirectory'
                            ShorthandPropertyAssignment
                              Identifier: '
                                useCaseSensitiveFileNames'
                            ShorthandPropertyAssignment
                              Identifier: '
                                writeLog'
                            ShorthandPropertyAssignment
                              Identifier: '
                                toPath'
                        ReturnStatement
                      IfStatement
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: 'config'
                            Identifier: 'updateLevel'
                          ExclamationEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' ProgramUpdateLevel'
                            Identifier: 'Full'
                        Block
                          ExpressionStatement
                            BinaryExpression
                              PropertyAccessExpression
                                Identifier: '
                            config'
                                Identifier: 'updateLevel'
                              EqualsToken
                              PropertyAccessExpression
                                Identifier: ' ProgramUpdateLevel'
                                Identifier: 'RootNamesAndUpdate'
                          ExpressionStatement
                            CallExpression
                              Identifier: '

                            // Schedule Update the program
                            scheduleProgramUpdate'
                  Identifier: '
                    flags'
                  BinaryExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: '
                    commandLine'
                        Identifier: 'parsedCommandLine'
                      QuestionDotToken
                      Identifier: 'watchOptions'
                    BarBarToken
                    Identifier: ' watchOptions'
                  PropertyAccessExpression
                    Identifier: '
                    WatchType'
                    Identifier: 'WildcardDirectoryOfReferencedProject'
          ExpressionStatement
            CallExpression
              Identifier: '
        // Watch extended config files
        updateExtendedConfigFilesWatches'
              Identifier: '
            configPath'
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: '
            commandLine'
                  Identifier: 'parsedCommandLine'
                QuestionDotToken
                Identifier: 'options'
              BinaryExpression
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: '
            commandLine'
                    Identifier: 'parsedCommandLine'
                  QuestionDotToken
                  Identifier: 'watchOptions'
                BarBarToken
                Identifier: ' watchOptions'
              PropertyAccessExpression
                Identifier: '
            WatchType'
                Identifier: 'ExtendedConfigOfReferencedProject'
