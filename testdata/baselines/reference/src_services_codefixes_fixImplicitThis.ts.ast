SourceFile
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: '
    codeFixAll'
        ImportSpecifier
          Identifier: '
    createCodeFixAction'
        ImportSpecifier
          Identifier: '
    registerCodeFix'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: '
    ANONYMOUS'
        ImportSpecifier
          Identifier: '
    Debug'
        ImportSpecifier
          Identifier: '
    DiagnosticOrDiagnosticAndArguments'
        ImportSpecifier
          Identifier: '
    Diagnostics'
        ImportSpecifier
          Identifier: '
    emptyArray'
        ImportSpecifier
          Identifier: '
    factory'
        ImportSpecifier
          Identifier: '
    FindAllReferences'
        ImportSpecifier
          Identifier: '
    findChildOfKind'
        ImportSpecifier
          Identifier: '
    getThisContainer'
        ImportSpecifier
          Identifier: '
    getTokenAtPosition'
        ImportSpecifier
          Identifier: '
    isFunctionDeclaration'
        ImportSpecifier
          Identifier: '
    isFunctionExpression'
        ImportSpecifier
          Identifier: '
    isSourceFile'
        ImportSpecifier
          Identifier: '
    isThis'
        ImportSpecifier
          Identifier: '
    SourceFile'
        ImportSpecifier
          Identifier: '
    SyntaxKind'
        ImportSpecifier
          Identifier: '
    textChanges'
        ImportSpecifier
          Identifier: '
    TypeChecker'
    StringLiteral
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' fixId'
        StringLiteral
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' errorCodes'
        ArrayLiteralExpression
          PropertyAccessExpression
            PropertyAccessExpression
              Identifier: 'Diagnostics'
              Identifier: 'this_implicitly_has_type_any_because_it_does_not_have_a_type_annotation'
            Identifier: 'code'
  ExpressionStatement
    CallExpression
      Identifier: '
registerCodeFix'
      ObjectLiteralExpression
        ShorthandPropertyAssignment
          Identifier: '
    errorCodes'
        PropertyAssignment
          Identifier: '
    getCodeActions'
          FunctionExpression
            Identifier: ' getCodeActionsToFixImplicitThis'
            Parameter
              Identifier: 'context'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    ObjectBindingPattern
                      BindingElement
                        Identifier: ' sourceFile'
                      BindingElement
                        Identifier: ' program'
                      BindingElement
                        Identifier: ' span'
                    Identifier: ' context'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' diagnostic'
                    UnionType
                      TypeReference
                        Identifier: ' DiagnosticOrDiagnosticAndArguments'
                      UndefinedKeyword
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' changes'
                    CallExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: ' textChanges'
                          Identifier: 'ChangeTracker'
                        Identifier: 'with'
                      Identifier: 'context'
                      ArrowFunction
                        Parameter
                          Identifier: ' t'
                        EqualsGreaterThanToken
                        Block
                          ExpressionStatement
                            BinaryExpression
                              Identifier: '
            diagnostic'
                              EqualsToken
                              CallExpression
                                Identifier: ' doChange'
                                Identifier: 't'
                                Identifier: ' sourceFile'
                                PropertyAccessExpression
                                  Identifier: ' span'
                                  Identifier: 'start'
                                CallExpression
                                  PropertyAccessExpression
                                    Identifier: ' program'
                                    Identifier: 'getTypeChecker'
              ReturnStatement
                ConditionalExpression
                  Identifier: ' diagnostic'
                  QuestionToken
                  ArrayLiteralExpression
                    CallExpression
                      Identifier: 'createCodeFixAction'
                      Identifier: 'fixId'
                      Identifier: ' changes'
                      Identifier: ' diagnostic'
                      Identifier: ' fixId'
                      PropertyAccessExpression
                        Identifier: ' Diagnostics'
                        Identifier: 'Fix_all_implicit_this_errors'
                  ColonToken
                  Identifier: ' emptyArray'
        PropertyAssignment
          Identifier: '
    fixIds'
          ArrayLiteralExpression
            Identifier: 'fixId'
        PropertyAssignment
          Identifier: '
    getAllCodeActions'
          ArrowFunction
            Parameter
              Identifier: ' context'
            EqualsGreaterThanToken
            CallExpression
              Identifier: '
        codeFixAll'
              Identifier: 'context'
              Identifier: ' errorCodes'
              ArrowFunction
                Parameter
                  Identifier: 'changes'
                Parameter
                  Identifier: ' diag'
                EqualsGreaterThanToken
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
            doChange'
                      Identifier: 'changes'
                      PropertyAccessExpression
                        Identifier: ' diag'
                        Identifier: 'file'
                      PropertyAccessExpression
                        Identifier: ' diag'
                        Identifier: 'start'
                      CallExpression
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: ' context'
                            Identifier: 'program'
                          Identifier: 'getTypeChecker'
  FunctionDeclaration
    Identifier: ' doChange'
    Parameter
      Identifier: 'changes'
      TypeReference
        QualifiedName
          Identifier: ' textChanges'
          Identifier: 'ChangeTracker'
    Parameter
      Identifier: ' sourceFile'
      TypeReference
        Identifier: ' SourceFile'
    Parameter
      Identifier: ' pos'
      NumberKeyword
    Parameter
      Identifier: ' checker'
      TypeReference
        Identifier: ' TypeChecker'
    UnionType
      TypeReference
        Identifier: ' DiagnosticOrDiagnosticAndArguments'
      UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' token'
            CallExpression
              Identifier: ' getTokenAtPosition'
              Identifier: 'sourceFile'
              Identifier: ' pos'
      IfStatement
        PrefixUnaryExpression
          CallExpression
            Identifier: 'isThis'
            Identifier: 'token'
        ReturnStatement
          Identifier: ' undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' fn'
            CallExpression
              Identifier: ' getThisContainer'
              Identifier: 'token'
              FalseKeyword
              FalseKeyword
      IfStatement
        BinaryExpression
          PrefixUnaryExpression
            CallExpression
              Identifier: 'isFunctionDeclaration'
              Identifier: 'fn'
          AmpersandAmpersandToken
          PrefixUnaryExpression
            CallExpression
              Identifier: 'isFunctionExpression'
              Identifier: 'fn'
        ReturnStatement
          Identifier: ' undefined'
      IfStatement
        PrefixUnaryExpression
          CallExpression
            Identifier: 'isSourceFile'
            CallExpression
              Identifier: 'getThisContainer'
              Identifier: 'fn'
              FalseKeyword
              FalseKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' fnKeyword'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' Debug'
                    Identifier: 'checkDefined'
                  CallExpression
                    Identifier: 'findChildOfKind'
                    Identifier: 'fn'
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'FunctionKeyword'
                    Identifier: ' sourceFile'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                ObjectBindingPattern
                  BindingElement
                    Identifier: ' name'
                Identifier: ' fn'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' body'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' Debug'
                    Identifier: 'checkDefined'
                  PropertyAccessExpression
                    Identifier: 'fn'
                    Identifier: 'body'
          IfStatement
            CallExpression
              Identifier: 'isFunctionExpression'
              Identifier: 'fn'
            Block
              IfStatement
                BinaryExpression
                  Identifier: 'name'
                  AmpersandAmpersandToken
                  CallExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: ' FindAllReferences'
                        Identifier: 'Core'
                      Identifier: 'isSymbolReferencedInFile'
                    Identifier: 'name'
                    Identifier: ' checker'
                    Identifier: ' sourceFile'
                    Identifier: ' body'
                Block
                  ReturnStatement
                    Identifier: ' undefined'
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '

            // `function() {}` --> `() => {}`
            changes'
                    Identifier: 'delete'
                  Identifier: 'sourceFile'
                  Identifier: ' fnKeyword'
              IfStatement
                Identifier: 'name'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                changes'
                        Identifier: 'delete'
                      Identifier: 'sourceFile'
                      Identifier: ' name'
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            changes'
                    Identifier: 'insertText'
                  Identifier: 'sourceFile'
                  PropertyAccessExpression
                    Identifier: ' body'
                    Identifier: 'pos'
                  StringLiteral
              ReturnStatement
                ArrayLiteralExpression
                  PropertyAccessExpression
                    Identifier: 'Diagnostics'
                    Identifier: 'Convert_function_expression_0_to_arrow_function'
                  ConditionalExpression
                    Identifier: ' name'
                    QuestionToken
                    PropertyAccessExpression
                      Identifier: ' name'
                      Identifier: 'text'
                    ColonToken
                    Identifier: ' ANONYMOUS'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            // `function f() {}` => `const f = () => {}`
            // `name` should be defined because we only do this in inner contexts, and name is only undefined for `export default function() {}`.
            changes'
                    Identifier: 'replaceNode'
                  Identifier: 'sourceFile'
                  Identifier: ' fnKeyword'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' factory'
                      Identifier: 'createToken'
                    PropertyAccessExpression
                      Identifier: 'SyntaxKind'
                      Identifier: 'ConstKeyword'
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            changes'
                    Identifier: 'insertText'
                  Identifier: 'sourceFile'
                  PropertyAccessExpression
                    NonNullExpression
                      Identifier: ' name'
                    Identifier: 'end'
                  StringLiteral
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            changes'
                    Identifier: 'insertText'
                  Identifier: 'sourceFile'
                  PropertyAccessExpression
                    Identifier: ' body'
                    Identifier: 'pos'
                  StringLiteral
              ReturnStatement
                ArrayLiteralExpression
                  PropertyAccessExpression
                    Identifier: 'Diagnostics'
                    Identifier: 'Convert_function_declaration_0_to_arrow_function'
                  PropertyAccessExpression
                    NonNullExpression
                      Identifier: ' name'
                    Identifier: 'text'
