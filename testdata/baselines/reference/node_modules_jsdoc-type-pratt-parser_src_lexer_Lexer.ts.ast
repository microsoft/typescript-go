SourceFile
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' Token'
        ImportSpecifier
          Identifier: ' TokenType'
    StringLiteral
  TypeAliasDeclaration
    Identifier: ' PartialToken'
    TypeReference
      Identifier: ' Omit'
      TypeReference
        Identifier: 'Token'
      LiteralType
        StringLiteral
  TypeAliasDeclaration
    Identifier: ' Rule'
    FunctionType
      Parameter
        Identifier: 'text'
        StringKeyword
      UnionType
        TypeReference
          Identifier: ' PartialToken'
        LiteralType
          NullKeyword
  FunctionDeclaration
    Identifier: ' makePunctuationRule'
    Parameter
      Identifier: 'type'
      TypeReference
        Identifier: ' TokenType'
    TypeReference
      Identifier: ' Rule'
    Block
      ReturnStatement
        ArrowFunction
          Parameter
            Identifier: ' text'
          EqualsGreaterThanToken
          Block
            IfStatement
              CallExpression
                PropertyAccessExpression
                  Identifier: 'text'
                  Identifier: 'startsWith'
                Identifier: 'type'
              Block
                ReturnStatement
                  ObjectLiteralExpression
                    ShorthandPropertyAssignment
                      Identifier: ' type'
                    PropertyAssignment
                      Identifier: ' text'
                      Identifier: ' type'
              Block
                ReturnStatement
                  NullKeyword
  FunctionDeclaration
    Identifier: ' getQuoted'
    Parameter
      Identifier: 'text'
      StringKeyword
    UnionType
      StringKeyword
      LiteralType
        NullKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' position'
            NumericLiteral
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' char'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' mark'
            ElementAccessExpression
              Identifier: ' text'
              NumericLiteral
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' escaped'
            FalseKeyword
      IfStatement
        BinaryExpression
          BinaryExpression
            Identifier: 'mark'
            ExclamationEqualsEqualsToken
            StringLiteral
          AmpersandAmpersandToken
          BinaryExpression
            Identifier: ' mark'
            ExclamationEqualsEqualsToken
            StringLiteral
        Block
          ReturnStatement
            NullKeyword
      WhileStatement
        BinaryExpression
          Identifier: 'position'
          LessThanToken
          PropertyAccessExpression
            Identifier: ' text'
            Identifier: 'length'
        Block
          ExpressionStatement
            PostfixUnaryExpression
              Identifier: '
    position'
          ExpressionStatement
            BinaryExpression
              Identifier: '
    char'
              EqualsToken
              ElementAccessExpression
                Identifier: ' text'
                Identifier: 'position'
          IfStatement
            BinaryExpression
              PrefixUnaryExpression
                Identifier: 'escaped'
              AmpersandAmpersandToken
              BinaryExpression
                Identifier: ' char'
                EqualsEqualsEqualsToken
                Identifier: ' mark'
            Block
              ExpressionStatement
                PostfixUnaryExpression
                  Identifier: '
      position'
              BreakStatement
          ExpressionStatement
            BinaryExpression
              Identifier: '
    escaped'
              EqualsToken
              BinaryExpression
                PrefixUnaryExpression
                  Identifier: 'escaped'
                AmpersandAmpersandToken
                BinaryExpression
                  Identifier: ' char'
                  EqualsEqualsEqualsToken
                  StringLiteral
      IfStatement
        BinaryExpression
          Identifier: 'char'
          ExclamationEqualsEqualsToken
          Identifier: ' mark'
        Block
          ThrowStatement
            NewExpression
              Identifier: ' Error'
              StringLiteral
      ReturnStatement
        CallExpression
          PropertyAccessExpression
            Identifier: ' text'
            Identifier: 'slice'
          NumericLiteral
          Identifier: ' position'
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' identifierStartRegex'
        RegularExpressionLiteral
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' identifierContinueRegex'
        RegularExpressionLiteral
  FunctionDeclaration
    Identifier: ' getIdentifier'
    Parameter
      Identifier: 'text'
      StringKeyword
    UnionType
      StringKeyword
      LiteralType
        NullKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' char'
            ElementAccessExpression
              Identifier: ' text'
              NumericLiteral
      IfStatement
        PrefixUnaryExpression
          CallExpression
            PropertyAccessExpression
              Identifier: 'identifierStartRegex'
              Identifier: 'test'
            Identifier: 'char'
        Block
          ReturnStatement
            NullKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' position'
            NumericLiteral
      DoStatement
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
    char'
              EqualsToken
              ElementAccessExpression
                Identifier: ' text'
                Identifier: 'position'
          IfStatement
            PrefixUnaryExpression
              CallExpression
                PropertyAccessExpression
                  Identifier: 'identifierContinueRegex'
                  Identifier: 'test'
                Identifier: 'char'
            Block
              BreakStatement
          ExpressionStatement
            PostfixUnaryExpression
              Identifier: '
    position'
        BinaryExpression
          Identifier: 'position'
          LessThanToken
          PropertyAccessExpression
            Identifier: ' text'
            Identifier: 'length'
      ReturnStatement
        CallExpression
          PropertyAccessExpression
            Identifier: ' text'
            Identifier: 'slice'
          NumericLiteral
          Identifier: ' position'
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' numberRegex'
        RegularExpressionLiteral
  FunctionDeclaration
    Identifier: ' getNumber'
    Parameter
      Identifier: 'text'
      StringKeyword
    UnionType
      StringKeyword
      LiteralType
        NullKeyword
    Block
      ReturnStatement
        BinaryExpression
          ElementAccessExpression
            CallExpression
              PropertyAccessExpression
                Identifier: ' numberRegex'
                Identifier: 'exec'
              Identifier: 'text'
            QuestionDotToken
            NumericLiteral
          QuestionQuestionToken
          NullKeyword
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' identifierRule'
        TypeReference
          Identifier: ' Rule'
        ArrowFunction
          Parameter
            Identifier: ' text'
          EqualsGreaterThanToken
          Block
            VariableStatement
              VariableDeclarationList
                VariableDeclaration
                  Identifier: ' value'
                  CallExpression
                    Identifier: ' getIdentifier'
                    Identifier: 'text'
            IfStatement
              BinaryExpression
                Identifier: 'value'
                EqualsEqualsToken
                NullKeyword
              Block
                ReturnStatement
                  NullKeyword
            ReturnStatement
              ObjectLiteralExpression
                PropertyAssignment
                  Identifier: '
    type'
                  StringLiteral
                PropertyAssignment
                  Identifier: '
    text'
                  Identifier: ' value'
  FunctionDeclaration
    Identifier: ' makeKeyWordRule'
    Parameter
      Identifier: 'type'
      TypeReference
        Identifier: ' TokenType'
    TypeReference
      Identifier: ' Rule'
    Block
      ReturnStatement
        ArrowFunction
          Parameter
            Identifier: ' text'
          EqualsGreaterThanToken
          Block
            IfStatement
              PrefixUnaryExpression
                CallExpression
                  PropertyAccessExpression
                    Identifier: 'text'
                    Identifier: 'startsWith'
                  Identifier: 'type'
              Block
                ReturnStatement
                  NullKeyword
            VariableStatement
              VariableDeclarationList
                VariableDeclaration
                  Identifier: ' prepends'
                  ElementAccessExpression
                    Identifier: ' text'
                    PropertyAccessExpression
                      Identifier: 'type'
                      Identifier: 'length'
            IfStatement
              BinaryExpression
                BinaryExpression
                  Identifier: 'prepends'
                  ExclamationEqualsEqualsToken
                  Identifier: ' undefined'
                AmpersandAmpersandToken
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' identifierContinueRegex'
                    Identifier: 'test'
                  Identifier: 'prepends'
              Block
                ReturnStatement
                  NullKeyword
            ReturnStatement
              ObjectLiteralExpression
                ShorthandPropertyAssignment
                  Identifier: '
      type'
                PropertyAssignment
                  Identifier: '
      text'
                  Identifier: ' type'
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' stringValueRule'
        TypeReference
          Identifier: ' Rule'
        ArrowFunction
          Parameter
            Identifier: ' text'
          EqualsGreaterThanToken
          Block
            VariableStatement
              VariableDeclarationList
                VariableDeclaration
                  Identifier: ' value'
                  CallExpression
                    Identifier: ' getQuoted'
                    Identifier: 'text'
            IfStatement
              BinaryExpression
                Identifier: 'value'
                EqualsEqualsToken
                NullKeyword
              Block
                ReturnStatement
                  NullKeyword
            ReturnStatement
              ObjectLiteralExpression
                PropertyAssignment
                  Identifier: '
    type'
                  StringLiteral
                PropertyAssignment
                  Identifier: '
    text'
                  Identifier: ' value'
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' eofRule'
        TypeReference
          Identifier: ' Rule'
        ArrowFunction
          Parameter
            Identifier: ' text'
          EqualsGreaterThanToken
          Block
            IfStatement
              BinaryExpression
                PropertyAccessExpression
                  Identifier: 'text'
                  Identifier: 'length'
                GreaterThanToken
                NumericLiteral
              Block
                ReturnStatement
                  NullKeyword
            ReturnStatement
              ObjectLiteralExpression
                PropertyAssignment
                  Identifier: '
    type'
                  StringLiteral
                PropertyAssignment
                  Identifier: '
    text'
                  StringLiteral
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' numberRule'
        TypeReference
          Identifier: ' Rule'
        ArrowFunction
          Parameter
            Identifier: ' text'
          EqualsGreaterThanToken
          Block
            VariableStatement
              VariableDeclarationList
                VariableDeclaration
                  Identifier: ' value'
                  CallExpression
                    Identifier: ' getNumber'
                    Identifier: 'text'
            IfStatement
              BinaryExpression
                Identifier: 'value'
                EqualsEqualsEqualsToken
                NullKeyword
              Block
                ReturnStatement
                  NullKeyword
            ReturnStatement
              ObjectLiteralExpression
                PropertyAssignment
                  Identifier: '
    type'
                  StringLiteral
                PropertyAssignment
                  Identifier: '
    text'
                  Identifier: ' value'
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' rules'
        ArrayType
          TypeReference
            Identifier: ' Rule'
        ArrayLiteralExpression
          Identifier: '
  eofRule'
          CallExpression
            Identifier: '
  makePunctuationRule'
            StringLiteral
          CallExpression
            Identifier: '
  makePunctuationRule'
            StringLiteral
          CallExpression
            Identifier: '
  makePunctuationRule'
            StringLiteral
          CallExpression
            Identifier: '
  makePunctuationRule'
            StringLiteral
          CallExpression
            Identifier: '
  makePunctuationRule'
            StringLiteral
          CallExpression
            Identifier: '
  makePunctuationRule'
            StringLiteral
          CallExpression
            Identifier: '
  makePunctuationRule'
            StringLiteral
          CallExpression
            Identifier: '
  makePunctuationRule'
            StringLiteral
          CallExpression
            Identifier: '
  makePunctuationRule'
            StringLiteral
          CallExpression
            Identifier: '
  makePunctuationRule'
            StringLiteral
          CallExpression
            Identifier: '
  makePunctuationRule'
            StringLiteral
          CallExpression
            Identifier: '
  makePunctuationRule'
            StringLiteral
          CallExpression
            Identifier: '
  makePunctuationRule'
            StringLiteral
          CallExpression
            Identifier: '
  makePunctuationRule'
            StringLiteral
          CallExpression
            Identifier: '
  makePunctuationRule'
            StringLiteral
          CallExpression
            Identifier: '
  makePunctuationRule'
            StringLiteral
          CallExpression
            Identifier: '
  makePunctuationRule'
            StringLiteral
          CallExpression
            Identifier: '
  makePunctuationRule'
            StringLiteral
          CallExpression
            Identifier: '
  makePunctuationRule'
            StringLiteral
          CallExpression
            Identifier: '
  makePunctuationRule'
            StringLiteral
          CallExpression
            Identifier: '
  makePunctuationRule'
            StringLiteral
          CallExpression
            Identifier: '
  makePunctuationRule'
            StringLiteral
          CallExpression
            Identifier: '
  makePunctuationRule'
            StringLiteral
          CallExpression
            Identifier: '
  makePunctuationRule'
            StringLiteral
          CallExpression
            Identifier: '
  makeKeyWordRule'
            StringLiteral
          CallExpression
            Identifier: '
  makeKeyWordRule'
            StringLiteral
          CallExpression
            Identifier: '
  makeKeyWordRule'
            StringLiteral
          CallExpression
            Identifier: '
  makeKeyWordRule'
            StringLiteral
          CallExpression
            Identifier: '
  makeKeyWordRule'
            StringLiteral
          CallExpression
            Identifier: '
  makeKeyWordRule'
            StringLiteral
          CallExpression
            Identifier: '
  makeKeyWordRule'
            StringLiteral
          CallExpression
            Identifier: '
  makeKeyWordRule'
            StringLiteral
          CallExpression
            Identifier: '
  makeKeyWordRule'
            StringLiteral
          CallExpression
            Identifier: '
  makeKeyWordRule'
            StringLiteral
          CallExpression
            Identifier: '
  makeKeyWordRule'
            StringLiteral
          CallExpression
            Identifier: '
  makeKeyWordRule'
            StringLiteral
          CallExpression
            Identifier: '
  makeKeyWordRule'
            StringLiteral
          CallExpression
            Identifier: '
  makeKeyWordRule'
            StringLiteral
          CallExpression
            Identifier: '
  makeKeyWordRule'
            StringLiteral
          Identifier: '
  numberRule'
          Identifier: '
  identifierRule'
          Identifier: '
  stringValueRule'
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' breakingWhitespaceRegex'
        RegularExpressionLiteral
  ClassDeclaration
    ExportKeyword
    Identifier: ' Lexer'
    PropertyDeclaration
      PrivateKeyword
      ReadonlyKeyword
      Identifier: ' text'
      StringKeyword
      StringLiteral
    PropertyDeclaration
      PublicKeyword
      ReadonlyKeyword
      Identifier: ' current'
      TypeReference
        Identifier: ' Token'
    PropertyDeclaration
      PublicKeyword
      ReadonlyKeyword
      Identifier: ' next'
      TypeReference
        Identifier: ' Token'
    PropertyDeclaration
      PublicKeyword
      ReadonlyKeyword
      Identifier: ' previous'
      UnionType
        TypeReference
          Identifier: ' Token'
        UndefinedKeyword
    MethodDeclaration
      PublicKeyword
      StaticKeyword
      Identifier: ' create'
      Parameter
        Identifier: 'text'
        StringKeyword
      TypeReference
        Identifier: ' Lexer'
      Block
        VariableStatement
          VariableDeclarationList
            VariableDeclaration
              Identifier: ' current'
              CallExpression
                PropertyAccessExpression
                  ThisKeyword
                  Identifier: 'read'
                Identifier: 'text'
        ExpressionStatement
          BinaryExpression
            Identifier: '
    text'
            EqualsToken
            PropertyAccessExpression
              Identifier: ' current'
              Identifier: 'text'
        VariableStatement
          VariableDeclarationList
            VariableDeclaration
              Identifier: ' next'
              CallExpression
                PropertyAccessExpression
                  ThisKeyword
                  Identifier: 'read'
                Identifier: 'text'
        ExpressionStatement
          BinaryExpression
            Identifier: '
    text'
            EqualsToken
            PropertyAccessExpression
              Identifier: ' next'
              Identifier: 'text'
        ReturnStatement
          NewExpression
            Identifier: ' Lexer'
            Identifier: 'text'
            Identifier: ' undefined'
            PropertyAccessExpression
              Identifier: ' current'
              Identifier: 'token'
            PropertyAccessExpression
              Identifier: ' next'
              Identifier: 'token'
    Constructor
      PrivateKeyword
      Parameter
        Identifier: 'text'
        StringKeyword
      Parameter
        Identifier: ' previous'
        UnionType
          TypeReference
            Identifier: ' Token'
          UndefinedKeyword
      Parameter
        Identifier: ' current'
        TypeReference
          Identifier: ' Token'
      Parameter
        Identifier: ' next'
        TypeReference
          Identifier: ' Token'
      Block
        ExpressionStatement
          BinaryExpression
            PropertyAccessExpression
              ThisKeyword
              Identifier: 'text'
            EqualsToken
            Identifier: ' text'
        ExpressionStatement
          BinaryExpression
            PropertyAccessExpression
              ThisKeyword
              Identifier: 'previous'
            EqualsToken
            Identifier: ' previous'
        ExpressionStatement
          BinaryExpression
            PropertyAccessExpression
              ThisKeyword
              Identifier: 'current'
            EqualsToken
            Identifier: ' current'
        ExpressionStatement
          BinaryExpression
            PropertyAccessExpression
              ThisKeyword
              Identifier: 'next'
            EqualsToken
            Identifier: ' next'
    MethodDeclaration
      PrivateKeyword
      StaticKeyword
      Identifier: ' read'
      Parameter
        Identifier: 'text'
        StringKeyword
      Parameter
        Identifier: ' startOfLine'
        BooleanKeyword
        FalseKeyword
      TypeLiteral
        PropertySignature
          Identifier: ' text'
          StringKeyword
        PropertySignature
          Identifier: ' token'
          TypeReference
            Identifier: ' Token'
      Block
        ExpressionStatement
          BinaryExpression
            Identifier: '
    startOfLine'
            EqualsToken
            BinaryExpression
              Identifier: ' startOfLine'
              BarBarToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' breakingWhitespaceRegex'
                  Identifier: 'test'
                Identifier: 'text'
        ExpressionStatement
          BinaryExpression
            Identifier: '
    text'
            EqualsToken
            CallExpression
              PropertyAccessExpression
                Identifier: ' text'
                Identifier: 'trim'
        ForOfStatement
          VariableDeclarationList
            VariableDeclaration
              Identifier: ' rule'
          Identifier: ' rules'
          Block
            VariableStatement
              VariableDeclarationList
                VariableDeclaration
                  Identifier: ' partial'
                  CallExpression
                    Identifier: ' rule'
                    Identifier: 'text'
            IfStatement
              BinaryExpression
                Identifier: 'partial'
                ExclamationEqualsEqualsToken
                NullKeyword
              Block
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' token'
                      ObjectLiteralExpression
                        SpreadAssignment
                          Identifier: 'partial'
                        ShorthandPropertyAssignment
                          Identifier: '
          startOfLine'
                ExpressionStatement
                  BinaryExpression
                    Identifier: '
        text'
                    EqualsToken
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' text'
                        Identifier: 'slice'
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: 'token'
                          Identifier: 'text'
                        Identifier: 'length'
                ReturnStatement
                  ObjectLiteralExpression
                    ShorthandPropertyAssignment
                      Identifier: ' text'
                    ShorthandPropertyAssignment
                      Identifier: ' token'
        ThrowStatement
          NewExpression
            Identifier: ' Error'
            BinaryExpression
              StringLiteral
              PlusToken
              Identifier: ' text'
    MethodDeclaration
      Identifier: '

  advance'
      TypeReference
        Identifier: ' Lexer'
      Block
        VariableStatement
          VariableDeclarationList
            VariableDeclaration
              Identifier: ' next'
              CallExpression
                PropertyAccessExpression
                  Identifier: ' Lexer'
                  Identifier: 'read'
                PropertyAccessExpression
                  ThisKeyword
                  Identifier: 'text'
        ReturnStatement
          NewExpression
            Identifier: ' Lexer'
            PropertyAccessExpression
              Identifier: 'next'
              Identifier: 'text'
            PropertyAccessExpression
              ThisKeyword
              Identifier: 'current'
            PropertyAccessExpression
              ThisKeyword
              Identifier: 'next'
            PropertyAccessExpression
              Identifier: ' next'
              Identifier: 'token'
