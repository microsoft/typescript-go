SourceFile
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: '
    AccessorDeclaration'
        ImportSpecifier
          Identifier: '
    AllAccessorDeclarations'
        ImportSpecifier
          Identifier: '
    ArrayLiteralExpression'
        ImportSpecifier
          Identifier: '
    ArrowFunction'
        ImportSpecifier
          Identifier: '
    AsExpression'
        ImportSpecifier
          Identifier: '
    BinaryExpression'
        ImportSpecifier
          Identifier: '
    BindingElement'
        ImportSpecifier
          Identifier: '
    ClassExpression'
        ImportSpecifier
          Identifier: '
    CompilerOptions'
        ImportSpecifier
          Identifier: '
    Debug'
        ImportSpecifier
          Identifier: '
    ElementAccessExpression'
        ImportSpecifier
          Identifier: '
    ExportAssignment'
        ImportSpecifier
          Identifier: '
    Expression'
        ImportSpecifier
          Identifier: '
    forEachReturnStatement'
        ImportSpecifier
          Identifier: '
    FunctionExpression'
        ImportSpecifier
          Identifier: '
    FunctionFlags'
        ImportSpecifier
          Identifier: '
    FunctionLikeDeclaration'
        ImportSpecifier
          Identifier: '
    GetAccessorDeclaration'
        ImportSpecifier
          Identifier: '
    getEffectiveReturnTypeNode'
        ImportSpecifier
          Identifier: '
    getEffectiveTypeAnnotationNode'
        ImportSpecifier
          Identifier: '
    getFunctionFlags'
        ImportSpecifier
          Identifier: '
    getJSDocTypeAssertionType'
        ImportSpecifier
          Identifier: '
    getStrictOptionValue'
        ImportSpecifier
          Identifier: '
    HasInferredType'
        ImportSpecifier
          Identifier: '
    Identifier'
        ImportSpecifier
          Identifier: '
    IntersectionTypeNode'
        ImportSpecifier
          Identifier: '
    isBlock'
        ImportSpecifier
          Identifier: '
    isConstTypeReference'
        ImportSpecifier
          Identifier: '
    isDeclarationReadonly'
        ImportSpecifier
          Identifier: '
    isGetAccessor'
        ImportSpecifier
          Identifier: '
    isIdentifier'
        ImportSpecifier
          Identifier: '
    isJSDocTypeAssertion'
        ImportSpecifier
          Identifier: '
    isKeyword'
        ImportSpecifier
          Identifier: '
    isPrimitiveLiteralValue'
        ImportSpecifier
          Identifier: '
    isShorthandPropertyAssignment'
        ImportSpecifier
          Identifier: '
    isSpreadAssignment'
        ImportSpecifier
          Identifier: '
    isValueSignatureDeclaration'
        ImportSpecifier
          Identifier: '
    isVarConstLike'
        ImportSpecifier
          Identifier: '
    JSDocSignature'
        ImportSpecifier
          Identifier: '
    MethodDeclaration'
        ImportSpecifier
          Identifier: '
    Node'
        ImportSpecifier
          Identifier: '
    NodeArray'
        ImportSpecifier
          Identifier: '
    NodeFlags'
        ImportSpecifier
          Identifier: '
    nodeIsMissing'
        ImportSpecifier
          Identifier: '
    ObjectLiteralExpression'
        ImportSpecifier
          Identifier: '
    ParameterDeclaration'
        ImportSpecifier
          Identifier: '
    ParenthesizedExpression'
        ImportSpecifier
          Identifier: '
    ParenthesizedTypeNode'
        ImportSpecifier
          Identifier: '
    PrefixUnaryExpression'
        ImportSpecifier
          Identifier: '
    PropertyAccessExpression'
        ImportSpecifier
          Identifier: '
    PropertyAssignment'
        ImportSpecifier
          Identifier: '
    PropertyDeclaration'
        ImportSpecifier
          Identifier: '
    PropertyName'
        ImportSpecifier
          Identifier: '
    PropertySignature'
        ImportSpecifier
          Identifier: '
    SetAccessorDeclaration'
        ImportSpecifier
          Identifier: '
    SignatureDeclaration'
        ImportSpecifier
          Identifier: '
    SyntacticNodeBuilder'
        ImportSpecifier
          Identifier: '
    SyntacticTypeNodeBuilderContext'
        ImportSpecifier
          Identifier: '
    SyntacticTypeNodeBuilderResolver'
        ImportSpecifier
          Identifier: '
    SyntaxKind'
        ImportSpecifier
          Identifier: '
    TypeAssertion'
        ImportSpecifier
          Identifier: '
    TypeNode'
        ImportSpecifier
          Identifier: '
    TypeParameterDeclaration'
        ImportSpecifier
          Identifier: '
    UnionTypeNode'
        ImportSpecifier
          Identifier: '
    VariableDeclaration'
    StringLiteral
  FunctionDeclaration
    ExportKeyword
    Identifier: ' createSyntacticTypeNodeBuilder'
    Parameter
      Identifier: '
    options'
      TypeReference
        Identifier: ' CompilerOptions'
    Parameter
      Identifier: '
    resolver'
      TypeReference
        Identifier: ' SyntacticTypeNodeBuilderResolver'
    TypeReference
      Identifier: ' SyntacticNodeBuilder'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' strictNullChecks'
            CallExpression
              Identifier: ' getStrictOptionValue'
              Identifier: 'options'
              StringLiteral
      ReturnStatement
        ObjectLiteralExpression
          ShorthandPropertyAssignment
            Identifier: '
        typeFromExpression'
          ShorthandPropertyAssignment
            Identifier: '
        serializeTypeOfDeclaration'
          ShorthandPropertyAssignment
            Identifier: '
        serializeReturnTypeForSignature'
          ShorthandPropertyAssignment
            Identifier: '
        serializeTypeOfExpression'
      FunctionDeclaration
        Identifier: ' serializeExistingTypeAnnotation'
        Parameter
          Identifier: 'type'
          UnionType
            TypeReference
              Identifier: ' TypeNode'
            UndefinedKeyword
        Parameter
          Identifier: ' addUndefined'
          QuestionToken
          BooleanKeyword
        Block
          ReturnStatement
            ConditionalExpression
              BinaryExpression
                BinaryExpression
                  Identifier: ' type'
                  ExclamationEqualsEqualsToken
                  Identifier: ' undefined'
                AmpersandAmpersandToken
                ParenthesizedExpression
                  BinaryExpression
                    PrefixUnaryExpression
                      Identifier: 'addUndefined'
                    BarBarToken
                    ParenthesizedExpression
                      BinaryExpression
                        Identifier: 'type'
                        AmpersandAmpersandToken
                        CallExpression
                          Identifier: ' canAddUndefined'
                          Identifier: 'type'
              QuestionToken
              TrueKeyword
              ColonToken
              Identifier: ' undefined'
      FunctionDeclaration
        Identifier: ' serializeTypeOfExpression'
        Parameter
          Identifier: 'expr'
          TypeReference
            Identifier: ' Expression'
        Parameter
          Identifier: ' context'
          TypeReference
            Identifier: ' SyntacticTypeNodeBuilderContext'
        Parameter
          Identifier: ' addUndefined'
          QuestionToken
          BooleanKeyword
        Parameter
          Identifier: ' preserveLiterals'
          QuestionToken
          BooleanKeyword
        Block
          ReturnStatement
            BinaryExpression
              CallExpression
                Identifier: ' typeFromExpression'
                Identifier: 'expr'
                Identifier: ' context'
                FalseKeyword
                Identifier: ' addUndefined'
                Identifier: ' preserveLiterals'
              QuestionQuestionToken
              CallExpression
                Identifier: ' inferExpressionType'
                Identifier: 'expr'
                Identifier: ' context'
      FunctionDeclaration
        Identifier: ' serializeTypeOfDeclaration'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' HasInferredType'
        Parameter
          Identifier: ' context'
          TypeReference
            Identifier: ' SyntacticTypeNodeBuilderContext'
        Block
          SwitchStatement
            PropertyAccessExpression
              Identifier: 'node'
              Identifier: 'kind'
            CaseBlock
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'PropertySignature'
                ReturnStatement
                  CallExpression
                    Identifier: ' serializeExistingTypeAnnotation'
                    CallExpression
                      Identifier: 'getEffectiveTypeAnnotationNode'
                      Identifier: 'node'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'Parameter'
                ReturnStatement
                  CallExpression
                    Identifier: ' typeFromParameter'
                    Identifier: 'node'
                    Identifier: ' context'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'VariableDeclaration'
                ReturnStatement
                  CallExpression
                    Identifier: ' typeFromVariable'
                    Identifier: 'node'
                    Identifier: ' context'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'PropertyDeclaration'
                ReturnStatement
                  CallExpression
                    Identifier: ' typeFromProperty'
                    Identifier: 'node'
                    Identifier: ' context'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'BindingElement'
                ReturnStatement
                  CallExpression
                    Identifier: ' inferTypeOfDeclaration'
                    Identifier: 'node'
                    Identifier: ' context'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ExportAssignment'
                ReturnStatement
                  CallExpression
                    Identifier: ' serializeTypeOfExpression'
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'expression'
                    Identifier: ' context'
                    Identifier: ' /*addUndefined*/ undefined'
                    TrueKeyword
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'PropertyAccessExpression'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ElementAccessExpression'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'BinaryExpression'
                ReturnStatement
                  BinaryExpression
                    CallExpression
                      Identifier: ' serializeExistingTypeAnnotation'
                      CallExpression
                        Identifier: 'getEffectiveTypeAnnotationNode'
                        Identifier: 'node'
                    BarBarToken
                    CallExpression
                      Identifier: ' inferTypeOfDeclaration'
                      Identifier: 'node'
                      Identifier: ' context'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'PropertyAssignment'
                ReturnStatement
                  BinaryExpression
                    CallExpression
                      Identifier: ' typeFromExpression'
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'initializer'
                      Identifier: ' context'
                    BarBarToken
                    CallExpression
                      Identifier: ' inferTypeOfDeclaration'
                      Identifier: 'node'
                      Identifier: ' context'
              DefaultClause
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
                Debug'
                      Identifier: 'assertNever'
                    Identifier: 'node'
                    TemplateExpression
                      TemplateHead
                      TemplateSpan
                        CallExpression
                          PropertyAccessExpression
                            Identifier: 'Debug'
                            Identifier: 'formatSyntaxKind'
                          PropertyAccessExpression
                            ParenthesizedExpression
                              AsExpression
                                Identifier: 'node'
                                TypeReference
                                  Identifier: ' Node'
                            Identifier: 'kind'
                        TemplateTail
      FunctionDeclaration
        Identifier: ' serializeReturnTypeForSignature'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' SignatureDeclaration'
            TypeReference
              Identifier: ' JSDocSignature'
        Parameter
          Identifier: ' context'
          TypeReference
            Identifier: ' SyntacticTypeNodeBuilderContext'
        UnionType
          BooleanKeyword
          UndefinedKeyword
        Block
          SwitchStatement
            PropertyAccessExpression
              Identifier: 'node'
              Identifier: 'kind'
            CaseBlock
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'GetAccessor'
                ReturnStatement
                  CallExpression
                    Identifier: ' typeFromAccessor'
                    Identifier: 'node'
                    Identifier: ' context'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'MethodDeclaration'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'FunctionDeclaration'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ConstructSignature'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'MethodSignature'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'CallSignature'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'Constructor'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'SetAccessor'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'IndexSignature'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'FunctionType'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ConstructorType'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'FunctionExpression'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ArrowFunction'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'JSDocFunctionType'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'JSDocSignature'
                ReturnStatement
                  CallExpression
                    Identifier: ' createReturnFromSignature'
                    Identifier: 'node'
                    Identifier: ' context'
              DefaultClause
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
                Debug'
                      Identifier: 'assertNever'
                    Identifier: 'node'
                    TemplateExpression
                      TemplateHead
                      TemplateSpan
                        CallExpression
                          PropertyAccessExpression
                            Identifier: 'Debug'
                            Identifier: 'formatSyntaxKind'
                          PropertyAccessExpression
                            ParenthesizedExpression
                              AsExpression
                                Identifier: 'node'
                                TypeReference
                                  Identifier: ' Node'
                            Identifier: 'kind'
                        TemplateTail
      FunctionDeclaration
        Identifier: ' getTypeAnnotationFromAccessor'
        Parameter
          Identifier: 'accessor'
          TypeReference
            Identifier: ' AccessorDeclaration'
        UnionType
          TypeReference
            Identifier: ' TypeNode'
          UndefinedKeyword
        Block
          IfStatement
            Identifier: 'accessor'
            Block
              ReturnStatement
                ConditionalExpression
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: ' accessor'
                      Identifier: 'kind'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'GetAccessor'
                  QuestionToken
                  CallExpression
                    Identifier: ' getEffectiveReturnTypeNode'
                    Identifier: 'accessor'
                  ColonToken
                  ConditionalExpression
                    BinaryExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: ' accessor'
                          Identifier: 'parameters'
                        Identifier: 'length'
                      GreaterThanToken
                      NumericLiteral
                    QuestionToken
                    CallExpression
                      Identifier: ' getEffectiveTypeAnnotationNode'
                      ElementAccessExpression
                        PropertyAccessExpression
                          Identifier: 'accessor'
                          Identifier: 'parameters'
                        NumericLiteral
                    ColonToken
                    Identifier: ' undefined'
      FunctionDeclaration
        Identifier: ' getTypeAnnotationFromAllAccessorDeclarations'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' AccessorDeclaration'
        Parameter
          Identifier: ' accessors'
          TypeReference
            Identifier: ' AllAccessorDeclarations'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' accessorType'
                CallExpression
                  Identifier: ' getTypeAnnotationFromAccessor'
                  Identifier: 'node'
          IfStatement
            BinaryExpression
              PrefixUnaryExpression
                Identifier: 'accessorType'
              AmpersandAmpersandToken
              BinaryExpression
                Identifier: ' node'
                ExclamationEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' accessors'
                  Identifier: 'firstAccessor'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            accessorType'
                  EqualsToken
                  CallExpression
                    Identifier: ' getTypeAnnotationFromAccessor'
                    PropertyAccessExpression
                      Identifier: 'accessors'
                      Identifier: 'firstAccessor'
          IfStatement
            BinaryExpression
              BinaryExpression
                PrefixUnaryExpression
                  Identifier: 'accessorType'
                AmpersandAmpersandToken
                PropertyAccessExpression
                  Identifier: ' accessors'
                  Identifier: 'secondAccessor'
              AmpersandAmpersandToken
              BinaryExpression
                Identifier: ' node'
                ExclamationEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' accessors'
                  Identifier: 'secondAccessor'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            accessorType'
                  EqualsToken
                  CallExpression
                    Identifier: ' getTypeAnnotationFromAccessor'
                    PropertyAccessExpression
                      Identifier: 'accessors'
                      Identifier: 'secondAccessor'
          ReturnStatement
            Identifier: ' accessorType'
      FunctionDeclaration
        Identifier: ' typeFromAccessor'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' AccessorDeclaration'
        Parameter
          Identifier: ' context'
          TypeReference
            Identifier: ' SyntacticTypeNodeBuilderContext'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' accessorDeclarations'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' resolver'
                    Identifier: 'getAllAccessorDeclarations'
                  Identifier: 'node'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' accessorType'
                CallExpression
                  Identifier: ' getTypeAnnotationFromAllAccessorDeclarations'
                  Identifier: 'node'
                  Identifier: ' accessorDeclarations'
          IfStatement
            Identifier: 'accessorType'
            Block
              ReturnStatement
                CallExpression
                  Identifier: ' serializeExistingTypeAnnotation'
                  Identifier: 'accessorType'
          IfStatement
            PropertyAccessExpression
              Identifier: 'accessorDeclarations'
              Identifier: 'getAccessor'
            Block
              ReturnStatement
                CallExpression
                  Identifier: ' createReturnFromSignature'
                  PropertyAccessExpression
                    Identifier: 'accessorDeclarations'
                    Identifier: 'getAccessor'
                  Identifier: ' context'
          ReturnStatement
            FalseKeyword
      FunctionDeclaration
        Identifier: ' typeFromVariable'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' VariableDeclaration'
        Parameter
          Identifier: ' context'
          TypeReference
            Identifier: ' SyntacticTypeNodeBuilderContext'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' declaredType'
                CallExpression
                  Identifier: ' getEffectiveTypeAnnotationNode'
                  Identifier: 'node'
          IfStatement
            Identifier: 'declaredType'
            Block
              ReturnStatement
                CallExpression
                  Identifier: ' serializeExistingTypeAnnotation'
                  Identifier: 'declaredType'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' resultType'
          IfStatement
            PropertyAccessExpression
              Identifier: 'node'
              Identifier: 'initializer'
            Block
              IfStatement
                PrefixUnaryExpression
                  CallExpression
                    PropertyAccessExpression
                      Identifier: 'resolver'
                      Identifier: 'isExpandoFunctionDeclaration'
                    Identifier: 'node'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                resultType'
                      EqualsToken
                      CallExpression
                        Identifier: ' typeFromExpression'
                        PropertyAccessExpression
                          Identifier: 'node'
                          Identifier: 'initializer'
                        Identifier: ' context'
                        Identifier: ' /*isConstContext*/ undefined'
                        Identifier: ' /*requiresAddingUndefined*/ undefined'
                        CallExpression
                          Identifier: ' isVarConstLike'
                          Identifier: 'node'
          ReturnStatement
            BinaryExpression
              Identifier: ' resultType'
              QuestionQuestionToken
              CallExpression
                Identifier: ' inferTypeOfDeclaration'
                Identifier: 'node'
                Identifier: ' context'
      FunctionDeclaration
        Identifier: ' typeFromParameter'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' ParameterDeclaration'
        Parameter
          Identifier: ' context'
          TypeReference
            Identifier: ' SyntacticTypeNodeBuilderContext'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' parent'
                PropertyAccessExpression
                  Identifier: ' node'
                  Identifier: 'parent'
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'parent'
                Identifier: 'kind'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'SetAccessor'
            Block
              ReturnStatement
                CallExpression
                  Identifier: ' typeFromAccessor'
                  Identifier: 'parent'
                  Identifier: ' context'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' declaredType'
                CallExpression
                  Identifier: ' getEffectiveTypeAnnotationNode'
                  Identifier: 'node'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' addUndefined'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' resolver'
                    Identifier: 'requiresAddingImplicitUndefined'
                  Identifier: 'node'
                  PropertyAccessExpression
                    Identifier: ' context'
                    Identifier: 'enclosingDeclaration'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' resultType'
          IfStatement
            Identifier: 'declaredType'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            resultType'
                  EqualsToken
                  CallExpression
                    Identifier: ' serializeExistingTypeAnnotation'
                    Identifier: 'declaredType'
                    Identifier: ' addUndefined'
            Block
              IfStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'initializer'
                  AmpersandAmpersandToken
                  CallExpression
                    Identifier: ' isIdentifier'
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'name'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                resultType'
                      EqualsToken
                      CallExpression
                        Identifier: ' typeFromExpression'
                        PropertyAccessExpression
                          Identifier: 'node'
                          Identifier: 'initializer'
                        Identifier: ' context'
                        Identifier: ' /*isConstContext*/ undefined'
                        Identifier: ' addUndefined'
          ReturnStatement
            BinaryExpression
              Identifier: ' resultType'
              QuestionQuestionToken
              CallExpression
                Identifier: ' inferTypeOfDeclaration'
                Identifier: 'node'
                Identifier: ' context'
      FunctionDeclaration
        Identifier: ' typeFromProperty'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' PropertyDeclaration'
        Parameter
          Identifier: ' context'
          TypeReference
            Identifier: ' SyntacticTypeNodeBuilderContext'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' declaredType'
                CallExpression
                  Identifier: ' getEffectiveTypeAnnotationNode'
                  Identifier: 'node'
          IfStatement
            Identifier: 'declaredType'
            Block
              ReturnStatement
                CallExpression
                  Identifier: ' serializeExistingTypeAnnotation'
                  Identifier: 'declaredType'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' resultType'
          IfStatement
            PropertyAccessExpression
              Identifier: 'node'
              Identifier: 'initializer'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' isReadonly'
                    CallExpression
                      Identifier: ' isDeclarationReadonly'
                      Identifier: 'node'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            resultType'
                  EqualsToken
                  CallExpression
                    Identifier: ' typeFromExpression'
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'initializer'
                    Identifier: ' context'
                    Identifier: ' /*isConstContext*/ undefined'
                    Identifier: ' /*requiresAddingUndefined*/ undefined'
                    Identifier: ' isReadonly'
          ReturnStatement
            BinaryExpression
              Identifier: ' resultType'
              QuestionQuestionToken
              CallExpression
                Identifier: ' inferTypeOfDeclaration'
                Identifier: 'node'
                Identifier: ' context'
      FunctionDeclaration
        Identifier: ' inferTypeOfDeclaration'
        Parameter
          Identifier: '
        node'
          UnionType
            TypeReference
              Identifier: ' PropertyAssignment'
            TypeReference
              Identifier: ' PropertyAccessExpression'
            TypeReference
              Identifier: ' BinaryExpression'
            TypeReference
              Identifier: ' ElementAccessExpression'
            TypeReference
              Identifier: ' VariableDeclaration'
            TypeReference
              Identifier: ' ParameterDeclaration'
            TypeReference
              Identifier: ' BindingElement'
            TypeReference
              Identifier: ' PropertyDeclaration'
            TypeReference
              Identifier: ' PropertySignature'
            TypeReference
              Identifier: ' ExportAssignment'
        Parameter
          Identifier: '
        context'
          TypeReference
            Identifier: ' SyntacticTypeNodeBuilderContext'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: '
        context'
                  Identifier: 'tracker'
                Identifier: 'reportInferenceFallback'
              Identifier: 'node'
          ReturnStatement
            FalseKeyword
      FunctionDeclaration
        Identifier: ' inferExpressionType'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Expression'
        Parameter
          Identifier: ' context'
          TypeReference
            Identifier: ' SyntacticTypeNodeBuilderContext'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: '
        context'
                  Identifier: 'tracker'
                Identifier: 'reportInferenceFallback'
              Identifier: 'node'
          ReturnStatement
            FalseKeyword
      FunctionDeclaration
        Identifier: ' inferReturnTypeOfSignatureSignature'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' SignatureDeclaration'
            TypeReference
              Identifier: ' JSDocSignature'
        Parameter
          Identifier: ' context'
          TypeReference
            Identifier: ' SyntacticTypeNodeBuilderContext'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: '
        context'
                  Identifier: 'tracker'
                Identifier: 'reportInferenceFallback'
              Identifier: 'node'
          ReturnStatement
            FalseKeyword
      FunctionDeclaration
        Identifier: ' inferAccessorType'
        Parameter
          Identifier: 'node'
          UnionType
            TypeReference
              Identifier: ' GetAccessorDeclaration'
            TypeReference
              Identifier: ' SetAccessorDeclaration'
        Parameter
          Identifier: ' allAccessors'
          TypeReference
            Identifier: ' AllAccessorDeclarations'
        Parameter
          Identifier: ' context'
          TypeReference
            Identifier: ' SyntacticTypeNodeBuilderContext'
        Block
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'kind'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'GetAccessor'
            Block
              ReturnStatement
                CallExpression
                  Identifier: ' createReturnFromSignature'
                  Identifier: 'node'
                  Identifier: ' context'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: '
            context'
                      Identifier: 'tracker'
                    Identifier: 'reportInferenceFallback'
                  Identifier: 'node'
              ReturnStatement
                FalseKeyword
      FunctionDeclaration
        Identifier: ' typeFromTypeAssertion'
        Parameter
          Identifier: 'expression'
          TypeReference
            Identifier: ' Expression'
        Parameter
          Identifier: ' type'
          TypeReference
            Identifier: ' TypeNode'
        Parameter
          Identifier: ' context'
          TypeReference
            Identifier: ' SyntacticTypeNodeBuilderContext'
        Parameter
          Identifier: ' requiresAddingUndefined'
          BooleanKeyword
        Block
          IfStatement
            CallExpression
              Identifier: 'isConstTypeReference'
              Identifier: 'type'
            Block
              ReturnStatement
                CallExpression
                  Identifier: ' typeFromExpression'
                  Identifier: 'expression'
                  Identifier: ' context'
                  TrueKeyword
                  Identifier: ' requiresAddingUndefined'
          IfStatement
            BinaryExpression
              Identifier: 'requiresAddingUndefined'
              AmpersandAmpersandToken
              PrefixUnaryExpression
                CallExpression
                  Identifier: 'canAddUndefined'
                  Identifier: 'type'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: '
            context'
                      Identifier: 'tracker'
                    Identifier: 'reportInferenceFallback'
                  Identifier: 'type'
          ReturnStatement
            CallExpression
              Identifier: ' serializeExistingTypeAnnotation'
              Identifier: 'type'
      FunctionDeclaration
        Identifier: ' typeFromExpression'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Expression'
        Parameter
          Identifier: ' context'
          TypeReference
            Identifier: ' SyntacticTypeNodeBuilderContext'
        Parameter
          Identifier: ' isConstContext'
          FalseKeyword
        Parameter
          Identifier: ' requiresAddingUndefined'
          FalseKeyword
        Parameter
          Identifier: ' preserveLiterals'
          FalseKeyword
        UnionType
          BooleanKeyword
          UndefinedKeyword
        Block
          SwitchStatement
            PropertyAccessExpression
              Identifier: 'node'
              Identifier: 'kind'
            CaseBlock
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ParenthesizedExpression'
                IfStatement
                  CallExpression
                    Identifier: 'isJSDocTypeAssertion'
                    Identifier: 'node'
                  Block
                    ReturnStatement
                      CallExpression
                        Identifier: ' typeFromTypeAssertion'
                        PropertyAccessExpression
                          Identifier: 'node'
                          Identifier: 'expression'
                        CallExpression
                          Identifier: ' getJSDocTypeAssertionType'
                          Identifier: 'node'
                        Identifier: ' context'
                        Identifier: ' requiresAddingUndefined'
                ReturnStatement
                  CallExpression
                    Identifier: ' typeFromExpression'
                    PropertyAccessExpression
                      ParenthesizedExpression
                        AsExpression
                          Identifier: 'node'
                          TypeReference
                            Identifier: ' ParenthesizedExpression'
                      Identifier: 'expression'
                    Identifier: ' context'
                    Identifier: ' isConstContext'
                    Identifier: ' requiresAddingUndefined'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'Identifier'
                IfStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: 'resolver'
                      Identifier: 'isUndefinedIdentifierExpression'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' Identifier'
                  Block
                    ReturnStatement
                      TrueKeyword
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'NullKeyword'
                ReturnStatement
                  TrueKeyword
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ArrowFunction'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'FunctionExpression'
                ReturnStatement
                  CallExpression
                    Identifier: ' typeFromFunctionLikeExpression'
                    AsExpression
                      Identifier: 'node'
                      UnionType
                        TypeReference
                          Identifier: ' ArrowFunction'
                        TypeReference
                          Identifier: ' FunctionExpression'
                    Identifier: ' context'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'TypeAssertionExpression'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'AsExpression'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' asExpression'
                      AsExpression
                        Identifier: ' node'
                        UnionType
                          TypeReference
                            Identifier: ' AsExpression'
                          TypeReference
                            Identifier: ' TypeAssertion'
                ReturnStatement
                  CallExpression
                    Identifier: ' typeFromTypeAssertion'
                    PropertyAccessExpression
                      Identifier: 'asExpression'
                      Identifier: 'expression'
                    PropertyAccessExpression
                      Identifier: ' asExpression'
                      Identifier: 'type'
                    Identifier: ' context'
                    Identifier: ' requiresAddingUndefined'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'PrefixUnaryExpression'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' unaryExpression'
                      AsExpression
                        Identifier: ' node'
                        TypeReference
                          Identifier: ' PrefixUnaryExpression'
                IfStatement
                  CallExpression
                    Identifier: 'isPrimitiveLiteralValue'
                    Identifier: 'unaryExpression'
                  Block
                    IfStatement
                      BinaryExpression
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: 'unaryExpression'
                            Identifier: 'operand'
                          Identifier: 'kind'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'BigIntLiteral'
                      Block
                        ReturnStatement
                          CallExpression
                            Identifier: ' typeFromPrimitiveLiteral'
                    IfStatement
                      BinaryExpression
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: 'unaryExpression'
                            Identifier: 'operand'
                          Identifier: 'kind'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'NumericLiteral'
                      Block
                        ReturnStatement
                          CallExpression
                            Identifier: ' typeFromPrimitiveLiteral'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'NumericLiteral'
                ReturnStatement
                  CallExpression
                    Identifier: ' typeFromPrimitiveLiteral'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'TemplateExpression'
                IfStatement
                  BinaryExpression
                    PrefixUnaryExpression
                      Identifier: 'isConstContext'
                    AmpersandAmpersandToken
                    PrefixUnaryExpression
                      Identifier: 'preserveLiterals'
                  Block
                    ReturnStatement
                      TrueKeyword
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'NoSubstitutionTemplateLiteral'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'StringLiteral'
                ReturnStatement
                  CallExpression
                    Identifier: ' typeFromPrimitiveLiteral'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'BigIntLiteral'
                ReturnStatement
                  CallExpression
                    Identifier: ' typeFromPrimitiveLiteral'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'TrueKeyword'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'FalseKeyword'
                ReturnStatement
                  CallExpression
                    Identifier: ' typeFromPrimitiveLiteral'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ArrayLiteralExpression'
                ReturnStatement
                  CallExpression
                    Identifier: ' typeFromArrayLiteral'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' ArrayLiteralExpression'
                    Identifier: ' context'
                    Identifier: ' isConstContext'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ObjectLiteralExpression'
                ReturnStatement
                  CallExpression
                    Identifier: ' typeFromObjectLiteral'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' ObjectLiteralExpression'
                    Identifier: ' context'
                    Identifier: ' isConstContext'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ClassExpression'
                ReturnStatement
                  CallExpression
                    Identifier: ' inferExpressionType'
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' ClassExpression'
                    Identifier: ' context'
          ReturnStatement
            Identifier: ' undefined'
      FunctionDeclaration
        Identifier: ' typeFromFunctionLikeExpression'
        Parameter
          Identifier: 'fnNode'
          UnionType
            TypeReference
              Identifier: ' FunctionExpression'
            TypeReference
              Identifier: ' ArrowFunction'
        Parameter
          Identifier: ' context'
          TypeReference
            Identifier: ' SyntacticTypeNodeBuilderContext'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' returnType'
                BinaryExpression
                  CallExpression
                    Identifier: ' serializeExistingTypeAnnotation'
                    PropertyAccessExpression
                      Identifier: 'fnNode'
                      Identifier: 'type'
                  QuestionQuestionToken
                  CallExpression
                    Identifier: ' createReturnFromSignature'
                    Identifier: 'fnNode'
                    Identifier: ' context'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' typeParameters'
                CallExpression
                  Identifier: ' reuseTypeParameters'
                  PropertyAccessExpression
                    Identifier: 'fnNode'
                    Identifier: 'typeParameters'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' parameters'
                CallExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: ' fnNode'
                      Identifier: 'parameters'
                    Identifier: 'every'
                  ArrowFunction
                    Parameter
                      Identifier: 'p'
                    EqualsGreaterThanToken
                    CallExpression
                      Identifier: ' ensureParameter'
                      Identifier: 'p'
                      Identifier: ' context'
          ReturnStatement
            BinaryExpression
              BinaryExpression
                Identifier: ' returnType'
                AmpersandAmpersandToken
                Identifier: ' typeParameters'
              AmpersandAmpersandToken
              Identifier: ' parameters'
      FunctionDeclaration
        Identifier: ' canGetTypeFromArrayLiteral'
        Parameter
          Identifier: 'arrayLiteral'
          TypeReference
            Identifier: ' ArrayLiteralExpression'
        Parameter
          Identifier: ' context'
          TypeReference
            Identifier: ' SyntacticTypeNodeBuilderContext'
        Parameter
          Identifier: ' isConstContext'
          BooleanKeyword
        Block
          IfStatement
            PrefixUnaryExpression
              Identifier: 'isConstContext'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: '
            context'
                      Identifier: 'tracker'
                    Identifier: 'reportInferenceFallback'
                  Identifier: 'arrayLiteral'
              ReturnStatement
                FalseKeyword
          ForOfStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' element'
            PropertyAccessExpression
              Identifier: ' arrayLiteral'
              Identifier: 'elements'
            Block
              IfStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: 'element'
                    Identifier: 'kind'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'SpreadElement'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: '
                context'
                          Identifier: 'tracker'
                        Identifier: 'reportInferenceFallback'
                      Identifier: 'element'
                  ReturnStatement
                    FalseKeyword
          ReturnStatement
            TrueKeyword
      FunctionDeclaration
        Identifier: ' typeFromArrayLiteral'
        Parameter
          Identifier: 'arrayLiteral'
          TypeReference
            Identifier: ' ArrayLiteralExpression'
        Parameter
          Identifier: ' context'
          TypeReference
            Identifier: ' SyntacticTypeNodeBuilderContext'
        Parameter
          Identifier: ' isConstContext'
          BooleanKeyword
        Block
          IfStatement
            PrefixUnaryExpression
              CallExpression
                Identifier: 'canGetTypeFromArrayLiteral'
                Identifier: 'arrayLiteral'
                Identifier: ' context'
                Identifier: ' isConstContext'
            Block
              ReturnStatement
                FalseKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' canInferArray'
                TrueKeyword
          ForOfStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' element'
            PropertyAccessExpression
              Identifier: ' arrayLiteral'
              Identifier: 'elements'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            Debug'
                    Identifier: 'assert'
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: 'element'
                      Identifier: 'kind'
                    ExclamationEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'SpreadElement'
              IfStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: 'element'
                    Identifier: 'kind'
                  ExclamationEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'OmittedExpression'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                canInferArray'
                      EqualsToken
                      BinaryExpression
                        ParenthesizedExpression
                          BinaryExpression
                            CallExpression
                              Identifier: 'typeFromExpression'
                              Identifier: 'element'
                              Identifier: ' context'
                              Identifier: ' isConstContext'
                            QuestionQuestionToken
                            CallExpression
                              Identifier: ' inferExpressionType'
                              Identifier: 'element'
                              Identifier: ' context'
                        AmpersandAmpersandToken
                        Identifier: ' canInferArray'
          ReturnStatement
            TrueKeyword
      FunctionDeclaration
        Identifier: ' canGetTypeFromObjectLiteral'
        Parameter
          Identifier: 'objectLiteral'
          TypeReference
            Identifier: ' ObjectLiteralExpression'
        Parameter
          Identifier: ' context'
          TypeReference
            Identifier: ' SyntacticTypeNodeBuilderContext'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' result'
                TrueKeyword
          ForOfStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' prop'
            PropertyAccessExpression
              Identifier: ' objectLiteral'
              Identifier: 'properties'
            Block
              IfStatement
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: 'prop'
                    Identifier: 'flags'
                  AmpersandToken
                  PropertyAccessExpression
                    Identifier: ' NodeFlags'
                    Identifier: 'ThisNodeHasError'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                result'
                      EqualsToken
                      FalseKeyword
                  BreakStatement
              IfStatement
                BinaryExpression
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: 'prop'
                      Identifier: 'kind'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'ShorthandPropertyAssignment'
                  BarBarToken
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: ' prop'
                      Identifier: 'kind'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'SpreadAssignment'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: '
                context'
                          Identifier: 'tracker'
                        Identifier: 'reportInferenceFallback'
                      Identifier: 'prop'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                result'
                      EqualsToken
                      FalseKeyword
                IfStatement
                  BinaryExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: 'prop'
                        Identifier: 'name'
                      Identifier: 'flags'
                    AmpersandToken
                    PropertyAccessExpression
                      Identifier: ' NodeFlags'
                      Identifier: 'ThisNodeHasError'
                  Block
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                result'
                        EqualsToken
                        FalseKeyword
                    BreakStatement
                  IfStatement
                    BinaryExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: 'prop'
                          Identifier: 'name'
                        Identifier: 'kind'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'PrivateIdentifier'
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                // Not valid in object literals but the compiler will complain about this, we just ignore it here.
                result'
                          EqualsToken
                          FalseKeyword
                    IfStatement
                      BinaryExpression
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: 'prop'
                            Identifier: 'name'
                          Identifier: 'kind'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'ComputedPropertyName'
                      Block
                        VariableStatement
                          VariableDeclarationList
                            VariableDeclaration
                              Identifier: ' expression'
                              PropertyAccessExpression
                                PropertyAccessExpression
                                  Identifier: ' prop'
                                  Identifier: 'name'
                                Identifier: 'expression'
                        IfStatement
                          BinaryExpression
                            PrefixUnaryExpression
                              CallExpression
                                Identifier: 'isPrimitiveLiteralValue'
                                Identifier: 'expression'
                                FalseKeyword
                            AmpersandAmpersandToken
                            PrefixUnaryExpression
                              CallExpression
                                PropertyAccessExpression
                                  Identifier: 'resolver'
                                  Identifier: 'isDefinitelyReferenceToGlobalSymbolObject'
                                Identifier: 'expression'
                          Block
                            ExpressionStatement
                              CallExpression
                                PropertyAccessExpression
                                  PropertyAccessExpression
                                    Identifier: '
                    context'
                                    Identifier: 'tracker'
                                  Identifier: 'reportInferenceFallback'
                                PropertyAccessExpression
                                  Identifier: 'prop'
                                  Identifier: 'name'
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                    result'
                                EqualsToken
                                FalseKeyword
          ReturnStatement
            Identifier: ' result'
      FunctionDeclaration
        Identifier: ' typeFromObjectLiteral'
        Parameter
          Identifier: 'objectLiteral'
          TypeReference
            Identifier: ' ObjectLiteralExpression'
        Parameter
          Identifier: ' context'
          TypeReference
            Identifier: ' SyntacticTypeNodeBuilderContext'
        Parameter
          Identifier: ' isConstContext'
          BooleanKeyword
        BooleanKeyword
        Block
          IfStatement
            PrefixUnaryExpression
              CallExpression
                Identifier: 'canGetTypeFromObjectLiteral'
                Identifier: 'objectLiteral'
                Identifier: ' context'
            ReturnStatement
              FalseKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' canInferObjectLiteral'
                TrueKeyword
          ForOfStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' prop'
            PropertyAccessExpression
              Identifier: ' objectLiteral'
              Identifier: 'properties'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            Debug'
                    Identifier: 'assert'
                  BinaryExpression
                    PrefixUnaryExpression
                      CallExpression
                        Identifier: 'isShorthandPropertyAssignment'
                        Identifier: 'prop'
                    AmpersandAmpersandToken
                    PrefixUnaryExpression
                      CallExpression
                        Identifier: 'isSpreadAssignment'
                        Identifier: 'prop'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' name'
                    PropertyAccessExpression
                      Identifier: ' prop'
                      Identifier: 'name'
              SwitchStatement
                PropertyAccessExpression
                  Identifier: 'prop'
                  Identifier: 'kind'
                CaseBlock
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'MethodDeclaration'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    canInferObjectLiteral'
                        EqualsToken
                        BinaryExpression
                          PrefixUnaryExpression
                            PrefixUnaryExpression
                              CallExpression
                                Identifier: 'typeFromObjectLiteralMethod'
                                Identifier: 'prop'
                                Identifier: ' name'
                                Identifier: ' context'
                          AmpersandAmpersandToken
                          Identifier: ' canInferObjectLiteral'
                    BreakStatement
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'PropertyAssignment'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    canInferObjectLiteral'
                        EqualsToken
                        BinaryExpression
                          PrefixUnaryExpression
                            PrefixUnaryExpression
                              CallExpression
                                Identifier: 'typeFromObjectLiteralPropertyAssignment'
                                Identifier: 'prop'
                                Identifier: ' name'
                                Identifier: ' context'
                                Identifier: ' isConstContext'
                          AmpersandAmpersandToken
                          Identifier: ' canInferObjectLiteral'
                    BreakStatement
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'SetAccessor'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'GetAccessor'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    canInferObjectLiteral'
                        EqualsToken
                        BinaryExpression
                          PrefixUnaryExpression
                            PrefixUnaryExpression
                              CallExpression
                                Identifier: 'typeFromObjectLiteralAccessor'
                                Identifier: 'prop'
                                Identifier: ' name'
                                Identifier: ' context'
                          AmpersandAmpersandToken
                          Identifier: ' canInferObjectLiteral'
                    BreakStatement
          ReturnStatement
            Identifier: ' canInferObjectLiteral'
      FunctionDeclaration
        Identifier: ' typeFromObjectLiteralPropertyAssignment'
        Parameter
          Identifier: 'prop'
          TypeReference
            Identifier: ' PropertyAssignment'
        Parameter
          Identifier: ' name'
          TypeReference
            Identifier: ' PropertyName'
        Parameter
          Identifier: ' context'
          TypeReference
            Identifier: ' SyntacticTypeNodeBuilderContext'
        Parameter
          Identifier: ' isConstContext'
          BooleanKeyword
        Block
          ReturnStatement
            BinaryExpression
              CallExpression
                Identifier: ' typeFromExpression'
                PropertyAccessExpression
                  Identifier: 'prop'
                  Identifier: 'initializer'
                Identifier: ' context'
                Identifier: ' isConstContext'
              QuestionQuestionToken
              CallExpression
                Identifier: ' inferTypeOfDeclaration'
                Identifier: 'prop'
                Identifier: ' context'
      FunctionDeclaration
        Identifier: ' ensureParameter'
        Parameter
          Identifier: 'p'
          TypeReference
            Identifier: ' ParameterDeclaration'
        Parameter
          Identifier: ' context'
          TypeReference
            Identifier: ' SyntacticTypeNodeBuilderContext'
        Block
          ReturnStatement
            CallExpression
              Identifier: ' typeFromParameter'
              Identifier: 'p'
              Identifier: ' context'
      FunctionDeclaration
        Identifier: ' reuseTypeParameters'
        Parameter
          Identifier: 'typeParameters'
          UnionType
            TypeReference
              Identifier: ' NodeArray'
              TypeReference
                Identifier: 'TypeParameterDeclaration'
            UndefinedKeyword
        Block
          ReturnStatement
            BinaryExpression
              CallExpression
                PropertyAccessExpression
                  Identifier: ' typeParameters'
                  QuestionDotToken
                  Identifier: 'every'
                ArrowFunction
                  Parameter
                    Identifier: 'tp'
                  EqualsGreaterThanToken
                  BinaryExpression
                    CallExpression
                      Identifier: '
            serializeExistingTypeAnnotation'
                      PropertyAccessExpression
                        Identifier: 'tp'
                        Identifier: 'constraint'
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: '
            serializeExistingTypeAnnotation'
                      PropertyAccessExpression
                        Identifier: 'tp'
                        Identifier: 'default'
              QuestionQuestionToken
              TrueKeyword
      FunctionDeclaration
        Identifier: ' typeFromObjectLiteralMethod'
        Parameter
          Identifier: 'method'
          TypeReference
            Identifier: ' MethodDeclaration'
        Parameter
          Identifier: ' name'
          TypeReference
            Identifier: ' PropertyName'
        Parameter
          Identifier: ' context'
          TypeReference
            Identifier: ' SyntacticTypeNodeBuilderContext'
        BooleanKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' returnType'
                CallExpression
                  Identifier: ' createReturnFromSignature'
                  Identifier: 'method'
                  Identifier: ' context'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' typeParameters'
                CallExpression
                  Identifier: ' reuseTypeParameters'
                  PropertyAccessExpression
                    Identifier: 'method'
                    Identifier: 'typeParameters'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' parameters'
                CallExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: ' method'
                      Identifier: 'parameters'
                    Identifier: 'every'
                  ArrowFunction
                    Parameter
                      Identifier: 'p'
                    EqualsGreaterThanToken
                    CallExpression
                      Identifier: ' ensureParameter'
                      Identifier: 'p'
                      Identifier: ' context'
          ReturnStatement
            BinaryExpression
              BinaryExpression
                Identifier: ' returnType'
                AmpersandAmpersandToken
                Identifier: ' typeParameters'
              AmpersandAmpersandToken
              Identifier: ' parameters'
      FunctionDeclaration
        Identifier: ' typeFromObjectLiteralAccessor'
        Parameter
          Identifier: 'accessor'
          UnionType
            TypeReference
              Identifier: ' GetAccessorDeclaration'
            TypeReference
              Identifier: ' SetAccessorDeclaration'
        Parameter
          Identifier: ' name'
          TypeReference
            Identifier: ' PropertyName'
        Parameter
          Identifier: ' context'
          TypeReference
            Identifier: ' SyntacticTypeNodeBuilderContext'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' allAccessors'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' resolver'
                    Identifier: 'getAllAccessorDeclarations'
                  Identifier: 'accessor'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' getAccessorType'
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: ' allAccessors'
                    Identifier: 'getAccessor'
                  AmpersandAmpersandToken
                  CallExpression
                    Identifier: ' getTypeAnnotationFromAccessor'
                    PropertyAccessExpression
                      Identifier: 'allAccessors'
                      Identifier: 'getAccessor'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' setAccessorType'
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: ' allAccessors'
                    Identifier: 'setAccessor'
                  AmpersandAmpersandToken
                  CallExpression
                    Identifier: ' getTypeAnnotationFromAccessor'
                    PropertyAccessExpression
                      Identifier: 'allAccessors'
                      Identifier: 'setAccessor'
          IfStatement
            BinaryExpression
              BinaryExpression
                Identifier: 'getAccessorType'
                ExclamationEqualsEqualsToken
                Identifier: ' undefined'
              AmpersandAmpersandToken
              BinaryExpression
                Identifier: ' setAccessorType'
                ExclamationEqualsEqualsToken
                Identifier: ' undefined'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' parameters'
                    CallExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: ' accessor'
                          Identifier: 'parameters'
                        Identifier: 'every'
                      ArrowFunction
                        Parameter
                          Identifier: 'p'
                        EqualsGreaterThanToken
                        CallExpression
                          Identifier: ' ensureParameter'
                          Identifier: 'p'
                          Identifier: ' context'
              IfStatement
                CallExpression
                  Identifier: 'isGetAccessor'
                  Identifier: 'accessor'
                Block
                  ReturnStatement
                    BinaryExpression
                      Identifier: ' parameters'
                      AmpersandAmpersandToken
                      CallExpression
                        Identifier: ' serializeExistingTypeAnnotation'
                        Identifier: 'getAccessorType'
                Block
                  ReturnStatement
                    Identifier: ' parameters'
            IfStatement
              BinaryExpression
                PropertyAccessExpression
                  Identifier: 'allAccessors'
                  Identifier: 'firstAccessor'
                EqualsEqualsEqualsToken
                Identifier: ' accessor'
              Block
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' foundType'
                      BinaryExpression
                        Identifier: ' getAccessorType'
                        QuestionQuestionToken
                        Identifier: ' setAccessorType'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' propertyType'
                      ConditionalExpression
                        Identifier: ' foundType'
                        QuestionToken
                        CallExpression
                          Identifier: ' serializeExistingTypeAnnotation'
                          Identifier: 'foundType'
                        ColonToken
                        CallExpression
                          Identifier: ' inferAccessorType'
                          Identifier: 'accessor'
                          Identifier: ' allAccessors'
                          Identifier: ' context'
                ReturnStatement
                  Identifier: ' propertyType'
          ReturnStatement
            FalseKeyword
      FunctionDeclaration
        Identifier: ' typeFromPrimitiveLiteral'
        Block
          ReturnStatement
            TrueKeyword
      FunctionDeclaration
        Identifier: ' canAddUndefined'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' TypeNode'
        BooleanKeyword
        Block
          IfStatement
            PrefixUnaryExpression
              Identifier: 'strictNullChecks'
            ReturnStatement
              TrueKeyword
          IfStatement
            BinaryExpression
              BinaryExpression
                BinaryExpression
                  BinaryExpression
                    BinaryExpression
                      BinaryExpression
                        BinaryExpression
                          BinaryExpression
                            CallExpression
                              Identifier: '
            isKeyword'
                              PropertyAccessExpression
                                Identifier: 'node'
                                Identifier: 'kind'
                            BarBarToken
                            BinaryExpression
                              PropertyAccessExpression
                                Identifier: ' node'
                                Identifier: 'kind'
                              EqualsEqualsEqualsToken
                              PropertyAccessExpression
                                Identifier: ' SyntaxKind'
                                Identifier: 'LiteralType'
                          BarBarToken
                          BinaryExpression
                            PropertyAccessExpression
                              Identifier: ' node'
                              Identifier: 'kind'
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' SyntaxKind'
                              Identifier: 'FunctionType'
                        BarBarToken
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: ' node'
                            Identifier: 'kind'
                          EqualsEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' SyntaxKind'
                            Identifier: 'ConstructorType'
                      BarBarToken
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: ' node'
                          Identifier: 'kind'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'ArrayType'
                    BarBarToken
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: ' node'
                        Identifier: 'kind'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'TupleType'
                  BarBarToken
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: ' node'
                      Identifier: 'kind'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'TypeLiteral'
                BarBarToken
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: ' node'
                    Identifier: 'kind'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'TemplateLiteralType'
              BarBarToken
              BinaryExpression
                PropertyAccessExpression
                  Identifier: ' node'
                  Identifier: 'kind'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ThisType'
            Block
              ReturnStatement
                TrueKeyword
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'node'
                Identifier: 'kind'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'ParenthesizedType'
            Block
              ReturnStatement
                CallExpression
                  Identifier: ' canAddUndefined'
                  PropertyAccessExpression
                    ParenthesizedExpression
                      AsExpression
                        Identifier: 'node'
                        TypeReference
                          Identifier: ' ParenthesizedTypeNode'
                    Identifier: 'type'
          IfStatement
            BinaryExpression
              BinaryExpression
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'kind'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'UnionType'
              BarBarToken
              BinaryExpression
                PropertyAccessExpression
                  Identifier: ' node'
                  Identifier: 'kind'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'IntersectionType'
            Block
              ReturnStatement
                CallExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      ParenthesizedExpression
                        AsExpression
                          Identifier: 'node'
                          UnionType
                            TypeReference
                              Identifier: ' UnionTypeNode'
                            TypeReference
                              Identifier: ' IntersectionTypeNode'
                      Identifier: 'types'
                    Identifier: 'every'
                  Identifier: 'canAddUndefined'
          ReturnStatement
            FalseKeyword
      FunctionDeclaration
        Identifier: ' createReturnFromSignature'
        Parameter
          Identifier: 'fn'
          UnionType
            TypeReference
              Identifier: ' SignatureDeclaration'
            TypeReference
              Identifier: ' JSDocSignature'
        Parameter
          Identifier: ' context'
          TypeReference
            Identifier: ' SyntacticTypeNodeBuilderContext'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' returnType'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' returnTypeNode'
                CallExpression
                  Identifier: ' getEffectiveReturnTypeNode'
                  Identifier: 'fn'
          IfStatement
            Identifier: 'returnTypeNode'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            returnType'
                  EqualsToken
                  CallExpression
                    Identifier: ' serializeExistingTypeAnnotation'
                    Identifier: 'returnTypeNode'
          IfStatement
            BinaryExpression
              PrefixUnaryExpression
                Identifier: 'returnType'
              AmpersandAmpersandToken
              CallExpression
                Identifier: ' isValueSignatureDeclaration'
                Identifier: 'fn'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            returnType'
                  EqualsToken
                  CallExpression
                    Identifier: ' typeFromSingleReturnExpression'
                    Identifier: 'fn'
                    Identifier: ' context'
          ReturnStatement
            BinaryExpression
              Identifier: ' returnType'
              QuestionQuestionToken
              CallExpression
                Identifier: ' inferReturnTypeOfSignatureSignature'
                Identifier: 'fn'
                Identifier: ' context'
      FunctionDeclaration
        Identifier: ' typeFromSingleReturnExpression'
        Parameter
          Identifier: 'declaration'
          UnionType
            TypeReference
              Identifier: ' FunctionLikeDeclaration'
            UndefinedKeyword
        Parameter
          Identifier: ' context'
          TypeReference
            Identifier: ' SyntacticTypeNodeBuilderContext'
        UnionType
          BooleanKeyword
          UndefinedKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' candidateExpr'
                UnionType
                  TypeReference
                    Identifier: ' Expression'
                  UndefinedKeyword
          IfStatement
            BinaryExpression
              Identifier: 'declaration'
              AmpersandAmpersandToken
              PrefixUnaryExpression
                CallExpression
                  Identifier: 'nodeIsMissing'
                  PropertyAccessExpression
                    Identifier: 'declaration'
                    Identifier: 'body'
            Block
              IfStatement
                BinaryExpression
                  CallExpression
                    Identifier: 'getFunctionFlags'
                    Identifier: 'declaration'
                  AmpersandToken
                  PropertyAccessExpression
                    Identifier: ' FunctionFlags'
                    Identifier: 'AsyncGenerator'
                ReturnStatement
                  Identifier: ' undefined'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' body'
                    PropertyAccessExpression
                      Identifier: ' declaration'
                      Identifier: 'body'
              IfStatement
                BinaryExpression
                  Identifier: 'body'
                  AmpersandAmpersandToken
                  CallExpression
                    Identifier: ' isBlock'
                    Identifier: 'body'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                forEachReturnStatement'
                      Identifier: 'body'
                      ArrowFunction
                        Parameter
                          Identifier: ' s'
                        EqualsGreaterThanToken
                        Block
                          IfStatement
                            PrefixUnaryExpression
                              Identifier: 'candidateExpr'
                            Block
                              ExpressionStatement
                                BinaryExpression
                                  Identifier: '
                        candidateExpr'
                                  EqualsToken
                                  PropertyAccessExpression
                                    Identifier: ' s'
                                    Identifier: 'expression'
                            Block
                              ExpressionStatement
                                BinaryExpression
                                  Identifier: '
                        candidateExpr'
                                  EqualsToken
                                  Identifier: ' undefined'
                              ReturnStatement
                                TrueKeyword
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                candidateExpr'
                      EqualsToken
                      Identifier: ' body'
          IfStatement
            Identifier: 'candidateExpr'
            Block
              ReturnStatement
                CallExpression
                  Identifier: ' typeFromExpression'
                  Identifier: 'candidateExpr'
                  Identifier: ' context'
          ReturnStatement
            Identifier: ' undefined'
