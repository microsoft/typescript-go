SourceFile
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' ObjectDefinition'
    ImportType
      LiteralType
        StringLiteral
      Identifier: 'ObjectDefinition'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' PropertyDefinition'
    ImportType
      LiteralType
        StringLiteral
      Identifier: 'PropertyDefinition'
  ClassDeclaration
    ExportKeyword
    Identifier: ' MergeStrategy'
    MethodDeclaration
      StaticKeyword
      Identifier: ' overwrite'
      Parameter
        Identifier: 'value1'
        AnyKeyword
      Parameter
        Identifier: ' value2'
        AnyKeyword
      AnyKeyword
    MethodDeclaration
      StaticKeyword
      Identifier: ' replace'
      Parameter
        Identifier: 'value1'
        AnyKeyword
      Parameter
        Identifier: ' value2'
        AnyKeyword
      AnyKeyword
    MethodDeclaration
      StaticKeyword
      Identifier: ' assign'
      Parameter
        Identifier: 'value1'
        AnyKeyword
      Parameter
        Identifier: ' value2'
        AnyKeyword
      AnyKeyword
  ClassDeclaration
    ExportKeyword
    Identifier: ' ObjectSchema'
    Constructor
      Parameter
        Identifier: 'definitions'
        TypeReference
          Identifier: ' ObjectDefinition'
    MethodDeclaration
      Identifier: '
    /**
     * Determines if a strategy has been registered for the given object key.
     * @param {string} key The object key to find a strategy for.
     * @returns {boolean} True if the key has a strategy registered, false if not.
     */
    hasKey'
      Parameter
        Identifier: 'key'
        StringKeyword
      BooleanKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Merges objects together to create a new object comprised of the keys
     * of the all objects. Keys are merged based on the each key's merge
     * strategy.
     * @param {...Object} objects The objects to merge.
     * @returns {Object} A new object with a mix of all objects' keys.
     * @throws {Error} If any object is invalid.
     */
    merge'
      Parameter
        DotDotDotToken
        Identifier: 'objects'
        ArrayType
          AnyKeyword
      AnyKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Validates an object's keys based on the validate strategy for each key.
     * @param {Object} object The object to validate.
     * @returns {void}
     * @throws {Error} When the object is invalid.
     */
    validate'
      Parameter
        Identifier: 'object'
        AnyKeyword
      VoidKeyword
    PropertyDeclaration
      PrivateIdentifier
  ClassDeclaration
    ExportKeyword
    Identifier: ' ValidationStrategy'
    MethodDeclaration
      StaticKeyword
      Identifier: ' array'
      Parameter
        Identifier: 'value'
        AnyKeyword
      VoidKeyword
    MethodDeclaration
      StaticKeyword
      Identifier: ' boolean'
      Parameter
        Identifier: 'value'
        AnyKeyword
      VoidKeyword
    MethodDeclaration
      StaticKeyword
      Identifier: ' number'
      Parameter
        Identifier: 'value'
        AnyKeyword
      VoidKeyword
    MethodDeclaration
      StaticKeyword
      Identifier: ' object'
      Parameter
        Identifier: 'value'
        AnyKeyword
      VoidKeyword
    MethodDeclaration
      StaticKeyword
      StringLiteral
      Parameter
        Identifier: 'value'
        AnyKeyword
      VoidKeyword
    MethodDeclaration
      StaticKeyword
      Identifier: ' string'
      Parameter
        Identifier: 'value'
        AnyKeyword
      VoidKeyword
    MethodDeclaration
      StaticKeyword
      StringLiteral
      Parameter
        Identifier: 'value'
        AnyKeyword
      VoidKeyword
