SourceFile
  ImportDeclaration
    ImportClause
      NamespaceImport
        Identifier: ' TSESLint'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' TSESTree'
    StringLiteral
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' ReferenceTrackerREAD'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' ReferenceTrackerCALL'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' ReferenceTrackerCONSTRUCT'
        TypeOperator
          SymbolKeyword
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' ReferenceTrackerESM'
        TypeOperator
          SymbolKeyword
  InterfaceDeclaration
    Identifier: ' ReferenceTracker'
    MethodSignature
      Identifier: '
    /**
     * Iterate the references that the given `traceMap` determined.
     * This method starts to search from `require()` expression.
     *
     * @see {@link https://eslint-community.github.io/eslint-utils/api/scope-utils.html#tracker-iteratecjsreferences}
     */
    iterateCjsReferences'
      TypeParameter
        Identifier: 'T'
      Parameter
        Identifier: 'traceMap'
        TypeReference
          QualifiedName
            Identifier: ' ReferenceTracker'
            Identifier: 'TraceMap'
          TypeReference
            Identifier: 'T'
      TypeReference
        Identifier: ' IterableIterator'
        TypeReference
          QualifiedName
            Identifier: 'ReferenceTracker'
            Identifier: 'FoundReference'
          TypeReference
            Identifier: 'T'
    MethodSignature
      Identifier: '
    /**
     * Iterate the references that the given `traceMap` determined.
     * This method starts to search from `import`/`export` declarations.
     *
     * @see {@link https://eslint-community.github.io/eslint-utils/api/scope-utils.html#tracker-iterateesmreferences}
     */
    iterateEsmReferences'
      TypeParameter
        Identifier: 'T'
      Parameter
        Identifier: 'traceMap'
        TypeReference
          QualifiedName
            Identifier: ' ReferenceTracker'
            Identifier: 'TraceMap'
          TypeReference
            Identifier: 'T'
      TypeReference
        Identifier: ' IterableIterator'
        TypeReference
          QualifiedName
            Identifier: 'ReferenceTracker'
            Identifier: 'FoundReference'
          TypeReference
            Identifier: 'T'
    MethodSignature
      Identifier: '
    /**
     * Iterate the references that the given `traceMap` determined.
     * This method starts to search from global variables.
     *
     * @see {@link https://eslint-community.github.io/eslint-utils/api/scope-utils.html#tracker-iterateglobalreferences}
     */
    iterateGlobalReferences'
      TypeParameter
        Identifier: 'T'
      Parameter
        Identifier: 'traceMap'
        TypeReference
          QualifiedName
            Identifier: ' ReferenceTracker'
            Identifier: 'TraceMap'
          TypeReference
            Identifier: 'T'
      TypeReference
        Identifier: ' IterableIterator'
        TypeReference
          QualifiedName
            Identifier: 'ReferenceTracker'
            Identifier: 'FoundReference'
          TypeReference
            Identifier: 'T'
  InterfaceDeclaration
    Identifier: ' ReferenceTrackerStatic'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' CALL'
      TypeQuery
        Identifier: ' ReferenceTrackerCALL'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' CONSTRUCT'
      TypeQuery
        Identifier: ' ReferenceTrackerCONSTRUCT'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' ESM'
      TypeQuery
        Identifier: ' ReferenceTrackerESM'
    ConstructSignature
      Parameter
        Identifier: 'globalScope'
        TypeReference
          QualifiedName
            QualifiedName
              Identifier: ' TSESLint'
              Identifier: 'Scope'
            Identifier: 'Scope'
      Parameter
        Identifier: ' options'
        QuestionToken
        TypeLiteral
          PropertySignature
            Identifier: '
        /**
         * The name list of Global Object. Optional. Default is `["global", "globalThis", "self", "window"]`.
         */
        globalObjectNames'
            QuestionToken
            TypeOperator
              ArrayType
                StringKeyword
          PropertySignature
            Identifier: '
        /**
         * The mode which determines how the `tracker.iterateEsmReferences()` method scans CommonJS modules.
         * If this is `"strict"`, the method binds CommonJS modules to the default export. Otherwise, the method binds
         * CommonJS modules to both the default export and named exports. Optional. Default is `"strict"`.
         */
        mode'
            QuestionToken
            UnionType
              LiteralType
                StringLiteral
              LiteralType
                StringLiteral
      TypeReference
        Identifier: ' ReferenceTracker'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' READ'
      TypeQuery
        Identifier: ' ReferenceTrackerREAD'
  ModuleDeclaration
    DeclareKeyword
    Identifier: ' ReferenceTracker'
    ModuleBlock
      TypeAliasDeclaration
        Identifier: ' READ'
        IndexedAccessType
          TypeReference
            Identifier: ' ReferenceTrackerStatic'
          LiteralType
            StringLiteral
      TypeAliasDeclaration
        Identifier: ' CALL'
        IndexedAccessType
          TypeReference
            Identifier: ' ReferenceTrackerStatic'
          LiteralType
            StringLiteral
      TypeAliasDeclaration
        Identifier: ' CONSTRUCT'
        IndexedAccessType
          TypeReference
            Identifier: ' ReferenceTrackerStatic'
          LiteralType
            StringLiteral
      TypeAliasDeclaration
        Identifier: ' ESM'
        IndexedAccessType
          TypeReference
            Identifier: ' ReferenceTrackerStatic'
          LiteralType
            StringLiteral
      TypeAliasDeclaration
        Identifier: ' ReferenceType'
        UnionType
          TypeReference
            Identifier: ' CALL'
          TypeReference
            Identifier: ' CONSTRUCT'
          TypeReference
            Identifier: ' READ'
      TypeAliasDeclaration
        Identifier: ' TraceMap'
        TypeParameter
          Identifier: 'T'
          AnyKeyword
        TypeReference
          Identifier: ' Record'
          StringKeyword
          TypeReference
            Identifier: ' TraceMapElement'
            TypeReference
              Identifier: 'T'
      InterfaceDeclaration
        Identifier: ' TraceMapElement'
        TypeParameter
          Identifier: 'T'
        IndexSignature
          Parameter
            Identifier: 'key'
            StringKeyword
          TypeReference
            Identifier: ' TraceMapElement'
            TypeReference
              Identifier: 'T'
        PropertySignature
          ComputedPropertyName
            Identifier: 'ReferenceTrackerCALL'
          QuestionToken
          TypeReference
            Identifier: ' T'
        PropertySignature
          ComputedPropertyName
            Identifier: 'ReferenceTrackerCONSTRUCT'
          QuestionToken
          TypeReference
            Identifier: ' T'
        PropertySignature
          ComputedPropertyName
            Identifier: 'ReferenceTrackerESM'
          QuestionToken
          LiteralType
            TrueKeyword
        PropertySignature
          ComputedPropertyName
            Identifier: 'ReferenceTrackerREAD'
          QuestionToken
          TypeReference
            Identifier: ' T'
      InterfaceDeclaration
        Identifier: ' FoundReference'
        TypeParameter
          Identifier: 'T'
          AnyKeyword
        PropertySignature
          Identifier: '
        info'
          TypeReference
            Identifier: ' T'
        PropertySignature
          Identifier: '
        node'
          TypeReference
            QualifiedName
              Identifier: ' TSESTree'
              Identifier: 'Node'
        PropertySignature
          Identifier: '
        path'
          TypeOperator
            ArrayType
              StringKeyword
        PropertySignature
          Identifier: '
        type'
          TypeReference
            Identifier: ' ReferenceType'
  VariableStatement
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' ReferenceTracker'
        TypeReference
          Identifier: ' ReferenceTrackerStatic'
  ExportDeclaration
    NamedExports
      ExportSpecifier
        Identifier: ' ReferenceTracker'
