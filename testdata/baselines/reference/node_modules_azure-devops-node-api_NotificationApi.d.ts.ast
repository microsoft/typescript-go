SourceFile
  ImportEqualsDeclaration
    Identifier: ' basem'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' VsoBaseInterfaces'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' NotificationInterfaces'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' VSSInterfaces'
    ExternalModuleReference
      StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' INotificationApi'
    HeritageClause
      ExpressionWithTypeArguments
        PropertyAccessExpression
          Identifier: ' basem'
          Identifier: 'ClientApiBase'
    MethodSignature
      Identifier: '
    performBatchNotificationOperations'
      Parameter
        Identifier: 'operation'
        TypeReference
          QualifiedName
            Identifier: ' NotificationInterfaces'
            Identifier: 'BatchNotificationOperation'
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    listLogs'
      Parameter
        Identifier: 'source'
        StringKeyword
      Parameter
        Identifier: ' entryId'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' startTime'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' endTime'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'NotificationInterfaces'
              Identifier: 'INotificationDiagnosticLog'
    MethodSignature
      Identifier: '
    getSubscriptionDiagnostics'
      Parameter
        Identifier: 'subscriptionId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NotificationInterfaces'
            Identifier: 'SubscriptionDiagnostics'
    MethodSignature
      Identifier: '
    updateSubscriptionDiagnostics'
      Parameter
        Identifier: 'updateParameters'
        TypeReference
          QualifiedName
            Identifier: ' NotificationInterfaces'
            Identifier: 'UpdateSubscripitonDiagnosticsParameters'
      Parameter
        Identifier: ' subscriptionId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NotificationInterfaces'
            Identifier: 'SubscriptionDiagnostics'
    MethodSignature
      Identifier: '
    publishEvent'
      Parameter
        Identifier: 'notificationEvent'
        TypeReference
          QualifiedName
            Identifier: ' VSSInterfaces'
            Identifier: 'VssNotificationEvent'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'VssNotificationEvent'
    MethodSignature
      Identifier: '
    transformEvent'
      Parameter
        Identifier: 'transformRequest'
        TypeReference
          QualifiedName
            Identifier: ' NotificationInterfaces'
            Identifier: 'EventTransformRequest'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NotificationInterfaces'
            Identifier: 'EventTransformResult'
    MethodSignature
      Identifier: '
    queryEventTypes'
      Parameter
        Identifier: 'inputValuesQuery'
        TypeReference
          QualifiedName
            Identifier: ' NotificationInterfaces'
            Identifier: 'FieldValuesQuery'
      Parameter
        Identifier: ' eventType'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'NotificationInterfaces'
              Identifier: 'NotificationEventField'
    MethodSignature
      Identifier: '
    getEventType'
      Parameter
        Identifier: 'eventType'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NotificationInterfaces'
            Identifier: 'NotificationEventType'
    MethodSignature
      Identifier: '
    listEventTypes'
      Parameter
        Identifier: 'publisherId'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'NotificationInterfaces'
              Identifier: 'NotificationEventType'
    MethodSignature
      Identifier: '
    getNotificationReasons'
      Parameter
        Identifier: 'notificationId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NotificationInterfaces'
            Identifier: 'NotificationReason'
    MethodSignature
      Identifier: '
    listNotificationReasons'
      Parameter
        Identifier: 'notificationIds'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'NotificationInterfaces'
              Identifier: 'NotificationReason'
    MethodSignature
      Identifier: '
    getSettings'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NotificationInterfaces'
            Identifier: 'NotificationAdminSettings'
    MethodSignature
      Identifier: '
    updateSettings'
      Parameter
        Identifier: 'updateParameters'
        TypeReference
          QualifiedName
            Identifier: ' NotificationInterfaces'
            Identifier: 'NotificationAdminSettingsUpdateParameters'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NotificationInterfaces'
            Identifier: 'NotificationAdminSettings'
    MethodSignature
      Identifier: '
    getSubscriber'
      Parameter
        Identifier: 'subscriberId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NotificationInterfaces'
            Identifier: 'NotificationSubscriber'
    MethodSignature
      Identifier: '
    updateSubscriber'
      Parameter
        Identifier: 'updateParameters'
        TypeReference
          QualifiedName
            Identifier: ' NotificationInterfaces'
            Identifier: 'NotificationSubscriberUpdateParameters'
      Parameter
        Identifier: ' subscriberId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NotificationInterfaces'
            Identifier: 'NotificationSubscriber'
    MethodSignature
      Identifier: '
    querySubscriptions'
      Parameter
        Identifier: 'subscriptionQuery'
        TypeReference
          QualifiedName
            Identifier: ' NotificationInterfaces'
            Identifier: 'SubscriptionQuery'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'NotificationInterfaces'
              Identifier: 'NotificationSubscription'
    MethodSignature
      Identifier: '
    createSubscription'
      Parameter
        Identifier: 'createParameters'
        TypeReference
          QualifiedName
            Identifier: ' NotificationInterfaces'
            Identifier: 'NotificationSubscriptionCreateParameters'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NotificationInterfaces'
            Identifier: 'NotificationSubscription'
    MethodSignature
      Identifier: '
    deleteSubscription'
      Parameter
        Identifier: 'subscriptionId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getSubscription'
      Parameter
        Identifier: 'subscriptionId'
        StringKeyword
      Parameter
        Identifier: ' queryFlags'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' NotificationInterfaces'
            Identifier: 'SubscriptionQueryFlags'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NotificationInterfaces'
            Identifier: 'NotificationSubscription'
    MethodSignature
      Identifier: '
    listSubscriptions'
      Parameter
        Identifier: 'targetId'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' ids'
        QuestionToken
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' queryFlags'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' NotificationInterfaces'
            Identifier: 'SubscriptionQueryFlags'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'NotificationInterfaces'
              Identifier: 'NotificationSubscription'
    MethodSignature
      Identifier: '
    updateSubscription'
      Parameter
        Identifier: 'updateParameters'
        TypeReference
          QualifiedName
            Identifier: ' NotificationInterfaces'
            Identifier: 'NotificationSubscriptionUpdateParameters'
      Parameter
        Identifier: ' subscriptionId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NotificationInterfaces'
            Identifier: 'NotificationSubscription'
    MethodSignature
      Identifier: '
    getSubscriptionTemplates'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'NotificationInterfaces'
              Identifier: 'NotificationSubscriptionTemplate'
    MethodSignature
      Identifier: '
    publishTokenEvent'
      Parameter
        Identifier: 'notificationEvent'
        TypeReference
          QualifiedName
            Identifier: ' VSSInterfaces'
            Identifier: 'VssNotificationEvent'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'VssNotificationEvent'
    MethodSignature
      Identifier: '
    updateSubscriptionUserSettings'
      Parameter
        Identifier: 'userSettings'
        TypeReference
          QualifiedName
            Identifier: ' NotificationInterfaces'
            Identifier: 'SubscriptionUserSettings'
      Parameter
        Identifier: ' subscriptionId'
        StringKeyword
      Parameter
        Identifier: ' userId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NotificationInterfaces'
            Identifier: 'SubscriptionUserSettings'
  ClassDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' NotificationApi'
    HeritageClause
      ExpressionWithTypeArguments
        PropertyAccessExpression
          Identifier: ' basem'
          Identifier: 'ClientApiBase'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' INotificationApi'
    Constructor
      Parameter
        Identifier: 'baseUrl'
        StringKeyword
      Parameter
        Identifier: ' handlers'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' VsoBaseInterfaces'
              Identifier: 'IRequestHandler'
      Parameter
        Identifier: ' options'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' VsoBaseInterfaces'
            Identifier: 'IRequestOptions'
    MethodDeclaration
      Identifier: '
    /**
     * @param {NotificationInterfaces.BatchNotificationOperation} operation
     */
    performBatchNotificationOperations'
      Parameter
        Identifier: 'operation'
        TypeReference
          QualifiedName
            Identifier: ' NotificationInterfaces'
            Identifier: 'BatchNotificationOperation'
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Get a list of diagnostic logs for this service.
     *
     * @param {string} source - ID specifying which type of logs to check diagnostics for.
     * @param {string} entryId - The ID of the specific log to query for.
     * @param {Date} startTime - Start time for the time range to query in.
     * @param {Date} endTime - End time for the time range to query in.
     */
    listLogs'
      Parameter
        Identifier: 'source'
        StringKeyword
      Parameter
        Identifier: ' entryId'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' startTime'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      Parameter
        Identifier: ' endTime'
        QuestionToken
        TypeReference
          Identifier: ' Date'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'NotificationInterfaces'
              Identifier: 'INotificationDiagnosticLog'
    MethodDeclaration
      Identifier: '
    /**
     * Get the diagnostics settings for a subscription.
     *
     * @param {string} subscriptionId - The id of the notifications subscription.
     */
    getSubscriptionDiagnostics'
      Parameter
        Identifier: 'subscriptionId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NotificationInterfaces'
            Identifier: 'SubscriptionDiagnostics'
    MethodDeclaration
      Identifier: '
    /**
     * Update the diagnostics settings for a subscription.
     *
     * @param {NotificationInterfaces.UpdateSubscripitonDiagnosticsParameters} updateParameters
     * @param {string} subscriptionId - The id of the notifications subscription.
     */
    updateSubscriptionDiagnostics'
      Parameter
        Identifier: 'updateParameters'
        TypeReference
          QualifiedName
            Identifier: ' NotificationInterfaces'
            Identifier: 'UpdateSubscripitonDiagnosticsParameters'
      Parameter
        Identifier: ' subscriptionId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NotificationInterfaces'
            Identifier: 'SubscriptionDiagnostics'
    MethodDeclaration
      Identifier: '
    /**
     * Publish an event. This request must be directed to the service "extmgmt".
     *
     * @param {VSSInterfaces.VssNotificationEvent} notificationEvent
     */
    publishEvent'
      Parameter
        Identifier: 'notificationEvent'
        TypeReference
          QualifiedName
            Identifier: ' VSSInterfaces'
            Identifier: 'VssNotificationEvent'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'VssNotificationEvent'
    MethodDeclaration
      Identifier: '
    /**
     * Tranform a notification event.
     *
     * @param {NotificationInterfaces.EventTransformRequest} transformRequest - Object to be transformed.
     */
    transformEvent'
      Parameter
        Identifier: 'transformRequest'
        TypeReference
          QualifiedName
            Identifier: ' NotificationInterfaces'
            Identifier: 'EventTransformRequest'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NotificationInterfaces'
            Identifier: 'EventTransformResult'
    MethodDeclaration
      Identifier: '
    /**
     * @param {NotificationInterfaces.FieldValuesQuery} inputValuesQuery
     * @param {string} eventType
     */
    queryEventTypes'
      Parameter
        Identifier: 'inputValuesQuery'
        TypeReference
          QualifiedName
            Identifier: ' NotificationInterfaces'
            Identifier: 'FieldValuesQuery'
      Parameter
        Identifier: ' eventType'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'NotificationInterfaces'
              Identifier: 'NotificationEventField'
    MethodDeclaration
      Identifier: '
    /**
     * Get a specific event type.
     *
     * @param {string} eventType - The ID of the event type.
     */
    getEventType'
      Parameter
        Identifier: 'eventType'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NotificationInterfaces'
            Identifier: 'NotificationEventType'
    MethodDeclaration
      Identifier: '
    /**
     * List available event types for this service. Optionally filter by only event types for the specified publisher.
     *
     * @param {string} publisherId - Limit to event types for this publisher
     */
    listEventTypes'
      Parameter
        Identifier: 'publisherId'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'NotificationInterfaces'
              Identifier: 'NotificationEventType'
    MethodDeclaration
      Identifier: '
    /**
     * @param {number} notificationId
     */
    getNotificationReasons'
      Parameter
        Identifier: 'notificationId'
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NotificationInterfaces'
            Identifier: 'NotificationReason'
    MethodDeclaration
      Identifier: '
    /**
     * @param {number} notificationIds
     */
    listNotificationReasons'
      Parameter
        Identifier: 'notificationIds'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'NotificationInterfaces'
              Identifier: 'NotificationReason'
    MethodDeclaration
      Identifier: '
    /**
     */
    getSettings'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NotificationInterfaces'
            Identifier: 'NotificationAdminSettings'
    MethodDeclaration
      Identifier: '
    /**
     * @param {NotificationInterfaces.NotificationAdminSettingsUpdateParameters} updateParameters
     */
    updateSettings'
      Parameter
        Identifier: 'updateParameters'
        TypeReference
          QualifiedName
            Identifier: ' NotificationInterfaces'
            Identifier: 'NotificationAdminSettingsUpdateParameters'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NotificationInterfaces'
            Identifier: 'NotificationAdminSettings'
    MethodDeclaration
      Identifier: '
    /**
     * Get delivery preferences of a notifications subscriber.
     *
     * @param {string} subscriberId - ID of the user or group.
     */
    getSubscriber'
      Parameter
        Identifier: 'subscriberId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NotificationInterfaces'
            Identifier: 'NotificationSubscriber'
    MethodDeclaration
      Identifier: '
    /**
     * Update delivery preferences of a notifications subscriber.
     *
     * @param {NotificationInterfaces.NotificationSubscriberUpdateParameters} updateParameters
     * @param {string} subscriberId - ID of the user or group.
     */
    updateSubscriber'
      Parameter
        Identifier: 'updateParameters'
        TypeReference
          QualifiedName
            Identifier: ' NotificationInterfaces'
            Identifier: 'NotificationSubscriberUpdateParameters'
      Parameter
        Identifier: ' subscriberId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NotificationInterfaces'
            Identifier: 'NotificationSubscriber'
    MethodDeclaration
      Identifier: '
    /**
     * Query for subscriptions. A subscription is returned if it matches one or more of the specified conditions.
     *
     * @param {NotificationInterfaces.SubscriptionQuery} subscriptionQuery
     */
    querySubscriptions'
      Parameter
        Identifier: 'subscriptionQuery'
        TypeReference
          QualifiedName
            Identifier: ' NotificationInterfaces'
            Identifier: 'SubscriptionQuery'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'NotificationInterfaces'
              Identifier: 'NotificationSubscription'
    MethodDeclaration
      Identifier: '
    /**
     * Create a new subscription.
     *
     * @param {NotificationInterfaces.NotificationSubscriptionCreateParameters} createParameters
     */
    createSubscription'
      Parameter
        Identifier: 'createParameters'
        TypeReference
          QualifiedName
            Identifier: ' NotificationInterfaces'
            Identifier: 'NotificationSubscriptionCreateParameters'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NotificationInterfaces'
            Identifier: 'NotificationSubscription'
    MethodDeclaration
      Identifier: '
    /**
     * Delete a subscription.
     *
     * @param {string} subscriptionId
     */
    deleteSubscription'
      Parameter
        Identifier: 'subscriptionId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Get a notification subscription by its ID.
     *
     * @param {string} subscriptionId
     * @param {NotificationInterfaces.SubscriptionQueryFlags} queryFlags
     */
    getSubscription'
      Parameter
        Identifier: 'subscriptionId'
        StringKeyword
      Parameter
        Identifier: ' queryFlags'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' NotificationInterfaces'
            Identifier: 'SubscriptionQueryFlags'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NotificationInterfaces'
            Identifier: 'NotificationSubscription'
    MethodDeclaration
      Identifier: '
    /**
     * Get a list of notification subscriptions, either by subscription IDs or by all subscriptions for a given user or group.
     *
     * @param {string} targetId - User or Group ID
     * @param {string[]} ids - List of subscription IDs
     * @param {NotificationInterfaces.SubscriptionQueryFlags} queryFlags
     */
    listSubscriptions'
      Parameter
        Identifier: 'targetId'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' ids'
        QuestionToken
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' queryFlags'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' NotificationInterfaces'
            Identifier: 'SubscriptionQueryFlags'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'NotificationInterfaces'
              Identifier: 'NotificationSubscription'
    MethodDeclaration
      Identifier: '
    /**
     * Update an existing subscription. Depending on the type of subscription and permissions, the caller can update the description, filter settings, channel (delivery) settings and more.
     *
     * @param {NotificationInterfaces.NotificationSubscriptionUpdateParameters} updateParameters
     * @param {string} subscriptionId
     */
    updateSubscription'
      Parameter
        Identifier: 'updateParameters'
        TypeReference
          QualifiedName
            Identifier: ' NotificationInterfaces'
            Identifier: 'NotificationSubscriptionUpdateParameters'
      Parameter
        Identifier: ' subscriptionId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NotificationInterfaces'
            Identifier: 'NotificationSubscription'
    MethodDeclaration
      Identifier: '
    /**
     * Get available subscription templates.
     *
     */
    getSubscriptionTemplates'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'NotificationInterfaces'
              Identifier: 'NotificationSubscriptionTemplate'
    MethodDeclaration
      Identifier: '
    /**
     * Publish an event. This request is only for the Token service since it's a deploy only service.
     *
     * @param {VSSInterfaces.VssNotificationEvent} notificationEvent
     */
    publishTokenEvent'
      Parameter
        Identifier: 'notificationEvent'
        TypeReference
          QualifiedName
            Identifier: ' VSSInterfaces'
            Identifier: 'VssNotificationEvent'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'VssNotificationEvent'
    MethodDeclaration
      Identifier: '
    /**
     * Update the specified user's settings for the specified subscription. This API is typically used to opt in or out of a shared subscription. User settings can only be applied to shared subscriptions, like team subscriptions or default subscriptions.
     *
     * @param {NotificationInterfaces.SubscriptionUserSettings} userSettings
     * @param {string} subscriptionId
     * @param {string} userId - ID of the user
     */
    updateSubscriptionUserSettings'
      Parameter
        Identifier: 'userSettings'
        TypeReference
          QualifiedName
            Identifier: ' NotificationInterfaces'
            Identifier: 'SubscriptionUserSettings'
      Parameter
        Identifier: ' subscriptionId'
        StringKeyword
      Parameter
        Identifier: ' userId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'NotificationInterfaces'
            Identifier: 'SubscriptionUserSettings'
