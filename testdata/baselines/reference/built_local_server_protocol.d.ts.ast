SourceFile
  ImportDeclaration
    ImportClause
      NamespaceImport
        Identifier: ' ts'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' ApplicableRefactorInfo'
        ImportSpecifier
          Identifier: ' CompilerOptionsValue'
        ImportSpecifier
          Identifier: ' CompletionsTriggerCharacter'
        ImportSpecifier
          Identifier: ' EndOfLineState'
        ImportSpecifier
          Identifier: ' FileExtensionInfo'
        ImportSpecifier
          Identifier: ' HighlightSpanKind'
        ImportSpecifier
          Identifier: ' InlayHintKind'
        ImportSpecifier
          Identifier: ' InteractiveRefactorArguments'
        ImportSpecifier
          Identifier: ' OutputFile'
        ImportSpecifier
          Identifier: ' RefactorActionInfo'
        ImportSpecifier
          Identifier: ' RefactorTriggerReason'
        ImportSpecifier
          Identifier: ' RenameInfoFailure'
        ImportSpecifier
          Identifier: ' RenameLocation'
        ImportSpecifier
          Identifier: ' ScriptElementKind'
        ImportSpecifier
          Identifier: ' ScriptKind'
        ImportSpecifier
          Identifier: ' SignatureHelpCharacterTypedReason'
        ImportSpecifier
          Identifier: ' SignatureHelpInvokedReason'
        ImportSpecifier
          Identifier: ' SignatureHelpParameter'
        ImportSpecifier
          Identifier: ' SignatureHelpRetriggerCharacter'
        ImportSpecifier
          Identifier: ' SignatureHelpRetriggeredReason'
        ImportSpecifier
          Identifier: ' SignatureHelpTriggerCharacter'
        ImportSpecifier
          Identifier: ' SignatureHelpTriggerReason'
        ImportSpecifier
          Identifier: ' SymbolDisplayPart'
        ImportSpecifier
          Identifier: ' TextChange'
        ImportSpecifier
          Identifier: ' TextInsertion'
        ImportSpecifier
          Identifier: ' TodoComment'
        ImportSpecifier
          Identifier: ' TodoCommentDescriptor'
        ImportSpecifier
          Identifier: ' TypeAcquisition'
        ImportSpecifier
          Identifier: ' UserPreferences'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' ClassificationType'
        ImportSpecifier
          Identifier: ' CompletionTriggerKind'
        ImportSpecifier
          Identifier: ' OrganizeImportsMode'
        ImportSpecifier
          Identifier: ' SemicolonPreference'
    StringLiteral
  ExportDeclaration
    NamedExports
      ExportSpecifier
        Identifier: ' ApplicableRefactorInfo'
      ExportSpecifier
        Identifier: ' ClassificationType'
      ExportSpecifier
        Identifier: ' CompletionsTriggerCharacter'
      ExportSpecifier
        Identifier: ' CompletionTriggerKind'
      ExportSpecifier
        Identifier: ' InlayHintKind'
      ExportSpecifier
        Identifier: ' OrganizeImportsMode'
      ExportSpecifier
        Identifier: ' RefactorActionInfo'
      ExportSpecifier
        Identifier: ' RefactorTriggerReason'
      ExportSpecifier
        Identifier: ' RenameInfoFailure'
      ExportSpecifier
        Identifier: ' SemicolonPreference'
      ExportSpecifier
        Identifier: ' SignatureHelpCharacterTypedReason'
      ExportSpecifier
        Identifier: ' SignatureHelpInvokedReason'
      ExportSpecifier
        Identifier: ' SignatureHelpParameter'
      ExportSpecifier
        Identifier: ' SignatureHelpRetriggerCharacter'
      ExportSpecifier
        Identifier: ' SignatureHelpRetriggeredReason'
      ExportSpecifier
        Identifier: ' SignatureHelpTriggerCharacter'
      ExportSpecifier
        Identifier: ' SignatureHelpTriggerReason'
      ExportSpecifier
        Identifier: ' SymbolDisplayPart'
      ExportSpecifier
        Identifier: ' UserPreferences'
  TypeAliasDeclaration
    Identifier: ' ChangeStringIndexSignature'
    TypeParameter
      Identifier: 'T'
    TypeParameter
      Identifier: ' NewStringIndexSignatureType'
    MappedType
      TypeParameter
        Identifier: 'K'
        TypeOperator
          TypeReference
            Identifier: ' T'
      ConditionalType
        StringKeyword
        TypeReference
          Identifier: ' K'
        TypeReference
          Identifier: ' NewStringIndexSignatureType'
        IndexedAccessType
          TypeReference
            Identifier: ' T'
          TypeReference
            Identifier: 'K'
  TypeAliasDeclaration
    Identifier: ' ChangePropertyTypes'
    TypeParameter
      Identifier: 'T'
    TypeParameter
      Identifier: ' Substitutions'
      MappedType
        TypeParameter
          Identifier: 'K'
          TypeOperator
            TypeReference
              Identifier: ' T'
        QuestionToken
        AnyKeyword
    MappedType
      TypeParameter
        Identifier: 'K'
        TypeOperator
          TypeReference
            Identifier: ' T'
      ConditionalType
        TypeReference
          Identifier: ' K'
        TypeOperator
          TypeReference
            Identifier: ' Substitutions'
        IndexedAccessType
          TypeReference
            Identifier: ' Substitutions'
          TypeReference
            Identifier: 'K'
        IndexedAccessType
          TypeReference
            Identifier: ' T'
          TypeReference
            Identifier: 'K'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    ConstKeyword
    Identifier: ' CommandTypes'
    EnumMember
      Identifier: '
    JsxClosingTag'
      StringLiteral
    EnumMember
      Identifier: '
    LinkedEditingRange'
      StringLiteral
    EnumMember
      Identifier: '
    Brace'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    BraceFull'
      StringLiteral
    EnumMember
      Identifier: '
    BraceCompletion'
      StringLiteral
    EnumMember
      Identifier: '
    GetSpanOfEnclosingComment'
      StringLiteral
    EnumMember
      Identifier: '
    Change'
      StringLiteral
    EnumMember
      Identifier: '
    Close'
      StringLiteral
    EnumMember
      Identifier: '
    /** @deprecated Prefer CompletionInfo -- see comment on CompletionsResponse */
    Completions'
      StringLiteral
    EnumMember
      Identifier: '
    CompletionInfo'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    CompletionsFull'
      StringLiteral
    EnumMember
      Identifier: '
    CompletionDetails'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    CompletionDetailsFull'
      StringLiteral
    EnumMember
      Identifier: '
    CompileOnSaveAffectedFileList'
      StringLiteral
    EnumMember
      Identifier: '
    CompileOnSaveEmitFile'
      StringLiteral
    EnumMember
      Identifier: '
    Configure'
      StringLiteral
    EnumMember
      Identifier: '
    Definition'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    DefinitionFull'
      StringLiteral
    EnumMember
      Identifier: '
    DefinitionAndBoundSpan'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    DefinitionAndBoundSpanFull'
      StringLiteral
    EnumMember
      Identifier: '
    Implementation'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    ImplementationFull'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    EmitOutput'
      StringLiteral
    EnumMember
      Identifier: '
    Exit'
      StringLiteral
    EnumMember
      Identifier: '
    FileReferences'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    FileReferencesFull'
      StringLiteral
    EnumMember
      Identifier: '
    Format'
      StringLiteral
    EnumMember
      Identifier: '
    Formatonkey'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    FormatFull'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    FormatonkeyFull'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    FormatRangeFull'
      StringLiteral
    EnumMember
      Identifier: '
    Geterr'
      StringLiteral
    EnumMember
      Identifier: '
    GeterrForProject'
      StringLiteral
    EnumMember
      Identifier: '
    SemanticDiagnosticsSync'
      StringLiteral
    EnumMember
      Identifier: '
    SyntacticDiagnosticsSync'
      StringLiteral
    EnumMember
      Identifier: '
    SuggestionDiagnosticsSync'
      StringLiteral
    EnumMember
      Identifier: '
    NavBar'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    NavBarFull'
      StringLiteral
    EnumMember
      Identifier: '
    Navto'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    NavtoFull'
      StringLiteral
    EnumMember
      Identifier: '
    NavTree'
      StringLiteral
    EnumMember
      Identifier: '
    NavTreeFull'
      StringLiteral
    EnumMember
      Identifier: '
    DocumentHighlights'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    DocumentHighlightsFull'
      StringLiteral
    EnumMember
      Identifier: '
    Open'
      StringLiteral
    EnumMember
      Identifier: '
    Quickinfo'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    QuickinfoFull'
      StringLiteral
    EnumMember
      Identifier: '
    References'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    ReferencesFull'
      StringLiteral
    EnumMember
      Identifier: '
    Reload'
      StringLiteral
    EnumMember
      Identifier: '
    Rename'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    RenameInfoFull'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    RenameLocationsFull'
      StringLiteral
    EnumMember
      Identifier: '
    Saveto'
      StringLiteral
    EnumMember
      Identifier: '
    SignatureHelp'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    SignatureHelpFull'
      StringLiteral
    EnumMember
      Identifier: '
    FindSourceDefinition'
      StringLiteral
    EnumMember
      Identifier: '
    Status'
      StringLiteral
    EnumMember
      Identifier: '
    TypeDefinition'
      StringLiteral
    EnumMember
      Identifier: '
    ProjectInfo'
      StringLiteral
    EnumMember
      Identifier: '
    ReloadProjects'
      StringLiteral
    EnumMember
      Identifier: '
    Unknown'
      StringLiteral
    EnumMember
      Identifier: '
    OpenExternalProject'
      StringLiteral
    EnumMember
      Identifier: '
    OpenExternalProjects'
      StringLiteral
    EnumMember
      Identifier: '
    CloseExternalProject'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    SynchronizeProjectList'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    ApplyChangedToOpenFiles'
      StringLiteral
    EnumMember
      Identifier: '
    UpdateOpen'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    EncodedSyntacticClassificationsFull'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    EncodedSemanticClassificationsFull'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    Cleanup'
      StringLiteral
    EnumMember
      Identifier: '
    GetOutliningSpans'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    GetOutliningSpansFull'
      StringLiteral
    EnumMember
      Identifier: '// Full command name is different for backward compatibility purposes
    TodoComments'
      StringLiteral
    EnumMember
      Identifier: '
    Indentation'
      StringLiteral
    EnumMember
      Identifier: '
    DocCommentTemplate'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    CompilerOptionsDiagnosticsFull'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    NameOrDottedNameSpan'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    BreakpointStatement'
      StringLiteral
    EnumMember
      Identifier: '
    CompilerOptionsForInferredProjects'
      StringLiteral
    EnumMember
      Identifier: '
    GetCodeFixes'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    GetCodeFixesFull'
      StringLiteral
    EnumMember
      Identifier: '
    GetCombinedCodeFix'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    GetCombinedCodeFixFull'
      StringLiteral
    EnumMember
      Identifier: '
    ApplyCodeActionCommand'
      StringLiteral
    EnumMember
      Identifier: '
    GetSupportedCodeFixes'
      StringLiteral
    EnumMember
      Identifier: '
    GetApplicableRefactors'
      StringLiteral
    EnumMember
      Identifier: '
    GetEditsForRefactor'
      StringLiteral
    EnumMember
      Identifier: '
    GetMoveToRefactoringFileSuggestions'
      StringLiteral
    EnumMember
      Identifier: '
    PreparePasteEdits'
      StringLiteral
    EnumMember
      Identifier: '
    GetPasteEdits'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    GetEditsForRefactorFull'
      StringLiteral
    EnumMember
      Identifier: '
    OrganizeImports'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    OrganizeImportsFull'
      StringLiteral
    EnumMember
      Identifier: '
    GetEditsForFileRename'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    GetEditsForFileRenameFull'
      StringLiteral
    EnumMember
      Identifier: '
    ConfigurePlugin'
      StringLiteral
    EnumMember
      Identifier: '
    SelectionRange'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    SelectionRangeFull'
      StringLiteral
    EnumMember
      Identifier: '
    ToggleLineComment'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    ToggleLineCommentFull'
      StringLiteral
    EnumMember
      Identifier: '
    ToggleMultilineComment'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    ToggleMultilineCommentFull'
      StringLiteral
    EnumMember
      Identifier: '
    CommentSelection'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    CommentSelectionFull'
      StringLiteral
    EnumMember
      Identifier: '
    UncommentSelection'
      StringLiteral
    EnumMember
      Identifier: '
    /** @internal */
    UncommentSelectionFull'
      StringLiteral
    EnumMember
      Identifier: '
    PrepareCallHierarchy'
      StringLiteral
    EnumMember
      Identifier: '
    ProvideCallHierarchyIncomingCalls'
      StringLiteral
    EnumMember
      Identifier: '
    ProvideCallHierarchyOutgoingCalls'
      StringLiteral
    EnumMember
      Identifier: '
    ProvideInlayHints'
      StringLiteral
    EnumMember
      Identifier: '
    WatchChange'
      StringLiteral
    EnumMember
      Identifier: '
    MapCode'
      StringLiteral
    EnumMember
      Identifier: '
    CopilotRelated'
      StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Message'
    PropertySignature
      Identifier: '
    /**
     * Sequence number of the message
     */
    seq'
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * One of "request", "response", or "event"
     */
    type'
      UnionType
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Request'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Message'
    PropertySignature
      Identifier: '
    type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
    /**
     * The command to execute
     */
    command'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Object containing arguments for the command
     */
    arguments'
      QuestionToken
      AnyKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ReloadProjectsRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Request'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'ReloadProjects'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Event'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Message'
    PropertySignature
      Identifier: '
    type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
    /**
     * Name of event
     */
    event'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Event-specific information
     */
    body'
      QuestionToken
      AnyKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Response'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Message'
    PropertySignature
      Identifier: '
    type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
    /**
     * Sequence number of the request message.
     */
    request_seq'
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Outcome of the request.
     */
    success'
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * The command requested.
     */
    command'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * If success === false, this should always be provided.
     * Otherwise, may (or may not) contain a success message.
     */
    message'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Contains message body if success === true.
     */
    body'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * Contains extra information that plugin can include to be passed on
     */
    metadata'
      QuestionToken
      UnknownKeyword
    PropertySignature
      Identifier: '
    /**
     * Exposes information about the performance of this request-response pair.
     */
    performanceData'
      QuestionToken
      TypeReference
        Identifier: ' PerformanceData'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' PerformanceData'
    PropertySignature
      Identifier: '
    /**
     * Time spent updating the program graph, in milliseconds.
     */
    updateGraphDurationMs'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * The time spent creating or updating the auto-import program, in milliseconds.
     */
    createAutoImportProviderProgramDurationMs'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * The time spent computing diagnostics, in milliseconds.
     */
    diagnosticsDuration'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' FileDiagnosticPerformanceData'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' DiagnosticPerformanceData'
    MappedType
      TypeParameter
        Identifier: 'Kind'
        TypeReference
          Identifier: ' DiagnosticEventKind'
      QuestionToken
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' FileDiagnosticPerformanceData'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' DiagnosticPerformanceData'
    PropertySignature
      Identifier: '
    /**
     * The file for which the performance data is reported.
     */
    file'
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' FileRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * The file for the request (absolute pathname required).
     */
    file'
      StringKeyword
    PropertySignature
      Identifier: '
    projectFileName'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' StatusRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Request'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'Status'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' StatusResponseBody'
    PropertySignature
      Identifier: '
    /**
     * The TypeScript version (`ts.version`).
     */
    version'
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' StatusResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      TypeReference
        Identifier: ' StatusResponseBody'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' DocCommentTemplateRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'DocCommentTemplate'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' DocCommandTemplateResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      TypeReference
        Identifier: ' TextInsertion'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TodoCommentRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'TodoComments'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' TodoCommentRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TodoCommentRequestArgs'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * Array of target TodoCommentDescriptors that describes TODO comments to be found
     */
    descriptors'
      ArrayType
        TypeReference
          Identifier: ' TodoCommentDescriptor'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TodoCommentsResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' TodoComment'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SpanOfEnclosingCommentRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'GetSpanOfEnclosingComment'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' SpanOfEnclosingCommentRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SpanOfEnclosingCommentRequestArgs'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * Requires that the enclosing span be a multi-line comment, or else the request returns undefined.
     */
    onlyMultiLine'
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' OutliningSpansRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'GetOutliningSpans'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' OutliningSpan'
    TypeReference
      Identifier: ' ChangePropertyTypes'
      TypeReference
        QualifiedName
          Identifier: 'ts'
          Identifier: 'OutliningSpan'
      TypeLiteral
        PropertySignature
          Identifier: '
    textSpan'
          TypeReference
            Identifier: ' TextSpan'
        PropertySignature
          Identifier: '
    hintSpan'
          TypeReference
            Identifier: ' TextSpan'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' OutliningSpansResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' OutliningSpan'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' OutliningSpansRequestFull'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'GetOutliningSpansFull'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' OutliningSpansResponseFull'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      ArrayType
        TypeReference
          QualifiedName
            Identifier: ' ts'
            Identifier: 'OutliningSpan'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' IndentationRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'Indentation'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' IndentationRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' IndentationResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      TypeReference
        Identifier: ' IndentationResult'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' IndentationResult'
    PropertySignature
      Identifier: '
    /**
     * The base position in the document that the indent should be relative to
     */
    position'
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * The number of columns the indent should be at relative to the position's column.
     */
    indentation'
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' IndentationRequestArgs'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * An optional set of settings to be used when computing indentation.
     * If argument is omitted - then it will use settings for file that were previously set via 'configure' request or global settings.
     */
    options'
      QuestionToken
      TypeReference
        Identifier: ' EditorSettings'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ProjectInfoRequestArgs'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * Indicate if the file name list of the project is needed
     */
    needFileNameList'
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * if true returns details about default configured project calculation
     */
    needDefaultConfiguredProjectInfo'
      QuestionToken
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ProjectInfoRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Request'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'ProjectInfo'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' ProjectInfoRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CompilerOptionsDiagnosticsRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Request'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' CompilerOptionsDiagnosticsRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CompilerOptionsDiagnosticsRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * Name of the project to retrieve compiler options diagnostics.
     */
    projectFileName'
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' DefaultConfiguredProjectInfo'
    PropertySignature
      Identifier: '
    /** List of config files looked and did not match because file was not part of root file names */
    notMatchedByConfig'
      QuestionToken
      TypeOperator
        ArrayType
          StringKeyword
    PropertySignature
      Identifier: '
    /** List of projects which were loaded but file was not part of the project or is file from referenced project */
    notInProject'
      QuestionToken
      TypeOperator
        ArrayType
          StringKeyword
    PropertySignature
      Identifier: '
    /** Configured project used as default */
    defaultProject'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ProjectInfo'
    PropertySignature
      Identifier: '
    /**
     * For configured project, this is the normalized path of the 'tsconfig.json' file
     * For inferred project, this is undefined
     */
    configFileName'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The list of normalized file name in the project, including 'lib.d.ts'
     */
    fileNames'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Indicates if the project has a active language service instance
     */
    languageServiceDisabled'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Information about default project
     */
    configuredProjectInfo'
      QuestionToken
      TypeReference
        Identifier: ' DefaultConfiguredProjectInfo'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' DiagnosticWithLinePosition'
    PropertySignature
      Identifier: '
    message'
      StringKeyword
    PropertySignature
      Identifier: '
    start'
      NumberKeyword
    PropertySignature
      Identifier: '
    length'
      NumberKeyword
    PropertySignature
      Identifier: '
    startLocation'
      TypeReference
        Identifier: ' Location'
    PropertySignature
      Identifier: '
    endLocation'
      TypeReference
        Identifier: ' Location'
    PropertySignature
      Identifier: '
    category'
      StringKeyword
    PropertySignature
      Identifier: '
    code'
      NumberKeyword
    PropertySignature
      Identifier: '
    /** May store more in future. For now, this will simply be `true` to indicate when a diagnostic is an unused-identifier diagnostic. */
    reportsUnnecessary'
      QuestionToken
      TypeLiteral
    PropertySignature
      Identifier: '
    reportsDeprecated'
      QuestionToken
      TypeLiteral
    PropertySignature
      Identifier: '
    relatedInformation'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' DiagnosticRelatedInformation'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ProjectInfoResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      TypeReference
        Identifier: ' ProjectInfo'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' FileRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Request'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' FileRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' FileLocationRequestArgs'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * The line number for the request (1-based).
     */
    line'
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * The character offset (on the line) for the request (1-based).
     */
    offset'
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Position (can be specified instead of line/offset pair)
     *
     * @internal
     */
    position'
      QuestionToken
      NumberKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' FileLocationOrRangeRequestArgs'
    UnionType
      TypeReference
        Identifier: ' FileLocationRequestArgs'
      TypeReference
        Identifier: ' FileRangeRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GetApplicableRefactorsRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Request'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'GetApplicableRefactors'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' GetApplicableRefactorsRequestArgs'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' GetApplicableRefactorsRequestArgs'
    IntersectionType
      TypeReference
        Identifier: ' FileLocationOrRangeRequestArgs'
      TypeLiteral
        PropertySignature
          Identifier: '
    triggerReason'
          QuestionToken
          TypeReference
            Identifier: ' RefactorTriggerReason'
        PropertySignature
          Identifier: '
    kind'
          QuestionToken
          StringKeyword
        PropertySignature
          Identifier: '
    /**
     * Include refactor actions that require additional arguments to be passed when
     * calling 'GetEditsForRefactor'. When true, clients should inspect the
     * `isInteractive` property of each returned `RefactorActionInfo`
     * and ensure they are able to collect the appropriate arguments for any
     * interactive refactor before offering it.
     */
    includeInteractiveActions'
          QuestionToken
          BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GetApplicableRefactorsResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' ApplicableRefactorInfo'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GetMoveToRefactoringFileSuggestionsRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Request'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'GetMoveToRefactoringFileSuggestions'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' GetMoveToRefactoringFileSuggestionsRequestArgs'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' GetMoveToRefactoringFileSuggestionsRequestArgs'
    IntersectionType
      TypeReference
        Identifier: ' FileLocationOrRangeRequestArgs'
      TypeLiteral
        PropertySignature
          Identifier: '
    kind'
          QuestionToken
          StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GetMoveToRefactoringFileSuggestions'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      TypeLiteral
        PropertySignature
          Identifier: '
        newFileName'
          StringKeyword
        PropertySignature
          Identifier: '
        files'
          ArrayType
            StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' PreparePasteEditsRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'PreparePasteEdits'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' PreparePasteEditsRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' PreparePasteEditsRequestArgs'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequestArgs'
    PropertySignature
      Identifier: '
    copiedTextSpan'
      ArrayType
        TypeReference
          Identifier: ' TextSpan'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' PreparePasteEditsResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GetPasteEditsRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Request'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'GetPasteEdits'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' GetPasteEditsRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GetPasteEditsRequestArgs'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequestArgs'
    PropertySignature
      Identifier: '
    /** The text that gets pasted in a file.  */
    pastedText'
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /** Locations of where the `pastedText` gets added in a file. If the length of the `pastedText` and `pastedLocations` are not the same,
     *  then the `pastedText` is combined into one and added at all the `pastedLocations`.
     */
    pasteLocations'
      ArrayType
        TypeReference
          Identifier: ' TextSpan'
    PropertySignature
      Identifier: '
    /** The source location of each `pastedText`. If present, the length of `spans` must be equal to the length of `pastedText`. */
    copiedFrom'
      QuestionToken
      TypeLiteral
        PropertySignature
          Identifier: '
        file'
          StringKeyword
        PropertySignature
          Identifier: '
        spans'
          ArrayType
            TypeReference
              Identifier: ' TextSpan'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GetPasteEditsResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      TypeReference
        Identifier: ' PasteEditsAction'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' PasteEditsAction'
    PropertySignature
      Identifier: '
    edits'
      ArrayType
        TypeReference
          Identifier: ' FileCodeEdits'
    PropertySignature
      Identifier: '
    fixId'
      QuestionToken
      TypeLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GetEditsForRefactorRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Request'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'GetEditsForRefactor'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' GetEditsForRefactorRequestArgs'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' GetEditsForRefactorRequestArgs'
    IntersectionType
      TypeReference
        Identifier: ' FileLocationOrRangeRequestArgs'
      TypeLiteral
        PropertySignature
          Identifier: '
    refactor'
          StringKeyword
        PropertySignature
          Identifier: '
    action'
          StringKeyword
        PropertySignature
          Identifier: '
    interactiveRefactorArguments'
          QuestionToken
          TypeReference
            Identifier: ' InteractiveRefactorArguments'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GetEditsForRefactorResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      TypeReference
        Identifier: ' RefactorEditInfo'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' RefactorEditInfo'
    PropertySignature
      Identifier: '
    edits'
      ArrayType
        TypeReference
          Identifier: ' FileCodeEdits'
    PropertySignature
      Identifier: '
    /**
     * An optional location where the editor should start a rename operation once
     * the refactoring edits have been applied
     */
    renameLocation'
      QuestionToken
      TypeReference
        Identifier: ' Location'
    PropertySignature
      Identifier: '
    renameFilename'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    notApplicableReason'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' OrganizeImportsRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Request'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'OrganizeImports'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' OrganizeImportsRequestArgs'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' OrganizeImportsScope'
    TypeReference
      Identifier: ' GetCombinedCodeFixScope'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' OrganizeImportsRequestArgs'
    PropertySignature
      Identifier: '
    scope'
      TypeReference
        Identifier: ' OrganizeImportsScope'
    PropertySignature
      Identifier: '
    /** @deprecated Use `mode` instead */
    skipDestructiveCodeActions'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    mode'
      QuestionToken
      TypeReference
        Identifier: ' OrganizeImportsMode'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' OrganizeImportsResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' FileCodeEdits'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GetEditsForFileRenameRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Request'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'GetEditsForFileRename'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' GetEditsForFileRenameRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GetEditsForFileRenameRequestArgs'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' oldFilePath'
      StringKeyword
    PropertySignature
      ReadonlyKeyword
      Identifier: ' newFilePath'
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GetEditsForFileRenameResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' FileCodeEdits'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CodeFixRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Request'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'GetCodeFixes'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' CodeFixRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GetCombinedCodeFixRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Request'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'GetCombinedCodeFix'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' GetCombinedCodeFixRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GetCombinedCodeFixResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      TypeReference
        Identifier: ' CombinedCodeActions'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ApplyCodeActionCommandRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Request'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'ApplyCodeActionCommand'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' ApplyCodeActionCommandRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ApplyCodeActionCommandResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' FileRangeRequestArgs'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequestArgs'
      ExpressionWithTypeArguments
        Identifier: ' FileRange'
    PropertySignature
      Identifier: '
    /**
     * Position (can be specified instead of line/offset pair)
     *
     * @internal
     */
    startPosition'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Position (can be specified instead of line/offset pair)
     *
     * @internal
     */
    endPosition'
      QuestionToken
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CodeFixRequestArgs'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRangeRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * Errorcodes we want to get the fixes for.
     */
    errorCodes'
      TypeOperator
        ArrayType
          NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GetCombinedCodeFixRequestArgs'
    PropertySignature
      Identifier: '
    scope'
      TypeReference
        Identifier: ' GetCombinedCodeFixScope'
    PropertySignature
      Identifier: '
    fixId'
      TypeLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GetCombinedCodeFixScope'
    PropertySignature
      Identifier: '
    type'
      LiteralType
        StringLiteral
    PropertySignature
      Identifier: '
    args'
      TypeReference
        Identifier: ' FileRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ApplyCodeActionCommandRequestArgs'
    PropertySignature
      Identifier: '
    /** May also be an array of commands. */
    command'
      TypeLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GetCodeFixesResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' CodeAction'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' FileLocationRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequest'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' FileLocationRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GetSupportedCodeFixesRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Request'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'GetSupportedCodeFixes'
    PropertySignature
      Identifier: '
    arguments'
      QuestionToken
      TypeReference
        Identifier: ' Partial'
        TypeReference
          Identifier: 'FileRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GetSupportedCodeFixesResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    /**
     * List of error codes supported by the server.
     */
    body'
      QuestionToken
      ArrayType
        StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' EncodedSyntacticClassificationsRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequest'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' EncodedSyntacticClassificationsRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' EncodedSyntacticClassificationsRequestArgs'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * Start position of the span.
     */
    start'
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Length of the span.
     */
    length'
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' EncodedSemanticClassificationsRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequest'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' EncodedSemanticClassificationsRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' EncodedSemanticClassificationsRequestArgs'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * Start position of the span.
     */
    start'
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Length of the span.
     */
    length'
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Optional parameter for the semantic highlighting response, if absent it
     * defaults to "original".
     */
    format'
      QuestionToken
      UnionType
        LiteralType
          StringLiteral
        LiteralType
          StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' EncodedSemanticClassificationsResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      TypeReference
        Identifier: ' EncodedSemanticClassificationsResponseBody'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' EncodedSemanticClassificationsResponseBody'
    PropertySignature
      Identifier: '
    endOfLineState'
      TypeReference
        Identifier: ' EndOfLineState'
    PropertySignature
      Identifier: '
    spans'
      ArrayType
        NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' DocumentHighlightsRequestArgs'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * List of files to search for document highlights.
     */
    filesToSearch'
      ArrayType
        StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' DefinitionRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'Definition'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' DefinitionAndBoundSpanRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequest'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'DefinitionAndBoundSpan'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' FindSourceDefinitionRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequest'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'FindSourceDefinition'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' DefinitionAndBoundSpanResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' body'
      TypeReference
        Identifier: ' DefinitionInfoAndBoundSpan'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' EmitOutputRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'EmitOutput'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' EmitOutputRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' EmitOutputRequestArgs'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequestArgs'
    PropertySignature
      Identifier: '
    includeLinePosition'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /** if true - return response as object with emitSkipped and diagnostics */
    richResponse'
      QuestionToken
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' EmitOutputResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' body'
      UnionType
        TypeReference
          Identifier: ' EmitOutput'
        TypeReference
          QualifiedName
            Identifier: ' ts'
            Identifier: 'EmitOutput'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' EmitOutput'
    PropertySignature
      Identifier: '
    outputFiles'
      ArrayType
        TypeReference
          Identifier: ' OutputFile'
    PropertySignature
      Identifier: '
    emitSkipped'
      BooleanKeyword
    PropertySignature
      Identifier: '
    diagnostics'
      UnionType
        ArrayType
          TypeReference
            Identifier: ' Diagnostic'
        ArrayType
          TypeReference
            Identifier: ' DiagnosticWithLinePosition'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TypeDefinitionRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'TypeDefinition'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ImplementationRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'Implementation'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Location'
    PropertySignature
      Identifier: '
    line'
      NumberKeyword
    PropertySignature
      Identifier: '
    offset'
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TextSpan'
    PropertySignature
      Identifier: '
    /**
     * First character of the definition.
     */
    start'
      TypeReference
        Identifier: ' Location'
    PropertySignature
      Identifier: '
    /**
     * One character past last character of the definition.
     */
    end'
      TypeReference
        Identifier: ' Location'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' FileSpan'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' TextSpan'
    PropertySignature
      Identifier: '
    /**
     * File containing text span.
     */
    file'
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' JSDocTagInfo'
    PropertySignature
      Identifier: '
    /** Name of the JSDoc tag */
    name'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Comment text after the JSDoc tag -- the text after the tag name until the next tag or end of comment
     * Display parts when UserPreferences.displayPartsForJSDoc is true, flattened to string otherwise.
     */
    text'
      QuestionToken
      UnionType
        StringKeyword
        ArrayType
          TypeReference
            Identifier: ' SymbolDisplayPart'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TextSpanWithContext'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' TextSpan'
    PropertySignature
      Identifier: '
    contextStart'
      QuestionToken
      TypeReference
        Identifier: ' Location'
    PropertySignature
      Identifier: '
    contextEnd'
      QuestionToken
      TypeReference
        Identifier: ' Location'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' FileSpanWithContext'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileSpan'
      ExpressionWithTypeArguments
        Identifier: ' TextSpanWithContext'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' DefinitionInfo'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileSpanWithContext'
    PropertySignature
      Identifier: '
    /**
     * When true, the file may or may not exist.
     */
    unverified'
      QuestionToken
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' DefinitionInfoAndBoundSpan'
    PropertySignature
      Identifier: '
    definitions'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' DefinitionInfo'
    PropertySignature
      Identifier: '
    textSpan'
      TypeReference
        Identifier: ' TextSpan'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' DefinitionResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' DefinitionInfo'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' DefinitionInfoAndBoundSpanResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      TypeReference
        Identifier: ' DefinitionInfoAndBoundSpan'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' DefinitionInfoAndBoundSpanReponse'
    TypeReference
      Identifier: ' DefinitionInfoAndBoundSpanResponse'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TypeDefinitionResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' FileSpanWithContext'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ImplementationResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' FileSpanWithContext'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' BraceCompletionRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'BraceCompletion'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' BraceCompletionRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' BraceCompletionRequestArgs'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * Kind of opening brace
     */
    openingBrace'
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' JsxClosingTagRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequest'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'JsxClosingTag'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' arguments'
      TypeReference
        Identifier: ' JsxClosingTagRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' JsxClosingTagRequestArgs'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' JsxClosingTagResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' body'
      TypeReference
        Identifier: ' TextInsertion'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' LinkedEditingRangeRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequest'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'LinkedEditingRange'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' LinkedEditingRangesBody'
    PropertySignature
      Identifier: '
    ranges'
      ArrayType
        TypeReference
          Identifier: ' TextSpan'
    PropertySignature
      Identifier: '
    wordPattern'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' LinkedEditingRangeResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' body'
      TypeReference
        Identifier: ' LinkedEditingRangesBody'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' DocumentHighlightsRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'DocumentHighlights'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' DocumentHighlightsRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' HighlightSpan'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' TextSpanWithContext'
    PropertySignature
      Identifier: '
    kind'
      TypeReference
        Identifier: ' HighlightSpanKind'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' DocumentHighlightsItem'
    PropertySignature
      Identifier: '
    /**
     * File containing highlight spans.
     */
    file'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Spans to highlight in file.
     */
    highlightSpans'
      ArrayType
        TypeReference
          Identifier: ' HighlightSpan'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' DocumentHighlightsResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' DocumentHighlightsItem'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ReferencesRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'References'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ReferencesResponseItem'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileSpanWithContext'
    PropertySignature
      Identifier: '
    /**
     * Text of line containing the reference. Including this
     * with the response avoids latency of editor loading files
     * to show text of reference line (the server already has loaded the referencing files).
     *
     * If {@link UserPreferences.disableLineTextInReferences} is enabled, the property won't be filled
     */
    lineText'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * True if reference is a write location, false otherwise.
     */
    isWriteAccess'
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Present only if the search was triggered from a declaration.
     * True indicates that the references refers to the same symbol
     * (i.e. has the same meaning) as the declaration that began the
     * search.
     */
    isDefinition'
      QuestionToken
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ReferencesResponseBody'
    PropertySignature
      Identifier: '
    /**
     * The file locations referencing the symbol.
     */
    refs'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' ReferencesResponseItem'
    PropertySignature
      Identifier: '
    /**
     * The name of the symbol.
     */
    symbolName'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The start character offset of the symbol (on the line provided by the references request).
     */
    symbolStartOffset'
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * The full display name of the symbol.
     */
    symbolDisplayString'
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ReferencesResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      TypeReference
        Identifier: ' ReferencesResponseBody'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' FileReferencesRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'FileReferences'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' FileReferencesResponseBody'
    PropertySignature
      Identifier: '
    /**
     * The file locations referencing the symbol.
     */
    refs'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' ReferencesResponseItem'
    PropertySignature
      Identifier: '
    /**
     * The name of the symbol.
     */
    symbolName'
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' FileReferencesResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      TypeReference
        Identifier: ' FileReferencesResponseBody'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' RenameRequestArgs'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * Should text at specified location be found/changed in comments?
     */
    findInComments'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Should text at specified location be found/changed in strings?
     */
    findInStrings'
      QuestionToken
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' RenameRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'Rename'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' RenameRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' RenameFullRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequest'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'RenameLocationsFull'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' arguments'
      TypeReference
        Identifier: ' RenameRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' RenameFullResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' body'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' RenameLocation'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' RenameInfo'
    UnionType
      TypeReference
        Identifier: ' RenameInfoSuccess'
      TypeReference
        Identifier: ' RenameInfoFailure'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' RenameInfoSuccess'
    TypeReference
      Identifier: ' ChangePropertyTypes'
      TypeReference
        QualifiedName
          Identifier: 'ts'
          Identifier: 'RenameInfoSuccess'
      TypeLiteral
        PropertySignature
          Identifier: '
    triggerSpan'
          TypeReference
            Identifier: ' TextSpan'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SpanGroup'
    PropertySignature
      Identifier: '
    /** The file to which the spans apply */
    file'
      StringKeyword
    PropertySignature
      Identifier: '
    /** The text spans in this group */
    locs'
      ArrayType
        TypeReference
          Identifier: ' RenameTextSpan'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' RenameTextSpan'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' TextSpanWithContext'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' prefixText'
      QuestionToken
      StringKeyword
    PropertySignature
      ReadonlyKeyword
      Identifier: ' suffixText'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' RenameResponseBody'
    PropertySignature
      Identifier: '
    /**
     * Information about the item to be renamed.
     */
    info'
      TypeReference
        Identifier: ' RenameInfo'
    PropertySignature
      Identifier: '
    /**
     * An array of span groups (one per file) that refer to the item to be renamed.
     */
    locs'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' SpanGroup'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' RenameResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      TypeReference
        Identifier: ' RenameResponseBody'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExternalFile'
    PropertySignature
      Identifier: '
    /**
     * Name of file file
     */
    fileName'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Script kind of the file
     */
    scriptKind'
      QuestionToken
      UnionType
        TypeReference
          Identifier: ' ScriptKindName'
        TypeReference
          Identifier: ' ScriptKind'
    PropertySignature
      Identifier: '
    /**
     * Whether file has mixed content (i.e. .cshtml file that combines html markup with C#/JavaScript)
     */
    hasMixedContent'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Content of the file
     */
    content'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExternalProject'
    PropertySignature
      Identifier: '
    /**
     * Project name
     */
    projectFileName'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * List of root files in project
     */
    rootFiles'
      ArrayType
        TypeReference
          Identifier: ' ExternalFile'
    PropertySignature
      Identifier: '
    /**
     * Compiler options for the project
     */
    options'
      TypeReference
        Identifier: ' ExternalProjectCompilerOptions'
    PropertySignature
      Identifier: '
    /**
     * Explicitly specified type acquisition for the project
     */
    typeAcquisition'
      QuestionToken
      TypeReference
        Identifier: ' TypeAcquisition'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CompileOnSaveMixin'
    PropertySignature
      Identifier: '
    /**
     * If compile on save is enabled for the project
     */
    compileOnSave'
      QuestionToken
      BooleanKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' ExternalProjectCompilerOptions'
    IntersectionType
      TypeReference
        Identifier: ' CompilerOptions'
      TypeReference
        Identifier: ' CompileOnSaveMixin'
      TypeReference
        Identifier: ' WatchOptions'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ProjectVersionInfo'
    PropertySignature
      Identifier: '
    /**
     * Project name
     */
    projectName'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * true if project is inferred or false if project is external or configured
     */
    isInferred'
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Project version
     */
    version'
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Current set of compiler options for project
     */
    options'
      TypeReference
        QualifiedName
          Identifier: ' ts'
          Identifier: 'CompilerOptions'
    PropertySignature
      Identifier: '
    /**
     * true if project language service is disabled
     */
    languageServiceDisabled'
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Filename of the last file analyzed before disabling the language service. undefined, if the language service is enabled.
     */
    lastFileExceededProgramSize'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' FileWithProjectReferenceRedirectInfo'
    PropertySignature
      Identifier: '
    /**
     * Name of file
     */
    fileName'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * True if the file is primarily included in a referenced project
     */
    isSourceOfProjectReferenceRedirect'
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ProjectChanges'
    PropertySignature
      Identifier: '
    /**
     * List of added files
     */
    added'
      UnionType
        ArrayType
          StringKeyword
        ArrayType
          TypeReference
            Identifier: ' FileWithProjectReferenceRedirectInfo'
    PropertySignature
      Identifier: '
    /**
     * List of removed files
     */
    removed'
      UnionType
        ArrayType
          StringKeyword
        ArrayType
          TypeReference
            Identifier: ' FileWithProjectReferenceRedirectInfo'
    PropertySignature
      Identifier: '
    /**
     * List of updated files
     */
    updated'
      UnionType
        ArrayType
          StringKeyword
        ArrayType
          TypeReference
            Identifier: ' FileWithProjectReferenceRedirectInfo'
    PropertySignature
      Identifier: '
    /**
     * List of files that have had their project reference redirect status updated
     * Only provided when the synchronizeProjectList request has includeProjectReferenceRedirectInfo set to true
     */
    updatedRedirects'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' FileWithProjectReferenceRedirectInfo'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ProjectFiles'
    PropertySignature
      Identifier: '
    /**
     * Information about project verison
     */
    info'
      QuestionToken
      TypeReference
        Identifier: ' ProjectVersionInfo'
    PropertySignature
      Identifier: '
    /**
     * List of files in project (might be omitted if current state of project can be computed using only information from 'changes')
     * This property will have type FileWithProjectReferenceRedirectInfo[] if includeProjectReferenceRedirectInfo is set to true in
     * the corresponding SynchronizeProjectList request; otherwise, it will have type string[].
     */
    files'
      QuestionToken
      UnionType
        ArrayType
          StringKeyword
        ArrayType
          TypeReference
            Identifier: ' FileWithProjectReferenceRedirectInfo'
    PropertySignature
      Identifier: '
    /**
     * Set of changes in project (omitted if the entire set of files in project should be replaced)
     */
    changes'
      QuestionToken
      TypeReference
        Identifier: ' ProjectChanges'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ProjectFilesWithDiagnostics'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' ProjectFiles'
    PropertySignature
      Identifier: '
    /**
     * List of errors in project
     */
    projectErrors'
      ArrayType
        TypeReference
          Identifier: ' DiagnosticWithLinePosition'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ChangedOpenFile'
    PropertySignature
      Identifier: '
    /**
     * Name of file
     */
    fileName'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * List of changes that should be applied to known open file
     */
    changes'
      ArrayType
        TypeReference
          Identifier: ' TextChange'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ConfigureRequestArguments'
    PropertySignature
      Identifier: '
    /**
     * Information about the host, for example 'Emacs 24.4' or
     * 'Sublime Text version 3075'
     */
    hostInfo'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * If present, tab settings apply only to this file.
     */
    file'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The format options to use during formatting and other code editing features.
     */
    formatOptions'
      QuestionToken
      TypeReference
        Identifier: ' FormatCodeSettings'
    PropertySignature
      Identifier: '
    preferences'
      QuestionToken
      TypeReference
        Identifier: ' UserPreferences'
    PropertySignature
      Identifier: '
    /**
     * The host's additional supported .js file extensions
     */
    extraFileExtensions'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' FileExtensionInfo'
    PropertySignature
      Identifier: '
    watchOptions'
      QuestionToken
      TypeReference
        Identifier: ' WatchOptions'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    ConstKeyword
    Identifier: ' WatchFileKind'
    EnumMember
      Identifier: '
    FixedPollingInterval'
      StringLiteral
    EnumMember
      Identifier: '
    PriorityPollingInterval'
      StringLiteral
    EnumMember
      Identifier: '
    DynamicPriorityPolling'
      StringLiteral
    EnumMember
      Identifier: '
    FixedChunkSizePolling'
      StringLiteral
    EnumMember
      Identifier: '
    UseFsEvents'
      StringLiteral
    EnumMember
      Identifier: '
    UseFsEventsOnParentDirectory'
      StringLiteral
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    ConstKeyword
    Identifier: ' WatchDirectoryKind'
    EnumMember
      Identifier: '
    UseFsEvents'
      StringLiteral
    EnumMember
      Identifier: '
    FixedPollingInterval'
      StringLiteral
    EnumMember
      Identifier: '
    DynamicPriorityPolling'
      StringLiteral
    EnumMember
      Identifier: '
    FixedChunkSizePolling'
      StringLiteral
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    ConstKeyword
    Identifier: ' PollingWatchKind'
    EnumMember
      Identifier: '
    FixedInterval'
      StringLiteral
    EnumMember
      Identifier: '
    PriorityInterval'
      StringLiteral
    EnumMember
      Identifier: '
    DynamicPriority'
      StringLiteral
    EnumMember
      Identifier: '
    FixedChunkSize'
      StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WatchOptions'
    PropertySignature
      Identifier: '
    watchFile'
      QuestionToken
      UnionType
        TypeReference
          Identifier: ' WatchFileKind'
        TypeReference
          QualifiedName
            Identifier: ' ts'
            Identifier: 'WatchFileKind'
    PropertySignature
      Identifier: '
    watchDirectory'
      QuestionToken
      UnionType
        TypeReference
          Identifier: ' WatchDirectoryKind'
        TypeReference
          QualifiedName
            Identifier: ' ts'
            Identifier: 'WatchDirectoryKind'
    PropertySignature
      Identifier: '
    fallbackPolling'
      QuestionToken
      UnionType
        TypeReference
          Identifier: ' PollingWatchKind'
        TypeReference
          QualifiedName
            Identifier: ' ts'
            Identifier: 'PollingWatchKind'
    PropertySignature
      Identifier: '
    synchronousWatchDirectory'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    excludeDirectories'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    excludeFiles'
      QuestionToken
      ArrayType
        StringKeyword
    IndexSignature
      Parameter
        Identifier: 'option'
        StringKeyword
      UnionType
        TypeReference
          Identifier: ' CompilerOptionsValue'
        UndefinedKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ConfigureRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Request'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'Configure'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' ConfigureRequestArguments'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ConfigureResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ConfigurePluginRequestArguments'
    PropertySignature
      Identifier: '
    pluginName'
      StringKeyword
    PropertySignature
      Identifier: '
    configuration'
      AnyKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ConfigurePluginRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Request'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'ConfigurePlugin'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' ConfigurePluginRequestArguments'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ConfigurePluginResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SelectionRangeRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'SelectionRange'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' SelectionRangeRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SelectionRangeRequestArgs'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequestArgs'
    PropertySignature
      Identifier: '
    locations'
      ArrayType
        TypeReference
          Identifier: ' Location'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SelectionRangeResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' SelectionRange'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SelectionRange'
    PropertySignature
      Identifier: '
    textSpan'
      TypeReference
        Identifier: ' TextSpan'
    PropertySignature
      Identifier: '
    parent'
      QuestionToken
      TypeReference
        Identifier: ' SelectionRange'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ToggleLineCommentRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'ToggleLineComment'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' FileRangeRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ToggleMultilineCommentRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'ToggleMultilineComment'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' FileRangeRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CommentSelectionRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'CommentSelection'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' FileRangeRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' UncommentSelectionRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'UncommentSelection'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' FileRangeRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' OpenRequestArgs'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * Used when a version of the file content is known to be more up to date than the one on disk.
     * Then the known content will be used upon opening instead of the disk copy
     */
    fileContent'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Used to specify the script kind of the file explicitly. It could be one of the following:
     *      "TS", "JS", "TSX", "JSX"
     */
    scriptKindName'
      QuestionToken
      TypeReference
        Identifier: ' ScriptKindName'
    PropertySignature
      Identifier: '
    /**
     * Used to limit the searching for project config file. If given the searching will stop at this
     * root path; otherwise it will go all the way up to the dist root path.
     */
    projectRootPath'
      QuestionToken
      StringKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' ScriptKindName'
    UnionType
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' OpenRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Request'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'Open'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' OpenRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' OpenExternalProjectRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Request'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'OpenExternalProject'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' OpenExternalProjectArgs'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' OpenExternalProjectArgs'
    TypeReference
      Identifier: ' ExternalProject'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' OpenExternalProjectsRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Request'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'OpenExternalProjects'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' OpenExternalProjectsArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' OpenExternalProjectsArgs'
    PropertySignature
      Identifier: '
    /**
     * List of external projects to open or update
     */
    projects'
      ArrayType
        TypeReference
          Identifier: ' ExternalProject'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' OpenExternalProjectResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' OpenExternalProjectsResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CloseExternalProjectRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Request'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'CloseExternalProject'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' CloseExternalProjectRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CloseExternalProjectRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * Name of the project to close
     */
    projectFileName'
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CloseExternalProjectResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SynchronizeProjectListRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Request'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' SynchronizeProjectListRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SynchronizeProjectListRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * List of last known projects
     */
    knownProjects'
      ArrayType
        TypeReference
          Identifier: ' ProjectVersionInfo'
    PropertySignature
      Identifier: '
    /**
     * If true, response specifies whether or not each file in each project
     * is a source from a project reference redirect
     */
    includeProjectReferenceRedirectInfo'
      QuestionToken
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ApplyChangedToOpenFilesRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Request'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' ApplyChangedToOpenFilesRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ApplyChangedToOpenFilesRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * List of newly open files
     */
    openFiles'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' ExternalFile'
    PropertySignature
      Identifier: '
    /**
     * List of open files files that were changes
     */
    changedFiles'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' ChangedOpenFile'
    PropertySignature
      Identifier: '
    /**
     * List of files that were closed
     */
    closedFiles'
      QuestionToken
      ArrayType
        StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' UpdateOpenRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Request'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'UpdateOpen'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' UpdateOpenRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' UpdateOpenRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * List of newly open files
     */
    openFiles'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' OpenRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * List of open files files that were changes
     */
    changedFiles'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' FileCodeEdits'
    PropertySignature
      Identifier: '
    /**
     * List of files that were closed
     */
    closedFiles'
      QuestionToken
      ArrayType
        StringKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' InferredProjectCompilerOptions'
    IntersectionType
      TypeReference
        Identifier: ' ExternalProjectCompilerOptions'
      TypeReference
        Identifier: ' TypeAcquisition'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SetCompilerOptionsForInferredProjectsRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Request'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'CompilerOptionsForInferredProjects'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' SetCompilerOptionsForInferredProjectsArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SetCompilerOptionsForInferredProjectsArgs'
    PropertySignature
      Identifier: '
    /**
     * Compiler options to be used with inferred projects.
     */
    options'
      TypeReference
        Identifier: ' InferredProjectCompilerOptions'
    PropertySignature
      Identifier: '
    /**
     * Specifies the project root path used to scope compiler options.
     * It is an error to provide this property if the server has not been started with
     * `useInferredProjectPerProjectRoot` enabled.
     */
    projectRootPath'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SetCompilerOptionsForInferredProjectsResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ExitRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Request'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'Exit'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CloseRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'Close'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WatchChangeRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Request'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'WatchChange'
    PropertySignature
      Identifier: '
    arguments'
      UnionType
        TypeReference
          Identifier: ' WatchChangeRequestArgs'
        TypeOperator
          ArrayType
            TypeReference
              Identifier: ' WatchChangeRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WatchChangeRequestArgs'
    PropertySignature
      Identifier: '
    id'
      NumberKeyword
    PropertySignature
      Identifier: '
    created'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    deleted'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    updated'
      QuestionToken
      ArrayType
        StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CompileOnSaveAffectedFileListRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'CompileOnSaveAffectedFileList'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CompileOnSaveAffectedFileListSingleProject'
    PropertySignature
      Identifier: '
    /**
     * Project name
     */
    projectFileName'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * List of files names that should be recompiled
     */
    fileNames'
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * true if project uses outFile or out compiler option
     */
    projectUsesOutFile'
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CompileOnSaveAffectedFileListResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      ArrayType
        TypeReference
          Identifier: ' CompileOnSaveAffectedFileListSingleProject'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CompileOnSaveEmitFileRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'CompileOnSaveEmitFile'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' CompileOnSaveEmitFileRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CompileOnSaveEmitFileRequestArgs'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * if true - then file should be recompiled even if it does not have any changes.
     */
    forced'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    includeLinePosition'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /** if true - return response as object with emitSkipped and diagnostics */
    richResponse'
      QuestionToken
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CompileOnSaveEmitFileResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      UnionType
        BooleanKeyword
        TypeReference
          Identifier: ' EmitResult'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' EmitResult'
    PropertySignature
      Identifier: '
    emitSkipped'
      BooleanKeyword
    PropertySignature
      Identifier: '
    diagnostics'
      UnionType
        ArrayType
          TypeReference
            Identifier: ' Diagnostic'
        ArrayType
          TypeReference
            Identifier: ' DiagnosticWithLinePosition'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' QuickInfoRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'Quickinfo'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' FileLocationRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' QuickInfoResponseBody'
    PropertySignature
      Identifier: '
    /**
     * The symbol's kind (such as 'className' or 'parameterName' or plain 'text').
     */
    kind'
      TypeReference
        Identifier: ' ScriptElementKind'
    PropertySignature
      Identifier: '
    /**
     * Optional modifiers for the kind (such as 'public').
     */
    kindModifiers'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Starting file location of symbol.
     */
    start'
      TypeReference
        Identifier: ' Location'
    PropertySignature
      Identifier: '
    /**
     * One past last character of symbol.
     */
    end'
      TypeReference
        Identifier: ' Location'
    PropertySignature
      Identifier: '
    /**
     * Type and kind of symbol.
     */
    displayString'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Documentation associated with symbol.
     * Display parts when UserPreferences.displayPartsForJSDoc is true, flattened to string otherwise.
     */
    documentation'
      UnionType
        StringKeyword
        ArrayType
          TypeReference
            Identifier: ' SymbolDisplayPart'
    PropertySignature
      Identifier: '
    /**
     * JSDoc tags associated with symbol.
     */
    tags'
      ArrayType
        TypeReference
          Identifier: ' JSDocTagInfo'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' QuickInfoResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      TypeReference
        Identifier: ' QuickInfoResponseBody'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' FormatRequestArgs'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * Last line of range for which to format text in file.
     */
    endLine'
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Character offset on last line of range for which to format text in file.
     */
    endOffset'
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * End position of the range for which to format text in file.
     *
     * @internal
     */
    endPosition'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Format options to be used.
     */
    options'
      QuestionToken
      TypeReference
        Identifier: ' FormatCodeSettings'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' FormatRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'Format'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' FormatRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CodeEdit'
    PropertySignature
      Identifier: '
    /**
     * First character of the text span to edit.
     */
    start'
      TypeReference
        Identifier: ' Location'
    PropertySignature
      Identifier: '
    /**
     * One character past last character of the text span to edit.
     */
    end'
      TypeReference
        Identifier: ' Location'
    PropertySignature
      Identifier: '
    /**
     * Replace the span defined above with this string (may be
     * the empty string).
     */
    newText'
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' FileCodeEdits'
    PropertySignature
      Identifier: '
    fileName'
      StringKeyword
    PropertySignature
      Identifier: '
    textChanges'
      ArrayType
        TypeReference
          Identifier: ' CodeEdit'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CodeFixResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    /** The code actions that are available */
    body'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' CodeFixAction'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CodeAction'
    PropertySignature
      Identifier: '
    /** Description of the code action to display in the UI of the editor */
    description'
      StringKeyword
    PropertySignature
      Identifier: '
    /** Text changes to apply to each file as part of the code action */
    changes'
      ArrayType
        TypeReference
          Identifier: ' FileCodeEdits'
    PropertySignature
      Identifier: '
    /** A command is an opaque object that should be passed to `ApplyCodeActionCommandRequestArgs` without modification.  */
    commands'
      QuestionToken
      ArrayType
        TypeLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CombinedCodeActions'
    PropertySignature
      Identifier: '
    changes'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' FileCodeEdits'
    PropertySignature
      Identifier: '
    commands'
      QuestionToken
      TypeOperator
        ArrayType
          TypeLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CodeFixAction'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' CodeAction'
    PropertySignature
      Identifier: '
    /** Short name to identify the fix, for use by telemetry. */
    fixName'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * If present, one may call 'getCombinedCodeFix' with this fixId.
     * This may be omitted to indicate that the code fix can't be applied in a group.
     */
    fixId'
      QuestionToken
      TypeLiteral
    PropertySignature
      Identifier: '
    /** Should be present if and only if 'fixId' is. */
    fixAllDescription'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' FormatResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' CodeEdit'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' FormatOnKeyRequestArgs'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * Key pressed (';', '\n', or '}').
     */
    key'
      StringKeyword
    PropertySignature
      Identifier: '
    options'
      QuestionToken
      TypeReference
        Identifier: ' FormatCodeSettings'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' FormatOnKeyRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'Formatonkey'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' FormatOnKeyRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CompletionsRequestArgs'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * Optional prefix to apply to possible completions.
     */
    prefix'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Character that was responsible for triggering completion.
     * Should be `undefined` if a user manually requested completion.
     */
    triggerCharacter'
      QuestionToken
      TypeReference
        Identifier: ' CompletionsTriggerCharacter'
    PropertySignature
      Identifier: '
    triggerKind'
      QuestionToken
      TypeReference
        Identifier: ' CompletionTriggerKind'
    PropertySignature
      Identifier: '
    /**
     * @deprecated Use UserPreferences.includeCompletionsForModuleExports
     */
    includeExternalModuleExports'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * @deprecated Use UserPreferences.includeCompletionsWithInsertText
     */
    includeInsertTextCompletions'
      QuestionToken
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CompletionsRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequest'
    PropertySignature
      Identifier: '
    command'
      UnionType
        TypeReference
          QualifiedName
            Identifier: ' CommandTypes'
            Identifier: 'Completions'
        TypeReference
          QualifiedName
            Identifier: ' CommandTypes'
            Identifier: 'CompletionInfo'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' CompletionsRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CompletionDetailsRequestArgs'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * Names of one or more entries for which to obtain details.
     */
    entryNames'
      ArrayType
        ParenthesizedType
          UnionType
            StringKeyword
            TypeReference
              Identifier: ' CompletionEntryIdentifier'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CompletionEntryIdentifier'
    PropertySignature
      Identifier: '
    name'
      StringKeyword
    PropertySignature
      Identifier: '
    source'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    data'
      QuestionToken
      UnknownKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CompletionDetailsRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'CompletionDetails'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' CompletionDetailsRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' JSDocLinkDisplayPart'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' SymbolDisplayPart'
    PropertySignature
      Identifier: '
    /** The location of the declaration that the @link tag links to. */
    target'
      TypeReference
        Identifier: ' FileSpan'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' CompletionEntry'
    TypeReference
      Identifier: ' ChangePropertyTypes'
      TypeReference
        Identifier: 'Omit'
        TypeReference
          QualifiedName
            Identifier: 'ts'
            Identifier: 'CompletionEntry'
        LiteralType
          StringLiteral
      TypeLiteral
        PropertySignature
          Identifier: '
    replacementSpan'
          TypeReference
            Identifier: ' TextSpan'
        PropertySignature
          Identifier: '
    data'
          UnknownKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' CompletionEntryDetails'
    TypeReference
      Identifier: ' ChangePropertyTypes'
      TypeReference
        QualifiedName
          Identifier: 'ts'
          Identifier: 'CompletionEntryDetails'
      TypeLiteral
        PropertySignature
          Identifier: '
    tags'
          ArrayType
            TypeReference
              Identifier: ' JSDocTagInfo'
        PropertySignature
          Identifier: '
    codeActions'
          ArrayType
            TypeReference
              Identifier: ' CodeAction'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CompletionsResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' CompletionEntry'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CompletionInfoResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      TypeReference
        Identifier: ' CompletionInfo'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' CompletionInfo'
    TypeReference
      Identifier: ' ChangePropertyTypes'
      TypeReference
        QualifiedName
          Identifier: 'ts'
          Identifier: 'CompletionInfo'
      TypeLiteral
        PropertySignature
          Identifier: '
    entries'
          TypeOperator
            ArrayType
              TypeReference
                Identifier: ' CompletionEntry'
        PropertySignature
          Identifier: '
    optionalReplacementSpan'
          TypeReference
            Identifier: ' TextSpan'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CompletionDetailsResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' CompletionEntryDetails'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' SignatureHelpItem'
    TypeReference
      Identifier: ' ChangePropertyTypes'
      TypeReference
        QualifiedName
          Identifier: 'ts'
          Identifier: 'SignatureHelpItem'
      TypeLiteral
        PropertySignature
          Identifier: '
    tags'
          ArrayType
            TypeReference
              Identifier: ' JSDocTagInfo'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SignatureHelpItems'
    PropertySignature
      Identifier: '
    /**
     * The signature help items.
     */
    items'
      ArrayType
        TypeReference
          Identifier: ' SignatureHelpItem'
    PropertySignature
      Identifier: '
    /**
     * The span for which signature help should appear on a signature
     */
    applicableSpan'
      TypeReference
        Identifier: ' TextSpan'
    PropertySignature
      Identifier: '
    /**
     * The item selected in the set of available help items.
     */
    selectedItemIndex'
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * The argument selected in the set of parameters.
     */
    argumentIndex'
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * The argument count
     */
    argumentCount'
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SignatureHelpRequestArgs'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * Reason why signature help was invoked.
     * See each individual possible
     */
    triggerReason'
      QuestionToken
      TypeReference
        Identifier: ' SignatureHelpTriggerReason'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SignatureHelpRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'SignatureHelp'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' SignatureHelpRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SignatureHelpResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      TypeReference
        Identifier: ' SignatureHelpItems'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' InlayHintsRequestArgs'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * Start position of the span.
     */
    start'
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Length of the span.
     */
    length'
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' InlayHintsRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Request'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'ProvideInlayHints'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' InlayHintsRequestArgs'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' InlayHintItem'
    TypeReference
      Identifier: ' ChangePropertyTypes'
      TypeReference
        QualifiedName
          Identifier: 'ts'
          Identifier: 'InlayHint'
      TypeLiteral
        PropertySignature
          Identifier: '
    position'
          TypeReference
            Identifier: ' Location'
        PropertySignature
          Identifier: '
    displayParts'
          ArrayType
            TypeReference
              Identifier: ' InlayHintItemDisplayPart'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' InlayHintItemDisplayPart'
    PropertySignature
      Identifier: '
    text'
      StringKeyword
    PropertySignature
      Identifier: '
    span'
      QuestionToken
      TypeReference
        Identifier: ' FileSpan'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' InlayHintsResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' InlayHintItem'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' MapCodeRequestArgs'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * The files and changes to try and apply/map.
     */
    mapping'
      TypeReference
        Identifier: ' MapCodeRequestDocumentMapping'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' MapCodeRequestDocumentMapping'
    PropertySignature
      Identifier: '
    /**
     * The specific code to map/insert/replace in the file.
     */
    contents'
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Areas of "focus" to inform the code mapper with. For example, cursor
     * location, current selection, viewport, etc. Nested arrays denote
     * priority: toplevel arrays are more important than inner arrays, and
     * inner array priorities are based on items within that array. Items
     * earlier in the arrays have higher priority.
     */
    focusLocations'
      QuestionToken
      ArrayType
        ArrayType
          TypeReference
            Identifier: ' TextSpan'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' MapCodeRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'MapCode'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' MapCodeRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' MapCodeResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' FileCodeEdits'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CopilotRelatedRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'CopilotRelated'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' FileRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CopilotRelatedItems'
    PropertySignature
      Identifier: '
    relatedFiles'
      TypeOperator
        ArrayType
          StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CopilotRelatedResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      TypeReference
        Identifier: ' CopilotRelatedItems'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SemanticDiagnosticsSyncRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'SemanticDiagnosticsSync'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' SemanticDiagnosticsSyncRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SemanticDiagnosticsSyncRequestArgs'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequestArgs'
    PropertySignature
      Identifier: '
    includeLinePosition'
      QuestionToken
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SemanticDiagnosticsSyncResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      UnionType
        ArrayType
          TypeReference
            Identifier: ' Diagnostic'
        ArrayType
          TypeReference
            Identifier: ' DiagnosticWithLinePosition'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SuggestionDiagnosticsSyncRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'SuggestionDiagnosticsSync'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' SuggestionDiagnosticsSyncRequestArgs'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' SuggestionDiagnosticsSyncRequestArgs'
    TypeReference
      Identifier: ' SemanticDiagnosticsSyncRequestArgs'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' SuggestionDiagnosticsSyncResponse'
    TypeReference
      Identifier: ' SemanticDiagnosticsSyncResponse'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SyntacticDiagnosticsSyncRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'SyntacticDiagnosticsSync'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' SyntacticDiagnosticsSyncRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SyntacticDiagnosticsSyncRequestArgs'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequestArgs'
    PropertySignature
      Identifier: '
    includeLinePosition'
      QuestionToken
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SyntacticDiagnosticsSyncResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      UnionType
        ArrayType
          TypeReference
            Identifier: ' Diagnostic'
        ArrayType
          TypeReference
            Identifier: ' DiagnosticWithLinePosition'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GeterrForProjectRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * the file requesting project error list
     */
    file'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Delay in milliseconds to wait before starting to compute
     * errors for the files in the file list
     */
    delay'
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GeterrForProjectRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Request'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'GeterrForProject'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' GeterrForProjectRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GeterrRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * List of file names for which to compute compiler errors.
     * The files will be checked in list order.
     */
    files'
      ArrayType
        ParenthesizedType
          UnionType
            StringKeyword
            TypeReference
              Identifier: ' FileRangesRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * Delay in milliseconds to wait before starting to compute
     * errors for the files in the file list
     */
    delay'
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GeterrRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Request'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'Geterr'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' GeterrRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' FileRange'
    PropertySignature
      Identifier: '
    /**
     * The line number for the request (1-based).
     */
    startLine'
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * The character offset (on the line) for the request (1-based).
     */
    startOffset'
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * The line number for the request (1-based).
     */
    endLine'
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * The character offset (on the line) for the request (1-based).
     */
    endOffset'
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' FileRangesRequestArgs'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Pick'
        TypeReference
          Identifier: 'FileRequestArgs'
        LiteralType
          StringLiteral
    PropertySignature
      Identifier: '
    ranges'
      ArrayType
        TypeReference
          Identifier: ' FileRange'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' RequestCompletedEventName'
    LiteralType
      StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' RequestCompletedEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Event'
    PropertySignature
      Identifier: '
    event'
      TypeReference
        Identifier: ' RequestCompletedEventName'
    PropertySignature
      Identifier: '
    body'
      TypeReference
        Identifier: ' RequestCompletedEventBody'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' RequestCompletedEventBody'
    PropertySignature
      Identifier: '
    request_seq'
      NumberKeyword
    PropertySignature
      Identifier: '
    performanceData'
      QuestionToken
      TypeReference
        Identifier: ' PerformanceData'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Diagnostic'
    PropertySignature
      Identifier: '
    /**
     * Starting file location at which text applies.
     */
    start'
      TypeReference
        Identifier: ' Location'
    PropertySignature
      Identifier: '
    /**
     * The last file location at which the text applies.
     */
    end'
      TypeReference
        Identifier: ' Location'
    PropertySignature
      Identifier: '
    /**
     * Text of diagnostic message.
     */
    text'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The category of the diagnostic message, e.g. "error", "warning", or "suggestion".
     */
    category'
      StringKeyword
    PropertySignature
      Identifier: '
    reportsUnnecessary'
      QuestionToken
      TypeLiteral
    PropertySignature
      Identifier: '
    reportsDeprecated'
      QuestionToken
      TypeLiteral
    PropertySignature
      Identifier: '
    /**
     * Any related spans the diagnostic may have, such as other locations relevant to an error, such as declarartion sites
     */
    relatedInformation'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' DiagnosticRelatedInformation'
    PropertySignature
      Identifier: '
    /**
     * The error code of the diagnostic message.
     */
    code'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * The name of the plugin reporting the message.
     */
    source'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' DiagnosticWithFileName'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Diagnostic'
    PropertySignature
      Identifier: '
    /**
     * Name of the file the diagnostic is in
     */
    fileName'
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' DiagnosticRelatedInformation'
    PropertySignature
      Identifier: '
    /**
     * The category of the related information message, e.g. "error", "warning", or "suggestion".
     */
    category'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The code used ot identify the related information
     */
    code'
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Text of related or additional information.
     */
    message'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Associated location
     */
    span'
      QuestionToken
      TypeReference
        Identifier: ' FileSpan'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' DiagnosticEventBody'
    PropertySignature
      Identifier: '
    /**
     * The file for which diagnostic information is reported.
     */
    file'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * An array of diagnostic information items.
     */
    diagnostics'
      ArrayType
        TypeReference
          Identifier: ' Diagnostic'
    PropertySignature
      Identifier: '
    /**
     * Spans where the region diagnostic was requested, if this is a region semantic diagnostic event.
     */
    spans'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' TextSpan'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' DiagnosticEventKind'
    UnionType
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
      LiteralType
        StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' DiagnosticEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Event'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      TypeReference
        Identifier: ' DiagnosticEventBody'
    PropertySignature
      Identifier: '
    event'
      TypeReference
        Identifier: ' DiagnosticEventKind'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ConfigFileDiagnosticEventBody'
    PropertySignature
      Identifier: '
    /**
     * The file which trigged the searching and error-checking of the config file
     */
    triggerFile'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The name of the found config file.
     */
    configFile'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * An arry of diagnostic information items for the found config file.
     */
    diagnostics'
      ArrayType
        TypeReference
          Identifier: ' DiagnosticWithFileName'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ConfigFileDiagnosticEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Event'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      TypeReference
        Identifier: ' ConfigFileDiagnosticEventBody'
    PropertySignature
      Identifier: '
    event'
      LiteralType
        StringLiteral
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' ProjectLanguageServiceStateEventName'
    LiteralType
      StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ProjectLanguageServiceStateEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Event'
    PropertySignature
      Identifier: '
    event'
      TypeReference
        Identifier: ' ProjectLanguageServiceStateEventName'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      TypeReference
        Identifier: ' ProjectLanguageServiceStateEventBody'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ProjectLanguageServiceStateEventBody'
    PropertySignature
      Identifier: '
    /**
     * Project name that has changes in the state of language service.
     * For configured projects this will be the config file path.
     * For external projects this will be the name of the projects specified when project was open.
     * For inferred projects this event is not raised.
     */
    projectName'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * True if language service state switched from disabled to enabled
     * and false otherwise.
     */
    languageServiceEnabled'
      BooleanKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' ProjectsUpdatedInBackgroundEventName'
    LiteralType
      StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ProjectsUpdatedInBackgroundEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Event'
    PropertySignature
      Identifier: '
    event'
      TypeReference
        Identifier: ' ProjectsUpdatedInBackgroundEventName'
    PropertySignature
      Identifier: '
    body'
      TypeReference
        Identifier: ' ProjectsUpdatedInBackgroundEventBody'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ProjectsUpdatedInBackgroundEventBody'
    PropertySignature
      Identifier: '
    /**
     * Current set of open files
     */
    openFiles'
      ArrayType
        StringKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' ProjectLoadingStartEventName'
    LiteralType
      StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ProjectLoadingStartEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Event'
    PropertySignature
      Identifier: '
    event'
      TypeReference
        Identifier: ' ProjectLoadingStartEventName'
    PropertySignature
      Identifier: '
    body'
      TypeReference
        Identifier: ' ProjectLoadingStartEventBody'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ProjectLoadingStartEventBody'
    PropertySignature
      Identifier: '
    /** name of the project */
    projectName'
      StringKeyword
    PropertySignature
      Identifier: '
    /** reason for loading */
    reason'
      StringKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' ProjectLoadingFinishEventName'
    LiteralType
      StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ProjectLoadingFinishEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Event'
    PropertySignature
      Identifier: '
    event'
      TypeReference
        Identifier: ' ProjectLoadingFinishEventName'
    PropertySignature
      Identifier: '
    body'
      TypeReference
        Identifier: ' ProjectLoadingFinishEventBody'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ProjectLoadingFinishEventBody'
    PropertySignature
      Identifier: '
    /** name of the project */
    projectName'
      StringKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' SurveyReadyEventName'
    LiteralType
      StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SurveyReadyEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Event'
    PropertySignature
      Identifier: '
    event'
      TypeReference
        Identifier: ' SurveyReadyEventName'
    PropertySignature
      Identifier: '
    body'
      TypeReference
        Identifier: ' SurveyReadyEventBody'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SurveyReadyEventBody'
    PropertySignature
      Identifier: '
    /** Name of the survey. This is an internal machine- and programmer-friendly name */
    surveyId'
      StringKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' LargeFileReferencedEventName'
    LiteralType
      StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' LargeFileReferencedEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Event'
    PropertySignature
      Identifier: '
    event'
      TypeReference
        Identifier: ' LargeFileReferencedEventName'
    PropertySignature
      Identifier: '
    body'
      TypeReference
        Identifier: ' LargeFileReferencedEventBody'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' LargeFileReferencedEventBody'
    PropertySignature
      Identifier: '
    /**
     * name of the large file being loaded
     */
    file'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * size of the file
     */
    fileSize'
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * max file size allowed on the server
     */
    maxFileSize'
      NumberKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' CreateFileWatcherEventName'
    LiteralType
      StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CreateFileWatcherEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Event'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' event'
      TypeReference
        Identifier: ' CreateFileWatcherEventName'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' body'
      TypeReference
        Identifier: ' CreateFileWatcherEventBody'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CreateFileWatcherEventBody'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' id'
      NumberKeyword
    PropertySignature
      ReadonlyKeyword
      Identifier: ' path'
      StringKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' CreateDirectoryWatcherEventName'
    LiteralType
      StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CreateDirectoryWatcherEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Event'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' event'
      TypeReference
        Identifier: ' CreateDirectoryWatcherEventName'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' body'
      TypeReference
        Identifier: ' CreateDirectoryWatcherEventBody'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CreateDirectoryWatcherEventBody'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' id'
      NumberKeyword
    PropertySignature
      ReadonlyKeyword
      Identifier: ' path'
      StringKeyword
    PropertySignature
      ReadonlyKeyword
      Identifier: ' recursive'
      BooleanKeyword
    PropertySignature
      ReadonlyKeyword
      Identifier: ' ignoreUpdate'
      QuestionToken
      BooleanKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' CloseFileWatcherEventName'
    LiteralType
      StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CloseFileWatcherEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Event'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' event'
      TypeReference
        Identifier: ' CloseFileWatcherEventName'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' body'
      TypeReference
        Identifier: ' CloseFileWatcherEventBody'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CloseFileWatcherEventBody'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' id'
      NumberKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' AnyEvent'
    UnionType
      TypeReference
        Identifier: ' RequestCompletedEvent'
      TypeReference
        Identifier: ' DiagnosticEvent'
      TypeReference
        Identifier: ' ConfigFileDiagnosticEvent'
      TypeReference
        Identifier: ' ProjectLanguageServiceStateEvent'
      TypeReference
        Identifier: ' TelemetryEvent'
      TypeReference
        Identifier: ' ProjectsUpdatedInBackgroundEvent'
      TypeReference
        Identifier: ' ProjectLoadingStartEvent'
      TypeReference
        Identifier: ' ProjectLoadingFinishEvent'
      TypeReference
        Identifier: ' SurveyReadyEvent'
      TypeReference
        Identifier: ' LargeFileReferencedEvent'
      TypeReference
        Identifier: ' CreateFileWatcherEvent'
      TypeReference
        Identifier: ' CreateDirectoryWatcherEvent'
      TypeReference
        Identifier: ' CloseFileWatcherEvent'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ReloadRequestArgs'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * Name of temporary file from which to reload file
     * contents. May be same as file.
     */
    tmpfile'
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ReloadRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'Reload'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' ReloadRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ReloadResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SavetoRequestArgs'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * Name of temporary file into which to save server's view of
     * file contents.
     */
    tmpfile'
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SavetoRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'Saveto'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' SavetoRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' NavtoRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * Search term to navigate to from current location; term can
     * be '.*' or an identifier prefix.
     */
    searchValue'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     *  Optional limit on the number of items to return.
     */
    maxResultCount'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * The file for the request (absolute pathname required).
     */
    file'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Optional flag to indicate we want results for just the current file
     * or the entire project.
     */
    currentFileOnly'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    projectFileName'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' NavtoRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Request'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'Navto'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' NavtoRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' NavtoItem'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileSpan'
    PropertySignature
      Identifier: '
    /**
     * The symbol's name.
     */
    name'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The symbol's kind (such as 'className' or 'parameterName').
     */
    kind'
      TypeReference
        Identifier: ' ScriptElementKind'
    PropertySignature
      Identifier: '
    /**
     * exact, substring, or prefix.
     */
    matchKind'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * If this was a case sensitive or insensitive match.
     */
    isCaseSensitive'
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Optional modifiers for the kind (such as 'public').
     */
    kindModifiers'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Name of symbol's container symbol (if any); for example,
     * the class name if symbol is a class member.
     */
    containerName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Kind of symbol's container symbol (if any).
     */
    containerKind'
      QuestionToken
      TypeReference
        Identifier: ' ScriptElementKind'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' NavtoResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' NavtoItem'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ChangeRequestArgs'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FormatRequestArgs'
    PropertySignature
      Identifier: '
    /**
     * Optional string to insert at location (file, line, offset).
     */
    insertString'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ChangeRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'Change'
    PropertySignature
      Identifier: '
    arguments'
      TypeReference
        Identifier: ' ChangeRequestArgs'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' BraceResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' TextSpan'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' BraceRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'Brace'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' NavBarRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'NavBar'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' NavTreeRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'NavTree'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' NavigationBarItem'
    PropertySignature
      Identifier: '
    /**
     * The item's display text.
     */
    text'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The symbol's kind (such as 'className' or 'parameterName').
     */
    kind'
      TypeReference
        Identifier: ' ScriptElementKind'
    PropertySignature
      Identifier: '
    /**
     * Optional modifiers for the kind (such as 'public').
     */
    kindModifiers'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The definition locations of the item.
     */
    spans'
      ArrayType
        TypeReference
          Identifier: ' TextSpan'
    PropertySignature
      Identifier: '
    /**
     * Optional children.
     */
    childItems'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' NavigationBarItem'
    PropertySignature
      Identifier: '
    /**
     * Number of levels deep this item should appear.
     */
    indent'
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' NavigationTree'
    PropertySignature
      Identifier: '
    text'
      StringKeyword
    PropertySignature
      Identifier: '
    kind'
      TypeReference
        Identifier: ' ScriptElementKind'
    PropertySignature
      Identifier: '
    kindModifiers'
      StringKeyword
    PropertySignature
      Identifier: '
    spans'
      ArrayType
        TypeReference
          Identifier: ' TextSpan'
    PropertySignature
      Identifier: '
    nameSpan'
      UnionType
        TypeReference
          Identifier: ' TextSpan'
        UndefinedKeyword
    PropertySignature
      Identifier: '
    childItems'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' NavigationTree'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' TelemetryEventName'
    LiteralType
      StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TelemetryEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Event'
    PropertySignature
      Identifier: '
    event'
      TypeReference
        Identifier: ' TelemetryEventName'
    PropertySignature
      Identifier: '
    body'
      TypeReference
        Identifier: ' TelemetryEventBody'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TelemetryEventBody'
    PropertySignature
      Identifier: '
    telemetryEventName'
      StringKeyword
    PropertySignature
      Identifier: '
    payload'
      AnyKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' TypesInstallerInitializationFailedEventName'
    LiteralType
      StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TypesInstallerInitializationFailedEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Event'
    PropertySignature
      Identifier: '
    event'
      TypeReference
        Identifier: ' TypesInstallerInitializationFailedEventName'
    PropertySignature
      Identifier: '
    body'
      TypeReference
        Identifier: ' TypesInstallerInitializationFailedEventBody'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TypesInstallerInitializationFailedEventBody'
    PropertySignature
      Identifier: '
    message'
      StringKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' TypingsInstalledTelemetryEventName'
    LiteralType
      StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TypingsInstalledTelemetryEventBody'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' TelemetryEventBody'
    PropertySignature
      Identifier: '
    telemetryEventName'
      TypeReference
        Identifier: ' TypingsInstalledTelemetryEventName'
    PropertySignature
      Identifier: '
    payload'
      TypeReference
        Identifier: ' TypingsInstalledTelemetryEventPayload'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TypingsInstalledTelemetryEventPayload'
    PropertySignature
      Identifier: '
    /**
     * Comma separated list of installed typing packages
     */
    installedPackages'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * true if install request succeeded, otherwise - false
     */
    installSuccess'
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * version of typings installer
     */
    typingsInstallerVersion'
      StringKeyword
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' BeginInstallTypesEventName'
    LiteralType
      StringLiteral
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' EndInstallTypesEventName'
    LiteralType
      StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' BeginInstallTypesEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Event'
    PropertySignature
      Identifier: '
    event'
      TypeReference
        Identifier: ' BeginInstallTypesEventName'
    PropertySignature
      Identifier: '
    body'
      TypeReference
        Identifier: ' BeginInstallTypesEventBody'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' EndInstallTypesEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Event'
    PropertySignature
      Identifier: '
    event'
      TypeReference
        Identifier: ' EndInstallTypesEventName'
    PropertySignature
      Identifier: '
    body'
      TypeReference
        Identifier: ' EndInstallTypesEventBody'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' InstallTypesEventBody'
    PropertySignature
      Identifier: '
    /**
     * correlation id to match begin and end events
     */
    eventId'
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * list of packages to install
     */
    packages'
      TypeOperator
        ArrayType
          StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' BeginInstallTypesEventBody'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' InstallTypesEventBody'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' EndInstallTypesEventBody'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' InstallTypesEventBody'
    PropertySignature
      Identifier: '
    /**
     * true if installation succeeded, otherwise false
     */
    success'
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' NavBarResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' NavigationBarItem'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' NavTreeResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      Identifier: '
    body'
      QuestionToken
      TypeReference
        Identifier: ' NavigationTree'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' CallHierarchyItem'
    TypeReference
      Identifier: ' ChangePropertyTypes'
      TypeReference
        QualifiedName
          Identifier: 'ts'
          Identifier: 'CallHierarchyItem'
      TypeLiteral
        PropertySignature
          Identifier: '
    span'
          TypeReference
            Identifier: ' TextSpan'
        PropertySignature
          Identifier: '
    selectionSpan'
          TypeReference
            Identifier: ' TextSpan'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CallHierarchyIncomingCall'
    PropertySignature
      Identifier: '
    from'
      TypeReference
        Identifier: ' CallHierarchyItem'
    PropertySignature
      Identifier: '
    fromSpans'
      ArrayType
        TypeReference
          Identifier: ' TextSpan'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CallHierarchyOutgoingCall'
    PropertySignature
      Identifier: '
    to'
      TypeReference
        Identifier: ' CallHierarchyItem'
    PropertySignature
      Identifier: '
    fromSpans'
      ArrayType
        TypeReference
          Identifier: ' TextSpan'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' PrepareCallHierarchyRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'PrepareCallHierarchy'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' PrepareCallHierarchyResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' body'
      UnionType
        TypeReference
          Identifier: ' CallHierarchyItem'
        ArrayType
          TypeReference
            Identifier: ' CallHierarchyItem'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ProvideCallHierarchyIncomingCallsRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'ProvideCallHierarchyIncomingCalls'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ProvideCallHierarchyIncomingCallsResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' body'
      ArrayType
        TypeReference
          Identifier: ' CallHierarchyIncomingCall'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ProvideCallHierarchyOutgoingCallsRequest'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' FileLocationRequest'
    PropertySignature
      Identifier: '
    command'
      TypeReference
        QualifiedName
          Identifier: ' CommandTypes'
          Identifier: 'ProvideCallHierarchyOutgoingCalls'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ProvideCallHierarchyOutgoingCallsResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Response'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' body'
      ArrayType
        TypeReference
          Identifier: ' CallHierarchyOutgoingCall'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    ConstKeyword
    Identifier: ' IndentStyle'
    EnumMember
      Identifier: '
    None'
      StringLiteral
    EnumMember
      Identifier: '
    Block'
      StringLiteral
    EnumMember
      Identifier: '
    Smart'
      StringLiteral
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' EditorSettings'
    TypeReference
      Identifier: ' ChangePropertyTypes'
      TypeReference
        QualifiedName
          Identifier: 'ts'
          Identifier: 'EditorSettings'
      TypeLiteral
        PropertySignature
          Identifier: '
    indentStyle'
          UnionType
            TypeReference
              Identifier: ' IndentStyle'
            TypeReference
              QualifiedName
                Identifier: ' ts'
                Identifier: 'IndentStyle'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' FormatCodeSettings'
    TypeReference
      Identifier: ' ChangePropertyTypes'
      TypeReference
        QualifiedName
          Identifier: 'ts'
          Identifier: 'FormatCodeSettings'
      TypeLiteral
        PropertySignature
          Identifier: '
    indentStyle'
          UnionType
            TypeReference
              Identifier: ' IndentStyle'
            TypeReference
              QualifiedName
                Identifier: ' ts'
                Identifier: 'IndentStyle'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' CompilerOptions'
    TypeReference
      Identifier: ' ChangePropertyTypes'
      TypeReference
        Identifier: 'ChangeStringIndexSignature'
        TypeReference
          QualifiedName
            Identifier: 'ts'
            Identifier: 'CompilerOptions'
        TypeReference
          Identifier: ' CompilerOptionsValue'
      TypeLiteral
        PropertySignature
          Identifier: '
    jsx'
          UnionType
            TypeReference
              Identifier: ' JsxEmit'
            TypeReference
              QualifiedName
                Identifier: ' ts'
                Identifier: 'JsxEmit'
        PropertySignature
          Identifier: '
    module'
          UnionType
            TypeReference
              Identifier: ' ModuleKind'
            TypeReference
              QualifiedName
                Identifier: ' ts'
                Identifier: 'ModuleKind'
        PropertySignature
          Identifier: '
    moduleResolution'
          UnionType
            TypeReference
              Identifier: ' ModuleResolutionKind'
            TypeReference
              QualifiedName
                Identifier: ' ts'
                Identifier: 'ModuleResolutionKind'
        PropertySignature
          Identifier: '
    newLine'
          UnionType
            TypeReference
              Identifier: ' NewLineKind'
            TypeReference
              QualifiedName
                Identifier: ' ts'
                Identifier: 'NewLineKind'
        PropertySignature
          Identifier: '
    target'
          UnionType
            TypeReference
              Identifier: ' ScriptTarget'
            TypeReference
              QualifiedName
                Identifier: ' ts'
                Identifier: 'ScriptTarget'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    ConstKeyword
    Identifier: ' JsxEmit'
    EnumMember
      Identifier: '
    None'
      StringLiteral
    EnumMember
      Identifier: '
    Preserve'
      StringLiteral
    EnumMember
      Identifier: '
    ReactNative'
      StringLiteral
    EnumMember
      Identifier: '
    React'
      StringLiteral
    EnumMember
      Identifier: '
    ReactJSX'
      StringLiteral
    EnumMember
      Identifier: '
    ReactJSXDev'
      StringLiteral
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    ConstKeyword
    Identifier: ' ModuleKind'
    EnumMember
      Identifier: '
    None'
      StringLiteral
    EnumMember
      Identifier: '
    CommonJS'
      StringLiteral
    EnumMember
      Identifier: '
    AMD'
      StringLiteral
    EnumMember
      Identifier: '
    UMD'
      StringLiteral
    EnumMember
      Identifier: '
    System'
      StringLiteral
    EnumMember
      Identifier: '
    ES6'
      StringLiteral
    EnumMember
      Identifier: '
    ES2015'
      StringLiteral
    EnumMember
      Identifier: '
    ES2020'
      StringLiteral
    EnumMember
      Identifier: '
    ES2022'
      StringLiteral
    EnumMember
      Identifier: '
    ESNext'
      StringLiteral
    EnumMember
      Identifier: '
    Node16'
      StringLiteral
    EnumMember
      Identifier: '
    NodeNext'
      StringLiteral
    EnumMember
      Identifier: '
    Preserve'
      StringLiteral
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    ConstKeyword
    Identifier: ' ModuleResolutionKind'
    EnumMember
      Identifier: '
    Classic'
      StringLiteral
    EnumMember
      Identifier: '
    /** @deprecated Renamed to `Node10` */
    Node'
      StringLiteral
    EnumMember
      Identifier: '
    /** @deprecated Renamed to `Node10` */
    NodeJs'
      StringLiteral
    EnumMember
      Identifier: '
    Node10'
      StringLiteral
    EnumMember
      Identifier: '
    Node16'
      StringLiteral
    EnumMember
      Identifier: '
    NodeNext'
      StringLiteral
    EnumMember
      Identifier: '
    Bundler'
      StringLiteral
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    ConstKeyword
    Identifier: ' NewLineKind'
    EnumMember
      Identifier: '
    Crlf'
      StringLiteral
    EnumMember
      Identifier: '
    Lf'
      StringLiteral
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    ConstKeyword
    Identifier: ' ScriptTarget'
    EnumMember
      Identifier: '
    /** @deprecated */
    ES3'
      StringLiteral
    EnumMember
      Identifier: '
    ES5'
      StringLiteral
    EnumMember
      Identifier: '
    ES6'
      StringLiteral
    EnumMember
      Identifier: '
    ES2015'
      StringLiteral
    EnumMember
      Identifier: '
    ES2016'
      StringLiteral
    EnumMember
      Identifier: '
    ES2017'
      StringLiteral
    EnumMember
      Identifier: '
    ES2018'
      StringLiteral
    EnumMember
      Identifier: '
    ES2019'
      StringLiteral
    EnumMember
      Identifier: '
    ES2020'
      StringLiteral
    EnumMember
      Identifier: '
    ES2021'
      StringLiteral
    EnumMember
      Identifier: '
    ES2022'
      StringLiteral
    EnumMember
      Identifier: '
    ES2023'
      StringLiteral
    EnumMember
      Identifier: '
    ESNext'
      StringLiteral
    EnumMember
      Identifier: '
    JSON'
      StringLiteral
    EnumMember
      Identifier: '
    Latest'
      StringLiteral
