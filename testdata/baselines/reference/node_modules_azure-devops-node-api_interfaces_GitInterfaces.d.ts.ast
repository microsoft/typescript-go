SourceFile
  ImportEqualsDeclaration
    Identifier: ' PolicyInterfaces'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' TfsCoreInterfaces'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' VSSInterfaces'
    ExternalModuleReference
      StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' AdvSecEnablementStatus'
    PropertySignature
      Identifier: '
    /**
     * Enabled by VSID
     */
    changedById'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Enabled changed on datetime
     */
    changedOnDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * True if Dependabot is enabled for the repository, false if it is disabled.
     */
    dependabotEnabled'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Enabled status 0 disabled, 1 enabled, Null never explicitly set, always whatever project is, ya this should probably be an enum somewhere
     */
    enabled'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * ProjectId
     */
    projectId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * RepositoryId
     */
    repositoryId'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' AdvSecEnablementUpdate'
    PropertySignature
      Identifier: '
    /**
     * New Dependabot status.
     */
    newDependabotStatus'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * New status
     */
    newStatus'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * ProjectId
     */
    projectId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * RepositoryId Actual RepositoryId to Modify or Magic Repository Id "FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF" for ALL Repositories for that project
     */
    repositoryId'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' AssociatedWorkItem'
    PropertySignature
      Identifier: '
    assignedTo'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Id of associated the work item.
     */
    id'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    state'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    title'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * REST Url of the work item.
     */
    url'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    webUrl'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    workItemType'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' AsyncGitOperationNotification'
    PropertySignature
      Identifier: '
    operationId'
      QuestionToken
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' AsyncRefOperationCommitLevelEventNotification'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' AsyncGitOperationNotification'
    PropertySignature
      Identifier: '
    commitId'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' AsyncRefOperationCompletedNotification'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' AsyncGitOperationNotification'
    PropertySignature
      Identifier: '
    newRefName'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' AsyncRefOperationConflictNotification'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' AsyncRefOperationCommitLevelEventNotification'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' AsyncRefOperationGeneralFailureNotification'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' AsyncGitOperationNotification'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' AsyncRefOperationProgressNotification'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' AsyncRefOperationCommitLevelEventNotification'
    PropertySignature
      Identifier: '
    progress'
      QuestionToken
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' AsyncRefOperationTimeoutNotification'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' AsyncGitOperationNotification'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Attachment'
    PropertySignature
      Identifier: '
    /**
     * Links to other related objects.
     */
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * The person that uploaded this attachment.
     */
    author'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' VSSInterfaces'
          Identifier: 'IdentityRef'
    PropertySignature
      Identifier: '
    /**
     * Content hash of on-disk representation of file content. Its calculated by the server by using SHA1 hash function.
     */
    contentHash'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The time the attachment was uploaded.
     */
    createdDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * The description of the attachment.
     */
    description'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The display name of the attachment. Can't be null or empty.
     */
    displayName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Id of the attachment.
     */
    id'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Extended properties.
     */
    properties'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * The url to download the content of the attachment.
     */
    url'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' AutoCompleteUpdatedEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' RealTimePullRequestEvent'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' BillableCommitter'
    PropertySignature
      Identifier: '
    /**
     * RepositoryId commit was pushed to.
     */
    repoId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Visual Studio ID /Team Foundation ID
     */
    vSID'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' BillableCommitterDetail'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' BillableCommitter'
    PropertySignature
      Identifier: '
    /**
     * ID (SHA-1) of the commit.
     */
    commitId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Committer email address after parsing.
     */
    committerEmail'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Time reported by the commit.
     */
    commitTime'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * DisplayName of the Pusher.
     */
    displayName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * MailNickName of the Pusher.
     */
    mailNickName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Project Id commit was pushed to.
     */
    projectId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Project name commit was pushed to.
     */
    projectName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Time of the push that contained the commit.
     */
    pushedTime'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * Pusher Id for the push.
     */
    pusherId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Push Id that contained the commit.
     */
    pushId'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Repository name commit was pushed to.
     */
    repoName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * SamAccountName of the Pusher.
     */
    samAccountName'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' BillablePusher'
    PropertySignature
      Identifier: '
    /**
     * ProjectId that was pushed to.
     */
    projectId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * RepositoryId that was pushed to.
     */
    repoId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Visual Studio ID /Team Foundation ID
     */
    vSID'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' BranchUpdatedEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' RealTimePullRequestEvent'
    PropertySignature
      Identifier: '
    /**
     * If true, the source branch of the pull request was updated
     */
    isSourceUpdate'
      QuestionToken
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Change'
    TypeParameter
      Identifier: 'T'
    PropertySignature
      Identifier: '
    /**
     * The type of change that was made to the item.
     */
    changeType'
      QuestionToken
      TypeReference
        Identifier: ' VersionControlChangeType'
    PropertySignature
      Identifier: '
    /**
     * Current version.
     */
    item'
      QuestionToken
      TypeReference
        Identifier: ' T'
    PropertySignature
      Identifier: '
    /**
     * Content of the item after the change.
     */
    newContent'
      QuestionToken
      TypeReference
        Identifier: ' ItemContent'
    PropertySignature
      Identifier: '
    /**
     * Path of the item on the server.
     */
    sourceServerItem'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * URL to retrieve the item.
     */
    url'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ChangeCountDictionary'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ChangeList'
    TypeParameter
      Identifier: 'T'
    PropertySignature
      Identifier: '
    allChangesIncluded'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    changeCounts'
      QuestionToken
      TypeLiteral
        IndexSignature
          Parameter
            Identifier: 'key'
            NumberKeyword
          NumberKeyword
    PropertySignature
      Identifier: '
    changes'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' Change'
          TypeReference
            Identifier: 'T'
    PropertySignature
      Identifier: '
    comment'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    commentTruncated'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    creationDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    notes'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' CheckinNote'
    PropertySignature
      Identifier: '
    owner'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    ownerDisplayName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    ownerId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    sortDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    version'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ChangeListSearchCriteria'
    PropertySignature
      Identifier: '
    /**
     * If provided, a version descriptor to compare against base
     */
    compareVersion'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * If true, don't include delete history entries
     */
    excludeDeletes'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Whether or not to follow renames for the given item being queried
     */
    followRenames'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * If provided, only include history entries created after this date (string)
     */
    fromDate'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * If provided, a version descriptor for the earliest change list to include
     */
    fromVersion'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Path of item to search under. If the itemPaths memebr is used then it will take precedence over this.
     */
    itemPath'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * List of item paths to search under. If this member is used then itemPath will be ignored.
     */
    itemPaths'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Version of the items to search
     */
    itemVersion'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Number of results to skip (used when clicking more...)
     */
    skip'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * If provided, only include history entries created before this date (string)
     */
    toDate'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * If provided, the maximum number of history entries to return
     */
    top'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * If provided, a version descriptor for the latest change list to include
     */
    toVersion'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Alias or display name of user who made the changes
     */
    user'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CheckinNote'
    PropertySignature
      Identifier: '
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    value'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Comment'
    PropertySignature
      Identifier: '
    /**
     * Links to other related objects.
     */
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * The author of the comment.
     */
    author'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' VSSInterfaces'
          Identifier: 'IdentityRef'
    PropertySignature
      Identifier: '
    /**
     * The comment type at the time of creation.
     */
    commentType'
      QuestionToken
      TypeReference
        Identifier: ' CommentType'
    PropertySignature
      Identifier: '
    /**
     * The comment content.
     */
    content'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The comment ID. IDs start at 1 and are unique to a pull request.
     */
    id'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Whether or not this comment was soft-deleted.
     */
    isDeleted'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * The date the comment's content was last updated.
     */
    lastContentUpdatedDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * The date the comment was last updated.
     */
    lastUpdatedDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * The ID of the parent comment. This is used for replies.
     */
    parentCommentId'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * The date the comment was first published.
     */
    publishedDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * A list of the users who have liked this comment.
     */
    usersLiked'
      QuestionToken
      ArrayType
        TypeReference
          QualifiedName
            Identifier: ' VSSInterfaces'
            Identifier: 'IdentityRef'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CommentIterationContext'
    PropertySignature
      Identifier: '
    /**
     * The iteration of the file on the left side of the diff when the thread was created. If this value is equal to SecondComparingIteration, then this version is the common commit between the source and target branches of the pull request.
     */
    firstComparingIteration'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * The iteration of the file on the right side of the diff when the thread was created.
     */
    secondComparingIteration'
      QuestionToken
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CommentPosition'
    PropertySignature
      Identifier: '
    /**
     * The line number of a thread's position. Starts at 1.
     */
    line'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * The character offset of a thread's position inside of a line. Starts at 1.
     */
    offset'
      QuestionToken
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CommentThread'
    PropertySignature
      Identifier: '
    /**
     * Links to other related objects.
     */
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * A list of the comments.
     */
    comments'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' Comment'
    PropertySignature
      Identifier: '
    /**
     * The comment thread id.
     */
    id'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Set of identities related to this thread
     */
    identities'
      QuestionToken
      TypeLiteral
        IndexSignature
          Parameter
            Identifier: 'key'
            StringKeyword
          TypeReference
            QualifiedName
              Identifier: ' VSSInterfaces'
              Identifier: 'IdentityRef'
    PropertySignature
      Identifier: '
    /**
     * Specify if the thread is deleted which happens when all comments are deleted.
     */
    isDeleted'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * The time this thread was last updated.
     */
    lastUpdatedDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * Optional properties associated with the thread as a collection of key-value pairs.
     */
    properties'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * The time this thread was published.
     */
    publishedDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * The status of the comment thread.
     */
    status'
      QuestionToken
      TypeReference
        Identifier: ' CommentThreadStatus'
    PropertySignature
      Identifier: '
    /**
     * Specify thread context such as position in left/right file.
     */
    threadContext'
      QuestionToken
      TypeReference
        Identifier: ' CommentThreadContext'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CommentThreadContext'
    PropertySignature
      Identifier: '
    /**
     * File path relative to the root of the repository. It's up to the client to use any path format.
     */
    filePath'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Position of last character of the thread's span in left file.
     */
    leftFileEnd'
      QuestionToken
      TypeReference
        Identifier: ' CommentPosition'
    PropertySignature
      Identifier: '
    /**
     * Position of first character of the thread's span in left file.
     */
    leftFileStart'
      QuestionToken
      TypeReference
        Identifier: ' CommentPosition'
    PropertySignature
      Identifier: '
    /**
     * Position of last character of the thread's span in right file.
     */
    rightFileEnd'
      QuestionToken
      TypeReference
        Identifier: ' CommentPosition'
    PropertySignature
      Identifier: '
    /**
     * Position of first character of the thread's span in right file.
     */
    rightFileStart'
      QuestionToken
      TypeReference
        Identifier: ' CommentPosition'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' CommentThreadStatus'
    EnumMember
      Identifier: '
    /**
     * The thread status is unknown.
     */
    Unknown'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The thread status is active.
     */
    Active'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The thread status is resolved as fixed.
     */
    Fixed'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The thread status is resolved as won't fix.
     */
    WontFix'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The thread status is closed.
     */
    Closed'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The thread status is resolved as by design.
     */
    ByDesign'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The thread status is pending.
     */
    Pending'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CommentTrackingCriteria'
    PropertySignature
      Identifier: '
    /**
     * The iteration of the file on the left side of the diff that the thread will be tracked to. Threads were tracked if this is greater than 0.
     */
    firstComparingIteration'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Original filepath the thread was created on before tracking. This will be different than the current thread filepath if the file in question was renamed in a later iteration.
     */
    origFilePath'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Original position of last character of the thread's span in left file.
     */
    origLeftFileEnd'
      QuestionToken
      TypeReference
        Identifier: ' CommentPosition'
    PropertySignature
      Identifier: '
    /**
     * Original position of first character of the thread's span in left file.
     */
    origLeftFileStart'
      QuestionToken
      TypeReference
        Identifier: ' CommentPosition'
    PropertySignature
      Identifier: '
    /**
     * Original position of last character of the thread's span in right file.
     */
    origRightFileEnd'
      QuestionToken
      TypeReference
        Identifier: ' CommentPosition'
    PropertySignature
      Identifier: '
    /**
     * Original position of first character of the thread's span in right file.
     */
    origRightFileStart'
      QuestionToken
      TypeReference
        Identifier: ' CommentPosition'
    PropertySignature
      Identifier: '
    /**
     * The iteration of the file on the right side of the diff that the thread will be tracked to. Threads were tracked if this is greater than 0.
     */
    secondComparingIteration'
      QuestionToken
      NumberKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' CommentType'
    EnumMember
      Identifier: '
    /**
     * The comment type is not known.
     */
    Unknown'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * This is a regular user comment.
     */
    Text'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The comment comes as a result of a code change.
     */
    CodeChange'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The comment represents a system message.
     */
    System'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CompletionErrorsEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' RealTimePullRequestEvent'
    PropertySignature
      Identifier: '
    /**
     * The error message associated with the completion error
     */
    errorMessage'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' DiscussionsUpdatedEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' RealTimePullRequestEvent'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' FileContentMetadata'
    PropertySignature
      Identifier: '
    contentType'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    encoding'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    extension'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    fileName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    isBinary'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    isImage'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    vsLink'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' FileDiff'
    PropertySignature
      Identifier: '
    /**
     * The collection of line diff blocks
     */
    lineDiffBlocks'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' LineDiffBlock'
    PropertySignature
      Identifier: '
    /**
     * Original path of item if different from current path.
     */
    originalPath'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Current path of item
     */
    path'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' FileDiffParams'
    PropertySignature
      Identifier: '
    /**
     * Original path of the file
     */
    originalPath'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Current path of the file
     */
    path'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' FileDiffsCriteria'
    PropertySignature
      Identifier: '
    /**
     * Commit ID of the base version
     */
    baseVersionCommit'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * List of parameters for each of the files for which we need to get the file diff
     */
    fileDiffParams'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' FileDiffParams'
    PropertySignature
      Identifier: '
    /**
     * Commit ID of the target version
     */
    targetVersionCommit'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitAnnotatedTag'
    PropertySignature
      Identifier: '
    /**
     * The tagging Message
     */
    message'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The name of the annotated tag.
     */
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The objectId (Sha1Id) of the tag.
     */
    objectId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * User info and date of tagging.
     */
    taggedBy'
      QuestionToken
      TypeReference
        Identifier: ' GitUserDate'
    PropertySignature
      Identifier: '
    /**
     * Tagged git object.
     */
    taggedObject'
      QuestionToken
      TypeReference
        Identifier: ' GitObject'
    PropertySignature
      Identifier: '
    url'
      QuestionToken
      StringKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' GitAsyncOperationStatus'
    EnumMember
      Identifier: '
    /**
     * The operation is waiting in a queue and has not yet started.
     */
    Queued'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The operation is currently in progress.
     */
    InProgress'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The operation has completed.
     */
    Completed'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The operation has failed. Check for an error message.
     */
    Failed'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The operation has been abandoned.
     */
    Abandoned'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitAsyncRefOperation'
    PropertySignature
      Identifier: '
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    detailedStatus'
      QuestionToken
      TypeReference
        Identifier: ' GitAsyncRefOperationDetail'
    PropertySignature
      Identifier: '
    parameters'
      QuestionToken
      TypeReference
        Identifier: ' GitAsyncRefOperationParameters'
    PropertySignature
      Identifier: '
    status'
      QuestionToken
      TypeReference
        Identifier: ' GitAsyncOperationStatus'
    PropertySignature
      Identifier: '
    /**
     * A URL that can be used to make further requests for status about the operation
     */
    url'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitAsyncRefOperationDetail'
    PropertySignature
      Identifier: '
    /**
     * Indicates if there was a conflict generated when trying to cherry pick or revert the changes.
     */
    conflict'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * The current commit from the list of commits that are being cherry picked or reverted.
     */
    currentCommitId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Detailed information about why the cherry pick or revert failed to complete.
     */
    failureMessage'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * A number between 0 and 1 indicating the percent complete of the operation.
     */
    progress'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Provides a status code that indicates the reason the cherry pick or revert failed.
     */
    status'
      QuestionToken
      TypeReference
        Identifier: ' GitAsyncRefOperationFailureStatus'
    PropertySignature
      Identifier: '
    /**
     * Indicates if the operation went beyond the maximum time allowed for a cherry pick or revert operation.
     */
    timedout'
      QuestionToken
      BooleanKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' GitAsyncRefOperationFailureStatus'
    EnumMember
      Identifier: '
    /**
     * No status
     */
    None'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Indicates that the ref update request could not be completed because the ref name presented in the request was not valid.
     */
    InvalidRefName'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The ref update could not be completed because, in case-insensitive mode, the ref name conflicts with an existing, differently-cased ref name.
     */
    RefNameConflict'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The ref update request could not be completed because the user lacks the permission to create a branch
     */
    CreateBranchPermissionRequired'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The ref update request could not be completed because the user lacks write permissions required to write this ref
     */
    WritePermissionRequired'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Target branch was deleted after Git async operation started
     */
    TargetBranchDeleted'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Git object is too large to materialize into memory
     */
    GitObjectTooLarge'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Identity who authorized the operation was not found
     */
    OperationIndentityNotFound'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Async operation was not found
     */
    AsyncOperationNotFound'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Unexpected failure
     */
    Other'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Initiator of async operation has signature with empty name or email
     */
    EmptyCommitterSignature'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitAsyncRefOperationParameters'
    PropertySignature
      Identifier: '
    /**
     * Proposed target branch name for the cherry pick or revert operation.
     */
    generatedRefName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The target branch for the cherry pick or revert operation.
     */
    ontoRefName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The git repository for the cherry pick or revert operation.
     */
    repository'
      QuestionToken
      TypeReference
        Identifier: ' GitRepository'
    PropertySignature
      Identifier: '
    /**
     * Details about the source of the cherry pick or revert operation (e.g. A pull request or a specific commit).
     */
    source'
      QuestionToken
      TypeReference
        Identifier: ' GitAsyncRefOperationSource'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitAsyncRefOperationSource'
    PropertySignature
      Identifier: '
    /**
     * A list of commits to cherry pick or revert
     */
    commitList'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' GitCommitRef'
    PropertySignature
      Identifier: '
    /**
     * Id of the pull request to cherry pick or revert
     */
    pullRequestId'
      QuestionToken
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitBaseVersionDescriptor'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GitVersionDescriptor'
    PropertySignature
      Identifier: '
    /**
     * Version string identifier (name of tag/branch, SHA1 of commit)
     */
    baseVersion'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Version options - Specify additional modifiers to version (e.g Previous)
     */
    baseVersionOptions'
      QuestionToken
      TypeReference
        Identifier: ' GitVersionOptions'
    PropertySignature
      Identifier: '
    /**
     * Version type (branch, tag, or commit). Determines how Id is interpreted
     */
    baseVersionType'
      QuestionToken
      TypeReference
        Identifier: ' GitVersionType'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitBlobRef'
    PropertySignature
      Identifier: '
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * SHA1 hash of git object
     */
    objectId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Size of blob content (in bytes)
     */
    size'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    url'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitBranchStats'
    PropertySignature
      Identifier: '
    /**
     * Number of commits ahead.
     */
    aheadCount'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Number of commits behind.
     */
    behindCount'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Current commit.
     */
    commit'
      QuestionToken
      TypeReference
        Identifier: ' GitCommitRef'
    PropertySignature
      Identifier: '
    /**
     * True if this is the result for the base version.
     */
    isBaseVersion'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Name of the ref.
     */
    name'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitChange'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Change'
        TypeReference
          Identifier: 'GitItem'
    PropertySignature
      Identifier: '
    /**
     * ID of the change within the group of changes.
     */
    changeId'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * New Content template to be used when pushing new changes.
     */
    newContentTemplate'
      QuestionToken
      TypeReference
        Identifier: ' GitTemplate'
    PropertySignature
      Identifier: '
    /**
     * Original path of item if different from current path.
     */
    originalPath'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitCherryPick'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GitAsyncRefOperation'
    PropertySignature
      Identifier: '
    cherryPickId'
      QuestionToken
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitCommit'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GitCommitRef'
    PropertySignature
      Identifier: '
    treeId'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitCommitChanges'
    PropertySignature
      Identifier: '
    changeCounts'
      QuestionToken
      TypeReference
        Identifier: ' ChangeCountDictionary'
    PropertySignature
      Identifier: '
    changes'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' GitChange'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitCommitDiffs'
    PropertySignature
      Identifier: '
    aheadCount'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    allChangesIncluded'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    baseCommit'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    behindCount'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    changeCounts'
      QuestionToken
      TypeLiteral
        IndexSignature
          Parameter
            Identifier: 'key'
            NumberKeyword
          NumberKeyword
    PropertySignature
      Identifier: '
    changes'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' GitChange'
    PropertySignature
      Identifier: '
    commonCommit'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    targetCommit'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitCommitRef'
    PropertySignature
      Identifier: '
    /**
     * A collection of related REST reference links.
     */
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * Author of the commit.
     */
    author'
      QuestionToken
      TypeReference
        Identifier: ' GitUserDate'
    PropertySignature
      Identifier: '
    /**
     * Counts of the types of changes (edits, deletes, etc.) included with the commit.
     */
    changeCounts'
      QuestionToken
      TypeReference
        Identifier: ' ChangeCountDictionary'
    PropertySignature
      Identifier: '
    /**
     * An enumeration of the changes included with the commit.
     */
    changes'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' GitChange'
    PropertySignature
      Identifier: '
    /**
     * Comment or message of the commit.
     */
    comment'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Indicates if the comment is truncated from the full Git commit comment message.
     */
    commentTruncated'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * ID (SHA-1) of the commit.
     */
    commitId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Committer of the commit.
     */
    committer'
      QuestionToken
      TypeReference
        Identifier: ' GitUserDate'
    PropertySignature
      Identifier: '
    /**
     * Indicates that commit contains too many changes to be displayed
     */
    commitTooManyChanges'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * An enumeration of the parent commit IDs for this commit.
     */
    parents'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The push associated with this commit.
     */
    push'
      QuestionToken
      TypeReference
        Identifier: ' GitPushRef'
    PropertySignature
      Identifier: '
    /**
     * Remote URL path to the commit.
     */
    remoteUrl'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * A list of status metadata from services and extensions that may associate additional information to the commit.
     */
    statuses'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' GitStatus'
    PropertySignature
      Identifier: '
    /**
     * REST URL for this resource.
     */
    url'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * A list of workitems associated with this commit.
     */
    workItems'
      QuestionToken
      ArrayType
        TypeReference
          QualifiedName
            Identifier: ' VSSInterfaces'
            Identifier: 'ResourceRef'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitCommitToCreate'
    PropertySignature
      Identifier: '
    baseRef'
      QuestionToken
      TypeReference
        Identifier: ' GitRef'
    PropertySignature
      Identifier: '
    comment'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    pathActions'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' GitPathAction'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitConflict'
    PropertySignature
      Identifier: '
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    conflictId'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    conflictPath'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    conflictType'
      QuestionToken
      TypeReference
        Identifier: ' GitConflictType'
    PropertySignature
      Identifier: '
    mergeBaseCommit'
      QuestionToken
      TypeReference
        Identifier: ' GitCommitRef'
    PropertySignature
      Identifier: '
    mergeOrigin'
      QuestionToken
      TypeReference
        Identifier: ' GitMergeOriginRef'
    PropertySignature
      Identifier: '
    mergeSourceCommit'
      QuestionToken
      TypeReference
        Identifier: ' GitCommitRef'
    PropertySignature
      Identifier: '
    mergeTargetCommit'
      QuestionToken
      TypeReference
        Identifier: ' GitCommitRef'
    PropertySignature
      Identifier: '
    resolutionError'
      QuestionToken
      TypeReference
        Identifier: ' GitResolutionError'
    PropertySignature
      Identifier: '
    resolutionStatus'
      QuestionToken
      TypeReference
        Identifier: ' GitResolutionStatus'
    PropertySignature
      Identifier: '
    resolvedBy'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' VSSInterfaces'
          Identifier: 'IdentityRef'
    PropertySignature
      Identifier: '
    resolvedDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    url'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitConflictAddAdd'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GitConflict'
    PropertySignature
      Identifier: '
    resolution'
      QuestionToken
      TypeReference
        Identifier: ' GitResolutionMergeContent'
    PropertySignature
      Identifier: '
    sourceBlob'
      QuestionToken
      TypeReference
        Identifier: ' GitBlobRef'
    PropertySignature
      Identifier: '
    targetBlob'
      QuestionToken
      TypeReference
        Identifier: ' GitBlobRef'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitConflictAddRename'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GitConflict'
    PropertySignature
      Identifier: '
    baseBlob'
      QuestionToken
      TypeReference
        Identifier: ' GitBlobRef'
    PropertySignature
      Identifier: '
    resolution'
      QuestionToken
      TypeReference
        Identifier: ' GitResolutionPathConflict'
    PropertySignature
      Identifier: '
    sourceBlob'
      QuestionToken
      TypeReference
        Identifier: ' GitBlobRef'
    PropertySignature
      Identifier: '
    targetBlob'
      QuestionToken
      TypeReference
        Identifier: ' GitBlobRef'
    PropertySignature
      Identifier: '
    targetOriginalPath'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitConflictDeleteEdit'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GitConflict'
    PropertySignature
      Identifier: '
    baseBlob'
      QuestionToken
      TypeReference
        Identifier: ' GitBlobRef'
    PropertySignature
      Identifier: '
    resolution'
      QuestionToken
      TypeReference
        Identifier: ' GitResolutionPickOneAction'
    PropertySignature
      Identifier: '
    targetBlob'
      QuestionToken
      TypeReference
        Identifier: ' GitBlobRef'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitConflictDeleteRename'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GitConflict'
    PropertySignature
      Identifier: '
    baseBlob'
      QuestionToken
      TypeReference
        Identifier: ' GitBlobRef'
    PropertySignature
      Identifier: '
    resolution'
      QuestionToken
      TypeReference
        Identifier: ' GitResolutionPickOneAction'
    PropertySignature
      Identifier: '
    targetBlob'
      QuestionToken
      TypeReference
        Identifier: ' GitBlobRef'
    PropertySignature
      Identifier: '
    targetNewPath'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitConflictDirectoryFile'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GitConflict'
    PropertySignature
      Identifier: '
    resolution'
      QuestionToken
      TypeReference
        Identifier: ' GitResolutionPathConflict'
    PropertySignature
      Identifier: '
    sourceTree'
      QuestionToken
      TypeReference
        Identifier: ' GitTreeRef'
    PropertySignature
      Identifier: '
    targetBlob'
      QuestionToken
      TypeReference
        Identifier: ' GitBlobRef'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitConflictEditDelete'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GitConflict'
    PropertySignature
      Identifier: '
    baseBlob'
      QuestionToken
      TypeReference
        Identifier: ' GitBlobRef'
    PropertySignature
      Identifier: '
    resolution'
      QuestionToken
      TypeReference
        Identifier: ' GitResolutionPickOneAction'
    PropertySignature
      Identifier: '
    sourceBlob'
      QuestionToken
      TypeReference
        Identifier: ' GitBlobRef'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitConflictEditEdit'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GitConflict'
    PropertySignature
      Identifier: '
    baseBlob'
      QuestionToken
      TypeReference
        Identifier: ' GitBlobRef'
    PropertySignature
      Identifier: '
    resolution'
      QuestionToken
      TypeReference
        Identifier: ' GitResolutionMergeContent'
    PropertySignature
      Identifier: '
    sourceBlob'
      QuestionToken
      TypeReference
        Identifier: ' GitBlobRef'
    PropertySignature
      Identifier: '
    targetBlob'
      QuestionToken
      TypeReference
        Identifier: ' GitBlobRef'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitConflictFileDirectory'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GitConflict'
    PropertySignature
      Identifier: '
    resolution'
      QuestionToken
      TypeReference
        Identifier: ' GitResolutionPathConflict'
    PropertySignature
      Identifier: '
    sourceBlob'
      QuestionToken
      TypeReference
        Identifier: ' GitBlobRef'
    PropertySignature
      Identifier: '
    targetTree'
      QuestionToken
      TypeReference
        Identifier: ' GitTreeRef'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitConflictRename1to2'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GitConflict'
    PropertySignature
      Identifier: '
    baseBlob'
      QuestionToken
      TypeReference
        Identifier: ' GitBlobRef'
    PropertySignature
      Identifier: '
    resolution'
      QuestionToken
      TypeReference
        Identifier: ' GitResolutionRename1to2'
    PropertySignature
      Identifier: '
    sourceBlob'
      QuestionToken
      TypeReference
        Identifier: ' GitBlobRef'
    PropertySignature
      Identifier: '
    sourceNewPath'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    targetBlob'
      QuestionToken
      TypeReference
        Identifier: ' GitBlobRef'
    PropertySignature
      Identifier: '
    targetNewPath'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitConflictRename2to1'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GitConflict'
    PropertySignature
      Identifier: '
    resolution'
      QuestionToken
      TypeReference
        Identifier: ' GitResolutionPathConflict'
    PropertySignature
      Identifier: '
    sourceNewBlob'
      QuestionToken
      TypeReference
        Identifier: ' GitBlobRef'
    PropertySignature
      Identifier: '
    sourceOriginalBlob'
      QuestionToken
      TypeReference
        Identifier: ' GitBlobRef'
    PropertySignature
      Identifier: '
    sourceOriginalPath'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    targetNewBlob'
      QuestionToken
      TypeReference
        Identifier: ' GitBlobRef'
    PropertySignature
      Identifier: '
    targetOriginalBlob'
      QuestionToken
      TypeReference
        Identifier: ' GitBlobRef'
    PropertySignature
      Identifier: '
    targetOriginalPath'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitConflictRenameAdd'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GitConflict'
    PropertySignature
      Identifier: '
    baseBlob'
      QuestionToken
      TypeReference
        Identifier: ' GitBlobRef'
    PropertySignature
      Identifier: '
    resolution'
      QuestionToken
      TypeReference
        Identifier: ' GitResolutionPathConflict'
    PropertySignature
      Identifier: '
    sourceBlob'
      QuestionToken
      TypeReference
        Identifier: ' GitBlobRef'
    PropertySignature
      Identifier: '
    sourceOriginalPath'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    targetBlob'
      QuestionToken
      TypeReference
        Identifier: ' GitBlobRef'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitConflictRenameDelete'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GitConflict'
    PropertySignature
      Identifier: '
    baseBlob'
      QuestionToken
      TypeReference
        Identifier: ' GitBlobRef'
    PropertySignature
      Identifier: '
    resolution'
      QuestionToken
      TypeReference
        Identifier: ' GitResolutionPickOneAction'
    PropertySignature
      Identifier: '
    sourceBlob'
      QuestionToken
      TypeReference
        Identifier: ' GitBlobRef'
    PropertySignature
      Identifier: '
    sourceNewPath'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitConflictRenameRename'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GitConflict'
    PropertySignature
      Identifier: '
    baseBlob'
      QuestionToken
      TypeReference
        Identifier: ' GitBlobRef'
    PropertySignature
      Identifier: '
    originalPath'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    resolution'
      QuestionToken
      TypeReference
        Identifier: ' GitResolutionMergeContent'
    PropertySignature
      Identifier: '
    sourceBlob'
      QuestionToken
      TypeReference
        Identifier: ' GitBlobRef'
    PropertySignature
      Identifier: '
    targetBlob'
      QuestionToken
      TypeReference
        Identifier: ' GitBlobRef'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' GitConflictType'
    EnumMember
      Identifier: '
    /**
     * No conflict
     */
    None'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Added on source and target; content differs
     */
    AddAdd'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Added on source and rename destination on target
     */
    AddRename'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Deleted on source and edited on target
     */
    DeleteEdit'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Deleted on source and renamed on target
     */
    DeleteRename'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Path is a directory on source and a file on target
     */
    DirectoryFile'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Children of directory which has DirectoryFile or FileDirectory conflict
     */
    DirectoryChild'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Edited on source and deleted on target
     */
    EditDelete'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Edited on source and target; content differs
     */
    EditEdit'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Path is a file on source and a directory on target
     */
    FileDirectory'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Same file renamed on both source and target; destination paths differ
     */
    Rename1to2'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Different files renamed to same destination path on both source and target
     */
    Rename2to1'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Rename destination on source and new file on target
     */
    RenameAdd'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Renamed on source and deleted on target
     */
    RenameDelete'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Rename destination on both source and target; content differs
     */
    RenameRename'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitConflictUpdateResult'
    PropertySignature
      Identifier: '
    /**
     * Conflict ID that was provided by input
     */
    conflictId'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Reason for failing
     */
    customMessage'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * New state of the conflict after updating
     */
    updatedConflict'
      QuestionToken
      TypeReference
        Identifier: ' GitConflict'
    PropertySignature
      Identifier: '
    /**
     * Status of the update on the server
     */
    updateStatus'
      QuestionToken
      TypeReference
        Identifier: ' GitConflictUpdateStatus'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' GitConflictUpdateStatus'
    EnumMember
      Identifier: '
    /**
     * Indicates that pull request conflict update request was completed successfully
     */
    Succeeded'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Indicates that the update request did not fit the expected data contract
     */
    BadRequest'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Indicates that the requested resolution was not valid
     */
    InvalidResolution'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Indicates that the conflict in the update request was not a supported conflict type
     */
    UnsupportedConflictType'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Indicates that the conflict could not be found
     */
    NotFound'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitDeletedRepository'
    PropertySignature
      Identifier: '
    createdDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    deletedBy'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' VSSInterfaces'
          Identifier: 'IdentityRef'
    PropertySignature
      Identifier: '
    deletedDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    id'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    project'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' TfsCoreInterfaces'
          Identifier: 'TeamProjectReference'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitFilePathsCollection'
    PropertySignature
      Identifier: '
    commitId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    paths'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    url'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitForkOperationStatusDetail'
    PropertySignature
      Identifier: '
    /**
     * All valid steps for the forking process
     */
    allSteps'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Index into AllSteps for the current step
     */
    currentStep'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Error message if the operation failed.
     */
    errorMessage'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitForkRef'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GitRef'
    PropertySignature
      Identifier: '
    /**
     * The repository ID of the fork.
     */
    repository'
      QuestionToken
      TypeReference
        Identifier: ' GitRepository'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitForkSyncRequest'
    PropertySignature
      Identifier: '
    /**
     * Collection of related links
     */
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    detailedStatus'
      QuestionToken
      TypeReference
        Identifier: ' GitForkOperationStatusDetail'
    PropertySignature
      Identifier: '
    /**
     * Unique identifier for the operation.
     */
    operationId'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Fully-qualified identifier for the source repository.
     */
    source'
      TypeReference
        Identifier: ' GlobalGitRepositoryKey'
    PropertySignature
      Identifier: '
    /**
     * If supplied, the set of ref mappings to use when performing a "sync" or create. If missing, all refs will be synchronized.
     */
    sourceToTargetRefs'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' SourceToTargetRef'
    PropertySignature
      Identifier: '
    status'
      QuestionToken
      TypeReference
        Identifier: ' GitAsyncOperationStatus'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitForkSyncRequestParameters'
    PropertySignature
      Identifier: '
    /**
     * Fully-qualified identifier for the source repository.
     */
    source'
      TypeReference
        Identifier: ' GlobalGitRepositoryKey'
    PropertySignature
      Identifier: '
    /**
     * If supplied, the set of ref mappings to use when performing a "sync" or create. If missing, all refs will be synchronized.
     */
    sourceToTargetRefs'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' SourceToTargetRef'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitForkTeamProjectReference'
    HeritageClause
      ExpressionWithTypeArguments
        PropertyAccessExpression
          Identifier: ' TfsCoreInterfaces'
          Identifier: 'TeamProjectReference'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' GitHistoryMode'
    EnumMember
      Identifier: '
    /**
     * The history mode used by `git log`. This is the default.
     */
    SimplifiedHistory'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The history mode used by `git log --first-parent`
     */
    FirstParent'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The history mode used by `git log --full-history`
     */
    FullHistory'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The history mode used by `git log --full-history --simplify-merges`
     */
    FullHistorySimplifyMerges'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitImportFailedEvent'
    PropertySignature
      Identifier: '
    sourceRepositoryName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    targetRepository'
      QuestionToken
      TypeReference
        Identifier: ' GitRepository'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitImportGitSource'
    PropertySignature
      Identifier: '
    /**
     * Tells if this is a sync request or not
     */
    overwrite'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Url for the source repo
     */
    url'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitImportRequest'
    PropertySignature
      Identifier: '
    /**
     * Links to related resources.
     */
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * Detailed status of the import, including the current step and an error message, if applicable.
     */
    detailedStatus'
      QuestionToken
      TypeReference
        Identifier: ' GitImportStatusDetail'
    PropertySignature
      Identifier: '
    /**
     * The unique identifier for this import request.
     */
    importRequestId'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Parameters for creating the import request.
     */
    parameters'
      QuestionToken
      TypeReference
        Identifier: ' GitImportRequestParameters'
    PropertySignature
      Identifier: '
    /**
     * The target repository for this import.
     */
    repository'
      QuestionToken
      TypeReference
        Identifier: ' GitRepository'
    PropertySignature
      Identifier: '
    /**
     * Current status of the import.
     */
    status'
      QuestionToken
      TypeReference
        Identifier: ' GitAsyncOperationStatus'
    PropertySignature
      Identifier: '
    /**
     * A link back to this import request resource.
     */
    url'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitImportRequestParameters'
    PropertySignature
      Identifier: '
    /**
     * Option to delete service endpoint when import is done
     */
    deleteServiceEndpointAfterImportIsDone'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Source for importing git repository
     */
    gitSource'
      QuestionToken
      TypeReference
        Identifier: ' GitImportGitSource'
    PropertySignature
      Identifier: '
    /**
     * Service Endpoint for connection to external endpoint
     */
    serviceEndpointId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Source for importing tfvc repository
     */
    tfvcSource'
      QuestionToken
      TypeReference
        Identifier: ' GitImportTfvcSource'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitImportStatusDetail'
    PropertySignature
      Identifier: '
    /**
     * All valid steps for the import process
     */
    allSteps'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Index into AllSteps for the current step
     */
    currentStep'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Error message if the operation failed.
     */
    errorMessage'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitImportSucceededEvent'
    PropertySignature
      Identifier: '
    sourceRepositoryName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    targetRepository'
      QuestionToken
      TypeReference
        Identifier: ' GitRepository'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitImportTfvcSource'
    PropertySignature
      Identifier: '
    /**
     * Set true to import History, false otherwise
     */
    importHistory'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Get history for last n days (max allowed value is 180 days)
     */
    importHistoryDurationInDays'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Path which we want to import (this can be copied from Path Control in Explorer)
     */
    path'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitItem'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' ItemModel'
    PropertySignature
      Identifier: '
    /**
     * SHA1 of commit item was fetched at
     */
    commitId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Type of object (Commit, Tree, Blob, Tag, ...)
     */
    gitObjectType'
      QuestionToken
      TypeReference
        Identifier: ' GitObjectType'
    PropertySignature
      Identifier: '
    /**
     * Shallow ref to commit that last changed this item Only populated if latestProcessedChange is requested May not be accurate if latest change is not yet cached
     */
    latestProcessedChange'
      QuestionToken
      TypeReference
        Identifier: ' GitCommitRef'
    PropertySignature
      Identifier: '
    /**
     * Git object id
     */
    objectId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Git object id
     */
    originalObjectId'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitItemDescriptor'
    PropertySignature
      Identifier: '
    /**
     * Path to item
     */
    path'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Specifies whether to include children (OneLevel), all descendants (Full), or None
     */
    recursionLevel'
      QuestionToken
      TypeReference
        Identifier: ' VersionControlRecursionType'
    PropertySignature
      Identifier: '
    /**
     * Version string (interpretation based on VersionType defined in subclass
     */
    version'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Version modifiers (e.g. previous)
     */
    versionOptions'
      QuestionToken
      TypeReference
        Identifier: ' GitVersionOptions'
    PropertySignature
      Identifier: '
    /**
     * How to interpret version (branch,tag,commit)
     */
    versionType'
      QuestionToken
      TypeReference
        Identifier: ' GitVersionType'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitItemRequestData'
    PropertySignature
      Identifier: '
    /**
     * Whether to include metadata for all items
     */
    includeContentMetadata'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Whether to include the _links field on the shallow references
     */
    includeLinks'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Collection of items to fetch, including path, version, and recursion level
     */
    itemDescriptors'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' GitItemDescriptor'
    PropertySignature
      Identifier: '
    /**
     * Whether to include shallow ref to commit that last changed each item
     */
    latestProcessedChange'
      QuestionToken
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitLastChangeItem'
    PropertySignature
      Identifier: '
    /**
     * Gets or sets the commit Id this item was modified most recently for the provided version.
     */
    commitId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Gets or sets the path of the item.
     */
    path'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitLastChangeTreeItems'
    PropertySignature
      Identifier: '
    /**
     * The list of commits referenced by Items, if they were requested.
     */
    commits'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' GitCommitRef'
    PropertySignature
      Identifier: '
    /**
     * The last change of items.
     */
    items'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' GitLastChangeItem'
    PropertySignature
      Identifier: '
    /**
     * The last explored time, in case the result is not comprehensive. Null otherwise.
     */
    lastExploredTime'
      QuestionToken
      TypeReference
        Identifier: ' Date'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitMerge'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GitMergeParameters'
    PropertySignature
      Identifier: '
    /**
     * Reference links.
     */
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * Detailed status of the merge operation.
     */
    detailedStatus'
      QuestionToken
      TypeReference
        Identifier: ' GitMergeOperationStatusDetail'
    PropertySignature
      Identifier: '
    /**
     * Unique identifier for the merge operation.
     */
    mergeOperationId'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Status of the merge operation.
     */
    status'
      QuestionToken
      TypeReference
        Identifier: ' GitAsyncOperationStatus'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitMergeOperationStatusDetail'
    PropertySignature
      Identifier: '
    /**
     * Error message if the operation failed.
     */
    failureMessage'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The commitId of the resultant merge commit.
     */
    mergeCommitId'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitMergeOriginRef'
    PropertySignature
      Identifier: '
    cherryPickId'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    pullRequestId'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    revertId'
      QuestionToken
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitMergeParameters'
    PropertySignature
      Identifier: '
    /**
     * Comment or message of the commit.
     */
    comment'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * An enumeration of the parent commit IDs for the merge  commit.
     */
    parents'
      QuestionToken
      ArrayType
        StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitObject'
    PropertySignature
      Identifier: '
    /**
     * Object Id (Sha1Id).
     */
    objectId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Type of object (Commit, Tree, Blob, Tag)
     */
    objectType'
      QuestionToken
      TypeReference
        Identifier: ' GitObjectType'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' GitObjectType'
    EnumMember
      Identifier: '
    Bad'
      NumericLiteral
    EnumMember
      Identifier: '
    Commit'
      NumericLiteral
    EnumMember
      Identifier: '
    Tree'
      NumericLiteral
    EnumMember
      Identifier: '
    Blob'
      NumericLiteral
    EnumMember
      Identifier: '
    Tag'
      NumericLiteral
    EnumMember
      Identifier: '
    Ext2'
      NumericLiteral
    EnumMember
      Identifier: '
    OfsDelta'
      NumericLiteral
    EnumMember
      Identifier: '
    RefDelta'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitPathAction'
    PropertySignature
      Identifier: '
    action'
      QuestionToken
      TypeReference
        Identifier: ' GitPathActions'
    PropertySignature
      Identifier: '
    base64Content'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    path'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    rawTextContent'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    targetPath'
      QuestionToken
      StringKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' GitPathActions'
    EnumMember
      Identifier: '
    None'
      NumericLiteral
    EnumMember
      Identifier: '
    Edit'
      NumericLiteral
    EnumMember
      Identifier: '
    Delete'
      NumericLiteral
    EnumMember
      Identifier: '
    Add'
      NumericLiteral
    EnumMember
      Identifier: '
    Rename'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitPathToItemsCollection'
    PropertySignature
      Identifier: '
    items'
      QuestionToken
      TypeLiteral
        IndexSignature
          Parameter
            Identifier: 'key'
            StringKeyword
          ArrayType
            TypeReference
              Identifier: ' GitItem'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitPolicyConfigurationResponse'
    PropertySignature
      Identifier: '
    /**
     * The HTTP client methods find the continuation token header in the response and populate this field.
     */
    continuationToken'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    policyConfigurations'
      QuestionToken
      ArrayType
        TypeReference
          QualifiedName
            Identifier: ' PolicyInterfaces'
            Identifier: 'PolicyConfiguration'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitPullRequest'
    PropertySignature
      Identifier: '
    /**
     * Links to other related objects.
     */
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * A string which uniquely identifies this pull request. To generate an artifact ID for a pull request, use this template: ```vstfs:///Git/PullRequestId/{projectId}/{repositoryId}/{pullRequestId}```
     */
    artifactId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * If set, auto-complete is enabled for this pull request and this is the identity that enabled it.
     */
    autoCompleteSetBy'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' VSSInterfaces'
          Identifier: 'IdentityRef'
    PropertySignature
      Identifier: '
    /**
     * The user who closed the pull request.
     */
    closedBy'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' VSSInterfaces'
          Identifier: 'IdentityRef'
    PropertySignature
      Identifier: '
    /**
     * The date when the pull request was closed (completed, abandoned, or merged externally).
     */
    closedDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * The code review ID of the pull request. Used internally.
     */
    codeReviewId'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * The commits contained in the pull request.
     */
    commits'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' GitCommitRef'
    PropertySignature
      Identifier: '
    /**
     * Options which affect how the pull request will be merged when it is completed.
     */
    completionOptions'
      QuestionToken
      TypeReference
        Identifier: ' GitPullRequestCompletionOptions'
    PropertySignature
      Identifier: '
    /**
     * The most recent date at which the pull request entered the queue to be completed. Used internally.
     */
    completionQueueTime'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * The identity of the user who created the pull request.
     */
    createdBy'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' VSSInterfaces'
          Identifier: 'IdentityRef'
    PropertySignature
      Identifier: '
    /**
     * The date when the pull request was created.
     */
    creationDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * The description of the pull request.
     */
    description'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * If this is a PR from a fork this will contain information about its source.
     */
    forkSource'
      QuestionToken
      TypeReference
        Identifier: ' GitForkRef'
    PropertySignature
      Identifier: '
    /**
     * Multiple mergebases warning
     */
    hasMultipleMergeBases'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Draft / WIP pull request.
     */
    isDraft'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * The labels associated with the pull request.
     */
    labels'
      QuestionToken
      ArrayType
        TypeReference
          QualifiedName
            Identifier: ' TfsCoreInterfaces'
            Identifier: 'WebApiTagDefinition'
    PropertySignature
      Identifier: '
    /**
     * The commit of the most recent pull request merge. If empty, the most recent merge is in progress or was unsuccessful.
     */
    lastMergeCommit'
      QuestionToken
      TypeReference
        Identifier: ' GitCommitRef'
    PropertySignature
      Identifier: '
    /**
     * The commit at the head of the source branch at the time of the last pull request merge.
     */
    lastMergeSourceCommit'
      QuestionToken
      TypeReference
        Identifier: ' GitCommitRef'
    PropertySignature
      Identifier: '
    /**
     * The commit at the head of the target branch at the time of the last pull request merge.
     */
    lastMergeTargetCommit'
      QuestionToken
      TypeReference
        Identifier: ' GitCommitRef'
    PropertySignature
      Identifier: '
    /**
     * If set, pull request merge failed for this reason.
     */
    mergeFailureMessage'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The type of failure (if any) of the pull request merge.
     */
    mergeFailureType'
      QuestionToken
      TypeReference
        Identifier: ' PullRequestMergeFailureType'
    PropertySignature
      Identifier: '
    /**
     * The ID of the job used to run the pull request merge. Used internally.
     */
    mergeId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Options used when the pull request merge runs. These are separate from completion options since completion happens only once and a new merge will run every time the source branch of the pull request changes.
     */
    mergeOptions'
      QuestionToken
      TypeReference
        Identifier: ' GitPullRequestMergeOptions'
    PropertySignature
      Identifier: '
    /**
     * The current status of the pull request merge.
     */
    mergeStatus'
      QuestionToken
      TypeReference
        Identifier: ' PullRequestAsyncStatus'
    PropertySignature
      Identifier: '
    /**
     * The ID of the pull request.
     */
    pullRequestId'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Used internally.
     */
    remoteUrl'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The repository containing the target branch of the pull request.
     */
    repository'
      QuestionToken
      TypeReference
        Identifier: ' GitRepository'
    PropertySignature
      Identifier: '
    /**
     * A list of reviewers on the pull request along with the state of their votes.
     */
    reviewers'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' IdentityRefWithVote'
    PropertySignature
      Identifier: '
    /**
     * The name of the source branch of the pull request.
     */
    sourceRefName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The status of the pull request.
     */
    status'
      QuestionToken
      TypeReference
        Identifier: ' PullRequestStatus'
    PropertySignature
      Identifier: '
    /**
     * If true, this pull request supports multiple iterations. Iteration support means individual pushes to the source branch of the pull request can be reviewed and comments left in one iteration will be tracked across future iterations.
     */
    supportsIterations'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * The name of the target branch of the pull request.
     */
    targetRefName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The title of the pull request.
     */
    title'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Used internally.
     */
    url'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Any work item references associated with this pull request.
     */
    workItemRefs'
      QuestionToken
      ArrayType
        TypeReference
          QualifiedName
            Identifier: ' VSSInterfaces'
            Identifier: 'ResourceRef'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitPullRequestChange'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GitChange'
    PropertySignature
      Identifier: '
    /**
     * ID used to track files through multiple changes.
     */
    changeTrackingId'
      QuestionToken
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitPullRequestCommentThread'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' CommentThread'
    PropertySignature
      Identifier: '
    /**
     * Extended context information unique to pull requests
     */
    pullRequestThreadContext'
      QuestionToken
      TypeReference
        Identifier: ' GitPullRequestCommentThreadContext'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitPullRequestCommentThreadContext'
    PropertySignature
      Identifier: '
    /**
     * Used to track a comment across iterations. This value can be found by looking at the iteration's changes list. Must be set for pull requests with iteration support. Otherwise, it's not required for 'legacy' pull requests.
     */
    changeTrackingId'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * The iteration context being viewed when the thread was created.
     */
    iterationContext'
      QuestionToken
      TypeReference
        Identifier: ' CommentIterationContext'
    PropertySignature
      Identifier: '
    /**
     * The criteria used to track this thread. If this property is filled out when the thread is returned, then the thread has been tracked from its original location using the given criteria.
     */
    trackingCriteria'
      QuestionToken
      TypeReference
        Identifier: ' CommentTrackingCriteria'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitPullRequestCompletionOptions'
    PropertySignature
      Identifier: '
    /**
     * List of any policy configuration Id's which auto-complete should not wait for. Only applies to optional policies (isBlocking == false). Auto-complete always waits for required policies (isBlocking == true).
     */
    autoCompleteIgnoreConfigIds'
      QuestionToken
      ArrayType
        NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * If true, policies will be explicitly bypassed while the pull request is completed.
     */
    bypassPolicy'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * If policies are bypassed, this reason is stored as to why bypass was used.
     */
    bypassReason'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * If true, the source branch of the pull request will be deleted after completion.
     */
    deleteSourceBranch'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * If set, this will be used as the commit message of the merge commit.
     */
    mergeCommitMessage'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Specify the strategy used to merge the pull request during completion. If MergeStrategy is not set to any value, a no-FF merge will be created if SquashMerge == false. If MergeStrategy is not set to any value, the pull request commits will be squashed if SquashMerge == true. The SquashMerge property is deprecated. It is recommended that you explicitly set MergeStrategy in all cases. If an explicit value is provided for MergeStrategy, the SquashMerge property will be ignored.
     */
    mergeStrategy'
      QuestionToken
      TypeReference
        Identifier: ' GitPullRequestMergeStrategy'
    PropertySignature
      Identifier: '
    /**
     * SquashMerge is deprecated. You should explicitly set the value of MergeStrategy. If MergeStrategy is set to any value, the SquashMerge value will be ignored. If MergeStrategy is not set, the merge strategy will be no-fast-forward if this flag is false, or squash if true.
     */
    squashMerge'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * If true, we will attempt to transition any work items linked to the pull request into the next logical state (i.e. Active -> Resolved)
     */
    transitionWorkItems'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * If true, the current completion attempt was triggered via auto-complete. Used internally.
     */
    triggeredByAutoComplete'
      QuestionToken
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitPullRequestIteration'
    PropertySignature
      Identifier: '
    /**
     * A collection of related REST reference links.
     */
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * Author of the pull request iteration.
     */
    author'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' VSSInterfaces'
          Identifier: 'IdentityRef'
    PropertySignature
      Identifier: '
    /**
     * Changes included with the pull request iteration.
     */
    changeList'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' GitPullRequestChange'
    PropertySignature
      Identifier: '
    /**
     * The commits included with the pull request iteration.
     */
    commits'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' GitCommitRef'
    PropertySignature
      Identifier: '
    /**
     * The first common Git commit of the source and target refs.
     */
    commonRefCommit'
      QuestionToken
      TypeReference
        Identifier: ' GitCommitRef'
    PropertySignature
      Identifier: '
    /**
     * The creation date of the pull request iteration.
     */
    createdDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * Description of the pull request iteration.
     */
    description'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Indicates if the Commits property contains a truncated list of commits in this pull request iteration.
     */
    hasMoreCommits'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * ID of the pull request iteration. Iterations are created as a result of creating and pushing updates to a pull request.
     */
    id'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * If the iteration reason is Retarget, this is the refName of the new target
     */
    newTargetRefName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * If the iteration reason is Retarget, this is the original target refName
     */
    oldTargetRefName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The Git push information associated with this pull request iteration.
     */
    push'
      QuestionToken
      TypeReference
        Identifier: ' GitPushRef'
    PropertySignature
      Identifier: '
    /**
     * The reason for which the pull request iteration was created.
     */
    reason'
      QuestionToken
      TypeReference
        Identifier: ' IterationReason'
    PropertySignature
      Identifier: '
    /**
     * The source Git commit of this iteration.
     */
    sourceRefCommit'
      QuestionToken
      TypeReference
        Identifier: ' GitCommitRef'
    PropertySignature
      Identifier: '
    /**
     * The target Git commit of this iteration.
     */
    targetRefCommit'
      QuestionToken
      TypeReference
        Identifier: ' GitCommitRef'
    PropertySignature
      Identifier: '
    /**
     * The updated date of the pull request iteration.
     */
    updatedDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitPullRequestIterationChanges'
    PropertySignature
      Identifier: '
    /**
     * Changes made in the iteration.
     */
    changeEntries'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' GitPullRequestChange'
    PropertySignature
      Identifier: '
    /**
     * Value to specify as skip to get the next page of changes.  This will be zero if there are no more changes.
     */
    nextSkip'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Value to specify as top to get the next page of changes.  This will be zero if there are no more changes.
     */
    nextTop'
      QuestionToken
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitPullRequestMergeOptions'
    PropertySignature
      Identifier: '
    /**
     * If true, conflict resolutions applied during the merge will be put in separate commits to preserve authorship info for git blame, etc.
     */
    conflictAuthorshipCommits'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * If true, renames where there is more than one valid way to map the original file locations to renamed file locations will be treated as false positives and ignored.
     */
    detectRenameFalsePositives'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * If true, rename detection will not be performed during the merge.
     */
    disableRenames'
      QuestionToken
      BooleanKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' GitPullRequestMergeStrategy'
    EnumMember
      Identifier: '
    /**
     * A two-parent, no-fast-forward merge. The source branch is unchanged. This is the default behavior.
     */
    NoFastForward'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Put all changes from the pull request into a single-parent commit.
     */
    Squash'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Rebase the source branch on top of the target branch HEAD commit, and fast-forward the target branch. The source branch is updated during the rebase operation.
     */
    Rebase'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Rebase the source branch on top of the target branch HEAD commit, and create a two-parent, no-fast-forward merge. The source branch is updated during the rebase operation.
     */
    RebaseMerge'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitPullRequestQuery'
    PropertySignature
      Identifier: '
    /**
     * The queries to perform.
     */
    queries'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' GitPullRequestQueryInput'
    PropertySignature
      Identifier: '
    /**
     * The results of the queries. This matches the QueryInputs list so Results[n] are the results of QueryInputs[n]. Each entry in the list is a dictionary of commit->pull requests.
     */
    results'
      QuestionToken
      ArrayType
        TypeLiteral
          IndexSignature
            Parameter
              Identifier: 'key'
              StringKeyword
            ArrayType
              TypeReference
                Identifier: ' GitPullRequest'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitPullRequestQueryInput'
    PropertySignature
      Identifier: '
    /**
     * The list of commit IDs to search for.
     */
    items'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The type of query to perform.
     */
    type'
      QuestionToken
      TypeReference
        Identifier: ' GitPullRequestQueryType'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' GitPullRequestQueryType'
    EnumMember
      Identifier: '
    /**
     * No query type set.
     */
    NotSet'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Search for pull requests that created the supplied merge commits.
     */
    LastMergeCommit'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Search for pull requests that merged the supplied commits.
     */
    Commit'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitPullRequestReviewFileContentInfo'
    PropertySignature
      Identifier: '
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * The file change path.
     */
    path'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Content hash of on-disk representation of file content. Its calculated by the client by using SHA1 hash function. Ensure that uploaded file has same encoding as in source control.
     */
    sHA1Hash'
      QuestionToken
      StringKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' GitPullRequestReviewFileType'
    EnumMember
      Identifier: '
    ChangeEntry'
      NumericLiteral
    EnumMember
      Identifier: '
    Attachment'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitPullRequestSearchCriteria'
    PropertySignature
      Identifier: '
    /**
     * If set, search for pull requests that were created by this identity.
     */
    creatorId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Whether to include the _links field on the shallow references
     */
    includeLinks'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * If specified, filters pull requests that created/closed before this date based on the queryTimeRangeType specified.
     */
    maxTime'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * If specified, filters pull requests that created/closed after this date based on the queryTimeRangeType specified.
     */
    minTime'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * The type of time range which should be used for minTime and maxTime. Defaults to Created if unset.
     */
    queryTimeRangeType'
      QuestionToken
      TypeReference
        Identifier: ' PullRequestTimeRangeType'
    PropertySignature
      Identifier: '
    /**
     * If set, search for pull requests whose target branch is in this repository.
     */
    repositoryId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * If set, search for pull requests that have this identity as a reviewer.
     */
    reviewerId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * If set, search for pull requests from this branch.
     */
    sourceRefName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * If set, search for pull requests whose source branch is in this repository.
     */
    sourceRepositoryId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * If set, search for pull requests that are in this state. Defaults to Active if unset.
     */
    status'
      QuestionToken
      TypeReference
        Identifier: ' PullRequestStatus'
    PropertySignature
      Identifier: '
    /**
     * If set, search for pull requests into this branch.
     */
    targetRefName'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitPullRequestStatus'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GitStatus'
    PropertySignature
      Identifier: '
    /**
     * ID of the iteration to associate status with. Minimum value is 1.
     */
    iterationId'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Custom properties of the status.
     */
    properties'
      QuestionToken
      AnyKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitPush'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GitPushRef'
    PropertySignature
      Identifier: '
    commits'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' GitCommitRef'
    PropertySignature
      Identifier: '
    refUpdates'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' GitRefUpdate'
    PropertySignature
      Identifier: '
    repository'
      QuestionToken
      TypeReference
        Identifier: ' GitRepository'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitPushEventData'
    PropertySignature
      Identifier: '
    afterId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    beforeId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    branch'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    commits'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' GitCommit'
    PropertySignature
      Identifier: '
    repository'
      QuestionToken
      TypeReference
        Identifier: ' GitRepository'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitPushRef'
    PropertySignature
      Identifier: '
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    date'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    pushCorrelationId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    pushedBy'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' VSSInterfaces'
          Identifier: 'IdentityRef'
    PropertySignature
      Identifier: '
    pushId'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    url'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitPushSearchCriteria'
    PropertySignature
      Identifier: '
    fromDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * Whether to include the _links field on the shallow references
     */
    includeLinks'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    includeRefUpdates'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    pusherId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    refName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    toDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitQueryBranchStatsCriteria'
    PropertySignature
      Identifier: '
    baseCommit'
      QuestionToken
      TypeReference
        Identifier: ' GitVersionDescriptor'
    PropertySignature
      Identifier: '
    targetCommits'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' GitVersionDescriptor'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitQueryCommitsCriteria'
    PropertySignature
      Identifier: '
    /**
     * Number of entries to skip
     */
    $skip'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Maximum number of entries to retrieve
     */
    $top'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Alias or display name of the author
     */
    author'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Only applicable when ItemVersion specified. If provided, start walking history starting at this commit.
     */
    compareVersion'
      QuestionToken
      TypeReference
        Identifier: ' GitVersionDescriptor'
    PropertySignature
      Identifier: '
    /**
     * Only applies when an itemPath is specified. This determines whether to exclude delete entries of the specified path.
     */
    excludeDeletes'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * If provided, a lower bound for filtering commits alphabetically
     */
    fromCommitId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * If provided, only include history entries created after this date (string)
     */
    fromDate'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * What Git history mode should be used. This only applies to the search criteria when Ids = null and an itemPath is specified.
     */
    historyMode'
      QuestionToken
      TypeReference
        Identifier: ' GitHistoryMode'
    PropertySignature
      Identifier: '
    /**
     * If provided, specifies the exact commit ids of the commits to fetch. May not be combined with other parameters.
     */
    ids'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Whether to include the _links field on the shallow references
     */
    includeLinks'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Whether to include the push information
     */
    includePushData'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Whether to include the image Url for committers and authors
     */
    includeUserImageUrl'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Whether to include linked work items
     */
    includeWorkItems'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Path of item to search under
     */
    itemPath'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * If provided, identifies the commit or branch to search
     */
    itemVersion'
      QuestionToken
      TypeReference
        Identifier: ' GitVersionDescriptor'
    PropertySignature
      Identifier: '
    /**
     * If enabled, this option will ignore the itemVersion and compareVersion parameters
     */
    showOldestCommitsFirst'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * If provided, an upper bound for filtering commits alphabetically
     */
    toCommitId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * If provided, only include history entries created before this date (string)
     */
    toDate'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Alias or display name of the committer
     */
    user'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitQueryRefsCriteria'
    PropertySignature
      Identifier: '
    /**
     * List of commit Ids to be searched
     */
    commitIds'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * List of complete or partial names for refs to be searched
     */
    refNames'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Type of search on refNames, if provided
     */
    searchType'
      QuestionToken
      TypeReference
        Identifier: ' GitRefSearchType'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitRecycleBinRepositoryDetails'
    PropertySignature
      Identifier: '
    /**
     * Setting to false will undo earlier deletion and restore the repository.
     */
    deleted'
      QuestionToken
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitRef'
    PropertySignature
      Identifier: '
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    creator'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' VSSInterfaces'
          Identifier: 'IdentityRef'
    PropertySignature
      Identifier: '
    isLocked'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    isLockedBy'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' VSSInterfaces'
          Identifier: 'IdentityRef'
    PropertySignature
      Identifier: '
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    objectId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    peeledObjectId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    statuses'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' GitStatus'
    PropertySignature
      Identifier: '
    url'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitRefFavorite'
    PropertySignature
      Identifier: '
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    id'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    identityId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    repositoryId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    type'
      QuestionToken
      TypeReference
        Identifier: ' RefFavoriteType'
    PropertySignature
      Identifier: '
    url'
      QuestionToken
      StringKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' GitRefSearchType'
    EnumMember
      Identifier: '
    Exact'
      NumericLiteral
    EnumMember
      Identifier: '
    StartsWith'
      NumericLiteral
    EnumMember
      Identifier: '
    Contains'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitRefUpdate'
    PropertySignature
      Identifier: '
    isLocked'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    newObjectId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    oldObjectId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    repositoryId'
      QuestionToken
      StringKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' GitRefUpdateMode'
    EnumMember
      Identifier: '
    /**
     * Indicates the Git protocol model where any refs that can be updated will be updated, but any failures will not prevent other updates from succeeding.
     */
    BestEffort'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Indicates that all ref updates must succeed or none will succeed. All ref updates will be atomically written. If any failure is encountered, previously successful updates will be rolled back and the entire operation will fail.
     */
    AllOrNone'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitRefUpdateResult'
    PropertySignature
      Identifier: '
    /**
     * Custom message for the result object For instance, Reason for failing.
     */
    customMessage'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Whether the ref is locked or not
     */
    isLocked'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Ref name
     */
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * New object ID
     */
    newObjectId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Old object ID
     */
    oldObjectId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Name of the plugin that rejected the updated.
     */
    rejectedBy'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Repository ID
     */
    repositoryId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * True if the ref update succeeded, false otherwise
     */
    success'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Status of the update from the TFS server.
     */
    updateStatus'
      QuestionToken
      TypeReference
        Identifier: ' GitRefUpdateStatus'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' GitRefUpdateStatus'
    EnumMember
      Identifier: '
    /**
     * Indicates that the ref update request was completed successfully.
     */
    Succeeded'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Indicates that the ref update request could not be completed because part of the graph would be disconnected by this change, and the caller does not have ForcePush permission on the repository.
     */
    ForcePushRequired'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Indicates that the ref update request could not be completed because the old object ID presented in the request was not the object ID of the ref when the database attempted the update. The most likely scenario is that the caller lost a race to update the ref.
     */
    StaleOldObjectId'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Indicates that the ref update request could not be completed because the ref name presented in the request was not valid.
     */
    InvalidRefName'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The request was not processed
     */
    Unprocessed'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The ref update request could not be completed because the new object ID for the ref could not be resolved to a commit object (potentially through any number of tags)
     */
    UnresolvableToCommit'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The ref update request could not be completed because the user lacks write permissions required to write this ref
     */
    WritePermissionRequired'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The ref update request could not be completed because the user lacks note creation permissions required to write this note
     */
    ManageNotePermissionRequired'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The ref update request could not be completed because the user lacks the permission to create a branch
     */
    CreateBranchPermissionRequired'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The ref update request could not be completed because the user lacks the permission to create a tag
     */
    CreateTagPermissionRequired'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The ref update could not be completed because it was rejected by the plugin.
     */
    RejectedByPlugin'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The ref update could not be completed because the ref is locked by another user.
     */
    Locked'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The ref update could not be completed because, in case-insensitive mode, the ref name conflicts with an existing, differently-cased ref name.
     */
    RefNameConflict'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The ref update could not be completed because it was rejected by policy.
     */
    RejectedByPolicy'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Indicates that the ref update request was completed successfully, but the ref doesn't actually exist so no changes were made.  This should only happen during deletes.
     */
    SucceededNonExistentRef'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Indicates that the ref update request was completed successfully, but the passed-in ref was corrupt - as in, the old object ID was bad.  This should only happen during deletes.
     */
    SucceededCorruptRef'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitRepository'
    PropertySignature
      Identifier: '
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    defaultBranch'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    id'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * True if the repository is disabled. False otherwise.
     */
    isDisabled'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * True if the repository was created as a fork.
     */
    isFork'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * True if the repository is in maintenance. False otherwise.
     */
    isInMaintenance'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    parentRepository'
      QuestionToken
      TypeReference
        Identifier: ' GitRepositoryRef'
    PropertySignature
      Identifier: '
    project'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' TfsCoreInterfaces'
          Identifier: 'TeamProjectReference'
    PropertySignature
      Identifier: '
    remoteUrl'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Compressed size (bytes) of the repository.
     */
    size'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    sshUrl'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    url'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    validRemoteUrls'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    webUrl'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitRepositoryCreateOptions'
    PropertySignature
      Identifier: '
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    parentRepository'
      QuestionToken
      TypeReference
        Identifier: ' GitRepositoryRef'
    PropertySignature
      Identifier: '
    project'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' TfsCoreInterfaces'
          Identifier: 'TeamProjectReference'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitRepositoryRef'
    PropertySignature
      Identifier: '
    /**
     * Team Project Collection where this Fork resides
     */
    collection'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' TfsCoreInterfaces'
          Identifier: 'TeamProjectCollectionReference'
    PropertySignature
      Identifier: '
    id'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * True if the repository was created as a fork
     */
    isFork'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    project'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' TfsCoreInterfaces'
          Identifier: 'TeamProjectReference'
    PropertySignature
      Identifier: '
    remoteUrl'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    sshUrl'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    url'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitRepositoryStats'
    PropertySignature
      Identifier: '
    activePullRequestsCount'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    branchesCount'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    commitsCount'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    repositoryId'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitResolution'
    PropertySignature
      Identifier: '
    /**
     * User who created the resolution.
     */
    author'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' VSSInterfaces'
          Identifier: 'IdentityRef'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' GitResolutionError'
    EnumMember
      Identifier: '
    /**
     * No error
     */
    None'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * User set a blob id for resolving a content merge, but blob was not found in repo during application
     */
    MergeContentNotFound'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Attempted to resolve a conflict by moving a file to another path, but path was already in use
     */
    PathInUse'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * No error
     */
    InvalidPath'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * GitResolutionAction was set to an unrecognized value
     */
    UnknownAction'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * GitResolutionMergeType was set to an unrecognized value
     */
    UnknownMergeType'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Any error for which a more specific code doesn't apply
     */
    OtherError'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitResolutionMergeContent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GitResolution'
    PropertySignature
      Identifier: '
    mergeType'
      QuestionToken
      TypeReference
        Identifier: ' GitResolutionMergeType'
    PropertySignature
      Identifier: '
    userMergedBlob'
      QuestionToken
      TypeReference
        Identifier: ' GitBlobRef'
    PropertySignature
      Identifier: '
    userMergedContent'
      QuestionToken
      ArrayType
        NumberKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' GitResolutionMergeType'
    EnumMember
      Identifier: '
    Undecided'
      NumericLiteral
    EnumMember
      Identifier: '
    TakeSourceContent'
      NumericLiteral
    EnumMember
      Identifier: '
    TakeTargetContent'
      NumericLiteral
    EnumMember
      Identifier: '
    AutoMerged'
      NumericLiteral
    EnumMember
      Identifier: '
    UserMerged'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitResolutionPathConflict'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GitResolution'
    PropertySignature
      Identifier: '
    action'
      QuestionToken
      TypeReference
        Identifier: ' GitResolutionPathConflictAction'
    PropertySignature
      Identifier: '
    renamePath'
      QuestionToken
      StringKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' GitResolutionPathConflictAction'
    EnumMember
      Identifier: '
    Undecided'
      NumericLiteral
    EnumMember
      Identifier: '
    KeepSourceRenameTarget'
      NumericLiteral
    EnumMember
      Identifier: '
    KeepSourceDeleteTarget'
      NumericLiteral
    EnumMember
      Identifier: '
    KeepTargetRenameSource'
      NumericLiteral
    EnumMember
      Identifier: '
    KeepTargetDeleteSource'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitResolutionPickOneAction'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GitResolution'
    PropertySignature
      Identifier: '
    action'
      QuestionToken
      TypeReference
        Identifier: ' GitResolutionWhichAction'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitResolutionRename1to2'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GitResolutionMergeContent'
    PropertySignature
      Identifier: '
    action'
      QuestionToken
      TypeReference
        Identifier: ' GitResolutionRename1to2Action'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' GitResolutionRename1to2Action'
    EnumMember
      Identifier: '
    Undecided'
      NumericLiteral
    EnumMember
      Identifier: '
    KeepSourcePath'
      NumericLiteral
    EnumMember
      Identifier: '
    KeepTargetPath'
      NumericLiteral
    EnumMember
      Identifier: '
    KeepBothFiles'
      NumericLiteral
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' GitResolutionStatus'
    EnumMember
      Identifier: '
    Unresolved'
      NumericLiteral
    EnumMember
      Identifier: '
    PartiallyResolved'
      NumericLiteral
    EnumMember
      Identifier: '
    Resolved'
      NumericLiteral
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' GitResolutionWhichAction'
    EnumMember
      Identifier: '
    Undecided'
      NumericLiteral
    EnumMember
      Identifier: '
    PickSourceAction'
      NumericLiteral
    EnumMember
      Identifier: '
    PickTargetAction'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitRevert'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GitAsyncRefOperation'
    PropertySignature
      Identifier: '
    revertId'
      QuestionToken
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitStatus'
    PropertySignature
      Identifier: '
    /**
     * Reference links.
     */
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * Context of the status.
     */
    context'
      QuestionToken
      TypeReference
        Identifier: ' GitStatusContext'
    PropertySignature
      Identifier: '
    /**
     * Identity that created the status.
     */
    createdBy'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' VSSInterfaces'
          Identifier: 'IdentityRef'
    PropertySignature
      Identifier: '
    /**
     * Creation date and time of the status.
     */
    creationDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * Status description. Typically describes current state of the status.
     */
    description'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Status identifier.
     */
    id'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * State of the status.
     */
    state'
      QuestionToken
      TypeReference
        Identifier: ' GitStatusState'
    PropertySignature
      Identifier: '
    /**
     * URL with status details.
     */
    targetUrl'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Last update date and time of the status.
     */
    updatedDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitStatusContext'
    PropertySignature
      Identifier: '
    /**
     * Genre of the status. Typically name of the service/tool generating the status, can be empty.
     */
    genre'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Name identifier of the status, cannot be null or empty.
     */
    name'
      QuestionToken
      StringKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' GitStatusState'
    EnumMember
      Identifier: '
    /**
     * Status state not set. Default state.
     */
    NotSet'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Status pending.
     */
    Pending'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Status succeeded.
     */
    Succeeded'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Status failed.
     */
    Failed'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Status with an error.
     */
    Error'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Status is not applicable to the target object.
     */
    NotApplicable'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Status Partially Succeeded, build finished with warnings.
     */
    PartiallySucceeded'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitSuggestion'
    PropertySignature
      Identifier: '
    /**
     * Specific properties describing the suggestion.
     */
    properties'
      QuestionToken
      TypeLiteral
        IndexSignature
          Parameter
            Identifier: 'key'
            StringKeyword
          AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * The type of suggestion (e.g. pull request).
     */
    type'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitTargetVersionDescriptor'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' GitVersionDescriptor'
    PropertySignature
      Identifier: '
    /**
     * Version string identifier (name of tag/branch, SHA1 of commit)
     */
    targetVersion'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Version options - Specify additional modifiers to version (e.g Previous)
     */
    targetVersionOptions'
      QuestionToken
      TypeReference
        Identifier: ' GitVersionOptions'
    PropertySignature
      Identifier: '
    /**
     * Version type (branch, tag, or commit). Determines how Id is interpreted
     */
    targetVersionType'
      QuestionToken
      TypeReference
        Identifier: ' GitVersionType'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitTemplate'
    PropertySignature
      Identifier: '
    /**
     * Name of the Template
     */
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Type of the Template
     */
    type'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitTreeDiff'
    PropertySignature
      Identifier: '
    /**
     * ObjectId of the base tree of this diff.
     */
    baseTreeId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * List of tree entries that differ between the base and target tree.  Renames and object type changes are returned as a delete for the old object and add for the new object.  If a continuation token is returned in the response header, some tree entries are yet to be processed and may yield more diff entries. If the continuation token is not returned all the diff entries have been included in this response.
     */
    diffEntries'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' GitTreeDiffEntry'
    PropertySignature
      Identifier: '
    /**
     * ObjectId of the target tree of this diff.
     */
    targetTreeId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * REST Url to this resource.
     */
    url'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitTreeDiffEntry'
    PropertySignature
      Identifier: '
    /**
     * SHA1 hash of the object in the base tree, if it exists. Will be null in case of adds.
     */
    baseObjectId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Type of change that affected this entry.
     */
    changeType'
      QuestionToken
      TypeReference
        Identifier: ' VersionControlChangeType'
    PropertySignature
      Identifier: '
    /**
     * Object type of the tree entry. Blob, Tree or Commit("submodule")
     */
    objectType'
      QuestionToken
      TypeReference
        Identifier: ' GitObjectType'
    PropertySignature
      Identifier: '
    /**
     * Relative path in base and target trees.
     */
    path'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * SHA1 hash of the object in the target tree, if it exists. Will be null in case of deletes.
     */
    targetObjectId'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitTreeDiffResponse'
    PropertySignature
      Identifier: '
    /**
     * The HTTP client methods find the continuation token header in the response and populate this field.
     */
    continuationToken'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    treeDiff'
      QuestionToken
      TypeReference
        Identifier: ' GitTreeDiff'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitTreeEntryRef'
    PropertySignature
      Identifier: '
    /**
     * Blob or tree
     */
    gitObjectType'
      QuestionToken
      TypeReference
        Identifier: ' GitObjectType'
    PropertySignature
      Identifier: '
    /**
     * Mode represented as octal string
     */
    mode'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * SHA1 hash of git object
     */
    objectId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Path relative to parent tree object
     */
    relativePath'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Size of content
     */
    size'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * url to retrieve tree or blob
     */
    url'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitTreeRef'
    PropertySignature
      Identifier: '
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * SHA1 hash of git object
     */
    objectId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Sum of sizes of all children
     */
    size'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Blobs and trees under this tree
     */
    treeEntries'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' GitTreeEntryRef'
    PropertySignature
      Identifier: '
    /**
     * Url to tree
     */
    url'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitUserDate'
    PropertySignature
      Identifier: '
    /**
     * Date of the Git operation.
     */
    date'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * Email address of the user performing the Git operation.
     */
    email'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Url for the user's avatar.
     */
    imageUrl'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Name of the user performing the Git operation.
     */
    name'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GitVersionDescriptor'
    PropertySignature
      Identifier: '
    /**
     * Version string identifier (name of tag/branch, SHA1 of commit)
     */
    version'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Version options - Specify additional modifiers to version (e.g Previous)
     */
    versionOptions'
      QuestionToken
      TypeReference
        Identifier: ' GitVersionOptions'
    PropertySignature
      Identifier: '
    /**
     * Version type (branch, tag, or commit). Determines how Id is interpreted
     */
    versionType'
      QuestionToken
      TypeReference
        Identifier: ' GitVersionType'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' GitVersionOptions'
    EnumMember
      Identifier: '
    /**
     * Not specified
     */
    None'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Commit that changed item prior to the current version
     */
    PreviousChange'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * First parent of commit (HEAD^)
     */
    FirstParent'
      NumericLiteral
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' GitVersionType'
    EnumMember
      Identifier: '
    /**
     * Interpret the version as a branch name
     */
    Branch'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Interpret the version as a tag name
     */
    Tag'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Interpret the version as a commit ID (SHA1)
     */
    Commit'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' GlobalGitRepositoryKey'
    PropertySignature
      Identifier: '
    /**
     * Team Project Collection ID of the collection for the repository.
     */
    collectionId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Team Project ID of the project for the repository.
     */
    projectId'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * ID of the repository.
     */
    repositoryId'
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' HistoryEntry'
    TypeParameter
      Identifier: 'T'
    PropertySignature
      Identifier: '
    /**
     * The Change list (changeset/commit/shelveset) for this point in history
     */
    changeList'
      QuestionToken
      TypeReference
        Identifier: ' ChangeList'
        TypeReference
          Identifier: 'T'
    PropertySignature
      Identifier: '
    /**
     * The change made to the item from this change list (only relevant for File history, not folders)
     */
    itemChangeType'
      QuestionToken
      TypeReference
        Identifier: ' VersionControlChangeType'
    PropertySignature
      Identifier: '
    /**
     * The path of the item at this point in history (only relevant for File history, not folders)
     */
    serverItem'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' IdentityRefWithVote'
    HeritageClause
      ExpressionWithTypeArguments
        PropertyAccessExpression
          Identifier: ' VSSInterfaces'
          Identifier: 'IdentityRef'
    PropertySignature
      Identifier: '
    /**
     * Indicates if this reviewer has declined to review this pull request.
     */
    hasDeclined'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Indicates if this reviewer is flagged for attention on this pull request.
     */
    isFlagged'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Indicates if this approve vote should still be handled even though vote didn't change.
     */
    isReapprove'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Indicates if this is a required reviewer for this pull request. <br /> Branches can have policies that require particular reviewers are required for pull requests.
     */
    isRequired'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * URL to retrieve information about this identity
     */
    reviewerUrl'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Vote on a pull request:<br /> 10 - approved 5 - approved with suggestions 0 - no vote -5 - waiting for author -10 - rejected
     */
    vote'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Groups or teams that this reviewer contributed to. <br /> Groups and teams can be reviewers on pull requests but can not vote directly.  When a member of the group or team votes, that vote is rolled up into the group or team vote.  VotedFor is a list of such votes.
     */
    votedFor'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' IdentityRefWithVote'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ImportRepositoryValidation'
    PropertySignature
      Identifier: '
    gitSource'
      QuestionToken
      TypeReference
        Identifier: ' GitImportGitSource'
    PropertySignature
      Identifier: '
    password'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    tfvcSource'
      QuestionToken
      TypeReference
        Identifier: ' GitImportTfvcSource'
    PropertySignature
      Identifier: '
    username'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' IncludedGitCommit'
    PropertySignature
      Identifier: '
    commitId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    commitTime'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    parentCommitIds'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    repositoryId'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' IsDraftUpdatedEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' RealTimePullRequestEvent'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ItemContent'
    PropertySignature
      Identifier: '
    content'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    contentType'
      QuestionToken
      TypeReference
        Identifier: ' ItemContentType'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' ItemContentType'
    EnumMember
      Identifier: '
    RawText'
      NumericLiteral
    EnumMember
      Identifier: '
    Base64Encoded'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ItemDetailsOptions'
    PropertySignature
      Identifier: '
    /**
     * If true, include metadata about the file type
     */
    includeContentMetadata'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Specifies whether to include children (OneLevel), all descendants (Full) or None for folder items
     */
    recursionLevel'
      QuestionToken
      TypeReference
        Identifier: ' VersionControlRecursionType'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ItemModel'
    PropertySignature
      Identifier: '
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    content'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    contentMetadata'
      QuestionToken
      TypeReference
        Identifier: ' FileContentMetadata'
    PropertySignature
      Identifier: '
    isFolder'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    isSymLink'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    path'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    url'
      QuestionToken
      StringKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' IterationReason'
    EnumMember
      Identifier: '
    Push'
      NumericLiteral
    EnumMember
      Identifier: '
    ForcePush'
      NumericLiteral
    EnumMember
      Identifier: '
    Create'
      NumericLiteral
    EnumMember
      Identifier: '
    Rebase'
      NumericLiteral
    EnumMember
      Identifier: '
    Unknown'
      NumericLiteral
    EnumMember
      Identifier: '
    Retarget'
      NumericLiteral
    EnumMember
      Identifier: '
    ResolveConflicts'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' LabelsUpdatedEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' RealTimePullRequestEvent'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' LineDiffBlock'
    PropertySignature
      Identifier: '
    /**
     * Type of change that was made to the block.
     */
    changeType'
      QuestionToken
      TypeReference
        Identifier: ' LineDiffBlockChangeType'
    PropertySignature
      Identifier: '
    /**
     * Line number where this block starts in modified file.
     */
    modifiedLineNumberStart'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Count of lines in this block in modified file.
     */
    modifiedLinesCount'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Line number where this block starts in original file.
     */
    originalLineNumberStart'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Count of lines in this block in original file.
     */
    originalLinesCount'
      QuestionToken
      NumberKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' LineDiffBlockChangeType'
    EnumMember
      Identifier: '
    /**
     * No change - both the blocks are identical
     */
    None'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Lines were added to the block in the modified file
     */
    Add'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Lines were deleted from the block in the original file
     */
    Delete'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Lines were modified
     */
    Edit'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' MergeCompletedEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' RealTimePullRequestEvent'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' PolicyEvaluationUpdatedEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' RealTimePullRequestEvent'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' PullRequestAsyncStatus'
    EnumMember
      Identifier: '
    /**
     * Status is not set. Default state.
     */
    NotSet'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Pull request merge is queued.
     */
    Queued'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Pull request merge failed due to conflicts.
     */
    Conflicts'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Pull request merge succeeded.
     */
    Succeeded'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Pull request merge rejected by policy.
     */
    RejectedByPolicy'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Pull request merge failed.
     */
    Failure'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' PullRequestCreatedEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' RealTimePullRequestEvent'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' PullRequestMergeFailureType'
    EnumMember
      Identifier: '
    /**
     * Type is not set. Default type.
     */
    None'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Pull request merge failure type unknown.
     */
    Unknown'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Pull request merge failed due to case mismatch.
     */
    CaseSensitive'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Pull request merge failed due to an object being too large.
     */
    ObjectTooLarge'
      NumericLiteral
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' PullRequestStatus'
    EnumMember
      Identifier: '
    /**
     * Status not set. Default state.
     */
    NotSet'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Pull request is active.
     */
    Active'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Pull request is abandoned.
     */
    Abandoned'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Pull request is completed.
     */
    Completed'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Used in pull request search criteria to include all statuses.
     */
    All'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' PullRequestTabExtensionConfig'
    PropertySignature
      Identifier: '
    pullRequestId'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    repositoryId'
      QuestionToken
      StringKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' PullRequestTimeRangeType'
    EnumMember
      Identifier: '
    /**
     * The date when the pull request was created.
     */
    Created'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * The date when the pull request was closed (completed, abandoned, or merged externally).
     */
    Closed'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' RealTimePullRequestEvent'
    PropertySignature
      Identifier: '
    /**
     * The id of this event. Can be used to track send/receive state between client and server.
     */
    eventId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The id of the pull request this event was generated for.
     */
    pullRequestId'
      QuestionToken
      NumberKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' RefFavoriteType'
    EnumMember
      Identifier: '
    Invalid'
      NumericLiteral
    EnumMember
      Identifier: '
    Folder'
      NumericLiteral
    EnumMember
      Identifier: '
    Ref'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' RetargetEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' RealTimePullRequestEvent'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ReviewersUpdatedEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' RealTimePullRequestEvent'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ReviewersVotesResetEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' RealTimePullRequestEvent'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ReviewerVoteUpdatedEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' RealTimePullRequestEvent'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ShareNotificationContext'
    PropertySignature
      Identifier: '
    /**
     * Optional user note or message.
     */
    message'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Identities of users who will receive a share notification.
     */
    receivers'
      QuestionToken
      ArrayType
        TypeReference
          QualifiedName
            Identifier: ' VSSInterfaces'
            Identifier: 'IdentityRef'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SourceToTargetRef'
    PropertySignature
      Identifier: '
    /**
     * The source ref to copy. For example, refs/heads/master.
     */
    sourceRef'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The target ref to update. For example, refs/heads/master.
     */
    targetRef'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' StatusAddedEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' RealTimePullRequestEvent'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' StatusesDeletedEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' RealTimePullRequestEvent'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' StatusUpdatedEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' RealTimePullRequestEvent'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SupportedIde'
    PropertySignature
      Identifier: '
    /**
     * The download URL for the IDE.
     */
    downloadUrl'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The type of the IDE.
     */
    ideType'
      QuestionToken
      TypeReference
        Identifier: ' SupportedIdeType'
    PropertySignature
      Identifier: '
    /**
     * The name of the IDE.
     */
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The URL to open the protocol handler for the IDE.
     */
    protocolHandlerUrl'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * A list of SupportedPlatforms.
     */
    supportedPlatforms'
      QuestionToken
      ArrayType
        StringKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' SupportedIdeType'
    EnumMember
      Identifier: '
    Unknown'
      NumericLiteral
    EnumMember
      Identifier: '
    AndroidStudio'
      NumericLiteral
    EnumMember
      Identifier: '
    AppCode'
      NumericLiteral
    EnumMember
      Identifier: '
    CLion'
      NumericLiteral
    EnumMember
      Identifier: '
    DataGrip'
      NumericLiteral
    EnumMember
      Identifier: '
    Eclipse'
      NumericLiteral
    EnumMember
      Identifier: '
    IntelliJ'
      NumericLiteral
    EnumMember
      Identifier: '
    MPS'
      NumericLiteral
    EnumMember
      Identifier: '
    PhpStorm'
      NumericLiteral
    EnumMember
      Identifier: '
    PyCharm'
      NumericLiteral
    EnumMember
      Identifier: '
    RubyMine'
      NumericLiteral
    EnumMember
      Identifier: '
    Tower'
      NumericLiteral
    EnumMember
      Identifier: '
    VisualStudio'
      NumericLiteral
    EnumMember
      Identifier: '
    VSCode'
      NumericLiteral
    EnumMember
      Identifier: '
    WebStorm'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TfvcBranch'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' TfvcBranchRef'
    PropertySignature
      Identifier: '
    /**
     * List of children for the branch.
     */
    children'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' TfvcBranch'
    PropertySignature
      Identifier: '
    /**
     * List of branch mappings.
     */
    mappings'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' TfvcBranchMapping'
    PropertySignature
      Identifier: '
    /**
     * Path of the branch's parent.
     */
    parent'
      QuestionToken
      TypeReference
        Identifier: ' TfvcShallowBranchRef'
    PropertySignature
      Identifier: '
    /**
     * List of paths of the related branches.
     */
    relatedBranches'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' TfvcShallowBranchRef'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TfvcBranchMapping'
    PropertySignature
      Identifier: '
    /**
     * Depth of the branch.
     */
    depth'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Server item for the branch.
     */
    serverItem'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Type of the branch.
     */
    type'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TfvcBranchRef'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' TfvcShallowBranchRef'
    PropertySignature
      Identifier: '
    /**
     * A collection of REST reference links.
     */
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * Creation date of the branch.
     */
    createdDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * Branch description.
     */
    description'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Is the branch deleted?
     */
    isDeleted'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Alias or display name of user
     */
    owner'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' VSSInterfaces'
          Identifier: 'IdentityRef'
    PropertySignature
      Identifier: '
    /**
     * URL to retrieve the item.
     */
    url'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TfvcChange'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Change'
        TypeReference
          Identifier: 'TfvcItem'
    PropertySignature
      Identifier: '
    /**
     * List of merge sources in case of rename or branch creation.
     */
    mergeSources'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' TfvcMergeSource'
    PropertySignature
      Identifier: '
    /**
     * Version at which a (shelved) change was pended against
     */
    pendingVersion'
      QuestionToken
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TfvcChangeset'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' TfvcChangesetRef'
    PropertySignature
      Identifier: '
    /**
     * Changeset Account Id also known as Organization Id.
     */
    accountId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * List of associated changes.
     */
    changes'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' TfvcChange'
    PropertySignature
      Identifier: '
    /**
     * List of Checkin Notes for the changeset.
     */
    checkinNotes'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' CheckinNote'
    PropertySignature
      Identifier: '
    /**
     * Changeset collection Id.
     */
    collectionId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * True if more changes are available.
     */
    hasMoreChanges'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Policy Override for the changeset.
     */
    policyOverride'
      QuestionToken
      TypeReference
        Identifier: ' TfvcPolicyOverrideInfo'
    PropertySignature
      Identifier: '
    /**
     * Team Project Ids for the changeset.
     */
    teamProjectIds'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * List of work items associated with the changeset.
     */
    workItems'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' AssociatedWorkItem'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TfvcChangesetRef'
    PropertySignature
      Identifier: '
    /**
     * A collection of REST reference links.
     */
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * Alias or display name of user.
     */
    author'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' VSSInterfaces'
          Identifier: 'IdentityRef'
    PropertySignature
      Identifier: '
    /**
     * Changeset Id.
     */
    changesetId'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Alias or display name of user.
     */
    checkedInBy'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' VSSInterfaces'
          Identifier: 'IdentityRef'
    PropertySignature
      Identifier: '
    /**
     * Comment for the changeset.
     */
    comment'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Was the Comment result truncated?
     */
    commentTruncated'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Creation date of the changeset.
     */
    createdDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * URL to retrieve the item.
     */
    url'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TfvcChangesetSearchCriteria'
    PropertySignature
      Identifier: '
    /**
     * Alias or display name of user who made the changes.
     */
    author'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Whether or not to follow renames for the given item being queried.
     */
    followRenames'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * If provided, only include changesets created after this date (string).
     */
    fromDate'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * If provided, only include changesets after this changesetID.
     */
    fromId'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Whether to include the _links field on the shallow references.
     */
    includeLinks'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Path of item to search under.
     */
    itemPath'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    mappings'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' TfvcMappingFilter'
    PropertySignature
      Identifier: '
    /**
     * If provided, only include changesets created before this date (string).
     */
    toDate'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * If provided, a version descriptor for the latest change list to include.
     */
    toId'
      QuestionToken
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TfvcChangesetsRequestData'
    PropertySignature
      Identifier: '
    /**
     * List of changeset Ids.
     */
    changesetIds'
      QuestionToken
      ArrayType
        NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Max length of the comment.
     */
    commentLength'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Whether to include the _links field on the shallow references
     */
    includeLinks'
      QuestionToken
      BooleanKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TfvcCheckinEventData'
    PropertySignature
      Identifier: '
    changeset'
      QuestionToken
      TypeReference
        Identifier: ' TfvcChangeset'
    PropertySignature
      Identifier: '
    project'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' TfsCoreInterfaces'
          Identifier: 'TeamProjectReference'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TfvcHistoryEntry'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' HistoryEntry'
        TypeReference
          Identifier: 'TfvcItem'
    PropertySignature
      Identifier: '
    /**
     * The encoding of the item at this point in history (only relevant for File history, not folders)
     */
    encoding'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * The file id of the item at this point in history (only relevant for File history, not folders)
     */
    fileId'
      QuestionToken
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TfvcItem'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' ItemModel'
    PropertySignature
      Identifier: '
    /**
     * Item changed datetime.
     */
    changeDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * Greater than 0 if item is deleted.
     */
    deletionId'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * File encoding from database, -1 represents binary.
     */
    encoding'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * MD5 hash as a base 64 string, applies to files only.
     */
    hashValue'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * True if item is a branch.
     */
    isBranch'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * True if there is a change pending.
     */
    isPendingChange'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * The size of the file, if applicable.
     */
    size'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Changeset version Id.
     */
    version'
      QuestionToken
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TfvcItemDescriptor'
    PropertySignature
      Identifier: '
    /**
     * Item path.
     */
    path'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Defaults to OneLevel.
     */
    recursionLevel'
      QuestionToken
      TypeReference
        Identifier: ' VersionControlRecursionType'
    PropertySignature
      Identifier: '
    /**
     * Specify the desired version, can be null or empty string only if VersionType is latest or tip.
     */
    version'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Defaults to None.
     */
    versionOption'
      QuestionToken
      TypeReference
        Identifier: ' TfvcVersionOption'
    PropertySignature
      Identifier: '
    /**
     * Defaults to Latest.
     */
    versionType'
      QuestionToken
      TypeReference
        Identifier: ' TfvcVersionType'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TfvcItemPreviousHash'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' TfvcItem'
    PropertySignature
      Identifier: '
    /**
     * MD5 hash as a base 64 string, applies to files only.
     */
    previousHashValue'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TfvcItemRequestData'
    PropertySignature
      Identifier: '
    /**
     * If true, include metadata about the file type
     */
    includeContentMetadata'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Whether to include the _links field on the shallow references
     */
    includeLinks'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    itemDescriptors'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' TfvcItemDescriptor'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TfvcLabel'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' TfvcLabelRef'
    PropertySignature
      Identifier: '
    /**
     * List of items.
     */
    items'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' TfvcItem'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TfvcLabelRef'
    PropertySignature
      Identifier: '
    /**
     * Collection of reference links.
     */
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * Label description.
     */
    description'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Label Id.
     */
    id'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Label scope.
     */
    labelScope'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Last modified datetime for the label.
     */
    modifiedDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * Label name.
     */
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Label owner.
     */
    owner'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' VSSInterfaces'
          Identifier: 'IdentityRef'
    PropertySignature
      Identifier: '
    /**
     * Label Url.
     */
    url'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TfvcLabelRequestData'
    PropertySignature
      Identifier: '
    /**
     * Whether to include the _links field on the shallow references
     */
    includeLinks'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    itemLabelFilter'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    labelScope'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    maxItemCount'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    owner'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TfvcMappingFilter'
    PropertySignature
      Identifier: '
    /**
     * True if ServerPath should be excluded.
     */
    exclude'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Path to be included or excluded.
     */
    serverPath'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TfvcMergeSource'
    PropertySignature
      Identifier: '
    /**
     * Indicates if this a rename source. If false, it is a merge source.
     */
    isRename'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * The server item of the merge source.
     */
    serverItem'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Start of the version range.
     */
    versionFrom'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * End of the version range.
     */
    versionTo'
      QuestionToken
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TfvcPolicyFailureInfo'
    PropertySignature
      Identifier: '
    /**
     * Policy failure message.
     */
    message'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Name of the policy that failed.
     */
    policyName'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TfvcPolicyOverrideInfo'
    PropertySignature
      Identifier: '
    /**
     * Overidden policy comment.
     */
    comment'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Information on the failed policy that was overridden.
     */
    policyFailures'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' TfvcPolicyFailureInfo'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TfvcShallowBranchRef'
    PropertySignature
      Identifier: '
    /**
     * Path for the branch.
     */
    path'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TfvcShelveset'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' TfvcShelvesetRef'
    PropertySignature
      Identifier: '
    /**
     * List of changes.
     */
    changes'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' TfvcChange'
    PropertySignature
      Identifier: '
    /**
     * List of checkin notes.
     */
    notes'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' CheckinNote'
    PropertySignature
      Identifier: '
    /**
     * Policy override information if applicable.
     */
    policyOverride'
      QuestionToken
      TypeReference
        Identifier: ' TfvcPolicyOverrideInfo'
    PropertySignature
      Identifier: '
    /**
     * List of associated workitems.
     */
    workItems'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' AssociatedWorkItem'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TfvcShelvesetRef'
    PropertySignature
      Identifier: '
    /**
     * List of reference links for the shelveset.
     */
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * Shelveset comment.
     */
    comment'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Shelveset comment truncated as applicable.
     */
    commentTruncated'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Shelveset create date.
     */
    createdDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * Shelveset Id.
     */
    id'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Shelveset name.
     */
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Shelveset Owner.
     */
    owner'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' VSSInterfaces'
          Identifier: 'IdentityRef'
    PropertySignature
      Identifier: '
    /**
     * Shelveset Url.
     */
    url'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TfvcShelvesetRequestData'
    PropertySignature
      Identifier: '
    /**
     * Whether to include policyOverride and notes Only applies when requesting a single deep shelveset
     */
    includeDetails'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Whether to include the _links field on the shallow references. Does not apply when requesting a single deep shelveset object. Links will always be included in the deep shelveset.
     */
    includeLinks'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Whether to include workItems
     */
    includeWorkItems'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Max number of changes to include
     */
    maxChangeCount'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Max length of comment
     */
    maxCommentLength'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Shelveset name
     */
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Owner's ID. Could be a name or a guid.
     */
    owner'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TfvcStatistics'
    PropertySignature
      Identifier: '
    /**
     * Id of the last changeset the stats are based on.
     */
    changesetId'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Count of files at the requested scope.
     */
    fileCountTotal'
      QuestionToken
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TfvcVersionDescriptor'
    PropertySignature
      Identifier: '
    /**
     * Version object.
     */
    version'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    versionOption'
      QuestionToken
      TypeReference
        Identifier: ' TfvcVersionOption'
    PropertySignature
      Identifier: '
    versionType'
      QuestionToken
      TypeReference
        Identifier: ' TfvcVersionType'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' TfvcVersionOption'
    EnumMember
      Identifier: '
    /**
     * None.
     */
    None'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Return the previous version.
     */
    Previous'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Only usuable with versiontype MergeSource and integer versions, uses RenameSource identifier instead of Merge identifier.
     */
    UseRename'
      NumericLiteral
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' TfvcVersionType'
    EnumMember
      Identifier: '
    /**
     * Version is treated as a ChangesetId.
     */
    None'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Version is treated as a ChangesetId.
     */
    Changeset'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Version is treated as a Shelveset name and owner.
     */
    Shelveset'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Version is treated as a Change.
     */
    Change'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Version is treated as a Date.
     */
    Date'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * If Version is defined the Latest of that Version will be used, if no version is defined the latest ChangesetId will be used.
     */
    Latest'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Version will be treated as a Tip, if no version is defined latest will be used.
     */
    Tip'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Version will be treated as a MergeSource.
     */
    MergeSource'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TitleDescriptionUpdatedEvent'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' RealTimePullRequestEvent'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' UpdateRefsRequest'
    PropertySignature
      Identifier: '
    refUpdateRequests'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' GitRefUpdate'
    PropertySignature
      Identifier: '
    updateMode'
      QuestionToken
      TypeReference
        Identifier: ' GitRefUpdateMode'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' VersionControlChangeType'
    EnumMember
      Identifier: '
    None'
      NumericLiteral
    EnumMember
      Identifier: '
    Add'
      NumericLiteral
    EnumMember
      Identifier: '
    Edit'
      NumericLiteral
    EnumMember
      Identifier: '
    Encoding'
      NumericLiteral
    EnumMember
      Identifier: '
    Rename'
      NumericLiteral
    EnumMember
      Identifier: '
    Delete'
      NumericLiteral
    EnumMember
      Identifier: '
    Undelete'
      NumericLiteral
    EnumMember
      Identifier: '
    Branch'
      NumericLiteral
    EnumMember
      Identifier: '
    Merge'
      NumericLiteral
    EnumMember
      Identifier: '
    Lock'
      NumericLiteral
    EnumMember
      Identifier: '
    Rollback'
      NumericLiteral
    EnumMember
      Identifier: '
    SourceRename'
      NumericLiteral
    EnumMember
      Identifier: '
    TargetRename'
      NumericLiteral
    EnumMember
      Identifier: '
    Property'
      NumericLiteral
    EnumMember
      Identifier: '
    All'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' VersionControlProjectInfo'
    PropertySignature
      Identifier: '
    defaultSourceControlType'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' TfsCoreInterfaces'
          Identifier: 'SourceControlTypes'
    PropertySignature
      Identifier: '
    project'
      QuestionToken
      TypeReference
        QualifiedName
          Identifier: ' TfsCoreInterfaces'
          Identifier: 'TeamProjectReference'
    PropertySignature
      Identifier: '
    supportsGit'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    supportsTFVC'
      QuestionToken
      BooleanKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' VersionControlRecursionType'
    EnumMember
      Identifier: '
    /**
     * Only return the specified item.
     */
    None'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Return the specified item and its direct children.
     */
    OneLevel'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Return the specified item and its direct children, as well as recursive chains of nested child folders that only contain a single folder.
     */
    OneLevelPlusNestedEmptyFolders'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Return specified item and all descendants
     */
    Full'
      NumericLiteral
  VariableStatement
    ExportKeyword
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' TypeInfo'
        TypeLiteral
          PropertySignature
            Identifier: '
    AdvSecEnablementStatus'
            AnyKeyword
          PropertySignature
            Identifier: '
    Attachment'
            AnyKeyword
          PropertySignature
            Identifier: '
    BillableCommitterDetail'
            AnyKeyword
          PropertySignature
            Identifier: '
    Change'
            AnyKeyword
          PropertySignature
            Identifier: '
    ChangeList'
            AnyKeyword
          PropertySignature
            Identifier: '
    Comment'
            AnyKeyword
          PropertySignature
            Identifier: '
    CommentThread'
            AnyKeyword
          PropertySignature
            Identifier: '
    CommentThreadStatus'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            unknown'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            active'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            fixed'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            wontFix'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            closed'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            byDesign'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            pending'
                    NumberKeyword
          PropertySignature
            Identifier: '
    CommentType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            unknown'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            text'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            codeChange'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            system'
                    NumberKeyword
          PropertySignature
            Identifier: '
    FileDiff'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitAnnotatedTag'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitAsyncOperationStatus'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            queued'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            inProgress'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            completed'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            failed'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            abandoned'
                    NumberKeyword
          PropertySignature
            Identifier: '
    GitAsyncRefOperation'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitAsyncRefOperationDetail'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitAsyncRefOperationFailureStatus'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            none'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            invalidRefName'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            refNameConflict'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            createBranchPermissionRequired'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            writePermissionRequired'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            targetBranchDeleted'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            gitObjectTooLarge'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            operationIndentityNotFound'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            asyncOperationNotFound'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            other'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            emptyCommitterSignature'
                    NumberKeyword
          PropertySignature
            Identifier: '
    GitAsyncRefOperationParameters'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitAsyncRefOperationSource'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitBaseVersionDescriptor'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitBranchStats'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitChange'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitCherryPick'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitCommit'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitCommitChanges'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitCommitDiffs'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitCommitRef'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitCommitToCreate'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitConflict'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitConflictAddAdd'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitConflictAddRename'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitConflictDeleteEdit'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitConflictDeleteRename'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitConflictDirectoryFile'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitConflictEditDelete'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitConflictEditEdit'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitConflictFileDirectory'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitConflictRename1to2'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitConflictRename2to1'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitConflictRenameAdd'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitConflictRenameDelete'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitConflictRenameRename'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitConflictType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            none'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            addAdd'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            addRename'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            deleteEdit'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            deleteRename'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            directoryFile'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            directoryChild'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            editDelete'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            editEdit'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            fileDirectory'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            rename1to2'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            rename2to1'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            renameAdd'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            renameDelete'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            renameRename'
                    NumberKeyword
          PropertySignature
            Identifier: '
    GitConflictUpdateResult'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitConflictUpdateStatus'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            succeeded'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            badRequest'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            invalidResolution'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            unsupportedConflictType'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            notFound'
                    NumberKeyword
          PropertySignature
            Identifier: '
    GitDeletedRepository'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitForkRef'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitForkSyncRequest'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitForkTeamProjectReference'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitHistoryMode'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            simplifiedHistory'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            firstParent'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            fullHistory'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            fullHistorySimplifyMerges'
                    NumberKeyword
          PropertySignature
            Identifier: '
    GitImportFailedEvent'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitImportRequest'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitImportSucceededEvent'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitItem'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitItemDescriptor'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitItemRequestData'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitLastChangeTreeItems'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitMerge'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitObject'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitObjectType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            bad'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            commit'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            tree'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            blob'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            tag'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            ext2'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            ofsDelta'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            refDelta'
                    NumberKeyword
          PropertySignature
            Identifier: '
    GitPathAction'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitPathActions'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            none'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            edit'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            delete'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            add'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            rename'
                    NumberKeyword
          PropertySignature
            Identifier: '
    GitPathToItemsCollection'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitPolicyConfigurationResponse'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitPullRequest'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitPullRequestChange'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitPullRequestCommentThread'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitPullRequestCompletionOptions'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitPullRequestIteration'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitPullRequestIterationChanges'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitPullRequestMergeStrategy'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            noFastForward'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            squash'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            rebase'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            rebaseMerge'
                    NumberKeyword
          PropertySignature
            Identifier: '
    GitPullRequestQuery'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitPullRequestQueryInput'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitPullRequestQueryType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            notSet'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            lastMergeCommit'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            commit'
                    NumberKeyword
          PropertySignature
            Identifier: '
    GitPullRequestReviewFileType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            changeEntry'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            attachment'
                    NumberKeyword
          PropertySignature
            Identifier: '
    GitPullRequestSearchCriteria'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitPullRequestStatus'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitPush'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitPushEventData'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitPushRef'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitPushSearchCriteria'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitQueryBranchStatsCriteria'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitQueryCommitsCriteria'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitQueryRefsCriteria'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitRef'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitRefFavorite'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitRefSearchType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            exact'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            startsWith'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            contains'
                    NumberKeyword
          PropertySignature
            Identifier: '
    GitRefUpdateMode'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            bestEffort'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            allOrNone'
                    NumberKeyword
          PropertySignature
            Identifier: '
    GitRefUpdateResult'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitRefUpdateStatus'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            succeeded'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            forcePushRequired'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            staleOldObjectId'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            invalidRefName'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            unprocessed'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            unresolvableToCommit'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            writePermissionRequired'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            manageNotePermissionRequired'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            createBranchPermissionRequired'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            createTagPermissionRequired'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            rejectedByPlugin'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            locked'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            refNameConflict'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            rejectedByPolicy'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            succeededNonExistentRef'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            succeededCorruptRef'
                    NumberKeyword
          PropertySignature
            Identifier: '
    GitRepository'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitRepositoryCreateOptions'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitRepositoryRef'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitResolutionError'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            none'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            mergeContentNotFound'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            pathInUse'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            invalidPath'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            unknownAction'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            unknownMergeType'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            otherError'
                    NumberKeyword
          PropertySignature
            Identifier: '
    GitResolutionMergeContent'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitResolutionMergeType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            undecided'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            takeSourceContent'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            takeTargetContent'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            autoMerged'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            userMerged'
                    NumberKeyword
          PropertySignature
            Identifier: '
    GitResolutionPathConflict'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitResolutionPathConflictAction'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            undecided'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            keepSourceRenameTarget'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            keepSourceDeleteTarget'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            keepTargetRenameSource'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            keepTargetDeleteSource'
                    NumberKeyword
          PropertySignature
            Identifier: '
    GitResolutionPickOneAction'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitResolutionRename1to2'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitResolutionRename1to2Action'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            undecided'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            keepSourcePath'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            keepTargetPath'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            keepBothFiles'
                    NumberKeyword
          PropertySignature
            Identifier: '
    GitResolutionStatus'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            unresolved'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            partiallyResolved'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            resolved'
                    NumberKeyword
          PropertySignature
            Identifier: '
    GitResolutionWhichAction'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            undecided'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            pickSourceAction'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            pickTargetAction'
                    NumberKeyword
          PropertySignature
            Identifier: '
    GitRevert'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitStatus'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitStatusState'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            notSet'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            pending'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            succeeded'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            failed'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            error'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            notApplicable'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            partiallySucceeded'
                    NumberKeyword
          PropertySignature
            Identifier: '
    GitTargetVersionDescriptor'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitTreeDiff'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitTreeDiffEntry'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitTreeDiffResponse'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitTreeEntryRef'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitTreeRef'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitUserDate'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitVersionDescriptor'
            AnyKeyword
          PropertySignature
            Identifier: '
    GitVersionOptions'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            none'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            previousChange'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            firstParent'
                    NumberKeyword
          PropertySignature
            Identifier: '
    GitVersionType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            branch'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            tag'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            commit'
                    NumberKeyword
          PropertySignature
            Identifier: '
    HistoryEntry'
            AnyKeyword
          PropertySignature
            Identifier: '
    IncludedGitCommit'
            AnyKeyword
          PropertySignature
            Identifier: '
    ItemContent'
            AnyKeyword
          PropertySignature
            Identifier: '
    ItemContentType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            rawText'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            base64Encoded'
                    NumberKeyword
          PropertySignature
            Identifier: '
    ItemDetailsOptions'
            AnyKeyword
          PropertySignature
            Identifier: '
    IterationReason'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            push'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            forcePush'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            create'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            rebase'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            unknown'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            retarget'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            resolveConflicts'
                    NumberKeyword
          PropertySignature
            Identifier: '
    LineDiffBlock'
            AnyKeyword
          PropertySignature
            Identifier: '
    LineDiffBlockChangeType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            none'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            add'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            delete'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            edit'
                    NumberKeyword
          PropertySignature
            Identifier: '
    PullRequestAsyncStatus'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            notSet'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            queued'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            conflicts'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            succeeded'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            rejectedByPolicy'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            failure'
                    NumberKeyword
          PropertySignature
            Identifier: '
    PullRequestMergeFailureType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            none'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            unknown'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            caseSensitive'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            objectTooLarge'
                    NumberKeyword
          PropertySignature
            Identifier: '
    PullRequestStatus'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            notSet'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            active'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            abandoned'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            completed'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            all'
                    NumberKeyword
          PropertySignature
            Identifier: '
    PullRequestTimeRangeType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            created'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            closed'
                    NumberKeyword
          PropertySignature
            Identifier: '
    RefFavoriteType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            invalid'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            folder'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            ref'
                    NumberKeyword
          PropertySignature
            Identifier: '
    SupportedIde'
            AnyKeyword
          PropertySignature
            Identifier: '
    SupportedIdeType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            unknown'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            androidStudio'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            appCode'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            cLion'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            dataGrip'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            eclipse'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            intelliJ'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            mps'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            phpStorm'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            pyCharm'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            rubyMine'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            tower'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            visualStudio'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            vsCode'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            webStorm'
                    NumberKeyword
          PropertySignature
            Identifier: '
    TfvcBranch'
            AnyKeyword
          PropertySignature
            Identifier: '
    TfvcBranchRef'
            AnyKeyword
          PropertySignature
            Identifier: '
    TfvcChange'
            AnyKeyword
          PropertySignature
            Identifier: '
    TfvcChangeset'
            AnyKeyword
          PropertySignature
            Identifier: '
    TfvcChangesetRef'
            AnyKeyword
          PropertySignature
            Identifier: '
    TfvcCheckinEventData'
            AnyKeyword
          PropertySignature
            Identifier: '
    TfvcHistoryEntry'
            AnyKeyword
          PropertySignature
            Identifier: '
    TfvcItem'
            AnyKeyword
          PropertySignature
            Identifier: '
    TfvcItemDescriptor'
            AnyKeyword
          PropertySignature
            Identifier: '
    TfvcItemPreviousHash'
            AnyKeyword
          PropertySignature
            Identifier: '
    TfvcItemRequestData'
            AnyKeyword
          PropertySignature
            Identifier: '
    TfvcLabel'
            AnyKeyword
          PropertySignature
            Identifier: '
    TfvcLabelRef'
            AnyKeyword
          PropertySignature
            Identifier: '
    TfvcShelveset'
            AnyKeyword
          PropertySignature
            Identifier: '
    TfvcShelvesetRef'
            AnyKeyword
          PropertySignature
            Identifier: '
    TfvcVersionDescriptor'
            AnyKeyword
          PropertySignature
            Identifier: '
    TfvcVersionOption'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            none'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            previous'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            useRename'
                    NumberKeyword
          PropertySignature
            Identifier: '
    TfvcVersionType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            none'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            changeset'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            shelveset'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            change'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            date'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            latest'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            tip'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            mergeSource'
                    NumberKeyword
          PropertySignature
            Identifier: '
    UpdateRefsRequest'
            AnyKeyword
          PropertySignature
            Identifier: '
    VersionControlChangeType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            none'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            add'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            edit'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            encoding'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            rename'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            delete'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            undelete'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            branch'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            merge'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            lock'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            rollback'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            sourceRename'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            targetRename'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            property'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            all'
                    NumberKeyword
          PropertySignature
            Identifier: '
    VersionControlProjectInfo'
            AnyKeyword
          PropertySignature
            Identifier: '
    VersionControlRecursionType'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            none'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            oneLevel'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            oneLevelPlusNestedEmptyFolders'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            full'
                    NumberKeyword
