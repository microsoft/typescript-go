SourceFile
  InterfaceDeclaration
    Identifier: ' MapConstructor'
    MethodSignature
      Identifier: '
    /**
     * Groups members of an iterable according to the return value of the passed callback.
     * @param items An iterable.
     * @param keySelector A callback which will be invoked for each item in items.
     */
    groupBy'
      TypeParameter
        Identifier: 'K'
      TypeParameter
        Identifier: ' T'
      Parameter
        Identifier: '
        items'
        TypeReference
          Identifier: ' Iterable'
          TypeReference
            Identifier: 'T'
      Parameter
        Identifier: '
        keySelector'
        FunctionType
          Parameter
            Identifier: 'item'
            TypeReference
              Identifier: ' T'
          Parameter
            Identifier: ' index'
            NumberKeyword
          TypeReference
            Identifier: ' K'
      TypeReference
        Identifier: ' Map'
        TypeReference
          Identifier: 'K'
        ArrayType
          TypeReference
            Identifier: ' T'
  InterfaceDeclaration
    Identifier: ' ReadonlySetLike'
    TypeParameter
      Identifier: 'T'
    MethodSignature
      Identifier: '
    /**
     * Despite its name, returns an iterator of the values in the set-like.
     */
    keys'
      TypeReference
        Identifier: ' Iterator'
        TypeReference
          Identifier: 'T'
    MethodSignature
      Identifier: '
    /**
     * @returns a boolean indicating whether an element with the specified value exists in the set-like or not.
     */
    has'
      Parameter
        Identifier: 'value'
        TypeReference
          Identifier: ' T'
      BooleanKeyword
    PropertySignature
      ReadonlyKeyword
      Identifier: ' size'
      NumberKeyword
  InterfaceDeclaration
    Identifier: ' Set'
    TypeParameter
      Identifier: 'T'
    MethodSignature
      Identifier: '
    /**
     * @returns a new Set containing all the elements in this Set and also all the elements in the argument.
     */
    union'
      TypeParameter
        Identifier: 'U'
      Parameter
        Identifier: 'other'
        TypeReference
          Identifier: ' ReadonlySetLike'
          TypeReference
            Identifier: 'U'
      TypeReference
        Identifier: ' Set'
        UnionType
          TypeReference
            Identifier: 'T'
          TypeReference
            Identifier: ' U'
    MethodSignature
      Identifier: '
    /**
     * @returns a new Set containing all the elements which are both in this Set and in the argument.
     */
    intersection'
      TypeParameter
        Identifier: 'U'
      Parameter
        Identifier: 'other'
        TypeReference
          Identifier: ' ReadonlySetLike'
          TypeReference
            Identifier: 'U'
      TypeReference
        Identifier: ' Set'
        IntersectionType
          TypeReference
            Identifier: 'T'
          TypeReference
            Identifier: ' U'
    MethodSignature
      Identifier: '
    /**
     * @returns a new Set containing all the elements in this Set which are not also in the argument.
     */
    difference'
      TypeParameter
        Identifier: 'U'
      Parameter
        Identifier: 'other'
        TypeReference
          Identifier: ' ReadonlySetLike'
          TypeReference
            Identifier: 'U'
      TypeReference
        Identifier: ' Set'
        TypeReference
          Identifier: 'T'
    MethodSignature
      Identifier: '
    /**
     * @returns a new Set containing all the elements which are in either this Set or in the argument, but not in both.
     */
    symmetricDifference'
      TypeParameter
        Identifier: 'U'
      Parameter
        Identifier: 'other'
        TypeReference
          Identifier: ' ReadonlySetLike'
          TypeReference
            Identifier: 'U'
      TypeReference
        Identifier: ' Set'
        UnionType
          TypeReference
            Identifier: 'T'
          TypeReference
            Identifier: ' U'
    MethodSignature
      Identifier: '
    /**
     * @returns a boolean indicating whether all the elements in this Set are also in the argument.
     */
    isSubsetOf'
      Parameter
        Identifier: 'other'
        TypeReference
          Identifier: ' ReadonlySetLike'
          UnknownKeyword
      BooleanKeyword
    MethodSignature
      Identifier: '
    /**
     * @returns a boolean indicating whether all the elements in the argument are also in this Set.
     */
    isSupersetOf'
      Parameter
        Identifier: 'other'
        TypeReference
          Identifier: ' ReadonlySetLike'
          UnknownKeyword
      BooleanKeyword
    MethodSignature
      Identifier: '
    /**
     * @returns a boolean indicating whether this Set has no elements in common with the argument.
     */
    isDisjointFrom'
      Parameter
        Identifier: 'other'
        TypeReference
          Identifier: ' ReadonlySetLike'
          UnknownKeyword
      BooleanKeyword
  InterfaceDeclaration
    Identifier: ' ReadonlySet'
    TypeParameter
      Identifier: 'T'
    MethodSignature
      Identifier: '
    /**
     * @returns a new Set containing all the elements in this Set and also all the elements in the argument.
     */
    union'
      TypeParameter
        Identifier: 'U'
      Parameter
        Identifier: 'other'
        TypeReference
          Identifier: ' ReadonlySetLike'
          TypeReference
            Identifier: 'U'
      TypeReference
        Identifier: ' Set'
        UnionType
          TypeReference
            Identifier: 'T'
          TypeReference
            Identifier: ' U'
    MethodSignature
      Identifier: '
    /**
     * @returns a new Set containing all the elements which are both in this Set and in the argument.
     */
    intersection'
      TypeParameter
        Identifier: 'U'
      Parameter
        Identifier: 'other'
        TypeReference
          Identifier: ' ReadonlySetLike'
          TypeReference
            Identifier: 'U'
      TypeReference
        Identifier: ' Set'
        IntersectionType
          TypeReference
            Identifier: 'T'
          TypeReference
            Identifier: ' U'
    MethodSignature
      Identifier: '
    /**
     * @returns a new Set containing all the elements in this Set which are not also in the argument.
     */
    difference'
      TypeParameter
        Identifier: 'U'
      Parameter
        Identifier: 'other'
        TypeReference
          Identifier: ' ReadonlySetLike'
          TypeReference
            Identifier: 'U'
      TypeReference
        Identifier: ' Set'
        TypeReference
          Identifier: 'T'
    MethodSignature
      Identifier: '
    /**
     * @returns a new Set containing all the elements which are in either this Set or in the argument, but not in both.
     */
    symmetricDifference'
      TypeParameter
        Identifier: 'U'
      Parameter
        Identifier: 'other'
        TypeReference
          Identifier: ' ReadonlySetLike'
          TypeReference
            Identifier: 'U'
      TypeReference
        Identifier: ' Set'
        UnionType
          TypeReference
            Identifier: 'T'
          TypeReference
            Identifier: ' U'
    MethodSignature
      Identifier: '
    /**
     * @returns a boolean indicating whether all the elements in this Set are also in the argument.
     */
    isSubsetOf'
      Parameter
        Identifier: 'other'
        TypeReference
          Identifier: ' ReadonlySetLike'
          UnknownKeyword
      BooleanKeyword
    MethodSignature
      Identifier: '
    /**
     * @returns a boolean indicating whether all the elements in the argument are also in this Set.
     */
    isSupersetOf'
      Parameter
        Identifier: 'other'
        TypeReference
          Identifier: ' ReadonlySetLike'
          UnknownKeyword
      BooleanKeyword
    MethodSignature
      Identifier: '
    /**
     * @returns a boolean indicating whether this Set has no elements in common with the argument.
     */
    isDisjointFrom'
      Parameter
        Identifier: 'other'
        TypeReference
          Identifier: ' ReadonlySetLike'
          UnknownKeyword
      BooleanKeyword
