SourceFile
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: '
    ClassLikeDeclaration'
        ImportSpecifier
          Identifier: '
    codefix'
        ImportSpecifier
          Identifier: '
    Debug'
        ImportSpecifier
          Identifier: '
    findAncestor'
        ImportSpecifier
          Identifier: '
    FunctionLikeDeclaration'
        ImportSpecifier
          Identifier: '
    getUniqueName'
        ImportSpecifier
          Identifier: '
    identifierToKeywordKind'
        ImportSpecifier
          Identifier: '
    isAnyImportOrRequireStatement'
        ImportSpecifier
          Identifier: '
    isClassLike'
        ImportSpecifier
          Identifier: '
    isPrivateIdentifier'
        ImportSpecifier
          Identifier: '
    isPropertyAccessExpression'
        ImportSpecifier
          Identifier: '
    ModuleBlock'
        ImportSpecifier
          Identifier: '
    Node'
        ImportSpecifier
          Identifier: '
    Program'
        ImportSpecifier
          Identifier: '
    skipAlias'
        ImportSpecifier
          Identifier: '
    SourceFile'
        ImportSpecifier
          Identifier: '
    Symbol'
        ImportSpecifier
          Identifier: '
    SymbolFlags'
        ImportSpecifier
          Identifier: '
    TypeChecker'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' addImportsForMovedSymbols'
    StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' RefactorErrorInfo'
    PropertySignature
      Identifier: '
    error'
      StringKeyword
  FunctionDeclaration
    ExportKeyword
    Identifier: ' isRefactorErrorInfo'
    Parameter
      Identifier: 'info'
      UnknownKeyword
    TypePredicate
      Identifier: ' info'
      TypeReference
        Identifier: ' RefactorErrorInfo'
    Block
      ReturnStatement
        BinaryExpression
          PropertyAccessExpression
            ParenthesizedExpression
              AsExpression
                Identifier: 'info'
                TypeReference
                  Identifier: ' RefactorErrorInfo'
            Identifier: 'error'
          ExclamationEqualsEqualsToken
          Identifier: ' undefined'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' refactorKindBeginsWith'
    Parameter
      Identifier: 'known'
      StringKeyword
    Parameter
      Identifier: ' requested'
      UnionType
        StringKeyword
        UndefinedKeyword
    BooleanKeyword
    Block
      IfStatement
        PrefixUnaryExpression
          Identifier: 'requested'
        ReturnStatement
          TrueKeyword
      ReturnStatement
        BinaryExpression
          CallExpression
            PropertyAccessExpression
              Identifier: ' known'
              Identifier: 'substr'
            NumericLiteral
            PropertyAccessExpression
              Identifier: ' requested'
              Identifier: 'length'
          EqualsEqualsEqualsToken
          Identifier: ' requested'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getIdentifierForNode'
    Parameter
      Identifier: 'node'
      TypeReference
        Identifier: ' Node'
    Parameter
      Identifier: ' scope'
      UnionType
        TypeReference
          Identifier: ' FunctionLikeDeclaration'
        TypeReference
          Identifier: ' SourceFile'
        TypeReference
          Identifier: ' ModuleBlock'
        TypeReference
          Identifier: ' ClassLikeDeclaration'
    Parameter
      Identifier: ' checker'
      TypeReference
        Identifier: ' TypeChecker'
    Parameter
      Identifier: ' file'
      TypeReference
        Identifier: ' SourceFile'
    StringKeyword
    Block
      ReturnStatement
        ConditionalExpression
          BinaryExpression
            BinaryExpression
              BinaryExpression
                BinaryExpression
                  CallExpression
                    Identifier: ' isPropertyAccessExpression'
                    Identifier: 'node'
                  AmpersandAmpersandToken
                  PrefixUnaryExpression
                    CallExpression
                      Identifier: 'isClassLike'
                      Identifier: 'scope'
                AmpersandAmpersandToken
                PrefixUnaryExpression
                  CallExpression
                    PropertyAccessExpression
                      Identifier: 'checker'
                      Identifier: 'resolveName'
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'name'
                      Identifier: 'text'
                    Identifier: ' node'
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'Value'
                    FalseKeyword
              AmpersandAmpersandToken
              PrefixUnaryExpression
                CallExpression
                  Identifier: 'isPrivateIdentifier'
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'name'
            AmpersandAmpersandToken
            PrefixUnaryExpression
              CallExpression
                Identifier: 'identifierToKeywordKind'
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'name'
          QuestionToken
          PropertyAccessExpression
            PropertyAccessExpression
              Identifier: ' node'
              Identifier: 'name'
            Identifier: 'text'
          ColonToken
          CallExpression
            Identifier: ' getUniqueName'
            ConditionalExpression
              CallExpression
                Identifier: 'isClassLike'
                Identifier: 'scope'
              QuestionToken
              StringLiteral
              ColonToken
              StringLiteral
            Identifier: ' file'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' addTargetFileImports'
    Parameter
      Identifier: '
    oldFile'
      TypeReference
        Identifier: ' SourceFile'
    Parameter
      Identifier: '
    importsToCopy'
      TypeReference
        Identifier: ' Map'
        TypeReference
          Identifier: 'Symbol'
        TupleType
          BooleanKeyword
          UnionType
            TypeReference
              QualifiedName
                Identifier: ' codefix'
                Identifier: 'ImportOrRequireAliasDeclaration'
            UndefinedKeyword
    Parameter
      Identifier: '
    targetFileImportsFromOldFile'
      TypeReference
        Identifier: ' Map'
        TypeReference
          Identifier: 'Symbol'
        BooleanKeyword
    Parameter
      Identifier: '
    checker'
      TypeReference
        Identifier: ' TypeChecker'
    Parameter
      Identifier: '
    program'
      TypeReference
        Identifier: ' Program'
    Parameter
      Identifier: '
    importAdder'
      TypeReference
        QualifiedName
          Identifier: ' codefix'
          Identifier: 'ImportAdder'
    VoidKeyword
    Block
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            Identifier: '
    /**
     * Recomputing the imports is preferred with importAdder because it manages multiple import additions for a file and writes then to a ChangeTracker,
     * but sometimes it fails because of unresolved imports from files, or when a source file is not available for the target file (in this case when creating a new file).
     * So in that case, fall back to copying the import verbatim.
     */
    importsToCopy'
            Identifier: 'forEach'
          ArrowFunction
            Parameter
              ArrayBindingPattern
                BindingElement
                  Identifier: 'isValidTypeOnlyUseSite'
                BindingElement
                  Identifier: ' declaration'
            Parameter
              Identifier: ' symbol'
            EqualsGreaterThanToken
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' targetSymbol'
                    CallExpression
                      Identifier: ' skipAlias'
                      Identifier: 'symbol'
                      Identifier: ' checker'
              IfStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: 'checker'
                    Identifier: 'isUnknownSymbol'
                  Identifier: 'targetSymbol'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
            importAdder'
                        Identifier: 'addVerbatimImport'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: 'Debug'
                          Identifier: 'checkDefined'
                        BinaryExpression
                          Identifier: 'declaration'
                          QuestionQuestionToken
                          CallExpression
                            Identifier: ' findAncestor'
                            ElementAccessExpression
                              PropertyAccessExpression
                                Identifier: 'symbol'
                                Identifier: 'declarations'
                              QuestionDotToken
                              NumericLiteral
                            Identifier: ' isAnyImportOrRequireStatement'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
            importAdder'
                        Identifier: 'addImportFromExportedSymbol'
                      Identifier: 'targetSymbol'
                      Identifier: ' isValidTypeOnlyUseSite'
                      Identifier: ' declaration'
      ExpressionStatement
        CallExpression
          Identifier: '

    addImportsForMovedSymbols'
          Identifier: 'targetFileImportsFromOldFile'
          PropertyAccessExpression
            Identifier: ' oldFile'
            Identifier: 'fileName'
          Identifier: ' importAdder'
          Identifier: ' program'
