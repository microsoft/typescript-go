SourceFile
  ExpressionStatement
    CallExpression
      PropertyAccessExpression
        Identifier: '/// <reference path='fourslash.ts' />

// @noImplicitOverride: true

////type Foo = abstract new(...args: any) => any;
////declare function CreateMixin<C extends Foo, T extends Foo>(Context: C, Base: T): T & {
////    new (...args: any[]): { context: InstanceType<C> }
////}
////class Context {}
////class A {
////    foo() {}
////}
////class B extends CreateMixin(Context, A) {
////    [|override doSomethang() {}|]
////}

verify'
        Identifier: 'codeFix'
      ObjectLiteralExpression
        PropertyAssignment
          Identifier: '
    index'
          NumericLiteral
        PropertyAssignment
          Identifier: '
    description'
          ArrayLiteralExpression
            PropertyAccessExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: 'ts'
                  Identifier: 'Diagnostics'
                Identifier: 'Remove_override_modifier'
              Identifier: 'message'
        PropertyAssignment
          Identifier: '
    newRangeContent'
          StringLiteral
