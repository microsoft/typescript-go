SourceFile
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: '
    FormattingContext'
        ImportSpecifier
          Identifier: '
    FormattingRequestKind'
        ImportSpecifier
          Identifier: '
    FormattingScanner'
        ImportSpecifier
          Identifier: '
    getFormattingScanner'
        ImportSpecifier
          Identifier: '
    Rule'
        ImportSpecifier
          Identifier: '
    RuleAction'
        ImportSpecifier
          Identifier: '
    RuleFlags'
        ImportSpecifier
          Identifier: '
    RulesMap'
        ImportSpecifier
          Identifier: '
    SmartIndenter'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: '
    Block'
        ImportSpecifier
          Identifier: '
    CallExpression'
        ImportSpecifier
          Identifier: '
    canHaveModifiers'
        ImportSpecifier
          Identifier: '
    CatchClause'
        ImportSpecifier
          Identifier: '
    CharacterCodes'
        ImportSpecifier
          Identifier: '
    ClassDeclaration'
        ImportSpecifier
          Identifier: '
    CommentRange'
        ImportSpecifier
          Identifier: '
    concatenate'
        ImportSpecifier
          Identifier: '
    createTextChangeFromStartLength'
        ImportSpecifier
          Identifier: '
    Debug'
        ImportSpecifier
          Identifier: '
    Declaration'
        ImportSpecifier
          Identifier: '
    Diagnostic'
        ImportSpecifier
          Identifier: '
    EditorSettings'
        ImportSpecifier
          Identifier: '
    find'
        ImportSpecifier
          Identifier: '
    findAncestor'
        ImportSpecifier
          Identifier: '
    findIndex'
        ImportSpecifier
          Identifier: '
    findPrecedingToken'
        ImportSpecifier
          Identifier: '
    forEachChild'
        ImportSpecifier
          Identifier: '
    forEachRight'
        ImportSpecifier
          Identifier: '
    FormatCodeSettings'
        ImportSpecifier
          Identifier: '
    FormattingHost'
        ImportSpecifier
          Identifier: '
    FunctionDeclaration'
        ImportSpecifier
          Identifier: '
    getEndLinePosition'
        ImportSpecifier
          Identifier: '
    getLeadingCommentRangesOfNode'
        ImportSpecifier
          Identifier: '
    getLineStartPositionForPosition'
        ImportSpecifier
          Identifier: '
    getNameOfDeclaration'
        ImportSpecifier
          Identifier: '
    getNewLineOrDefaultFromHost'
        ImportSpecifier
          Identifier: '
    getNonDecoratorTokenPosOfNode'
        ImportSpecifier
          Identifier: '
    getStartPositionOfLine'
        ImportSpecifier
          Identifier: '
    getTokenAtPosition'
        ImportSpecifier
          Identifier: '
    getTrailingCommentRanges'
        ImportSpecifier
          Identifier: '
    hasDecorators'
        ImportSpecifier
          Identifier: '
    InterfaceDeclaration'
        ImportSpecifier
          Identifier: '
    isComment'
        ImportSpecifier
          Identifier: '
    isDecorator'
        ImportSpecifier
          Identifier: '
    isGrammarError'
        ImportSpecifier
          Identifier: '
    isJSDoc'
        ImportSpecifier
          Identifier: '
    isLineBreak'
        ImportSpecifier
          Identifier: '
    isModifier'
        ImportSpecifier
          Identifier: '
    isNodeArray'
        ImportSpecifier
          Identifier: '
    isStringOrRegularExpressionOrTemplateLiteral'
        ImportSpecifier
          Identifier: '
    isToken'
        ImportSpecifier
          Identifier: '
    isWhiteSpaceSingleLine'
        ImportSpecifier
          Identifier: '
    LanguageVariant'
        ImportSpecifier
          Identifier: '
    last'
        ImportSpecifier
          Identifier: '
    LineAndCharacter'
        ImportSpecifier
          Identifier: '
    MethodDeclaration'
        ImportSpecifier
          Identifier: '
    ModuleDeclaration'
        ImportSpecifier
          Identifier: '
    Node'
        ImportSpecifier
          Identifier: '
    NodeArray'
        ImportSpecifier
          Identifier: '
    nodeIsMissing'
        ImportSpecifier
          Identifier: '
    nodeIsSynthesized'
        ImportSpecifier
          Identifier: '
    rangeContainsPositionExclusive'
        ImportSpecifier
          Identifier: '
    rangeContainsRange'
        ImportSpecifier
          Identifier: '
    rangeContainsStartEnd'
        ImportSpecifier
          Identifier: '
    rangeOverlapsWithStartEnd'
        ImportSpecifier
          Identifier: '
    repeatString'
        ImportSpecifier
          Identifier: '
    SourceFile'
        ImportSpecifier
          Identifier: '
    SourceFileLike'
        ImportSpecifier
          Identifier: '
    startEndContainsRange'
        ImportSpecifier
          Identifier: '
    startEndOverlapsWithStartEnd'
        ImportSpecifier
          Identifier: '
    SyntaxKind'
        ImportSpecifier
          Identifier: '
    TextChange'
        ImportSpecifier
          Identifier: '
    TextRange'
        ImportSpecifier
          Identifier: '
    TriviaSyntaxKind'
        ImportSpecifier
          Identifier: '
    TypeReferenceNode'
    StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' FormatContext'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' options'
      TypeReference
        Identifier: ' FormatCodeSettings'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' getRules'
      TypeReference
        Identifier: ' RulesMap'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' host'
      TypeReference
        Identifier: ' FormattingHost'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TextRangeWithKind'
    TypeParameter
      Identifier: 'T'
      TypeReference
        Identifier: ' SyntaxKind'
      TypeReference
        Identifier: ' SyntaxKind'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' TextRange'
    PropertySignature
      Identifier: '
    kind'
      TypeReference
        Identifier: ' T'
  TypeAliasDeclaration
    ExportKeyword
    Identifier: ' TextRangeWithTriviaKind'
    TypeReference
      Identifier: ' TextRangeWithKind'
      TypeReference
        Identifier: 'TriviaSyntaxKind'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' TokenInfo'
    PropertySignature
      Identifier: '
    leadingTrivia'
      UnionType
        ArrayType
          TypeReference
            Identifier: ' TextRangeWithTriviaKind'
        UndefinedKeyword
    PropertySignature
      Identifier: '
    token'
      TypeReference
        Identifier: ' TextRangeWithKind'
    PropertySignature
      Identifier: '
    trailingTrivia'
      UnionType
        ArrayType
          TypeReference
            Identifier: ' TextRangeWithTriviaKind'
        UndefinedKeyword
  FunctionDeclaration
    ExportKeyword
    Identifier: ' createTextRangeWithKind'
    TypeParameter
      Identifier: 'T'
      TypeReference
        Identifier: ' SyntaxKind'
    Parameter
      Identifier: 'pos'
      NumberKeyword
    Parameter
      Identifier: ' end'
      NumberKeyword
    Parameter
      Identifier: ' kind'
      TypeReference
        Identifier: ' T'
    TypeReference
      Identifier: ' TextRangeWithKind'
      TypeReference
        Identifier: 'T'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' textRangeWithKind'
            TypeReference
              Identifier: ' TextRangeWithKind'
              TypeReference
                Identifier: 'T'
            ObjectLiteralExpression
              ShorthandPropertyAssignment
                Identifier: ' pos'
              ShorthandPropertyAssignment
                Identifier: ' end'
              ShorthandPropertyAssignment
                Identifier: ' kind'
      IfStatement
        PropertyAccessExpression
          Identifier: 'Debug'
          Identifier: 'isDebugging'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        Object'
                Identifier: 'defineProperty'
              Identifier: 'textRangeWithKind'
              StringLiteral
              ObjectLiteralExpression
                PropertyAssignment
                  Identifier: '
            get'
                  ArrowFunction
                    EqualsGreaterThanToken
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' Debug'
                        Identifier: 'formatSyntaxKind'
                      Identifier: 'kind'
      ReturnStatement
        Identifier: ' textRangeWithKind'
  EnumDeclaration
    ConstKeyword
    Identifier: ' Constants'
    EnumMember
      Identifier: '
    Unknown'
      PrefixUnaryExpression
        NumericLiteral
  InterfaceDeclaration
    Identifier: ' DynamicIndentation'
    MethodSignature
      Identifier: '
    getIndentationForToken'
      Parameter
        Identifier: 'tokenLine'
        NumberKeyword
      Parameter
        Identifier: ' tokenKind'
        TypeReference
          Identifier: ' SyntaxKind'
      Parameter
        Identifier: ' container'
        TypeReference
          Identifier: ' Node'
      Parameter
        Identifier: ' suppressDelta'
        BooleanKeyword
      NumberKeyword
    MethodSignature
      Identifier: '
    getIndentationForComment'
      Parameter
        Identifier: 'owningToken'
        TypeReference
          Identifier: ' SyntaxKind'
      Parameter
        Identifier: ' tokenIndentation'
        NumberKeyword
      Parameter
        Identifier: ' container'
        TypeReference
          Identifier: ' Node'
      NumberKeyword
    MethodSignature
      Identifier: '
    /**
     * Indentation for open and close tokens of the node if it is block or another node that needs special indentation
     * ... {
     * .........<child>
     * ....}
     *  ____ - indentation
     *      ____ - delta
     */
    getIndentation'
      NumberKeyword
    MethodSignature
      Identifier: '
    /**
     * Prefered relative indentation for child nodes.
     * Delta is used to carry the indentation info
     * foo(bar({
     *     $
     * }))
     * Both 'foo', 'bar' introduce new indentation with delta = 4, but total indentation in $ is not 8.
     * foo: { indentation: 0, delta: 4 }
     * bar: { indentation: foo.indentation + foo.delta = 4, delta: 4} however 'foo' and 'bar' are on the same line
     * so bar inherits indentation from foo and bar.delta will be 4
     */
    getDelta'
      Parameter
        Identifier: 'child'
        TypeReference
          Identifier: ' TextRangeWithKind'
      NumberKeyword
    MethodSignature
      Identifier: '
    /**
     * Formatter calls this function when rule adds or deletes new lines from the text
     * so indentation scope can adjust values of indentation and delta.
     */
    recomputeIndentation'
      Parameter
        Identifier: 'lineAddedByFormatting'
        BooleanKeyword
      Parameter
        Identifier: ' parent'
        TypeReference
          Identifier: ' Node'
      VoidKeyword
  FunctionDeclaration
    ExportKeyword
    Identifier: ' formatOnEnter'
    Parameter
      Identifier: 'position'
      NumberKeyword
    Parameter
      Identifier: ' sourceFile'
      TypeReference
        Identifier: ' SourceFile'
    Parameter
      Identifier: ' formatContext'
      TypeReference
        Identifier: ' FormatContext'
    ArrayType
      TypeReference
        Identifier: ' TextChange'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' line'
            PropertyAccessExpression
              CallExpression
                PropertyAccessExpression
                  Identifier: ' sourceFile'
                  Identifier: 'getLineAndCharacterOfPosition'
                Identifier: 'position'
              Identifier: 'line'
      IfStatement
        BinaryExpression
          Identifier: 'line'
          EqualsEqualsEqualsToken
          NumericLiteral
        Block
          ReturnStatement
            ArrayLiteralExpression
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' endOfFormatSpan'
            CallExpression
              Identifier: ' getEndLinePosition'
              Identifier: 'line'
              Identifier: ' sourceFile'
      WhileStatement
        CallExpression
          Identifier: 'isWhiteSpaceSingleLine'
          CallExpression
            PropertyAccessExpression
              PropertyAccessExpression
                Identifier: 'sourceFile'
                Identifier: 'text'
              Identifier: 'charCodeAt'
            Identifier: 'endOfFormatSpan'
        Block
          ExpressionStatement
            PostfixUnaryExpression
              Identifier: '
        endOfFormatSpan'
      IfStatement
        CallExpression
          Identifier: 'isLineBreak'
          CallExpression
            PropertyAccessExpression
              PropertyAccessExpression
                Identifier: 'sourceFile'
                Identifier: 'text'
              Identifier: 'charCodeAt'
            Identifier: 'endOfFormatSpan'
        Block
          ExpressionStatement
            PostfixUnaryExpression
              Identifier: '
        endOfFormatSpan'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' span'
            ObjectLiteralExpression
              PropertyAssignment
                Identifier: '
        // get start position for the previous line
        pos'
                CallExpression
                  Identifier: ' getStartPositionOfLine'
                  BinaryExpression
                    Identifier: 'line'
                    MinusToken
                    NumericLiteral
                  Identifier: ' sourceFile'
              PropertyAssignment
                Identifier: '
        // end value is exclusive so add 1 to the result
        end'
                BinaryExpression
                  Identifier: ' endOfFormatSpan'
                  PlusToken
                  NumericLiteral
      ReturnStatement
        CallExpression
          Identifier: ' formatSpan'
          Identifier: 'span'
          Identifier: ' sourceFile'
          Identifier: ' formatContext'
          PropertyAccessExpression
            Identifier: ' FormattingRequestKind'
            Identifier: 'FormatOnEnter'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' formatOnSemicolon'
    Parameter
      Identifier: 'position'
      NumberKeyword
    Parameter
      Identifier: ' sourceFile'
      TypeReference
        Identifier: ' SourceFile'
    Parameter
      Identifier: ' formatContext'
      TypeReference
        Identifier: ' FormatContext'
    ArrayType
      TypeReference
        Identifier: ' TextChange'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' semicolon'
            CallExpression
              Identifier: ' findImmediatelyPrecedingTokenOfKind'
              Identifier: 'position'
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'SemicolonToken'
              Identifier: ' sourceFile'
      ReturnStatement
        CallExpression
          Identifier: ' formatNodeLines'
          CallExpression
            Identifier: 'findOutermostNodeWithinListLevel'
            Identifier: 'semicolon'
          Identifier: ' sourceFile'
          Identifier: ' formatContext'
          PropertyAccessExpression
            Identifier: ' FormattingRequestKind'
            Identifier: 'FormatOnSemicolon'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' formatOnOpeningCurly'
    Parameter
      Identifier: 'position'
      NumberKeyword
    Parameter
      Identifier: ' sourceFile'
      TypeReference
        Identifier: ' SourceFile'
    Parameter
      Identifier: ' formatContext'
      TypeReference
        Identifier: ' FormatContext'
    ArrayType
      TypeReference
        Identifier: ' TextChange'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' openingCurly'
            CallExpression
              Identifier: ' findImmediatelyPrecedingTokenOfKind'
              Identifier: 'position'
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'OpenBraceToken'
              Identifier: ' sourceFile'
      IfStatement
        PrefixUnaryExpression
          Identifier: 'openingCurly'
        Block
          ReturnStatement
            ArrayLiteralExpression
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' curlyBraceRange'
            PropertyAccessExpression
              Identifier: ' openingCurly'
              Identifier: 'parent'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' outermostNode'
            CallExpression
              Identifier: ' findOutermostNodeWithinListLevel'
              Identifier: 'curlyBraceRange'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' textRange'
            TypeReference
              Identifier: ' TextRange'
            ObjectLiteralExpression
              PropertyAssignment
                Identifier: '
        pos'
                CallExpression
                  Identifier: ' getLineStartPositionForPosition'
                  CallExpression
                    PropertyAccessExpression
                      NonNullExpression
                        Identifier: 'outermostNode'
                      Identifier: 'getStart'
                    Identifier: 'sourceFile'
                  Identifier: ' sourceFile'
              PropertyAssignment
                Identifier: ' // TODO: GH#18217
        end'
                Identifier: ' position'
      ReturnStatement
        CallExpression
          Identifier: ' formatSpan'
          Identifier: 'textRange'
          Identifier: ' sourceFile'
          Identifier: ' formatContext'
          PropertyAccessExpression
            Identifier: ' FormattingRequestKind'
            Identifier: 'FormatOnOpeningCurlyBrace'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' formatOnClosingCurly'
    Parameter
      Identifier: 'position'
      NumberKeyword
    Parameter
      Identifier: ' sourceFile'
      TypeReference
        Identifier: ' SourceFile'
    Parameter
      Identifier: ' formatContext'
      TypeReference
        Identifier: ' FormatContext'
    ArrayType
      TypeReference
        Identifier: ' TextChange'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' precedingToken'
            CallExpression
              Identifier: ' findImmediatelyPrecedingTokenOfKind'
              Identifier: 'position'
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'CloseBraceToken'
              Identifier: ' sourceFile'
      ReturnStatement
        CallExpression
          Identifier: ' formatNodeLines'
          CallExpression
            Identifier: 'findOutermostNodeWithinListLevel'
            Identifier: 'precedingToken'
          Identifier: ' sourceFile'
          Identifier: ' formatContext'
          PropertyAccessExpression
            Identifier: ' FormattingRequestKind'
            Identifier: 'FormatOnClosingCurlyBrace'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' formatDocument'
    Parameter
      Identifier: 'sourceFile'
      TypeReference
        Identifier: ' SourceFile'
    Parameter
      Identifier: ' formatContext'
      TypeReference
        Identifier: ' FormatContext'
    ArrayType
      TypeReference
        Identifier: ' TextChange'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' span'
            ObjectLiteralExpression
              PropertyAssignment
                Identifier: '
        pos'
                NumericLiteral
              PropertyAssignment
                Identifier: '
        end'
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: ' sourceFile'
                    Identifier: 'text'
                  Identifier: 'length'
      ReturnStatement
        CallExpression
          Identifier: ' formatSpan'
          Identifier: 'span'
          Identifier: ' sourceFile'
          Identifier: ' formatContext'
          PropertyAccessExpression
            Identifier: ' FormattingRequestKind'
            Identifier: 'FormatDocument'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' formatSelection'
    Parameter
      Identifier: 'start'
      NumberKeyword
    Parameter
      Identifier: ' end'
      NumberKeyword
    Parameter
      Identifier: ' sourceFile'
      TypeReference
        Identifier: ' SourceFile'
    Parameter
      Identifier: ' formatContext'
      TypeReference
        Identifier: ' FormatContext'
    ArrayType
      TypeReference
        Identifier: ' TextChange'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' span'
            ObjectLiteralExpression
              PropertyAssignment
                Identifier: '
        pos'
                CallExpression
                  Identifier: ' getLineStartPositionForPosition'
                  Identifier: 'start'
                  Identifier: ' sourceFile'
              ShorthandPropertyAssignment
                Identifier: '
        end'
      ReturnStatement
        CallExpression
          Identifier: ' formatSpan'
          Identifier: 'span'
          Identifier: ' sourceFile'
          Identifier: ' formatContext'
          PropertyAccessExpression
            Identifier: ' FormattingRequestKind'
            Identifier: 'FormatSelection'
  FunctionDeclaration
    Identifier: ' findImmediatelyPrecedingTokenOfKind'
    Parameter
      Identifier: 'end'
      NumberKeyword
    Parameter
      Identifier: ' expectedTokenKind'
      TypeReference
        Identifier: ' SyntaxKind'
    Parameter
      Identifier: ' sourceFile'
      TypeReference
        Identifier: ' SourceFile'
    UnionType
      TypeReference
        Identifier: ' Node'
      UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' precedingToken'
            CallExpression
              Identifier: ' findPrecedingToken'
              Identifier: 'end'
              Identifier: ' sourceFile'
      ReturnStatement
        ConditionalExpression
          BinaryExpression
            BinaryExpression
              Identifier: ' precedingToken'
              AmpersandAmpersandToken
              BinaryExpression
                PropertyAccessExpression
                  Identifier: ' precedingToken'
                  Identifier: 'kind'
                EqualsEqualsEqualsToken
                Identifier: ' expectedTokenKind'
            AmpersandAmpersandToken
            BinaryExpression
              Identifier: ' end'
              EqualsEqualsEqualsToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' precedingToken'
                  Identifier: 'getEnd'
          QuestionToken
          Identifier: '
        precedingToken'
          ColonToken
          Identifier: '
        undefined'
  FunctionDeclaration
    Identifier: ' findOutermostNodeWithinListLevel'
    Parameter
      Identifier: 'node'
      UnionType
        TypeReference
          Identifier: ' Node'
        UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' current'
            Identifier: ' node'
      WhileStatement
        BinaryExpression
          BinaryExpression
            BinaryExpression
              Identifier: '
        current'
              AmpersandAmpersandToken
              PropertyAccessExpression
                Identifier: '
        current'
                Identifier: 'parent'
            AmpersandAmpersandToken
            BinaryExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: '
        current'
                  Identifier: 'parent'
                Identifier: 'end'
              EqualsEqualsEqualsToken
              PropertyAccessExpression
                NonNullExpression
                  Identifier: ' node'
                Identifier: 'end'
          AmpersandAmpersandToken
          PrefixUnaryExpression
            CallExpression
              Identifier: 'isListElement'
              PropertyAccessExpression
                Identifier: 'current'
                Identifier: 'parent'
              Identifier: ' current'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        current'
              EqualsToken
              PropertyAccessExpression
                Identifier: ' current'
                Identifier: 'parent'
      ReturnStatement
        Identifier: ' current'
  FunctionDeclaration
    Identifier: ' isListElement'
    Parameter
      Identifier: 'parent'
      TypeReference
        Identifier: ' Node'
    Parameter
      Identifier: ' node'
      TypeReference
        Identifier: ' Node'
    BooleanKeyword
    Block
      SwitchStatement
        PropertyAccessExpression
          Identifier: 'parent'
          Identifier: 'kind'
        CaseBlock
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ClassDeclaration'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'InterfaceDeclaration'
            ReturnStatement
              CallExpression
                Identifier: ' rangeContainsRange'
                PropertyAccessExpression
                  ParenthesizedExpression
                    AsExpression
                      Identifier: 'parent'
                      TypeReference
                        Identifier: ' InterfaceDeclaration'
                  Identifier: 'members'
                Identifier: ' node'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ModuleDeclaration'
            VariableStatement
              VariableDeclarationList
                VariableDeclaration
                  Identifier: ' body'
                  PropertyAccessExpression
                    ParenthesizedExpression
                      AsExpression
                        Identifier: 'parent'
                        TypeReference
                          Identifier: ' ModuleDeclaration'
                    Identifier: 'body'
            ReturnStatement
              BinaryExpression
                BinaryExpression
                  PrefixUnaryExpression
                    PrefixUnaryExpression
                      Identifier: 'body'
                  AmpersandAmpersandToken
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: ' body'
                      Identifier: 'kind'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'ModuleBlock'
                AmpersandAmpersandToken
                CallExpression
                  Identifier: ' rangeContainsRange'
                  PropertyAccessExpression
                    Identifier: 'body'
                    Identifier: 'statements'
                  Identifier: ' node'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'SourceFile'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'Block'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ModuleBlock'
            ReturnStatement
              CallExpression
                Identifier: ' rangeContainsRange'
                PropertyAccessExpression
                  ParenthesizedExpression
                    AsExpression
                      Identifier: 'parent'
                      TypeReference
                        Identifier: ' Block'
                  Identifier: 'statements'
                Identifier: ' node'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'CatchClause'
            ReturnStatement
              CallExpression
                Identifier: ' rangeContainsRange'
                PropertyAccessExpression
                  PropertyAccessExpression
                    ParenthesizedExpression
                      AsExpression
                        Identifier: 'parent'
                        TypeReference
                          Identifier: ' CatchClause'
                    Identifier: 'block'
                  Identifier: 'statements'
                Identifier: ' node'
      ReturnStatement
        FalseKeyword
  FunctionDeclaration
    Identifier: ' findEnclosingNode'
    Parameter
      Identifier: 'range'
      TypeReference
        Identifier: ' TextRange'
    Parameter
      Identifier: ' sourceFile'
      TypeReference
        Identifier: ' SourceFile'
    TypeReference
      Identifier: ' Node'
    Block
      ReturnStatement
        CallExpression
          Identifier: ' find'
          Identifier: 'sourceFile'
      FunctionDeclaration
        Identifier: ' find'
        Parameter
          Identifier: 'n'
          TypeReference
            Identifier: ' Node'
        TypeReference
          Identifier: ' Node'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' candidate'
                CallExpression
                  Identifier: ' forEachChild'
                  Identifier: 'n'
                  ArrowFunction
                    Parameter
                      Identifier: ' c'
                    EqualsGreaterThanToken
                    BinaryExpression
                      CallExpression
                        Identifier: ' startEndContainsRange'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: 'c'
                            Identifier: 'getStart'
                          Identifier: 'sourceFile'
                        PropertyAccessExpression
                          Identifier: ' c'
                          Identifier: 'end'
                        Identifier: ' range'
                      AmpersandAmpersandToken
                      Identifier: ' c'
          IfStatement
            Identifier: 'candidate'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' result'
                    CallExpression
                      Identifier: ' find'
                      Identifier: 'candidate'
              IfStatement
                Identifier: 'result'
                Block
                  ReturnStatement
                    Identifier: ' result'
          ReturnStatement
            Identifier: ' n'
  FunctionDeclaration
    Identifier: ' prepareRangeContainsErrorFunction'
    Parameter
      Identifier: 'errors'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' Diagnostic'
    Parameter
      Identifier: ' originalRange'
      TypeReference
        Identifier: ' TextRange'
    FunctionType
      Parameter
        Identifier: 'r'
        TypeReference
          Identifier: ' TextRange'
      BooleanKeyword
    Block
      IfStatement
        PrefixUnaryExpression
          PropertyAccessExpression
            Identifier: 'errors'
            Identifier: 'length'
        Block
          ReturnStatement
            Identifier: ' rangeHasNoErrors'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' sorted'
            CallExpression
              PropertyAccessExpression
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' errors'
                    Identifier: 'filter'
                  ArrowFunction
                    Parameter
                      Identifier: 'd'
                    EqualsGreaterThanToken
                    CallExpression
                      Identifier: ' rangeOverlapsWithStartEnd'
                      Identifier: 'originalRange'
                      NonNullExpression
                        PropertyAccessExpression
                          Identifier: ' d'
                          Identifier: 'start'
                      BinaryExpression
                        NonNullExpression
                          PropertyAccessExpression
                            Identifier: ' d'
                            Identifier: 'start'
                        PlusToken
                        NonNullExpression
                          PropertyAccessExpression
                            Identifier: ' d'
                            Identifier: 'length'
                Identifier: 'sort'
              ArrowFunction
                Parameter
                  Identifier: 'e1'
                Parameter
                  Identifier: ' e2'
                EqualsGreaterThanToken
                BinaryExpression
                  NonNullExpression
                    PropertyAccessExpression
                      Identifier: ' e1'
                      Identifier: 'start'
                  MinusToken
                  NonNullExpression
                    PropertyAccessExpression
                      Identifier: ' e2'
                      Identifier: 'start'
      IfStatement
        PrefixUnaryExpression
          PropertyAccessExpression
            Identifier: 'sorted'
            Identifier: 'length'
        Block
          ReturnStatement
            Identifier: ' rangeHasNoErrors'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' index'
            NumericLiteral
      ReturnStatement
        ArrowFunction
          Parameter
            Identifier: ' r'
          EqualsGreaterThanToken
          Block
            WhileStatement
              TrueKeyword
              Block
                IfStatement
                  BinaryExpression
                    Identifier: 'index'
                    GreaterThanEqualsToken
                    PropertyAccessExpression
                      Identifier: ' sorted'
                      Identifier: 'length'
                  Block
                    ReturnStatement
                      FalseKeyword
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' error'
                      ElementAccessExpression
                        Identifier: ' sorted'
                        Identifier: 'index'
                IfStatement
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: 'r'
                      Identifier: 'end'
                    LessThanEqualsToken
                    NonNullExpression
                      PropertyAccessExpression
                        Identifier: ' error'
                        Identifier: 'start'
                  Block
                    ReturnStatement
                      FalseKeyword
                IfStatement
                  CallExpression
                    Identifier: 'startEndOverlapsWithStartEnd'
                    PropertyAccessExpression
                      Identifier: 'r'
                      Identifier: 'pos'
                    PropertyAccessExpression
                      Identifier: ' r'
                      Identifier: 'end'
                    NonNullExpression
                      PropertyAccessExpression
                        Identifier: ' error'
                        Identifier: 'start'
                    BinaryExpression
                      NonNullExpression
                        PropertyAccessExpression
                          Identifier: ' error'
                          Identifier: 'start'
                      PlusToken
                      NonNullExpression
                        PropertyAccessExpression
                          Identifier: ' error'
                          Identifier: 'length'
                  Block
                    ReturnStatement
                      TrueKeyword
                ExpressionStatement
                  PostfixUnaryExpression
                    Identifier: '

            index'
      FunctionDeclaration
        Identifier: ' rangeHasNoErrors'
        BooleanKeyword
        Block
          ReturnStatement
            FalseKeyword
  FunctionDeclaration
    Identifier: ' getScanStartPosition'
    Parameter
      Identifier: 'enclosingNode'
      TypeReference
        Identifier: ' Node'
    Parameter
      Identifier: ' originalRange'
      TypeReference
        Identifier: ' TextRange'
    Parameter
      Identifier: ' sourceFile'
      TypeReference
        Identifier: ' SourceFile'
    NumberKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' start'
            CallExpression
              PropertyAccessExpression
                Identifier: ' enclosingNode'
                Identifier: 'getStart'
              Identifier: 'sourceFile'
      IfStatement
        BinaryExpression
          BinaryExpression
            Identifier: 'start'
            EqualsEqualsEqualsToken
            PropertyAccessExpression
              Identifier: ' originalRange'
              Identifier: 'pos'
          AmpersandAmpersandToken
          BinaryExpression
            PropertyAccessExpression
              Identifier: ' enclosingNode'
              Identifier: 'end'
            EqualsEqualsEqualsToken
            PropertyAccessExpression
              Identifier: ' originalRange'
              Identifier: 'end'
        Block
          ReturnStatement
            Identifier: ' start'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' precedingToken'
            CallExpression
              Identifier: ' findPrecedingToken'
              PropertyAccessExpression
                Identifier: 'originalRange'
                Identifier: 'pos'
              Identifier: ' sourceFile'
      IfStatement
        PrefixUnaryExpression
          Identifier: 'precedingToken'
        Block
          ReturnStatement
            PropertyAccessExpression
              Identifier: ' enclosingNode'
              Identifier: 'pos'
      IfStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: 'precedingToken'
            Identifier: 'end'
          GreaterThanEqualsToken
          PropertyAccessExpression
            Identifier: ' originalRange'
            Identifier: 'pos'
        Block
          ReturnStatement
            PropertyAccessExpression
              Identifier: ' enclosingNode'
              Identifier: 'pos'
      ReturnStatement
        PropertyAccessExpression
          Identifier: ' precedingToken'
          Identifier: 'end'
  FunctionDeclaration
    Identifier: ' getOwnOrInheritedDelta'
    Parameter
      Identifier: 'n'
      TypeReference
        Identifier: ' Node'
    Parameter
      Identifier: ' options'
      TypeReference
        Identifier: ' FormatCodeSettings'
    Parameter
      Identifier: ' sourceFile'
      TypeReference
        Identifier: ' SourceFile'
    NumberKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' previousLine'
            PropertyAccessExpression
              Identifier: ' Constants'
              Identifier: 'Unknown'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' child'
            UnionType
              TypeReference
                Identifier: ' Node'
              UndefinedKeyword
      WhileStatement
        Identifier: 'n'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' line'
                PropertyAccessExpression
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' sourceFile'
                      Identifier: 'getLineAndCharacterOfPosition'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: 'n'
                        Identifier: 'getStart'
                      Identifier: 'sourceFile'
                  Identifier: 'line'
          IfStatement
            BinaryExpression
              BinaryExpression
                Identifier: 'previousLine'
                ExclamationEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' Constants'
                  Identifier: 'Unknown'
              AmpersandAmpersandToken
              BinaryExpression
                Identifier: ' line'
                ExclamationEqualsEqualsToken
                Identifier: ' previousLine'
            Block
              BreakStatement
          IfStatement
            CallExpression
              PropertyAccessExpression
                Identifier: 'SmartIndenter'
                Identifier: 'shouldIndentChildNode'
              Identifier: 'options'
              Identifier: ' n'
              Identifier: ' child'
              Identifier: ' sourceFile'
            Block
              ReturnStatement
                NonNullExpression
                  PropertyAccessExpression
                    Identifier: ' options'
                    Identifier: 'indentSize'
          ExpressionStatement
            BinaryExpression
              Identifier: '

        previousLine'
              EqualsToken
              Identifier: ' line'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        child'
              EqualsToken
              Identifier: ' n'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        n'
              EqualsToken
              PropertyAccessExpression
                Identifier: ' n'
                Identifier: 'parent'
      ReturnStatement
        NumericLiteral
  FunctionDeclaration
    ExportKeyword
    Identifier: ' formatNodeGivenIndentation'
    Parameter
      Identifier: 'node'
      TypeReference
        Identifier: ' Node'
    Parameter
      Identifier: ' sourceFileLike'
      TypeReference
        Identifier: ' SourceFileLike'
    Parameter
      Identifier: ' languageVariant'
      TypeReference
        Identifier: ' LanguageVariant'
    Parameter
      Identifier: ' initialIndentation'
      NumberKeyword
    Parameter
      Identifier: ' delta'
      NumberKeyword
    Parameter
      Identifier: ' formatContext'
      TypeReference
        Identifier: ' FormatContext'
    ArrayType
      TypeReference
        Identifier: ' TextChange'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' range'
            ObjectLiteralExpression
              PropertyAssignment
                Identifier: ' pos'
                PropertyAccessExpression
                  Identifier: ' node'
                  Identifier: 'pos'
              PropertyAssignment
                Identifier: ' end'
                PropertyAccessExpression
                  Identifier: ' node'
                  Identifier: 'end'
      ReturnStatement
        CallExpression
          Identifier: ' getFormattingScanner'
          PropertyAccessExpression
            Identifier: 'sourceFileLike'
            Identifier: 'text'
          Identifier: ' languageVariant'
          PropertyAccessExpression
            Identifier: ' range'
            Identifier: 'pos'
          PropertyAccessExpression
            Identifier: ' range'
            Identifier: 'end'
          ArrowFunction
            Parameter
              Identifier: ' scanner'
            EqualsGreaterThanToken
            CallExpression
              Identifier: '
        formatSpanWorker'
              Identifier: '
            range'
              Identifier: '
            node'
              Identifier: '
            initialIndentation'
              Identifier: '
            delta'
              Identifier: '
            scanner'
              Identifier: '
            formatContext'
              PropertyAccessExpression
                Identifier: '
            FormattingRequestKind'
                Identifier: 'FormatSelection'
              ArrowFunction
                Parameter
                  Identifier: '
            _'
                EqualsGreaterThanToken
                FalseKeyword
              Identifier: ' // assume that node does not have any errors
            sourceFileLike'
  FunctionDeclaration
    Identifier: ' formatNodeLines'
    Parameter
      Identifier: 'node'
      UnionType
        TypeReference
          Identifier: ' Node'
        UndefinedKeyword
    Parameter
      Identifier: ' sourceFile'
      TypeReference
        Identifier: ' SourceFile'
    Parameter
      Identifier: ' formatContext'
      TypeReference
        Identifier: ' FormatContext'
    Parameter
      Identifier: ' requestKind'
      TypeReference
        Identifier: ' FormattingRequestKind'
    ArrayType
      TypeReference
        Identifier: ' TextChange'
    Block
      IfStatement
        PrefixUnaryExpression
          Identifier: 'node'
        Block
          ReturnStatement
            ArrayLiteralExpression
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' span'
            ObjectLiteralExpression
              PropertyAssignment
                Identifier: '
        pos'
                CallExpression
                  Identifier: ' getLineStartPositionForPosition'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'getStart'
                    Identifier: 'sourceFile'
                  Identifier: ' sourceFile'
              PropertyAssignment
                Identifier: '
        end'
                PropertyAccessExpression
                  Identifier: ' node'
                  Identifier: 'end'
      ReturnStatement
        CallExpression
          Identifier: ' formatSpan'
          Identifier: 'span'
          Identifier: ' sourceFile'
          Identifier: ' formatContext'
          Identifier: ' requestKind'
  FunctionDeclaration
    Identifier: ' formatSpan'
    Parameter
      Identifier: 'originalRange'
      TypeReference
        Identifier: ' TextRange'
    Parameter
      Identifier: ' sourceFile'
      TypeReference
        Identifier: ' SourceFile'
    Parameter
      Identifier: ' formatContext'
      TypeReference
        Identifier: ' FormatContext'
    Parameter
      Identifier: ' requestKind'
      TypeReference
        Identifier: ' FormattingRequestKind'
    ArrayType
      TypeReference
        Identifier: ' TextChange'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' enclosingNode'
            CallExpression
              Identifier: ' findEnclosingNode'
              Identifier: 'originalRange'
              Identifier: ' sourceFile'
      ReturnStatement
        CallExpression
          Identifier: ' getFormattingScanner'
          PropertyAccessExpression
            Identifier: '
        sourceFile'
            Identifier: 'text'
          PropertyAccessExpression
            Identifier: '
        sourceFile'
            Identifier: 'languageVariant'
          CallExpression
            Identifier: '
        getScanStartPosition'
            Identifier: 'enclosingNode'
            Identifier: ' originalRange'
            Identifier: ' sourceFile'
          PropertyAccessExpression
            Identifier: '
        originalRange'
            Identifier: 'end'
          ArrowFunction
            Parameter
              Identifier: '
        scanner'
            EqualsGreaterThanToken
            CallExpression
              Identifier: '
            formatSpanWorker'
              Identifier: '
                originalRange'
              Identifier: '
                enclosingNode'
              CallExpression
                PropertyAccessExpression
                  Identifier: '
                SmartIndenter'
                  Identifier: 'getIndentationForNode'
                Identifier: 'enclosingNode'
                Identifier: ' originalRange'
                Identifier: ' sourceFile'
                PropertyAccessExpression
                  Identifier: ' formatContext'
                  Identifier: 'options'
              CallExpression
                Identifier: '
                getOwnOrInheritedDelta'
                Identifier: 'enclosingNode'
                PropertyAccessExpression
                  Identifier: ' formatContext'
                  Identifier: 'options'
                Identifier: ' sourceFile'
              Identifier: '
                scanner'
              Identifier: '
                formatContext'
              Identifier: '
                requestKind'
              CallExpression
                Identifier: '
                prepareRangeContainsErrorFunction'
                PropertyAccessExpression
                  Identifier: 'sourceFile'
                  Identifier: 'parseDiagnostics'
                Identifier: ' originalRange'
              Identifier: '
                sourceFile'
  FunctionDeclaration
    Identifier: ' formatSpanWorker'
    Parameter
      Identifier: '
    originalRange'
      TypeReference
        Identifier: ' TextRange'
    Parameter
      Identifier: '
    enclosingNode'
      TypeReference
        Identifier: ' Node'
    Parameter
      Identifier: '
    initialIndentation'
      NumberKeyword
    Parameter
      Identifier: '
    delta'
      NumberKeyword
    Parameter
      Identifier: '
    formattingScanner'
      TypeReference
        Identifier: ' FormattingScanner'
    Parameter
      ObjectBindingPattern
        BindingElement
          Identifier: ' options'
        BindingElement
          Identifier: ' getRules'
        BindingElement
          Identifier: ' host'
      TypeReference
        Identifier: ' FormatContext'
    Parameter
      Identifier: '
    requestKind'
      TypeReference
        Identifier: ' FormattingRequestKind'
    Parameter
      Identifier: '
    rangeContainsError'
      FunctionType
        Parameter
          Identifier: 'r'
          TypeReference
            Identifier: ' TextRange'
        BooleanKeyword
    Parameter
      Identifier: '
    sourceFile'
      TypeReference
        Identifier: ' SourceFileLike'
    ArrayType
      TypeReference
        Identifier: ' TextChange'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' formattingContext'
            NewExpression
              Identifier: ' FormattingContext'
              Identifier: 'sourceFile'
              Identifier: ' requestKind'
              Identifier: ' options'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' previousRangeTriviaEnd'
            NumberKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' previousRange'
            TypeReference
              Identifier: ' TextRangeWithKind'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' previousParent'
            TypeReference
              Identifier: ' Node'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' previousRangeStartLine'
            NumberKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' lastIndentedLine'
            NumberKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' indentationOnLastIndentedLine'
            PropertyAccessExpression
              Identifier: ' Constants'
              Identifier: 'Unknown'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' edits'
            ArrayType
              TypeReference
                Identifier: ' TextChange'
            ArrayLiteralExpression
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            Identifier: '

    formattingScanner'
            Identifier: 'advance'
      IfStatement
        CallExpression
          PropertyAccessExpression
            Identifier: 'formattingScanner'
            Identifier: 'isOnToken'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' startLine'
                PropertyAccessExpression
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' sourceFile'
                      Identifier: 'getLineAndCharacterOfPosition'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: 'enclosingNode'
                        Identifier: 'getStart'
                      Identifier: 'sourceFile'
                  Identifier: 'line'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' undecoratedStartLine'
                Identifier: ' startLine'
          IfStatement
            CallExpression
              Identifier: 'hasDecorators'
              Identifier: 'enclosingNode'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            undecoratedStartLine'
                  EqualsToken
                  PropertyAccessExpression
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' sourceFile'
                        Identifier: 'getLineAndCharacterOfPosition'
                      CallExpression
                        Identifier: 'getNonDecoratorTokenPosOfNode'
                        Identifier: 'enclosingNode'
                        Identifier: ' sourceFile'
                    Identifier: 'line'
          ExpressionStatement
            CallExpression
              Identifier: '

        processNode'
              Identifier: 'enclosingNode'
              Identifier: ' enclosingNode'
              Identifier: ' startLine'
              Identifier: ' undecoratedStartLine'
              Identifier: ' initialIndentation'
              Identifier: ' delta'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' remainingTrivia'
            CallExpression
              PropertyAccessExpression
                Identifier: ' formattingScanner'
                Identifier: 'getCurrentLeadingTrivia'
      IfStatement
        Identifier: 'remainingTrivia'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' indentation'
                ConditionalExpression
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' SmartIndenter'
                      Identifier: 'nodeWillIndentChild'
                    Identifier: 'options'
                    Identifier: ' enclosingNode'
                    Identifier: ' /*child*/ undefined'
                    Identifier: ' sourceFile'
                    FalseKeyword
                  QuestionToken
                  BinaryExpression
                    Identifier: ' initialIndentation'
                    PlusToken
                    NonNullExpression
                      PropertyAccessExpression
                        Identifier: ' options'
                        Identifier: 'indentSize'
                  ColonToken
                  Identifier: ' initialIndentation'
          ExpressionStatement
            CallExpression
              Identifier: '
        indentTriviaItems'
              Identifier: 'remainingTrivia'
              Identifier: ' indentation'
              TrueKeyword
              ArrowFunction
                Parameter
                  Identifier: ' item'
                EqualsGreaterThanToken
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
            processRange'
                      Identifier: 'item'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' sourceFile'
                          Identifier: 'getLineAndCharacterOfPosition'
                        PropertyAccessExpression
                          Identifier: 'item'
                          Identifier: 'pos'
                      Identifier: ' enclosingNode'
                      Identifier: ' enclosingNode'
                      NonNullExpression
                        Identifier: ' /*dynamicIndentation*/ undefined'
                  ExpressionStatement
                    CallExpression
                      Identifier: '
            insertIndentation'
                      PropertyAccessExpression
                        Identifier: 'item'
                        Identifier: 'pos'
                      Identifier: ' indentation'
                      FalseKeyword
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'options'
                Identifier: 'trimTrailingWhitespace'
              ExclamationEqualsEqualsToken
              FalseKeyword
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            trimTrailingWhitespacesForRemainingRange'
                  Identifier: 'remainingTrivia'
      IfStatement
        BinaryExpression
          NonNullExpression
            Identifier: 'previousRange'
          AmpersandAmpersandToken
          BinaryExpression
            CallExpression
              PropertyAccessExpression
                Identifier: ' formattingScanner'
                Identifier: 'getTokenFullStart'
            GreaterThanEqualsToken
            PropertyAccessExpression
              Identifier: ' originalRange'
              Identifier: 'end'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' tokenInfo'
                ConditionalExpression
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' formattingScanner'
                      Identifier: 'isOnEOF'
                  QuestionToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' formattingScanner'
                      Identifier: 'readEOFTokenRange'
                  ColonToken
                  ConditionalExpression
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
            formattingScanner'
                        Identifier: 'isOnToken'
                    QuestionToken
                    PropertyAccessExpression
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' formattingScanner'
                          Identifier: 'readTokenInfo'
                        Identifier: 'enclosingNode'
                      Identifier: 'token'
                    ColonToken
                    Identifier: '
            undefined'
          IfStatement
            BinaryExpression
              Identifier: 'tokenInfo'
              AmpersandAmpersandToken
              BinaryExpression
                PropertyAccessExpression
                  Identifier: ' tokenInfo'
                  Identifier: 'pos'
                EqualsEqualsEqualsToken
                NonNullExpression
                  Identifier: ' previousRangeTriviaEnd'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' parent'
                    BinaryExpression
                      PropertyAccessExpression
                        CallExpression
                          Identifier: ' findPrecedingToken'
                          PropertyAccessExpression
                            Identifier: 'tokenInfo'
                            Identifier: 'end'
                          Identifier: ' sourceFile'
                          Identifier: ' enclosingNode'
                        QuestionDotToken
                        Identifier: 'parent'
                      BarBarToken
                      NonNullExpression
                        Identifier: ' previousParent'
              ExpressionStatement
                CallExpression
                  Identifier: '
            processPair'
                  Identifier: '
                tokenInfo'
                  PropertyAccessExpression
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                sourceFile'
                        Identifier: 'getLineAndCharacterOfPosition'
                      PropertyAccessExpression
                        Identifier: 'tokenInfo'
                        Identifier: 'pos'
                    Identifier: 'line'
                  Identifier: '
                parent'
                  Identifier: '
                previousRange'
                  NonNullExpression
                    Identifier: '
                previousRangeStartLine'
                  NonNullExpression
                    Identifier: '
                previousParent'
                  Identifier: '
                parent'
                  Identifier: '
                /*dynamicIndentation*/ undefined'
      ReturnStatement
        Identifier: ' edits'
      FunctionDeclaration
        Identifier: ' tryComputeIndentationForListItem'
        Parameter
          Identifier: 'startPos'
          NumberKeyword
        Parameter
          Identifier: ' endPos'
          NumberKeyword
        Parameter
          Identifier: ' parentStartLine'
          NumberKeyword
        Parameter
          Identifier: ' range'
          TypeReference
            Identifier: ' TextRange'
        Parameter
          Identifier: ' inheritedIndentation'
          NumberKeyword
        NumberKeyword
        Block
          IfStatement
            BinaryExpression
              CallExpression
                Identifier: '
            rangeOverlapsWithStartEnd'
                Identifier: 'range'
                Identifier: ' startPos'
                Identifier: ' endPos'
              BarBarToken
              CallExpression
                Identifier: '
            rangeContainsStartEnd'
                Identifier: 'range'
                Identifier: ' startPos'
                Identifier: ' endPos'
            Block
              IfStatement
                BinaryExpression
                  Identifier: 'inheritedIndentation'
                  ExclamationEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' Constants'
                    Identifier: 'Unknown'
                Block
                  ReturnStatement
                    Identifier: ' inheritedIndentation'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' startLine'
                    PropertyAccessExpression
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' sourceFile'
                          Identifier: 'getLineAndCharacterOfPosition'
                        Identifier: 'startPos'
                      Identifier: 'line'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' startLinePosition'
                    CallExpression
                      Identifier: ' getLineStartPositionForPosition'
                      Identifier: 'startPos'
                      Identifier: ' sourceFile'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' column'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' SmartIndenter'
                        Identifier: 'findFirstNonWhitespaceColumn'
                      Identifier: 'startLinePosition'
                      Identifier: ' startPos'
                      Identifier: ' sourceFile'
                      Identifier: ' options'
              IfStatement
                BinaryExpression
                  BinaryExpression
                    Identifier: 'startLine'
                    ExclamationEqualsEqualsToken
                    Identifier: ' parentStartLine'
                  BarBarToken
                  BinaryExpression
                    Identifier: ' startPos'
                    EqualsEqualsEqualsToken
                    Identifier: ' column'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' baseIndentSize'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' SmartIndenter'
                            Identifier: 'getBaseIndentation'
                          Identifier: 'options'
                  ReturnStatement
                    ConditionalExpression
                      BinaryExpression
                        Identifier: ' baseIndentSize'
                        GreaterThanToken
                        Identifier: ' column'
                      QuestionToken
                      Identifier: ' baseIndentSize'
                      ColonToken
                      Identifier: ' column'
          ReturnStatement
            PropertyAccessExpression
              Identifier: ' Constants'
              Identifier: 'Unknown'
      FunctionDeclaration
        Identifier: ' computeIndentation'
        Parameter
          Identifier: '
        node'
          TypeReference
            Identifier: ' TextRangeWithKind'
        Parameter
          Identifier: '
        startLine'
          NumberKeyword
        Parameter
          Identifier: '
        inheritedIndentation'
          NumberKeyword
        Parameter
          Identifier: '
        parent'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: '
        parentDynamicIndentation'
          TypeReference
            Identifier: ' DynamicIndentation'
        Parameter
          Identifier: '
        effectiveParentStartLine'
          NumberKeyword
        TypeLiteral
          PropertySignature
            Identifier: ' indentation'
            NumberKeyword
          PropertySignature
            Identifier: ' delta'
            NumberKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' delta'
                ConditionalExpression
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' SmartIndenter'
                      Identifier: 'shouldIndentChildNode'
                    Identifier: 'options'
                    Identifier: ' node'
                  QuestionToken
                  NonNullExpression
                    PropertyAccessExpression
                      Identifier: ' options'
                      Identifier: 'indentSize'
                  ColonToken
                  NumericLiteral
          IfStatement
            BinaryExpression
              Identifier: 'effectiveParentStartLine'
              EqualsEqualsEqualsToken
              Identifier: ' startLine'
            Block
              ReturnStatement
                ObjectLiteralExpression
                  PropertyAssignment
                    Identifier: '
                indentation'
                    ConditionalExpression
                      BinaryExpression
                        Identifier: ' startLine'
                        EqualsEqualsEqualsToken
                        Identifier: ' lastIndentedLine'
                      QuestionToken
                      Identifier: ' indentationOnLastIndentedLine'
                      ColonToken
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' parentDynamicIndentation'
                          Identifier: 'getIndentation'
                  PropertyAssignment
                    Identifier: '
                delta'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' Math'
                        Identifier: 'min'
                      NonNullExpression
                        PropertyAccessExpression
                          Identifier: 'options'
                          Identifier: 'indentSize'
                      BinaryExpression
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' parentDynamicIndentation'
                            Identifier: 'getDelta'
                          Identifier: 'node'
                        PlusToken
                        Identifier: ' delta'
            IfStatement
              BinaryExpression
                Identifier: 'inheritedIndentation'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  Identifier: ' Constants'
                  Identifier: 'Unknown'
              Block
                IfStatement
                  BinaryExpression
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'kind'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'OpenParenToken'
                    AmpersandAmpersandToken
                    BinaryExpression
                      Identifier: ' startLine'
                      EqualsEqualsEqualsToken
                      Identifier: ' lastIndentedLine'
                  Block
                    ReturnStatement
                      ObjectLiteralExpression
                        PropertyAssignment
                          Identifier: ' indentation'
                          Identifier: ' indentationOnLastIndentedLine'
                        PropertyAssignment
                          Identifier: ' delta'
                          CallExpression
                            PropertyAccessExpression
                              Identifier: ' parentDynamicIndentation'
                              Identifier: 'getDelta'
                            Identifier: 'node'
                  IfStatement
                    BinaryExpression
                      BinaryExpression
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                SmartIndenter'
                            Identifier: 'childStartsOnTheSameLineWithElseInIfStatement'
                          Identifier: 'parent'
                          Identifier: ' node'
                          Identifier: ' startLine'
                          Identifier: ' sourceFile'
                        BarBarToken
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                SmartIndenter'
                            Identifier: 'childIsUnindentedBranchOfConditionalExpression'
                          Identifier: 'parent'
                          Identifier: ' node'
                          Identifier: ' startLine'
                          Identifier: ' sourceFile'
                      BarBarToken
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                SmartIndenter'
                          Identifier: 'argumentStartsOnSameLineAsPreviousArgument'
                        Identifier: 'parent'
                        Identifier: ' node'
                        Identifier: ' startLine'
                        Identifier: ' sourceFile'
                    Block
                      ReturnStatement
                        ObjectLiteralExpression
                          PropertyAssignment
                            Identifier: ' indentation'
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' parentDynamicIndentation'
                                Identifier: 'getIndentation'
                          ShorthandPropertyAssignment
                            Identifier: ' delta'
                    Block
                      ReturnStatement
                        ObjectLiteralExpression
                          PropertyAssignment
                            Identifier: ' indentation'
                            BinaryExpression
                              CallExpression
                                PropertyAccessExpression
                                  Identifier: ' parentDynamicIndentation'
                                  Identifier: 'getIndentation'
                              PlusToken
                              CallExpression
                                PropertyAccessExpression
                                  Identifier: ' parentDynamicIndentation'
                                  Identifier: 'getDelta'
                                Identifier: 'node'
                          ShorthandPropertyAssignment
                            Identifier: ' delta'
              Block
                ReturnStatement
                  ObjectLiteralExpression
                    PropertyAssignment
                      Identifier: ' indentation'
                      Identifier: ' inheritedIndentation'
                    ShorthandPropertyAssignment
                      Identifier: ' delta'
      FunctionDeclaration
        Identifier: ' getFirstNonDecoratorTokenOfNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        Block
          IfStatement
            CallExpression
              Identifier: 'canHaveModifiers'
              Identifier: 'node'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' modifier'
                    CallExpression
                      Identifier: ' find'
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'modifiers'
                      Identifier: ' isModifier'
                      CallExpression
                        Identifier: ' findIndex'
                        PropertyAccessExpression
                          Identifier: 'node'
                          Identifier: 'modifiers'
                        Identifier: ' isDecorator'
              IfStatement
                Identifier: 'modifier'
                ReturnStatement
                  PropertyAccessExpression
                    Identifier: ' modifier'
                    Identifier: 'kind'
          SwitchStatement
            PropertyAccessExpression
              Identifier: 'node'
              Identifier: 'kind'
            CaseBlock
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ClassDeclaration'
                ReturnStatement
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'ClassKeyword'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'InterfaceDeclaration'
                ReturnStatement
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'InterfaceKeyword'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'FunctionDeclaration'
                ReturnStatement
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'FunctionKeyword'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'EnumDeclaration'
                ReturnStatement
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'EnumDeclaration'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'GetAccessor'
                ReturnStatement
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'GetKeyword'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'SetAccessor'
                ReturnStatement
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'SetKeyword'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'MethodDeclaration'
                IfStatement
                  PropertyAccessExpression
                    ParenthesizedExpression
                      AsExpression
                        Identifier: 'node'
                        TypeReference
                          Identifier: ' MethodDeclaration'
                    Identifier: 'asteriskToken'
                  Block
                    ReturnStatement
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'AsteriskToken'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'PropertyDeclaration'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'Parameter'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' name'
                      CallExpression
                        Identifier: ' getNameOfDeclaration'
                        AsExpression
                          Identifier: 'node'
                          TypeReference
                            Identifier: ' Declaration'
                IfStatement
                  Identifier: 'name'
                  Block
                    ReturnStatement
                      PropertyAccessExpression
                        Identifier: ' name'
                        Identifier: 'kind'
      FunctionDeclaration
        Identifier: ' getDynamicIndentation'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' nodeStartLine'
          NumberKeyword
        Parameter
          Identifier: ' indentation'
          NumberKeyword
        Parameter
          Identifier: ' delta'
          NumberKeyword
        TypeReference
          Identifier: ' DynamicIndentation'
        Block
          ReturnStatement
            ObjectLiteralExpression
              PropertyAssignment
                Identifier: '
            getIndentationForComment'
                ArrowFunction
                  Parameter
                    Identifier: 'kind'
                  Parameter
                    Identifier: ' tokenIndentation'
                  Parameter
                    Identifier: ' container'
                  EqualsGreaterThanToken
                  Block
                    SwitchStatement
                      Identifier: 'kind'
                      CaseBlock
                        CaseClause
                          PropertyAccessExpression
                            Identifier: ' SyntaxKind'
                            Identifier: 'CloseBraceToken'
                        CaseClause
                          PropertyAccessExpression
                            Identifier: ' SyntaxKind'
                            Identifier: 'CloseBracketToken'
                        CaseClause
                          PropertyAccessExpression
                            Identifier: ' SyntaxKind'
                            Identifier: 'CloseParenToken'
                          ReturnStatement
                            BinaryExpression
                              Identifier: ' indentation'
                              PlusToken
                              CallExpression
                                Identifier: ' getDelta'
                                Identifier: 'container'
                    ReturnStatement
                      ConditionalExpression
                        BinaryExpression
                          Identifier: ' tokenIndentation'
                          ExclamationEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' Constants'
                            Identifier: 'Unknown'
                        QuestionToken
                        Identifier: ' tokenIndentation'
                        ColonToken
                        Identifier: ' indentation'
              PropertyAssignment
                Identifier: '
            // if list end token is LessThanToken '>' then its delta should be explicitly suppressed
            // so that LessThanToken as a binary operator can still be indented.
            // foo.then
            //     <
            //         number,
            //         string,
            //     >();
            // vs
            // var a = xValue
            //     > yValue;
            getIndentationForToken'
                ArrowFunction
                  Parameter
                    Identifier: 'line'
                  Parameter
                    Identifier: ' kind'
                  Parameter
                    Identifier: ' container'
                  Parameter
                    Identifier: ' suppressDelta'
                  EqualsGreaterThanToken
                  ConditionalExpression
                    BinaryExpression
                      PrefixUnaryExpression
                        Identifier: 'suppressDelta'
                      AmpersandAmpersandToken
                      CallExpression
                        Identifier: ' shouldAddDelta'
                        Identifier: 'line'
                        Identifier: ' kind'
                        Identifier: ' container'
                    QuestionToken
                    BinaryExpression
                      Identifier: ' indentation'
                      PlusToken
                      CallExpression
                        Identifier: ' getDelta'
                        Identifier: 'container'
                    ColonToken
                    Identifier: ' indentation'
              PropertyAssignment
                Identifier: '
            getIndentation'
                ArrowFunction
                  EqualsGreaterThanToken
                  Identifier: ' indentation'
              ShorthandPropertyAssignment
                Identifier: '
            getDelta'
              PropertyAssignment
                Identifier: '
            recomputeIndentation'
                ArrowFunction
                  Parameter
                    Identifier: 'lineAdded'
                  Parameter
                    Identifier: ' parent'
                  EqualsGreaterThanToken
                  Block
                    IfStatement
                      CallExpression
                        PropertyAccessExpression
                          Identifier: 'SmartIndenter'
                          Identifier: 'shouldIndentChildNode'
                        Identifier: 'options'
                        Identifier: ' parent'
                        Identifier: ' node'
                        Identifier: ' sourceFile'
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                    indentation'
                            PlusEqualsToken
                            ConditionalExpression
                              Identifier: ' lineAdded'
                              QuestionToken
                              NonNullExpression
                                PropertyAccessExpression
                                  Identifier: ' options'
                                  Identifier: 'indentSize'
                              ColonToken
                              PrefixUnaryExpression
                                NonNullExpression
                                  PropertyAccessExpression
                                    Identifier: 'options'
                                    Identifier: 'indentSize'
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
                    delta'
                            EqualsToken
                            ConditionalExpression
                              CallExpression
                                PropertyAccessExpression
                                  Identifier: ' SmartIndenter'
                                  Identifier: 'shouldIndentChildNode'
                                Identifier: 'options'
                                Identifier: ' node'
                              QuestionToken
                              NonNullExpression
                                PropertyAccessExpression
                                  Identifier: ' options'
                                  Identifier: 'indentSize'
                              ColonToken
                              NumericLiteral
          FunctionDeclaration
            Identifier: ' shouldAddDelta'
            Parameter
              Identifier: 'line'
              NumberKeyword
            Parameter
              Identifier: ' kind'
              TypeReference
                Identifier: ' SyntaxKind'
            Parameter
              Identifier: ' container'
              TypeReference
                Identifier: ' Node'
            BooleanKeyword
            Block
              SwitchStatement
                Identifier: 'kind'
                CaseBlock
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'OpenBraceToken'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'CloseBraceToken'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'CloseParenToken'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'ElseKeyword'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'WhileKeyword'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'AtToken'
                    ReturnStatement
                      FalseKeyword
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'SlashToken'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'GreaterThanToken'
                    SwitchStatement
                      PropertyAccessExpression
                        Identifier: 'container'
                        Identifier: 'kind'
                      CaseBlock
                        CaseClause
                          PropertyAccessExpression
                            Identifier: ' SyntaxKind'
                            Identifier: 'JsxOpeningElement'
                        CaseClause
                          PropertyAccessExpression
                            Identifier: ' SyntaxKind'
                            Identifier: 'JsxClosingElement'
                        CaseClause
                          PropertyAccessExpression
                            Identifier: ' SyntaxKind'
                            Identifier: 'JsxSelfClosingElement'
                          ReturnStatement
                            FalseKeyword
                    BreakStatement
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'OpenBracketToken'
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'CloseBracketToken'
                    IfStatement
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: 'container'
                          Identifier: 'kind'
                        ExclamationEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'MappedType'
                      Block
                        ReturnStatement
                          FalseKeyword
                    BreakStatement
              ReturnStatement
                BinaryExpression
                  BinaryExpression
                    Identifier: ' nodeStartLine'
                    ExclamationEqualsEqualsToken
                    Identifier: ' line'
                  AmpersandAmpersandToken
                  PrefixUnaryExpression
                    ParenthesizedExpression
                      BinaryExpression
                        CallExpression
                          Identifier: 'hasDecorators'
                          Identifier: 'node'
                        AmpersandAmpersandToken
                        BinaryExpression
                          Identifier: ' kind'
                          EqualsEqualsEqualsToken
                          CallExpression
                            Identifier: ' getFirstNonDecoratorTokenOfNode'
                            Identifier: 'node'
          FunctionDeclaration
            Identifier: ' getDelta'
            Parameter
              Identifier: 'child'
              TypeReference
                Identifier: ' TextRangeWithKind'
            Block
              ReturnStatement
                ConditionalExpression
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' SmartIndenter'
                      Identifier: 'nodeWillIndentChild'
                    Identifier: 'options'
                    Identifier: ' node'
                    Identifier: ' child'
                    Identifier: ' sourceFile'
                    TrueKeyword
                  QuestionToken
                  Identifier: ' delta'
                  ColonToken
                  NumericLiteral
      FunctionDeclaration
        Identifier: ' processNode'
        Parameter
          Identifier: 'node'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' contextNode'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' nodeStartLine'
          NumberKeyword
        Parameter
          Identifier: ' undecoratedNodeStartLine'
          NumberKeyword
        Parameter
          Identifier: ' indentation'
          NumberKeyword
        Parameter
          Identifier: ' delta'
          NumberKeyword
        Block
          IfStatement
            PrefixUnaryExpression
              CallExpression
                Identifier: 'rangeOverlapsWithStartEnd'
                Identifier: 'originalRange'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' node'
                    Identifier: 'getStart'
                  Identifier: 'sourceFile'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' node'
                    Identifier: 'getEnd'
            Block
              ReturnStatement
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' nodeDynamicIndentation'
                CallExpression
                  Identifier: ' getDynamicIndentation'
                  Identifier: 'node'
                  Identifier: ' nodeStartLine'
                  Identifier: ' indentation'
                  Identifier: ' delta'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' childContextNode'
                Identifier: ' contextNode'
          ExpressionStatement
            CallExpression
              Identifier: '

        // if there are any tokens that logically belong to node and interleave child nodes
        // such tokens will be consumed in processChildNode for the child that follows them
        forEachChild'
              Identifier: '
            node'
              ArrowFunction
                Parameter
                  Identifier: '
            child'
                EqualsGreaterThanToken
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                processChildNode'
                      Identifier: 'child'
                      PropertyAccessExpression
                        Identifier: ' /*inheritedIndentation*/ Constants'
                        Identifier: 'Unknown'
                      Identifier: ' node'
                      Identifier: ' nodeDynamicIndentation'
                      Identifier: ' nodeStartLine'
                      Identifier: ' undecoratedNodeStartLine'
                      FalseKeyword
              ArrowFunction
                Parameter
                  Identifier: '
            nodes'
                EqualsGreaterThanToken
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                processChildNodes'
                      Identifier: 'nodes'
                      Identifier: ' node'
                      Identifier: ' nodeStartLine'
                      Identifier: ' nodeDynamicIndentation'
          WhileStatement
            BinaryExpression
              CallExpression
                PropertyAccessExpression
                  Identifier: 'formattingScanner'
                  Identifier: 'isOnToken'
              AmpersandAmpersandToken
              BinaryExpression
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' formattingScanner'
                    Identifier: 'getTokenFullStart'
                LessThanToken
                PropertyAccessExpression
                  Identifier: ' originalRange'
                  Identifier: 'end'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' tokenInfo'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' formattingScanner'
                        Identifier: 'readTokenInfo'
                      Identifier: 'node'
              IfStatement
                BinaryExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: 'tokenInfo'
                      Identifier: 'token'
                    Identifier: 'end'
                  GreaterThanToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' Math'
                      Identifier: 'min'
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'end'
                    PropertyAccessExpression
                      Identifier: ' originalRange'
                      Identifier: 'end'
                Block
                  BreakStatement
              ExpressionStatement
                CallExpression
                  Identifier: '
            consumeTokenAndAdvanceScanner'
                  Identifier: 'tokenInfo'
                  Identifier: ' node'
                  Identifier: ' nodeDynamicIndentation'
                  Identifier: ' node'
          FunctionDeclaration
            Identifier: ' processChildNode'
            Parameter
              Identifier: '
            child'
              TypeReference
                Identifier: ' Node'
            Parameter
              Identifier: '
            inheritedIndentation'
              NumberKeyword
            Parameter
              Identifier: '
            parent'
              TypeReference
                Identifier: ' Node'
            Parameter
              Identifier: '
            parentDynamicIndentation'
              TypeReference
                Identifier: ' DynamicIndentation'
            Parameter
              Identifier: '
            parentStartLine'
              NumberKeyword
            Parameter
              Identifier: '
            undecoratedParentStartLine'
              NumberKeyword
            Parameter
              Identifier: '
            isListItem'
              BooleanKeyword
            Parameter
              Identifier: '
            isFirstListItem'
              QuestionToken
              BooleanKeyword
            NumberKeyword
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            Debug'
                    Identifier: 'assert'
                  PrefixUnaryExpression
                    CallExpression
                      Identifier: 'nodeIsSynthesized'
                      Identifier: 'child'
              IfStatement
                BinaryExpression
                  CallExpression
                    Identifier: 'nodeIsMissing'
                    Identifier: 'child'
                  BarBarToken
                  CallExpression
                    Identifier: ' isGrammarError'
                    Identifier: 'parent'
                    Identifier: ' child'
                Block
                  ReturnStatement
                    Identifier: ' inheritedIndentation'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' childStartPos'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' child'
                        Identifier: 'getStart'
                      Identifier: 'sourceFile'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' childStartLine'
                    PropertyAccessExpression
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' sourceFile'
                          Identifier: 'getLineAndCharacterOfPosition'
                        Identifier: 'childStartPos'
                      Identifier: 'line'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' undecoratedChildStartLine'
                    Identifier: ' childStartLine'
              IfStatement
                CallExpression
                  Identifier: 'hasDecorators'
                  Identifier: 'child'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                undecoratedChildStartLine'
                      EqualsToken
                      PropertyAccessExpression
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' sourceFile'
                            Identifier: 'getLineAndCharacterOfPosition'
                          CallExpression
                            Identifier: 'getNonDecoratorTokenPosOfNode'
                            Identifier: 'child'
                            Identifier: ' sourceFile'
                        Identifier: 'line'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' childIndentationAmount'
                    PropertyAccessExpression
                      Identifier: ' Constants'
                      Identifier: 'Unknown'
              IfStatement
                BinaryExpression
                  Identifier: 'isListItem'
                  AmpersandAmpersandToken
                  CallExpression
                    Identifier: ' rangeContainsRange'
                    Identifier: 'originalRange'
                    Identifier: ' parent'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                childIndentationAmount'
                      EqualsToken
                      CallExpression
                        Identifier: ' tryComputeIndentationForListItem'
                        Identifier: 'childStartPos'
                        PropertyAccessExpression
                          Identifier: ' child'
                          Identifier: 'end'
                        Identifier: ' parentStartLine'
                        Identifier: ' originalRange'
                        Identifier: ' inheritedIndentation'
                  IfStatement
                    BinaryExpression
                      Identifier: 'childIndentationAmount'
                      ExclamationEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' Constants'
                        Identifier: 'Unknown'
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    inheritedIndentation'
                          EqualsToken
                          Identifier: ' childIndentationAmount'
              IfStatement
                PrefixUnaryExpression
                  CallExpression
                    Identifier: 'rangeOverlapsWithStartEnd'
                    Identifier: 'originalRange'
                    PropertyAccessExpression
                      Identifier: ' child'
                      Identifier: 'pos'
                    PropertyAccessExpression
                      Identifier: ' child'
                      Identifier: 'end'
                Block
                  IfStatement
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: 'child'
                        Identifier: 'end'
                      LessThanToken
                      PropertyAccessExpression
                        Identifier: ' originalRange'
                        Identifier: 'pos'
                    Block
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                    formattingScanner'
                            Identifier: 'skipToEndOf'
                          Identifier: 'child'
                  ReturnStatement
                    Identifier: ' inheritedIndentation'
              IfStatement
                BinaryExpression
                  CallExpression
                    PropertyAccessExpression
                      Identifier: 'child'
                      Identifier: 'getFullWidth'
                  EqualsEqualsEqualsToken
                  NumericLiteral
                Block
                  ReturnStatement
                    Identifier: ' inheritedIndentation'
              WhileStatement
                BinaryExpression
                  CallExpression
                    PropertyAccessExpression
                      Identifier: 'formattingScanner'
                      Identifier: 'isOnToken'
                  AmpersandAmpersandToken
                  BinaryExpression
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' formattingScanner'
                        Identifier: 'getTokenFullStart'
                    LessThanToken
                    PropertyAccessExpression
                      Identifier: ' originalRange'
                      Identifier: 'end'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' tokenInfo'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' formattingScanner'
                            Identifier: 'readTokenInfo'
                          Identifier: 'node'
                  IfStatement
                    BinaryExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: 'tokenInfo'
                          Identifier: 'token'
                        Identifier: 'end'
                      GreaterThanToken
                      PropertyAccessExpression
                        Identifier: ' originalRange'
                        Identifier: 'end'
                    Block
                      ReturnStatement
                        Identifier: ' inheritedIndentation'
                  IfStatement
                    BinaryExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: 'tokenInfo'
                          Identifier: 'token'
                        Identifier: 'end'
                      GreaterThanToken
                      Identifier: ' childStartPos'
                    Block
                      IfStatement
                        BinaryExpression
                          PropertyAccessExpression
                            PropertyAccessExpression
                              Identifier: 'tokenInfo'
                              Identifier: 'token'
                            Identifier: 'pos'
                          GreaterThanToken
                          Identifier: ' childStartPos'
                        Block
                          ExpressionStatement
                            CallExpression
                              PropertyAccessExpression
                                Identifier: '
                        formattingScanner'
                                Identifier: 'skipToStartOf'
                              Identifier: 'child'
                      BreakStatement
                  ExpressionStatement
                    CallExpression
                      Identifier: '

                consumeTokenAndAdvanceScanner'
                      Identifier: 'tokenInfo'
                      Identifier: ' node'
                      Identifier: ' parentDynamicIndentation'
                      Identifier: ' node'
              IfStatement
                BinaryExpression
                  PrefixUnaryExpression
                    CallExpression
                      PropertyAccessExpression
                        Identifier: 'formattingScanner'
                        Identifier: 'isOnToken'
                  BarBarToken
                  BinaryExpression
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' formattingScanner'
                        Identifier: 'getTokenFullStart'
                    GreaterThanEqualsToken
                    PropertyAccessExpression
                      Identifier: ' originalRange'
                      Identifier: 'end'
                Block
                  ReturnStatement
                    Identifier: ' inheritedIndentation'
              IfStatement
                CallExpression
                  Identifier: 'isToken'
                  Identifier: 'child'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' tokenInfo'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' formattingScanner'
                            Identifier: 'readTokenInfo'
                          Identifier: 'child'
                  IfStatement
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: 'child'
                        Identifier: 'kind'
                      ExclamationEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'JsxText'
                    Block
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                    Debug'
                            Identifier: 'assert'
                          BinaryExpression
                            PropertyAccessExpression
                              PropertyAccessExpression
                                Identifier: 'tokenInfo'
                                Identifier: 'token'
                              Identifier: 'end'
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' child'
                              Identifier: 'end'
                          StringLiteral
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    consumeTokenAndAdvanceScanner'
                          Identifier: 'tokenInfo'
                          Identifier: ' node'
                          Identifier: ' parentDynamicIndentation'
                          Identifier: ' child'
                      ReturnStatement
                        Identifier: ' inheritedIndentation'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' effectiveParentStartLine'
                    ConditionalExpression
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: ' child'
                          Identifier: 'kind'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'Decorator'
                      QuestionToken
                      Identifier: ' childStartLine'
                      ColonToken
                      Identifier: ' undecoratedParentStartLine'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' childIndentation'
                    CallExpression
                      Identifier: ' computeIndentation'
                      Identifier: 'child'
                      Identifier: ' childStartLine'
                      Identifier: ' childIndentationAmount'
                      Identifier: ' node'
                      Identifier: ' parentDynamicIndentation'
                      Identifier: ' effectiveParentStartLine'
              ExpressionStatement
                CallExpression
                  Identifier: '

            processNode'
                  Identifier: 'child'
                  Identifier: ' childContextNode'
                  Identifier: ' childStartLine'
                  Identifier: ' undecoratedChildStartLine'
                  PropertyAccessExpression
                    Identifier: ' childIndentation'
                    Identifier: 'indentation'
                  PropertyAccessExpression
                    Identifier: ' childIndentation'
                    Identifier: 'delta'
              ExpressionStatement
                BinaryExpression
                  Identifier: '

            childContextNode'
                  EqualsToken
                  Identifier: ' node'
              IfStatement
                BinaryExpression
                  BinaryExpression
                    Identifier: 'isFirstListItem'
                    AmpersandAmpersandToken
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: ' parent'
                        Identifier: 'kind'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'ArrayLiteralExpression'
                  AmpersandAmpersandToken
                  BinaryExpression
                    Identifier: ' inheritedIndentation'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' Constants'
                      Identifier: 'Unknown'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                inheritedIndentation'
                      EqualsToken
                      PropertyAccessExpression
                        Identifier: ' childIndentation'
                        Identifier: 'indentation'
              ReturnStatement
                Identifier: ' inheritedIndentation'
          FunctionDeclaration
            Identifier: ' processChildNodes'
            Parameter
              Identifier: 'nodes'
              TypeReference
                Identifier: ' NodeArray'
                TypeReference
                  Identifier: 'Node'
            Parameter
              Identifier: ' parent'
              TypeReference
                Identifier: ' Node'
            Parameter
              Identifier: ' parentStartLine'
              NumberKeyword
            Parameter
              Identifier: ' parentDynamicIndentation'
              TypeReference
                Identifier: ' DynamicIndentation'
            VoidKeyword
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            Debug'
                    Identifier: 'assert'
                  CallExpression
                    Identifier: 'isNodeArray'
                    Identifier: 'nodes'
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            Debug'
                    Identifier: 'assert'
                  PrefixUnaryExpression
                    CallExpression
                      Identifier: 'nodeIsSynthesized'
                      Identifier: 'nodes'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' listStartToken'
                    CallExpression
                      Identifier: ' getOpenTokenForList'
                      Identifier: 'parent'
                      Identifier: ' nodes'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' listDynamicIndentation'
                    Identifier: ' parentDynamicIndentation'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' startLine'
                    Identifier: ' parentStartLine'
              IfStatement
                PrefixUnaryExpression
                  CallExpression
                    Identifier: 'rangeOverlapsWithStartEnd'
                    Identifier: 'originalRange'
                    PropertyAccessExpression
                      Identifier: ' nodes'
                      Identifier: 'pos'
                    PropertyAccessExpression
                      Identifier: ' nodes'
                      Identifier: 'end'
                Block
                  IfStatement
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: 'nodes'
                        Identifier: 'end'
                      LessThanToken
                      PropertyAccessExpression
                        Identifier: ' originalRange'
                        Identifier: 'pos'
                    Block
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier: '
                    formattingScanner'
                            Identifier: 'skipToEndOf'
                          Identifier: 'nodes'
                  ReturnStatement
              IfStatement
                BinaryExpression
                  Identifier: 'listStartToken'
                  ExclamationEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'Unknown'
                Block
                  WhileStatement
                    BinaryExpression
                      CallExpression
                        PropertyAccessExpression
                          Identifier: 'formattingScanner'
                          Identifier: 'isOnToken'
                      AmpersandAmpersandToken
                      BinaryExpression
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' formattingScanner'
                            Identifier: 'getTokenFullStart'
                        LessThanToken
                        PropertyAccessExpression
                          Identifier: ' originalRange'
                          Identifier: 'end'
                    Block
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' tokenInfo'
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' formattingScanner'
                                Identifier: 'readTokenInfo'
                              Identifier: 'parent'
                      IfStatement
                        BinaryExpression
                          PropertyAccessExpression
                            PropertyAccessExpression
                              Identifier: 'tokenInfo'
                              Identifier: 'token'
                            Identifier: 'end'
                          GreaterThanToken
                          PropertyAccessExpression
                            Identifier: ' nodes'
                            Identifier: 'pos'
                        Block
                          BreakStatement
                        IfStatement
                          BinaryExpression
                            PropertyAccessExpression
                              PropertyAccessExpression
                                Identifier: 'tokenInfo'
                                Identifier: 'token'
                              Identifier: 'kind'
                            EqualsEqualsEqualsToken
                            Identifier: ' listStartToken'
                          Block
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '
                        // consume list start token
                        startLine'
                                EqualsToken
                                PropertyAccessExpression
                                  CallExpression
                                    PropertyAccessExpression
                                      Identifier: ' sourceFile'
                                      Identifier: 'getLineAndCharacterOfPosition'
                                    PropertyAccessExpression
                                      PropertyAccessExpression
                                        Identifier: 'tokenInfo'
                                        Identifier: 'token'
                                      Identifier: 'pos'
                                  Identifier: 'line'
                            ExpressionStatement
                              CallExpression
                                Identifier: '

                        consumeTokenAndAdvanceScanner'
                                Identifier: 'tokenInfo'
                                Identifier: ' parent'
                                Identifier: ' parentDynamicIndentation'
                                Identifier: ' parent'
                            VariableStatement
                              VariableDeclarationList
                                VariableDeclaration
                                  Identifier: ' indentationOnListStartToken'
                                  NumberKeyword
                            IfStatement
                              BinaryExpression
                                Identifier: 'indentationOnLastIndentedLine'
                                ExclamationEqualsEqualsToken
                                PropertyAccessExpression
                                  Identifier: ' Constants'
                                  Identifier: 'Unknown'
                              Block
                                ExpressionStatement
                                  BinaryExpression
                                    Identifier: '
                            // scanner just processed list start token so consider last indentation as list indentation
                            // function foo(): { // last indentation was 0, list item will be indented based on this value
                            //   foo: number;
                            // }: {};
                            indentationOnListStartToken'
                                    EqualsToken
                                    Identifier: ' indentationOnLastIndentedLine'
                              Block
                                VariableStatement
                                  VariableDeclarationList
                                    VariableDeclaration
                                      Identifier: ' startLinePosition'
                                      CallExpression
                                        Identifier: ' getLineStartPositionForPosition'
                                        PropertyAccessExpression
                                          PropertyAccessExpression
                                            Identifier: 'tokenInfo'
                                            Identifier: 'token'
                                          Identifier: 'pos'
                                        Identifier: ' sourceFile'
                                ExpressionStatement
                                  BinaryExpression
                                    Identifier: '
                            indentationOnListStartToken'
                                    EqualsToken
                                    CallExpression
                                      PropertyAccessExpression
                                        Identifier: ' SmartIndenter'
                                        Identifier: 'findFirstNonWhitespaceColumn'
                                      Identifier: 'startLinePosition'
                                      PropertyAccessExpression
                                        PropertyAccessExpression
                                          Identifier: ' tokenInfo'
                                          Identifier: 'token'
                                        Identifier: 'pos'
                                      Identifier: ' sourceFile'
                                      Identifier: ' options'
                            ExpressionStatement
                              BinaryExpression
                                Identifier: '

                        listDynamicIndentation'
                                EqualsToken
                                CallExpression
                                  Identifier: ' getDynamicIndentation'
                                  Identifier: 'parent'
                                  Identifier: ' parentStartLine'
                                  Identifier: ' indentationOnListStartToken'
                                  NonNullExpression
                                    PropertyAccessExpression
                                      Identifier: ' options'
                                      Identifier: 'indentSize'
                          Block
                            ExpressionStatement
                              CallExpression
                                Identifier: '
                        // consume any tokens that precede the list as child elements of 'node' using its indentation scope
                        consumeTokenAndAdvanceScanner'
                                Identifier: 'tokenInfo'
                                Identifier: ' parent'
                                Identifier: ' parentDynamicIndentation'
                                Identifier: ' parent'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' inheritedIndentation'
                    PropertyAccessExpression
                      Identifier: ' Constants'
                      Identifier: 'Unknown'
              ForStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' i'
                    NumericLiteral
                BinaryExpression
                  Identifier: ' i'
                  LessThanToken
                  PropertyAccessExpression
                    Identifier: ' nodes'
                    Identifier: 'length'
                PostfixUnaryExpression
                  Identifier: ' i'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' child'
                        ElementAccessExpression
                          Identifier: ' nodes'
                          Identifier: 'i'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                inheritedIndentation'
                      EqualsToken
                      CallExpression
                        Identifier: ' processChildNode'
                        Identifier: 'child'
                        Identifier: ' inheritedIndentation'
                        Identifier: ' node'
                        Identifier: ' listDynamicIndentation'
                        Identifier: ' startLine'
                        Identifier: ' startLine'
                        TrueKeyword
                        BinaryExpression
                          Identifier: ' /*isFirstListItem*/ i'
                          EqualsEqualsEqualsToken
                          NumericLiteral
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' listEndToken'
                    CallExpression
                      Identifier: ' getCloseTokenForOpenToken'
                      Identifier: 'listStartToken'
              IfStatement
                BinaryExpression
                  BinaryExpression
                    BinaryExpression
                      Identifier: 'listEndToken'
                      ExclamationEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'Unknown'
                    AmpersandAmpersandToken
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' formattingScanner'
                        Identifier: 'isOnToken'
                  AmpersandAmpersandToken
                  BinaryExpression
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' formattingScanner'
                        Identifier: 'getTokenFullStart'
                    LessThanToken
                    PropertyAccessExpression
                      Identifier: ' originalRange'
                      Identifier: 'end'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' tokenInfo'
                        UnionType
                          TypeReference
                            Identifier: ' TokenInfo'
                          UndefinedKeyword
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' formattingScanner'
                            Identifier: 'readTokenInfo'
                          Identifier: 'parent'
                  IfStatement
                    BinaryExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: 'tokenInfo'
                          Identifier: 'token'
                        Identifier: 'kind'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'CommaToken'
                    Block
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    // consume the comma
                    consumeTokenAndAdvanceScanner'
                          Identifier: 'tokenInfo'
                          Identifier: ' parent'
                          Identifier: ' listDynamicIndentation'
                          Identifier: ' parent'
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    tokenInfo'
                          EqualsToken
                          ConditionalExpression
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' formattingScanner'
                                Identifier: 'isOnToken'
                            QuestionToken
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' formattingScanner'
                                Identifier: 'readTokenInfo'
                              Identifier: 'parent'
                            ColonToken
                            Identifier: ' undefined'
                  IfStatement
                    BinaryExpression
                      BinaryExpression
                        Identifier: 'tokenInfo'
                        AmpersandAmpersandToken
                        BinaryExpression
                          PropertyAccessExpression
                            PropertyAccessExpression
                              Identifier: ' tokenInfo'
                              Identifier: 'token'
                            Identifier: 'kind'
                          EqualsEqualsEqualsToken
                          Identifier: ' listEndToken'
                      AmpersandAmpersandToken
                      CallExpression
                        Identifier: ' rangeContainsRange'
                        Identifier: 'parent'
                        PropertyAccessExpression
                          Identifier: ' tokenInfo'
                          Identifier: 'token'
                    Block
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    // consume list end token
                    consumeTokenAndAdvanceScanner'
                          Identifier: 'tokenInfo'
                          Identifier: ' parent'
                          Identifier: ' listDynamicIndentation'
                          Identifier: ' parent'
                          TrueKeyword
          FunctionDeclaration
            Identifier: ' consumeTokenAndAdvanceScanner'
            Parameter
              Identifier: 'currentTokenInfo'
              TypeReference
                Identifier: ' TokenInfo'
            Parameter
              Identifier: ' parent'
              TypeReference
                Identifier: ' Node'
            Parameter
              Identifier: ' dynamicIndentation'
              TypeReference
                Identifier: ' DynamicIndentation'
            Parameter
              Identifier: ' container'
              TypeReference
                Identifier: ' Node'
            Parameter
              Identifier: ' isListEndToken'
              QuestionToken
              BooleanKeyword
            VoidKeyword
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            Debug'
                    Identifier: 'assert'
                  CallExpression
                    Identifier: 'rangeContainsRange'
                    Identifier: 'parent'
                    PropertyAccessExpression
                      Identifier: ' currentTokenInfo'
                      Identifier: 'token'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' lastTriviaWasNewLine'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' formattingScanner'
                        Identifier: 'lastTrailingTriviaWasNewLine'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' indentToken'
                    FalseKeyword
              IfStatement
                PropertyAccessExpression
                  Identifier: 'currentTokenInfo'
                  Identifier: 'leadingTrivia'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                processTrivia'
                      PropertyAccessExpression
                        Identifier: 'currentTokenInfo'
                        Identifier: 'leadingTrivia'
                      Identifier: ' parent'
                      Identifier: ' childContextNode'
                      Identifier: ' dynamicIndentation'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' lineAction'
                    PropertyAccessExpression
                      Identifier: ' LineAction'
                      Identifier: 'None'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' isTokenInRange'
                    CallExpression
                      Identifier: ' rangeContainsRange'
                      Identifier: 'originalRange'
                      PropertyAccessExpression
                        Identifier: ' currentTokenInfo'
                        Identifier: 'token'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' tokenStart'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' sourceFile'
                        Identifier: 'getLineAndCharacterOfPosition'
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: 'currentTokenInfo'
                          Identifier: 'token'
                        Identifier: 'pos'
              IfStatement
                Identifier: 'isTokenInRange'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' rangeHasError'
                        CallExpression
                          Identifier: ' rangeContainsError'
                          PropertyAccessExpression
                            Identifier: 'currentTokenInfo'
                            Identifier: 'token'
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' savePreviousRange'
                        Identifier: ' previousRange'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                lineAction'
                      EqualsToken
                      CallExpression
                        Identifier: ' processRange'
                        PropertyAccessExpression
                          Identifier: 'currentTokenInfo'
                          Identifier: 'token'
                        Identifier: ' tokenStart'
                        Identifier: ' parent'
                        Identifier: ' childContextNode'
                        Identifier: ' dynamicIndentation'
                  IfStatement
                    PrefixUnaryExpression
                      Identifier: 'rangeHasError'
                    Block
                      IfStatement
                        BinaryExpression
                          Identifier: 'lineAction'
                          EqualsEqualsEqualsToken
                          PropertyAccessExpression
                            Identifier: ' LineAction'
                            Identifier: 'None'
                        Block
                          VariableStatement
                            VariableDeclarationList
                              VariableDeclaration
                                Identifier: ' prevEndLine'
                                BinaryExpression
                                  Identifier: ' savePreviousRange'
                                  AmpersandAmpersandToken
                                  PropertyAccessExpression
                                    CallExpression
                                      PropertyAccessExpression
                                        Identifier: ' sourceFile'
                                        Identifier: 'getLineAndCharacterOfPosition'
                                      PropertyAccessExpression
                                        Identifier: 'savePreviousRange'
                                        Identifier: 'end'
                                    Identifier: 'line'
                          ExpressionStatement
                            BinaryExpression
                              Identifier: '
                        indentToken'
                              EqualsToken
                              BinaryExpression
                                Identifier: ' lastTriviaWasNewLine'
                                AmpersandAmpersandToken
                                BinaryExpression
                                  PropertyAccessExpression
                                    Identifier: ' tokenStart'
                                    Identifier: 'line'
                                  ExclamationEqualsEqualsToken
                                  Identifier: ' prevEndLine'
                        Block
                          ExpressionStatement
                            BinaryExpression
                              Identifier: '
                        indentToken'
                              EqualsToken
                              BinaryExpression
                                Identifier: ' lineAction'
                                EqualsEqualsEqualsToken
                                PropertyAccessExpression
                                  Identifier: ' LineAction'
                                  Identifier: 'LineAdded'
              IfStatement
                PropertyAccessExpression
                  Identifier: 'currentTokenInfo'
                  Identifier: 'trailingTrivia'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                previousRangeTriviaEnd'
                      EqualsToken
                      PropertyAccessExpression
                        CallExpression
                          Identifier: ' last'
                          PropertyAccessExpression
                            Identifier: 'currentTokenInfo'
                            Identifier: 'trailingTrivia'
                        Identifier: 'end'
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                processTrivia'
                      PropertyAccessExpression
                        Identifier: 'currentTokenInfo'
                        Identifier: 'trailingTrivia'
                      Identifier: ' parent'
                      Identifier: ' childContextNode'
                      Identifier: ' dynamicIndentation'
              IfStatement
                Identifier: 'indentToken'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' tokenIndentation'
                        ConditionalExpression
                          ParenthesizedExpression
                            BinaryExpression
                              Identifier: 'isTokenInRange'
                              AmpersandAmpersandToken
                              PrefixUnaryExpression
                                CallExpression
                                  Identifier: 'rangeContainsError'
                                  PropertyAccessExpression
                                    Identifier: 'currentTokenInfo'
                                    Identifier: 'token'
                          QuestionToken
                          CallExpression
                            PropertyAccessExpression
                              Identifier: '
                    dynamicIndentation'
                              Identifier: 'getIndentationForToken'
                            PropertyAccessExpression
                              Identifier: 'tokenStart'
                              Identifier: 'line'
                            PropertyAccessExpression
                              PropertyAccessExpression
                                Identifier: ' currentTokenInfo'
                                Identifier: 'token'
                              Identifier: 'kind'
                            Identifier: ' container'
                            PrefixUnaryExpression
                              PrefixUnaryExpression
                                Identifier: 'isListEndToken'
                          ColonToken
                          PropertyAccessExpression
                            Identifier: '
                    Constants'
                            Identifier: 'Unknown'
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' indentNextTokenOrTrivia'
                        TrueKeyword
                  IfStatement
                    PropertyAccessExpression
                      Identifier: 'currentTokenInfo'
                      Identifier: 'leadingTrivia'
                    Block
                      VariableStatement
                        VariableDeclarationList
                          VariableDeclaration
                            Identifier: ' commentIndentation'
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' dynamicIndentation'
                                Identifier: 'getIndentationForComment'
                              PropertyAccessExpression
                                PropertyAccessExpression
                                  Identifier: 'currentTokenInfo'
                                  Identifier: 'token'
                                Identifier: 'kind'
                              Identifier: ' tokenIndentation'
                              Identifier: ' container'
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    indentNextTokenOrTrivia'
                          EqualsToken
                          CallExpression
                            Identifier: ' indentTriviaItems'
                            PropertyAccessExpression
                              Identifier: 'currentTokenInfo'
                              Identifier: 'leadingTrivia'
                            Identifier: ' commentIndentation'
                            Identifier: ' indentNextTokenOrTrivia'
                            ArrowFunction
                              Parameter
                                Identifier: ' item'
                              EqualsGreaterThanToken
                              CallExpression
                                Identifier: ' insertIndentation'
                                PropertyAccessExpression
                                  Identifier: 'item'
                                  Identifier: 'pos'
                                Identifier: ' commentIndentation'
                                FalseKeyword
                  IfStatement
                    BinaryExpression
                      BinaryExpression
                        Identifier: 'tokenIndentation'
                        ExclamationEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' Constants'
                          Identifier: 'Unknown'
                      AmpersandAmpersandToken
                      Identifier: ' indentNextTokenOrTrivia'
                    Block
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    insertIndentation'
                          PropertyAccessExpression
                            PropertyAccessExpression
                              Identifier: 'currentTokenInfo'
                              Identifier: 'token'
                            Identifier: 'pos'
                          Identifier: ' tokenIndentation'
                          BinaryExpression
                            Identifier: ' lineAction'
                            EqualsEqualsEqualsToken
                            PropertyAccessExpression
                              Identifier: ' LineAction'
                              Identifier: 'LineAdded'
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '

                    lastIndentedLine'
                          EqualsToken
                          PropertyAccessExpression
                            Identifier: ' tokenStart'
                            Identifier: 'line'
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                    indentationOnLastIndentedLine'
                          EqualsToken
                          Identifier: ' tokenIndentation'
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '

            formattingScanner'
                    Identifier: 'advance'
              ExpressionStatement
                BinaryExpression
                  Identifier: '

            childContextNode'
                  EqualsToken
                  Identifier: ' parent'
      FunctionDeclaration
        Identifier: ' indentTriviaItems'
        Parameter
          Identifier: '
        trivia'
          ArrayType
            TypeReference
              Identifier: ' TextRangeWithKind'
        Parameter
          Identifier: '
        commentIndentation'
          NumberKeyword
        Parameter
          Identifier: '
        indentNextTokenOrTrivia'
          BooleanKeyword
        Parameter
          Identifier: '
        indentSingleLine'
          FunctionType
            Parameter
              Identifier: 'item'
              TypeReference
                Identifier: ' TextRangeWithKind'
            VoidKeyword
        Block
          ForOfStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' triviaItem'
            Identifier: ' trivia'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' triviaInRange'
                    CallExpression
                      Identifier: ' rangeContainsRange'
                      Identifier: 'originalRange'
                      Identifier: ' triviaItem'
              SwitchStatement
                PropertyAccessExpression
                  Identifier: 'triviaItem'
                  Identifier: 'kind'
                CaseBlock
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'MultiLineCommentTrivia'
                    IfStatement
                      Identifier: 'triviaInRange'
                      Block
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                        indentMultilineComment'
                            Identifier: 'triviaItem'
                            Identifier: ' commentIndentation'
                            PrefixUnaryExpression
                              Identifier: 'indentNextTokenOrTrivia'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    indentNextTokenOrTrivia'
                        EqualsToken
                        FalseKeyword
                    BreakStatement
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'SingleLineCommentTrivia'
                    IfStatement
                      BinaryExpression
                        Identifier: 'indentNextTokenOrTrivia'
                        AmpersandAmpersandToken
                        Identifier: ' triviaInRange'
                      Block
                        ExpressionStatement
                          CallExpression
                            Identifier: '
                        indentSingleLine'
                            Identifier: 'triviaItem'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    indentNextTokenOrTrivia'
                        EqualsToken
                        FalseKeyword
                    BreakStatement
                  CaseClause
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'NewLineTrivia'
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
                    indentNextTokenOrTrivia'
                        EqualsToken
                        TrueKeyword
                    BreakStatement
          ReturnStatement
            Identifier: ' indentNextTokenOrTrivia'
      FunctionDeclaration
        Identifier: ' processTrivia'
        Parameter
          Identifier: 'trivia'
          ArrayType
            TypeReference
              Identifier: ' TextRangeWithKind'
        Parameter
          Identifier: ' parent'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' contextNode'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' dynamicIndentation'
          TypeReference
            Identifier: ' DynamicIndentation'
        VoidKeyword
        Block
          ForOfStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' triviaItem'
            Identifier: ' trivia'
            Block
              IfStatement
                BinaryExpression
                  CallExpression
                    Identifier: 'isComment'
                    PropertyAccessExpression
                      Identifier: 'triviaItem'
                      Identifier: 'kind'
                  AmpersandAmpersandToken
                  CallExpression
                    Identifier: ' rangeContainsRange'
                    Identifier: 'originalRange'
                    Identifier: ' triviaItem'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' triviaItemStart'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' sourceFile'
                            Identifier: 'getLineAndCharacterOfPosition'
                          PropertyAccessExpression
                            Identifier: 'triviaItem'
                            Identifier: 'pos'
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                processRange'
                      Identifier: 'triviaItem'
                      Identifier: ' triviaItemStart'
                      Identifier: ' parent'
                      Identifier: ' contextNode'
                      Identifier: ' dynamicIndentation'
      FunctionDeclaration
        Identifier: ' processRange'
        Parameter
          Identifier: 'range'
          TypeReference
            Identifier: ' TextRangeWithKind'
        Parameter
          Identifier: ' rangeStart'
          TypeReference
            Identifier: ' LineAndCharacter'
        Parameter
          Identifier: ' parent'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' contextNode'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' dynamicIndentation'
          TypeReference
            Identifier: ' DynamicIndentation'
        TypeReference
          Identifier: ' LineAction'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' rangeHasError'
                CallExpression
                  Identifier: ' rangeContainsError'
                  Identifier: 'range'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' lineAction'
                PropertyAccessExpression
                  Identifier: ' LineAction'
                  Identifier: 'None'
          IfStatement
            PrefixUnaryExpression
              Identifier: 'rangeHasError'
            Block
              IfStatement
                PrefixUnaryExpression
                  Identifier: 'previousRange'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' originalStart'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' sourceFile'
                            Identifier: 'getLineAndCharacterOfPosition'
                          PropertyAccessExpression
                            Identifier: 'originalRange'
                            Identifier: 'pos'
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                trimTrailingWhitespacesForLines'
                      PropertyAccessExpression
                        Identifier: 'originalStart'
                        Identifier: 'line'
                      PropertyAccessExpression
                        Identifier: ' rangeStart'
                        Identifier: 'line'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                lineAction'
                      EqualsToken
                      CallExpression
                        Identifier: ' processPair'
                        Identifier: 'range'
                        PropertyAccessExpression
                          Identifier: ' rangeStart'
                          Identifier: 'line'
                        Identifier: ' parent'
                        Identifier: ' previousRange'
                        Identifier: ' previousRangeStartLine'
                        Identifier: ' previousParent'
                        Identifier: ' contextNode'
                        Identifier: ' dynamicIndentation'
          ExpressionStatement
            BinaryExpression
              Identifier: '

        previousRange'
              EqualsToken
              Identifier: ' range'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        previousRangeTriviaEnd'
              EqualsToken
              PropertyAccessExpression
                Identifier: ' range'
                Identifier: 'end'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        previousParent'
              EqualsToken
              Identifier: ' parent'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        previousRangeStartLine'
              EqualsToken
              PropertyAccessExpression
                Identifier: ' rangeStart'
                Identifier: 'line'
          ReturnStatement
            Identifier: ' lineAction'
      FunctionDeclaration
        Identifier: ' processPair'
        Parameter
          Identifier: 'currentItem'
          TypeReference
            Identifier: ' TextRangeWithKind'
        Parameter
          Identifier: ' currentStartLine'
          NumberKeyword
        Parameter
          Identifier: ' currentParent'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' previousItem'
          TypeReference
            Identifier: ' TextRangeWithKind'
        Parameter
          Identifier: ' previousStartLine'
          NumberKeyword
        Parameter
          Identifier: ' previousParent'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' contextNode'
          TypeReference
            Identifier: ' Node'
        Parameter
          Identifier: ' dynamicIndentation'
          UnionType
            TypeReference
              Identifier: ' DynamicIndentation'
            UndefinedKeyword
        TypeReference
          Identifier: ' LineAction'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        formattingContext'
                Identifier: 'updateContext'
              Identifier: 'previousItem'
              Identifier: ' previousParent'
              Identifier: ' currentItem'
              Identifier: ' currentParent'
              Identifier: ' contextNode'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' rules'
                CallExpression
                  Identifier: ' getRules'
                  Identifier: 'formattingContext'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' trimTrailingWhitespaces'
                BinaryExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: ' formattingContext'
                      Identifier: 'options'
                    Identifier: 'trimTrailingWhitespace'
                  ExclamationEqualsEqualsToken
                  FalseKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' lineAction'
                PropertyAccessExpression
                  Identifier: ' LineAction'
                  Identifier: 'None'
          IfStatement
            Identifier: 'rules'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            // Apply rules in reverse order so that higher priority rules (which are first in the array)
            // win in a conflict with lower priority rules.
            forEachRight'
                  Identifier: 'rules'
                  ArrowFunction
                    Parameter
                      Identifier: ' rule'
                    EqualsGreaterThanToken
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
                lineAction'
                          EqualsToken
                          CallExpression
                            Identifier: ' applyRuleEdits'
                            Identifier: 'rule'
                            Identifier: ' previousItem'
                            Identifier: ' previousStartLine'
                            Identifier: ' currentItem'
                            Identifier: ' currentStartLine'
                      IfStatement
                        Identifier: 'dynamicIndentation'
                        Block
                          SwitchStatement
                            Identifier: 'lineAction'
                            CaseBlock
                              CaseClause
                                PropertyAccessExpression
                                  Identifier: ' LineAction'
                                  Identifier: 'LineRemoved'
                                IfStatement
                                  BinaryExpression
                                    CallExpression
                                      PropertyAccessExpression
                                        Identifier: 'currentParent'
                                        Identifier: 'getStart'
                                      Identifier: 'sourceFile'
                                    EqualsEqualsEqualsToken
                                    PropertyAccessExpression
                                      Identifier: ' currentItem'
                                      Identifier: 'pos'
                                  Block
                                    ExpressionStatement
                                      CallExpression
                                        PropertyAccessExpression
                                          Identifier: '
                                dynamicIndentation'
                                          Identifier: 'recomputeIndentation'
                                        FalseKeyword
                                        Identifier: ' contextNode'
                                BreakStatement
                              CaseClause
                                PropertyAccessExpression
                                  Identifier: ' LineAction'
                                  Identifier: 'LineAdded'
                                IfStatement
                                  BinaryExpression
                                    CallExpression
                                      PropertyAccessExpression
                                        Identifier: 'currentParent'
                                        Identifier: 'getStart'
                                      Identifier: 'sourceFile'
                                    EqualsEqualsEqualsToken
                                    PropertyAccessExpression
                                      Identifier: ' currentItem'
                                      Identifier: 'pos'
                                  Block
                                    ExpressionStatement
                                      CallExpression
                                        PropertyAccessExpression
                                          Identifier: '
                                dynamicIndentation'
                                          Identifier: 'recomputeIndentation'
                                        TrueKeyword
                                        Identifier: ' contextNode'
                                BreakStatement
                              DefaultClause
                                ExpressionStatement
                                  CallExpression
                                    PropertyAccessExpression
                                      Identifier: '
                            Debug'
                                      Identifier: 'assert'
                                    BinaryExpression
                                      Identifier: 'lineAction'
                                      EqualsEqualsEqualsToken
                                      PropertyAccessExpression
                                        Identifier: ' LineAction'
                                        Identifier: 'None'
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '

                // We need to trim trailing whitespace between the tokens if they were on different lines, and no rule was applied to put them on the same line
                trimTrailingWhitespaces'
                          EqualsToken
                          BinaryExpression
                            BinaryExpression
                              Identifier: ' trimTrailingWhitespaces'
                              AmpersandAmpersandToken
                              PrefixUnaryExpression
                                ParenthesizedExpression
                                  BinaryExpression
                                    PropertyAccessExpression
                                      Identifier: 'rule'
                                      Identifier: 'action'
                                    AmpersandToken
                                    PropertyAccessExpression
                                      Identifier: ' RuleAction'
                                      Identifier: 'DeleteSpace'
                            AmpersandAmpersandToken
                            BinaryExpression
                              PropertyAccessExpression
                                Identifier: ' rule'
                                Identifier: 'flags'
                              ExclamationEqualsEqualsToken
                              PropertyAccessExpression
                                Identifier: ' RuleFlags'
                                Identifier: 'CanDeleteNewLines'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            trimTrailingWhitespaces'
                  EqualsToken
                  BinaryExpression
                    Identifier: ' trimTrailingWhitespaces'
                    AmpersandAmpersandToken
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: ' currentItem'
                        Identifier: 'kind'
                      ExclamationEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'EndOfFileToken'
          IfStatement
            BinaryExpression
              BinaryExpression
                Identifier: 'currentStartLine'
                ExclamationEqualsEqualsToken
                Identifier: ' previousStartLine'
              AmpersandAmpersandToken
              Identifier: ' trimTrailingWhitespaces'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            // We need to trim trailing whitespace between the tokens if they were on different lines, and no rule was applied to put them on the same line
            trimTrailingWhitespacesForLines'
                  Identifier: 'previousStartLine'
                  Identifier: ' currentStartLine'
                  Identifier: ' previousItem'
          ReturnStatement
            Identifier: ' lineAction'
      FunctionDeclaration
        Identifier: ' insertIndentation'
        Parameter
          Identifier: 'pos'
          NumberKeyword
        Parameter
          Identifier: ' indentation'
          NumberKeyword
        Parameter
          Identifier: ' lineAdded'
          UnionType
            BooleanKeyword
            UndefinedKeyword
        VoidKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' indentationString'
                CallExpression
                  Identifier: ' getIndentationString'
                  Identifier: 'indentation'
                  Identifier: ' options'
          IfStatement
            Identifier: 'lineAdded'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            // new line is added before the token by the formatting rules
            // insert indentation string at the very beginning of the token
            recordReplace'
                  Identifier: 'pos'
                  NumericLiteral
                  Identifier: ' indentationString'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' tokenStart'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' sourceFile'
                        Identifier: 'getLineAndCharacterOfPosition'
                      Identifier: 'pos'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' startLinePosition'
                    CallExpression
                      Identifier: ' getStartPositionOfLine'
                      PropertyAccessExpression
                        Identifier: 'tokenStart'
                        Identifier: 'line'
                      Identifier: ' sourceFile'
              IfStatement
                BinaryExpression
                  BinaryExpression
                    Identifier: 'indentation'
                    ExclamationEqualsEqualsToken
                    CallExpression
                      Identifier: ' characterToColumn'
                      Identifier: 'startLinePosition'
                      PropertyAccessExpression
                        Identifier: ' tokenStart'
                        Identifier: 'character'
                  BarBarToken
                  CallExpression
                    Identifier: ' indentationIsDifferent'
                    Identifier: 'indentationString'
                    Identifier: ' startLinePosition'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                recordReplace'
                      Identifier: 'startLinePosition'
                      PropertyAccessExpression
                        Identifier: ' tokenStart'
                        Identifier: 'character'
                      Identifier: ' indentationString'
      FunctionDeclaration
        Identifier: ' characterToColumn'
        Parameter
          Identifier: 'startLinePosition'
          NumberKeyword
        Parameter
          Identifier: ' characterInLine'
          NumberKeyword
        NumberKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' column'
                NumericLiteral
          ForStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' i'
                NumericLiteral
            BinaryExpression
              Identifier: ' i'
              LessThanToken
              Identifier: ' characterInLine'
            PostfixUnaryExpression
              Identifier: ' i'
            Block
              IfStatement
                BinaryExpression
                  CallExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: 'sourceFile'
                        Identifier: 'text'
                      Identifier: 'charCodeAt'
                    BinaryExpression
                      Identifier: 'startLinePosition'
                      PlusToken
                      Identifier: ' i'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' CharacterCodes'
                    Identifier: 'tab'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
                column'
                      PlusEqualsToken
                      BinaryExpression
                        NonNullExpression
                          PropertyAccessExpression
                            Identifier: ' options'
                            Identifier: 'tabSize'
                        MinusToken
                        BinaryExpression
                          Identifier: ' column'
                          PercentToken
                          NonNullExpression
                            PropertyAccessExpression
                              Identifier: ' options'
                              Identifier: 'tabSize'
                Block
                  ExpressionStatement
                    PostfixUnaryExpression
                      Identifier: '
                column'
          ReturnStatement
            Identifier: ' column'
      FunctionDeclaration
        Identifier: ' indentationIsDifferent'
        Parameter
          Identifier: 'indentationString'
          StringKeyword
        Parameter
          Identifier: ' startLinePosition'
          NumberKeyword
        BooleanKeyword
        Block
          ReturnStatement
            BinaryExpression
              Identifier: ' indentationString'
              ExclamationEqualsEqualsToken
              CallExpression
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: ' sourceFile'
                    Identifier: 'text'
                  Identifier: 'substr'
                Identifier: 'startLinePosition'
                PropertyAccessExpression
                  Identifier: ' indentationString'
                  Identifier: 'length'
      FunctionDeclaration
        Identifier: ' indentMultilineComment'
        Parameter
          Identifier: 'commentRange'
          TypeReference
            Identifier: ' TextRange'
        Parameter
          Identifier: ' indentation'
          NumberKeyword
        Parameter
          Identifier: ' firstLineIsIndented'
          BooleanKeyword
        Parameter
          Identifier: ' indentFinalLine'
          TrueKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' startLine'
                PropertyAccessExpression
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' sourceFile'
                      Identifier: 'getLineAndCharacterOfPosition'
                    PropertyAccessExpression
                      Identifier: 'commentRange'
                      Identifier: 'pos'
                  Identifier: 'line'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' endLine'
                PropertyAccessExpression
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' sourceFile'
                      Identifier: 'getLineAndCharacterOfPosition'
                    PropertyAccessExpression
                      Identifier: 'commentRange'
                      Identifier: 'end'
                  Identifier: 'line'
          IfStatement
            BinaryExpression
              Identifier: 'startLine'
              EqualsEqualsEqualsToken
              Identifier: ' endLine'
            Block
              IfStatement
                PrefixUnaryExpression
                  Identifier: 'firstLineIsIndented'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                // treat as single line comment
                insertIndentation'
                      PropertyAccessExpression
                        Identifier: 'commentRange'
                        Identifier: 'pos'
                      Identifier: ' indentation'
                      FalseKeyword
              ReturnStatement
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' parts'
                ArrayType
                  TypeReference
                    Identifier: ' TextRange'
                ArrayLiteralExpression
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' startPos'
                PropertyAccessExpression
                  Identifier: ' commentRange'
                  Identifier: 'pos'
          ForStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' line'
                Identifier: ' startLine'
            BinaryExpression
              Identifier: ' line'
              LessThanToken
              Identifier: ' endLine'
            PostfixUnaryExpression
              Identifier: ' line'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' endOfLine'
                    CallExpression
                      Identifier: ' getEndLinePosition'
                      Identifier: 'line'
                      Identifier: ' sourceFile'
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            parts'
                    Identifier: 'push'
                  ObjectLiteralExpression
                    PropertyAssignment
                      Identifier: ' pos'
                      Identifier: ' startPos'
                    PropertyAssignment
                      Identifier: ' end'
                      Identifier: ' endOfLine'
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            startPos'
                  EqualsToken
                  CallExpression
                    Identifier: ' getStartPositionOfLine'
                    BinaryExpression
                      Identifier: 'line'
                      PlusToken
                      NumericLiteral
                    Identifier: ' sourceFile'
          IfStatement
            Identifier: 'indentFinalLine'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            parts'
                    Identifier: 'push'
                  ObjectLiteralExpression
                    PropertyAssignment
                      Identifier: ' pos'
                      Identifier: ' startPos'
                    PropertyAssignment
                      Identifier: ' end'
                      PropertyAccessExpression
                        Identifier: ' commentRange'
                        Identifier: 'end'
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'parts'
                Identifier: 'length'
              EqualsEqualsEqualsToken
              NumericLiteral
            ReturnStatement
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' startLinePos'
                CallExpression
                  Identifier: ' getStartPositionOfLine'
                  Identifier: 'startLine'
                  Identifier: ' sourceFile'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' nonWhitespaceColumnInFirstPart'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' SmartIndenter'
                    Identifier: 'findFirstNonWhitespaceCharacterAndColumn'
                  Identifier: 'startLinePos'
                  PropertyAccessExpression
                    ElementAccessExpression
                      Identifier: ' parts'
                      NumericLiteral
                    Identifier: 'pos'
                  Identifier: ' sourceFile'
                  Identifier: ' options'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' startIndex'
                NumericLiteral
          IfStatement
            Identifier: 'firstLineIsIndented'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            startIndex'
                  EqualsToken
                  NumericLiteral
              ExpressionStatement
                PostfixUnaryExpression
                  Identifier: '
            startLine'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' delta'
                BinaryExpression
                  Identifier: ' indentation'
                  MinusToken
                  PropertyAccessExpression
                    Identifier: ' nonWhitespaceColumnInFirstPart'
                    Identifier: 'column'
          ForStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' i'
                Identifier: ' startIndex'
            BinaryExpression
              Identifier: ' i'
              LessThanToken
              PropertyAccessExpression
                Identifier: ' parts'
                Identifier: 'length'
            BinaryExpression
              PostfixUnaryExpression
                Identifier: ' i'
              CommaToken
              PostfixUnaryExpression
                Identifier: ' startLine'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' startLinePos'
                    CallExpression
                      Identifier: ' getStartPositionOfLine'
                      Identifier: 'startLine'
                      Identifier: ' sourceFile'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' nonWhitespaceCharacterAndColumn'
                    ConditionalExpression
                      BinaryExpression
                        Identifier: ' i'
                        EqualsEqualsEqualsToken
                        NumericLiteral
                      QuestionToken
                      Identifier: ' nonWhitespaceColumnInFirstPart'
                      ColonToken
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' SmartIndenter'
                          Identifier: 'findFirstNonWhitespaceCharacterAndColumn'
                        PropertyAccessExpression
                          ElementAccessExpression
                            Identifier: 'parts'
                            Identifier: 'i'
                          Identifier: 'pos'
                        PropertyAccessExpression
                          ElementAccessExpression
                            Identifier: ' parts'
                            Identifier: 'i'
                          Identifier: 'end'
                        Identifier: ' sourceFile'
                        Identifier: ' options'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' newIndentation'
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: ' nonWhitespaceCharacterAndColumn'
                        Identifier: 'column'
                      PlusToken
                      Identifier: ' delta'
              IfStatement
                BinaryExpression
                  Identifier: 'newIndentation'
                  GreaterThanToken
                  NumericLiteral
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' indentationString'
                        CallExpression
                          Identifier: ' getIndentationString'
                          Identifier: 'newIndentation'
                          Identifier: ' options'
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                recordReplace'
                      Identifier: 'startLinePos'
                      PropertyAccessExpression
                        Identifier: ' nonWhitespaceCharacterAndColumn'
                        Identifier: 'character'
                      Identifier: ' indentationString'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                recordDelete'
                      Identifier: 'startLinePos'
                      PropertyAccessExpression
                        Identifier: ' nonWhitespaceCharacterAndColumn'
                        Identifier: 'character'
      FunctionDeclaration
        Identifier: ' trimTrailingWhitespacesForLines'
        Parameter
          Identifier: 'line1'
          NumberKeyword
        Parameter
          Identifier: ' line2'
          NumberKeyword
        Parameter
          Identifier: ' range'
          QuestionToken
          TypeReference
            Identifier: ' TextRangeWithKind'
        Block
          ForStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' line'
                Identifier: ' line1'
            BinaryExpression
              Identifier: ' line'
              LessThanToken
              Identifier: ' line2'
            PostfixUnaryExpression
              Identifier: ' line'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' lineStartPosition'
                    CallExpression
                      Identifier: ' getStartPositionOfLine'
                      Identifier: 'line'
                      Identifier: ' sourceFile'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' lineEndPosition'
                    CallExpression
                      Identifier: ' getEndLinePosition'
                      Identifier: 'line'
                      Identifier: ' sourceFile'
              IfStatement
                BinaryExpression
                  BinaryExpression
                    BinaryExpression
                      Identifier: 'range'
                      AmpersandAmpersandToken
                      ParenthesizedExpression
                        BinaryExpression
                          CallExpression
                            Identifier: 'isComment'
                            PropertyAccessExpression
                              Identifier: 'range'
                              Identifier: 'kind'
                          BarBarToken
                          CallExpression
                            Identifier: ' isStringOrRegularExpressionOrTemplateLiteral'
                            PropertyAccessExpression
                              Identifier: 'range'
                              Identifier: 'kind'
                    AmpersandAmpersandToken
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: ' range'
                        Identifier: 'pos'
                      LessThanEqualsToken
                      Identifier: ' lineEndPosition'
                  AmpersandAmpersandToken
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: ' range'
                      Identifier: 'end'
                    GreaterThanToken
                    Identifier: ' lineEndPosition'
                Block
                  ContinueStatement
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' whitespaceStart'
                    CallExpression
                      Identifier: ' getTrailingWhitespaceStartPosition'
                      Identifier: 'lineStartPosition'
                      Identifier: ' lineEndPosition'
              IfStatement
                BinaryExpression
                  Identifier: 'whitespaceStart'
                  ExclamationEqualsEqualsToken
                  PrefixUnaryExpression
                    NumericLiteral
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                Debug'
                        Identifier: 'assert'
                      BinaryExpression
                        BinaryExpression
                          Identifier: 'whitespaceStart'
                          EqualsEqualsEqualsToken
                          Identifier: ' lineStartPosition'
                        BarBarToken
                        PrefixUnaryExpression
                          CallExpression
                            Identifier: 'isWhiteSpaceSingleLine'
                            CallExpression
                              PropertyAccessExpression
                                PropertyAccessExpression
                                  Identifier: 'sourceFile'
                                  Identifier: 'text'
                                Identifier: 'charCodeAt'
                              BinaryExpression
                                Identifier: 'whitespaceStart'
                                MinusToken
                                NumericLiteral
                  ExpressionStatement
                    CallExpression
                      Identifier: '
                recordDelete'
                      Identifier: 'whitespaceStart'
                      BinaryExpression
                        BinaryExpression
                          Identifier: ' lineEndPosition'
                          PlusToken
                          NumericLiteral
                        MinusToken
                        Identifier: ' whitespaceStart'
      FunctionDeclaration
        Identifier: ' getTrailingWhitespaceStartPosition'
        Parameter
          Identifier: 'start'
          NumberKeyword
        Parameter
          Identifier: ' end'
          NumberKeyword
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' pos'
                Identifier: ' end'
          WhileStatement
            BinaryExpression
              BinaryExpression
                Identifier: 'pos'
                GreaterThanEqualsToken
                Identifier: ' start'
              AmpersandAmpersandToken
              CallExpression
                Identifier: ' isWhiteSpaceSingleLine'
                CallExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: 'sourceFile'
                      Identifier: 'text'
                    Identifier: 'charCodeAt'
                  Identifier: 'pos'
            Block
              ExpressionStatement
                PostfixUnaryExpression
                  Identifier: '
            pos'
          IfStatement
            BinaryExpression
              Identifier: 'pos'
              ExclamationEqualsEqualsToken
              Identifier: ' end'
            Block
              ReturnStatement
                BinaryExpression
                  Identifier: ' pos'
                  PlusToken
                  NumericLiteral
          ReturnStatement
            PrefixUnaryExpression
              NumericLiteral
      FunctionDeclaration
        Identifier: ' trimTrailingWhitespacesForRemainingRange'
        Parameter
          Identifier: 'trivias'
          ArrayType
            TypeReference
              Identifier: ' TextRangeWithKind'
              TypeReference
                Identifier: 'SyntaxKind'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' startPos'
                ConditionalExpression
                  Identifier: ' previousRange'
                  QuestionToken
                  PropertyAccessExpression
                    Identifier: ' previousRange'
                    Identifier: 'end'
                  ColonToken
                  PropertyAccessExpression
                    Identifier: ' originalRange'
                    Identifier: 'pos'
          ForOfStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' trivia'
            Identifier: ' trivias'
            Block
              IfStatement
                CallExpression
                  Identifier: 'isComment'
                  PropertyAccessExpression
                    Identifier: 'trivia'
                    Identifier: 'kind'
                Block
                  IfStatement
                    BinaryExpression
                      Identifier: 'startPos'
                      LessThanToken
                      PropertyAccessExpression
                        Identifier: ' trivia'
                        Identifier: 'pos'
                    Block
                      ExpressionStatement
                        CallExpression
                          Identifier: '
                    trimTrailingWitespacesForPositions'
                          Identifier: 'startPos'
                          BinaryExpression
                            PropertyAccessExpression
                              Identifier: ' trivia'
                              Identifier: 'pos'
                            MinusToken
                            NumericLiteral
                          Identifier: ' previousRange'
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '

                startPos'
                      EqualsToken
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: ' trivia'
                          Identifier: 'end'
                        PlusToken
                        NumericLiteral
          IfStatement
            BinaryExpression
              Identifier: 'startPos'
              LessThanToken
              PropertyAccessExpression
                Identifier: ' originalRange'
                Identifier: 'end'
            Block
              ExpressionStatement
                CallExpression
                  Identifier: '
            trimTrailingWitespacesForPositions'
                  Identifier: 'startPos'
                  PropertyAccessExpression
                    Identifier: ' originalRange'
                    Identifier: 'end'
                  Identifier: ' previousRange'
      FunctionDeclaration
        Identifier: ' trimTrailingWitespacesForPositions'
        Parameter
          Identifier: 'startPos'
          NumberKeyword
        Parameter
          Identifier: ' endPos'
          NumberKeyword
        Parameter
          Identifier: ' previousRange'
          TypeReference
            Identifier: ' TextRangeWithKind'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' startLine'
                PropertyAccessExpression
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' sourceFile'
                      Identifier: 'getLineAndCharacterOfPosition'
                    Identifier: 'startPos'
                  Identifier: 'line'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' endLine'
                PropertyAccessExpression
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' sourceFile'
                      Identifier: 'getLineAndCharacterOfPosition'
                    Identifier: 'endPos'
                  Identifier: 'line'
          ExpressionStatement
            CallExpression
              Identifier: '

        trimTrailingWhitespacesForLines'
              Identifier: 'startLine'
              BinaryExpression
                Identifier: ' endLine'
                PlusToken
                NumericLiteral
              Identifier: ' previousRange'
      FunctionDeclaration
        Identifier: ' recordDelete'
        Parameter
          Identifier: 'start'
          NumberKeyword
        Parameter
          Identifier: ' len'
          NumberKeyword
        Block
          IfStatement
            Identifier: 'len'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            edits'
                    Identifier: 'push'
                  CallExpression
                    Identifier: 'createTextChangeFromStartLength'
                    Identifier: 'start'
                    Identifier: ' len'
                    StringLiteral
      FunctionDeclaration
        Identifier: ' recordReplace'
        Parameter
          Identifier: 'start'
          NumberKeyword
        Parameter
          Identifier: ' len'
          NumberKeyword
        Parameter
          Identifier: ' newText'
          StringKeyword
        Block
          IfStatement
            BinaryExpression
              Identifier: 'len'
              BarBarToken
              Identifier: ' newText'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            edits'
                    Identifier: 'push'
                  CallExpression
                    Identifier: 'createTextChangeFromStartLength'
                    Identifier: 'start'
                    Identifier: ' len'
                    Identifier: ' newText'
      FunctionDeclaration
        Identifier: ' recordInsert'
        Parameter
          Identifier: 'start'
          NumberKeyword
        Parameter
          Identifier: ' text'
          StringKeyword
        Block
          IfStatement
            Identifier: 'text'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            edits'
                    Identifier: 'push'
                  CallExpression
                    Identifier: 'createTextChangeFromStartLength'
                    Identifier: 'start'
                    NumericLiteral
                    Identifier: ' text'
      FunctionDeclaration
        Identifier: ' applyRuleEdits'
        Parameter
          Identifier: 'rule'
          TypeReference
            Identifier: ' Rule'
        Parameter
          Identifier: ' previousRange'
          TypeReference
            Identifier: ' TextRangeWithKind'
        Parameter
          Identifier: ' previousStartLine'
          NumberKeyword
        Parameter
          Identifier: ' currentRange'
          TypeReference
            Identifier: ' TextRangeWithKind'
        Parameter
          Identifier: ' currentStartLine'
          NumberKeyword
        TypeReference
          Identifier: ' LineAction'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' onLaterLine'
                BinaryExpression
                  Identifier: ' currentStartLine'
                  ExclamationEqualsEqualsToken
                  Identifier: ' previousStartLine'
          SwitchStatement
            PropertyAccessExpression
              Identifier: 'rule'
              Identifier: 'action'
            CaseBlock
              CaseClause
                PropertyAccessExpression
                  Identifier: ' RuleAction'
                  Identifier: 'StopProcessingSpaceActions'
                ReturnStatement
                  PropertyAccessExpression
                    Identifier: ' LineAction'
                    Identifier: 'None'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' RuleAction'
                  Identifier: 'DeleteSpace'
                IfStatement
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: 'previousRange'
                      Identifier: 'end'
                    ExclamationEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' currentRange'
                      Identifier: 'pos'
                  Block
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                    // delete characters starting from t1.end up to t2.pos exclusive
                    recordDelete'
                        PropertyAccessExpression
                          Identifier: 'previousRange'
                          Identifier: 'end'
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: ' currentRange'
                            Identifier: 'pos'
                          MinusToken
                          PropertyAccessExpression
                            Identifier: ' previousRange'
                            Identifier: 'end'
                    ReturnStatement
                      ConditionalExpression
                        Identifier: ' onLaterLine'
                        QuestionToken
                        PropertyAccessExpression
                          Identifier: ' LineAction'
                          Identifier: 'LineRemoved'
                        ColonToken
                        PropertyAccessExpression
                          Identifier: ' LineAction'
                          Identifier: 'None'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' RuleAction'
                  Identifier: 'DeleteToken'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                recordDelete'
                    PropertyAccessExpression
                      Identifier: 'previousRange'
                      Identifier: 'pos'
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: ' previousRange'
                        Identifier: 'end'
                      MinusToken
                      PropertyAccessExpression
                        Identifier: ' previousRange'
                        Identifier: 'pos'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' RuleAction'
                  Identifier: 'InsertNewLine'
                IfStatement
                  BinaryExpression
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: 'rule'
                        Identifier: 'flags'
                      ExclamationEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' RuleFlags'
                        Identifier: 'CanDeleteNewLines'
                    AmpersandAmpersandToken
                    BinaryExpression
                      Identifier: ' previousStartLine'
                      ExclamationEqualsEqualsToken
                      Identifier: ' currentStartLine'
                  Block
                    ReturnStatement
                      PropertyAccessExpression
                        Identifier: ' LineAction'
                        Identifier: 'None'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' lineDelta'
                      BinaryExpression
                        Identifier: ' currentStartLine'
                        MinusToken
                        Identifier: ' previousStartLine'
                IfStatement
                  BinaryExpression
                    Identifier: 'lineDelta'
                    ExclamationEqualsEqualsToken
                    NumericLiteral
                  Block
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                    recordReplace'
                        PropertyAccessExpression
                          Identifier: 'previousRange'
                          Identifier: 'end'
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: ' currentRange'
                            Identifier: 'pos'
                          MinusToken
                          PropertyAccessExpression
                            Identifier: ' previousRange'
                            Identifier: 'end'
                        CallExpression
                          Identifier: ' getNewLineOrDefaultFromHost'
                          Identifier: 'host'
                          Identifier: ' options'
                    ReturnStatement
                      ConditionalExpression
                        Identifier: ' onLaterLine'
                        QuestionToken
                        PropertyAccessExpression
                          Identifier: ' LineAction'
                          Identifier: 'None'
                        ColonToken
                        PropertyAccessExpression
                          Identifier: ' LineAction'
                          Identifier: 'LineAdded'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' RuleAction'
                  Identifier: 'InsertSpace'
                IfStatement
                  BinaryExpression
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: 'rule'
                        Identifier: 'flags'
                      ExclamationEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' RuleFlags'
                        Identifier: 'CanDeleteNewLines'
                    AmpersandAmpersandToken
                    BinaryExpression
                      Identifier: ' previousStartLine'
                      ExclamationEqualsEqualsToken
                      Identifier: ' currentStartLine'
                  Block
                    ReturnStatement
                      PropertyAccessExpression
                        Identifier: ' LineAction'
                        Identifier: 'None'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' posDelta'
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: ' currentRange'
                          Identifier: 'pos'
                        MinusToken
                        PropertyAccessExpression
                          Identifier: ' previousRange'
                          Identifier: 'end'
                IfStatement
                  BinaryExpression
                    BinaryExpression
                      Identifier: 'posDelta'
                      ExclamationEqualsEqualsToken
                      NumericLiteral
                    BarBarToken
                    BinaryExpression
                      CallExpression
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: ' sourceFile'
                            Identifier: 'text'
                          Identifier: 'charCodeAt'
                        PropertyAccessExpression
                          Identifier: 'previousRange'
                          Identifier: 'end'
                      ExclamationEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' CharacterCodes'
                        Identifier: 'space'
                  Block
                    ExpressionStatement
                      CallExpression
                        Identifier: '
                    recordReplace'
                        PropertyAccessExpression
                          Identifier: 'previousRange'
                          Identifier: 'end'
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier: ' currentRange'
                            Identifier: 'pos'
                          MinusToken
                          PropertyAccessExpression
                            Identifier: ' previousRange'
                            Identifier: 'end'
                        StringLiteral
                    ReturnStatement
                      ConditionalExpression
                        Identifier: ' onLaterLine'
                        QuestionToken
                        PropertyAccessExpression
                          Identifier: ' LineAction'
                          Identifier: 'LineRemoved'
                        ColonToken
                        PropertyAccessExpression
                          Identifier: ' LineAction'
                          Identifier: 'None'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' RuleAction'
                  Identifier: 'InsertTrailingSemicolon'
                ExpressionStatement
                  CallExpression
                    Identifier: '
                recordInsert'
                    PropertyAccessExpression
                      Identifier: 'previousRange'
                      Identifier: 'end'
                    StringLiteral
          ReturnStatement
            PropertyAccessExpression
              Identifier: ' LineAction'
              Identifier: 'None'
  EnumDeclaration
    ConstKeyword
    Identifier: ' LineAction'
    EnumMember
      Identifier: '
    None'
    EnumMember
      Identifier: '
    LineAdded'
    EnumMember
      Identifier: '
    LineRemoved'
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getRangeOfEnclosingComment'
    Parameter
      Identifier: '
    sourceFile'
      TypeReference
        Identifier: ' SourceFile'
    Parameter
      Identifier: '
    position'
      NumberKeyword
    Parameter
      Identifier: '
    precedingToken'
      QuestionToken
      UnionType
        TypeReference
          Identifier: ' Node'
        LiteralType
          NullKeyword
    Parameter
      Identifier: ' // eslint-disable-line no-restricted-syntax
    tokenAtPosition'
      TypeReference
        Identifier: ' Node'
      CallExpression
        Identifier: ' getTokenAtPosition'
        Identifier: 'sourceFile'
        Identifier: ' position'
    UnionType
      TypeReference
        Identifier: ' CommentRange'
      UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' jsdoc'
            CallExpression
              Identifier: ' findAncestor'
              Identifier: 'tokenAtPosition'
              Identifier: ' isJSDoc'
      IfStatement
        Identifier: 'jsdoc'
        ExpressionStatement
          BinaryExpression
            Identifier: ' tokenAtPosition'
            EqualsToken
            PropertyAccessExpression
              Identifier: ' jsdoc'
              Identifier: 'parent'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' tokenStart'
            CallExpression
              PropertyAccessExpression
                Identifier: ' tokenAtPosition'
                Identifier: 'getStart'
              Identifier: 'sourceFile'
      IfStatement
        BinaryExpression
          BinaryExpression
            Identifier: 'tokenStart'
            LessThanEqualsToken
            Identifier: ' position'
          AmpersandAmpersandToken
          BinaryExpression
            Identifier: ' position'
            LessThanToken
            CallExpression
              PropertyAccessExpression
                Identifier: ' tokenAtPosition'
                Identifier: 'getEnd'
        Block
          ReturnStatement
            Identifier: ' undefined'
      ExpressionStatement
        BinaryExpression
          Identifier: '

    // eslint-disable-next-line no-restricted-syntax
    precedingToken'
          EqualsToken
          ConditionalExpression
            BinaryExpression
              Identifier: ' precedingToken'
              EqualsEqualsEqualsToken
              NullKeyword
            QuestionToken
            Identifier: ' undefined'
            ColonToken
            ConditionalExpression
              BinaryExpression
                Identifier: ' precedingToken'
                EqualsEqualsEqualsToken
                Identifier: ' undefined'
              QuestionToken
              CallExpression
                Identifier: ' findPrecedingToken'
                Identifier: 'position'
                Identifier: ' sourceFile'
              ColonToken
              Identifier: ' precedingToken'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' trailingRangesOfPreviousToken'
            BinaryExpression
              Identifier: ' precedingToken'
              AmpersandAmpersandToken
              CallExpression
                Identifier: ' getTrailingCommentRanges'
                PropertyAccessExpression
                  Identifier: 'sourceFile'
                  Identifier: 'text'
                PropertyAccessExpression
                  Identifier: ' precedingToken'
                  Identifier: 'end'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' leadingCommentRangesOfNextToken'
            CallExpression
              Identifier: ' getLeadingCommentRangesOfNode'
              Identifier: 'tokenAtPosition'
              Identifier: ' sourceFile'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' commentRanges'
            CallExpression
              Identifier: ' concatenate'
              Identifier: 'trailingRangesOfPreviousToken'
              Identifier: ' leadingCommentRangesOfNextToken'
      ReturnStatement
        BinaryExpression
          Identifier: ' commentRanges'
          AmpersandAmpersandToken
          CallExpression
            Identifier: ' find'
            Identifier: 'commentRanges'
            ArrowFunction
              Parameter
                Identifier: ' range'
              EqualsGreaterThanToken
              BinaryExpression
                CallExpression
                  Identifier: '
        rangeContainsPositionExclusive'
                  Identifier: 'range'
                  Identifier: ' position'
                BarBarToken
                BinaryExpression
                  BinaryExpression
                    Identifier: '
        // The end marker of a single-line comment does not include the newline character.
        // With caret at `^`, in the following case, we are inside a comment (^ denotes the cursor position):
        //
        //    // asdf   ^\n
        //
        // But for closed multi-line comments, we don't want to be inside the comment in the following case:
        //
        //    /* asdf */^
        //
        // However, unterminated multi-line comments *do* contain their end.
        //
        // Internally, we represent the end of the comment at the newline and closing '/', respectively.
        //
        position'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' range'
                      Identifier: 'end'
                  AmpersandAmpersandToken
                  ParenthesizedExpression
                    BinaryExpression
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: 'range'
                          Identifier: 'kind'
                        EqualsEqualsEqualsToken
                        PropertyAccessExpression
                          Identifier: ' SyntaxKind'
                          Identifier: 'SingleLineCommentTrivia'
                      BarBarToken
                      BinaryExpression
                        Identifier: ' position'
                        EqualsEqualsEqualsToken
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' sourceFile'
                            Identifier: 'getFullWidth'
  FunctionDeclaration
    Identifier: ' getOpenTokenForList'
    Parameter
      Identifier: 'node'
      TypeReference
        Identifier: ' Node'
    Parameter
      Identifier: ' list'
      TypeOperator
        ArrayType
          TypeReference
            Identifier: ' Node'
    Block
      SwitchStatement
        PropertyAccessExpression
          Identifier: 'node'
          Identifier: 'kind'
        CaseBlock
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'Constructor'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'FunctionDeclaration'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'FunctionExpression'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'MethodDeclaration'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'MethodSignature'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ArrowFunction'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'CallSignature'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ConstructSignature'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'FunctionType'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ConstructorType'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'GetAccessor'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'SetAccessor'
            IfStatement
              BinaryExpression
                PropertyAccessExpression
                  ParenthesizedExpression
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' FunctionDeclaration'
                  Identifier: 'typeParameters'
                EqualsEqualsEqualsToken
                Identifier: ' list'
              Block
                ReturnStatement
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'LessThanToken'
              IfStatement
                BinaryExpression
                  PropertyAccessExpression
                    ParenthesizedExpression
                      AsExpression
                        Identifier: 'node'
                        TypeReference
                          Identifier: ' FunctionDeclaration'
                    Identifier: 'parameters'
                  EqualsEqualsEqualsToken
                  Identifier: ' list'
                Block
                  ReturnStatement
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'OpenParenToken'
            BreakStatement
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'CallExpression'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'NewExpression'
            IfStatement
              BinaryExpression
                PropertyAccessExpression
                  ParenthesizedExpression
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' CallExpression'
                  Identifier: 'typeArguments'
                EqualsEqualsEqualsToken
                Identifier: ' list'
              Block
                ReturnStatement
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'LessThanToken'
              IfStatement
                BinaryExpression
                  PropertyAccessExpression
                    ParenthesizedExpression
                      AsExpression
                        Identifier: 'node'
                        TypeReference
                          Identifier: ' CallExpression'
                    Identifier: 'arguments'
                  EqualsEqualsEqualsToken
                  Identifier: ' list'
                Block
                  ReturnStatement
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'OpenParenToken'
            BreakStatement
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ClassDeclaration'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ClassExpression'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'InterfaceDeclaration'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'TypeAliasDeclaration'
            IfStatement
              BinaryExpression
                PropertyAccessExpression
                  ParenthesizedExpression
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' ClassDeclaration'
                  Identifier: 'typeParameters'
                EqualsEqualsEqualsToken
                Identifier: ' list'
              Block
                ReturnStatement
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'LessThanToken'
            BreakStatement
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'TypeReference'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'TaggedTemplateExpression'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'TypeQuery'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ExpressionWithTypeArguments'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ImportType'
            IfStatement
              BinaryExpression
                PropertyAccessExpression
                  ParenthesizedExpression
                    AsExpression
                      Identifier: 'node'
                      TypeReference
                        Identifier: ' TypeReferenceNode'
                  Identifier: 'typeArguments'
                EqualsEqualsEqualsToken
                Identifier: ' list'
              Block
                ReturnStatement
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'LessThanToken'
            BreakStatement
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'TypeLiteral'
            ReturnStatement
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'OpenBraceToken'
      ReturnStatement
        PropertyAccessExpression
          Identifier: ' SyntaxKind'
          Identifier: 'Unknown'
  FunctionDeclaration
    Identifier: ' getCloseTokenForOpenToken'
    Parameter
      Identifier: 'kind'
      TypeReference
        Identifier: ' SyntaxKind'
    Block
      SwitchStatement
        Identifier: 'kind'
        CaseBlock
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'OpenParenToken'
            ReturnStatement
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'CloseParenToken'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'LessThanToken'
            ReturnStatement
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'GreaterThanToken'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'OpenBraceToken'
            ReturnStatement
              PropertyAccessExpression
                Identifier: ' SyntaxKind'
                Identifier: 'CloseBraceToken'
      ReturnStatement
        PropertyAccessExpression
          Identifier: ' SyntaxKind'
          Identifier: 'Unknown'
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' internedSizes'
        TypeLiteral
          PropertySignature
            Identifier: ' tabSize'
            NumberKeyword
          PropertySignature
            Identifier: ' indentSize'
            NumberKeyword
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' internedTabsIndentation'
        UnionType
          ArrayType
            StringKeyword
          UndefinedKeyword
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' internedSpacesIndentation'
        UnionType
          ArrayType
            StringKeyword
          UndefinedKeyword
  FunctionDeclaration
    ExportKeyword
    Identifier: ' getIndentationString'
    Parameter
      Identifier: 'indentation'
      NumberKeyword
    Parameter
      Identifier: ' options'
      TypeReference
        Identifier: ' EditorSettings'
    StringKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' resetInternedStrings'
            BinaryExpression
              PrefixUnaryExpression
                Identifier: 'internedSizes'
              BarBarToken
              ParenthesizedExpression
                BinaryExpression
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: 'internedSizes'
                      Identifier: 'tabSize'
                    ExclamationEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' options'
                      Identifier: 'tabSize'
                  BarBarToken
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: ' internedSizes'
                      Identifier: 'indentSize'
                    ExclamationEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' options'
                      Identifier: 'indentSize'
      IfStatement
        Identifier: 'resetInternedStrings'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        internedSizes'
              EqualsToken
              ObjectLiteralExpression
                PropertyAssignment
                  Identifier: ' tabSize'
                  NonNullExpression
                    PropertyAccessExpression
                      Identifier: ' options'
                      Identifier: 'tabSize'
                PropertyAssignment
                  Identifier: ' indentSize'
                  NonNullExpression
                    PropertyAccessExpression
                      Identifier: ' options'
                      Identifier: 'indentSize'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        internedTabsIndentation'
              EqualsToken
              BinaryExpression
                Identifier: ' internedSpacesIndentation'
                EqualsToken
                Identifier: ' undefined'
      IfStatement
        PrefixUnaryExpression
          PropertyAccessExpression
            Identifier: 'options'
            Identifier: 'convertTabsToSpaces'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' tabs'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' Math'
                    Identifier: 'floor'
                  BinaryExpression
                    Identifier: 'indentation'
                    SlashToken
                    NonNullExpression
                      PropertyAccessExpression
                        Identifier: ' options'
                        Identifier: 'tabSize'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' spaces'
                BinaryExpression
                  Identifier: ' indentation'
                  MinusToken
                  BinaryExpression
                    Identifier: ' tabs'
                    AsteriskToken
                    NonNullExpression
                      PropertyAccessExpression
                        Identifier: ' options'
                        Identifier: 'tabSize'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' tabString'
                StringKeyword
          IfStatement
            PrefixUnaryExpression
              Identifier: 'internedTabsIndentation'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            internedTabsIndentation'
                  EqualsToken
                  ArrayLiteralExpression
          IfStatement
            BinaryExpression
              ElementAccessExpression
                Identifier: 'internedTabsIndentation'
                Identifier: 'tabs'
              EqualsEqualsEqualsToken
              Identifier: ' undefined'
            Block
              ExpressionStatement
                BinaryExpression
                  ElementAccessExpression
                    Identifier: '
            internedTabsIndentation'
                    Identifier: 'tabs'
                  EqualsToken
                  BinaryExpression
                    Identifier: ' tabString'
                    EqualsToken
                    CallExpression
                      Identifier: ' repeatString'
                      StringLiteral
                      Identifier: ' tabs'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            tabString'
                  EqualsToken
                  ElementAccessExpression
                    Identifier: ' internedTabsIndentation'
                    Identifier: 'tabs'
          ReturnStatement
            ConditionalExpression
              Identifier: ' spaces'
              QuestionToken
              BinaryExpression
                Identifier: ' tabString'
                PlusToken
                CallExpression
                  Identifier: ' repeatString'
                  StringLiteral
                  Identifier: ' spaces'
              ColonToken
              Identifier: ' tabString'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' spacesString'
                StringKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' quotient'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' Math'
                    Identifier: 'floor'
                  BinaryExpression
                    Identifier: 'indentation'
                    SlashToken
                    NonNullExpression
                      PropertyAccessExpression
                        Identifier: ' options'
                        Identifier: 'indentSize'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' remainder'
                BinaryExpression
                  Identifier: ' indentation'
                  PercentToken
                  NonNullExpression
                    PropertyAccessExpression
                      Identifier: ' options'
                      Identifier: 'indentSize'
          IfStatement
            PrefixUnaryExpression
              Identifier: 'internedSpacesIndentation'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            internedSpacesIndentation'
                  EqualsToken
                  ArrayLiteralExpression
          IfStatement
            BinaryExpression
              ElementAccessExpression
                Identifier: 'internedSpacesIndentation'
                Identifier: 'quotient'
              EqualsEqualsEqualsToken
              Identifier: ' undefined'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            spacesString'
                  EqualsToken
                  CallExpression
                    Identifier: ' repeatString'
                    StringLiteral
                    BinaryExpression
                      NonNullExpression
                        PropertyAccessExpression
                          Identifier: ' options'
                          Identifier: 'indentSize'
                      AsteriskToken
                      Identifier: ' quotient'
              ExpressionStatement
                BinaryExpression
                  ElementAccessExpression
                    Identifier: '
            internedSpacesIndentation'
                    Identifier: 'quotient'
                  EqualsToken
                  Identifier: ' spacesString'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            spacesString'
                  EqualsToken
                  ElementAccessExpression
                    Identifier: ' internedSpacesIndentation'
                    Identifier: 'quotient'
          ReturnStatement
            ConditionalExpression
              Identifier: ' remainder'
              QuestionToken
              BinaryExpression
                Identifier: ' spacesString'
                PlusToken
                CallExpression
                  Identifier: ' repeatString'
                  StringLiteral
                  Identifier: ' remainder'
              ColonToken
              Identifier: ' spacesString'
