SourceFile
  ModuleDeclaration
    DeclareKeyword
    StringLiteral
    ModuleBlock
      FunctionDeclaration
        Identifier: ' assert'
        Parameter
          Identifier: 'value'
          UnknownKeyword
        Parameter
          Identifier: ' message'
          QuestionToken
          UnionType
            StringKeyword
            TypeReference
              Identifier: ' Error'
        TypePredicate
          AssertsKeyword
          Identifier: ' value'
      ModuleDeclaration
        Identifier: ' assert'
        ModuleBlock
          ClassDeclaration
            Identifier: ' AssertionError'
            HeritageClause
              ExpressionWithTypeArguments
                Identifier: ' Error'
            PropertyDeclaration
              Identifier: '
            /**
             * Set to the `actual` argument for methods such as {@link assert.strictEqual()}.
             */
            actual'
              UnknownKeyword
            PropertyDeclaration
              Identifier: '
            /**
             * Set to the `expected` argument for methods such as {@link assert.strictEqual()}.
             */
            expected'
              UnknownKeyword
            PropertyDeclaration
              Identifier: '
            /**
             * Set to the passed in operator value.
             */
            operator'
              StringKeyword
            PropertyDeclaration
              Identifier: '
            /**
             * Indicates if the message was auto-generated (`true`) or not.
             */
            generatedMessage'
              BooleanKeyword
            PropertyDeclaration
              Identifier: '
            /**
             * Value is always `ERR_ASSERTION` to show that the error is an assertion error.
             */
            code'
              LiteralType
                StringLiteral
            Constructor
              Parameter
                Identifier: 'options'
                QuestionToken
                TypeLiteral
                  PropertySignature
                    Identifier: '
                /** If provided, the error message is set to this value. */
                message'
                    QuestionToken
                    UnionType
                      StringKeyword
                      UndefinedKeyword
                  PropertySignature
                    Identifier: '
                /** The `actual` property on the error instance. */
                actual'
                    QuestionToken
                    UnionType
                      UnknownKeyword
                      UndefinedKeyword
                  PropertySignature
                    Identifier: '
                /** The `expected` property on the error instance. */
                expected'
                    QuestionToken
                    UnionType
                      UnknownKeyword
                      UndefinedKeyword
                  PropertySignature
                    Identifier: '
                /** The `operator` property on the error instance. */
                operator'
                    QuestionToken
                    UnionType
                      StringKeyword
                      UndefinedKeyword
                  PropertySignature
                    Identifier: '
                /** If provided, the generated stack trace omits frames before this function. */
                // eslint-disable-next-line @typescript-eslint/ban-types
                stackStartFn'
                    QuestionToken
                    UnionType
                      TypeReference
                        Identifier: ' Function'
                      UndefinedKeyword
          ClassDeclaration
            Identifier: ' CallTracker'
            MethodDeclaration
              Identifier: '
            /**
             * The wrapper function is expected to be called exactly `exact` times. If the
             * function has not been called exactly `exact` times when `tracker.verify()` is called, then `tracker.verify()` will throw an
             * error.
             *
             * ```js
             * import assert from 'node:assert';
             *
             * // Creates call tracker.
             * const tracker = new assert.CallTracker();
             *
             * function func() {}
             *
             * // Returns a function that wraps func() that must be called exact times
             * // before tracker.verify().
             * const callsfunc = tracker.calls(func);
             * ```
             * @since v14.2.0, v12.19.0
             * @param [fn='A no-op function']
             * @param [exact=1]
             * @return A function that wraps `fn`.
             */
            calls'
              Parameter
                Identifier: 'exact'
                QuestionToken
                NumberKeyword
              FunctionType
                VoidKeyword
            MethodDeclaration
              Identifier: '
            calls'
              TypeParameter
                Identifier: 'Func'
                FunctionType
                  Parameter
                    DotDotDotToken
                    Identifier: 'args'
                    ArrayType
                      AnyKeyword
                  AnyKeyword
              Parameter
                Identifier: 'fn'
                QuestionToken
                TypeReference
                  Identifier: ' Func'
              Parameter
                Identifier: ' exact'
                QuestionToken
                NumberKeyword
              TypeReference
                Identifier: ' Func'
            MethodDeclaration
              Identifier: '
            /**
             * Example:
             *
             * ```js
             * import assert from 'node:assert';
             *
             * const tracker = new assert.CallTracker();
             *
             * function func() {}
             * const callsfunc = tracker.calls(func);
             * callsfunc(1, 2, 3);
             *
             * assert.deepStrictEqual(tracker.getCalls(callsfunc),
             *                        [{ thisArg: undefined, arguments: [1, 2, 3] }]);
             * ```
             * @since v18.8.0, v16.18.0
             * @return An array with all the calls to a tracked function.
             */
            getCalls'
              Parameter
                Identifier: 'fn'
                TypeReference
                  Identifier: ' Function'
              ArrayType
                TypeReference
                  Identifier: ' CallTrackerCall'
            MethodDeclaration
              Identifier: '
            /**
             * The arrays contains information about the expected and actual number of calls of
             * the functions that have not been called the expected number of times.
             *
             * ```js
             * import assert from 'node:assert';
             *
             * // Creates call tracker.
             * const tracker = new assert.CallTracker();
             *
             * function func() {}
             *
             * // Returns a function that wraps func() that must be called exact times
             * // before tracker.verify().
             * const callsfunc = tracker.calls(func, 2);
             *
             * // Returns an array containing information on callsfunc()
             * console.log(tracker.report());
             * // [
             * //  {
             * //    message: 'Expected the func function to be executed 2 time(s) but was
             * //    executed 0 time(s).',
             * //    actual: 0,
             * //    expected: 2,
             * //    operator: 'func',
             * //    stack: stack trace
             * //  }
             * // ]
             * ```
             * @since v14.2.0, v12.19.0
             * @return An array of objects containing information about the wrapper functions returned by {@link tracker.calls()}.
             */
            report'
              ArrayType
                TypeReference
                  Identifier: ' CallTrackerReportInformation'
            MethodDeclaration
              Identifier: '
            /**
             * Reset calls of the call tracker. If a tracked function is passed as an argument, the calls will be reset for it.
             * If no arguments are passed, all tracked functions will be reset.
             *
             * ```js
             * import assert from 'node:assert';
             *
             * const tracker = new assert.CallTracker();
             *
             * function func() {}
             * const callsfunc = tracker.calls(func);
             *
             * callsfunc();
             * // Tracker was called once
             * assert.strictEqual(tracker.getCalls(callsfunc).length, 1);
             *
             * tracker.reset(callsfunc);
             * assert.strictEqual(tracker.getCalls(callsfunc).length, 0);
             * ```
             * @since v18.8.0, v16.18.0
             * @param fn a tracked function to reset.
             */
            reset'
              Parameter
                Identifier: 'fn'
                QuestionToken
                TypeReference
                  Identifier: ' Function'
              VoidKeyword
            MethodDeclaration
              Identifier: '
            /**
             * Iterates through the list of functions passed to {@link tracker.calls()} and will throw an error for functions that
             * have not been called the expected number of times.
             *
             * ```js
             * import assert from 'node:assert';
             *
             * // Creates call tracker.
             * const tracker = new assert.CallTracker();
             *
             * function func() {}
             *
             * // Returns a function that wraps func() that must be called exact times
             * // before tracker.verify().
             * const callsfunc = tracker.calls(func, 2);
             *
             * callsfunc();
             *
             * // Will throw an error since callsfunc() was only called once.
             * tracker.verify();
             * ```
             * @since v14.2.0, v12.19.0
             */
            verify'
              VoidKeyword
          InterfaceDeclaration
            Identifier: ' CallTrackerCall'
            PropertySignature
              Identifier: '
            thisArg'
              ObjectKeyword
            PropertySignature
              Identifier: '
            arguments'
              ArrayType
                UnknownKeyword
          InterfaceDeclaration
            Identifier: ' CallTrackerReportInformation'
            PropertySignature
              Identifier: '
            message'
              StringKeyword
            PropertySignature
              Identifier: '
            /** The actual number of times the function was called. */
            actual'
              NumberKeyword
            PropertySignature
              Identifier: '
            /** The number of times the function was expected to be called. */
            expected'
              NumberKeyword
            PropertySignature
              Identifier: '
            /** The name of the function that is wrapped. */
            operator'
              StringKeyword
            PropertySignature
              Identifier: '
            /** A stack trace of the function. */
            stack'
              ObjectKeyword
          TypeAliasDeclaration
            Identifier: ' AssertPredicate'
            UnionType
              TypeReference
                Identifier: ' RegExp'
              ParenthesizedType
                ConstructorType
                  ObjectKeyword
              ParenthesizedType
                FunctionType
                  Parameter
                    Identifier: 'thrown'
                    UnknownKeyword
                  BooleanKeyword
              ObjectKeyword
              TypeReference
                Identifier: ' Error'
          FunctionDeclaration
            Identifier: ' fail'
            Parameter
              Identifier: 'message'
              QuestionToken
              UnionType
                StringKeyword
                TypeReference
                  Identifier: ' Error'
            NeverKeyword
          FunctionDeclaration
            Identifier: ' fail'
            Parameter
              Identifier: '
            actual'
              UnknownKeyword
            Parameter
              Identifier: '
            expected'
              UnknownKeyword
            Parameter
              Identifier: '
            message'
              QuestionToken
              UnionType
                StringKeyword
                TypeReference
                  Identifier: ' Error'
            Parameter
              Identifier: '
            operator'
              QuestionToken
              StringKeyword
            Parameter
              Identifier: '
            // eslint-disable-next-line @typescript-eslint/ban-types
            stackStartFn'
              QuestionToken
              TypeReference
                Identifier: ' Function'
            NeverKeyword
          FunctionDeclaration
            Identifier: ' ok'
            Parameter
              Identifier: 'value'
              UnknownKeyword
            Parameter
              Identifier: ' message'
              QuestionToken
              UnionType
                StringKeyword
                TypeReference
                  Identifier: ' Error'
            TypePredicate
              AssertsKeyword
              Identifier: ' value'
          FunctionDeclaration
            Identifier: ' equal'
            Parameter
              Identifier: 'actual'
              UnknownKeyword
            Parameter
              Identifier: ' expected'
              UnknownKeyword
            Parameter
              Identifier: ' message'
              QuestionToken
              UnionType
                StringKeyword
                TypeReference
                  Identifier: ' Error'
            VoidKeyword
          FunctionDeclaration
            Identifier: ' notEqual'
            Parameter
              Identifier: 'actual'
              UnknownKeyword
            Parameter
              Identifier: ' expected'
              UnknownKeyword
            Parameter
              Identifier: ' message'
              QuestionToken
              UnionType
                StringKeyword
                TypeReference
                  Identifier: ' Error'
            VoidKeyword
          FunctionDeclaration
            Identifier: ' deepEqual'
            Parameter
              Identifier: 'actual'
              UnknownKeyword
            Parameter
              Identifier: ' expected'
              UnknownKeyword
            Parameter
              Identifier: ' message'
              QuestionToken
              UnionType
                StringKeyword
                TypeReference
                  Identifier: ' Error'
            VoidKeyword
          FunctionDeclaration
            Identifier: ' notDeepEqual'
            Parameter
              Identifier: 'actual'
              UnknownKeyword
            Parameter
              Identifier: ' expected'
              UnknownKeyword
            Parameter
              Identifier: ' message'
              QuestionToken
              UnionType
                StringKeyword
                TypeReference
                  Identifier: ' Error'
            VoidKeyword
          FunctionDeclaration
            Identifier: ' strictEqual'
            TypeParameter
              Identifier: 'T'
            Parameter
              Identifier: 'actual'
              UnknownKeyword
            Parameter
              Identifier: ' expected'
              TypeReference
                Identifier: ' T'
            Parameter
              Identifier: ' message'
              QuestionToken
              UnionType
                StringKeyword
                TypeReference
                  Identifier: ' Error'
            TypePredicate
              AssertsKeyword
              Identifier: ' actual'
              TypeReference
                Identifier: ' T'
          FunctionDeclaration
            Identifier: ' notStrictEqual'
            Parameter
              Identifier: 'actual'
              UnknownKeyword
            Parameter
              Identifier: ' expected'
              UnknownKeyword
            Parameter
              Identifier: ' message'
              QuestionToken
              UnionType
                StringKeyword
                TypeReference
                  Identifier: ' Error'
            VoidKeyword
          FunctionDeclaration
            Identifier: ' deepStrictEqual'
            TypeParameter
              Identifier: 'T'
            Parameter
              Identifier: 'actual'
              UnknownKeyword
            Parameter
              Identifier: ' expected'
              TypeReference
                Identifier: ' T'
            Parameter
              Identifier: ' message'
              QuestionToken
              UnionType
                StringKeyword
                TypeReference
                  Identifier: ' Error'
            TypePredicate
              AssertsKeyword
              Identifier: ' actual'
              TypeReference
                Identifier: ' T'
          FunctionDeclaration
            Identifier: ' notDeepStrictEqual'
            Parameter
              Identifier: 'actual'
              UnknownKeyword
            Parameter
              Identifier: ' expected'
              UnknownKeyword
            Parameter
              Identifier: ' message'
              QuestionToken
              UnionType
                StringKeyword
                TypeReference
                  Identifier: ' Error'
            VoidKeyword
          FunctionDeclaration
            Identifier: ' throws'
            Parameter
              Identifier: 'block'
              FunctionType
                UnknownKeyword
            Parameter
              Identifier: ' message'
              QuestionToken
              UnionType
                StringKeyword
                TypeReference
                  Identifier: ' Error'
            VoidKeyword
          FunctionDeclaration
            Identifier: ' throws'
            Parameter
              Identifier: 'block'
              FunctionType
                UnknownKeyword
            Parameter
              Identifier: ' error'
              TypeReference
                Identifier: ' AssertPredicate'
            Parameter
              Identifier: ' message'
              QuestionToken
              UnionType
                StringKeyword
                TypeReference
                  Identifier: ' Error'
            VoidKeyword
          FunctionDeclaration
            Identifier: ' doesNotThrow'
            Parameter
              Identifier: 'block'
              FunctionType
                UnknownKeyword
            Parameter
              Identifier: ' message'
              QuestionToken
              UnionType
                StringKeyword
                TypeReference
                  Identifier: ' Error'
            VoidKeyword
          FunctionDeclaration
            Identifier: ' doesNotThrow'
            Parameter
              Identifier: 'block'
              FunctionType
                UnknownKeyword
            Parameter
              Identifier: ' error'
              TypeReference
                Identifier: ' AssertPredicate'
            Parameter
              Identifier: ' message'
              QuestionToken
              UnionType
                StringKeyword
                TypeReference
                  Identifier: ' Error'
            VoidKeyword
          FunctionDeclaration
            Identifier: ' ifError'
            Parameter
              Identifier: 'value'
              UnknownKeyword
            TypePredicate
              AssertsKeyword
              Identifier: ' value'
              UnionType
                LiteralType
                  NullKeyword
                UndefinedKeyword
          FunctionDeclaration
            Identifier: ' rejects'
            Parameter
              Identifier: 'block'
              UnionType
                ParenthesizedType
                  FunctionType
                    TypeReference
                      Identifier: ' Promise'
                      UnknownKeyword
                TypeReference
                  Identifier: ' Promise'
                  UnknownKeyword
            Parameter
              Identifier: ' message'
              QuestionToken
              UnionType
                StringKeyword
                TypeReference
                  Identifier: ' Error'
            TypeReference
              Identifier: ' Promise'
              VoidKeyword
          FunctionDeclaration
            Identifier: ' rejects'
            Parameter
              Identifier: '
            block'
              UnionType
                ParenthesizedType
                  FunctionType
                    TypeReference
                      Identifier: ' Promise'
                      UnknownKeyword
                TypeReference
                  Identifier: ' Promise'
                  UnknownKeyword
            Parameter
              Identifier: '
            error'
              TypeReference
                Identifier: ' AssertPredicate'
            Parameter
              Identifier: '
            message'
              QuestionToken
              UnionType
                StringKeyword
                TypeReference
                  Identifier: ' Error'
            TypeReference
              Identifier: ' Promise'
              VoidKeyword
          FunctionDeclaration
            Identifier: ' doesNotReject'
            Parameter
              Identifier: '
            block'
              UnionType
                ParenthesizedType
                  FunctionType
                    TypeReference
                      Identifier: ' Promise'
                      UnknownKeyword
                TypeReference
                  Identifier: ' Promise'
                  UnknownKeyword
            Parameter
              Identifier: '
            message'
              QuestionToken
              UnionType
                StringKeyword
                TypeReference
                  Identifier: ' Error'
            TypeReference
              Identifier: ' Promise'
              VoidKeyword
          FunctionDeclaration
            Identifier: ' doesNotReject'
            Parameter
              Identifier: '
            block'
              UnionType
                ParenthesizedType
                  FunctionType
                    TypeReference
                      Identifier: ' Promise'
                      UnknownKeyword
                TypeReference
                  Identifier: ' Promise'
                  UnknownKeyword
            Parameter
              Identifier: '
            error'
              TypeReference
                Identifier: ' AssertPredicate'
            Parameter
              Identifier: '
            message'
              QuestionToken
              UnionType
                StringKeyword
                TypeReference
                  Identifier: ' Error'
            TypeReference
              Identifier: ' Promise'
              VoidKeyword
          FunctionDeclaration
            Identifier: ' match'
            Parameter
              Identifier: 'value'
              StringKeyword
            Parameter
              Identifier: ' regExp'
              TypeReference
                Identifier: ' RegExp'
            Parameter
              Identifier: ' message'
              QuestionToken
              UnionType
                StringKeyword
                TypeReference
                  Identifier: ' Error'
            VoidKeyword
          FunctionDeclaration
            Identifier: ' doesNotMatch'
            Parameter
              Identifier: 'value'
              StringKeyword
            Parameter
              Identifier: ' regExp'
              TypeReference
                Identifier: ' RegExp'
            Parameter
              Identifier: ' message'
              QuestionToken
              UnionType
                StringKeyword
                TypeReference
                  Identifier: ' Error'
            VoidKeyword
          ModuleDeclaration
            Identifier: ' strict'
            ModuleBlock
              TypeAliasDeclaration
                Identifier: ' AssertionError'
                TypeReference
                  QualifiedName
                    Identifier: ' assert'
                    Identifier: 'AssertionError'
              TypeAliasDeclaration
                Identifier: ' AssertPredicate'
                TypeReference
                  QualifiedName
                    Identifier: ' assert'
                    Identifier: 'AssertPredicate'
              TypeAliasDeclaration
                Identifier: ' CallTrackerCall'
                TypeReference
                  QualifiedName
                    Identifier: ' assert'
                    Identifier: 'CallTrackerCall'
              TypeAliasDeclaration
                Identifier: ' CallTrackerReportInformation'
                TypeReference
                  QualifiedName
                    Identifier: ' assert'
                    Identifier: 'CallTrackerReportInformation'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' strict'
                IntersectionType
                  TypeReference
                    Identifier: ' Omit'
                    TypeQuery
                      Identifier: ' assert'
                    UnionType
                      LiteralType
                        StringLiteral
                      LiteralType
                        StringLiteral
                      LiteralType
                        StringLiteral
                      LiteralType
                        StringLiteral
                      LiteralType
                        StringLiteral
                      LiteralType
                        StringLiteral
                      LiteralType
                        StringLiteral
                      LiteralType
                        StringLiteral
                      LiteralType
                        StringLiteral
                  TypeLiteral
                    CallSignature
                      Parameter
                        Identifier: 'value'
                        UnknownKeyword
                      Parameter
                        Identifier: ' message'
                        QuestionToken
                        UnionType
                          StringKeyword
                          TypeReference
                            Identifier: ' Error'
                      TypePredicate
                        AssertsKeyword
                        Identifier: ' value'
                    PropertySignature
                      Identifier: '
                equal'
                      TypeQuery
                        Identifier: ' strictEqual'
                    PropertySignature
                      Identifier: '
                notEqual'
                      TypeQuery
                        Identifier: ' notStrictEqual'
                    PropertySignature
                      Identifier: '
                deepEqual'
                      TypeQuery
                        Identifier: ' deepStrictEqual'
                    PropertySignature
                      Identifier: '
                notDeepEqual'
                      TypeQuery
                        Identifier: ' notDeepStrictEqual'
                    PropertySignature
                      Identifier: '
                // Mapped types and assertion functions are incompatible?
                // TS2775: Assertions require every name in the call target
                // to be declared with an explicit type annotation.
                ok'
                      TypeQuery
                        Identifier: ' ok'
                    PropertySignature
                      Identifier: '
                strictEqual'
                      TypeQuery
                        Identifier: ' strictEqual'
                    PropertySignature
                      Identifier: '
                deepStrictEqual'
                      TypeQuery
                        Identifier: ' deepStrictEqual'
                    PropertySignature
                      Identifier: '
                ifError'
                      TypeQuery
                        Identifier: ' ifError'
                    PropertySignature
                      Identifier: '
                strict'
                      TypeQuery
                        Identifier: ' strict'
      ExportAssignment
        Identifier: ' assert'
  ModuleDeclaration
    DeclareKeyword
    StringLiteral
    ModuleBlock
      ImportEqualsDeclaration
        Identifier: ' assert'
        ExternalModuleReference
          StringLiteral
      ExportAssignment
        Identifier: ' assert'
