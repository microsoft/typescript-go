SourceFile
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CopyDashboardOptions'
    PropertySignature
      Identifier: '
    /**
     * Dashboard Scope. Can be either Project or Project_Team
     */
    copyDashboardScope'
      TypeReference
        Identifier: ' DashboardScope'
    PropertySignature
      Identifier: '
    /**
     * When this flag is set to true,option to select the folder to copy Queries of copy dashboard will appear.
     */
    copyQueriesFlag'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Description of the dashboard
     */
    description'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Name of the dashboard
     */
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * ID of the project. Provided by service at creation time.
     */
    projectId'
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Path to which the queries should be copied of copy dashboard
     */
    queryFolderPath'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Refresh interval of dashboard
     */
    refreshInterval'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * ID of the team. Provided by service at creation time
     */
    teamId'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' CopyDashboardResponse'
    PropertySignature
      Identifier: '
    /**
     * Copied Dashboard
     */
    copiedDashboard'
      QuestionToken
      TypeReference
        Identifier: ' Dashboard'
    PropertySignature
      Identifier: '
    /**
     * Copy Dashboard options
     */
    copyDashboardOptions'
      TypeReference
        Identifier: ' CopyDashboardOptions'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Dashboard'
    PropertySignature
      Identifier: '
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * Entity to which the dashboard is scoped.
     */
    dashboardScope'
      QuestionToken
      TypeReference
        Identifier: ' DashboardScope'
    PropertySignature
      Identifier: '
    /**
     * Description of the dashboard.
     */
    description'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Server defined version tracking value, used for edit collision detection.
     */
    eTag'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Dashboard Global Parameters Config
     */
    globalParametersConfig'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * ID of the group for a dashboard. For team-scoped dashboards, this is the unique identifier for the team associated with the dashboard. For project-scoped dashboards this property is empty.
     */
    groupId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * ID of the Dashboard. Provided by service at creation time.
     */
    id'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Dashboard Last Accessed Date.
     */
    lastAccessedDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * Id of the person who modified Dashboard.
     */
    modifiedBy'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Dashboard's last modified date.
     */
    modifiedDate'
      QuestionToken
      TypeReference
        Identifier: ' Date'
    PropertySignature
      Identifier: '
    /**
     * Name of the Dashboard.
     */
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * ID of the owner for a dashboard. For team-scoped dashboards, this is the unique identifier for the team associated with the dashboard. For project-scoped dashboards, this is the unique identifier for the user identity associated with the dashboard.
     */
    ownerId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Position of the dashboard, within a dashboard group. If unset at creation time, position is decided by the service.
     */
    position'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Interval for client to automatically refresh the dashboard. Expressed in minutes.
     */
    refreshInterval'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    url'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The set of Widgets on the dashboard.
     */
    widgets'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' Widget'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' DashboardGroup'
    PropertySignature
      Identifier: '
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * A list of Dashboards held by the Dashboard Group
     */
    dashboardEntries'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' DashboardGroupEntry'
    PropertySignature
      Identifier: '
    /**
     * Deprecated: The old permission model describing the level of permissions for the current team. Pre-M125.
     */
    permission'
      QuestionToken
      TypeReference
        Identifier: ' GroupMemberPermission'
    PropertySignature
      Identifier: '
    /**
     * A permissions bit mask describing the security permissions of the current team for dashboards. When this permission is the value None, use GroupMemberPermission. Permissions are evaluated based on the presence of a value other than None, else the GroupMemberPermission will be saved.
     */
    teamDashboardPermission'
      QuestionToken
      TypeReference
        Identifier: ' TeamDashboardPermission'
    PropertySignature
      Identifier: '
    url'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' DashboardGroupEntry'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Dashboard'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' DashboardGroupEntryResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' DashboardGroupEntry'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' DashboardResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' DashboardGroupEntry'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' DashboardScope'
    EnumMember
      Identifier: '
    /**
     * [DEPRECATED] Dashboard is scoped to the collection user.
     */
    Collection_User'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Dashboard is scoped to the team.
     */
    Project_Team'
      NumericLiteral
    EnumMember
      Identifier: '
    /**
     * Dashboard is scoped to the project.
     */
    Project'
      NumericLiteral
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' GroupMemberPermission'
    EnumMember
      Identifier: '
    None'
      NumericLiteral
    EnumMember
      Identifier: '
    Edit'
      NumericLiteral
    EnumMember
      Identifier: '
    Manage'
      NumericLiteral
    EnumMember
      Identifier: '
    ManagePermissions'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' LightboxOptions'
    PropertySignature
      Identifier: '
    /**
     * Height of desired lightbox, in pixels
     */
    height'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * True to allow lightbox resizing, false to disallow lightbox resizing, defaults to false.
     */
    resizable'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Width of desired lightbox, in pixels
     */
    width'
      QuestionToken
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' SemanticVersion'
    PropertySignature
      Identifier: '
    /**
     * Major version when you make incompatible API changes
     */
    major'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Minor version when you add functionality in a backwards-compatible manner
     */
    minor'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * Patch version when you make backwards-compatible bug fixes
     */
    patch'
      QuestionToken
      NumberKeyword
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' TeamDashboardPermission'
    EnumMember
      Identifier: '
    None'
      NumericLiteral
    EnumMember
      Identifier: '
    Read'
      NumericLiteral
    EnumMember
      Identifier: '
    Create'
      NumericLiteral
    EnumMember
      Identifier: '
    Edit'
      NumericLiteral
    EnumMember
      Identifier: '
    Delete'
      NumericLiteral
    EnumMember
      Identifier: '
    ManagePermissions'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' Widget'
    PropertySignature
      Identifier: '
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    /**
     * Refers to the allowed sizes for the widget. This gets populated when user wants to configure the widget
     */
    allowedSizes'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' WidgetSize'
    PropertySignature
      Identifier: '
    /**
     * Read-Only Property from Dashboard Service. Indicates if settings are blocked for the current user.
     */
    areSettingsBlockedForUser'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Refers to unique identifier of a feature artifact. Used for pinning+unpinning a specific artifact.
     */
    artifactId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    configurationContributionId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    configurationContributionRelativeId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    contentUri'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The id of the underlying contribution defining the supplied Widget Configuration.
     */
    contributionId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Optional partial dashboard content, to support exchanging dashboard-level version ETag for widget-level APIs
     */
    dashboard'
      QuestionToken
      TypeReference
        Identifier: ' Dashboard'
    PropertySignature
      Identifier: '
    eTag'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    id'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    isEnabled'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    isNameConfigurable'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    lightboxOptions'
      QuestionToken
      TypeReference
        Identifier: ' LightboxOptions'
    PropertySignature
      Identifier: '
    loadingImageUrl'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    position'
      QuestionToken
      TypeReference
        Identifier: ' WidgetPosition'
    PropertySignature
      Identifier: '
    settings'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    settingsVersion'
      QuestionToken
      TypeReference
        Identifier: ' SemanticVersion'
    PropertySignature
      Identifier: '
    size'
      QuestionToken
      TypeReference
        Identifier: ' WidgetSize'
    PropertySignature
      Identifier: '
    typeId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    url'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WidgetMetadata'
    PropertySignature
      Identifier: '
    /**
     * Sizes supported by the Widget.
     */
    allowedSizes'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' WidgetSize'
    PropertySignature
      Identifier: '
    /**
     * Opt-in boolean that indicates if the widget requires the Analytics Service to function. Widgets requiring the analytics service are hidden from the catalog if the Analytics Service is not available.
     */
    analyticsServiceRequired'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Resource for an icon in the widget catalog.
     */
    catalogIconUrl'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Opt-in URL string pointing at widget information. Defaults to extension marketplace URL if omitted
     */
    catalogInfoUrl'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The id of the underlying contribution defining the supplied Widget custom configuration UI. Null if custom configuration UI is not available.
     */
    configurationContributionId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The relative id of the underlying contribution defining the supplied Widget custom configuration UI. Null if custom configuration UI is not available.
     */
    configurationContributionRelativeId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Indicates if the widget requires configuration before being added to dashboard.
     */
    configurationRequired'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Uri for the widget content to be loaded from .
     */
    contentUri'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * The id of the underlying contribution defining the supplied Widget.
     */
    contributionId'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Optional default settings to be copied into widget settings.
     */
    defaultSettings'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Summary information describing the widget.
     */
    description'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Widgets can be disabled by the app store.  We'll need to gracefully handle for: - persistence (Allow) - Requests (Tag as disabled, and provide context)
     */
    isEnabled'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Opt-out boolean that indicates if the widget supports widget name/title configuration. Widgets ignoring the name should set it to false in the manifest.
     */
    isNameConfigurable'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Opt-out boolean indicating if the widget is hidden from the catalog. Commonly, this is used to allow developers to disable creation of a deprecated widget. A widget must have a functional default state, or have a configuration experience, in order to be visible from the catalog.
     */
    isVisibleFromCatalog'
      QuestionToken
      BooleanKeyword
    PropertySignature
      Identifier: '
    /**
     * Keywords associated with this widget, non-filterable and invisible
     */
    keywords'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Opt-in properties for customizing widget presentation in a "lightbox" dialog.
     */
    lightboxOptions'
      QuestionToken
      TypeReference
        Identifier: ' LightboxOptions'
    PropertySignature
      Identifier: '
    /**
     * Resource for a loading placeholder image on dashboard
     */
    loadingImageUrl'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * User facing name of the widget type. Each widget must use a unique value here.
     */
    name'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Publisher Name of this kind of widget.
     */
    publisherName'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Data contract required for the widget to function and to work in its container.
     */
    supportedScopes'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' WidgetScope'
    PropertySignature
      Identifier: '
    /**
     * Tags associated with this widget, visible on each widget and filterable.
     */
    tags'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Contribution target IDs
     */
    targets'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    /**
     * Deprecated: locally unique developer-facing id of this kind of widget. ContributionId provides a globally unique identifier for widget types.
     */
    typeId'
      QuestionToken
      StringKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WidgetMetadataResponse'
    PropertySignature
      Identifier: '
    uri'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    widgetMetadata'
      QuestionToken
      TypeReference
        Identifier: ' WidgetMetadata'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WidgetPosition'
    PropertySignature
      Identifier: '
    column'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    row'
      QuestionToken
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WidgetResponse'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' Widget'
  EnumDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' WidgetScope'
    EnumMember
      Identifier: '
    Collection_User'
      NumericLiteral
    EnumMember
      Identifier: '
    Project_Team'
      NumericLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WidgetSize'
    PropertySignature
      Identifier: '
    /**
     * The Width of the widget, expressed in dashboard grid columns.
     */
    columnSpan'
      QuestionToken
      NumberKeyword
    PropertySignature
      Identifier: '
    /**
     * The height of the widget, expressed in dashboard grid rows.
     */
    rowSpan'
      QuestionToken
      NumberKeyword
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WidgetsVersionedList'
    PropertySignature
      Identifier: '
    eTag'
      QuestionToken
      ArrayType
        StringKeyword
    PropertySignature
      Identifier: '
    widgets'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' Widget'
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' WidgetTypesResponse'
    PropertySignature
      Identifier: '
    _links'
      QuestionToken
      AnyKeyword
    PropertySignature
      Identifier: '
    uri'
      QuestionToken
      StringKeyword
    PropertySignature
      Identifier: '
    widgetTypes'
      QuestionToken
      ArrayType
        TypeReference
          Identifier: ' WidgetMetadata'
  VariableStatement
    ExportKeyword
    DeclareKeyword
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' TypeInfo'
        TypeLiteral
          PropertySignature
            Identifier: '
    CopyDashboardOptions'
            AnyKeyword
          PropertySignature
            Identifier: '
    CopyDashboardResponse'
            AnyKeyword
          PropertySignature
            Identifier: '
    Dashboard'
            AnyKeyword
          PropertySignature
            Identifier: '
    DashboardGroup'
            AnyKeyword
          PropertySignature
            Identifier: '
    DashboardGroupEntry'
            AnyKeyword
          PropertySignature
            Identifier: '
    DashboardGroupEntryResponse'
            AnyKeyword
          PropertySignature
            Identifier: '
    DashboardResponse'
            AnyKeyword
          PropertySignature
            Identifier: '
    DashboardScope'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            collection_User'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            project_Team'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            project'
                    NumberKeyword
          PropertySignature
            Identifier: '
    GroupMemberPermission'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            none'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            edit'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            manage'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            managePermissions'
                    NumberKeyword
          PropertySignature
            Identifier: '
    TeamDashboardPermission'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            none'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            read'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            create'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            edit'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            delete'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            managePermissions'
                    NumberKeyword
          PropertySignature
            Identifier: '
    Widget'
            AnyKeyword
          PropertySignature
            Identifier: '
    WidgetMetadata'
            AnyKeyword
          PropertySignature
            Identifier: '
    WidgetMetadataResponse'
            AnyKeyword
          PropertySignature
            Identifier: '
    WidgetResponse'
            AnyKeyword
          PropertySignature
            Identifier: '
    WidgetScope'
            TypeLiteral
              PropertySignature
                Identifier: '
        enumValues'
                TypeLiteral
                  PropertySignature
                    Identifier: '
            collection_User'
                    NumberKeyword
                  PropertySignature
                    Identifier: '
            project_Team'
                    NumberKeyword
          PropertySignature
            Identifier: '
    WidgetsVersionedList'
            AnyKeyword
          PropertySignature
            Identifier: '
    WidgetTypesResponse'
            AnyKeyword
