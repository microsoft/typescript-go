SourceFile
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: '
    codeFixAll'
        ImportSpecifier
          Identifier: '
    createCodeFixAction'
        ImportSpecifier
          Identifier: '
    registerCodeFix'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: '
    CodeFixContextBase'
        ImportSpecifier
          Identifier: '
    Debug'
        ImportSpecifier
          Identifier: '
    Diagnostics'
        ImportSpecifier
          Identifier: '
    factory'
        ImportSpecifier
          Identifier: '
    findAncestor'
        ImportSpecifier
          Identifier: '
    getEffectiveBaseTypeNode'
        ImportSpecifier
          Identifier: '
    getEmitScriptTarget'
        ImportSpecifier
          Identifier: '
    getMeaningFromLocation'
        ImportSpecifier
          Identifier: '
    getTextOfNode'
        ImportSpecifier
          Identifier: '
    getTokenAtPosition'
        ImportSpecifier
          Identifier: '
    hasOverrideModifier'
        ImportSpecifier
          Identifier: '
    ImportDeclaration'
        ImportSpecifier
          Identifier: '
    isBinaryExpression'
        ImportSpecifier
          Identifier: '
    isClassElement'
        ImportSpecifier
          Identifier: '
    isClassLike'
        ImportSpecifier
          Identifier: '
    isIdentifier'
        ImportSpecifier
          Identifier: '
    isIdentifierText'
        ImportSpecifier
          Identifier: '
    isImportDeclaration'
        ImportSpecifier
          Identifier: '
    isImportSpecifier'
        ImportSpecifier
          Identifier: '
    isJsxAttribute'
        ImportSpecifier
          Identifier: '
    isJsxOpeningLikeElement'
        ImportSpecifier
          Identifier: '
    isMemberName'
        ImportSpecifier
          Identifier: '
    isNamedDeclaration'
        ImportSpecifier
          Identifier: '
    isPrivateIdentifier'
        ImportSpecifier
          Identifier: '
    isPropertyAccessExpression'
        ImportSpecifier
          Identifier: '
    isQualifiedName'
        ImportSpecifier
          Identifier: '
    isStringLiteralLike'
        ImportSpecifier
          Identifier: '
    Node'
        ImportSpecifier
          Identifier: '
    NodeFlags'
        ImportSpecifier
          Identifier: '
    ScriptTarget'
        ImportSpecifier
          Identifier: '
    SemanticMeaning'
        ImportSpecifier
          Identifier: '
    SourceFile'
        ImportSpecifier
          Identifier: '
    Symbol'
        ImportSpecifier
          Identifier: '
    SymbolFlags'
        ImportSpecifier
          Identifier: '
    symbolName'
        ImportSpecifier
          Identifier: '
    SyntaxKind'
        ImportSpecifier
          Identifier: '
    textChanges'
    StringLiteral
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' fixId'
        StringLiteral
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' errorCodes'
        ArrayLiteralExpression
          PropertyAccessExpression
            PropertyAccessExpression
              Identifier: '
    Diagnostics'
              Identifier: 'Property_0_does_not_exist_on_type_1_Did_you_mean_2'
            Identifier: 'code'
          PropertyAccessExpression
            PropertyAccessExpression
              Identifier: '
    Diagnostics'
              Identifier: 'Property_0_may_not_exist_on_type_1_Did_you_mean_2'
            Identifier: 'code'
          PropertyAccessExpression
            PropertyAccessExpression
              Identifier: '
    Diagnostics'
              Identifier: 'Cannot_find_name_0_Did_you_mean_1'
            Identifier: 'code'
          PropertyAccessExpression
            PropertyAccessExpression
              Identifier: '
    Diagnostics'
              Identifier: 'Could_not_find_name_0_Did_you_mean_1'
            Identifier: 'code'
          PropertyAccessExpression
            PropertyAccessExpression
              Identifier: '
    Diagnostics'
              Identifier: 'Cannot_find_namespace_0_Did_you_mean_1'
            Identifier: 'code'
          PropertyAccessExpression
            PropertyAccessExpression
              Identifier: '
    Diagnostics'
              Identifier: 'Cannot_find_name_0_Did_you_mean_the_instance_member_this_0'
            Identifier: 'code'
          PropertyAccessExpression
            PropertyAccessExpression
              Identifier: '
    Diagnostics'
              Identifier: 'Cannot_find_name_0_Did_you_mean_the_static_member_1_0'
            Identifier: 'code'
          PropertyAccessExpression
            PropertyAccessExpression
              Identifier: '
    Diagnostics'
              Identifier: '_0_has_no_exported_member_named_1_Did_you_mean_2'
            Identifier: 'code'
          PropertyAccessExpression
            PropertyAccessExpression
              Identifier: '
    Diagnostics'
              Identifier: 'This_member_cannot_have_an_override_modifier_because_it_is_not_declared_in_the_base_class_0_Did_you_mean_1'
            Identifier: 'code'
          PropertyAccessExpression
            PropertyAccessExpression
              Identifier: '
    Diagnostics'
              Identifier: 'This_member_cannot_have_a_JSDoc_comment_with_an_override_tag_because_it_is_not_declared_in_the_base_class_0_Did_you_mean_1'
            Identifier: 'code'
          PropertyAccessExpression
            PropertyAccessExpression
              Identifier: '
    // for JSX class components
    Diagnostics'
              Identifier: 'No_overload_matches_this_call'
            Identifier: 'code'
          PropertyAccessExpression
            PropertyAccessExpression
              Identifier: '
    // for JSX FC
    Diagnostics'
              Identifier: 'Type_0_is_not_assignable_to_type_1'
            Identifier: 'code'
  ExpressionStatement
    CallExpression
      Identifier: '
registerCodeFix'
      ObjectLiteralExpression
        ShorthandPropertyAssignment
          Identifier: '
    errorCodes'
        MethodDeclaration
          Identifier: '
    getCodeActions'
          Parameter
            Identifier: 'context'
          Block
            VariableStatement
              VariableDeclarationList
                VariableDeclaration
                  ObjectBindingPattern
                    BindingElement
                      Identifier: ' sourceFile'
                    BindingElement
                      Identifier: ' errorCode'
                  Identifier: ' context'
            VariableStatement
              VariableDeclarationList
                VariableDeclaration
                  Identifier: ' info'
                  CallExpression
                    Identifier: ' getInfo'
                    Identifier: 'sourceFile'
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: ' context'
                        Identifier: 'span'
                      Identifier: 'start'
                    Identifier: ' context'
                    Identifier: ' errorCode'
            IfStatement
              PrefixUnaryExpression
                Identifier: 'info'
              ReturnStatement
                Identifier: ' undefined'
            VariableStatement
              VariableDeclarationList
                VariableDeclaration
                  ObjectBindingPattern
                    BindingElement
                      Identifier: ' node'
                    BindingElement
                      Identifier: ' suggestedSymbol'
                  Identifier: ' info'
            VariableStatement
              VariableDeclarationList
                VariableDeclaration
                  Identifier: ' target'
                  CallExpression
                    Identifier: ' getEmitScriptTarget'
                    CallExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: 'context'
                          Identifier: 'host'
                        Identifier: 'getCompilationSettings'
            VariableStatement
              VariableDeclarationList
                VariableDeclaration
                  Identifier: ' changes'
                  CallExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: ' textChanges'
                        Identifier: 'ChangeTracker'
                      Identifier: 'with'
                    Identifier: 'context'
                    ArrowFunction
                      Parameter
                        Identifier: ' t'
                      EqualsGreaterThanToken
                      CallExpression
                        Identifier: ' doChange'
                        Identifier: 't'
                        Identifier: ' sourceFile'
                        Identifier: ' node'
                        Identifier: ' suggestedSymbol'
                        Identifier: ' target'
            ReturnStatement
              ArrayLiteralExpression
                CallExpression
                  Identifier: 'createCodeFixAction'
                  StringLiteral
                  Identifier: ' changes'
                  ArrayLiteralExpression
                    PropertyAccessExpression
                      Identifier: 'Diagnostics'
                      Identifier: 'Change_spelling_to_0'
                    CallExpression
                      Identifier: ' symbolName'
                      Identifier: 'suggestedSymbol'
                  Identifier: ' fixId'
                  PropertyAccessExpression
                    Identifier: ' Diagnostics'
                    Identifier: 'Fix_all_detected_spelling_errors'
        PropertyAssignment
          Identifier: '
    fixIds'
          ArrayLiteralExpression
            Identifier: 'fixId'
        PropertyAssignment
          Identifier: '
    getAllCodeActions'
          ArrowFunction
            Parameter
              Identifier: ' context'
            EqualsGreaterThanToken
            CallExpression
              Identifier: '
        codeFixAll'
              Identifier: 'context'
              Identifier: ' errorCodes'
              ArrowFunction
                Parameter
                  Identifier: 'changes'
                Parameter
                  Identifier: ' diag'
                EqualsGreaterThanToken
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' info'
                        CallExpression
                          Identifier: ' getInfo'
                          PropertyAccessExpression
                            Identifier: 'diag'
                            Identifier: 'file'
                          PropertyAccessExpression
                            Identifier: ' diag'
                            Identifier: 'start'
                          Identifier: ' context'
                          PropertyAccessExpression
                            Identifier: ' diag'
                            Identifier: 'code'
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' target'
                        CallExpression
                          Identifier: ' getEmitScriptTarget'
                          CallExpression
                            PropertyAccessExpression
                              PropertyAccessExpression
                                Identifier: 'context'
                                Identifier: 'host'
                              Identifier: 'getCompilationSettings'
                  IfStatement
                    Identifier: 'info'
                    ExpressionStatement
                      CallExpression
                        Identifier: ' doChange'
                        Identifier: 'changes'
                        PropertyAccessExpression
                          Identifier: ' context'
                          Identifier: 'sourceFile'
                        PropertyAccessExpression
                          Identifier: ' info'
                          Identifier: 'node'
                        PropertyAccessExpression
                          Identifier: ' info'
                          Identifier: 'suggestedSymbol'
                        Identifier: ' target'
  FunctionDeclaration
    Identifier: ' getInfo'
    Parameter
      Identifier: 'sourceFile'
      TypeReference
        Identifier: ' SourceFile'
    Parameter
      Identifier: ' pos'
      NumberKeyword
    Parameter
      Identifier: ' context'
      TypeReference
        Identifier: ' CodeFixContextBase'
    Parameter
      Identifier: ' errorCode'
      NumberKeyword
    UnionType
      TypeLiteral
        PropertySignature
          Identifier: ' node'
          TypeReference
            Identifier: ' Node'
        PropertySignature
          Identifier: ' suggestedSymbol'
          TypeReference
            Identifier: ' Symbol'
      UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' node'
            CallExpression
              Identifier: ' getTokenAtPosition'
              Identifier: 'sourceFile'
              Identifier: ' pos'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' parent'
            PropertyAccessExpression
              Identifier: ' node'
              Identifier: 'parent'
      IfStatement
        BinaryExpression
          ParenthesizedExpression
            BinaryExpression
              BinaryExpression
                Identifier: '
            errorCode'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: ' Diagnostics'
                    Identifier: 'No_overload_matches_this_call'
                  Identifier: 'code'
              BarBarToken
              BinaryExpression
                Identifier: '
            errorCode'
                EqualsEqualsEqualsToken
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: ' Diagnostics'
                    Identifier: 'Type_0_is_not_assignable_to_type_1'
                  Identifier: 'code'
          AmpersandAmpersandToken
          PrefixUnaryExpression
            CallExpression
              Identifier: 'isJsxAttribute'
              Identifier: 'parent'
        ReturnStatement
          Identifier: ' undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' checker'
            CallExpression
              PropertyAccessExpression
                PropertyAccessExpression
                  Identifier: ' context'
                  Identifier: 'program'
                Identifier: 'getTypeChecker'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' suggestedSymbol'
            UnionType
              TypeReference
                Identifier: ' Symbol'
              UndefinedKeyword
      IfStatement
        BinaryExpression
          CallExpression
            Identifier: 'isPropertyAccessExpression'
            Identifier: 'parent'
          AmpersandAmpersandToken
          BinaryExpression
            PropertyAccessExpression
              Identifier: ' parent'
              Identifier: 'name'
            EqualsEqualsEqualsToken
            Identifier: ' node'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        Debug'
                Identifier: 'assert'
              CallExpression
                Identifier: 'isMemberName'
                Identifier: 'node'
              StringLiteral
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' containingType'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' checker'
                    Identifier: 'getTypeAtLocation'
                  PropertyAccessExpression
                    Identifier: 'parent'
                    Identifier: 'expression'
          IfStatement
            BinaryExpression
              PropertyAccessExpression
                Identifier: 'parent'
                Identifier: 'flags'
              AmpersandToken
              PropertyAccessExpression
                Identifier: ' NodeFlags'
                Identifier: 'OptionalChain'
            Block
              ExpressionStatement
                BinaryExpression
                  Identifier: '
            containingType'
                  EqualsToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' checker'
                      Identifier: 'getNonNullableType'
                    Identifier: 'containingType'
          ExpressionStatement
            BinaryExpression
              Identifier: '
        suggestedSymbol'
              EqualsToken
              CallExpression
                PropertyAccessExpression
                  Identifier: ' checker'
                  Identifier: 'getSuggestedSymbolForNonexistentProperty'
                Identifier: 'node'
                Identifier: ' containingType'
        IfStatement
          BinaryExpression
            BinaryExpression
              BinaryExpression
                CallExpression
                  Identifier: 'isBinaryExpression'
                  Identifier: 'parent'
                AmpersandAmpersandToken
                BinaryExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      Identifier: ' parent'
                      Identifier: 'operatorToken'
                    Identifier: 'kind'
                  EqualsEqualsEqualsToken
                  PropertyAccessExpression
                    Identifier: ' SyntaxKind'
                    Identifier: 'InKeyword'
              AmpersandAmpersandToken
              BinaryExpression
                PropertyAccessExpression
                  Identifier: ' parent'
                  Identifier: 'left'
                EqualsEqualsEqualsToken
                Identifier: ' node'
            AmpersandAmpersandToken
            CallExpression
              Identifier: ' isPrivateIdentifier'
              Identifier: 'node'
          Block
            VariableStatement
              VariableDeclarationList
                VariableDeclaration
                  Identifier: ' receiverType'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' checker'
                      Identifier: 'getTypeAtLocation'
                    PropertyAccessExpression
                      Identifier: 'parent'
                      Identifier: 'right'
            ExpressionStatement
              BinaryExpression
                Identifier: '
        suggestedSymbol'
                EqualsToken
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' checker'
                    Identifier: 'getSuggestedSymbolForNonexistentProperty'
                  Identifier: 'node'
                  Identifier: ' receiverType'
          IfStatement
            BinaryExpression
              CallExpression
                Identifier: 'isQualifiedName'
                Identifier: 'parent'
              AmpersandAmpersandToken
              BinaryExpression
                PropertyAccessExpression
                  Identifier: ' parent'
                  Identifier: 'right'
                EqualsEqualsEqualsToken
                Identifier: ' node'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' symbol'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' checker'
                        Identifier: 'getSymbolAtLocation'
                      PropertyAccessExpression
                        Identifier: 'parent'
                        Identifier: 'left'
              IfStatement
                BinaryExpression
                  Identifier: 'symbol'
                  AmpersandAmpersandToken
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: ' symbol'
                      Identifier: 'flags'
                    AmpersandToken
                    PropertyAccessExpression
                      Identifier: ' SymbolFlags'
                      Identifier: 'Module'
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
            suggestedSymbol'
                      EqualsToken
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' checker'
                          Identifier: 'getSuggestedSymbolForNonexistentModule'
                        PropertyAccessExpression
                          Identifier: 'parent'
                          Identifier: 'right'
                        Identifier: ' symbol'
            IfStatement
              BinaryExpression
                CallExpression
                  Identifier: 'isImportSpecifier'
                  Identifier: 'parent'
                AmpersandAmpersandToken
                BinaryExpression
                  PropertyAccessExpression
                    Identifier: ' parent'
                    Identifier: 'name'
                  EqualsEqualsEqualsToken
                  Identifier: ' node'
              Block
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
        Debug'
                      Identifier: 'assertNode'
                    Identifier: 'node'
                    Identifier: ' isIdentifier'
                    StringLiteral
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' importDeclaration'
                      NonNullExpression
                        CallExpression
                          Identifier: ' findAncestor'
                          Identifier: 'node'
                          Identifier: ' isImportDeclaration'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' resolvedSourceFile'
                      CallExpression
                        Identifier: ' getResolvedSourceFileFromImportDeclaration'
                        Identifier: 'context'
                        Identifier: ' importDeclaration'
                        Identifier: ' sourceFile'
                IfStatement
                  BinaryExpression
                    Identifier: 'resolvedSourceFile'
                    AmpersandAmpersandToken
                    PropertyAccessExpression
                      Identifier: ' resolvedSourceFile'
                      Identifier: 'symbol'
                  Block
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
            suggestedSymbol'
                        EqualsToken
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' checker'
                            Identifier: 'getSuggestedSymbolForNonexistentModule'
                          Identifier: 'node'
                          PropertyAccessExpression
                            Identifier: ' resolvedSourceFile'
                            Identifier: 'symbol'
              IfStatement
                BinaryExpression
                  CallExpression
                    Identifier: 'isJsxAttribute'
                    Identifier: 'parent'
                  AmpersandAmpersandToken
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: ' parent'
                      Identifier: 'name'
                    EqualsEqualsEqualsToken
                    Identifier: ' node'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
        Debug'
                        Identifier: 'assertNode'
                      Identifier: 'node'
                      Identifier: ' isIdentifier'
                      StringLiteral
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' tag'
                        NonNullExpression
                          CallExpression
                            Identifier: ' findAncestor'
                            Identifier: 'node'
                            Identifier: ' isJsxOpeningLikeElement'
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' props'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' checker'
                            Identifier: 'getContextualTypeForArgumentAtIndex'
                          Identifier: 'tag'
                          NumericLiteral
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
        suggestedSymbol'
                      EqualsToken
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' checker'
                          Identifier: 'getSuggestedSymbolForNonexistentJSXAttribute'
                        Identifier: 'node'
                        NonNullExpression
                          Identifier: ' props'
                IfStatement
                  BinaryExpression
                    BinaryExpression
                      CallExpression
                        Identifier: 'hasOverrideModifier'
                        Identifier: 'parent'
                      AmpersandAmpersandToken
                      CallExpression
                        Identifier: ' isClassElement'
                        Identifier: 'parent'
                    AmpersandAmpersandToken
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: ' parent'
                        Identifier: 'name'
                      EqualsEqualsEqualsToken
                      Identifier: ' node'
                  Block
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' baseDeclaration'
                          CallExpression
                            Identifier: ' findAncestor'
                            Identifier: 'node'
                            Identifier: ' isClassLike'
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' baseTypeNode'
                          ConditionalExpression
                            Identifier: ' baseDeclaration'
                            QuestionToken
                            CallExpression
                              Identifier: ' getEffectiveBaseTypeNode'
                              Identifier: 'baseDeclaration'
                            ColonToken
                            Identifier: ' undefined'
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' baseType'
                          ConditionalExpression
                            Identifier: ' baseTypeNode'
                            QuestionToken
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' checker'
                                Identifier: 'getTypeAtLocation'
                              Identifier: 'baseTypeNode'
                            ColonToken
                            Identifier: ' undefined'
                    IfStatement
                      Identifier: 'baseType'
                      Block
                        ExpressionStatement
                          BinaryExpression
                            Identifier: '
            suggestedSymbol'
                            EqualsToken
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' checker'
                                Identifier: 'getSuggestedSymbolForNonexistentClassMember'
                              CallExpression
                                Identifier: 'getTextOfNode'
                                Identifier: 'node'
                              Identifier: ' baseType'
                  Block
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' meaning'
                          CallExpression
                            Identifier: ' getMeaningFromLocation'
                            Identifier: 'node'
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' name'
                          CallExpression
                            Identifier: ' getTextOfNode'
                            Identifier: 'node'
                    ExpressionStatement
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
        Debug'
                          Identifier: 'assert'
                        BinaryExpression
                          Identifier: 'name'
                          ExclamationEqualsEqualsToken
                          Identifier: ' undefined'
                        StringLiteral
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
        suggestedSymbol'
                        EqualsToken
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' checker'
                            Identifier: 'getSuggestedSymbolForNonexistentSymbol'
                          Identifier: 'node'
                          Identifier: ' name'
                          CallExpression
                            Identifier: ' convertSemanticMeaningToSymbolFlags'
                            Identifier: 'meaning'
      ReturnStatement
        ConditionalExpression
          BinaryExpression
            Identifier: ' suggestedSymbol'
            EqualsEqualsEqualsToken
            Identifier: ' undefined'
          QuestionToken
          Identifier: ' undefined'
          ColonToken
          ObjectLiteralExpression
            ShorthandPropertyAssignment
              Identifier: ' node'
            ShorthandPropertyAssignment
              Identifier: ' suggestedSymbol'
  FunctionDeclaration
    Identifier: ' doChange'
    Parameter
      Identifier: 'changes'
      TypeReference
        QualifiedName
          Identifier: ' textChanges'
          Identifier: 'ChangeTracker'
    Parameter
      Identifier: ' sourceFile'
      TypeReference
        Identifier: ' SourceFile'
    Parameter
      Identifier: ' node'
      TypeReference
        Identifier: ' Node'
    Parameter
      Identifier: ' suggestedSymbol'
      TypeReference
        Identifier: ' Symbol'
    Parameter
      Identifier: ' target'
      TypeReference
        Identifier: ' ScriptTarget'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' suggestion'
            CallExpression
              Identifier: ' symbolName'
              Identifier: 'suggestedSymbol'
      IfStatement
        BinaryExpression
          PrefixUnaryExpression
            CallExpression
              Identifier: 'isIdentifierText'
              Identifier: 'suggestion'
              Identifier: ' target'
          AmpersandAmpersandToken
          CallExpression
            Identifier: ' isPropertyAccessExpression'
            PropertyAccessExpression
              Identifier: 'node'
              Identifier: 'parent'
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' valDecl'
                PropertyAccessExpression
                  Identifier: ' suggestedSymbol'
                  Identifier: 'valueDeclaration'
          IfStatement
            BinaryExpression
              BinaryExpression
                Identifier: 'valDecl'
                AmpersandAmpersandToken
                CallExpression
                  Identifier: ' isNamedDeclaration'
                  Identifier: 'valDecl'
              AmpersandAmpersandToken
              CallExpression
                Identifier: ' isPrivateIdentifier'
                PropertyAccessExpression
                  Identifier: 'valDecl'
                  Identifier: 'name'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            changes'
                    Identifier: 'replaceNode'
                  Identifier: 'sourceFile'
                  Identifier: ' node'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' factory'
                      Identifier: 'createIdentifier'
                    Identifier: 'suggestion'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            changes'
                    Identifier: 'replaceNode'
                  Identifier: 'sourceFile'
                  PropertyAccessExpression
                    Identifier: ' node'
                    Identifier: 'parent'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' factory'
                      Identifier: 'createElementAccessExpression'
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: 'node'
                        Identifier: 'parent'
                      Identifier: 'expression'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' factory'
                        Identifier: 'createStringLiteral'
                      Identifier: 'suggestion'
        Block
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier: '
        changes'
                Identifier: 'replaceNode'
              Identifier: 'sourceFile'
              Identifier: ' node'
              CallExpression
                PropertyAccessExpression
                  Identifier: ' factory'
                  Identifier: 'createIdentifier'
                Identifier: 'suggestion'
  FunctionDeclaration
    Identifier: ' convertSemanticMeaningToSymbolFlags'
    Parameter
      Identifier: 'meaning'
      TypeReference
        Identifier: ' SemanticMeaning'
    TypeReference
      Identifier: ' SymbolFlags'
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' flags'
            NumericLiteral
      IfStatement
        BinaryExpression
          Identifier: 'meaning'
          AmpersandToken
          PropertyAccessExpression
            Identifier: ' SemanticMeaning'
            Identifier: 'Namespace'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        flags'
              BarEqualsToken
              PropertyAccessExpression
                Identifier: ' SymbolFlags'
                Identifier: 'Namespace'
      IfStatement
        BinaryExpression
          Identifier: 'meaning'
          AmpersandToken
          PropertyAccessExpression
            Identifier: ' SemanticMeaning'
            Identifier: 'Type'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        flags'
              BarEqualsToken
              PropertyAccessExpression
                Identifier: ' SymbolFlags'
                Identifier: 'Type'
      IfStatement
        BinaryExpression
          Identifier: 'meaning'
          AmpersandToken
          PropertyAccessExpression
            Identifier: ' SemanticMeaning'
            Identifier: 'Value'
        Block
          ExpressionStatement
            BinaryExpression
              Identifier: '
        flags'
              BarEqualsToken
              PropertyAccessExpression
                Identifier: ' SymbolFlags'
                Identifier: 'Value'
      ReturnStatement
        Identifier: ' flags'
  FunctionDeclaration
    Identifier: ' getResolvedSourceFileFromImportDeclaration'
    Parameter
      Identifier: 'context'
      TypeReference
        Identifier: ' CodeFixContextBase'
    Parameter
      Identifier: ' importDeclaration'
      TypeReference
        Identifier: ' ImportDeclaration'
    Parameter
      Identifier: ' importingFile'
      TypeReference
        Identifier: ' SourceFile'
    UnionType
      TypeReference
        Identifier: ' SourceFile'
      UndefinedKeyword
    Block
      IfStatement
        BinaryExpression
          PrefixUnaryExpression
            Identifier: 'importDeclaration'
          BarBarToken
          PrefixUnaryExpression
            CallExpression
              Identifier: 'isStringLiteralLike'
              PropertyAccessExpression
                Identifier: 'importDeclaration'
                Identifier: 'moduleSpecifier'
        ReturnStatement
          Identifier: ' undefined'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' resolvedModule'
            PropertyAccessExpression
              CallExpression
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: ' context'
                    Identifier: 'program'
                  Identifier: 'getResolvedModuleFromModuleSpecifier'
                PropertyAccessExpression
                  Identifier: 'importDeclaration'
                  Identifier: 'moduleSpecifier'
                Identifier: ' importingFile'
              QuestionDotToken
              Identifier: 'resolvedModule'
      IfStatement
        PrefixUnaryExpression
          Identifier: 'resolvedModule'
        ReturnStatement
          Identifier: ' undefined'
      ReturnStatement
        CallExpression
          PropertyAccessExpression
            PropertyAccessExpression
              Identifier: ' context'
              Identifier: 'program'
            Identifier: 'getSourceFile'
          PropertyAccessExpression
            Identifier: 'resolvedModule'
            Identifier: 'resolvedFileName'
