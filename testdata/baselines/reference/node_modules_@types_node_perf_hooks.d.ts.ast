SourceFile
  ModuleDeclaration
    DeclareKeyword
    StringLiteral
    ModuleBlock
      ImportDeclaration
        ImportClause
          NamedImports
            ImportSpecifier
              Identifier: ' AsyncResource'
        StringLiteral
      TypeAliasDeclaration
        Identifier: ' EntryType'
        UnionType
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
      InterfaceDeclaration
        Identifier: ' NodeGCPerformanceDetail'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' kind'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' flags'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
      ClassDeclaration
        Identifier: ' PerformanceEntry'
        Constructor
          ProtectedKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' duration'
          NumberKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' name'
          StringKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' startTime'
          NumberKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' entryType'
          TypeReference
            Identifier: ' EntryType'
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' detail'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' NodeGCPerformanceDetail'
            UnknownKeyword
            UndefinedKeyword
        MethodDeclaration
          Identifier: ' // TODO: Narrow this based on entry type.
        toJSON'
          AnyKeyword
      ClassDeclaration
        Identifier: ' PerformanceMark'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' PerformanceEntry'
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' duration'
          LiteralType
            NumericLiteral
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' entryType'
          LiteralType
            StringLiteral
      ClassDeclaration
        Identifier: ' PerformanceMeasure'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' PerformanceEntry'
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' entryType'
          LiteralType
            StringLiteral
      ClassDeclaration
        Identifier: ' PerformanceNodeTiming'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' PerformanceEntry'
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' entryType'
          LiteralType
            StringLiteral
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' bootstrapComplete'
          NumberKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' environment'
          NumberKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' idleTime'
          NumberKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' loopExit'
          NumberKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' loopStart'
          NumberKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' nodeStart'
          NumberKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' v8Start'
          NumberKeyword
      InterfaceDeclaration
        Identifier: ' EventLoopUtilization'
        PropertySignature
          Identifier: '
        idle'
          NumberKeyword
        PropertySignature
          Identifier: '
        active'
          NumberKeyword
        PropertySignature
          Identifier: '
        utilization'
          NumberKeyword
      TypeAliasDeclaration
        Identifier: ' EventLoopUtilityFunction'
        FunctionType
          Parameter
            Identifier: '
        utilization1'
            QuestionToken
            TypeReference
              Identifier: ' EventLoopUtilization'
          Parameter
            Identifier: '
        utilization2'
            QuestionToken
            TypeReference
              Identifier: ' EventLoopUtilization'
          TypeReference
            Identifier: ' EventLoopUtilization'
      InterfaceDeclaration
        Identifier: ' MarkOptions'
        PropertySignature
          Identifier: '
        /**
         * Additional optional detail to include with the mark.
         */
        detail'
          QuestionToken
          UnionType
            UnknownKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * An optional timestamp to be used as the mark time.
         * @default `performance.now()`
         */
        startTime'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' MeasureOptions'
        PropertySignature
          Identifier: '
        /**
         * Additional optional detail to include with the mark.
         */
        detail'
          QuestionToken
          UnionType
            UnknownKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * Duration between start and end times.
         */
        duration'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * Timestamp to be used as the end time, or a string identifying a previously recorded mark.
         */
        end'
          QuestionToken
          UnionType
            NumberKeyword
            StringKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * Timestamp to be used as the start time, or a string identifying a previously recorded mark.
         */
        start'
          QuestionToken
          UnionType
            NumberKeyword
            StringKeyword
            UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' TimerifyOptions'
        PropertySignature
          Identifier: '
        /**
         * A histogram object created using `perf_hooks.createHistogram()` that will record runtime
         * durations in nanoseconds.
         */
        histogram'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' RecordableHistogram'
            UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' Performance'
        MethodSignature
          Identifier: '
        /**
         * If `name` is not provided, removes all `PerformanceMark` objects from the Performance Timeline.
         * If `name` is provided, removes only the named mark.
         * @since v8.5.0
         */
        clearMarks'
          Parameter
            Identifier: 'name'
            QuestionToken
            StringKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        /**
         * If `name` is not provided, removes all `PerformanceMeasure` objects from the Performance Timeline.
         * If `name` is provided, removes only the named measure.
         * @since v16.7.0
         */
        clearMeasures'
          Parameter
            Identifier: 'name'
            QuestionToken
            StringKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        /**
         * If `name` is not provided, removes all `PerformanceResourceTiming` objects from the Resource Timeline.
         * If `name` is provided, removes only the named resource.
         * @since v18.2.0, v16.17.0
         */
        clearResourceTimings'
          Parameter
            Identifier: 'name'
            QuestionToken
            StringKeyword
          VoidKeyword
        PropertySignature
          Identifier: '
        /**
         * eventLoopUtilization is similar to CPU utilization except that it is calculated using high precision wall-clock time.
         * It represents the percentage of time the event loop has spent outside the event loop's event provider (e.g. epoll_wait).
         * No other CPU idle time is taken into consideration.
         */
        eventLoopUtilization'
          TypeReference
            Identifier: ' EventLoopUtilityFunction'
        MethodSignature
          Identifier: '
        /**
         * Returns a list of `PerformanceEntry` objects in chronological order with respect to `performanceEntry.startTime`.
         * If you are only interested in performance entries of certain types or that have certain names, see
         * `performance.getEntriesByType()` and `performance.getEntriesByName()`.
         * @since v16.7.0
         */
        getEntries'
          ArrayType
            TypeReference
              Identifier: ' PerformanceEntry'
        MethodSignature
          Identifier: '
        /**
         * Returns a list of `PerformanceEntry` objects in chronological order with respect to `performanceEntry.startTime`
         * whose `performanceEntry.name` is equal to `name`, and optionally, whose `performanceEntry.entryType` is equal to `type`.
         * @param name
         * @param type
         * @since v16.7.0
         */
        getEntriesByName'
          Parameter
            Identifier: 'name'
            StringKeyword
          Parameter
            Identifier: ' type'
            QuestionToken
            TypeReference
              Identifier: ' EntryType'
          ArrayType
            TypeReference
              Identifier: ' PerformanceEntry'
        MethodSignature
          Identifier: '
        /**
         * Returns a list of `PerformanceEntry` objects in chronological order with respect to `performanceEntry.startTime`
         * whose `performanceEntry.entryType` is equal to `type`.
         * @param type
         * @since v16.7.0
         */
        getEntriesByType'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' EntryType'
          ArrayType
            TypeReference
              Identifier: ' PerformanceEntry'
        MethodSignature
          Identifier: '
        /**
         * Creates a new `PerformanceMark` entry in the Performance Timeline.
         * A `PerformanceMark` is a subclass of `PerformanceEntry` whose `performanceEntry.entryType` is always `'mark'`,
         * and whose `performanceEntry.duration` is always `0`.
         * Performance marks are used to mark specific significant moments in the Performance Timeline.
         *
         * The created `PerformanceMark` entry is put in the global Performance Timeline and can be queried with
         * `performance.getEntries`, `performance.getEntriesByName`, and `performance.getEntriesByType`. When the observation is
         * performed, the entries should be cleared from the global Performance Timeline manually with `performance.clearMarks`.
         * @param name
         */
        mark'
          Parameter
            Identifier: 'name'
            StringKeyword
          Parameter
            Identifier: ' options'
            QuestionToken
            TypeReference
              Identifier: ' MarkOptions'
          TypeReference
            Identifier: ' PerformanceMark'
        MethodSignature
          Identifier: '
        /**
         * Creates a new `PerformanceResourceTiming` entry in the Resource Timeline.
         * A `PerformanceResourceTiming` is a subclass of `PerformanceEntry` whose `performanceEntry.entryType` is always `'resource'`.
         * Performance resources are used to mark moments in the Resource Timeline.
         * @param timingInfo [Fetch Timing Info](https://fetch.spec.whatwg.org/#fetch-timing-info)
         * @param requestedUrl The resource url
         * @param initiatorType The initiator name, e.g: 'fetch'
         * @param global
         * @param cacheMode The cache mode must be an empty string ('') or 'local'
         * @param bodyInfo [Fetch Response Body Info](https://fetch.spec.whatwg.org/#response-body-info)
         * @param responseStatus The response's status code
         * @param deliveryType The delivery type. Default: ''.
         * @since v18.2.0, v16.17.0
         */
        markResourceTiming'
          Parameter
            Identifier: '
            timingInfo'
            ObjectKeyword
          Parameter
            Identifier: '
            requestedUrl'
            StringKeyword
          Parameter
            Identifier: '
            initiatorType'
            StringKeyword
          Parameter
            Identifier: '
            global'
            ObjectKeyword
          Parameter
            Identifier: '
            cacheMode'
            UnionType
              LiteralType
                StringLiteral
              LiteralType
                StringLiteral
          Parameter
            Identifier: '
            bodyInfo'
            ObjectKeyword
          Parameter
            Identifier: '
            responseStatus'
            NumberKeyword
          Parameter
            Identifier: '
            deliveryType'
            QuestionToken
            StringKeyword
          TypeReference
            Identifier: ' PerformanceResourceTiming'
        MethodSignature
          Identifier: '
        /**
         * Creates a new PerformanceMeasure entry in the Performance Timeline.
         * A PerformanceMeasure is a subclass of PerformanceEntry whose performanceEntry.entryType is always 'measure',
         * and whose performanceEntry.duration measures the number of milliseconds elapsed since startMark and endMark.
         *
         * The startMark argument may identify any existing PerformanceMark in the the Performance Timeline, or may identify
         * any of the timestamp properties provided by the PerformanceNodeTiming class. If the named startMark does not exist,
         * then startMark is set to timeOrigin by default.
         *
         * The endMark argument must identify any existing PerformanceMark in the the Performance Timeline or any of the timestamp
         * properties provided by the PerformanceNodeTiming class. If the named endMark does not exist, an error will be thrown.
         * @param name
         * @param startMark
         * @param endMark
         * @return The PerformanceMeasure entry that was created
         */
        measure'
          Parameter
            Identifier: 'name'
            StringKeyword
          Parameter
            Identifier: ' startMark'
            QuestionToken
            StringKeyword
          Parameter
            Identifier: ' endMark'
            QuestionToken
            StringKeyword
          TypeReference
            Identifier: ' PerformanceMeasure'
        MethodSignature
          Identifier: '
        measure'
          Parameter
            Identifier: 'name'
            StringKeyword
          Parameter
            Identifier: ' options'
            TypeReference
              Identifier: ' MeasureOptions'
          TypeReference
            Identifier: ' PerformanceMeasure'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' nodeTiming'
          TypeReference
            Identifier: ' PerformanceNodeTiming'
        MethodSignature
          Identifier: '
        /**
         * Returns the current high resolution millisecond timestamp, where 0 represents the start of the current `node` process.
         * @since v8.5.0
         */
        now'
          NumberKeyword
        MethodSignature
          Identifier: '
        /**
         * Sets the global performance resource timing buffer size to the specified number of "resource" type performance entry objects.
         *
         * By default the max buffer size is set to 250.
         * @since v18.8.0
         */
        setResourceTimingBufferSize'
          Parameter
            Identifier: 'maxSize'
            NumberKeyword
          VoidKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' timeOrigin'
          NumberKeyword
        MethodSignature
          Identifier: '
        /**
         * _This property is an extension by Node.js. It is not available in Web browsers._
         *
         * Wraps a function within a new function that measures the running time of the wrapped function.
         * A `PerformanceObserver` must be subscribed to the `'function'` event type in order for the timing details to be accessed.
         *
         * ```js
         * const {
         *   performance,
         *   PerformanceObserver,
         * } = require('node:perf_hooks');
         *
         * function someFunction() {
         *   console.log('hello world');
         * }
         *
         * const wrapped = performance.timerify(someFunction);
         *
         * const obs = new PerformanceObserver((list) => {
         *   console.log(list.getEntries()[0].duration);
         *
         *   performance.clearMarks();
         *   performance.clearMeasures();
         *   obs.disconnect();
         * });
         * obs.observe({ entryTypes: ['function'] });
         *
         * // A performance timeline entry will be created
         * wrapped();
         * ```
         *
         * If the wrapped function returns a promise, a finally handler will be attached to the promise and the duration will be reported
         * once the finally handler is invoked.
         * @param fn
         */
        timerify'
          TypeParameter
            Identifier: 'T'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'params'
                ArrayType
                  AnyKeyword
              AnyKeyword
          Parameter
            Identifier: 'fn'
            TypeReference
              Identifier: ' T'
          Parameter
            Identifier: ' options'
            QuestionToken
            TypeReference
              Identifier: ' TimerifyOptions'
          TypeReference
            Identifier: ' T'
        MethodSignature
          Identifier: '
        /**
         * An object which is JSON representation of the performance object. It is similar to
         * [`window.performance.toJSON`](https://developer.mozilla.org/en-US/docs/Web/API/Performance/toJSON) in browsers.
         * @since v16.1.0
         */
        toJSON'
          AnyKeyword
      ClassDeclaration
        Identifier: ' PerformanceObserverEntryList'
        MethodDeclaration
          Identifier: '
        /**
         * Returns a list of `PerformanceEntry` objects in chronological order
         * with respect to `performanceEntry.startTime`.
         *
         * ```js
         * const {
         *   performance,
         *   PerformanceObserver,
         * } = require('node:perf_hooks');
         *
         * const obs = new PerformanceObserver((perfObserverList, observer) => {
         *   console.log(perfObserverList.getEntries());
         *
         *    * [
         *    *   PerformanceEntry {
         *    *     name: 'test',
         *    *     entryType: 'mark',
         *    *     startTime: 81.465639,
         *    *     duration: 0,
         *    *     detail: null
         *    *   },
         *    *   PerformanceEntry {
         *    *     name: 'meow',
         *    *     entryType: 'mark',
         *    *     startTime: 81.860064,
         *    *     duration: 0,
         *    *     detail: null
         *    *   }
         *    * ]
         *
         *   performance.clearMarks();
         *   performance.clearMeasures();
         *   observer.disconnect();
         * });
         * obs.observe({ type: 'mark' });
         *
         * performance.mark('test');
         * performance.mark('meow');
         * ```
         * @since v8.5.0
         */
        getEntries'
          ArrayType
            TypeReference
              Identifier: ' PerformanceEntry'
        MethodDeclaration
          Identifier: '
        /**
         * Returns a list of `PerformanceEntry` objects in chronological order
         * with respect to `performanceEntry.startTime` whose `performanceEntry.name` is
         * equal to `name`, and optionally, whose `performanceEntry.entryType` is equal to`type`.
         *
         * ```js
         * const {
         *   performance,
         *   PerformanceObserver,
         * } = require('node:perf_hooks');
         *
         * const obs = new PerformanceObserver((perfObserverList, observer) => {
         *   console.log(perfObserverList.getEntriesByName('meow'));
         *
         *    * [
         *    *   PerformanceEntry {
         *    *     name: 'meow',
         *    *     entryType: 'mark',
         *    *     startTime: 98.545991,
         *    *     duration: 0,
         *    *     detail: null
         *    *   }
         *    * ]
         *
         *   console.log(perfObserverList.getEntriesByName('nope')); // []
         *
         *   console.log(perfObserverList.getEntriesByName('test', 'mark'));
         *
         *    * [
         *    *   PerformanceEntry {
         *    *     name: 'test',
         *    *     entryType: 'mark',
         *    *     startTime: 63.518931,
         *    *     duration: 0,
         *    *     detail: null
         *    *   }
         *    * ]
         *
         *   console.log(perfObserverList.getEntriesByName('test', 'measure')); // []
         *
         *   performance.clearMarks();
         *   performance.clearMeasures();
         *   observer.disconnect();
         * });
         * obs.observe({ entryTypes: ['mark', 'measure'] });
         *
         * performance.mark('test');
         * performance.mark('meow');
         * ```
         * @since v8.5.0
         */
        getEntriesByName'
          Parameter
            Identifier: 'name'
            StringKeyword
          Parameter
            Identifier: ' type'
            QuestionToken
            TypeReference
              Identifier: ' EntryType'
          ArrayType
            TypeReference
              Identifier: ' PerformanceEntry'
        MethodDeclaration
          Identifier: '
        /**
         * Returns a list of `PerformanceEntry` objects in chronological order
         * with respect to `performanceEntry.startTime` whose `performanceEntry.entryType` is equal to `type`.
         *
         * ```js
         * const {
         *   performance,
         *   PerformanceObserver,
         * } = require('node:perf_hooks');
         *
         * const obs = new PerformanceObserver((perfObserverList, observer) => {
         *   console.log(perfObserverList.getEntriesByType('mark'));
         *
         *    * [
         *    *   PerformanceEntry {
         *    *     name: 'test',
         *    *     entryType: 'mark',
         *    *     startTime: 55.897834,
         *    *     duration: 0,
         *    *     detail: null
         *    *   },
         *    *   PerformanceEntry {
         *    *     name: 'meow',
         *    *     entryType: 'mark',
         *    *     startTime: 56.350146,
         *    *     duration: 0,
         *    *     detail: null
         *    *   }
         *    * ]
         *
         *   performance.clearMarks();
         *   performance.clearMeasures();
         *   observer.disconnect();
         * });
         * obs.observe({ type: 'mark' });
         *
         * performance.mark('test');
         * performance.mark('meow');
         * ```
         * @since v8.5.0
         */
        getEntriesByType'
          Parameter
            Identifier: 'type'
            TypeReference
              Identifier: ' EntryType'
          ArrayType
            TypeReference
              Identifier: ' PerformanceEntry'
      TypeAliasDeclaration
        Identifier: ' PerformanceObserverCallback'
        FunctionType
          Parameter
            Identifier: 'list'
            TypeReference
              Identifier: ' PerformanceObserverEntryList'
          Parameter
            Identifier: ' observer'
            TypeReference
              Identifier: ' PerformanceObserver'
          VoidKeyword
      ClassDeclaration
        Identifier: ' PerformanceObserver'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' AsyncResource'
        Constructor
          Parameter
            Identifier: 'callback'
            TypeReference
              Identifier: ' PerformanceObserverCallback'
        MethodDeclaration
          Identifier: '
        /**
         * Disconnects the `PerformanceObserver` instance from all notifications.
         * @since v8.5.0
         */
        disconnect'
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Subscribes the `PerformanceObserver` instance to notifications of new `PerformanceEntry` instances identified either by `options.entryTypes` or `options.type`:
         *
         * ```js
         * const {
         *   performance,
         *   PerformanceObserver,
         * } = require('node:perf_hooks');
         *
         * const obs = new PerformanceObserver((list, observer) => {
         *   // Called once asynchronously. `list` contains three items.
         * });
         * obs.observe({ type: 'mark' });
         *
         * for (let n = 0; n < 3; n++)
         *   performance.mark(`test${n}`);
         * ```
         * @since v8.5.0
         */
        observe'
          Parameter
            Identifier: '
            options'
            UnionType
              TypeLiteral
                PropertySignature
                  Identifier: '
                    entryTypes'
                  TypeOperator
                    ArrayType
                      TypeReference
                        Identifier: ' EntryType'
                PropertySignature
                  Identifier: '
                    buffered'
                  QuestionToken
                  UnionType
                    BooleanKeyword
                    UndefinedKeyword
              TypeLiteral
                PropertySignature
                  Identifier: '
                    type'
                  TypeReference
                    Identifier: ' EntryType'
                PropertySignature
                  Identifier: '
                    buffered'
                  QuestionToken
                  UnionType
                    BooleanKeyword
                    UndefinedKeyword
          VoidKeyword
      ClassDeclaration
        Identifier: ' PerformanceResourceTiming'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' PerformanceEntry'
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' entryType'
          LiteralType
            StringLiteral
        Constructor
          ProtectedKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' workerStart'
          NumberKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' redirectStart'
          NumberKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' redirectEnd'
          NumberKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' fetchStart'
          NumberKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' domainLookupStart'
          NumberKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' domainLookupEnd'
          NumberKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' connectStart'
          NumberKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' connectEnd'
          NumberKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' secureConnectionStart'
          NumberKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' requestStart'
          NumberKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' responseEnd'
          NumberKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' transferSize'
          NumberKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' encodedBodySize'
          NumberKeyword
        PropertyDeclaration
          ReadonlyKeyword
          Identifier: ' decodedBodySize'
          NumberKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Returns a `object` that is the JSON representation of the `PerformanceResourceTiming` object
         * @since v18.2.0, v16.17.0
         */
        toJSON'
          AnyKeyword
      ModuleDeclaration
        Identifier: ' constants'
        ModuleBlock
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' NODE_PERFORMANCE_GC_MAJOR'
                NumberKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' NODE_PERFORMANCE_GC_MINOR'
                NumberKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' NODE_PERFORMANCE_GC_INCREMENTAL'
                NumberKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' NODE_PERFORMANCE_GC_WEAKCB'
                NumberKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' NODE_PERFORMANCE_GC_FLAGS_NO'
                NumberKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' NODE_PERFORMANCE_GC_FLAGS_CONSTRUCT_RETAINED'
                NumberKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' NODE_PERFORMANCE_GC_FLAGS_FORCED'
                NumberKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' NODE_PERFORMANCE_GC_FLAGS_SYNCHRONOUS_PHANTOM_PROCESSING'
                NumberKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' NODE_PERFORMANCE_GC_FLAGS_ALL_AVAILABLE_GARBAGE'
                NumberKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' NODE_PERFORMANCE_GC_FLAGS_ALL_EXTERNAL_MEMORY'
                NumberKeyword
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' NODE_PERFORMANCE_GC_FLAGS_SCHEDULE_IDLE'
                NumberKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' performance'
            TypeReference
              Identifier: ' Performance'
      InterfaceDeclaration
        Identifier: ' EventLoopMonitorOptions'
        PropertySignature
          Identifier: '
        /**
         * The sampling rate in milliseconds.
         * Must be greater than zero.
         * @default 10
         */
        resolution'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
      InterfaceDeclaration
        Identifier: ' Histogram'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' count'
          NumberKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' countBigInt'
          BigIntKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' exceeds'
          NumberKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' exceedsBigInt'
          BigIntKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' max'
          NumberKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' maxBigInt'
          NumberKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' mean'
          NumberKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' min'
          NumberKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' minBigInt'
          BigIntKeyword
        MethodSignature
          Identifier: '
        /**
         * Returns the value at the given percentile.
         * @since v11.10.0
         * @param percentile A percentile value in the range (0, 100].
         */
        percentile'
          Parameter
            Identifier: 'percentile'
            NumberKeyword
          NumberKeyword
        MethodSignature
          Identifier: '
        /**
         * Returns the value at the given percentile.
         * @since v17.4.0, v16.14.0
         * @param percentile A percentile value in the range (0, 100].
         */
        percentileBigInt'
          Parameter
            Identifier: 'percentile'
            NumberKeyword
          BigIntKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' percentiles'
          TypeReference
            Identifier: ' Map'
            NumberKeyword
            NumberKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' percentilesBigInt'
          TypeReference
            Identifier: ' Map'
            BigIntKeyword
            BigIntKeyword
        MethodSignature
          Identifier: '
        /**
         * Resets the collected histogram data.
         * @since v11.10.0
         */
        reset'
          VoidKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' stddev'
          NumberKeyword
      InterfaceDeclaration
        Identifier: ' IntervalHistogram'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Histogram'
        MethodSignature
          Identifier: '
        /**
         * Enables the update interval timer. Returns `true` if the timer was
         * started, `false` if it was already started.
         * @since v11.10.0
         */
        enable'
          BooleanKeyword
        MethodSignature
          Identifier: '
        /**
         * Disables the update interval timer. Returns `true` if the timer was
         * stopped, `false` if it was already stopped.
         * @since v11.10.0
         */
        disable'
          BooleanKeyword
      InterfaceDeclaration
        Identifier: ' RecordableHistogram'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' Histogram'
        MethodSignature
          Identifier: '
        /**
         * @since v15.9.0, v14.18.0
         * @param val The amount to record in the histogram.
         */
        record'
          Parameter
            Identifier: 'val'
            UnionType
              NumberKeyword
              BigIntKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        /**
         * Calculates the amount of time (in nanoseconds) that has passed since the
         * previous call to `recordDelta()` and records that amount in the histogram.
         * @since v15.9.0, v14.18.0
         */
        recordDelta'
          VoidKeyword
        MethodSignature
          Identifier: '
        /**
         * Adds the values from `other` to this histogram.
         * @since v17.4.0, v16.14.0
         */
        add'
          Parameter
            Identifier: 'other'
            TypeReference
              Identifier: ' RecordableHistogram'
          VoidKeyword
      FunctionDeclaration
        Identifier: ' monitorEventLoopDelay'
        Parameter
          Identifier: 'options'
          QuestionToken
          TypeReference
            Identifier: ' EventLoopMonitorOptions'
        TypeReference
          Identifier: ' IntervalHistogram'
      InterfaceDeclaration
        Identifier: ' CreateHistogramOptions'
        PropertySignature
          Identifier: '
        /**
         * The minimum recordable value. Must be an integer value greater than 0.
         * @default 1
         */
        min'
          QuestionToken
          UnionType
            NumberKeyword
            BigIntKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * The maximum recordable value. Must be an integer value greater than min.
         * @default Number.MAX_SAFE_INTEGER
         */
        max'
          QuestionToken
          UnionType
            NumberKeyword
            BigIntKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * The number of accuracy digits. Must be a number between 1 and 5.
         * @default 3
         */
        figures'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
      FunctionDeclaration
        Identifier: ' createHistogram'
        Parameter
          Identifier: 'options'
          QuestionToken
          TypeReference
            Identifier: ' CreateHistogramOptions'
        TypeReference
          Identifier: ' RecordableHistogram'
      ImportDeclaration
        ImportClause
          NamedImports
            ImportSpecifier
              Identifier: '
        performance'
              Identifier: ' _performance'
            ImportSpecifier
              Identifier: '
        PerformanceEntry'
              Identifier: ' _PerformanceEntry'
            ImportSpecifier
              Identifier: '
        PerformanceMark'
              Identifier: ' _PerformanceMark'
            ImportSpecifier
              Identifier: '
        PerformanceMeasure'
              Identifier: ' _PerformanceMeasure'
            ImportSpecifier
              Identifier: '
        PerformanceObserver'
              Identifier: ' _PerformanceObserver'
            ImportSpecifier
              Identifier: '
        PerformanceObserverEntryList'
              Identifier: ' _PerformanceObserverEntryList'
            ImportSpecifier
              Identifier: '
        PerformanceResourceTiming'
              Identifier: ' _PerformanceResourceTiming'
        StringLiteral
      ModuleDeclaration
        Identifier: '
    global'
        ModuleBlock
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' PerformanceEntry'
                ConditionalType
                  TypeQuery
                    Identifier: ' globalThis'
                  TypeLiteral
                    PropertySignature
                      Identifier: '
            onmessage'
                      AnyKeyword
                    PropertySignature
                      Identifier: '
            PerformanceEntry'
                      InferType
                        TypeParameter
                          Identifier: ' T'
                  TypeReference
                    Identifier: ' T'
                  TypeQuery
                    Identifier: ' _PerformanceEntry'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' PerformanceMark'
                ConditionalType
                  TypeQuery
                    Identifier: ' globalThis'
                  TypeLiteral
                    PropertySignature
                      Identifier: '
            onmessage'
                      AnyKeyword
                    PropertySignature
                      Identifier: '
            PerformanceMark'
                      InferType
                        TypeParameter
                          Identifier: ' T'
                  TypeReference
                    Identifier: ' T'
                  TypeQuery
                    Identifier: ' _PerformanceMark'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' PerformanceMeasure'
                ConditionalType
                  TypeQuery
                    Identifier: ' globalThis'
                  TypeLiteral
                    PropertySignature
                      Identifier: '
            onmessage'
                      AnyKeyword
                    PropertySignature
                      Identifier: '
            PerformanceMeasure'
                      InferType
                        TypeParameter
                          Identifier: ' T'
                  TypeReference
                    Identifier: ' T'
                  TypeQuery
                    Identifier: ' _PerformanceMeasure'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' PerformanceObserver'
                ConditionalType
                  TypeQuery
                    Identifier: ' globalThis'
                  TypeLiteral
                    PropertySignature
                      Identifier: '
            onmessage'
                      AnyKeyword
                    PropertySignature
                      Identifier: '
            PerformanceObserver'
                      InferType
                        TypeParameter
                          Identifier: ' T'
                  TypeReference
                    Identifier: ' T'
                  TypeQuery
                    Identifier: ' _PerformanceObserver'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' PerformanceObserverEntryList'
                ConditionalType
                  TypeQuery
                    Identifier: ' globalThis'
                  TypeLiteral
                    PropertySignature
                      Identifier: '
            onmessage'
                      AnyKeyword
                    PropertySignature
                      Identifier: '
            PerformanceObserverEntryList'
                      InferType
                        TypeParameter
                          Identifier: ' T'
                  TypeReference
                    Identifier: ' T'
                  TypeQuery
                    Identifier: ' _PerformanceObserverEntryList'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' PerformanceResourceTiming'
                ConditionalType
                  TypeQuery
                    Identifier: ' globalThis'
                  TypeLiteral
                    PropertySignature
                      Identifier: '
            onmessage'
                      AnyKeyword
                    PropertySignature
                      Identifier: '
            PerformanceResourceTiming'
                      InferType
                        TypeParameter
                          Identifier: ' T'
                  TypeReference
                    Identifier: ' T'
                  TypeQuery
                    Identifier: ' _PerformanceResourceTiming'
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' performance'
                ConditionalType
                  TypeQuery
                    Identifier: ' globalThis'
                  TypeLiteral
                    PropertySignature
                      Identifier: '
            onmessage'
                      AnyKeyword
                    PropertySignature
                      Identifier: '
            performance'
                      InferType
                        TypeParameter
                          Identifier: ' T'
                  TypeReference
                    Identifier: ' T'
                  TypeQuery
                    Identifier: ' _performance'
  ModuleDeclaration
    DeclareKeyword
    StringLiteral
    ModuleBlock
      ExportDeclaration
        StringLiteral
