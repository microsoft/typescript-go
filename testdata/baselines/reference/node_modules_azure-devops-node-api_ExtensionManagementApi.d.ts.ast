SourceFile
  ImportEqualsDeclaration
    Identifier: ' basem'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' VsoBaseInterfaces'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' ExtensionManagementInterfaces'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' GalleryInterfaces'
    ExternalModuleReference
      StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' IExtensionManagementApi'
    HeritageClause
      ExpressionWithTypeArguments
        PropertyAccessExpression
          Identifier: ' basem'
          Identifier: 'ClientApiBase'
    MethodSignature
      Identifier: '
    getAcquisitionOptions'
      Parameter
        Identifier: 'itemId'
        StringKeyword
      Parameter
        Identifier: ' testCommerce'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' isFreeOrTrialInstall'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' isAccountOwner'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' isLinked'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' isConnectedServer'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' isBuyOperationValid'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ExtensionManagementInterfaces'
            Identifier: 'AcquisitionOptions'
    MethodSignature
      Identifier: '
    requestAcquisition'
      Parameter
        Identifier: 'acquisitionRequest'
        TypeReference
          QualifiedName
            Identifier: ' ExtensionManagementInterfaces'
            Identifier: 'ExtensionAcquisitionRequest'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ExtensionManagementInterfaces'
            Identifier: 'ExtensionAcquisitionRequest'
    MethodSignature
      Identifier: '
    getAuditLog'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ExtensionManagementInterfaces'
            Identifier: 'ExtensionAuditLog'
    MethodSignature
      Identifier: '
    registerAuthorization'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' registrationId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ExtensionManagementInterfaces'
            Identifier: 'ExtensionAuthorization'
    MethodSignature
      Identifier: '
    createDocumentByName'
      Parameter
        Identifier: 'doc'
        AnyKeyword
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' scopeType'
        StringKeyword
      Parameter
        Identifier: ' scopeValue'
        StringKeyword
      Parameter
        Identifier: ' collectionName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        AnyKeyword
    MethodSignature
      Identifier: '
    deleteDocumentByName'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' scopeType'
        StringKeyword
      Parameter
        Identifier: ' scopeValue'
        StringKeyword
      Parameter
        Identifier: ' collectionName'
        StringKeyword
      Parameter
        Identifier: ' documentId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getDocumentByName'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' scopeType'
        StringKeyword
      Parameter
        Identifier: ' scopeValue'
        StringKeyword
      Parameter
        Identifier: ' collectionName'
        StringKeyword
      Parameter
        Identifier: ' documentId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        AnyKeyword
    MethodSignature
      Identifier: '
    getDocumentsByName'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' scopeType'
        StringKeyword
      Parameter
        Identifier: ' scopeValue'
        StringKeyword
      Parameter
        Identifier: ' collectionName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          AnyKeyword
    MethodSignature
      Identifier: '
    setDocumentByName'
      Parameter
        Identifier: 'doc'
        AnyKeyword
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' scopeType'
        StringKeyword
      Parameter
        Identifier: ' scopeValue'
        StringKeyword
      Parameter
        Identifier: ' collectionName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        AnyKeyword
    MethodSignature
      Identifier: '
    updateDocumentByName'
      Parameter
        Identifier: 'doc'
        AnyKeyword
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' scopeType'
        StringKeyword
      Parameter
        Identifier: ' scopeValue'
        StringKeyword
      Parameter
        Identifier: ' collectionName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        AnyKeyword
    MethodSignature
      Identifier: '
    queryCollectionsByName'
      Parameter
        Identifier: 'collectionQuery'
        TypeReference
          QualifiedName
            Identifier: ' ExtensionManagementInterfaces'
            Identifier: 'ExtensionDataCollectionQuery'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ExtensionManagementInterfaces'
              Identifier: 'ExtensionDataCollection'
    MethodSignature
      Identifier: '
    getStates'
      Parameter
        Identifier: 'includeDisabled'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' includeErrors'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' includeInstallationIssues'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' forceRefresh'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ExtensionManagementInterfaces'
              Identifier: 'ExtensionState'
    MethodSignature
      Identifier: '
    queryExtensions'
      Parameter
        Identifier: 'query'
        TypeReference
          QualifiedName
            Identifier: ' ExtensionManagementInterfaces'
            Identifier: 'InstalledExtensionQuery'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ExtensionManagementInterfaces'
              Identifier: 'InstalledExtension'
    MethodSignature
      Identifier: '
    getInstalledExtensions'
      Parameter
        Identifier: 'includeDisabledExtensions'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' includeErrors'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' assetTypes'
        QuestionToken
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' includeInstallationIssues'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ExtensionManagementInterfaces'
              Identifier: 'InstalledExtension'
    MethodSignature
      Identifier: '
    updateInstalledExtension'
      Parameter
        Identifier: 'extension'
        TypeReference
          QualifiedName
            Identifier: ' ExtensionManagementInterfaces'
            Identifier: 'InstalledExtension'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ExtensionManagementInterfaces'
            Identifier: 'InstalledExtension'
    MethodSignature
      Identifier: '
    getInstalledExtensionByName'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' assetTypes'
        QuestionToken
        ArrayType
          StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ExtensionManagementInterfaces'
            Identifier: 'InstalledExtension'
    MethodSignature
      Identifier: '
    installExtensionByName'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' version'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ExtensionManagementInterfaces'
            Identifier: 'InstalledExtension'
    MethodSignature
      Identifier: '
    uninstallExtensionByName'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' reason'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' reasonCode'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getPolicies'
      Parameter
        Identifier: 'userId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'UserExtensionPolicy'
    MethodSignature
      Identifier: '
    resolveRequest'
      Parameter
        Identifier: 'rejectMessage'
        StringKeyword
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' requesterId'
        StringKeyword
      Parameter
        Identifier: ' state'
        TypeReference
          QualifiedName
            Identifier: ' ExtensionManagementInterfaces'
            Identifier: 'ExtensionRequestState'
      TypeReference
        Identifier: ' Promise'
        NumberKeyword
    MethodSignature
      Identifier: '
    getRequests'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ExtensionManagementInterfaces'
              Identifier: 'RequestedExtension'
    MethodSignature
      Identifier: '
    resolveAllRequests'
      Parameter
        Identifier: 'rejectMessage'
        StringKeyword
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' state'
        TypeReference
          QualifiedName
            Identifier: ' ExtensionManagementInterfaces'
            Identifier: 'ExtensionRequestState'
      TypeReference
        Identifier: ' Promise'
        NumberKeyword
    MethodSignature
      Identifier: '
    deleteRequest'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    requestExtension'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' requestMessage'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ExtensionManagementInterfaces'
            Identifier: 'RequestedExtension'
    MethodSignature
      Identifier: '
    getToken'
      TypeReference
        Identifier: ' Promise'
        StringKeyword
  ClassDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' ExtensionManagementApi'
    HeritageClause
      ExpressionWithTypeArguments
        PropertyAccessExpression
          Identifier: ' basem'
          Identifier: 'ClientApiBase'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' IExtensionManagementApi'
    Constructor
      Parameter
        Identifier: 'baseUrl'
        StringKeyword
      Parameter
        Identifier: ' handlers'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' VsoBaseInterfaces'
              Identifier: 'IRequestHandler'
      Parameter
        Identifier: ' options'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' VsoBaseInterfaces'
            Identifier: 'IRequestOptions'
    PropertyDeclaration
      StaticKeyword
      ReadonlyKeyword
      Identifier: ' RESOURCE_AREA_ID'
      StringLiteral
    MethodDeclaration
      Identifier: '
    /**
     * This API is called by acquisition/install page to get possible user actions like Buy/Request
     *
     * @param {string} itemId - Fully qualified name of extension (<publisher_id>.<extension_id>)
     * @param {boolean} testCommerce - Parameter to test paid preview extension without making azure plans public
     * @param {boolean} isFreeOrTrialInstall - Parameter represents install or trial workflow (required for legacy install flows)
     * @param {boolean} isAccountOwner - Parameter represents whether user is owner or PCA of an account
     * @param {boolean} isLinked - Parameter represents whether account is linked with a subscription
     * @param {boolean} isConnectedServer - Parameter represents whether Buy operation should be evaluated
     * @param {boolean} isBuyOperationValid
     */
    getAcquisitionOptions'
      Parameter
        Identifier: 'itemId'
        StringKeyword
      Parameter
        Identifier: ' testCommerce'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' isFreeOrTrialInstall'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' isAccountOwner'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' isLinked'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' isConnectedServer'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' isBuyOperationValid'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ExtensionManagementInterfaces'
            Identifier: 'AcquisitionOptions'
    MethodDeclaration
      Identifier: '
    /**
     * @param {ExtensionManagementInterfaces.ExtensionAcquisitionRequest} acquisitionRequest
     */
    requestAcquisition'
      Parameter
        Identifier: 'acquisitionRequest'
        TypeReference
          QualifiedName
            Identifier: ' ExtensionManagementInterfaces'
            Identifier: 'ExtensionAcquisitionRequest'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ExtensionManagementInterfaces'
            Identifier: 'ExtensionAcquisitionRequest'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} publisherName
     * @param {string} extensionName
     */
    getAuditLog'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ExtensionManagementInterfaces'
            Identifier: 'ExtensionAuditLog'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} publisherName
     * @param {string} extensionName
     * @param {string} registrationId
     */
    registerAuthorization'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' registrationId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ExtensionManagementInterfaces'
            Identifier: 'ExtensionAuthorization'
    MethodDeclaration
      Identifier: '
    /**
     * @param {any} doc
     * @param {string} publisherName
     * @param {string} extensionName
     * @param {string} scopeType
     * @param {string} scopeValue
     * @param {string} collectionName
     */
    createDocumentByName'
      Parameter
        Identifier: 'doc'
        AnyKeyword
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' scopeType'
        StringKeyword
      Parameter
        Identifier: ' scopeValue'
        StringKeyword
      Parameter
        Identifier: ' collectionName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        AnyKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} publisherName
     * @param {string} extensionName
     * @param {string} scopeType
     * @param {string} scopeValue
     * @param {string} collectionName
     * @param {string} documentId
     */
    deleteDocumentByName'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' scopeType'
        StringKeyword
      Parameter
        Identifier: ' scopeValue'
        StringKeyword
      Parameter
        Identifier: ' collectionName'
        StringKeyword
      Parameter
        Identifier: ' documentId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} publisherName
     * @param {string} extensionName
     * @param {string} scopeType
     * @param {string} scopeValue
     * @param {string} collectionName
     * @param {string} documentId
     */
    getDocumentByName'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' scopeType'
        StringKeyword
      Parameter
        Identifier: ' scopeValue'
        StringKeyword
      Parameter
        Identifier: ' collectionName'
        StringKeyword
      Parameter
        Identifier: ' documentId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        AnyKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} publisherName
     * @param {string} extensionName
     * @param {string} scopeType
     * @param {string} scopeValue
     * @param {string} collectionName
     */
    getDocumentsByName'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' scopeType'
        StringKeyword
      Parameter
        Identifier: ' scopeValue'
        StringKeyword
      Parameter
        Identifier: ' collectionName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          AnyKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {any} doc
     * @param {string} publisherName
     * @param {string} extensionName
     * @param {string} scopeType
     * @param {string} scopeValue
     * @param {string} collectionName
     */
    setDocumentByName'
      Parameter
        Identifier: 'doc'
        AnyKeyword
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' scopeType'
        StringKeyword
      Parameter
        Identifier: ' scopeValue'
        StringKeyword
      Parameter
        Identifier: ' collectionName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        AnyKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {any} doc
     * @param {string} publisherName
     * @param {string} extensionName
     * @param {string} scopeType
     * @param {string} scopeValue
     * @param {string} collectionName
     */
    updateDocumentByName'
      Parameter
        Identifier: 'doc'
        AnyKeyword
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' scopeType'
        StringKeyword
      Parameter
        Identifier: ' scopeValue'
        StringKeyword
      Parameter
        Identifier: ' collectionName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        AnyKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Query for one or more data collections for the specified extension.  Note: the token used for authorization must have been issued on behalf of the specified extension.
     *
     * @param {ExtensionManagementInterfaces.ExtensionDataCollectionQuery} collectionQuery
     * @param {string} publisherName - Name of the publisher. Example: "fabrikam".
     * @param {string} extensionName - Name of the extension. Example: "ops-tools".
     */
    queryCollectionsByName'
      Parameter
        Identifier: 'collectionQuery'
        TypeReference
          QualifiedName
            Identifier: ' ExtensionManagementInterfaces'
            Identifier: 'ExtensionDataCollectionQuery'
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ExtensionManagementInterfaces'
              Identifier: 'ExtensionDataCollection'
    MethodDeclaration
      Identifier: '
    /**
     * List state and version information for all installed extensions.
     *
     * @param {boolean} includeDisabled - If true (the default), include disabled extensions in the results.
     * @param {boolean} includeErrors - If true, include installed extensions in an error state in the results.
     * @param {boolean} includeInstallationIssues
     * @param {boolean} forceRefresh
     */
    getStates'
      Parameter
        Identifier: 'includeDisabled'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' includeErrors'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' includeInstallationIssues'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' forceRefresh'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ExtensionManagementInterfaces'
              Identifier: 'ExtensionState'
    MethodDeclaration
      Identifier: '
    /**
     * @param {ExtensionManagementInterfaces.InstalledExtensionQuery} query
     */
    queryExtensions'
      Parameter
        Identifier: 'query'
        TypeReference
          QualifiedName
            Identifier: ' ExtensionManagementInterfaces'
            Identifier: 'InstalledExtensionQuery'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ExtensionManagementInterfaces'
              Identifier: 'InstalledExtension'
    MethodDeclaration
      Identifier: '
    /**
     * List the installed extensions in the account / project collection.
     *
     * @param {boolean} includeDisabledExtensions - If true (the default), include disabled extensions in the results.
     * @param {boolean} includeErrors - If true, include installed extensions with errors.
     * @param {string[]} assetTypes - Determines which files are returned in the files array.  Provide the wildcard '*' to return all files, or a colon separated list to retrieve files with specific asset types.
     * @param {boolean} includeInstallationIssues
     */
    getInstalledExtensions'
      Parameter
        Identifier: 'includeDisabledExtensions'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' includeErrors'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' assetTypes'
        QuestionToken
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' includeInstallationIssues'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ExtensionManagementInterfaces'
              Identifier: 'InstalledExtension'
    MethodDeclaration
      Identifier: '
    /**
     * Update an installed extension. Typically this API is used to enable or disable an extension.
     *
     * @param {ExtensionManagementInterfaces.InstalledExtension} extension
     */
    updateInstalledExtension'
      Parameter
        Identifier: 'extension'
        TypeReference
          QualifiedName
            Identifier: ' ExtensionManagementInterfaces'
            Identifier: 'InstalledExtension'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ExtensionManagementInterfaces'
            Identifier: 'InstalledExtension'
    MethodDeclaration
      Identifier: '
    /**
     * Get an installed extension by its publisher and extension name.
     *
     * @param {string} publisherName - Name of the publisher. Example: "fabrikam".
     * @param {string} extensionName - Name of the extension. Example: "ops-tools".
     * @param {string[]} assetTypes - Determines which files are returned in the files array.  Provide the wildcard '*' to return all files, or a colon separated list to retrieve files with specific asset types.
     */
    getInstalledExtensionByName'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' assetTypes'
        QuestionToken
        ArrayType
          StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ExtensionManagementInterfaces'
            Identifier: 'InstalledExtension'
    MethodDeclaration
      Identifier: '
    /**
     * Install the specified extension into the account / project collection.
     *
     * @param {string} publisherName - Name of the publisher. Example: "fabrikam".
     * @param {string} extensionName - Name of the extension. Example: "ops-tools".
     * @param {string} version
     */
    installExtensionByName'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' version'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ExtensionManagementInterfaces'
            Identifier: 'InstalledExtension'
    MethodDeclaration
      Identifier: '
    /**
     * Uninstall the specified extension from the account / project collection.
     *
     * @param {string} publisherName - Name of the publisher. Example: "fabrikam".
     * @param {string} extensionName - Name of the extension. Example: "ops-tools".
     * @param {string} reason
     * @param {string} reasonCode
     */
    uninstallExtensionByName'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' reason'
        QuestionToken
        StringKeyword
      Parameter
        Identifier: ' reasonCode'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} userId
     */
    getPolicies'
      Parameter
        Identifier: 'userId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'GalleryInterfaces'
            Identifier: 'UserExtensionPolicy'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} rejectMessage
     * @param {string} publisherName
     * @param {string} extensionName
     * @param {string} requesterId
     * @param {ExtensionManagementInterfaces.ExtensionRequestState} state
     */
    resolveRequest'
      Parameter
        Identifier: 'rejectMessage'
        StringKeyword
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' requesterId'
        StringKeyword
      Parameter
        Identifier: ' state'
        TypeReference
          QualifiedName
            Identifier: ' ExtensionManagementInterfaces'
            Identifier: 'ExtensionRequestState'
      TypeReference
        Identifier: ' Promise'
        NumberKeyword
    MethodDeclaration
      Identifier: '
    /**
     */
    getRequests'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'ExtensionManagementInterfaces'
              Identifier: 'RequestedExtension'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} rejectMessage
     * @param {string} publisherName
     * @param {string} extensionName
     * @param {ExtensionManagementInterfaces.ExtensionRequestState} state
     */
    resolveAllRequests'
      Parameter
        Identifier: 'rejectMessage'
        StringKeyword
      Parameter
        Identifier: ' publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' state'
        TypeReference
          QualifiedName
            Identifier: ' ExtensionManagementInterfaces'
            Identifier: 'ExtensionRequestState'
      TypeReference
        Identifier: ' Promise'
        NumberKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} publisherName
     * @param {string} extensionName
     */
    deleteRequest'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} publisherName
     * @param {string} extensionName
     * @param {string} requestMessage
     */
    requestExtension'
      Parameter
        Identifier: 'publisherName'
        StringKeyword
      Parameter
        Identifier: ' extensionName'
        StringKeyword
      Parameter
        Identifier: ' requestMessage'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'ExtensionManagementInterfaces'
            Identifier: 'RequestedExtension'
    MethodDeclaration
      Identifier: '
    /**
     */
    getToken'
      TypeReference
        Identifier: ' Promise'
        StringKeyword
