SourceFile
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: '
    ApplicableRefactorInfo'
        ImportSpecifier
          Identifier: '
    CancellationToken'
        ImportSpecifier
          Identifier: '
    ClassDeclaration'
        ImportSpecifier
          Identifier: '
    Debug'
        ImportSpecifier
          Identifier: '
    Diagnostics'
        ImportSpecifier
          Identifier: '
    emptyArray'
        ImportSpecifier
          Identifier: '
    EnumDeclaration'
        ImportSpecifier
          Identifier: '
    ExportAssignment'
        ImportSpecifier
          Identifier: '
    ExportSpecifier'
        ImportSpecifier
          Identifier: '
    factory'
        ImportSpecifier
          Identifier: '
    FindAllReferences'
        ImportSpecifier
          Identifier: '
    findModifier'
        ImportSpecifier
          Identifier: '
    first'
        ImportSpecifier
          Identifier: '
    FunctionDeclaration'
        ImportSpecifier
          Identifier: '
    getLocaleSpecificMessage'
        ImportSpecifier
          Identifier: '
    getParentNodeInSpan'
        ImportSpecifier
          Identifier: '
    getRefactorContextSpan'
        ImportSpecifier
          Identifier: '
    getSyntacticModifierFlags'
        ImportSpecifier
          Identifier: '
    getTokenAtPosition'
        ImportSpecifier
          Identifier: '
    Identifier'
        ImportSpecifier
          Identifier: '
    ImportClause'
        ImportSpecifier
          Identifier: '
    ImportSpecifier'
        ImportSpecifier
          Identifier: '
    ImportTypeNode'
        ImportSpecifier
          Identifier: '
    InterfaceDeclaration'
        ImportSpecifier
          Identifier: '
    InternalSymbolName'
        ImportSpecifier
          Identifier: '
    isAmbientModule'
        ImportSpecifier
          Identifier: '
    isExportAssignment'
        ImportSpecifier
          Identifier: '
    isExternalModuleAugmentation'
        ImportSpecifier
          Identifier: '
    isIdentifier'
        ImportSpecifier
          Identifier: '
    isModuleBlock'
        ImportSpecifier
          Identifier: '
    isSourceFile'
        ImportSpecifier
          Identifier: '
    isStringLiteral'
        ImportSpecifier
          Identifier: '
    makeImport'
        ImportSpecifier
          Identifier: '
    ModifierFlags'
        ImportSpecifier
          Identifier: '
    ModuleBlock'
        ImportSpecifier
          Identifier: '
    ModuleExportName'
        ImportSpecifier
          Identifier: '
    NamespaceDeclaration'
        ImportSpecifier
          Identifier: '
    Node'
        ImportSpecifier
          Identifier: '
    NodeFlags'
        ImportSpecifier
          Identifier: '
    Program'
        ImportSpecifier
          Identifier: '
    PropertyAccessExpression'
        ImportSpecifier
          Identifier: '
    QuotePreference'
        ImportSpecifier
          Identifier: '
    quotePreferenceFromString'
        ImportSpecifier
          Identifier: '
    RefactorContext'
        ImportSpecifier
          Identifier: '
    RefactorEditInfo'
        ImportSpecifier
          Identifier: '
    SourceFile'
        ImportSpecifier
          Identifier: '
    Symbol'
        ImportSpecifier
          Identifier: '
    SyntaxKind'
        ImportSpecifier
          Identifier: '
    textChanges'
        ImportSpecifier
          Identifier: '
    TypeAliasDeclaration'
        ImportSpecifier
          Identifier: '
    TypeChecker'
        ImportSpecifier
          Identifier: '
    VariableStatement'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: '
    isRefactorErrorInfo'
        ImportSpecifier
          Identifier: '
    RefactorErrorInfo'
        ImportSpecifier
          Identifier: '
    registerRefactor'
    StringLiteral
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' refactorName'
        StringLiteral
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' defaultToNamedAction'
        ObjectLiteralExpression
          PropertyAssignment
            Identifier: '
    name'
            StringLiteral
          PropertyAssignment
            Identifier: '
    description'
            CallExpression
              Identifier: ' getLocaleSpecificMessage'
              PropertyAccessExpression
                Identifier: 'Diagnostics'
                Identifier: 'Convert_default_export_to_named_export'
          PropertyAssignment
            Identifier: '
    kind'
            StringLiteral
  VariableStatement
    VariableDeclarationList
      VariableDeclaration
        Identifier: ' namedToDefaultAction'
        ObjectLiteralExpression
          PropertyAssignment
            Identifier: '
    name'
            StringLiteral
          PropertyAssignment
            Identifier: '
    description'
            CallExpression
              Identifier: ' getLocaleSpecificMessage'
              PropertyAccessExpression
                Identifier: 'Diagnostics'
                Identifier: 'Convert_named_export_to_default_export'
          PropertyAssignment
            Identifier: '
    kind'
            StringLiteral
  ExpressionStatement
    CallExpression
      Identifier: '

registerRefactor'
      Identifier: 'refactorName'
      ObjectLiteralExpression
        PropertyAssignment
          Identifier: '
    kinds'
          ArrayLiteralExpression
            PropertyAccessExpression
              Identifier: '
        defaultToNamedAction'
              Identifier: 'kind'
            PropertyAccessExpression
              Identifier: '
        namedToDefaultAction'
              Identifier: 'kind'
        PropertyAssignment
          Identifier: '
    getAvailableActions'
          FunctionExpression
            Identifier: ' getRefactorActionsToConvertBetweenNamedAndDefaultExports'
            Parameter
              Identifier: 'context'
            TypeOperator
              ArrayType
                TypeReference
                  Identifier: ' ApplicableRefactorInfo'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' info'
                    CallExpression
                      Identifier: ' getInfo'
                      Identifier: 'context'
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: ' context'
                          Identifier: 'triggerReason'
                        EqualsEqualsEqualsToken
                        StringLiteral
              IfStatement
                PrefixUnaryExpression
                  Identifier: 'info'
                ReturnStatement
                  Identifier: ' emptyArray'
              IfStatement
                PrefixUnaryExpression
                  CallExpression
                    Identifier: 'isRefactorErrorInfo'
                    Identifier: 'info'
                Block
                  VariableStatement
                    VariableDeclarationList
                      VariableDeclaration
                        Identifier: ' action'
                        ConditionalExpression
                          PropertyAccessExpression
                            Identifier: ' info'
                            Identifier: 'wasDefault'
                          QuestionToken
                          Identifier: ' defaultToNamedAction'
                          ColonToken
                          Identifier: ' namedToDefaultAction'
                  ReturnStatement
                    ArrayLiteralExpression
                      ObjectLiteralExpression
                        PropertyAssignment
                          Identifier: ' name'
                          Identifier: ' refactorName'
                        PropertyAssignment
                          Identifier: ' description'
                          PropertyAccessExpression
                            Identifier: ' action'
                            Identifier: 'description'
                        PropertyAssignment
                          Identifier: ' actions'
                          ArrayLiteralExpression
                            Identifier: 'action'
              IfStatement
                PropertyAccessExpression
                  PropertyAccessExpression
                    Identifier: 'context'
                    Identifier: 'preferences'
                  Identifier: 'provideRefactorNotApplicableReason'
                Block
                  ReturnStatement
                    ArrayLiteralExpression
                      ObjectLiteralExpression
                        PropertyAssignment
                          Identifier: '
                    name'
                          Identifier: ' refactorName'
                        PropertyAssignment
                          Identifier: '
                    description'
                          CallExpression
                            Identifier: ' getLocaleSpecificMessage'
                            PropertyAccessExpression
                              Identifier: 'Diagnostics'
                              Identifier: 'Convert_default_export_to_named_export'
                        PropertyAssignment
                          Identifier: '
                    actions'
                          ArrayLiteralExpression
                            ObjectLiteralExpression
                              SpreadAssignment
                                Identifier: 'defaultToNamedAction'
                              PropertyAssignment
                                Identifier: ' notApplicableReason'
                                PropertyAccessExpression
                                  Identifier: ' info'
                                  Identifier: 'error'
                            ObjectLiteralExpression
                              SpreadAssignment
                                Identifier: 'namedToDefaultAction'
                              PropertyAssignment
                                Identifier: ' notApplicableReason'
                                PropertyAccessExpression
                                  Identifier: ' info'
                                  Identifier: 'error'
              ReturnStatement
                Identifier: ' emptyArray'
        PropertyAssignment
          Identifier: '
    getEditsForAction'
          FunctionExpression
            Identifier: ' getRefactorEditsToConvertBetweenNamedAndDefaultExports'
            Parameter
              Identifier: 'context'
            Parameter
              Identifier: ' actionName'
            TypeReference
              Identifier: ' RefactorEditInfo'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
        Debug'
                    Identifier: 'assert'
                  BinaryExpression
                    BinaryExpression
                      Identifier: 'actionName'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' defaultToNamedAction'
                        Identifier: 'name'
                    BarBarToken
                    BinaryExpression
                      Identifier: ' actionName'
                      EqualsEqualsEqualsToken
                      PropertyAccessExpression
                        Identifier: ' namedToDefaultAction'
                        Identifier: 'name'
                  StringLiteral
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' info'
                    CallExpression
                      Identifier: ' getInfo'
                      Identifier: 'context'
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
        Debug'
                    Identifier: 'assert'
                  BinaryExpression
                    Identifier: 'info'
                    AmpersandAmpersandToken
                    PrefixUnaryExpression
                      CallExpression
                        Identifier: 'isRefactorErrorInfo'
                        Identifier: 'info'
                  StringLiteral
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' edits'
                    CallExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: ' textChanges'
                          Identifier: 'ChangeTracker'
                        Identifier: 'with'
                      Identifier: 'context'
                      ArrowFunction
                        Parameter
                          Identifier: ' t'
                        EqualsGreaterThanToken
                        CallExpression
                          Identifier: ' doChange'
                          PropertyAccessExpression
                            Identifier: 'context'
                            Identifier: 'file'
                          PropertyAccessExpression
                            Identifier: ' context'
                            Identifier: 'program'
                          Identifier: ' info'
                          Identifier: ' t'
                          PropertyAccessExpression
                            Identifier: ' context'
                            Identifier: 'cancellationToken'
              ReturnStatement
                ObjectLiteralExpression
                  ShorthandPropertyAssignment
                    Identifier: ' edits'
                  PropertyAssignment
                    Identifier: ' renameFilename'
                    Identifier: ' undefined'
                  PropertyAssignment
                    Identifier: ' renameLocation'
                    Identifier: ' undefined'
  TypeAliasDeclaration
    Identifier: ' ExportToConvert'
    UnionType
      TypeReference
        Identifier: ' FunctionDeclaration'
      TypeReference
        Identifier: ' ClassDeclaration'
      TypeReference
        Identifier: ' InterfaceDeclaration'
      TypeReference
        Identifier: ' EnumDeclaration'
      TypeReference
        Identifier: ' NamespaceDeclaration'
      TypeReference
        Identifier: ' TypeAliasDeclaration'
      TypeReference
        Identifier: ' VariableStatement'
      TypeReference
        Identifier: ' ExportAssignment'
  InterfaceDeclaration
    Identifier: ' ExportInfo'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' exportNode'
      TypeReference
        Identifier: ' ExportToConvert'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' exportName'
      TypeReference
        Identifier: ' Identifier'
    PropertySignature
      ReadonlyKeyword
      Identifier: ' wasDefault'
      BooleanKeyword
    PropertySignature
      ReadonlyKeyword
      Identifier: ' exportingModuleSymbol'
      TypeReference
        Identifier: ' Symbol'
  FunctionDeclaration
    Identifier: ' getInfo'
    Parameter
      Identifier: 'context'
      TypeReference
        Identifier: ' RefactorContext'
    Parameter
      Identifier: ' considerPartialSpans'
      TrueKeyword
    UnionType
      TypeReference
        Identifier: ' ExportInfo'
      TypeReference
        Identifier: ' RefactorErrorInfo'
      UndefinedKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            ObjectBindingPattern
              BindingElement
                Identifier: ' file'
              BindingElement
                Identifier: ' program'
            Identifier: ' context'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' span'
            CallExpression
              Identifier: ' getRefactorContextSpan'
              Identifier: 'context'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' token'
            CallExpression
              Identifier: ' getTokenAtPosition'
              Identifier: 'file'
              PropertyAccessExpression
                Identifier: ' span'
                Identifier: 'start'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' exportNode'
            ConditionalExpression
              BinaryExpression
                PrefixUnaryExpression
                  PrefixUnaryExpression
                    ParenthesizedExpression
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier: 'token'
                          Identifier: 'parent'
                        AmpersandAmpersandToken
                        BinaryExpression
                          CallExpression
                            Identifier: ' getSyntacticModifierFlags'
                            PropertyAccessExpression
                              Identifier: 'token'
                              Identifier: 'parent'
                          AmpersandToken
                          PropertyAccessExpression
                            Identifier: ' ModifierFlags'
                            Identifier: 'Export'
                AmpersandAmpersandToken
                Identifier: ' considerPartialSpans'
              QuestionToken
              PropertyAccessExpression
                Identifier: ' token'
                Identifier: 'parent'
              ColonToken
              CallExpression
                Identifier: ' getParentNodeInSpan'
                Identifier: 'token'
                Identifier: ' file'
                Identifier: ' span'
      IfStatement
        BinaryExpression
          PrefixUnaryExpression
            Identifier: 'exportNode'
          BarBarToken
          ParenthesizedExpression
            BinaryExpression
              PrefixUnaryExpression
                CallExpression
                  Identifier: 'isSourceFile'
                  PropertyAccessExpression
                    Identifier: 'exportNode'
                    Identifier: 'parent'
              AmpersandAmpersandToken
              PrefixUnaryExpression
                ParenthesizedExpression
                  BinaryExpression
                    CallExpression
                      Identifier: 'isModuleBlock'
                      PropertyAccessExpression
                        Identifier: 'exportNode'
                        Identifier: 'parent'
                    AmpersandAmpersandToken
                    CallExpression
                      Identifier: ' isAmbientModule'
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: 'exportNode'
                          Identifier: 'parent'
                        Identifier: 'parent'
        Block
          ReturnStatement
            ObjectLiteralExpression
              PropertyAssignment
                Identifier: ' error'
                CallExpression
                  Identifier: ' getLocaleSpecificMessage'
                  PropertyAccessExpression
                    Identifier: 'Diagnostics'
                    Identifier: 'Could_not_find_export_statement'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' checker'
            CallExpression
              PropertyAccessExpression
                Identifier: ' program'
                Identifier: 'getTypeChecker'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' exportingModuleSymbol'
            CallExpression
              Identifier: ' getExportingModuleSymbol'
              PropertyAccessExpression
                Identifier: 'exportNode'
                Identifier: 'parent'
              Identifier: ' checker'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' flags'
            BinaryExpression
              CallExpression
                Identifier: ' getSyntacticModifierFlags'
                Identifier: 'exportNode'
              BarBarToken
              ParenthesizedExpression
                ConditionalExpression
                  ParenthesizedExpression
                    BinaryExpression
                      CallExpression
                        Identifier: 'isExportAssignment'
                        Identifier: 'exportNode'
                      AmpersandAmpersandToken
                      PrefixUnaryExpression
                        PropertyAccessExpression
                          Identifier: 'exportNode'
                          Identifier: 'isExportEquals'
                  QuestionToken
                  PropertyAccessExpression
                    Identifier: ' ModifierFlags'
                    Identifier: 'ExportDefault'
                  ColonToken
                  PropertyAccessExpression
                    Identifier: ' ModifierFlags'
                    Identifier: 'None'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' wasDefault'
            PrefixUnaryExpression
              PrefixUnaryExpression
                ParenthesizedExpression
                  BinaryExpression
                    Identifier: 'flags'
                    AmpersandToken
                    PropertyAccessExpression
                      Identifier: ' ModifierFlags'
                      Identifier: 'Default'
      IfStatement
        BinaryExpression
          PrefixUnaryExpression
            ParenthesizedExpression
              BinaryExpression
                Identifier: 'flags'
                AmpersandToken
                PropertyAccessExpression
                  Identifier: ' ModifierFlags'
                  Identifier: 'Export'
          BarBarToken
          BinaryExpression
            PrefixUnaryExpression
              Identifier: 'wasDefault'
            AmpersandAmpersandToken
            CallExpression
              PropertyAccessExpression
                NonNullExpression
                  PropertyAccessExpression
                    Identifier: ' exportingModuleSymbol'
                    Identifier: 'exports'
                Identifier: 'has'
              PropertyAccessExpression
                Identifier: 'InternalSymbolName'
                Identifier: 'Default'
        Block
          ReturnStatement
            ObjectLiteralExpression
              PropertyAssignment
                Identifier: ' error'
                CallExpression
                  Identifier: ' getLocaleSpecificMessage'
                  PropertyAccessExpression
                    Identifier: 'Diagnostics'
                    Identifier: 'This_file_already_has_a_default_export'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' noSymbolError'
            ArrowFunction
              Parameter
                Identifier: 'id'
                TypeReference
                  Identifier: ' Node'
              EqualsGreaterThanToken
              ConditionalExpression
                ParenthesizedExpression
                  BinaryExpression
                    CallExpression
                      Identifier: 'isIdentifier'
                      Identifier: 'id'
                    AmpersandAmpersandToken
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' checker'
                        Identifier: 'getSymbolAtLocation'
                      Identifier: 'id'
                QuestionToken
                Identifier: ' undefined'
                ColonToken
                ObjectLiteralExpression
                  PropertyAssignment
                    Identifier: ' error'
                    CallExpression
                      Identifier: ' getLocaleSpecificMessage'
                      PropertyAccessExpression
                        Identifier: 'Diagnostics'
                        Identifier: 'Can_only_convert_named_export'
      SwitchStatement
        PropertyAccessExpression
          Identifier: 'exportNode'
          Identifier: 'kind'
        CaseBlock
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'FunctionDeclaration'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ClassDeclaration'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'InterfaceDeclaration'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'EnumDeclaration'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'TypeAliasDeclaration'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ModuleDeclaration'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' node'
                    AsExpression
                      Identifier: ' exportNode'
                      UnionType
                        TypeReference
                          Identifier: ' FunctionDeclaration'
                        TypeReference
                          Identifier: ' ClassDeclaration'
                        TypeReference
                          Identifier: ' InterfaceDeclaration'
                        TypeReference
                          Identifier: ' EnumDeclaration'
                        TypeReference
                          Identifier: ' TypeAliasDeclaration'
                        TypeReference
                          Identifier: ' NamespaceDeclaration'
              IfStatement
                PrefixUnaryExpression
                  PropertyAccessExpression
                    Identifier: 'node'
                    Identifier: 'name'
                ReturnStatement
                  Identifier: ' undefined'
              ReturnStatement
                BinaryExpression
                  CallExpression
                    Identifier: ' noSymbolError'
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'name'
                  BarBarToken
                  ObjectLiteralExpression
                    PropertyAssignment
                      Identifier: ' exportNode'
                      Identifier: ' node'
                    PropertyAssignment
                      Identifier: ' exportName'
                      PropertyAccessExpression
                        Identifier: ' node'
                        Identifier: 'name'
                    ShorthandPropertyAssignment
                      Identifier: ' wasDefault'
                    ShorthandPropertyAssignment
                      Identifier: ' exportingModuleSymbol'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'VariableStatement'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' vs'
                    AsExpression
                      Identifier: ' exportNode'
                      TypeReference
                        Identifier: ' VariableStatement'
              IfStatement
                BinaryExpression
                  PrefixUnaryExpression
                    ParenthesizedExpression
                      BinaryExpression
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: 'vs'
                            Identifier: 'declarationList'
                          Identifier: 'flags'
                        AmpersandToken
                        PropertyAccessExpression
                          Identifier: ' NodeFlags'
                          Identifier: 'Const'
                  BarBarToken
                  BinaryExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: ' vs'
                          Identifier: 'declarationList'
                        Identifier: 'declarations'
                      Identifier: 'length'
                    ExclamationEqualsEqualsToken
                    NumericLiteral
                Block
                  ReturnStatement
                    Identifier: ' undefined'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' decl'
                    CallExpression
                      Identifier: ' first'
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: 'vs'
                          Identifier: 'declarationList'
                        Identifier: 'declarations'
              IfStatement
                PrefixUnaryExpression
                  PropertyAccessExpression
                    Identifier: 'decl'
                    Identifier: 'initializer'
                ReturnStatement
                  Identifier: ' undefined'
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            Debug'
                    Identifier: 'assert'
                  PrefixUnaryExpression
                    Identifier: 'wasDefault'
                  StringLiteral
              ReturnStatement
                BinaryExpression
                  CallExpression
                    Identifier: ' noSymbolError'
                    PropertyAccessExpression
                      Identifier: 'decl'
                      Identifier: 'name'
                  BarBarToken
                  ObjectLiteralExpression
                    PropertyAssignment
                      Identifier: ' exportNode'
                      Identifier: ' vs'
                    PropertyAssignment
                      Identifier: ' exportName'
                      AsExpression
                        PropertyAccessExpression
                          Identifier: ' decl'
                          Identifier: 'name'
                        TypeReference
                          Identifier: ' Identifier'
                    ShorthandPropertyAssignment
                      Identifier: ' wasDefault'
                    ShorthandPropertyAssignment
                      Identifier: ' exportingModuleSymbol'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ExportAssignment'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' node'
                    AsExpression
                      Identifier: ' exportNode'
                      TypeReference
                        Identifier: ' ExportAssignment'
              IfStatement
                PropertyAccessExpression
                  Identifier: 'node'
                  Identifier: 'isExportEquals'
                ReturnStatement
                  Identifier: ' undefined'
              ReturnStatement
                BinaryExpression
                  CallExpression
                    Identifier: ' noSymbolError'
                    PropertyAccessExpression
                      Identifier: 'node'
                      Identifier: 'expression'
                  BarBarToken
                  ObjectLiteralExpression
                    PropertyAssignment
                      Identifier: ' exportNode'
                      Identifier: ' node'
                    PropertyAssignment
                      Identifier: ' exportName'
                      AsExpression
                        PropertyAccessExpression
                          Identifier: ' node'
                          Identifier: 'expression'
                        TypeReference
                          Identifier: ' Identifier'
                    ShorthandPropertyAssignment
                      Identifier: ' wasDefault'
                    ShorthandPropertyAssignment
                      Identifier: ' exportingModuleSymbol'
          DefaultClause
            ReturnStatement
              Identifier: ' undefined'
  FunctionDeclaration
    Identifier: ' doChange'
    Parameter
      Identifier: 'exportingSourceFile'
      TypeReference
        Identifier: ' SourceFile'
    Parameter
      Identifier: ' program'
      TypeReference
        Identifier: ' Program'
    Parameter
      Identifier: ' info'
      TypeReference
        Identifier: ' ExportInfo'
    Parameter
      Identifier: ' changes'
      TypeReference
        QualifiedName
          Identifier: ' textChanges'
          Identifier: 'ChangeTracker'
    Parameter
      Identifier: ' cancellationToken'
      UnionType
        TypeReference
          Identifier: ' CancellationToken'
        UndefinedKeyword
    VoidKeyword
    Block
      ExpressionStatement
        CallExpression
          Identifier: '
    changeExport'
          Identifier: 'exportingSourceFile'
          Identifier: ' info'
          Identifier: ' changes'
          CallExpression
            PropertyAccessExpression
              Identifier: ' program'
              Identifier: 'getTypeChecker'
      ExpressionStatement
        CallExpression
          Identifier: '
    changeImports'
          Identifier: 'program'
          Identifier: ' info'
          Identifier: ' changes'
          Identifier: ' cancellationToken'
  FunctionDeclaration
    Identifier: ' changeExport'
    Parameter
      Identifier: 'exportingSourceFile'
      TypeReference
        Identifier: ' SourceFile'
    Parameter
      ObjectBindingPattern
        BindingElement
          Identifier: ' wasDefault'
        BindingElement
          Identifier: ' exportNode'
        BindingElement
          Identifier: ' exportName'
      TypeReference
        Identifier: ' ExportInfo'
    Parameter
      Identifier: ' changes'
      TypeReference
        QualifiedName
          Identifier: ' textChanges'
          Identifier: 'ChangeTracker'
    Parameter
      Identifier: ' checker'
      TypeReference
        Identifier: ' TypeChecker'
    VoidKeyword
    Block
      IfStatement
        Identifier: 'wasDefault'
        Block
          IfStatement
            BinaryExpression
              CallExpression
                Identifier: 'isExportAssignment'
                Identifier: 'exportNode'
              AmpersandAmpersandToken
              PrefixUnaryExpression
                PropertyAccessExpression
                  Identifier: 'exportNode'
                  Identifier: 'isExportEquals'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' exp'
                    AsExpression
                      PropertyAccessExpression
                        Identifier: ' exportNode'
                        Identifier: 'expression'
                      TypeReference
                        Identifier: ' Identifier'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' spec'
                    CallExpression
                      Identifier: ' makeExportSpecifier'
                      PropertyAccessExpression
                        Identifier: 'exp'
                        Identifier: 'text'
                      PropertyAccessExpression
                        Identifier: ' exp'
                        Identifier: 'text'
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            changes'
                    Identifier: 'replaceNode'
                  Identifier: 'exportingSourceFile'
                  Identifier: ' exportNode'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' factory'
                      Identifier: 'createExportDeclaration'
                    Identifier: '/*modifiers*/ undefined'
                    FalseKeyword
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' factory'
                        Identifier: 'createNamedExports'
                      ArrayLiteralExpression
                        Identifier: 'spec'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            changes'
                    Identifier: 'delete'
                  Identifier: 'exportingSourceFile'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' Debug'
                      Identifier: 'checkDefined'
                    CallExpression
                      Identifier: 'findModifier'
                      Identifier: 'exportNode'
                      PropertyAccessExpression
                        Identifier: ' SyntaxKind'
                        Identifier: 'DefaultKeyword'
                    StringLiteral
        Block
          VariableStatement
            VariableDeclarationList
              VariableDeclaration
                Identifier: ' exportKeyword'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' Debug'
                    Identifier: 'checkDefined'
                  CallExpression
                    Identifier: 'findModifier'
                    Identifier: 'exportNode'
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'ExportKeyword'
                  StringLiteral
          SwitchStatement
            PropertyAccessExpression
              Identifier: 'exportNode'
              Identifier: 'kind'
            CaseBlock
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'FunctionDeclaration'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ClassDeclaration'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'InterfaceDeclaration'
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
                changes'
                      Identifier: 'insertNodeAfter'
                    Identifier: 'exportingSourceFile'
                    Identifier: ' exportKeyword'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' factory'
                        Identifier: 'createToken'
                      PropertyAccessExpression
                        Identifier: 'SyntaxKind'
                        Identifier: 'DefaultKeyword'
                BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'VariableStatement'
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' decl'
                      CallExpression
                        Identifier: ' first'
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: 'exportNode'
                            Identifier: 'declarationList'
                          Identifier: 'declarations'
                IfStatement
                  BinaryExpression
                    PrefixUnaryExpression
                      CallExpression
                        PropertyAccessExpression
                          PropertyAccessExpression
                            Identifier: 'FindAllReferences'
                            Identifier: 'Core'
                          Identifier: 'isSymbolReferencedInFile'
                        Identifier: 'exportName'
                        Identifier: ' checker'
                        Identifier: ' exportingSourceFile'
                    AmpersandAmpersandToken
                    PrefixUnaryExpression
                      PropertyAccessExpression
                        Identifier: 'decl'
                        Identifier: 'type'
                  Block
                    ExpressionStatement
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                    // We checked in `getInfo` that an initializer exists.
                    changes'
                          Identifier: 'replaceNode'
                        Identifier: 'exportingSourceFile'
                        Identifier: ' exportNode'
                        CallExpression
                          PropertyAccessExpression
                            Identifier: ' factory'
                            Identifier: 'createExportDefault'
                          CallExpression
                            PropertyAccessExpression
                              Identifier: 'Debug'
                              Identifier: 'checkDefined'
                            PropertyAccessExpression
                              Identifier: 'decl'
                              Identifier: 'initializer'
                            StringLiteral
                    BreakStatement
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'EnumDeclaration'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'TypeAliasDeclaration'
              CaseClause
                PropertyAccessExpression
                  Identifier: ' SyntaxKind'
                  Identifier: 'ModuleDeclaration'
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
                // `export type T = number;` -> `type T = number; export default T;`
                changes'
                      Identifier: 'deleteModifier'
                    Identifier: 'exportingSourceFile'
                    Identifier: ' exportKeyword'
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
                changes'
                      Identifier: 'insertNodeAfter'
                    Identifier: 'exportingSourceFile'
                    Identifier: ' exportNode'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' factory'
                        Identifier: 'createExportDefault'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: 'factory'
                          Identifier: 'createIdentifier'
                        PropertyAccessExpression
                          Identifier: 'exportName'
                          Identifier: 'text'
                BreakStatement
              DefaultClause
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: '
                Debug'
                      Identifier: 'fail'
                    TemplateExpression
                      TemplateHead
                      TemplateSpan
                        PropertyAccessExpression
                          ParenthesizedExpression
                            AsExpression
                              Identifier: 'exportNode'
                              TypeReference
                                Identifier: ' ExportToConvert'
                          Identifier: 'kind'
                        TemplateTail
  FunctionDeclaration
    Identifier: ' changeImports'
    Parameter
      Identifier: 'program'
      TypeReference
        Identifier: ' Program'
    Parameter
      ObjectBindingPattern
        BindingElement
          Identifier: ' wasDefault'
        BindingElement
          Identifier: ' exportName'
        BindingElement
          Identifier: ' exportingModuleSymbol'
      TypeReference
        Identifier: ' ExportInfo'
    Parameter
      Identifier: ' changes'
      TypeReference
        QualifiedName
          Identifier: ' textChanges'
          Identifier: 'ChangeTracker'
    Parameter
      Identifier: ' cancellationToken'
      UnionType
        TypeReference
          Identifier: ' CancellationToken'
        UndefinedKeyword
    VoidKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' checker'
            CallExpression
              PropertyAccessExpression
                Identifier: ' program'
                Identifier: 'getTypeChecker'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' exportSymbol'
            CallExpression
              PropertyAccessExpression
                Identifier: ' Debug'
                Identifier: 'checkDefined'
              CallExpression
                PropertyAccessExpression
                  Identifier: 'checker'
                  Identifier: 'getSymbolAtLocation'
                Identifier: 'exportName'
              StringLiteral
      ExpressionStatement
        CallExpression
          PropertyAccessExpression
            PropertyAccessExpression
              Identifier: '
    FindAllReferences'
              Identifier: 'Core'
            Identifier: 'eachExportReference'
          CallExpression
            PropertyAccessExpression
              Identifier: 'program'
              Identifier: 'getSourceFiles'
          Identifier: ' checker'
          Identifier: ' cancellationToken'
          Identifier: ' exportSymbol'
          Identifier: ' exportingModuleSymbol'
          PropertyAccessExpression
            Identifier: ' exportName'
            Identifier: 'text'
          Identifier: ' wasDefault'
          ArrowFunction
            Parameter
              Identifier: ' ref'
            EqualsGreaterThanToken
            Block
              IfStatement
                BinaryExpression
                  Identifier: 'exportName'
                  EqualsEqualsEqualsToken
                  Identifier: ' ref'
                ReturnStatement
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' importingSourceFile'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' ref'
                        Identifier: 'getSourceFile'
              IfStatement
                Identifier: 'wasDefault'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
            changeDefaultToNamedImport'
                      Identifier: 'importingSourceFile'
                      Identifier: ' ref'
                      Identifier: ' changes'
                      PropertyAccessExpression
                        Identifier: ' exportName'
                        Identifier: 'text'
                Block
                  ExpressionStatement
                    CallExpression
                      Identifier: '
            changeNamedToDefaultImport'
                      Identifier: 'importingSourceFile'
                      Identifier: ' ref'
                      Identifier: ' changes'
  FunctionDeclaration
    Identifier: ' changeDefaultToNamedImport'
    Parameter
      Identifier: 'importingSourceFile'
      TypeReference
        Identifier: ' SourceFile'
    Parameter
      Identifier: ' ref'
      TypeReference
        Identifier: ' ModuleExportName'
    Parameter
      Identifier: ' changes'
      TypeReference
        QualifiedName
          Identifier: ' textChanges'
          Identifier: 'ChangeTracker'
    Parameter
      Identifier: ' exportName'
      StringKeyword
    VoidKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            ObjectBindingPattern
              BindingElement
                Identifier: ' parent'
            Identifier: ' ref'
      SwitchStatement
        PropertyAccessExpression
          Identifier: 'parent'
          Identifier: 'kind'
        CaseBlock
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'PropertyAccessExpression'
            ExpressionStatement
              CallExpression
                PropertyAccessExpression
                  Identifier: '
            // `a.default` --> `a.foo`
            changes'
                  Identifier: 'replaceNode'
                Identifier: 'importingSourceFile'
                Identifier: ' ref'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' factory'
                    Identifier: 'createIdentifier'
                  Identifier: 'exportName'
            BreakStatement
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ImportSpecifier'
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ExportSpecifier'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' spec'
                    AsExpression
                      Identifier: ' parent'
                      UnionType
                        TypeReference
                          Identifier: ' ImportSpecifier'
                        TypeReference
                          Identifier: ' ExportSpecifier'
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            // `default as foo` --> `foo`, `default as bar` --> `foo as bar`
            changes'
                    Identifier: 'replaceNode'
                  Identifier: 'importingSourceFile'
                  Identifier: ' spec'
                  CallExpression
                    Identifier: ' makeImportSpecifier'
                    Identifier: 'exportName'
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: ' spec'
                        Identifier: 'name'
                      Identifier: 'text'
              BreakStatement
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ImportClause'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' clause'
                    AsExpression
                      Identifier: ' parent'
                      TypeReference
                        Identifier: ' ImportClause'
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            Debug'
                    Identifier: 'assert'
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: 'clause'
                      Identifier: 'name'
                    EqualsEqualsEqualsToken
                    Identifier: ' ref'
                  StringLiteral
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' spec'
                    CallExpression
                      Identifier: ' makeImportSpecifier'
                      Identifier: 'exportName'
                      PropertyAccessExpression
                        Identifier: ' ref'
                        Identifier: 'text'
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    ObjectBindingPattern
                      BindingElement
                        Identifier: ' namedBindings'
                    Identifier: ' clause'
              IfStatement
                PrefixUnaryExpression
                  Identifier: 'namedBindings'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                // `import foo from "./a";` --> `import { foo } from "./a";`
                changes'
                        Identifier: 'replaceNode'
                      Identifier: 'importingSourceFile'
                      Identifier: ' ref'
                      CallExpression
                        PropertyAccessExpression
                          Identifier: ' factory'
                          Identifier: 'createNamedImports'
                        ArrayLiteralExpression
                          Identifier: 'spec'
                IfStatement
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier: 'namedBindings'
                      Identifier: 'kind'
                    EqualsEqualsEqualsToken
                    PropertyAccessExpression
                      Identifier: ' SyntaxKind'
                      Identifier: 'NamespaceImport'
                  Block
                    ExpressionStatement
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                // `import foo, * as a from "./a";` --> `import * as a from ".a/"; import { foo } from "./a";`
                changes'
                          Identifier: 'deleteRange'
                        Identifier: 'importingSourceFile'
                        ObjectLiteralExpression
                          PropertyAssignment
                            Identifier: ' pos'
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' ref'
                                Identifier: 'getStart'
                              Identifier: 'importingSourceFile'
                          PropertyAssignment
                            Identifier: ' end'
                            CallExpression
                              PropertyAccessExpression
                                Identifier: ' namedBindings'
                                Identifier: 'getStart'
                              Identifier: 'importingSourceFile'
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' quotePreference'
                          ConditionalExpression
                            CallExpression
                              Identifier: ' isStringLiteral'
                              PropertyAccessExpression
                                PropertyAccessExpression
                                  Identifier: 'clause'
                                  Identifier: 'parent'
                                Identifier: 'moduleSpecifier'
                            QuestionToken
                            CallExpression
                              Identifier: ' quotePreferenceFromString'
                              PropertyAccessExpression
                                PropertyAccessExpression
                                  Identifier: 'clause'
                                  Identifier: 'parent'
                                Identifier: 'moduleSpecifier'
                              Identifier: ' importingSourceFile'
                            ColonToken
                            PropertyAccessExpression
                              Identifier: ' QuotePreference'
                              Identifier: 'Double'
                    VariableStatement
                      VariableDeclarationList
                        VariableDeclaration
                          Identifier: ' newImport'
                          CallExpression
                            Identifier: ' makeImport'
                            Identifier: '/*defaultImport*/ undefined'
                            ArrayLiteralExpression
                              CallExpression
                                Identifier: 'makeImportSpecifier'
                                Identifier: 'exportName'
                                PropertyAccessExpression
                                  Identifier: ' ref'
                                  Identifier: 'text'
                            PropertyAccessExpression
                              PropertyAccessExpression
                                Identifier: ' clause'
                                Identifier: 'parent'
                              Identifier: 'moduleSpecifier'
                            Identifier: ' quotePreference'
                    ExpressionStatement
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                changes'
                          Identifier: 'insertNodeAfter'
                        Identifier: 'importingSourceFile'
                        PropertyAccessExpression
                          Identifier: ' clause'
                          Identifier: 'parent'
                        Identifier: ' newImport'
                  Block
                    ExpressionStatement
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                // `import foo, { bar } from "./a"` --> `import { bar, foo } from "./a";`
                changes'
                          Identifier: 'delete'
                        Identifier: 'importingSourceFile'
                        Identifier: ' ref'
                    ExpressionStatement
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
                changes'
                          Identifier: 'insertNodeAtEndOfList'
                        Identifier: 'importingSourceFile'
                        PropertyAccessExpression
                          Identifier: ' namedBindings'
                          Identifier: 'elements'
                        Identifier: ' spec'
              BreakStatement
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ImportType'
            VariableStatement
              VariableDeclarationList
                VariableDeclaration
                  Identifier: ' importTypeNode'
                  AsExpression
                    Identifier: ' parent'
                    TypeReference
                      Identifier: ' ImportTypeNode'
            ExpressionStatement
              CallExpression
                PropertyAccessExpression
                  Identifier: '
            changes'
                  Identifier: 'replaceNode'
                Identifier: 'importingSourceFile'
                Identifier: ' parent'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' factory'
                    Identifier: 'createImportTypeNode'
                  PropertyAccessExpression
                    Identifier: 'importTypeNode'
                    Identifier: 'argument'
                  PropertyAccessExpression
                    Identifier: ' importTypeNode'
                    Identifier: 'attributes'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' factory'
                      Identifier: 'createIdentifier'
                    Identifier: 'exportName'
                  PropertyAccessExpression
                    Identifier: ' importTypeNode'
                    Identifier: 'typeArguments'
                  PropertyAccessExpression
                    Identifier: ' importTypeNode'
                    Identifier: 'isTypeOf'
            BreakStatement
          DefaultClause
            ExpressionStatement
              CallExpression
                PropertyAccessExpression
                  Identifier: '
            Debug'
                  Identifier: 'failBadSyntaxKind'
                Identifier: 'parent'
  FunctionDeclaration
    Identifier: ' changeNamedToDefaultImport'
    Parameter
      Identifier: 'importingSourceFile'
      TypeReference
        Identifier: ' SourceFile'
    Parameter
      Identifier: ' ref'
      TypeReference
        Identifier: ' ModuleExportName'
    Parameter
      Identifier: ' changes'
      TypeReference
        QualifiedName
          Identifier: ' textChanges'
          Identifier: 'ChangeTracker'
    VoidKeyword
    Block
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' parent'
            AsExpression
              PropertyAccessExpression
                Identifier: ' ref'
                Identifier: 'parent'
              UnionType
                TypeReference
                  Identifier: ' PropertyAccessExpression'
                TypeReference
                  Identifier: ' ImportSpecifier'
                TypeReference
                  Identifier: ' ExportSpecifier'
      SwitchStatement
        PropertyAccessExpression
          Identifier: 'parent'
          Identifier: 'kind'
        CaseBlock
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'PropertyAccessExpression'
            ExpressionStatement
              CallExpression
                PropertyAccessExpression
                  Identifier: '
            // `a.foo` --> `a.default`
            changes'
                  Identifier: 'replaceNode'
                Identifier: 'importingSourceFile'
                Identifier: ' ref'
                CallExpression
                  PropertyAccessExpression
                    Identifier: ' factory'
                    Identifier: 'createIdentifier'
                  StringLiteral
            BreakStatement
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ImportSpecifier'
            Block
              VariableStatement
                VariableDeclarationList
                  VariableDeclaration
                    Identifier: ' defaultImport'
                    CallExpression
                      PropertyAccessExpression
                        Identifier: ' factory'
                        Identifier: 'createIdentifier'
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: 'parent'
                          Identifier: 'name'
                        Identifier: 'text'
              IfStatement
                BinaryExpression
                  PropertyAccessExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: 'parent'
                        Identifier: 'parent'
                      Identifier: 'elements'
                    Identifier: 'length'
                  EqualsEqualsEqualsToken
                  NumericLiteral
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                changes'
                        Identifier: 'replaceNode'
                      Identifier: 'importingSourceFile'
                      PropertyAccessExpression
                        Identifier: ' parent'
                        Identifier: 'parent'
                      Identifier: ' defaultImport'
                Block
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                changes'
                        Identifier: 'delete'
                      Identifier: 'importingSourceFile'
                      Identifier: ' parent'
                  ExpressionStatement
                    CallExpression
                      PropertyAccessExpression
                        Identifier: '
                changes'
                        Identifier: 'insertNodeBefore'
                      Identifier: 'importingSourceFile'
                      PropertyAccessExpression
                        Identifier: ' parent'
                        Identifier: 'parent'
                      Identifier: ' defaultImport'
              BreakStatement
          CaseClause
            PropertyAccessExpression
              Identifier: ' SyntaxKind'
              Identifier: 'ExportSpecifier'
            Block
              ExpressionStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: '
            // `export { foo } from "./a";` --> `export { default as foo } from "./a";`
            // `export { foo as bar } from "./a";` --> `export { default as bar } from "./a";`
            // `export { foo as default } from "./a";` --> `export { default } from "./a";`
            // (Because `export foo from "./a";` isn't valid syntax.)
            changes'
                    Identifier: 'replaceNode'
                  Identifier: 'importingSourceFile'
                  Identifier: ' parent'
                  CallExpression
                    Identifier: ' makeExportSpecifier'
                    StringLiteral
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: ' parent'
                        Identifier: 'name'
                      Identifier: 'text'
              BreakStatement
          DefaultClause
            ExpressionStatement
              CallExpression
                PropertyAccessExpression
                  Identifier: '
            Debug'
                  Identifier: 'assertNever'
                Identifier: 'parent'
                TemplateExpression
                  TemplateHead
                  TemplateSpan
                    PropertyAccessExpression
                      ParenthesizedExpression
                        AsExpression
                          Identifier: 'parent'
                          TypeReference
                            Identifier: ' Node'
                      Identifier: 'kind'
                    TemplateTail
  FunctionDeclaration
    Identifier: ' makeImportSpecifier'
    Parameter
      Identifier: 'propertyName'
      StringKeyword
    Parameter
      Identifier: ' name'
      StringKeyword
    TypeReference
      Identifier: ' ImportSpecifier'
    Block
      ReturnStatement
        CallExpression
          PropertyAccessExpression
            Identifier: ' factory'
            Identifier: 'createImportSpecifier'
          FalseKeyword
          ConditionalExpression
            BinaryExpression
              Identifier: ' propertyName'
              EqualsEqualsEqualsToken
              Identifier: ' name'
            QuestionToken
            Identifier: ' undefined'
            ColonToken
            CallExpression
              PropertyAccessExpression
                Identifier: ' factory'
                Identifier: 'createIdentifier'
              Identifier: 'propertyName'
          CallExpression
            PropertyAccessExpression
              Identifier: ' factory'
              Identifier: 'createIdentifier'
            Identifier: 'name'
  FunctionDeclaration
    Identifier: ' makeExportSpecifier'
    Parameter
      Identifier: 'propertyName'
      StringKeyword
    Parameter
      Identifier: ' name'
      StringKeyword
    TypeReference
      Identifier: ' ExportSpecifier'
    Block
      ReturnStatement
        CallExpression
          PropertyAccessExpression
            Identifier: ' factory'
            Identifier: 'createExportSpecifier'
          FalseKeyword
          ConditionalExpression
            BinaryExpression
              Identifier: ' propertyName'
              EqualsEqualsEqualsToken
              Identifier: ' name'
            QuestionToken
            Identifier: ' undefined'
            ColonToken
            CallExpression
              PropertyAccessExpression
                Identifier: ' factory'
                Identifier: 'createIdentifier'
              Identifier: 'propertyName'
          CallExpression
            PropertyAccessExpression
              Identifier: ' factory'
              Identifier: 'createIdentifier'
            Identifier: 'name'
  FunctionDeclaration
    Identifier: ' getExportingModuleSymbol'
    Parameter
      Identifier: 'parent'
      UnionType
        TypeReference
          Identifier: ' SourceFile'
        TypeReference
          Identifier: ' ModuleBlock'
    Parameter
      Identifier: ' checker'
      TypeReference
        Identifier: ' TypeChecker'
    Block
      IfStatement
        CallExpression
          Identifier: 'isSourceFile'
          Identifier: 'parent'
        Block
          ReturnStatement
            PropertyAccessExpression
              Identifier: ' parent'
              Identifier: 'symbol'
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' symbol'
            PropertyAccessExpression
              PropertyAccessExpression
                Identifier: ' parent'
                Identifier: 'parent'
              Identifier: 'symbol'
      IfStatement
        BinaryExpression
          PropertyAccessExpression
            Identifier: 'symbol'
            Identifier: 'valueDeclaration'
          AmpersandAmpersandToken
          CallExpression
            Identifier: ' isExternalModuleAugmentation'
            PropertyAccessExpression
              Identifier: 'symbol'
              Identifier: 'valueDeclaration'
        Block
          ReturnStatement
            CallExpression
              PropertyAccessExpression
                Identifier: ' checker'
                Identifier: 'getMergedSymbol'
              Identifier: 'symbol'
      ReturnStatement
        Identifier: ' symbol'
