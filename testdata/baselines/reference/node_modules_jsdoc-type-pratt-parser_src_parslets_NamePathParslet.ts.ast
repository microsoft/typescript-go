SourceFile
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' ParsletFunction'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' Precedence'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' assertRootResult'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' Parser'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' NamePathResult'
        ImportSpecifier
          Identifier: ' SpecialNamePath'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' UnexpectedTypeError'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' PropertyResult'
    StringLiteral
  ImportDeclaration
    ImportClause
      NamedImports
        ImportSpecifier
          Identifier: ' Grammar'
    StringLiteral
  FunctionDeclaration
    ExportKeyword
    Identifier: ' createNamePathParslet'
    Parameter
      ObjectBindingPattern
        BindingElement
          Identifier: ' allowSquareBracketsOnAnyType'
        BindingElement
          Identifier: ' allowJsdocNamePaths'
        BindingElement
          Identifier: ' pathGrammar'
      TypeLiteral
        PropertySignature
          Identifier: '
  allowJsdocNamePaths'
          BooleanKeyword
        PropertySignature
          Identifier: '
  allowSquareBracketsOnAnyType'
          BooleanKeyword
        PropertySignature
          Identifier: '
  pathGrammar'
          UnionType
            TypeReference
              Identifier: ' Grammar'
            LiteralType
              NullKeyword
    TypeReference
      Identifier: ' ParsletFunction'
    Block
      ReturnStatement
        FunctionExpression
          Identifier: ' namePathParslet'
          Parameter
            Identifier: 'parser'
          Parameter
            Identifier: ' precedence'
          Parameter
            Identifier: ' left'
          Block
            IfStatement
              BinaryExpression
                ParenthesizedExpression
                  BinaryExpression
                    Identifier: 'left'
                    EqualsEqualsToken
                    NullKeyword
                BarBarToken
                BinaryExpression
                  Identifier: ' precedence'
                  GreaterThanEqualsToken
                  PropertyAccessExpression
                    Identifier: ' Precedence'
                    Identifier: 'NAME_PATH'
              Block
                ReturnStatement
                  NullKeyword
            VariableStatement
              VariableDeclarationList
                VariableDeclaration
                  Identifier: ' type'
                  PropertyAccessExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: ' parser'
                        Identifier: 'lexer'
                      Identifier: 'current'
                    Identifier: 'type'
            VariableStatement
              VariableDeclarationList
                VariableDeclaration
                  Identifier: ' next'
                  PropertyAccessExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier: ' parser'
                        Identifier: 'lexer'
                      Identifier: 'next'
                    Identifier: 'type'
            VariableStatement
              VariableDeclarationList
                VariableDeclaration
                  Identifier: ' accept'
                  BinaryExpression
                    BinaryExpression
                      ParenthesizedExpression
                        BinaryExpression
                          BinaryExpression
                            Identifier: 'type'
                            EqualsEqualsEqualsToken
                            StringLiteral
                          AmpersandAmpersandToken
                          BinaryExpression
                            Identifier: ' next'
                            ExclamationEqualsEqualsToken
                            StringLiteral
                      BarBarToken
                      ParenthesizedExpression
                        BinaryExpression
                          BinaryExpression
                            Identifier: 'type'
                            EqualsEqualsEqualsToken
                            StringLiteral
                          AmpersandAmpersandToken
                          ParenthesizedExpression
                            BinaryExpression
                              Identifier: 'allowSquareBracketsOnAnyType'
                              BarBarToken
                              BinaryExpression
                                PropertyAccessExpression
                                  Identifier: ' left'
                                  Identifier: 'type'
                                EqualsEqualsEqualsToken
                                StringLiteral
                    BarBarToken
                    ParenthesizedExpression
                      BinaryExpression
                        Identifier: 'allowJsdocNamePaths'
                        AmpersandAmpersandToken
                        ParenthesizedExpression
                          BinaryExpression
                            BinaryExpression
                              Identifier: 'type'
                              EqualsEqualsEqualsToken
                              StringLiteral
                            BarBarToken
                            BinaryExpression
                              Identifier: ' type'
                              EqualsEqualsEqualsToken
                              StringLiteral
            IfStatement
              PrefixUnaryExpression
                Identifier: 'accept'
              Block
                ReturnStatement
                  NullKeyword
            VariableStatement
              VariableDeclarationList
                VariableDeclaration
                  Identifier: ' pathType'
                  IndexedAccessType
                    TypeReference
                      Identifier: ' NamePathResult'
                    LiteralType
                      StringLiteral
            VariableStatement
              VariableDeclarationList
                VariableDeclaration
                  Identifier: ' brackets'
                  FalseKeyword
            IfStatement
              CallExpression
                PropertyAccessExpression
                  Identifier: 'parser'
                  Identifier: 'consume'
                StringLiteral
              Block
                ExpressionStatement
                  BinaryExpression
                    Identifier: '
      pathType'
                    EqualsToken
                    StringLiteral
              IfStatement
                CallExpression
                  PropertyAccessExpression
                    Identifier: 'parser'
                    Identifier: 'consume'
                  StringLiteral
                Block
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
      pathType'
                      EqualsToken
                      StringLiteral
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
      brackets'
                      EqualsToken
                      TrueKeyword
                IfStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier: 'parser'
                      Identifier: 'consume'
                    StringLiteral
                  Block
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
      pathType'
                        EqualsToken
                        StringLiteral
                  Block
                    ExpressionStatement
                      CallExpression
                        PropertyAccessExpression
                          Identifier: '
      parser'
                          Identifier: 'consume'
                        StringLiteral
                    ExpressionStatement
                      BinaryExpression
                        Identifier: '
      pathType'
                        EqualsToken
                        StringLiteral
            VariableStatement
              VariableDeclarationList
                VariableDeclaration
                  Identifier: ' pathParser'
                  ConditionalExpression
                    BinaryExpression
                      Identifier: ' pathGrammar'
                      ExclamationEqualsEqualsToken
                      NullKeyword
                    QuestionToken
                    NewExpression
                      Identifier: ' Parser'
                      Identifier: 'pathGrammar'
                      PropertyAccessExpression
                        Identifier: ' parser'
                        Identifier: 'lexer'
                      Identifier: ' parser'
                    ColonToken
                    Identifier: ' parser'
            VariableStatement
              VariableDeclarationList
                VariableDeclaration
                  Identifier: ' parsed'
                  CallExpression
                    PropertyAccessExpression
                      Identifier: ' pathParser'
                      Identifier: 'parseIntermediateType'
                    PropertyAccessExpression
                      Identifier: 'Precedence'
                      Identifier: 'NAME_PATH'
            ExpressionStatement
              CallExpression
                PropertyAccessExpression
                  Identifier: '
    parser'
                  Identifier: 'acceptLexerState'
                Identifier: 'pathParser'
            VariableStatement
              VariableDeclarationList
                VariableDeclaration
                  Identifier: ' right'
                  UnionType
                    TypeReference
                      Identifier: ' PropertyResult'
                    TypeReference
                      Identifier: ' SpecialNamePath'
                      LiteralType
                        StringLiteral
            SwitchStatement
              PropertyAccessExpression
                Identifier: 'parsed'
                Identifier: 'type'
              CaseBlock
                CaseClause
                  StringLiteral
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
        right'
                      EqualsToken
                      ObjectLiteralExpression
                        PropertyAssignment
                          Identifier: '
          type'
                          StringLiteral
                        PropertyAssignment
                          Identifier: '
          value'
                          PropertyAccessExpression
                            Identifier: ' parsed'
                            Identifier: 'value'
                        PropertyAssignment
                          Identifier: '
          meta'
                          ObjectLiteralExpression
                            PropertyAssignment
                              Identifier: '
            quote'
                              Identifier: ' undefined'
                  BreakStatement
                CaseClause
                  StringLiteral
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
        right'
                      EqualsToken
                      ObjectLiteralExpression
                        PropertyAssignment
                          Identifier: '
          type'
                          StringLiteral
                        PropertyAssignment
                          Identifier: '
          value'
                          CallExpression
                            PropertyAccessExpression
                              PropertyAccessExpression
                                Identifier: ' parsed'
                                Identifier: 'value'
                              Identifier: 'toString'
                            NumericLiteral
                        PropertyAssignment
                          Identifier: '
          meta'
                          ObjectLiteralExpression
                            PropertyAssignment
                              Identifier: '
            quote'
                              Identifier: ' undefined'
                  BreakStatement
                CaseClause
                  StringLiteral
                  ExpressionStatement
                    BinaryExpression
                      Identifier: '
        right'
                      EqualsToken
                      ObjectLiteralExpression
                        PropertyAssignment
                          Identifier: '
          type'
                          StringLiteral
                        PropertyAssignment
                          Identifier: '
          value'
                          PropertyAccessExpression
                            Identifier: ' parsed'
                            Identifier: 'value'
                        PropertyAssignment
                          Identifier: '
          meta'
                          ObjectLiteralExpression
                            PropertyAssignment
                              Identifier: '
            quote'
                              PropertyAccessExpression
                                PropertyAccessExpression
                                  Identifier: ' parsed'
                                  Identifier: 'meta'
                                Identifier: 'quote'
                  BreakStatement
                CaseClause
                  StringLiteral
                  IfStatement
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier: 'parsed'
                        Identifier: 'specialType'
                      EqualsEqualsEqualsToken
                      StringLiteral
                    Block
                      ExpressionStatement
                        BinaryExpression
                          Identifier: '
          right'
                          EqualsToken
                          AsExpression
                            Identifier: ' parsed'
                            TypeReference
                              Identifier: ' SpecialNamePath'
                              LiteralType
                                StringLiteral
                    Block
                      ThrowStatement
                        NewExpression
                          Identifier: ' UnexpectedTypeError'
                          Identifier: 'parsed'
                          StringLiteral
                  BreakStatement
                DefaultClause
                  ThrowStatement
                    NewExpression
                      Identifier: ' UnexpectedTypeError'
                      Identifier: 'parsed'
                      StringLiteral
            IfStatement
              BinaryExpression
                Identifier: 'brackets'
                AmpersandAmpersandToken
                PrefixUnaryExpression
                  CallExpression
                    PropertyAccessExpression
                      Identifier: 'parser'
                      Identifier: 'consume'
                    StringLiteral
              Block
                VariableStatement
                  VariableDeclarationList
                    VariableDeclaration
                      Identifier: ' token'
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier: ' parser'
                          Identifier: 'lexer'
                        Identifier: 'current'
                ThrowStatement
                  NewExpression
                    Identifier: ' Error'
                    BinaryExpression
                      TemplateExpression
                        TemplateHead
                        TemplateSpan
                          PropertyAccessExpression
                            Identifier: 'token'
                            Identifier: 'type'
                          TemplateTail
                      PlusToken
                      TemplateExpression
                        TemplateHead
                        TemplateSpan
                          PropertyAccessExpression
                            Identifier: 'token'
                            Identifier: 'text'
                          TemplateTail
            ReturnStatement
              ObjectLiteralExpression
                PropertyAssignment
                  Identifier: '
      type'
                  StringLiteral
                PropertyAssignment
                  Identifier: '
      left'
                  CallExpression
                    Identifier: ' assertRootResult'
                    Identifier: 'left'
                ShorthandPropertyAssignment
                  Identifier: '
      right'
                ShorthandPropertyAssignment
                  Identifier: '
      pathType'
