//// [tests/cases/compiler/expandoContextualTypes.tsx] ////

=== expandoContextualTypes.tsx ===
// https://github.com/microsoft/typescript-go/issues/921

/// <reference path="react16.d.ts" />

import type { ComponentType } from "react";
>ComponentType : ComponentType<P>

export type Page<P = NonNullable<unknown>> = ComponentType<P> & {
>Page : Page<P>

    getLayout?: (component: JSX.Element) => JSX.Element;
>getLayout : ((component: Element) => Element) | undefined
>component : Element
>JSX : any
>JSX : any
}

export const FooPage: Page = () => {
>FooPage : Page<{}>
>() => {    return (        <div>            <p>Foo</p>        </div>    )} : { (): Element; getLayout: () => Element; }

    return (
>(        <div>            <p>Foo</p>        </div>    ) : Element

        <div>
><div>            <p>Foo</p>        </div> : Element
>div : any

            <p>Foo</p>
><p>Foo</p> : Element
>p : any
>p : any

        </div>
>div : any

    )
};

FooPage.getLayout = () => {
>FooPage.getLayout = () => {    return <></>} : () => Element
>FooPage.getLayout : ((component: Element) => Element) | undefined
>FooPage : StatelessComponent<{}> & { getLayout?: ((component: Element) => Element) | undefined; }
>getLayout : ((component: Element) => Element) | undefined
>() => {    return <></>} : () => Element

    return <></>
><></> : Element

};

