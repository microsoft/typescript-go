//// [tests/cases/compiler/definiteAssignmentAssertionInDeclarationExtended.ts] ////

=== definiteAssignmentAssertionInDeclarationExtended.ts ===
export class DbObject {
>DbObject : Symbol(DbObject, Decl(definiteAssignmentAssertionInDeclarationExtended.ts, 0, 0))

    id!: string;
>id : Symbol(DbObject.id, Decl(definiteAssignmentAssertionInDeclarationExtended.ts, 0, 23))

    name?: string;
>name : Symbol(DbObject.name, Decl(definiteAssignmentAssertionInDeclarationExtended.ts, 1, 16))

    count: number = 0;
>count : Symbol(DbObject.count, Decl(definiteAssignmentAssertionInDeclarationExtended.ts, 2, 18))

    private secret!: string;
>secret : Symbol(DbObject.secret, Decl(definiteAssignmentAssertionInDeclarationExtended.ts, 3, 22))

    protected value!: number;
>value : Symbol(DbObject.value, Decl(definiteAssignmentAssertionInDeclarationExtended.ts, 4, 28))

    static config!: boolean;
>config : Symbol(DbObject.config, Decl(definiteAssignmentAssertionInDeclarationExtended.ts, 5, 29))
}

export interface IConfig {
>IConfig : Symbol(IConfig, Decl(definiteAssignmentAssertionInDeclarationExtended.ts, 7, 1))

    setting?: boolean; 
>setting : Symbol(IConfig.setting, Decl(definiteAssignmentAssertionInDeclarationExtended.ts, 9, 26))

    optionalSetting?: string;
>optionalSetting : Symbol(IConfig.optionalSetting, Decl(definiteAssignmentAssertionInDeclarationExtended.ts, 10, 22))
}
