SourceFile
  ModuleDeclaration
    DeclareKeyword
    StringLiteral
    ModuleBlock
      ImportDeclaration
        ImportClause
          NamespaceImport
            Identifier: ' child'
        StringLiteral
      ImportEqualsDeclaration
        Identifier: ' EventEmitter'
        ExternalModuleReference
          StringLiteral
      ImportDeclaration
        ImportClause
          NamespaceImport
            Identifier: ' net'
        StringLiteral
      TypeAliasDeclaration
        Identifier: ' SerializationType'
        UnionType
          LiteralType
            StringLiteral
          LiteralType
            StringLiteral
      InterfaceDeclaration
        ExportKeyword
        Identifier: ' ClusterSettings'
        PropertySignature
          Identifier: '
        /**
         * List of string arguments passed to the Node.js executable.
         * @default process.execArgv
         */
        execArgv'
          QuestionToken
          UnionType
            ArrayType
              StringKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * File path to worker file.
         * @default process.argv[1]
         */
        exec'
          QuestionToken
          UnionType
            StringKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * String arguments passed to worker.
         * @default process.argv.slice(2)
         */
        args'
          QuestionToken
          UnionType
            ArrayType
              StringKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * Whether or not to send output to parent's stdio.
         * @default false
         */
        silent'
          QuestionToken
          UnionType
            BooleanKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * Configures the stdio of forked processes. Because the cluster module relies on IPC to function, this configuration must
         * contain an `'ipc'` entry. When this option is provided, it overrides `silent`. See [`child_prcess.spawn()`](https://nodejs.org/docs/latest-v22.x/api/child_process.html#child_processspawncommand-args-options)'s
         * [`stdio`](https://nodejs.org/docs/latest-v22.x/api/child_process.html#optionsstdio).
         */
        stdio'
          QuestionToken
          UnionType
            ArrayType
              AnyKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * Sets the user identity of the process. (See [`setuid(2)`](https://man7.org/linux/man-pages/man2/setuid.2.html).)
         */
        uid'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * Sets the group identity of the process. (See [`setgid(2)`](https://man7.org/linux/man-pages/man2/setgid.2.html).)
         */
        gid'
          QuestionToken
          UnionType
            NumberKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * Sets inspector port of worker. This can be a number, or a function that takes no arguments and returns a number.
         * By default each worker gets its own port, incremented from the primary's `process.debugPort`.
         */
        inspectPort'
          QuestionToken
          UnionType
            NumberKeyword
            ParenthesizedType
              FunctionType
                NumberKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * Specify the kind of serialization used for sending messages between processes. Possible values are `'json'` and `'advanced'`.
         * See [Advanced serialization for `child_process`](https://nodejs.org/docs/latest-v22.x/api/child_process.html#advanced-serialization) for more details.
         * @default false
         */
        serialization'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' SerializationType'
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * Current working directory of the worker process.
         * @default undefined (inherits from parent process)
         */
        cwd'
          QuestionToken
          UnionType
            StringKeyword
            UndefinedKeyword
        PropertySignature
          Identifier: '
        /**
         * Hide the forked processes console window that would normally be created on Windows systems.
         * @default false
         */
        windowsHide'
          QuestionToken
          UnionType
            BooleanKeyword
            UndefinedKeyword
      InterfaceDeclaration
        ExportKeyword
        Identifier: ' Address'
        PropertySignature
          Identifier: '
        address'
          StringKeyword
        PropertySignature
          Identifier: '
        port'
          NumberKeyword
        PropertySignature
          Identifier: '
        /**
         * The `addressType` is one of:
         *
         * * `4` (TCPv4)
         * * `6` (TCPv6)
         * * `-1` (Unix domain socket)
         * * `'udp4'` or `'udp6'` (UDPv4 or UDPv6)
         */
        addressType'
          UnionType
            LiteralType
              NumericLiteral
            LiteralType
              NumericLiteral
            LiteralType
              PrefixUnaryExpression
                NumericLiteral
            LiteralType
              StringLiteral
            LiteralType
              StringLiteral
      ClassDeclaration
        ExportKeyword
        Identifier: ' Worker'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' EventEmitter'
        PropertyDeclaration
          Identifier: '
        /**
         * Each new worker is given its own unique id, this id is stored in the `id`.
         *
         * While a worker is alive, this is the key that indexes it in `cluster.workers`.
         * @since v0.8.0
         */
        id'
          NumberKeyword
        PropertyDeclaration
          Identifier: '
        /**
         * All workers are created using [`child_process.fork()`](https://nodejs.org/docs/latest-v22.x/api/child_process.html#child_processforkmodulepath-args-options), the returned object
         * from this function is stored as `.process`. In a worker, the global `process` is stored.
         *
         * See: [Child Process module](https://nodejs.org/docs/latest-v22.x/api/child_process.html#child_processforkmodulepath-args-options).
         *
         * Workers will call `process.exit(0)` if the `'disconnect'` event occurs
         * on `process` and `.exitedAfterDisconnect` is not `true`. This protects against
         * accidental disconnection.
         * @since v0.7.0
         */
        process'
          TypeReference
            QualifiedName
              Identifier: ' child'
              Identifier: 'ChildProcess'
        MethodDeclaration
          Identifier: '
        /**
         * Send a message to a worker or primary, optionally with a handle.
         *
         * In the primary, this sends a message to a specific worker. It is identical to [`ChildProcess.send()`](https://nodejs.org/docs/latest-v22.x/api/child_process.html#subprocesssendmessage-sendhandle-options-callback).
         *
         * In a worker, this sends a message to the primary. It is identical to `process.send()`.
         *
         * This example will echo back all messages from the primary:
         *
         * ```js
         * if (cluster.isPrimary) {
         *   const worker = cluster.fork();
         *   worker.send('hi there');
         *
         * } else if (cluster.isWorker) {
         *   process.on('message', (msg) => {
         *     process.send(msg);
         *   });
         * }
         * ```
         * @since v0.7.0
         * @param options The `options` argument, if present, is an object used to parameterize the sending of certain types of handles.
         */
        send'
          Parameter
            Identifier: 'message'
            TypeReference
              QualifiedName
                Identifier: ' child'
                Identifier: 'Serializable'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'error'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        send'
          Parameter
            Identifier: '
            message'
            TypeReference
              QualifiedName
                Identifier: ' child'
                Identifier: 'Serializable'
          Parameter
            Identifier: '
            sendHandle'
            TypeReference
              QualifiedName
                Identifier: ' child'
                Identifier: 'SendHandle'
          Parameter
            Identifier: '
            callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'error'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        send'
          Parameter
            Identifier: '
            message'
            TypeReference
              QualifiedName
                Identifier: ' child'
                Identifier: 'Serializable'
          Parameter
            Identifier: '
            sendHandle'
            TypeReference
              QualifiedName
                Identifier: ' child'
                Identifier: 'SendHandle'
          Parameter
            Identifier: '
            options'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' child'
                Identifier: 'MessageOptions'
          Parameter
            Identifier: '
            callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'error'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        /**
         * This function will kill the worker. In the primary worker, it does this by
         * disconnecting the `worker.process`, and once disconnected, killing with `signal`. In the worker, it does it by killing the process with `signal`.
         *
         * The `kill()` function kills the worker process without waiting for a graceful
         * disconnect, it has the same behavior as `worker.process.kill()`.
         *
         * This method is aliased as `worker.destroy()` for backwards compatibility.
         *
         * In a worker, `process.kill()` exists, but it is not this function;
         * it is [`kill()`](https://nodejs.org/docs/latest-v22.x/api/process.html#processkillpid-signal).
         * @since v0.9.12
         * @param [signal='SIGTERM'] Name of the kill signal to send to the worker process.
         */
        kill'
          Parameter
            Identifier: 'signal'
            QuestionToken
            StringKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        destroy'
          Parameter
            Identifier: 'signal'
            QuestionToken
            StringKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * In a worker, this function will close all servers, wait for the `'close'` event
         * on those servers, and then disconnect the IPC channel.
         *
         * In the primary, an internal message is sent to the worker causing it to call `.disconnect()` on itself.
         *
         * Causes `.exitedAfterDisconnect` to be set.
         *
         * After a server is closed, it will no longer accept new connections,
         * but connections may be accepted by any other listening worker. Existing
         * connections will be allowed to close as usual. When no more connections exist,
         * see `server.close()`, the IPC channel to the worker will close allowing it
         * to die gracefully.
         *
         * The above applies _only_ to server connections, client connections are not
         * automatically closed by workers, and disconnect does not wait for them to close
         * before exiting.
         *
         * In a worker, `process.disconnect` exists, but it is not this function;
         * it is `disconnect()`.
         *
         * Because long living server connections may block workers from disconnecting, it
         * may be useful to send a message, so application specific actions may be taken to
         * close them. It also may be useful to implement a timeout, killing a worker if
         * the `'disconnect'` event has not been emitted after some time.
         *
         * ```js
         * if (cluster.isPrimary) {
         *   const worker = cluster.fork();
         *   let timeout;
         *
         *   worker.on('listening', (address) => {
         *     worker.send('shutdown');
         *     worker.disconnect();
         *     timeout = setTimeout(() => {
         *       worker.kill();
         *     }, 2000);
         *   });
         *
         *   worker.on('disconnect', () => {
         *     clearTimeout(timeout);
         *   });
         *
         * } else if (cluster.isWorker) {
         *   const net = require('node:net');
         *   const server = net.createServer((socket) => {
         *     // Connections never end
         *   });
         *
         *   server.listen(8000);
         *
         *   process.on('message', (msg) => {
         *     if (msg === 'shutdown') {
         *       // Initiate graceful close of any connections to server
         *     }
         *   });
         * }
         * ```
         * @since v0.7.7
         * @return A reference to `worker`.
         */
        disconnect'
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * This function returns `true` if the worker is connected to its primary via its
         * IPC channel, `false` otherwise. A worker is connected to its primary after it
         * has been created. It is disconnected after the `'disconnect'` event is emitted.
         * @since v0.11.14
         */
        isConnected'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        /**
         * This function returns `true` if the worker's process has terminated (either
         * because of exiting or being signaled). Otherwise, it returns `false`.
         *
         * ```js
         * import cluster from 'node:cluster';
         * import http from 'node:http';
         * import { availableParallelism } from 'node:os';
         * import process from 'node:process';
         *
         * const numCPUs = availableParallelism();
         *
         * if (cluster.isPrimary) {
         *   console.log(`Primary ${process.pid} is running`);
         *
         *   // Fork workers.
         *   for (let i = 0; i < numCPUs; i++) {
         *     cluster.fork();
         *   }
         *
         *   cluster.on('fork', (worker) => {
         *     console.log('worker is dead:', worker.isDead());
         *   });
         *
         *   cluster.on('exit', (worker, code, signal) => {
         *     console.log('worker is dead:', worker.isDead());
         *   });
         * } else {
         *   // Workers can share any TCP connection. In this case, it is an HTTP server.
         *   http.createServer((req, res) => {
         *     res.writeHead(200);
         *     res.end(`Current process\n ${process.pid}`);
         *     process.kill(process.pid);
         *   }).listen(8000);
         * }
         * ```
         * @since v0.11.14
         */
        isDead'
          BooleanKeyword
        PropertyDeclaration
          Identifier: '
        /**
         * This property is `true` if the worker exited due to `.disconnect()`.
         * If the worker exited any other way, it is `false`. If the
         * worker has not exited, it is `undefined`.
         *
         * The boolean `worker.exitedAfterDisconnect` allows distinguishing between
         * voluntary and accidental exit, the primary may choose not to respawn a worker
         * based on this value.
         *
         * ```js
         * cluster.on('exit', (worker, code, signal) => {
         *   if (worker.exitedAfterDisconnect === true) {
         *     console.log('Oh, it was just voluntary – no need to worry');
         *   }
         * });
         *
         * // kill worker
         * worker.kill();
         * ```
         * @since v6.0.0
         */
        exitedAfterDisconnect'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        /**
         * events.EventEmitter
         *   1. disconnect
         *   2. error
         *   3. exit
         *   4. listening
         *   5. message
         *   6. online
         */
        addListener'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'error'
                TypeReference
                  Identifier: ' Error'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'code'
                NumberKeyword
              Parameter
                Identifier: ' signal'
                StringKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'address'
                TypeReference
                  Identifier: ' Address'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                AnyKeyword
              Parameter
                Identifier: ' handle'
                UnionType
                  TypeReference
                    QualifiedName
                      Identifier: ' net'
                      Identifier: 'Socket'
                  TypeReference
                    QualifiedName
                      Identifier: ' net'
                      Identifier: 'Server'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: ' // the handle is a net.Socket or net.Server object, or undefined.
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            UnionType
              StringKeyword
              SymbolKeyword
          Parameter
            DotDotDotToken
            Identifier: 'args'
            ArrayType
              AnyKeyword
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' error'
            TypeReference
              Identifier: ' Error'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' code'
            NumberKeyword
          Parameter
            Identifier: ' signal'
            StringKeyword
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' address'
            TypeReference
              Identifier: ' Address'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            AnyKeyword
          Parameter
            Identifier: ' handle'
            UnionType
              TypeReference
                QualifiedName
                  Identifier: ' net'
                  Identifier: 'Socket'
              TypeReference
                QualifiedName
                  Identifier: ' net'
                  Identifier: 'Server'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'error'
                TypeReference
                  Identifier: ' Error'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'code'
                NumberKeyword
              Parameter
                Identifier: ' signal'
                StringKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'address'
                TypeReference
                  Identifier: ' Address'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                AnyKeyword
              Parameter
                Identifier: ' handle'
                UnionType
                  TypeReference
                    QualifiedName
                      Identifier: ' net'
                      Identifier: 'Socket'
                  TypeReference
                    QualifiedName
                      Identifier: ' net'
                      Identifier: 'Server'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: ' // the handle is a net.Socket or net.Server object, or undefined.
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'error'
                TypeReference
                  Identifier: ' Error'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'code'
                NumberKeyword
              Parameter
                Identifier: ' signal'
                StringKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'address'
                TypeReference
                  Identifier: ' Address'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                AnyKeyword
              Parameter
                Identifier: ' handle'
                UnionType
                  TypeReference
                    QualifiedName
                      Identifier: ' net'
                      Identifier: 'Socket'
                  TypeReference
                    QualifiedName
                      Identifier: ' net'
                      Identifier: 'Server'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: ' // the handle is a net.Socket or net.Server object, or undefined.
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'error'
                TypeReference
                  Identifier: ' Error'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'code'
                NumberKeyword
              Parameter
                Identifier: ' signal'
                StringKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'address'
                TypeReference
                  Identifier: ' Address'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                AnyKeyword
              Parameter
                Identifier: ' handle'
                UnionType
                  TypeReference
                    QualifiedName
                      Identifier: ' net'
                      Identifier: 'Socket'
                  TypeReference
                    QualifiedName
                      Identifier: ' net'
                      Identifier: 'Server'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: ' // the handle is a net.Socket or net.Server object, or undefined.
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'error'
                TypeReference
                  Identifier: ' Error'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'code'
                NumberKeyword
              Parameter
                Identifier: ' signal'
                StringKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'address'
                TypeReference
                  Identifier: ' Address'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                AnyKeyword
              Parameter
                Identifier: ' handle'
                UnionType
                  TypeReference
                    QualifiedName
                      Identifier: ' net'
                      Identifier: 'Socket'
                  TypeReference
                    QualifiedName
                      Identifier: ' net'
                      Identifier: 'Server'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: ' // the handle is a net.Socket or net.Server object, or undefined.
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
      InterfaceDeclaration
        ExportKeyword
        Identifier: ' Cluster'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' EventEmitter'
        MethodSignature
          Identifier: '
        disconnect'
          Parameter
            Identifier: 'callback'
            QuestionToken
            FunctionType
              VoidKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        /**
         * Spawn a new worker process.
         *
         * This can only be called from the primary process.
         * @param env Key/value pairs to add to worker process environment.
         * @since v0.6.0
         */
        fork'
          Parameter
            Identifier: 'env'
            QuestionToken
            AnyKeyword
          TypeReference
            Identifier: ' Worker'
        PropertySignature
          ReadonlyKeyword
          Identifier: ' isMaster'
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' isPrimary'
          BooleanKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' isWorker'
          BooleanKeyword
        PropertySignature
          Identifier: '
        /**
         * The scheduling policy, either `cluster.SCHED_RR` for round-robin or `cluster.SCHED_NONE` to leave it to the operating system. This is a
         * global setting and effectively frozen once either the first worker is spawned, or [`.setupPrimary()`](https://nodejs.org/docs/latest-v22.x/api/cluster.html#clustersetupprimarysettings)
         * is called, whichever comes first.
         *
         * `SCHED_RR` is the default on all operating systems except Windows. Windows will change to `SCHED_RR` once libuv is able to effectively distribute
         * IOCP handles without incurring a large performance hit.
         *
         * `cluster.schedulingPolicy` can also be set through the `NODE_CLUSTER_SCHED_POLICY` environment variable. Valid values are `'rr'` and `'none'`.
         * @since v0.11.2
         */
        schedulingPolicy'
          NumberKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' settings'
          TypeReference
            Identifier: ' ClusterSettings'
        MethodSignature
          Identifier: '
        /** @deprecated since v16.0.0 - use [`.setupPrimary()`](https://nodejs.org/docs/latest-v22.x/api/cluster.html#clustersetupprimarysettings) instead. */
        setupMaster'
          Parameter
            Identifier: 'settings'
            QuestionToken
            TypeReference
              Identifier: ' ClusterSettings'
          VoidKeyword
        MethodSignature
          Identifier: '
        /**
         * `setupPrimary` is used to change the default 'fork' behavior. Once called, the settings will be present in `cluster.settings`.
         *
         * Any settings changes only affect future calls to [`.fork()`](https://nodejs.org/docs/latest-v22.x/api/cluster.html#clusterforkenv)
         * and have no effect on workers that are already running.
         *
         * The only attribute of a worker that cannot be set via `.setupPrimary()` is the `env` passed to
         * [`.fork()`](https://nodejs.org/docs/latest-v22.x/api/cluster.html#clusterforkenv).
         *
         * The defaults above apply to the first call only; the defaults for later calls are the current values at the time of
         * `cluster.setupPrimary()` is called.
         *
         * ```js
         * import cluster from 'node:cluster';
         *
         * cluster.setupPrimary({
         *   exec: 'worker.js',
         *   args: ['--use', 'https'],
         *   silent: true,
         * });
         * cluster.fork(); // https worker
         * cluster.setupPrimary({
         *   exec: 'worker.js',
         *   args: ['--use', 'http'],
         * });
         * cluster.fork(); // http worker
         * ```
         *
         * This can only be called from the primary process.
         * @since v16.0.0
         */
        setupPrimary'
          Parameter
            Identifier: 'settings'
            QuestionToken
            TypeReference
              Identifier: ' ClusterSettings'
          VoidKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' worker'
          QuestionToken
          UnionType
            TypeReference
              Identifier: ' Worker'
            UndefinedKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' workers'
          QuestionToken
          UnionType
            TypeReference
              QualifiedName
                Identifier: ' NodeJS'
                Identifier: 'Dict'
              TypeReference
                Identifier: 'Worker'
            UndefinedKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' SCHED_NONE'
          NumberKeyword
        PropertySignature
          ReadonlyKeyword
          Identifier: ' SCHED_RR'
          NumberKeyword
        MethodSignature
          Identifier: '
        /**
         * events.EventEmitter
         *   1. disconnect
         *   2. exit
         *   3. fork
         *   4. listening
         *   5. message
         *   6. online
         *   7. setup
         */
        addListener'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'worker'
                TypeReference
                  Identifier: ' Worker'
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'worker'
                TypeReference
                  Identifier: ' Worker'
              Parameter
                Identifier: ' code'
                NumberKeyword
              Parameter
                Identifier: ' signal'
                StringKeyword
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'worker'
                TypeReference
                  Identifier: ' Worker'
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'worker'
                TypeReference
                  Identifier: ' Worker'
              Parameter
                Identifier: ' address'
                TypeReference
                  Identifier: ' Address'
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        addListener'
          Parameter
            Identifier: '
            event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            listener'
            FunctionType
              Parameter
                Identifier: 'worker'
                TypeReference
                  Identifier: ' Worker'
              Parameter
                Identifier: ' message'
                AnyKeyword
              Parameter
                Identifier: ' handle'
                UnionType
                  TypeReference
                    QualifiedName
                      Identifier: ' net'
                      Identifier: 'Socket'
                  TypeReference
                    QualifiedName
                      Identifier: ' net'
                      Identifier: 'Server'
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: ' // the handle is a net.Socket or net.Server object, or undefined.
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'worker'
                TypeReference
                  Identifier: ' Worker'
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'settings'
                TypeReference
                  Identifier: ' ClusterSettings'
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            UnionType
              StringKeyword
              SymbolKeyword
          Parameter
            DotDotDotToken
            Identifier: 'args'
            ArrayType
              AnyKeyword
          BooleanKeyword
        MethodSignature
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' worker'
            TypeReference
              Identifier: ' Worker'
          BooleanKeyword
        MethodSignature
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' worker'
            TypeReference
              Identifier: ' Worker'
          Parameter
            Identifier: ' code'
            NumberKeyword
          Parameter
            Identifier: ' signal'
            StringKeyword
          BooleanKeyword
        MethodSignature
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' worker'
            TypeReference
              Identifier: ' Worker'
          BooleanKeyword
        MethodSignature
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' worker'
            TypeReference
              Identifier: ' Worker'
          Parameter
            Identifier: ' address'
            TypeReference
              Identifier: ' Address'
          BooleanKeyword
        MethodSignature
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' worker'
            TypeReference
              Identifier: ' Worker'
          Parameter
            Identifier: ' message'
            AnyKeyword
          Parameter
            Identifier: ' handle'
            UnionType
              TypeReference
                QualifiedName
                  Identifier: ' net'
                  Identifier: 'Socket'
              TypeReference
                QualifiedName
                  Identifier: ' net'
                  Identifier: 'Server'
          BooleanKeyword
        MethodSignature
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' worker'
            TypeReference
              Identifier: ' Worker'
          BooleanKeyword
        MethodSignature
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' settings'
            TypeReference
              Identifier: ' ClusterSettings'
          BooleanKeyword
        MethodSignature
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'worker'
                TypeReference
                  Identifier: ' Worker'
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'worker'
                TypeReference
                  Identifier: ' Worker'
              Parameter
                Identifier: ' code'
                NumberKeyword
              Parameter
                Identifier: ' signal'
                StringKeyword
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'worker'
                TypeReference
                  Identifier: ' Worker'
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'worker'
                TypeReference
                  Identifier: ' Worker'
              Parameter
                Identifier: ' address'
                TypeReference
                  Identifier: ' Address'
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'worker'
                TypeReference
                  Identifier: ' Worker'
              Parameter
                Identifier: ' message'
                AnyKeyword
              Parameter
                Identifier: ' handle'
                UnionType
                  TypeReference
                    QualifiedName
                      Identifier: ' net'
                      Identifier: 'Socket'
                  TypeReference
                    QualifiedName
                      Identifier: ' net'
                      Identifier: 'Server'
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: ' // the handle is a net.Socket or net.Server object, or undefined.
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'worker'
                TypeReference
                  Identifier: ' Worker'
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'settings'
                TypeReference
                  Identifier: ' ClusterSettings'
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'worker'
                TypeReference
                  Identifier: ' Worker'
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'worker'
                TypeReference
                  Identifier: ' Worker'
              Parameter
                Identifier: ' code'
                NumberKeyword
              Parameter
                Identifier: ' signal'
                StringKeyword
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'worker'
                TypeReference
                  Identifier: ' Worker'
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'worker'
                TypeReference
                  Identifier: ' Worker'
              Parameter
                Identifier: ' address'
                TypeReference
                  Identifier: ' Address'
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'worker'
                TypeReference
                  Identifier: ' Worker'
              Parameter
                Identifier: ' message'
                AnyKeyword
              Parameter
                Identifier: ' handle'
                UnionType
                  TypeReference
                    QualifiedName
                      Identifier: ' net'
                      Identifier: 'Socket'
                  TypeReference
                    QualifiedName
                      Identifier: ' net'
                      Identifier: 'Server'
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: ' // the handle is a net.Socket or net.Server object, or undefined.
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'worker'
                TypeReference
                  Identifier: ' Worker'
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'settings'
                TypeReference
                  Identifier: ' ClusterSettings'
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'worker'
                TypeReference
                  Identifier: ' Worker'
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'worker'
                TypeReference
                  Identifier: ' Worker'
              Parameter
                Identifier: ' code'
                NumberKeyword
              Parameter
                Identifier: ' signal'
                StringKeyword
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'worker'
                TypeReference
                  Identifier: ' Worker'
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'worker'
                TypeReference
                  Identifier: ' Worker'
              Parameter
                Identifier: ' address'
                TypeReference
                  Identifier: ' Address'
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        // the handle is a net.Socket or net.Server object, or undefined.
        prependListener'
          Parameter
            Identifier: '
            event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            listener'
            FunctionType
              Parameter
                Identifier: 'worker'
                TypeReference
                  Identifier: ' Worker'
              Parameter
                Identifier: ' message'
                AnyKeyword
              Parameter
                Identifier: ' handle'
                QuestionToken
                UnionType
                  TypeReference
                    QualifiedName
                      Identifier: ' net'
                      Identifier: 'Socket'
                  TypeReference
                    QualifiedName
                      Identifier: ' net'
                      Identifier: 'Server'
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'worker'
                TypeReference
                  Identifier: ' Worker'
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'settings'
                TypeReference
                  Identifier: ' ClusterSettings'
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'worker'
                TypeReference
                  Identifier: ' Worker'
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'worker'
                TypeReference
                  Identifier: ' Worker'
              Parameter
                Identifier: ' code'
                NumberKeyword
              Parameter
                Identifier: ' signal'
                StringKeyword
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'worker'
                TypeReference
                  Identifier: ' Worker'
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'worker'
                TypeReference
                  Identifier: ' Worker'
              Parameter
                Identifier: ' address'
                TypeReference
                  Identifier: ' Address'
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        // the handle is a net.Socket or net.Server object, or undefined.
        prependOnceListener'
          Parameter
            Identifier: '
            event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            listener'
            FunctionType
              Parameter
                Identifier: 'worker'
                TypeReference
                  Identifier: ' Worker'
              Parameter
                Identifier: ' message'
                AnyKeyword
              Parameter
                Identifier: ' handle'
                UnionType
                  TypeReference
                    QualifiedName
                      Identifier: ' net'
                      Identifier: 'Socket'
                  TypeReference
                    QualifiedName
                      Identifier: ' net'
                      Identifier: 'Server'
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'worker'
                TypeReference
                  Identifier: ' Worker'
              VoidKeyword
          ThisType
        MethodSignature
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'settings'
                TypeReference
                  Identifier: ' ClusterSettings'
              VoidKeyword
          ThisType
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' cluster'
            TypeReference
              Identifier: ' Cluster'
      ExportAssignment
        Identifier: ' cluster'
  ModuleDeclaration
    DeclareKeyword
    StringLiteral
    ModuleBlock
      ExportDeclaration
        StringLiteral
      ExportDeclaration
        NamedExports
          ExportSpecifier
            Identifier: ' default'
            Identifier: ' default'
        StringLiteral
