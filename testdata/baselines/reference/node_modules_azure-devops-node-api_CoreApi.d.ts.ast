SourceFile
  ImportEqualsDeclaration
    Identifier: ' basem'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' VsoBaseInterfaces'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' CoreInterfaces'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' OperationsInterfaces'
    ExternalModuleReference
      StringLiteral
  ImportEqualsDeclaration
    Identifier: ' VSSInterfaces'
    ExternalModuleReference
      StringLiteral
  InterfaceDeclaration
    ExportKeyword
    Identifier: ' ICoreApi'
    HeritageClause
      ExpressionWithTypeArguments
        PropertyAccessExpression
          Identifier: ' basem'
          Identifier: 'ClientApiBase'
    MethodSignature
      Identifier: '
    removeProjectAvatar'
      Parameter
        Identifier: 'projectId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    setProjectAvatar'
      Parameter
        Identifier: 'avatarBlob'
        TypeReference
          QualifiedName
            Identifier: ' CoreInterfaces'
            Identifier: 'ProjectAvatar'
      Parameter
        Identifier: ' projectId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getProjectTeamsByCategory'
      Parameter
        Identifier: 'projectId'
        StringKeyword
      Parameter
        Identifier: ' expandIdentity'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' skip'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'CoreInterfaces'
            Identifier: 'CategorizedWebApiTeams'
    MethodSignature
      Identifier: '
    createConnectedService'
      Parameter
        Identifier: 'connectedServiceCreationData'
        TypeReference
          QualifiedName
            Identifier: ' CoreInterfaces'
            Identifier: 'WebApiConnectedServiceDetails'
      Parameter
        Identifier: ' projectId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'CoreInterfaces'
            Identifier: 'WebApiConnectedService'
    MethodSignature
      Identifier: '
    getConnectedServiceDetails'
      Parameter
        Identifier: 'projectId'
        StringKeyword
      Parameter
        Identifier: ' name'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'CoreInterfaces'
            Identifier: 'WebApiConnectedServiceDetails'
    MethodSignature
      Identifier: '
    getConnectedServices'
      Parameter
        Identifier: 'projectId'
        StringKeyword
      Parameter
        Identifier: ' kind'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' CoreInterfaces'
            Identifier: 'ConnectedServiceKind'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'CoreInterfaces'
              Identifier: 'WebApiConnectedService'
    MethodSignature
      Identifier: '
    createIdentityMru'
      Parameter
        Identifier: 'mruData'
        TypeReference
          QualifiedName
            Identifier: ' CoreInterfaces'
            Identifier: 'IdentityData'
      Parameter
        Identifier: ' mruName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    deleteIdentityMru'
      Parameter
        Identifier: 'mruData'
        TypeReference
          QualifiedName
            Identifier: ' CoreInterfaces'
            Identifier: 'IdentityData'
      Parameter
        Identifier: ' mruName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getIdentityMru'
      Parameter
        Identifier: 'mruName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'VSSInterfaces'
              Identifier: 'IdentityRef'
    MethodSignature
      Identifier: '
    updateIdentityMru'
      Parameter
        Identifier: 'mruData'
        TypeReference
          QualifiedName
            Identifier: ' CoreInterfaces'
            Identifier: 'IdentityData'
      Parameter
        Identifier: ' mruName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getTeamMembersWithExtendedProperties'
      Parameter
        Identifier: 'projectId'
        StringKeyword
      Parameter
        Identifier: ' teamId'
        StringKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' skip'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'VSSInterfaces'
              Identifier: 'TeamMember'
    MethodSignature
      Identifier: '
    getProcessById'
      Parameter
        Identifier: 'processId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'CoreInterfaces'
            Identifier: 'Process'
    MethodSignature
      Identifier: '
    getProcesses'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'CoreInterfaces'
              Identifier: 'Process'
    MethodSignature
      Identifier: '
    getProjectCollection'
      Parameter
        Identifier: 'collectionId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'CoreInterfaces'
            Identifier: 'TeamProjectCollection'
    MethodSignature
      Identifier: '
    getProjectCollections'
      Parameter
        Identifier: 'top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' skip'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'CoreInterfaces'
              Identifier: 'TeamProjectCollectionReference'
    MethodSignature
      Identifier: '
    getProjectHistoryEntries'
      Parameter
        Identifier: 'minRevision'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'CoreInterfaces'
              Identifier: 'ProjectInfo'
    MethodSignature
      Identifier: '
    getProject'
      Parameter
        Identifier: 'projectId'
        StringKeyword
      Parameter
        Identifier: ' includeCapabilities'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' includeHistory'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'CoreInterfaces'
            Identifier: 'TeamProject'
    MethodSignature
      Identifier: '
    getProjects'
      Parameter
        Identifier: 'stateFilter'
        QuestionToken
        AnyKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' skip'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' getDefaultTeamImageUrl'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'CoreInterfaces'
              Identifier: 'TeamProjectReference'
    MethodSignature
      Identifier: '
    queueCreateProject'
      Parameter
        Identifier: 'projectToCreate'
        TypeReference
          QualifiedName
            Identifier: ' CoreInterfaces'
            Identifier: 'TeamProject'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'OperationsInterfaces'
            Identifier: 'OperationReference'
    MethodSignature
      Identifier: '
    queueDeleteProject'
      Parameter
        Identifier: 'projectId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'OperationsInterfaces'
            Identifier: 'OperationReference'
    MethodSignature
      Identifier: '
    updateProject'
      Parameter
        Identifier: 'projectUpdate'
        TypeReference
          QualifiedName
            Identifier: ' CoreInterfaces'
            Identifier: 'TeamProject'
      Parameter
        Identifier: ' projectId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'OperationsInterfaces'
            Identifier: 'OperationReference'
    MethodSignature
      Identifier: '
    getProjectsProperties'
      Parameter
        Identifier: 'projectIds'
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' properties'
        QuestionToken
        ArrayType
          StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'CoreInterfaces'
              Identifier: 'ProjectProperties'
    MethodSignature
      Identifier: '
    getProjectProperties'
      Parameter
        Identifier: 'projectId'
        StringKeyword
      Parameter
        Identifier: ' keys'
        QuestionToken
        ArrayType
          StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'CoreInterfaces'
              Identifier: 'ProjectProperty'
    MethodSignature
      Identifier: '
    setProjectProperties'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' projectId'
        StringKeyword
      Parameter
        Identifier: ' patchDocument'
        TypeReference
          QualifiedName
            Identifier: ' VSSInterfaces'
            Identifier: 'JsonPatchDocument'
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    createOrUpdateProxy'
      Parameter
        Identifier: 'proxy'
        TypeReference
          QualifiedName
            Identifier: ' CoreInterfaces'
            Identifier: 'Proxy'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'CoreInterfaces'
            Identifier: 'Proxy'
    MethodSignature
      Identifier: '
    deleteProxy'
      Parameter
        Identifier: 'proxyUrl'
        StringKeyword
      Parameter
        Identifier: ' site'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getProxies'
      Parameter
        Identifier: 'proxyUrl'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'CoreInterfaces'
              Identifier: 'Proxy'
    MethodSignature
      Identifier: '
    getAllTeams'
      Parameter
        Identifier: 'mine'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' skip'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' expandIdentity'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'CoreInterfaces'
              Identifier: 'WebApiTeam'
    MethodSignature
      Identifier: '
    createTeam'
      Parameter
        Identifier: 'team'
        TypeReference
          QualifiedName
            Identifier: ' CoreInterfaces'
            Identifier: 'WebApiTeam'
      Parameter
        Identifier: ' projectId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'CoreInterfaces'
            Identifier: 'WebApiTeam'
    MethodSignature
      Identifier: '
    deleteTeam'
      Parameter
        Identifier: 'projectId'
        StringKeyword
      Parameter
        Identifier: ' teamId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodSignature
      Identifier: '
    getTeam'
      Parameter
        Identifier: 'projectId'
        StringKeyword
      Parameter
        Identifier: ' teamId'
        StringKeyword
      Parameter
        Identifier: ' expandIdentity'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'CoreInterfaces'
            Identifier: 'WebApiTeam'
    MethodSignature
      Identifier: '
    getTeams'
      Parameter
        Identifier: 'projectId'
        StringKeyword
      Parameter
        Identifier: ' mine'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' skip'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' expandIdentity'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'CoreInterfaces'
              Identifier: 'WebApiTeam'
    MethodSignature
      Identifier: '
    updateTeam'
      Parameter
        Identifier: 'teamData'
        TypeReference
          QualifiedName
            Identifier: ' CoreInterfaces'
            Identifier: 'WebApiTeam'
      Parameter
        Identifier: ' projectId'
        StringKeyword
      Parameter
        Identifier: ' teamId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'CoreInterfaces'
            Identifier: 'WebApiTeam'
  ClassDeclaration
    ExportKeyword
    DeclareKeyword
    Identifier: ' CoreApi'
    HeritageClause
      ExpressionWithTypeArguments
        PropertyAccessExpression
          Identifier: ' basem'
          Identifier: 'ClientApiBase'
    HeritageClause
      ExpressionWithTypeArguments
        Identifier: ' ICoreApi'
    Constructor
      Parameter
        Identifier: 'baseUrl'
        StringKeyword
      Parameter
        Identifier: ' handlers'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: ' VsoBaseInterfaces'
              Identifier: 'IRequestHandler'
      Parameter
        Identifier: ' options'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' VsoBaseInterfaces'
            Identifier: 'IRequestOptions'
    PropertyDeclaration
      StaticKeyword
      ReadonlyKeyword
      Identifier: ' RESOURCE_AREA_ID'
      StringLiteral
    MethodDeclaration
      Identifier: '
    /**
     * Removes the avatar for the project.
     *
     * @param {string} projectId - The ID or name of the project.
     */
    removeProjectAvatar'
      Parameter
        Identifier: 'projectId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Sets the avatar for the project.
     *
     * @param {CoreInterfaces.ProjectAvatar} avatarBlob - The avatar blob data object to upload.
     * @param {string} projectId - The ID or name of the project.
     */
    setProjectAvatar'
      Parameter
        Identifier: 'avatarBlob'
        TypeReference
          QualifiedName
            Identifier: ' CoreInterfaces'
            Identifier: 'ProjectAvatar'
      Parameter
        Identifier: ' projectId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Gets list of user readable teams in a project and teams user is member of (excluded from readable list).
     *
     * @param {string} projectId - The name or ID (GUID) of the team project containing the teams to retrieve.
     * @param {boolean} expandIdentity - A value indicating whether or not to expand Identity information in the result WebApiTeam object.
     * @param {number} top - Maximum number of teams to return.
     * @param {number} skip - Number of teams to skip.
     */
    getProjectTeamsByCategory'
      Parameter
        Identifier: 'projectId'
        StringKeyword
      Parameter
        Identifier: ' expandIdentity'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' skip'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'CoreInterfaces'
            Identifier: 'CategorizedWebApiTeams'
    MethodDeclaration
      Identifier: '
    /**
     * @param {CoreInterfaces.WebApiConnectedServiceDetails} connectedServiceCreationData
     * @param {string} projectId
     */
    createConnectedService'
      Parameter
        Identifier: 'connectedServiceCreationData'
        TypeReference
          QualifiedName
            Identifier: ' CoreInterfaces'
            Identifier: 'WebApiConnectedServiceDetails'
      Parameter
        Identifier: ' projectId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'CoreInterfaces'
            Identifier: 'WebApiConnectedService'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} projectId
     * @param {string} name
     */
    getConnectedServiceDetails'
      Parameter
        Identifier: 'projectId'
        StringKeyword
      Parameter
        Identifier: ' name'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'CoreInterfaces'
            Identifier: 'WebApiConnectedServiceDetails'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} projectId
     * @param {CoreInterfaces.ConnectedServiceKind} kind
     */
    getConnectedServices'
      Parameter
        Identifier: 'projectId'
        StringKeyword
      Parameter
        Identifier: ' kind'
        QuestionToken
        TypeReference
          QualifiedName
            Identifier: ' CoreInterfaces'
            Identifier: 'ConnectedServiceKind'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'CoreInterfaces'
              Identifier: 'WebApiConnectedService'
    MethodDeclaration
      Identifier: '
    /**
     * @param {CoreInterfaces.IdentityData} mruData
     * @param {string} mruName
     */
    createIdentityMru'
      Parameter
        Identifier: 'mruData'
        TypeReference
          QualifiedName
            Identifier: ' CoreInterfaces'
            Identifier: 'IdentityData'
      Parameter
        Identifier: ' mruName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {CoreInterfaces.IdentityData} mruData
     * @param {string} mruName
     */
    deleteIdentityMru'
      Parameter
        Identifier: 'mruData'
        TypeReference
          QualifiedName
            Identifier: ' CoreInterfaces'
            Identifier: 'IdentityData'
      Parameter
        Identifier: ' mruName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} mruName
     */
    getIdentityMru'
      Parameter
        Identifier: 'mruName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'VSSInterfaces'
              Identifier: 'IdentityRef'
    MethodDeclaration
      Identifier: '
    /**
     * @param {CoreInterfaces.IdentityData} mruData
     * @param {string} mruName
     */
    updateIdentityMru'
      Parameter
        Identifier: 'mruData'
        TypeReference
          QualifiedName
            Identifier: ' CoreInterfaces'
            Identifier: 'IdentityData'
      Parameter
        Identifier: ' mruName'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Get a list of members for a specific team.
     *
     * @param {string} projectId - The name or ID (GUID) of the team project the team belongs to.
     * @param {string} teamId - The name or ID (GUID) of the team .
     * @param {number} top
     * @param {number} skip
     */
    getTeamMembersWithExtendedProperties'
      Parameter
        Identifier: 'projectId'
        StringKeyword
      Parameter
        Identifier: ' teamId'
        StringKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' skip'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'VSSInterfaces'
              Identifier: 'TeamMember'
    MethodDeclaration
      Identifier: '
    /**
     * Get a process by ID.
     *
     * @param {string} processId - ID for a process.
     */
    getProcessById'
      Parameter
        Identifier: 'processId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'CoreInterfaces'
            Identifier: 'Process'
    MethodDeclaration
      Identifier: '
    /**
     * Get a list of processes.
     *
     */
    getProcesses'
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'CoreInterfaces'
              Identifier: 'Process'
    MethodDeclaration
      Identifier: '
    /**
     * Get project collection with the specified id or name.
     *
     * @param {string} collectionId
     */
    getProjectCollection'
      Parameter
        Identifier: 'collectionId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'CoreInterfaces'
            Identifier: 'TeamProjectCollection'
    MethodDeclaration
      Identifier: '
    /**
     * Get project collection references for this application.
     *
     * @param {number} top
     * @param {number} skip
     */
    getProjectCollections'
      Parameter
        Identifier: 'top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' skip'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'CoreInterfaces'
              Identifier: 'TeamProjectCollectionReference'
    MethodDeclaration
      Identifier: '
    /**
     * Gets the history of changes to the project.
     *
     * @param {number} minRevision - The minimum revision number to return in the history.
     */
    getProjectHistoryEntries'
      Parameter
        Identifier: 'minRevision'
        QuestionToken
        NumberKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'CoreInterfaces'
              Identifier: 'ProjectInfo'
    MethodDeclaration
      Identifier: '
    /**
     * Get project with the specified id or name, optionally including capabilities.
     *
     * @param {string} projectId
     * @param {boolean} includeCapabilities - Include capabilities (such as source control) in the team project result (default: false).
     * @param {boolean} includeHistory - Search within renamed projects (that had such name in the past).
     */
    getProject'
      Parameter
        Identifier: 'projectId'
        StringKeyword
      Parameter
        Identifier: ' includeCapabilities'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' includeHistory'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'CoreInterfaces'
            Identifier: 'TeamProject'
    MethodDeclaration
      Identifier: '
    /**
     * Get all projects in the organization that the authenticated user has access to.
     *
     * @param {any} stateFilter - Filter on team projects in a specific team project state (default: WellFormed).
     * @param {number} top
     * @param {number} skip
     * @param {number} continuationToken - Pointer that shows how many projects already been fetched.
     * @param {boolean} getDefaultTeamImageUrl
     */
    getProjects'
      Parameter
        Identifier: 'stateFilter'
        QuestionToken
        AnyKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' skip'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' continuationToken'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' getDefaultTeamImageUrl'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'VSSInterfaces'
            Identifier: 'PagedList'
          TypeReference
            QualifiedName
              Identifier: 'CoreInterfaces'
              Identifier: 'TeamProjectReference'
    MethodDeclaration
      Identifier: '
    /**
     * Queues a project to be created. Use the [GetOperation](../../operations/operations/get) to periodically check for create project status.
     *
     * @param {CoreInterfaces.TeamProject} projectToCreate - The project to create.
     */
    queueCreateProject'
      Parameter
        Identifier: 'projectToCreate'
        TypeReference
          QualifiedName
            Identifier: ' CoreInterfaces'
            Identifier: 'TeamProject'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'OperationsInterfaces'
            Identifier: 'OperationReference'
    MethodDeclaration
      Identifier: '
    /**
     * Queues a project to be deleted. Use the [GetOperation](../../operations/operations/get) to periodically check for delete project status.
     *
     * @param {string} projectId - The project id of the project to delete.
     */
    queueDeleteProject'
      Parameter
        Identifier: 'projectId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'OperationsInterfaces'
            Identifier: 'OperationReference'
    MethodDeclaration
      Identifier: '
    /**
     * Update an existing project's name, abbreviation, description, or restore a project.
     *
     * @param {CoreInterfaces.TeamProject} projectUpdate - The updates for the project. The state must be set to wellFormed to restore the project.
     * @param {string} projectId - The project id of the project to update.
     */
    updateProject'
      Parameter
        Identifier: 'projectUpdate'
        TypeReference
          QualifiedName
            Identifier: ' CoreInterfaces'
            Identifier: 'TeamProject'
      Parameter
        Identifier: ' projectId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'OperationsInterfaces'
            Identifier: 'OperationReference'
    MethodDeclaration
      Identifier: '
    /**
     * Get a collection of team project properties for multiple projects.
     *
     * @param {string[]} projectIds - A comma-delimited string of team project IDs
     * @param {string[]} properties
     */
    getProjectsProperties'
      Parameter
        Identifier: 'projectIds'
        ArrayType
          StringKeyword
      Parameter
        Identifier: ' properties'
        QuestionToken
        ArrayType
          StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'CoreInterfaces'
              Identifier: 'ProjectProperties'
    MethodDeclaration
      Identifier: '
    /**
     * Get a collection of team project properties.
     *
     * @param {string} projectId - The team project ID.
     * @param {string[]} keys - A comma-delimited string of team project property names. Wildcard characters ("?" and "*") are supported. If no key is specified, all properties will be returned.
     */
    getProjectProperties'
      Parameter
        Identifier: 'projectId'
        StringKeyword
      Parameter
        Identifier: ' keys'
        QuestionToken
        ArrayType
          StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'CoreInterfaces'
              Identifier: 'ProjectProperty'
    MethodDeclaration
      Identifier: '
    /**
     * Create, update, and delete team project properties.
     *
     * @param {string} projectId - The team project ID.
     * @param {VSSInterfaces.JsonPatchDocument} patchDocument - A JSON Patch document that represents an array of property operations. See RFC 6902 for more details on JSON Patch. The accepted operation verbs are Add and Remove, where Add is used for both creating and updating properties. The path consists of a forward slash and a property name.
     */
    setProjectProperties'
      Parameter
        Identifier: 'customHeaders'
        AnyKeyword
      Parameter
        Identifier: ' projectId'
        StringKeyword
      Parameter
        Identifier: ' patchDocument'
        TypeReference
          QualifiedName
            Identifier: ' VSSInterfaces'
            Identifier: 'JsonPatchDocument'
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {CoreInterfaces.Proxy} proxy
     */
    createOrUpdateProxy'
      Parameter
        Identifier: 'proxy'
        TypeReference
          QualifiedName
            Identifier: ' CoreInterfaces'
            Identifier: 'Proxy'
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'CoreInterfaces'
            Identifier: 'Proxy'
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} proxyUrl
     * @param {string} site
     */
    deleteProxy'
      Parameter
        Identifier: 'proxyUrl'
        StringKeyword
      Parameter
        Identifier: ' site'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * @param {string} proxyUrl
     */
    getProxies'
      Parameter
        Identifier: 'proxyUrl'
        QuestionToken
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'CoreInterfaces'
              Identifier: 'Proxy'
    MethodDeclaration
      Identifier: '
    /**
     * Get a list of all teams.
     *
     * @param {boolean} mine - If true, then return all teams requesting user is member. Otherwise return all teams user has read access.
     * @param {number} top - Maximum number of teams to return.
     * @param {number} skip - Number of teams to skip.
     * @param {boolean} expandIdentity - A value indicating whether or not to expand Identity information in the result WebApiTeam object.
     */
    getAllTeams'
      Parameter
        Identifier: 'mine'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' skip'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' expandIdentity'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'CoreInterfaces'
              Identifier: 'WebApiTeam'
    MethodDeclaration
      Identifier: '
    /**
     * Create a team in a team project.
     *
     * @param {CoreInterfaces.WebApiTeam} team - The team data used to create the team.
     * @param {string} projectId - The name or ID (GUID) of the team project in which to create the team.
     */
    createTeam'
      Parameter
        Identifier: 'team'
        TypeReference
          QualifiedName
            Identifier: ' CoreInterfaces'
            Identifier: 'WebApiTeam'
      Parameter
        Identifier: ' projectId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'CoreInterfaces'
            Identifier: 'WebApiTeam'
    MethodDeclaration
      Identifier: '
    /**
     * Delete a team.
     *
     * @param {string} projectId - The name or ID (GUID) of the team project containing the team to delete.
     * @param {string} teamId - The name or ID of the team to delete.
     */
    deleteTeam'
      Parameter
        Identifier: 'projectId'
        StringKeyword
      Parameter
        Identifier: ' teamId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        VoidKeyword
    MethodDeclaration
      Identifier: '
    /**
     * Get a specific team.
     *
     * @param {string} projectId - The name or ID (GUID) of the team project containing the team.
     * @param {string} teamId - The name or ID (GUID) of the team.
     * @param {boolean} expandIdentity - A value indicating whether or not to expand Identity information in the result WebApiTeam object.
     */
    getTeam'
      Parameter
        Identifier: 'projectId'
        StringKeyword
      Parameter
        Identifier: ' teamId'
        StringKeyword
      Parameter
        Identifier: ' expandIdentity'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'CoreInterfaces'
            Identifier: 'WebApiTeam'
    MethodDeclaration
      Identifier: '
    /**
     * Get a list of teams.
     *
     * @param {string} projectId
     * @param {boolean} mine - If true return all the teams requesting user is member, otherwise return all the teams user has read access.
     * @param {number} top - Maximum number of teams to return.
     * @param {number} skip - Number of teams to skip.
     * @param {boolean} expandIdentity - A value indicating whether or not to expand Identity information in the result WebApiTeam object.
     */
    getTeams'
      Parameter
        Identifier: 'projectId'
        StringKeyword
      Parameter
        Identifier: ' mine'
        QuestionToken
        BooleanKeyword
      Parameter
        Identifier: ' top'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' skip'
        QuestionToken
        NumberKeyword
      Parameter
        Identifier: ' expandIdentity'
        QuestionToken
        BooleanKeyword
      TypeReference
        Identifier: ' Promise'
        ArrayType
          TypeReference
            QualifiedName
              Identifier: 'CoreInterfaces'
              Identifier: 'WebApiTeam'
    MethodDeclaration
      Identifier: '
    /**
     * Update a team's name and/or description.
     *
     * @param {CoreInterfaces.WebApiTeam} teamData
     * @param {string} projectId - The name or ID (GUID) of the team project containing the team to update.
     * @param {string} teamId - The name of ID of the team to update.
     */
    updateTeam'
      Parameter
        Identifier: 'teamData'
        TypeReference
          QualifiedName
            Identifier: ' CoreInterfaces'
            Identifier: 'WebApiTeam'
      Parameter
        Identifier: ' projectId'
        StringKeyword
      Parameter
        Identifier: ' teamId'
        StringKeyword
      TypeReference
        Identifier: ' Promise'
        TypeReference
          QualifiedName
            Identifier: 'CoreInterfaces'
            Identifier: 'WebApiTeam'
