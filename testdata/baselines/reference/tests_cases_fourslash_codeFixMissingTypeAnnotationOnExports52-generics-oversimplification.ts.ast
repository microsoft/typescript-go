SourceFile
  ExpressionStatement
    CallExpression
      PropertyAccessExpression
        Identifier: '/// <reference path='fourslash.ts'/>

// In the abstract, we might prefer the inferred return type annotation to
// be identical to the parameter type (with 2 type parameters).
// Our current heuristic to avoid overly complex types in this case creates
// "overly simple" types, but this tradeoff seems reasonable.

// @isolatedDeclarations: true
// @declaration: true
////export interface Foo<T, U = T[]> {}
////export function foo(x: Foo<string, string[]>) {
////    return x;
////}

verify'
        Identifier: 'codeFix'
      ObjectLiteralExpression
        PropertyAssignment
          Identifier: '
    description'
          StringLiteral
        PropertyAssignment
          Identifier: '
    index'
          NumericLiteral
        PropertyAssignment
          Identifier: '
    newFileContent'
          NoSubstitutionTemplateLiteral
